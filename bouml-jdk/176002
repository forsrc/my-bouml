format 222
"xpath" // jdk1.8::javax::xml::xpath
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/xpath/"
  java_package "javax.xml.xpath"
  classview 169346 "xpath"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 781826 "XPathExpression"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p><code>XPathExpression</code> provides access to compiled XPath expressions.</p>

<a name=\"XPathExpression-evaluation\"/>
<table border=\"1\" cellpadding=\"2\">
  <thead>
    <tr>
      <th colspan=\"2\">Evaluation of XPath Expressions.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>context</td>
      <td>
        If a request is made to evaluate the expression in the absence
of a context item, an empty document node will be used for the context.
For the purposes of evaluating XPath expressions, a DocumentFragment
is treated like a Document node.
     </td>
   </tr>
   <tr>
     <td>variables</td>
     <td>
       If the expression contains a variable reference, its value will be found through the {@link XPathVariableResolver}.
       An {@link XPathExpressionException} is raised if the variable resolver is undefined or
       the resolver returns <code>null</code> for the variable.
       The value of a variable must be immutable through the course of any single evaluation.</p>
     </td>
   </tr>
   <tr>
     <td>functions</td>
     <td>
       If the expression contains a function reference, the function will be found through the {@link XPathFunctionResolver}.
       An {@link XPathExpressionException} is raised if the function resolver is undefined or
       the function resolver returns <code>null</code> for the function.</p>
     </td>
   </tr>
   <tr>
     <td>QNames</td>
     <td>
       QNames in the expression are resolved against the XPath namespace context.
     </td>
   </tr>
   <tr>
     <td>result</td>
     <td>
       This result of evaluating an expression is converted to an instance of the desired return type.
       Valid return types are defined in {@link XPathConstants}.
       Conversion to the return type follows XPath conversion rules.</p>
     </td>
   </tr>
</table>

<p>An XPath expression is not thread-safe and not reentrant.
In other words, it is the application's responsibility to make
sure that one {@link XPathExpression} object is not used from
more than one thread at any given time, and while the <code>evaluate</code>
method is invoked, applications may not recursively call
the <code>evaluate</code> method.
<p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@see <a href=\"http://www.w3.org/TR/xpath#section-Expressions\">XML Path Language (XPath) Version 1.0, Expressions</a>
@since 1.5
"
      operation 5907714 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "item" type class_ref 129538 // Object
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the specified context and return the result as the specified type.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>returnType</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param item The starting context (a node, for example).
@param returnType The desired return type.

@return The <code>Object</code> that is the result of evaluating the expression and converting the result to
  <code>returnType</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If  <code>returnType</code> is <code>null</code>.
"
      end

      operation 5907842 "evaluate"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "item" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the specified context and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(Object item, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.

@param item The starting context (a node, for example).

@return The <code>String</code> that is the result of evaluating the expression and converting the result to a
  <code>String</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
"
      end

      operation 5907970 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "source" type class_ref 606594 // InputSource
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the context of the specified <code>InputSource</code> and return the result as the
specified type.</p>

<p>This method builds a data model for the {@link InputSource} and calls
{@link #evaluate(Object item, QName returnType)} on the resulting document object.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If <code>source</code> or <code>returnType</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param source The <code>InputSource</code> of the document to evaluate over.
@param returnType The desired return type.

@return The <code>Object</code> that is the result of evaluating the expression and converting the result to
  <code>returnType</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If  <code>source</code> or <code>returnType</code> is <code>null</code>.
"
      end

      operation 5908098 "evaluate"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "source" type class_ref 606594 // InputSource
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the context of the specified <code>InputSource</code> and return the result as a
<code>String</code>.</p>

<p>This method calls {@link #evaluate(InputSource source, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPathExpression-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>source</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param source The <code>InputSource</code> of the document to evaluate over.

@return The <code>String</code> that is the result of evaluating the expression and converting the result to a
  <code>String</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws NullPointerException If  <code>source</code> is <code>null</code>.
"
      end
    end

    class 820226 "XPathFunctionResolver"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p><code>XPathFunctionResolver</code> provides access to the set of user defined <code>XPathFunction</code>s.</p>

<p>XPath functions are resolved by name and arity.
The resolver is not needed for XPath built-in functions and the resolver
<strong><em>cannot</em></strong> be used to override those functions.</p>

<p>In particular, the resolver is only called for functions in an another
namespace (functions with an explicit prefix). This means that you cannot
use the <code>XPathFunctionResolver</code> to implement specifications
like <a href=\"http://www.w3.org/TR/xmldsig-core/\">XML-Signature Syntax
and Processing</a> which extend the function library of XPath 1.0 in the
same namespace. This is a consequence of the design of the resolver.</p>

<p>If you wish to implement additional built-in functions, you will have to
extend the underlying implementation directly.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@see <a href=\"http://www.w3.org/TR/xpath#corelib\">XML Path Language (XPath) Version 1.0, Core Function Library</a>
@since 1.5
"
      operation 12169218 "resolveFunction"
	public return_type class_ref 1441538 // XPathFunction
	nparams 2
	  param inout name "functionName" type class_ref 673666 // QName
	  param in name "arity" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Find a function in the set of available functions.</p>

<p>If <code>functionName</code> or <code>arity</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param functionName The function name.
@param arity The number of arguments that the returned function must accept.

@return The function or <code>null</code> if no function named <code>functionName</code> with <code>arity</code> arguments exists.

@throws NullPointerException If <code>functionName</code> or <code>arity</code> is <code>null</code>.
"
      end
    end

    class 820610 "XPathVariableResolver"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p><code>XPathVariableResolver</code> provides access to the set of user defined XPath variables.</p>

<p>The <code>XPathVariableResolver</code> and the XPath evaluator must adhere to a contract that
cannot be directly enforced by the API.  Although variables may be mutable,
that is, an application may wish to evaluate the same XPath expression more
than once with different variable values, in the course of evaluating any
single XPath expression, a variable's value <strong><em>must</em></strong>
not change.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@since 1.5
"
      operation 12169346 "resolveVariable"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "variableName" type class_ref 673666 // QName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Find a variable in the set of available variables.</p>

<p>If <code>variableName</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param variableName The <code>QName</code> of the variable name.

@return The variables value, or <code>null</code> if no variable named <code>variableName</code>
  exists.  The value returned must be of a type appropriate for the underlying object model.

@throws NullPointerException If <code>variableName</code> is <code>null</code>.
"
      end
    end

    class 820866 "XPathExpressionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>XPathExpressionException</code> represents an error in an XPath expression.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@since 1.5
"
      classrelation 4817410 // <generalisation>
	relation 4817410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4817410 // <generalisation>
	  b parent class_ref 1441282 // XPathException
      end

      attribute 2627714 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Stream Unique Identifier.</p>

"
      end

      operation 12166658 "XPathExpressionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathExpressionException</code>
with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message.

@throws NullPointerException When <code>message</code> is
  <code>null</code>.
"
      end

      operation 12166786 "XPathExpressionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathExpressionException</code>
with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>.
"
      end
    end

    class 821122 "XPathFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An <code>XPathFactory</code> instance can be used to create
{@link javax.xml.xpath.XPath} objects.</p>

<p>See {@link #newInstance(String uri)} for lookup mechanism.</p>

<p>The {@link XPathFactory} class is not thread-safe. In other words,
it is the application's responsibility to ensure that at most
one thread is using a {@link XPathFactory} object at any
given moment. Implementations are encouraged to mark methods
as <code>synchronized</code> to protect themselves from broken clients.

<p>{@link XPathFactory} is not re-entrant. While one of the
<code>newInstance</code> methods is being invoked, applications
may not attempt to recursively invoke a <code>newInstance</code> method,
even from the same thread.

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>

@since 1.5
"
      classrelation 2613122 // DEFAULT_PROPERTY_NAME (<unidirectional association>)
	relation 2613122 --->
	  a role_name "DEFAULT_PROPERTY_NAME" init_value " \"javax.xml.xpath.XPathFactory\"" class_relation const_relation public
	    comment "
<p>The default property name according to the JAXP spec.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2613122 // DEFAULT_PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2613250 // DEFAULT_OBJECT_MODEL_URI (<unidirectional association>)
	relation 2613250 --->
	  a role_name "DEFAULT_OBJECT_MODEL_URI" init_value " \"http://java.sun.com/jaxp/xpath/dom\"" class_relation const_relation public
	    comment "
<p>Default Object Model URI.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2613250 // DEFAULT_OBJECT_MODEL_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2613378 // ss (<unidirectional association>)
	relation 2613378 --->
	  a role_name "ss" init_value " new SecuritySupport() " class_relation private
	    comment "
<p> Take care of restrictions imposed by java security model </p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2613378 // ss (<unidirectional association>)
	  b parent class_ref 821250 // SecuritySupport
      end

      operation 5909762 "XPathFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor as {@link #newInstance()} or {@link #newInstance(String uri)}
or {@link #newInstance(String uri, String factoryClassName, ClassLoader classLoader)}
should be used to create a new instance of an <code>XPathFactory</code>.</p>
"
      end

      operation 5909890 "newInstance"
	class_operation public return_type class_ref 821122 // XPathFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get a new <code>XPathFactory</code> instance using the default object model,
{@link #DEFAULT_OBJECT_MODEL_URI},
the W3C DOM.</p>

<p>This method is functionally equivalent to:</p>
<pre>
  newInstance(DEFAULT_OBJECT_MODEL_URI)
</pre>

<p>Since the implementation for the W3C DOM is always available, this method will never fail.</p>

@return Instance of an <code>XPathFactory</code>.

@throws RuntimeException When there is a failure in creating an
  <code>XPathFactory</code> for the default object model.
"
      end

      operation 5910018 "newInstance"
	class_operation public return_type class_ref 821122 // XPathFactory
	nparams 1
	  param in name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get a new <code>XPathFactory</code> instance using the specified object model.</p>

<p>To find a <code>XPathFactory</code> object,
this method looks the following places in the following order where \"the class loader\" refers to the context class loader:</p>
<ol>
  <li>
    If the system property {@link #DEFAULT_PROPERTY_NAME} + \":uri\" is present,
    where uri is the parameter to this method, then its value is read as a class name.
    The method will try to create a new instance of this class by using the class loader,
    and returns it if it is successfully created.
  </li>
  <li>
    ${java.home}/lib/jaxp.properties is read and the value associated with the key being the system property above is looked for.
    If present, the value is processed just like above.
  </li>
  <li>
    Use the service-provider loading facilities, defined by the
    {@link java.util.ServiceLoader} class, to attempt to locate and load an
    implementation of the service using the {@linkplain
    java.util.ServiceLoader#load(java.lang.Class) default loading mechanism}:
    the service-provider loading facility will use the {@linkplain
    java.lang.Thread#getContextClassLoader() current thread's context class loader}
    to attempt to load the service. If the context class
    loader is null, the {@linkplain
    ClassLoader#getSystemClassLoader() system class loader} will be used.
    <br>
    Each potential service provider is required to implement the method
    {@link #isObjectModelSupported(String objectModel)}.
    The first service provider found that supports the specified object
    model is returned.
    <br>
    In case of {@link java.util.ServiceConfigurationError} an
    {@link XPathFactoryConfigurationException} will be thrown.
  </li>
  <li>
    Platform default <code>XPathFactory</code> is located in a platform specific way.
    There must be a platform default XPathFactory for the W3C DOM, i.e. {@link #DEFAULT_OBJECT_MODEL_URI}.
  </li>
</ol>
<p>If everything fails, an <code>XPathFactoryConfigurationException</code> will be thrown.</p>

<p>Tip for Trouble-shooting:</p>
<p>See {@link java.util.Properties#load(java.io.InputStream)} for exactly how a property file is parsed.
In particular, colons ':' need to be escaped in a property file, so make sure the URIs are properly escaped in it.
For example:</p>
<pre>
  http\\://java.sun.com/jaxp/xpath/dom=org.acme.DomXPathFactory
</pre>

@param uri Identifies the underlying object model.
  The specification only defines the URI {@link #DEFAULT_OBJECT_MODEL_URI},
  <code>http://java.sun.com/jaxp/xpath/dom</code> for the W3C DOM,
  the org.w3c.dom package, and implementations are free to introduce other URIs for other object models.

@return Instance of an <code>XPathFactory</code>.

@throws XPathFactoryConfigurationException If the specified object model
     is unavailable, or if there is a configuration error.
@throws NullPointerException If <code>uri</code> is <code>null</code>.
@throws IllegalArgumentException If <code>uri</code> is <code>null</code>
  or <code>uri.length() == 0</code>.
"
      end

      operation 5910146 "newInstance"
	class_operation public return_type class_ref 821122 // XPathFactory
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "factoryClassName" type class_ref 128130 // String
	  param inout name "classLoader" type class_ref 129026 // ClassLoader
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>XPathFactory</code> from a factory class name. <code>XPathFactory</code>
is returned if specified factory class supports the specified object model.
This function is useful when there are multiple providers in the classpath.
It gives more control to the application as it can specify which provider
should be loaded.</p>


<h2>Tip for Trouble-shooting</h2>
<p>Setting the <code>jaxp.debug</code> system property will cause
this method to print a lot of debug messages
to <code>System.err</code> about what it is doing and where it is looking at.</p>

<p> If you have problems try:</p>
<pre>
java -Djaxp.debug=1 YourProgram ....
</pre>

@param uri         Identifies the underlying object model. The specification only defines the URI
                   {@link #DEFAULT_OBJECT_MODEL_URI},<code>http://java.sun.com/jaxp/xpath/dom</code>
                   for the W3C DOM, the org.w3c.dom package, and implementations are free to introduce
                   other URIs for other object models.

@param factoryClassName fully qualified factory class name that provides implementation of <code>javax.xml.xpath.XPathFactory</code>.

@param classLoader <code>ClassLoader</code> used to load the factory class. If <code>null</code>
                    current <code>Thread</code>'s context classLoader is used to load the factory class.


@return New instance of a <code>XPathFactory</code>

@throws XPathFactoryConfigurationException
                  if <code>factoryClassName</code> is <code>null</code>, or
                  the factory class cannot be loaded, instantiated
                  or the factory class does not support the object model specified
                  in the <code>uri</code> parameter.

@throws NullPointerException If <code>uri</code> is <code>null</code>.
@throws IllegalArgumentException If <code>uri</code> is <code>null</code>
         or <code>uri.length() == 0</code>.

@see #newInstance()
@see #newInstance(String uri)

@since 1.6
"
      end

      operation 5910274 "isObjectModelSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "objectModel" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Is specified object model supported by this <code>XPathFactory</code>?</p>

@param objectModel Specifies the object model which the returned <code>XPathFactory</code> will understand.

@return <code>true</code> if <code>XPathFactory</code> supports <code>objectModel</code>, else <code>false</code>.

@throws NullPointerException If <code>objectModel</code> is <code>null</code>.
@throws IllegalArgumentException If <code>objectModel.length() == 0</code>.
"
      end

      operation 5910402 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set a feature for this <code>XPathFactory</code> and
<code>XPath</code>s created by this factory.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link XPathFactoryConfigurationException} is thrown if this
<code>XPathFactory</code> or the <code>XPath</code>s
it creates cannot support the feature.
It is possible for an <code>XPathFactory</code> to expose a feature value
but be unable to change its state.
</p>

<p>
All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is <code>true</code>, any reference to  an external function is an error.
Under these conditions, the implementation must not call the {@link XPathFunctionResolver}
and must throw an {@link XPathFunctionException}.
</p>

@param name Feature name.
@param value Is feature state <code>true</code> or <code>false</code>.

@throws XPathFactoryConfigurationException if this <code>XPathFactory</code> or the <code>XPath</code>s
  it creates cannot support this feature.
@throws NullPointerException if <code>name</code> is <code>null</code>.
"
      end

      operation 5910530 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the state of the named feature.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link XPathFactoryConfigurationException} is thrown if this
<code>XPathFactory</code> or the <code>XPath</code>s
it creates cannot support the feature.
It is possible for an <code>XPathFactory</code> to expose a feature value
but be unable to change its state.
</p>

@param name Feature name.

@return State of the named feature.

@throws XPathFactoryConfigurationException if this
  <code>XPathFactory</code> or the <code>XPath</code>s
  it creates cannot support this feature.
@throws NullPointerException if <code>name</code> is <code>null</code>.
"
      end

      operation 5910658 "setXPathVariableResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820610 // XPathVariableResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a default variable resolver.</p>

<p>Any <code>XPath</code> objects constructed from this factory will use
the specified resolver by default.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code>
is <code>null</code>.</p>

@param resolver Variable resolver.

@throws NullPointerException If <code>resolver</code> is
  <code>null</code>.
"
      end

      operation 5910786 "setXPathFunctionResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820226 // XPathFunctionResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a default function resolver.</p>

<p>Any <code>XPath</code> objects constructed from this factory will
use the specified resolver by default.</p>

<p>A <code>NullPointerException</code> is thrown if
<code>resolver</code> is <code>null</code>.</p>

@param resolver XPath function resolver.

@throws NullPointerException If <code>resolver</code> is
  <code>null</code>.
"
      end

      operation 5910914 "newXPath"
	abstract public return_type class_ref 821506 // XPath
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a new <code>XPath</code> using the underlying object
model determined when the <code>XPathFactory</code> was instantiated.</p>

@return New instance of an <code>XPath</code>.
"
      end
    end

    class 821250 "SecuritySupport"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is duplicated for each JAXP subpackage so keep it in sync.
It is package private and therefore is not exposed as part of the JAXP
API.

Security related methods that only work on J2SE 1.2 and newer.
"
      operation 12164482 "getContextClassLoader"
	package return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12164610 "getSystemProperty"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "propName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12164738 "getFileInputStream"
	package return_type class_ref 580226 // FileInputStream
	nparams 1
	  param in name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 580354 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12164866 "getURLInputStream"
	package return_type class_ref 146434 // InputStream
	nparams 1
	  param in name "url" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12164994 "getResourceAsURL"
	package return_type class_ref 243458 // URL
	nparams 2
	  param in name "cl" type class_ref 129026 // ClassLoader
	  param in name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12165122 "getResources"
	package return_type class_ref 185986 // Enumeration
	nparams 2
	  param in name "cl" type class_ref 129026 // ClassLoader
	  param in name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12165250 "getResourceAsStream"
	package return_type class_ref 146434 // InputStream
	nparams 2
	  param in name "cl" type class_ref 129026 // ClassLoader
	  param in name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12165378 "doesFileExist"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 821378 "XPathFactoryConfigurationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>XPathFactoryConfigurationException</code> represents a configuration error in a <code>XPathFactory</code> environment.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@since 1.5
"
      classrelation 4817538 // <generalisation>
	relation 4817538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4817538 // <generalisation>
	  b parent class_ref 1441282 // XPathException
      end

      attribute 2627842 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Stream Unique Identifier.</p>

"
      end

      operation 12166914 "XPathFactoryConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFactoryConfigurationException</code> with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message.

@throws NullPointerException When <code>message</code> is
  <code>null</code>.
"
      end

      operation 12167042 "XPathFactoryConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFactoryConfigurationException</code>
with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>.
"
      end
    end

    class 821506 "XPath"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p><code>XPath</code> provides access to the XPath evaluation environment and expressions.</p>

<a name=\"XPath-evaluation\"/>
<table border=\"1\" cellpadding=\"2\">
  <thead>
    <tr>
      <th colspan=\"2\">Evaluation of XPath Expressions.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>context</td>
      <td>
        If a request is made to evaluate the expression in the absence
of a context item, an empty document node will be used for the context.
For the purposes of evaluating XPath expressions, a DocumentFragment
is treated like a Document node.
     </td>
   </tr>
   <tr>
     <td>variables</td>
     <td>
       If the expression contains a variable reference, its value will be found through the {@link XPathVariableResolver}
       set with {@link #setXPathVariableResolver(XPathVariableResolver resolver)}.
       An {@link XPathExpressionException} is raised if the variable resolver is undefined or
       the resolver returns <code>null</code> for the variable.
       The value of a variable must be immutable through the course of any single evaluation.</p>
     </td>
   </tr>
   <tr>
     <td>functions</td>
     <td>
       If the expression contains a function reference, the function will be found through the {@link XPathFunctionResolver}
       set with {@link #setXPathFunctionResolver(XPathFunctionResolver resolver)}.
       An {@link XPathExpressionException} is raised if the function resolver is undefined or
       the function resolver returns <code>null</code> for the function.</p>
     </td>
   </tr>
   <tr>
     <td>QNames</td>
     <td>
       QNames in the expression are resolved against the XPath namespace context
       set with {@link #setNamespaceContext(NamespaceContext nsContext)}.
     </td>
   </tr>
   <tr>
     <td>result</td>
     <td>
       This result of evaluating an expression is converted to an instance of the desired return type.
       Valid return types are defined in {@link XPathConstants}.
       Conversion to the return type follows XPath conversion rules.</p>
     </td>
   </tr>
</table>

<p>An XPath object is not thread-safe and not reentrant.
In other words, it is the application's responsibility to make
sure that one {@link XPath} object is not used from
more than one thread at any given time, and while the <code>evaluate</code>
method is invoked, applications may not recursively call
the <code>evaluate</code> method.
<p>

@author  <a href=\"Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@see <a href=\"http://www.w3.org/TR/xpath\">XML Path Language (XPath) Version 1.0</a>
@since 1.5
"
      operation 5912194 "reset"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>XPath</code> to its original configuration.</p>

<p><code>XPath</code> is reset to the same state as when it was created with
{@link XPathFactory#newXPath()}.
<code>reset()</code> is designed to allow the reuse of existing <code>XPath</code>s
thus saving resources associated with the creation of new <code>XPath</code>s.</p>

<p>The reset <code>XPath</code> is not guaranteed to have the same {@link XPathFunctionResolver}, {@link XPathVariableResolver}
or {@link NamespaceContext} <code>Object</code>s, e.g. {@link Object#equals(Object obj)}.
It is guaranteed to have a functionally equal <code>XPathFunctionResolver</code>, <code>XPathVariableResolver</code>
and <code>NamespaceContext</code>.</p>
"
      end

      operation 5912322 "setXPathVariableResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820610 // XPathVariableResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a variable resolver.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>

@param resolver Variable resolver.

 @throws NullPointerException If <code>resolver</code> is <code>null</code>.
"
      end

      operation 5912450 "getXPathVariableResolver"
	public return_type class_ref 820610 // XPathVariableResolver
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the current variable resolver.</p>

<p><code>null</code> is returned in no variable resolver is in effect.</p>

@return Current variable resolver.
"
      end

      operation 5912578 "setXPathFunctionResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820226 // XPathFunctionResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a function resolver.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>

@param resolver XPath function resolver.

@throws NullPointerException If <code>resolver</code> is <code>null</code>.
"
      end

      operation 5912706 "getXPathFunctionResolver"
	public return_type class_ref 820226 // XPathFunctionResolver
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the current function resolver.</p>

<p><code>null</code> is returned in no function resolver is in effect.</p>

@return Current function resolver.
"
      end

      operation 5912834 "setNamespaceContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nsContext" type class_ref 673794 // NamespaceContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a namespace context.</p>

<p>A <code>NullPointerException</code> is thrown if <code>nsContext</code> is <code>null</code>.</p>

@param nsContext Namespace context to use.

@throws NullPointerException If <code>nsContext</code> is <code>null</code>.
"
      end

      operation 5912962 "getNamespaceContext"
	public return_type class_ref 673794 // NamespaceContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the current namespace context.</p>

<p><code>null</code> is returned in no namespace context is in effect.</p>

@return Current Namespace context.
"
      end

      operation 5913090 "compile"
	public return_type class_ref 781826 // XPathExpression
	nparams 1
	  param inout name "expression" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compile an XPath expression for later evaluation.</p>

<p>If <code>expression</code> contains any {@link XPathFunction}s,
they must be available via the {@link XPathFunctionResolver}.
An {@link XPathExpressionException} will be thrown if the
<code>XPathFunction</code>
cannot be resovled with the <code>XPathFunctionResolver</code>.</p>

<p>If <code>expression</code> contains any variables, the
{@link XPathVariableResolver} in effect
<strong>at compile time</strong> will be used to resolve them.</p>

<p>If <code>expression</code> is <code>null</code>, a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.

@return Compiled XPath expression.

@throws XPathExpressionException If <code>expression</code> cannot be compiled.
@throws NullPointerException If <code>expression</code> is <code>null</code>.
"
      end

      operation 5913218 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "item" type class_ref 129538 // Object
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an <code>XPath</code> expression in the specified context and return the result as the specified type.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and <code>QName</code> resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants} (
{@link XPathConstants#NUMBER NUMBER},
{@link XPathConstants#STRING STRING},
{@link XPathConstants#BOOLEAN BOOLEAN},
{@link XPathConstants#NODE NODE} or
{@link XPathConstants#NODESET NODESET})
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>expression</code> or <code>returnType</code> is <code>null</code>, then a
<code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param item The starting context (a node, for example).
@param returnType The desired return type.

@return Result of evaluating an XPath expression as an <code>Object</code> of <code>returnType</code>.

@throws XPathExpressionException If <code>expression</code> cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If <code>expression</code> or <code>returnType</code> is <code>null</code>.
"
      end

      operation 5913346 "evaluate"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "item" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the specified context and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(String expression, Object item, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>expression</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param item The starting context (a node, for example).

@return The <code>String</code> that is the result of evaluating the expression and
  converting the result to a <code>String</code>.

@throws XPathExpressionException If <code>expression</code> cannot be evaluated.
@throws NullPointerException If <code>expression</code> is <code>null</code>.
"
      end

      operation 5913474 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "source" type class_ref 606594 // InputSource
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the context of the specified <code>InputSource</code>
and return the result as the specified type.</p>

<p>This method builds a data model for the {@link InputSource} and calls
{@link #evaluate(String expression, Object item, QName returnType)} on the resulting document object.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If <code>expression</code>, <code>source</code> or <code>returnType</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param source The input source of the document to evaluate over.
@param returnType The desired return type.

@return The <code>Object</code> that encapsulates the result of evaluating the expression.

@throws XPathExpressionException If expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If <code>expression</code>, <code>source</code> or <code>returnType</code>
  is <code>null</code>.
"
      end

      operation 5913602 "evaluate"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "source" type class_ref 606594 // InputSource
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the context of the specified <code>InputSource</code>
and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(String expression, InputSource source, QName returnType)} with a
<code>returnType</code> of {@link XPathConstants#STRING}.</p>

<p>See <a href=\"#XPath-evaluation\">Evaluation of XPath Expressions</a> for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>expression</code> or <code>source</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param source The <code>InputSource</code> of the document to evaluate over.

@return The <code>String</code> that is the result of evaluating the expression and
  converting the result to a <code>String</code>.

@throws XPathExpressionException If expression cannot be evaluated.
@throws NullPointerException If <code>expression</code> or <code>source</code> is <code>null</code>.
"
      end
    end

    class 1441154 "XPathConstants"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>XPath constants.</p>

@author <a href=\"mailto:Norman.Walsh@Sun.COM\">Norman Walsh</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.COM\">Jeff Suttor</a>
@see <a href=\"http://www.w3.org/TR/xpath\">XML Path Language (XPath) Version 1.0</a>
@since 1.5
"
      operation 12165506 "XPathConstants"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Private constructor to prevent instantiation.</p>
"
      end

      classrelation 4816386 // NUMBER (<unidirectional association>)
	relation 4816386 --->
	  a role_name "NUMBER" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"NUMBER\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 number data type.</p>

<p>Maps to Java {@link Double}.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4816386 // NUMBER (<unidirectional association>)
	  b parent class_ref 673666 // QName
      end

      classrelation 4816514 // STRING (<unidirectional association>)
	relation 4816514 --->
	  a role_name "STRING" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"STRING\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 string data type.</p>

<p>Maps to Java {@link String}.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4816514 // STRING (<unidirectional association>)
	  b parent class_ref 673666 // QName
      end

      classrelation 4816642 // BOOLEAN (<unidirectional association>)
	relation 4816642 --->
	  a role_name "BOOLEAN" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"BOOLEAN\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 boolean data type.</p>

<p>Maps to Java {@link Boolean}.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4816642 // BOOLEAN (<unidirectional association>)
	  b parent class_ref 673666 // QName
      end

      classrelation 4816770 // NODESET (<unidirectional association>)
	relation 4816770 --->
	  a role_name "NODESET" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"NODESET\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 NodeSet data type.</p>

<p>Maps to Java {@link org.w3c.dom.NodeList}.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4816770 // NODESET (<unidirectional association>)
	  b parent class_ref 673666 // QName
      end

      classrelation 4816898 // NODE (<unidirectional association>)
	relation 4816898 --->
	  a role_name "NODE" init_value " new QName(\"http://www.w3.org/1999/XSL/Transform\", \"NODE\")" class_relation const_relation public
	    comment "
<p>The XPath 1.0 NodeSet data type.

<p>Maps to Java {@link org.w3c.dom.Node}.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4816898 // NODE (<unidirectional association>)
	  b parent class_ref 673666 // QName
      end

      classrelation 4817026 // DOM_OBJECT_MODEL (<unidirectional association>)
	relation 4817026 --->
	  a role_name "DOM_OBJECT_MODEL" init_value " \"http://java.sun.com/jaxp/xpath/dom\"" class_relation const_relation public
	    comment "
<p>The URI for the DOM object model, \"http://java.sun.com/jaxp/xpath/dom\".</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4817026 // DOM_OBJECT_MODEL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 1441282 "XPathException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>XPathException</code> represents a generic XPath exception.</p>

@author  <a href=\"Norman.Walsh@Sun.com\">Norman Walsh</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.COM\">Jeff Suttor</a>
@since 1.5
"
      classrelation 4817154 // <generalisation>
	relation 4817154 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4817154 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      classrelation 4817282 // serialPersistentFields (<unidirectional association>)
	relation 4817282 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField( \"cause\", Throwable.class )
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4817282 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      attribute 2627586 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Stream Unique Identifier.</p>

"
      end

      operation 12165634 "XPathException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathException</code>
with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message.

@throws NullPointerException When <code>message</code> is
  <code>null</code>.
"
      end

      operation 12165762 "XPathException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathException</code>
with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>.
"
      end

      operation 12165890 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the cause of this XPathException.</p>

@return Cause of this XPathException.
"
      end

      operation 12166018 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes \"cause\" field to the stream.
The cause is got from the parent class.

@param out stream used for serialization.
@throws IOException thrown by <code>ObjectOutputStream</code>

"
      end

      operation 12166146 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the \"cause\" field from the stream.
And initializes the \"cause\" if it wasn't
done before.

@param in stream used for deserialization
@throws IOException thrown by <code>ObjectInputStream</code>
@throws ClassNotFoundException  thrown by <code>ObjectInputStream</code>
"
      end

      operation 12166274 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Print stack trace to specified <code>PrintStream</code>.</p>

@param s Print stack trace to this <code>PrintStream</code>.
"
      end

      operation 12166402 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Print stack trace to <code>System.err</code>.</p>
"
      end

      operation 12166530 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Print stack trace to specified <code>PrintWriter</code>.</p>

@param s Print stack trace to this <code>PrintWriter</code>.
"
      end
    end

    class 1441410 "XPathFactoryFinder"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implementation of {@link XPathFactory#newInstance(String)}.

@author <a href=\"Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.7 $, $Date: 2010-11-01 04:36:14 $
@since 1.5
"
      classrelation 4817666 // DEFAULT_PACKAGE (<unidirectional association>)
	relation 4817666 --->
	  a role_name "DEFAULT_PACKAGE" init_value " \"com.sun.org.apache.xpath.internal\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4817666 // DEFAULT_PACKAGE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4817794 // ss (<unidirectional association>)
	relation 4817794 --->
	  a role_name "ss" init_value " new SecuritySupport() " class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4817794 // ss (<unidirectional association>)
	  b parent class_ref 821250 // SecuritySupport
      end

      attribute 2627970 "debug"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " debug support code. 
"
      end

      extra_member 189442 "initialization"
	
	cpp "" ""
	java "  static {
        // Use try/catch block to support applets
        try {
            debug = ss.getSystemProperty(\"jaxp.debug\") != null;
        } catch (Exception unused) {
            debug = false;
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 4817922 // cacheProps (<unidirectional association>)
	relation 4817922 --->
	  a role_name "cacheProps" init_value " new Properties()" class_relation const_relation private
	    comment "
<p>Cache properties for performance.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4817922 // cacheProps (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      attribute 2628098 "firstTime"
	class_attribute volatile private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>First time requires initialization overhead.</p>

"
      end

      operation 12167170 "debugPrintln"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Conditional debug printing.</p>

@param msg to print
"
      end

      classrelation 4818050 // classLoader (<unidirectional association>)
	relation 4818050 --->
	  a role_name "classLoader" const_relation private
	    comment "
<p><code>ClassLoader</code> to use to find <code>XPathFactory</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4818050 // classLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      operation 12167298 "XPathFactoryFinder"
	public explicit_return_type ""
	nparams 1
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructor that specifies <code>ClassLoader</code> to use
to find <code>XPathFactory</code>.</p>

@param loader
     to be used to load resource and {@link XPathFactory}
     implementations during the resolution process.
     If this parameter is null, the default system class loader
     will be used.
"
      end

      operation 12167426 "debugDisplayClassLoader"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12167554 "newFactory"
	public return_type class_ref 821122 // XPathFactory
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new {@link XPathFactory} object for the specified
object model.</p>

@param uri
      Identifies the underlying object model.

@return <code>null</code> if the callee fails to create one.

@throws NullPointerException
     If the parameter is null.
"
      end

      operation 12167682 "_newFactory"
	private return_type class_ref 821122 // XPathFactory
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Lookup a {@link XPathFactory} for the given object model.</p>

@param uri identifies the object model.

@return {@link XPathFactory} for the given object model.
"
      end

      operation 12167810 "createClass"
	private return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Create class using appropriate ClassLoader.</p>

@param className Name of class to create.
@return Created class or <code>null</code>.
"
      end

      operation 12167938 "createInstance"
	package return_type class_ref 821122 // XPathFactory
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates an instance of the specified and returns it.</p>

@param className
     fully qualified class name to be instantiated.

@return null
     if it fails. Error messages will be printed by this method.
"
      end

      operation 12168066 "createInstance"
	package return_type class_ref 821122 // XPathFactory
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "useServicesMechanism" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12168194 "newInstanceNoServiceLoader"
	class_operation private return_type class_ref 821122 // XPathFactory
	nparams 1
	  param inout name "providerClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to construct using newXPathFactoryNoServiceLoader
  method if available.
"
      end

      operation 12168322 "isObjectModelSupportedBy"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "factory" type class_ref 821122 // XPathFactory
	  param in name "objectModel" type class_ref 128130 // String
	  param inout name "acc" type class_ref 129154 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Call isObjectModelSupportedBy with initial context."
      end

      operation 12168450 "findServiceProvider"
	private return_type class_ref 821122 // XPathFactory
	nparams 1
	  param in name "objectModel" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a service provider subclass of XPathFactory that supports the
given object model using the ServiceLoader.

@param objectModel URI of object model to support.
@return An XPathFactory supporting the specified object model, or null
        if none is found.
@throws XPathFactoryConfigurationException if a configuration error is found.
"
      end

      classrelation 4818178 // SERVICE_CLASS (<unidirectional association>)
	relation 4818178 --->
	  a role_name "SERVICE_CLASS" init_value " XPathFactory.class" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<XPathFactory> ${name}${value};
"
	    classrelation_ref 4818178 // SERVICE_CLASS (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 12168578 "which"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "clazz" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12168706 "which"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "classname" type class_ref 128130 // String
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Search the specified classloader for the given classname.</p>

@param classname the fully qualified name of the class to search for
@param loader the classloader to search

@return the source location of the resource, or null if it wasn't found
"
      end
    end

    class 1441538 "XPathFunction"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p><code>XPathFunction</code> provides access to XPath functions.</p>

<p>Functions are identified by QName and arity in XPath.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@since 1.5
"
      operation 12168834 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "args" type class_ref 175362 // List
	nexceptions 1
	  exception class_ref 1441666 // XPathFunctionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the function with the specified arguments.</p>

<p>To the greatest extent possible, side-effects should be avoided in the
definition of extension functions. The implementation evaluating an
XPath expression is under no obligation to call extension functions in
any particular order or any particular number of times.</p>

@param args The arguments, <code>null</code> is a valid value.

@return The result of evaluating the <code>XPath</code> function as an <code>Object</code>.

@throws XPathFunctionException If <code>args</code> cannot be evaluated with this <code>XPath</code> function.
"
      end
    end

    class 1441666 "XPathFunctionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>XPathFunctionException</code> represents an error with an XPath function.</p>

@author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>
@author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@since 1.5
"
      classrelation 4818306 // <generalisation>
	relation 4818306 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4818306 // <generalisation>
	  b parent class_ref 820866 // XPathExpressionException
      end

      attribute 2628226 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1837080260374986980L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>Stream Unique Identifier.</p>

"
      end

      operation 12168962 "XPathFunctionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFunctionException</code> with the specified detail <code>message</code>.</p>

<p>The <code>cause</code> is not initialized.</p>

<p>If <code>message</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param message The detail message.

@throws NullPointerException When <code>message</code> is
  <code>null</code>.
"
      end

      operation 12169090 "XPathFunctionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>XPathFunctionException</code> with the specified <code>cause</code>.</p>

<p>If <code>cause</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param cause The cause.

@throws NullPointerException if <code>cause</code> is <code>null</code>.
"
      end
    end
  end

  deploymentview 164226 "xpath"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 588162 "XPathExpression"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.InputSource;
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 781826 // XPathExpression
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 588418 "XPathFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 821122 // XPathFactory
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 588674 "XPath"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.InputSource;
import javax.xml.namespace.QName;
import javax.xml.namespace.NamespaceContext;
${definition}"
      associated_elems
	class_ref 821506 // XPath
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1032450 "SecuritySupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.security.*;
import java.net.*;
import java.io.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 821250 // SecuritySupport
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1032578 "XPathConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 1441154 // XPathConstants
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1032706 "XPathException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.InvalidClassException;
${definition}"
      associated_elems
	class_ref 1441282 // XPathException
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1032834 "XPathExpressionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 820866 // XPathExpressionException
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1032962 "XPathFactoryConfigurationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 821378 // XPathFactoryConfigurationException
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1033090 "XPathFactoryFinder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.net.URL;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Properties;
import java.util.ServiceConfigurationError;
import java.util.ServiceLoader;
${definition}"
      associated_elems
	class_ref 1441410 // XPathFactoryFinder
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1033218 "XPathFunction"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_elems
	class_ref 1441538 // XPathFunction
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1033346 "XPathFunctionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1441666 // XPathFunctionException
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1033474 "XPathFunctionResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 820226 // XPathFunctionResolver
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1033602 "XPathVariableResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 820610 // XPathVariableResolver
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
