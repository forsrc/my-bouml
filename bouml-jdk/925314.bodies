class LineNumberReader
!!!6887298.java!!!	LineNumberReader(inout in : Reader)
        super(in);
!!!6887426.java!!!	LineNumberReader(inout in : Reader, in sz : int)
        super(in, sz);
!!!6887554.java!!!	setLineNumber(in lineNumber : int) : void
        this.lineNumber = lineNumber;
!!!6887682.java!!!	getLineNumber() : int
        return lineNumber;
!!!6887810.java!!!	read() : int
        synchronized (lock) {
            int c = super.read();
            if (skipLF) {
                if (c == '\n')
                    c = super.read();
                skipLF = false;
            }
            switch (c) {
            case '\r':
                skipLF = true;
            case '\n':          /* Fall through */
                lineNumber++;
                return '\n';
            }
            return c;
        }
!!!6887938.java!!!	read(inout cbuf : char [[]], in off : int, in len : int) : int
        synchronized (lock) {
            int n = super.read(cbuf, off, len);

            for (int i = off; i < off + n; i++) {
                int c = cbuf[i];
                if (skipLF) {
                    skipLF = false;
                    if (c == '\n')
                        continue;
                }
                switch (c) {
                case '\r':
                    skipLF = true;
                case '\n':      /* Fall through */
                    lineNumber++;
                    break;
                }
            }

            return n;
        }
!!!6888066.java!!!	readLine() : String
        synchronized (lock) {
            String l = super.readLine(skipLF);
            skipLF = false;
            if (l != null)
                lineNumber++;
            return l;
        }
!!!6888194.java!!!	skip(in n : long) : long
        if (n < 0)
            throw new IllegalArgumentException("skip() value is negative");
        int nn = (int) Math.min(n, maxSkipBufferSize);
        synchronized (lock) {
            if ((skipBuffer == null) || (skipBuffer.length < nn))
                skipBuffer = new char[nn];
            long r = n;
            while (r > 0) {
                int nc = read(skipBuffer, 0, (int) Math.min(r, nn));
                if (nc == -1)
                    break;
                r -= nc;
            }
            return n - r;
        }
!!!6888322.java!!!	mark(in readAheadLimit : int) : void
        synchronized (lock) {
            super.mark(readAheadLimit);
            markedLineNumber = lineNumber;
            markedSkipLF     = skipLF;
        }
!!!6888450.java!!!	reset() : void
        synchronized (lock) {
            super.reset();
            lineNumber = markedLineNumber;
            skipLF     = markedSkipLF;
        }
