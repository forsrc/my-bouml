class RequestMessage_1_0
!!!1419778.java!!!	RequestMessage_1_0(inout orb : ORB)
        this.orb = orb;
!!!1419906.java!!!	RequestMessage_1_0(inout orb : ORB, inout _service_contexts : ServiceContexts, in _request_id : int, inout _response_expected : boolean, inout _object_key : byte [[]], inout _operation : String, inout _requesting_principal : Principal)
        super(Message.GIOPBigMagic, false, Message.GIOPRequest, 0);
        this.orb = orb;
        service_contexts = _service_contexts;
        request_id = _request_id;
        response_expected = _response_expected;
        object_key = _object_key;
        operation = _operation;
        requesting_principal = _requesting_principal;
!!!1420034.java!!!	getServiceContexts() : ServiceContexts
        return this.service_contexts;
!!!1420162.java!!!	getRequestId() : int
        return this.request_id;
!!!1420290.java!!!	isResponseExpected() : boolean
        return this.response_expected;
!!!1420418.java!!!	getReserved() : byte
        // REVISIT Should we throw an exception or return null ?
        return null;
!!!1420546.java!!!	getObjectKey() : ObjectKey
        if (this.objectKey == null) {
            // this will raise a MARSHAL exception upon errors.
            this.objectKey = MessageBase.extractObjectKey(object_key, orb);
        }

        return this.objectKey;
!!!1420674.java!!!	getOperation() : String
        return this.operation;
!!!1420802.java!!!	getPrincipal() : Principal
        return this.requesting_principal;
!!!1420930.java!!!	setThreadPoolToUse(in poolToUse : int) : void
        // No-op, must be GIOP Version 1.1 or greater
        // to support this SUN PROPRIETARY EXTENSION.
!!!1421058.java!!!	read(inout istream : InputStream) : void
        super.read(istream);
        this.service_contexts
            = new ServiceContexts((org.omg.CORBA_2_3.portable.InputStream) istream);
        this.request_id = istream.read_ulong();
        this.response_expected = istream.read_boolean();
        int _len0 = istream.read_long();
        this.object_key = new byte[_len0];
        istream.read_octet_array(this.object_key, 0, _len0);
        this.operation = istream.read_string();
        this.requesting_principal = istream.read_Principal();
!!!1421186.java!!!	write(inout ostream : OutputStream) : void
        super.write(ostream);
        if (this.service_contexts != null) {
                service_contexts.write(
                (org.omg.CORBA_2_3.portable.OutputStream) ostream,
                GIOPVersion.V1_0);
            } else {
                ServiceContexts.writeNullServiceContext(
                (org.omg.CORBA_2_3.portable.OutputStream) ostream);
        }
        ostream.write_ulong(this.request_id);
        ostream.write_boolean(this.response_expected);
        nullCheck(this.object_key);
        ostream.write_long(this.object_key.length);
        ostream.write_octet_array(this.object_key, 0, this.object_key.length);
        ostream.write_string(this.operation);
        if (this.requesting_principal != null) {
            ostream.write_Principal(this.requesting_principal);
        } else {
            ostream.write_long(0);
        }
!!!1421314.java!!!	callback(inout handler : MessageHandler) : void
        handler.handleInput(this);
