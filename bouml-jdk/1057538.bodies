class DecimalStyle
!!!8542722.java!!!	getAvailableLocales() : Set
        Locale[] l = DecimalFormatSymbols.getAvailableLocales();
        Set<Locale> locales = new HashSet<>(l.length);
        Collections.addAll(locales, l);
        return locales;
!!!8542850.java!!!	ofDefaultLocale() : DecimalStyle
        return of(Locale.getDefault(Locale.Category.FORMAT));
!!!8542978.java!!!	of(inout locale : Locale) : DecimalStyle
        Objects.requireNonNull(locale, "locale");
        DecimalStyle info = CACHE.get(locale);
        if (info == null) {
            info = create(locale);
            CACHE.putIfAbsent(locale, info);
            info = CACHE.get(locale);
        }
        return info;
!!!8543106.java!!!	create(inout locale : Locale) : DecimalStyle
        DecimalFormatSymbols oldSymbols = DecimalFormatSymbols.getInstance(locale);
        char zeroDigit = oldSymbols.getZeroDigit();
        char positiveSign = '+';
        char negativeSign = oldSymbols.getMinusSign();
        char decimalSeparator = oldSymbols.getDecimalSeparator();
        if (zeroDigit == '0' && negativeSign == '-' && decimalSeparator == '.') {
            return STANDARD;
        }
        return new DecimalStyle(zeroDigit, positiveSign, negativeSign, decimalSeparator);
!!!8543234.java!!!	DecimalStyle(in zeroChar : char, in positiveSignChar : char, in negativeSignChar : char, in decimalPointChar : char)
        this.zeroDigit = zeroChar;
        this.positiveSign = positiveSignChar;
        this.negativeSign = negativeSignChar;
        this.decimalSeparator = decimalPointChar;
!!!8543362.java!!!	getZeroDigit() : char
        return zeroDigit;
!!!8543490.java!!!	withZeroDigit(in zeroDigit : char) : DecimalStyle
        if (zeroDigit == this.zeroDigit) {
            return this;
        }
        return new DecimalStyle(zeroDigit, positiveSign, negativeSign, decimalSeparator);
!!!8543618.java!!!	getPositiveSign() : char
        return positiveSign;
!!!8543746.java!!!	withPositiveSign(in positiveSign : char) : DecimalStyle
        if (positiveSign == this.positiveSign) {
            return this;
        }
        return new DecimalStyle(zeroDigit, positiveSign, negativeSign, decimalSeparator);
!!!8543874.java!!!	getNegativeSign() : char
        return negativeSign;
!!!8544002.java!!!	withNegativeSign(in negativeSign : char) : DecimalStyle
        if (negativeSign == this.negativeSign) {
            return this;
        }
        return new DecimalStyle(zeroDigit, positiveSign, negativeSign, decimalSeparator);
!!!8544130.java!!!	getDecimalSeparator() : char
        return decimalSeparator;
!!!8544258.java!!!	withDecimalSeparator(in decimalSeparator : char) : DecimalStyle
        if (decimalSeparator == this.decimalSeparator) {
            return this;
        }
        return new DecimalStyle(zeroDigit, positiveSign, negativeSign, decimalSeparator);
!!!8544386.java!!!	convertToDigit(in ch : char) : int
        int val = ch - zeroDigit;
        return (val >= 0 && val <= 9) ? val : -1;
!!!8544514.java!!!	convertNumberToI18N(inout numericText : String) : String
        if (zeroDigit == '0') {
            return numericText;
        }
        int diff = zeroDigit - '0';
        char[] array = numericText.toCharArray();
        for (int i = 0; i < array.length; i++) {
            array[i] = (char) (array[i] + diff);
        }
        return new String(array);
!!!8544642.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }
        if (obj instanceof DecimalStyle) {
            DecimalStyle other = (DecimalStyle) obj;
            return (zeroDigit == other.zeroDigit && positiveSign == other.positiveSign &&
                    negativeSign == other.negativeSign && decimalSeparator == other.decimalSeparator);
        }
        return false;
!!!8544770.java!!!	hashCode() : int
        return zeroDigit + positiveSign + negativeSign + decimalSeparator;
!!!8544898.java!!!	toString() : String
        return "DecimalStyle[" + zeroDigit + positiveSign + negativeSign + decimalSeparator + "]";
