class FilterExprWalker
!!!5827842.java!!!	FilterExprWalker(inout locPathIterator : WalkingIterator)
    super(locPathIterator, Axis.FILTEREDLIST);
!!!5827970.java!!!	init(inout compiler : Compiler, in opPos : int, in stepType : int) : void

    super.init(compiler, opPos, stepType);

    // Smooth over an anomily in the opcode map...
    switch (stepType)
    {
    case OpCodes.OP_FUNCTION :
    case OpCodes.OP_EXTFUNCTION :
        m_mustHardReset = true;
    case OpCodes.OP_GROUP :
    case OpCodes.OP_VARIABLE :
      m_expr = compiler.compile(opPos);
      m_expr.exprSetParent(this);
      //if((OpCodes.OP_FUNCTION == stepType) && (m_expr instanceof com.sun.org.apache.xalan.internal.templates.FuncKey))
      if(m_expr instanceof com.sun.org.apache.xpath.internal.operations.Variable)
      {
        // hack/temp workaround
        m_canDetachNodeset = false;
      }
      break;
    default :
      m_expr = compiler.compile(opPos + 2);
      m_expr.exprSetParent(this);
    }
//    if(m_expr instanceof WalkingIterator)
//    {
//      WalkingIterator wi = (WalkingIterator)m_expr;
//      if(wi.getFirstWalker() instanceof FilterExprWalker)
//      {
//              FilterExprWalker fw = (FilterExprWalker)wi.getFirstWalker();
//              if(null == fw.getNextWalker())
//              {
//                      m_expr = fw.m_expr;
//                      m_expr.exprSetParent(this);
//              }
//      }
//
//    }
!!!5828098.java!!!	detach() : void
        super.detach();
        if (m_canDetachNodeset)
        {
          m_exprObj.detach();
        }
        m_exprObj = null;
!!!5828226.java!!!	setRoot(in root : int) : void

    super.setRoot(root);

        m_exprObj = FilterExprIteratorSimple.executeFilterExpr(root,
                          m_lpi.getXPathContext(), m_lpi.getPrefixResolver(),
                          m_lpi.getIsTopLevel(), m_lpi.m_stackFrame, m_expr);

!!!5828354.java!!!	clone() : Object

    FilterExprWalker clone = (FilterExprWalker) super.clone();

    // clone.m_expr = (Expression)((Expression)m_expr).clone();
    if (null != m_exprObj)
      clone.m_exprObj = (XNodeSet) m_exprObj.clone();

    return clone;
!!!5828482.java!!!	acceptNode(in n : int) : short

    try
    {
      if (getPredicateCount() > 0)
      {
        countProximityPosition(0);

        if (!executePredicates(n, m_lpi.getXPathContext()))
          return DTMIterator.FILTER_SKIP;
      }

      return DTMIterator.FILTER_ACCEPT;
    }
    catch (javax.xml.transform.TransformerException se)
    {
      throw new RuntimeException(se.getMessage());
    }
!!!5828610.java!!!	getNextNode() : int

    if (null != m_exprObj)
    {
       int next = m_exprObj.nextNode();
       return next;
    }
    else
      return DTM.NULL;
!!!5828738.java!!!	getLastPos(inout xctxt : XPathContext) : int
    return m_exprObj.getLength();
!!!5828866.java!!!	fixupVariables(inout vars : Vector, in globalsSize : int) : void
    super.fixupVariables(vars, globalsSize);
    m_expr.fixupVariables(vars, globalsSize);
!!!5828994.java!!!	getInnerExpression() : Expression
        return m_expr;
!!!5829122.java!!!	setInnerExpression(inout expr : Expression) : void
        expr.exprSetParent(this);
        m_expr = expr;
!!!5829250.java!!!	getAnalysisBits() : int
      if (null != m_expr && m_expr instanceof PathComponent)
      {
        return ((PathComponent) m_expr).getAnalysisBits();
      }
      return WalkerFactory.BIT_FILTER;
!!!5829378.java!!!	isDocOrdered() : boolean
    return m_exprObj.isDocOrdered();
!!!5829506.java!!!	getAxis() : int
    return m_exprObj.getAxis();
!!!5829890.java!!!	callPredicateVisitors(inout visitor : XPathVisitor) : void
          m_expr.callVisitors(new filterExprOwner(), visitor);

          super.callPredicateVisitors(visitor);
!!!5830018.java!!!	deepEquals(inout expr : Expression) : boolean
      if (!super.deepEquals(expr))
                return false;

      FilterExprWalker walker = (FilterExprWalker)expr;
      if(!m_expr.deepEquals(walker.m_expr))
        return false;

      return true;
