format 222
"util" // jdk1.8::javax::xml::bind::util
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/bind/util/"
  java_package "javax.xml.bind.util"
  classview 181250 "util"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1416962 "JAXBResult"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "JAXP {@link javax.xml.transform.Result} implementation
that unmarshals a JAXB object.

<p>
This utility class is useful to combine JAXB with
other Java/XML technologies.

<p>
The following example shows how to use JAXB to unmarshal a document
resulting from an XSLT transformation.

<blockquote>
   <pre>
      JAXBResult result = new JAXBResult(
        JAXBContext.newInstance(\"org.acme.foo\") );

      // set up XSLT transformation
      TransformerFactory tf = TransformerFactory.newInstance();
      Transformer t = tf.newTransformer(new StreamSource(\"test.xsl\"));

      // run transformation
      t.transform(new StreamSource(\"document.xml\"),result);

      // obtain the unmarshalled content tree
      Object o = result.getResult();
   </pre>
</blockquote>

<p>
The fact that JAXBResult derives from SAXResult is an implementation
detail. Thus in general applications are strongly discouraged from
accessing methods defined on SAXResult.

<p>
In particular it shall never attempt to call the setHandler,
setLexicalHandler, and setSystemId methods.

@author
     Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 4763010 // <generalisation>
	relation 4763010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4763010 // <generalisation>
	  b parent class_ref 1417090 // SAXResult
      end

      operation 12007810 "JAXBResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 1405570 // JAXBContext
	nexceptions 1
	  exception class_ref 1404930 // JAXBException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance that uses the specified
JAXBContext to unmarshal.

@param context The JAXBContext that will be used to create the
necessary Unmarshaller.  This parameter must not be null.
@exception JAXBException if an error is encountered while creating the
JAXBResult or if the context parameter is null.
"
      end

      operation 12007938 "JAXBResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "_unmarshaller" type class_ref 1406978 // Unmarshaller
	nexceptions 1
	  exception class_ref 1404930 // JAXBException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance that uses the specified
Unmarshaller to unmarshal an object.

<p>
This JAXBResult object will use the specified Unmarshaller
instance. It is the caller's responsibility not to use the
same Unmarshaller for other purposes while it is being
used by this object.

<p>
The primary purpose of this method is to allow the client
to configure Unmarshaller. Unless you know what you are doing,
it's easier and safer to pass a JAXBContext.

@param _unmarshaller the unmarshaller.  This parameter must not be null.
@throws JAXBException if an error is encountered while creating the
JAXBResult or the Unmarshaller parameter is null.
"
      end

      classrelation 4763138 // unmarshallerHandler (<unidirectional association>)
	relation 4763138 --->
	  a role_name "unmarshallerHandler" const_relation private
	    comment "
Unmarshaller that will be used to unmarshal
the input documents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4763138 // unmarshallerHandler (<unidirectional association>)
	  b parent class_ref 1409282 // UnmarshallerHandler
      end

      operation 12008066 "getResult"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 1404930 // JAXBException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the unmarshalled object created by the transformation.

@return
     Always return a non-null object.

@exception IllegalStateException
 if this method is called before an object is unmarshalled.

@exception JAXBException
     if there is any unmarshalling error.
     Note that the implementation is allowed to throw SAXException
     during the parsing when it finds an error.
"
      end

      operation 12008194 "assertionFailed"
	class_operation private return_type class_ref 1406978 // Unmarshaller
	nparams 0
	nexceptions 1
	  exception class_ref 1404930 // JAXBException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hook to throw exception from the middle of a contructor chained call
to this
"
      end
    end

    class 1417218 "JAXBSource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "JAXP {@link javax.xml.transform.Source} implementation
that marshals a JAXB-generated object.

<p>
This utility class is useful to combine JAXB with
other Java/XML technologies.

<p>
The following example shows how to use JAXB to marshal a document
for transformation by XSLT.

<blockquote>
   <pre>
      MyObject o = // get JAXB content tree

      // jaxbContext is a JAXBContext object from which 'o' is created.
      JAXBSource source = new JAXBSource( jaxbContext, o );

      // set up XSLT transformation
      TransformerFactory tf = TransformerFactory.newInstance();
      Transformer t = tf.newTransformer(new StreamSource(\"test.xsl\"));

      // run transformation
      t.transform(source,new StreamResult(System.out));
   </pre>
</blockquote>

<p>
The fact that JAXBSource derives from SAXSource is an implementation
detail. Thus in general applications are strongly discouraged from
accessing methods defined on SAXSource. In particular,
the setXMLReader and setInputSource methods shall never be called.
The XMLReader object obtained by the getXMLReader method shall
be used only for parsing the InputSource object returned by
the getInputSource method.

<p>
Similarly the InputSource object obtained by the getInputSource
method shall be used only for being parsed by the XMLReader object
returned by the getXMLReader.

@author
     Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
"
      classrelation 4763778 // <generalisation>
	relation 4763778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4763778 // <generalisation>
	  b parent class_ref 750594 // SAXSource
      end

      operation 12009602 "JAXBSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 1405570 // JAXBContext
	  param inout name "contentObject" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 1404930 // JAXBException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@link javax.xml.transform.Source} for the given content object.

@param   context
     JAXBContext that was used to create
     <code>contentObject</code>. This context is used
     to create a new instance of marshaller and must not be null.
@param   contentObject
     An instance of a JAXB-generated class, which will be
     used as a {@link javax.xml.transform.Source} (by marshalling it into XML).  It must
     not be null.
@throws JAXBException if an error is encountered while creating the
JAXBSource or if either of the parameters are null.
"
      end

      operation 12009730 "JAXBSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "marshaller" type class_ref 1407106 // Marshaller
	  param inout name "contentObject" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 1404930 // JAXBException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@link javax.xml.transform.Source} for the given content object.

@param   marshaller
     A marshaller instance that will be used to marshal
     <code>contentObject</code> into XML. This must be
     created from a JAXBContext that was used to build
     <code>contentObject</code> and must not be null.
@param   contentObject
     An instance of a JAXB-generated class, which will be
     used as a {@link javax.xml.transform.Source} (by marshalling it into XML).  It must
     not be null.
@throws JAXBException if an error is encountered while creating the
JAXBSource or if either of the parameters are null.
"
      end

      classrelation 4763906 // marshaller (<unidirectional association>)
	relation 4763906 --->
	  a role_name "marshaller" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4763906 // marshaller (<unidirectional association>)
	  b parent class_ref 1407106 // Marshaller
      end

      classrelation 4764034 // contentObject (<unidirectional association>)
	relation 4764034 --->
	  a role_name "contentObject" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764034 // contentObject (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4764162 // pseudoParser (<unidirectional association>)
	relation 4764162 --->
	  a role_name "pseudoParser" init_value " new XMLReader() {
        public boolean getFeature(String name) throws SAXNotRecognizedException {
            if(name.equals(\"http://xml.org/sax/features/namespaces\"))
                return true;
            if(name.equals(\"http://xml.org/sax/features/namespace-prefixes\"))
                return false;
            throw new SAXNotRecognizedException(name);
        }

        public void setFeature(String name, boolean value) throws SAXNotRecognizedException {
            if(name.equals(\"http://xml.org/sax/features/namespaces\") && value)
                return;
            if(name.equals(\"http://xml.org/sax/features/namespace-prefixes\") && !value)
                return;
            throw new SAXNotRecognizedException(name);
        }

        public Object getProperty(String name) throws SAXNotRecognizedException {
            if( \"http://xml.org/sax/properties/lexical-handler\".equals(name) ) {
                return lexicalHandler;
            }
            throw new SAXNotRecognizedException(name);
        }

        public void setProperty(String name, Object value) throws SAXNotRecognizedException {
            if( \"http://xml.org/sax/properties/lexical-handler\".equals(name) ) {
                this.lexicalHandler = (LexicalHandler)value;
                return;
            }
            throw new SAXNotRecognizedException(name);
        }

        private LexicalHandler lexicalHandler;

        // we will store this value but never use it by ourselves.
        private EntityResolver entityResolver;
        public void setEntityResolver(EntityResolver resolver) {
            this.entityResolver = resolver;
        }
        public EntityResolver getEntityResolver() {
            return entityResolver;
        }

        private DTDHandler dtdHandler;
        public void setDTDHandler(DTDHandler handler) {
            this.dtdHandler = handler;
        }
        public DTDHandler getDTDHandler() {
            return dtdHandler;
        }

        // SAX allows ContentHandler to be changed during the parsing,
        // but JAXB doesn't. So this repeater will sit between those
        // two components.
        private XMLFilter repeater = new XMLFilterImpl();

        public void setContentHandler(ContentHandler handler) {
            repeater.setContentHandler(handler);
        }
        public ContentHandler getContentHandler() {
            return repeater.getContentHandler();
        }

        private ErrorHandler errorHandler;
        public void setErrorHandler(ErrorHandler handler) {
            this.errorHandler = handler;
        }
        public ErrorHandler getErrorHandler() {
            return errorHandler;
        }

        public void parse(InputSource input) throws SAXException {
            parse();
        }

        public void parse(String systemId) throws SAXException {
            parse();
        }

        public void parse() throws SAXException {
            // parses a content object by using the given marshaller
            // SAX events will be sent to the repeater, and the repeater
            // will further forward it to an appropriate component.
            try {
                marshaller.marshal( contentObject, (XMLFilterImpl)repeater );
            } catch( JAXBException e ) {
                // wrap it to a SAXException
                SAXParseException se =
                    new SAXParseException( e.getMessage(),
                        null, null, -1, -1, e );

                // if the consumer sets an error handler, it is our responsibility
                // to notify it.
                if(errorHandler!=null)
                    errorHandler.fatalError(se);

                // this is a fatal error. Even if the error handler
                // returns, we will abort anyway.
                throw se;
            }
        }
    }" const_relation private
	    comment " this object will pretend as an XMLReader.
 no matter what parameter is specified to the parse method,
 it just parse the contentObject.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764162 // pseudoParser (<unidirectional association>)
	  b parent class_ref 606466 // XMLReader
      end

      operation 12009858 "assertionFailed"
	class_operation private return_type class_ref 1407106 // Marshaller
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1404930 // JAXBException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hook to throw exception from the middle of a contructor chained call
to this
"
      end
    end

    class 1417346 "Messages"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Formats error messages.
"
      operation 12009986 "format"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param inout name "property" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12010114 "format"
	class_operation package return_type class_ref 128130 // String
	nparams 2
	  param inout name "property" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12010242 "format"
	class_operation package return_type class_ref 128130 // String
	nparams 3
	  param inout name "property" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 129538 // Object
	  param inout name "arg2" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12010370 "format"
	class_operation package return_type class_ref 128130 // String
	nparams 4
	  param inout name "property" type class_ref 128130 // String
	  param inout name "arg1" type class_ref 129538 // Object
	  param inout name "arg2" type class_ref 129538 // Object
	  param inout name "arg3" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12010498 "format"
	class_operation package return_type class_ref 128130 // String
	nparams 2
	  param inout name "property" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add more if necessary.
 Loads a string resource and formats it with specified arguments. "
      end

      classrelation 4764290 // UNRECOGNIZED_SEVERITY (<unidirectional association>)
	relation 4764290 --->
	  a role_name "UNRECOGNIZED_SEVERITY" init_value " // 1 arg
        \"ValidationEventCollector.UnrecognizedSeverity\"" class_relation const_relation package
	    comment " Message resources


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764290 // UNRECOGNIZED_SEVERITY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4764418 // RESULT_NULL_CONTEXT (<unidirectional association>)
	relation 4764418 --->
	  a role_name "RESULT_NULL_CONTEXT" init_value " // 0 args
        \"JAXBResult.NullContext\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764418 // RESULT_NULL_CONTEXT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4764546 // RESULT_NULL_UNMARSHALLER (<unidirectional association>)
	relation 4764546 --->
	  a role_name "RESULT_NULL_UNMARSHALLER" init_value " // 0 arg
        \"JAXBResult.NullUnmarshaller\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764546 // RESULT_NULL_UNMARSHALLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4764674 // SOURCE_NULL_CONTEXT (<unidirectional association>)
	relation 4764674 --->
	  a role_name "SOURCE_NULL_CONTEXT" init_value " // 0 args
        \"JAXBSource.NullContext\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764674 // SOURCE_NULL_CONTEXT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4764802 // SOURCE_NULL_CONTENT (<unidirectional association>)
	relation 4764802 --->
	  a role_name "SOURCE_NULL_CONTENT" init_value " // 0 arg
        \"JAXBSource.NullContent\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764802 // SOURCE_NULL_CONTENT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4764930 // SOURCE_NULL_MARSHALLER (<unidirectional association>)
	relation 4764930 --->
	  a role_name "SOURCE_NULL_MARSHALLER" init_value " // 0 arg
        \"JAXBSource.NullMarshaller\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4764930 // SOURCE_NULL_MARSHALLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 1417474 "ValidationEventCollector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@link javax.xml.bind.ValidationEventHandler ValidationEventHandler}
implementation that collects all events.

<p>
To use this class, create a new instance and pass it to the setEventHandler
method of the Validator, Unmarshaller, Marshaller class.  After the call to
validate or unmarshal completes, call the getEvents method to retrieve all
the reported errors and warnings.

@author <ul><li>Kohsuke Kawaguchi, Sun Microsystems, Inc.</li><li>Ryan Shoemaker, Sun Microsystems, Inc.</li><li>Joe Fialli, Sun Microsystems, Inc.</li></ul>
@see javax.xml.bind.Validator
@see javax.xml.bind.ValidationEventHandler
@see javax.xml.bind.ValidationEvent
@see javax.xml.bind.ValidationEventLocator
@since JAXB1.0
"
      classrelation 4765058 // <realization>
	relation 4765058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4765058 // <realization>
	  b parent class_ref 1405186 // ValidationEventHandler
      end

      classrelation 4765186 // events (<unidirectional association>)
	relation 4765186 --->
	  a role_name "events" init_value " new ArrayList<ValidationEvent>()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ValidationEvent> ${name}${value};
"
	    classrelation_ref 4765186 // events (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 12010626 "getEvents"
	public return_type class_ref 1408514 // ValidationEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array of ValidationEvent objects containing a copy of each of
the collected errors and warnings.

@return
     a copy of all the collected errors and warnings or an empty array
     if there weren't any
"
      end

      operation 12010754 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear all collected errors and warnings.
"
      end

      operation 12010882 "hasEvents"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this event collector contains at least one
ValidationEvent.

@return true if this event collector contains at least one
        ValidationEvent, false otherwise
"
      end

      operation 12011010 "handleEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 1408514 // ValidationEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12011138 "_assert"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "b" explicit_type "boolean"
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 177666 "util"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1006722 "JAXBResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.UnmarshallerHandler;
import javax.xml.transform.sax.SAXResult;
${definition}"
      associated_elems
	class_ref 1416962 // JAXBResult
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1006978 "JAXBSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.LexicalHandler;
import org.xml.sax.helpers.XMLFilterImpl;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.transform.sax.SAXSource;
import org.xml.sax.XMLFilter;
${definition}"
      associated_elems
	class_ref 1417218 // JAXBSource
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1007106 "Messages"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.MessageFormat;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 1417346 // Messages
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1007234 "ValidationEventCollector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.bind.ValidationEvent;
import javax.xml.bind.ValidationEventHandler;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1417474 // ValidationEventCollector
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
