class TextAndMnemonicHashMap
!!!2149506.java!!!	get(inout key : Object) : Object

            Object value = super.get(key);

            if (value == null) {

                boolean checkTitle = false;

                String stringKey = key.toString();
                String compositeKey = null;

                if (stringKey.endsWith(AND_MNEMONIC)) {
                    return null;
                }

                if (stringKey.endsWith(".mnemonic")) {
                    compositeKey = composeKey(stringKey, 9, TEXT_SUFFIX);
                } else if (stringKey.endsWith("NameMnemonic")) {
                    compositeKey = composeKey(stringKey, 12, TEXT_SUFFIX);
                } else if (stringKey.endsWith("Mnemonic")) {
                    compositeKey = composeKey(stringKey, 8, TEXT_SUFFIX);
                    checkTitle = true;
                }

                if (compositeKey != null) {
                    value = super.get(compositeKey);
                    if (value == null && checkTitle) {
                        compositeKey = composeKey(stringKey, 8, TITLE_SUFFIX);
                        value = super.get(compositeKey);
                    }

                    return value == null ? null : getMnemonicFromProperty(value.toString());
                }

                if (stringKey.endsWith("NameText")) {
                    compositeKey = composeKey(stringKey, 8, TEXT_SUFFIX);
                } else if (stringKey.endsWith(".nameText")) {
                    compositeKey = composeKey(stringKey, 9, TEXT_SUFFIX);
                } else if (stringKey.endsWith("Text")) {
                    compositeKey = composeKey(stringKey, 4, TEXT_SUFFIX);
                } else if (stringKey.endsWith("Title")) {
                    compositeKey = composeKey(stringKey, 5, TITLE_SUFFIX);
                }

                if (compositeKey != null) {
                    value = super.get(compositeKey);
                    return value == null ? null : getTextFromProperty(value.toString());
                }

                if (stringKey.endsWith("DisplayedMnemonicIndex")) {
                    compositeKey = composeKey(stringKey, 22, TEXT_SUFFIX);
                    value = super.get(compositeKey);
                    if (value == null) {
                        compositeKey = composeKey(stringKey, 22, TITLE_SUFFIX);
                        value = super.get(compositeKey);
                    }
                    return value == null ? null : getIndexFromProperty(value.toString());
                }
            }

            return value;
!!!2149634.java!!!	composeKey(inout key : String, in reduce : int, inout sufix : String) : String
            return key.substring(0, key.length() - reduce) + sufix;
!!!2149762.java!!!	getTextFromProperty(inout text : String) : String
            return text.replace("&", "");
!!!2149890.java!!!	getMnemonicFromProperty(inout text : String) : String
            int index = text.indexOf('&');
            if (0 <= index && index < text.length() - 1) {
                char c = text.charAt(index + 1);
                return Integer.toString((int) Character.toUpperCase(c));
            }
            return null;
!!!2150018.java!!!	getIndexFromProperty(inout text : String) : String
            int index = text.indexOf('&');
            return (index == -1) ? null : Integer.toString(index);
