class RandomIntsSpliterator
!!!8928642.java!!!	RandomIntsSpliterator(inout rng : SplittableRandom, in index : long, in fence : long, in origin : int, in bound : int)
            this.rng = rng; this.index = index; this.fence = fence;
            this.origin = origin; this.bound = bound;
!!!8928770.java!!!	trySplit() : SplittableRandom::RandomIntsSpliterator
            long i = index, m = (i + fence) >>> 1;
            return (m <= i) ? null :
                new RandomIntsSpliterator(rng.split(), i, index = m, origin, bound);
!!!8928898.java!!!	estimateSize() : long
            return fence - index;
!!!8929026.java!!!	characteristics() : int
            return (Spliterator.SIZED | Spliterator.SUBSIZED |
                    Spliterator.NONNULL | Spliterator.IMMUTABLE);
!!!8929154.java!!!	tryAdvance(inout consumer : IntConsumer) : boolean
            if (consumer == null) throw new NullPointerException();
            long i = index, f = fence;
            if (i < f) {
                consumer.accept(rng.internalNextInt(origin, bound));
                index = i + 1;
                return true;
            }
            return false;
!!!8929282.java!!!	forEachRemaining(inout consumer : IntConsumer) : void
            if (consumer == null) throw new NullPointerException();
            long i = index, f = fence;
            if (i < f) {
                index = f;
                SplittableRandom r = rng;
                int o = origin, b = bound;
                do {
                    consumer.accept(r.internalNextInt(o, b));
                } while (++i < f);
            }
