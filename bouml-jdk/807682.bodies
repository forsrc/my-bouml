class XNumber
!!!5926786.java!!!	XNumber(in d : double)
    super();

    m_val = d;
!!!5926914.java!!!	XNumber(inout num : Number)

    super();

    m_val = num.doubleValue();
    setObject(num);
!!!5927042.java!!!	getType() : int
    return CLASS_NUMBER;
!!!5927170.java!!!	getTypeString() : String
    return "#NUMBER";
!!!5927298.java!!!	num() : double
    return m_val;
!!!5927426.java!!!	num(inout xctxt : XPathContext) : double

    return m_val;
!!!5927554.java!!!	bool() : boolean
    return (Double.isNaN(m_val) || (m_val == 0.0)) ? false : true;
!!!5927682.java!!!	str() : String

    if (Double.isNaN(m_val))
    {
      return "NaN";
    }
    else if (Double.isInfinite(m_val))
    {
      if (m_val > 0)
        return "Infinity";
      else
        return "-Infinity";
    }

    double num = m_val;
    String s = Double.toString(num);
    int len = s.length();

    if (s.charAt(len - 2) == '.' && s.charAt(len - 1) == '0')
    {
      s = s.substring(0, len - 2);

      if (s.equals("-0"))
        return "0";

      return s;
    }

    int e = s.indexOf('E');

    if (e < 0)
    {
      if (s.charAt(len - 1) == '0')
        return s.substring(0, len - 1);
      else
        return s;
    }

    int exp = Integer.parseInt(s.substring(e + 1));
    String sign;

    if (s.charAt(0) == '-')
    {
      sign = "-";
      s = s.substring(1);

      --e;
    }
    else
      sign = "";

    int nDigits = e - 2;

    if (exp >= nDigits)
      return sign + s.substring(0, 1) + s.substring(2, e)
             + zeros(exp - nDigits);

    // Eliminate trailing 0's - bugzilla 14241
    while (s.charAt(e-1) == '0')
      e--;

    if (exp > 0)
      return sign + s.substring(0, 1) + s.substring(2, 2 + exp) + "."
             + s.substring(2 + exp, e);

    return sign + "0." + zeros(-1 - exp) + s.substring(0, 1)
           + s.substring(2, e);
!!!5927810.java!!!	zeros(in n : int) : String
    if (n < 1)
      return "";

    char[] buf = new char[n];

    for (int i = 0; i < n; i++)
    {
      buf[i] = '0';
    }

    return new String(buf);
!!!5927938.java!!!	object() : Object
    if(null == m_obj)
      setObject(new Double(m_val));
    return m_obj;
!!!5928066.java!!!	equals(inout obj2 : XObject) : boolean

    // In order to handle the 'all' semantics of
    // nodeset comparisons, we always call the
    // nodeset function.
    int t = obj2.getType();
    try
    {
            if (t == XObject.CLASS_NODESET)
              return obj2.equals(this);
            else if(t == XObject.CLASS_BOOLEAN)
              return obj2.bool() == bool();
                else
               return m_val == obj2.num();
    }
    catch(javax.xml.transform.TransformerException te)
    {
      throw new com.sun.org.apache.xml.internal.utils.WrappedRuntimeException(te);
    }
!!!5928194.java!!!	isStableNumber() : boolean
    return true;
!!!5928322.java!!!	callVisitors(inout owner : ExpressionOwner, inout visitor : XPathVisitor) : void
        visitor.visitNumberLiteral(owner, this);
