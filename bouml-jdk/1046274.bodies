class RBCollationTables
!!!8299650.java!!!	RBCollationTables(inout rules : String, in decmp : int)
        this.rules = rules;

        RBTableBuilder builder = new RBTableBuilder(new BuildAPI());
        builder.build(rules, decmp); // this object is filled in through
                                            // the BuildAPI object
!!!8300034.java!!!	getRules() : String
        return rules;
!!!8300162.java!!!	isFrenchSec() : boolean
        return frenchSec;
!!!8300290.java!!!	isSEAsianSwapping() : boolean
        return seAsianSwapping;
!!!8300418.java!!!	getContractValues(in ch : int) : Vector
        int index = mapping.elementAt(ch);
        return getContractValuesImpl(index - CONTRACTCHARINDEX);
!!!8300546.java!!!	getContractValuesImpl(in index : int) : Vector
        if (index >= 0)
        {
            return contractTable.elementAt(index);
        }
        else // not found
        {
            return null;
        }
!!!8300674.java!!!	usedInContractSeq(in c : int) : boolean
        return contractFlags.get(c) == 1;
!!!8300802.java!!!	getMaxExpansion(in order : int) : int
        int result = 1;

        if (expandTable != null) {
            // Right now this does a linear search through the entire
            // expansion table.  If a collator had a large number of expansions,
            // this could cause a performance problem, but in practise that
            // rarely happens
            for (int i = 0; i < expandTable.size(); i++) {
                int[] valueList = expandTable.elementAt(i);
                int length = valueList.length;

                if (length > result && valueList[length-1] == order) {
                    result = length;
                }
            }
        }

        return result;
!!!8300930.java!!!	getExpandValueList(in idx : int) : int
        return expandTable.elementAt(idx - EXPANDCHARINDEX);
!!!8301058.java!!!	getUnicodeOrder(in ch : int) : int
        return mapping.elementAt(ch);
!!!8301186.java!!!	getMaxSecOrder() : short
        return maxSecOrder;
!!!8301314.java!!!	getMaxTerOrder() : short
        return maxTerOrder;
!!!8301442.java!!!	reverse(inout result : StringBuffer, in from : int, in to : int) : void
        int i = from;
        char swap;

        int j = to - 1;
        while (i < j) {
            swap =  result.charAt(i);
            result.setCharAt(i, result.charAt(j));
            result.setCharAt(j, swap);
            i++;
            j--;
        }
!!!8301570.java!!!	getEntry(inout list : Vector, inout name : String, inout fwd : boolean) : int
        for (int i = 0; i < list.size(); i++) {
            EntryPair pair = list.elementAt(i);
            if (pair.fwd == fwd && pair.entryName.equals(name)) {
                return i;
            }
        }
        return UNMAPPED;
