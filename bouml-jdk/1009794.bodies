class UID
!!!7910146.java!!!	UID()

        synchronized (lock) {
            if (!hostUniqueSet) {
                hostUnique = (new SecureRandom()).nextInt();
                hostUniqueSet = true;
            }
            unique = hostUnique;
            if (lastCount == Short.MAX_VALUE) {
                boolean interrupted = Thread.interrupted();
                boolean done = false;
                while (!done) {
                    long now = System.currentTimeMillis();
                    if (now == lastTime) {
                        // wait for time to change
                        try {
                            Thread.sleep(1);
                        } catch (InterruptedException e) {
                            interrupted = true;
                        }
                    } else {
                        // If system time has gone backwards increase
                        // original by 1ms to maintain uniqueness
                        lastTime = (now < lastTime) ? lastTime+1 : now;
                        lastCount = Short.MIN_VALUE;
                        done = true;
                    }
                }
                if (interrupted) {
                    Thread.currentThread().interrupt();
                }
            }
            time = lastTime;
            count = lastCount++;
        }
!!!7910274.java!!!	UID(in num : short)
        unique = 0;
        time = 0;
        count = num;
!!!7910402.java!!!	UID(in unique : int, in time : long, in count : short)
        this.unique = unique;
        this.time = time;
        this.count = count;
!!!7910530.java!!!	hashCode() : int
        return (int) time + (int) count;
!!!7910658.java!!!	equals(inout obj : Object) : boolean
        if (obj instanceof UID) {
            UID uid = (UID) obj;
            return (unique == uid.unique &&
                    count == uid.count &&
                    time == uid.time);
        } else {
            return false;
        }
!!!7910786.java!!!	toString() : String
        return Integer.toString(unique,16) + ":" +
            Long.toString(time,16) + ":" +
            Integer.toString(count,16);
!!!7910914.java!!!	write(inout out : DataOutput) : void
        out.writeInt(unique);
        out.writeLong(time);
        out.writeShort(count);
!!!7911042.java!!!	read(inout in : DataInput) : UID
        int unique = in.readInt();
        long time = in.readLong();
        short count = in.readShort();
        return new UID(unique, time, count);
