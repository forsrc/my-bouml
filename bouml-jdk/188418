format 222
"dsig" // jdk1.8::javax::xml::crypto::dsig
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/crypto/dsig/"
  java_package "javax.xml.crypto.dsig"
  package_ref 188546 // keyinfo

  classview 181762 "dsig"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1420162 "CanonicalizationMethod"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>CanonicalizationMethod</code>
element as defined in the
<a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>. The XML
Schema Definition is defined as:
<p>
<pre>
  &lt;element name=\"CanonicalizationMethod\" type=\"ds:CanonicalizationMethodType\"/&gt;
    &lt;complexType name=\"CanonicalizationMethodType\" mixed=\"true\"&gt;
      &lt;sequence&gt;
        &lt;any namespace=\"##any\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;
          &lt;!-- (0,unbounded) elements from (1,1) namespace --&gt;
      &lt;/sequence&gt;
      &lt;attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/&gt;
    &lt;/complexType&gt;
</pre>

A <code>CanonicalizationMethod</code> instance may be created by invoking
the {@link XMLSignatureFactory#newCanonicalizationMethod
newCanonicalizationMethod} method of the {@link XMLSignatureFactory} class.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newCanonicalizationMethod(String, C14NMethodParameterSpec)
"
      classrelation 4770434 // <generalisation>
	relation 4770434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4770434 // <generalisation>
	  b parent class_ref 1420290 // Transform
      end

      classrelation 4770562 // INCLUSIVE (<unidirectional association>)
	relation 4770562 --->
	  a role_name "INCLUSIVE" init_value "
        \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\">Canonical
XML (without comments)</a> canonicalization method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4770562 // INCLUSIVE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4770690 // INCLUSIVE_WITH_COMMENTS (<unidirectional association>)
	relation 4770690 --->
	  a role_name "INCLUSIVE_WITH_COMMENTS" init_value "
        \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"" class_relation const_relation public
	    comment "
The
<a href=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\">
Canonical XML with comments</a> canonicalization method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4770690 // INCLUSIVE_WITH_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4770818 // EXCLUSIVE (<unidirectional association>)
	relation 4770818 --->
	  a role_name "EXCLUSIVE" init_value "
        \"http://www.w3.org/2001/10/xml-exc-c14n#\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2001/10/xml-exc-c14n#\">Exclusive
Canonical XML (without comments)</a> canonicalization method algorithm
URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4770818 // EXCLUSIVE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4770946 // EXCLUSIVE_WITH_COMMENTS (<unidirectional association>)
	relation 4770946 --->
	  a role_name "EXCLUSIVE_WITH_COMMENTS" init_value "
        \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\">
Exclusive Canonical XML with comments</a> canonicalization method
algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4770946 // EXCLUSIVE_WITH_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12023170 "getParameterSpec"
	public return_type class_ref 753282 // AlgorithmParameterSpec
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm-specific input parameters associated with this
<code>CanonicalizationMethod</code>.

<p>The returned parameters can be typecast to a
{@link C14NMethodParameterSpec} object.

@return the algorithm-specific input parameters (may be
   <code>null</code> if not specified)
"
      end
    end

    class 1420290 "Transform"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>Transform</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML Schema Definition is defined as:

<pre>
&lt;element name=\"Transform\" type=\"ds:TransformType\"/&gt;
  &lt;complexType name=\"TransformType\" mixed=\"true\"&gt;
    &lt;choice minOccurs=\"0\" maxOccurs=\"unbounded\"&gt;
      &lt;any namespace=\"##other\" processContents=\"lax\"/&gt;
      &lt;!-- (1,1) elements from (0,unbounded) namespaces --&gt;
      &lt;element name=\"XPath\" type=\"string\"/&gt;
    &lt;/choice&gt;
    &lt;attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/&gt;
  &lt;/complexType&gt;
</pre>

A <code>Transform</code> instance may be created by invoking the
{@link XMLSignatureFactory#newTransform newTransform} method
of the {@link XMLSignatureFactory} class.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newTransform(String, TransformParameterSpec)
"
      classrelation 4769538 // <generalisation>
	relation 4769538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4769538 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4769666 // <generalisation>
	relation 4769666 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4769666 // <generalisation>
	  b parent class_ref 1417602 // AlgorithmMethod
      end

      classrelation 4769794 // BASE64 (<unidirectional association>)
	relation 4769794 --->
	  a role_name "BASE64" init_value " \"http://www.w3.org/2000/09/xmldsig#base64\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2000/09/xmldsig#base64\">Base64</a>
transform algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4769794 // BASE64 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4769922 // ENVELOPED (<unidirectional association>)
	relation 4769922 --->
	  a role_name "ENVELOPED" init_value "
        \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\">
Enveloped Signature</a> transform algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4769922 // ENVELOPED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4770050 // XPATH (<unidirectional association>)
	relation 4770050 --->
	  a role_name "XPATH" init_value " \"http://www.w3.org/TR/1999/REC-xpath-19991116\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/TR/1999/REC-xpath-19991116\">XPath</a>
transform algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4770050 // XPATH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4770178 // XPATH2 (<unidirectional association>)
	relation 4770178 --->
	  a role_name "XPATH2" init_value " \"http://www.w3.org/2002/06/xmldsig-filter2\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2002/06/xmldsig-filter2\">
XPath Filter 2</a> transform algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4770178 // XPATH2 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4770306 // XSLT (<unidirectional association>)
	relation 4770306 --->
	  a role_name "XSLT" init_value " \"http://www.w3.org/TR/1999/REC-xslt-19991116\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/TR/1999/REC-xslt-19991116\">XSLT</a>
transform algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4770306 // XSLT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12022786 "getParameterSpec"
	public return_type class_ref 753282 // AlgorithmParameterSpec
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm-specific input parameters associated with this
<code>Transform</code>.
<p>
The returned parameters can be typecast to a
{@link TransformParameterSpec} object.

@return the algorithm-specific input parameters (may be <code>null</code>
   if not specified)
"
      end

      operation 12022914 "transform"
	abstract public return_type class_ref 1417730 // Data
	nparams 2
	  param inout name "data" type class_ref 1417730 // Data
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	nexceptions 1
	  exception class_ref 1420418 // TransformException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms the specified data using the underlying transform algorithm.

@param data the data to be transformed
@param context the <code>XMLCryptoContext</code> containing
   additional context (may be <code>null</code> if not applicable)
@return the transformed data
@throws NullPointerException if <code>data</code> is <code>null</code>
@throws TransformException if an error occurs while executing the
   transform
"
      end

      operation 12023042 "transform"
	abstract public return_type class_ref 1417730 // Data
	nparams 3
	  param inout name "data" type class_ref 1417730 // Data
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	  param inout name "os" type class_ref 151298 // OutputStream
	nexceptions 1
	  exception class_ref 1420418 // TransformException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms the specified data using the underlying transform algorithm.
If the output of this transform is an <code>OctetStreamData</code>, then
this method returns <code>null</code> and the bytes are written to the
specified <code>OutputStream</code>. Otherwise, the
<code>OutputStream</code> is ignored and the method behaves as if
{@link #transform(Data, XMLCryptoContext)} were invoked.

@param data the data to be transformed
@param context the <code>XMLCryptoContext</code> containing
   additional context (may be <code>null</code> if not applicable)
@param os the <code>OutputStream</code> that should be used to write
   the transformed data to
@return the transformed data (or <code>null</code> if the data was
   written to the <code>OutputStream</code> parameter)
@throws NullPointerException if <code>data</code> or <code>os</code>
   is <code>null</code>
@throws TransformException if an error occurs while executing the
   transform
"
      end
    end

    class 1420418 "TransformException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates an exceptional condition that occurred while executing a
transform algorithm.

<p>A <code>TransformException</code> can contain a cause: another
throwable that caused this <code>TransformException</code> to get thrown.

@see Transform#transform
@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      classrelation 4773506 // <generalisation>
	relation 4773506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4773506 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2620290 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5082634801360427800L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4773634 // cause (<unidirectional association>)
	relation 4773634 --->
	  a role_name "cause" private
	    comment "
The throwable that caused this exception to get thrown, or null if this
exception was not caused by another throwable or if the causative
throwable is unknown.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4773634 // cause (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 12026114 "TransformException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>TransformException</code> with
<code>null</code> as its detail message.
"
      end

      operation 12026242 "TransformException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>TransformException</code> with the specified
detail message.

@param message the detail message
"
      end

      operation 12026370 "TransformException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>TransformException</code> with the
specified detail message and cause.
<p>Note that the detail message associated with
<code>cause</code> is <i>not</i> automatically incorporated in
this exception's detail message.

@param message the detail message
@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12026498 "TransformException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>TransformException</code> with the specified
cause and a detail message of
<code>(cause==null ? null : cause.toString())</code>
(which typically contains the class and detail message of
<code>cause</code>).

@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12026626 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this <code>TransformException</code> or
<code>null</code> if the cause is nonexistent or unknown.  (The
cause is the throwable that caused this
<code>TransformException</code> to get thrown.)

@return the cause of this <code>TransformException</code> or
        <code>null</code> if the cause is nonexistent or unknown.
"
      end

      operation 12026754 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>TransformException</code>, its backtrace and
the cause's backtrace to the standard error stream.
"
      end

      operation 12026882 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>TransformException</code>, its backtrace and
the cause's backtrace to the specified print stream.

@param s <code>PrintStream</code> to use for output
"
      end

      operation 12027010 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>TransformException</code>, its backtrace and
the cause's backtrace to the specified print writer.

@param s <code>PrintWriter</code> to use for output
"
      end
    end

    class 1420546 "DigestMethod"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>DigestMethod</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML Schema Definition is defined as:
<p>
<pre>
  &lt;element name=\"DigestMethod\" type=\"ds:DigestMethodType\"/&gt;
    &lt;complexType name=\"DigestMethodType\" mixed=\"true\"&gt;
      &lt;sequence&gt;
        &lt;any namespace=\"##any\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;
          &lt;!-- (0,unbounded) elements from (1,1) namespace --&gt;
      &lt;/sequence&gt;
      &lt;attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/&gt;
    &lt;/complexType&gt;
</pre>

A <code>DigestMethod</code> instance may be created by invoking the
{@link XMLSignatureFactory#newDigestMethod newDigestMethod} method
of the {@link XMLSignatureFactory} class.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newDigestMethod(String, DigestMethodParameterSpec)
"
      classrelation 4771074 // <generalisation>
	relation 4771074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4771074 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4771202 // <generalisation>
	relation 4771202 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4771202 // <generalisation>
	  b parent class_ref 1417602 // AlgorithmMethod
      end

      classrelation 4771330 // SHA1 (<unidirectional association>)
	relation 4771330 --->
	  a role_name "SHA1" init_value " \"http://www.w3.org/2000/09/xmldsig#sha1\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2000/09/xmldsig#sha1\">
SHA1</a> digest method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4771330 // SHA1 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4771458 // SHA256 (<unidirectional association>)
	relation 4771458 --->
	  a role_name "SHA256" init_value " \"http://www.w3.org/2001/04/xmlenc#sha256\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2001/04/xmlenc#sha256\">
SHA256</a> digest method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4771458 // SHA256 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4771586 // SHA512 (<unidirectional association>)
	relation 4771586 --->
	  a role_name "SHA512" init_value " \"http://www.w3.org/2001/04/xmlenc#sha512\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2001/04/xmlenc#sha512\">
SHA512</a> digest method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4771586 // SHA512 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4771714 // RIPEMD160 (<unidirectional association>)
	relation 4771714 --->
	  a role_name "RIPEMD160" init_value " \"http://www.w3.org/2001/04/xmlenc#ripemd160\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2001/04/xmlenc#ripemd160\">
RIPEMD-160</a> digest method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4771714 // RIPEMD160 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12023298 "getParameterSpec"
	public return_type class_ref 753282 // AlgorithmParameterSpec
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm-specific input parameters associated with this
<code>DigestMethod</code>.

<p>The returned parameters can be typecast to a {@link
DigestMethodParameterSpec} object.

@return the algorithm-specific parameters (may be <code>null</code> if
   not specified)
"
      end
    end

    class 1420674 "Manifest"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>Manifest</code> element as defined in
the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML Schema Definition is defined as:
<pre>{@code
<element name=\"Manifest\" type=\"ds:ManifestType\"/>
  <complexType name=\"ManifestType\">
    <sequence>
      <element ref=\"ds:Reference\" maxOccurs=\"unbounded\"/>
    </sequence>
    <attribute name=\"Id\" type=\"ID\" use=\"optional\"/>
  </complexType>
}</pre>

A <code>Manifest</code> instance may be created by invoking
one of the {@link XMLSignatureFactory#newManifest newManifest}
methods of the {@link XMLSignatureFactory} class; for example:

<pre>
  XMLSignatureFactory factory = XMLSignatureFactory.getInstance(\"DOM\");
  List references = Collections.singletonList(factory.newReference
      (\"#reference-1\", DigestMethod.SHA1));
  Manifest manifest = factory.newManifest(references, \"manifest-1\");
</pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newManifest(List)
@see XMLSignatureFactory#newManifest(List, String)
"
      classrelation 4771842 // <generalisation>
	relation 4771842 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4771842 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4771970 // TYPE (<unidirectional association>)
	relation 4771970 --->
	  a role_name "TYPE" init_value " \"http://www.w3.org/2000/09/xmldsig#Manifest\"" class_relation const_relation public
	    comment "
URI that identifies the <code>Manifest</code> element (this can be
specified as the value of the <code>type</code> parameter of the
{@link Reference} class to identify the referent's type).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4771970 // TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12023426 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Id of this <code>Manifest</code>.

@return the Id  of this <code>Manifest</code> (or <code>null</code>
   if not specified)
"
      end

      operation 12023554 "getReferences"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of one or more {@link Reference}s that are contained in this
<code>Manifest</code>.

@return an unmodifiable list of one or more <code>Reference</code>s
"
      end
    end

    class 1420802 "Reference"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the <code>Reference</code> element as defined in the
<a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML schema is defined as:
<code><pre>
&lt;element name=\"Reference\" type=\"ds:ReferenceType\"/&gt;
&lt;complexType name=\"ReferenceType\"&gt;
  &lt;sequence&gt;
    &lt;element ref=\"ds:Transforms\" minOccurs=\"0\"/&gt;
    &lt;element ref=\"ds:DigestMethod\"/&gt;
    &lt;element ref=\"ds:DigestValue\"/&gt;
  &lt;/sequence&gt;
  &lt;attribute name=\"Id\" type=\"ID\" use=\"optional\"/&gt;
  &lt;attribute name=\"URI\" type=\"anyURI\" use=\"optional\"/&gt;
  &lt;attribute name=\"Type\" type=\"anyURI\" use=\"optional\"/&gt;
&lt;/complexType&gt;

&lt;element name=\"DigestValue\" type=\"ds:DigestValueType\"/&gt;
&lt;simpleType name=\"DigestValueType\"&gt;
  &lt;restriction base=\"base64Binary\"/&gt;
&lt;/simpleType&gt;
</pre></code>

<p>A <code>Reference</code> instance may be created by invoking one of the
{@link XMLSignatureFactory#newReference newReference} methods of the
{@link XMLSignatureFactory} class; for example:

<pre>
  XMLSignatureFactory factory = XMLSignatureFactory.getInstance(\"DOM\");
  Reference ref = factory.newReference
    (\"http://www.ietf.org/rfc/rfc3275.txt\",
     factory.newDigestMethod(DigestMethod.SHA1, null));
</pre>

@author Sean Mullan
@author Erwin van der Koogh
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newReference(String, DigestMethod)
@see XMLSignatureFactory#newReference(String, DigestMethod, List, String, String)
"
      classrelation 4772098 // <generalisation>
	relation 4772098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4772098 // <generalisation>
	  b parent class_ref 1419394 // URIReference
      end

      classrelation 4772226 // <generalisation>
	relation 4772226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4772226 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      operation 12023682 "getTransforms"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of {@link Transform}s that are contained in this
<code>Reference</code>.

@return an unmodifiable list of <code>Transform</code>s
   (may be empty but never <code>null</code>)
"
      end

      operation 12023810 "getDigestMethod"
	public return_type class_ref 1420546 // DigestMethod
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the digest method of this <code>Reference</code>.

@return the digest method
"
      end

      operation 12023938 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the optional <code>Id</code> attribute of this
<code>Reference</code>, which permits this reference to be
referenced from elsewhere.

@return the <code>Id</code> attribute (may be <code>null</code> if not
   specified)
"
      end

      operation 12024066 "getDigestValue"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the digest value of this <code>Reference</code>.

@return the raw digest value, or <code>null</code> if this reference has
   not been digested yet. Each invocation of this method returns a new
   clone to protect against subsequent modification.
"
      end

      operation 12024194 "getCalculatedDigestValue"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the calculated digest value of this <code>Reference</code>
after a validation operation. This method is useful for debugging if
the reference fails to validate.

@return the calculated digest value, or <code>null</code> if this
   reference has not been validated yet. Each invocation of this method
   returns a new clone to protect against subsequent modification.
"
      end

      operation 12024322 "validate"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "validateContext" type class_ref 1420930 // XMLValidateContext
	nexceptions 1
	  exception class_ref 1421058 // XMLSignatureException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates this reference. This method verifies the digest of this
reference.

<p>This method only validates the reference the first time it is
invoked. On subsequent invocations, it returns a cached result.

@return <code>true</code> if this reference was validated successfully;
   <code>false</code> otherwise
@param validateContext the validating context
@throws NullPointerException if <code>validateContext</code> is
   <code>null</code>
@throws XMLSignatureException if an unexpected exception occurs while
   validating the reference
"
      end

      operation 12024450 "getDereferencedData"
	public return_type class_ref 1417730 // Data
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the dereferenced data, if
<a href=\"XMLSignContext.html#Supported Properties\">reference caching</a>
is enabled. This is the result of dereferencing the URI of this
reference during a validation or generation operation.

@return the dereferenced data, or <code>null</code> if reference
   caching is not enabled or this reference has not been generated or
   validated
"
      end

      operation 12024578 "getDigestInputStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the pre-digested input stream, if
<a href=\"XMLSignContext.html#Supported Properties\">reference caching</a>
is enabled. This is the input to the digest operation during a
validation or signing operation.

@return an input stream containing the pre-digested input, or
   <code>null</code> if reference caching is not enabled or this
   reference has not been generated or validated
"
      end
    end

    class 1420930 "XMLValidateContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Contains context information for validating XML Signatures. This interface
is primarily intended for type-safety.

<p>Note that <code>XMLValidateContext</code> instances can contain
information and state specific to the XML signature structure it is
used with. The results are unpredictable if an
<code>XMLValidateContext</code> is used with different signature structures
(for example, you should not use the same <code>XMLValidateContext</code>
instance to validate two different {@link XMLSignature} objects).
<p>
<b><a name=\"Supported Properties\"></a>Supported Properties</b>
<p>The following properties can be set by an application using the
{@link #setProperty setProperty} method.
<ul>
  <li><code>javax.xml.crypto.dsig.cacheReference</code>: value must be a
     {@link Boolean}. This property controls whether or not the
     {@link Reference#validate Reference.validate} method will cache the
     dereferenced content and pre-digested input for subsequent retrieval via
     the {@link Reference#getDereferencedData Reference.getDereferencedData}
     and {@link Reference#getDigestInputStream
     Reference.getDigestInputStream} methods. The default value if not
     specified is <code>Boolean.FALSE</code>.
</ul>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignature#validate(XMLValidateContext)
@see Reference#validate(XMLValidateContext)
"
      classrelation 4776066 // <generalisation>
	relation 4776066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4776066 // <generalisation>
	  b parent class_ref 1418370 // XMLCryptoContext
      end
    end

    class 1421058 "XMLSignatureException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates an exceptional condition that occurred during the XML
signature generation or validation process.

<p>An <code>XMLSignatureException</code> can contain a cause: another
throwable that caused this <code>XMLSignatureException</code> to get thrown.

@since 1.6
"
      classrelation 4775426 // <generalisation>
	relation 4775426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4775426 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2620418 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3438102491013869995L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4775554 // cause (<unidirectional association>)
	relation 4775554 --->
	  a role_name "cause" private
	    comment "
The throwable that caused this exception to get thrown, or null if this
exception was not caused by another throwable or if the causative
throwable is unknown.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4775554 // cause (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 12031106 "XMLSignatureException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>XMLSignatureException</code> with
<code>null</code> as its detail message.
"
      end

      operation 12031234 "XMLSignatureException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>XMLSignatureException</code> with the specified
detail message.

@param message the detail message
"
      end

      operation 12031362 "XMLSignatureException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>XMLSignatureException</code> with the
specified detail message and cause.
<p>Note that the detail message associated with
<code>cause</code> is <i>not</i> automatically incorporated in
this exception's detail message.

@param message the detail message
@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12031490 "XMLSignatureException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>XMLSignatureException</code> with the specified
cause and a detail message of
<code>(cause==null ? null : cause.toString())</code>
(which typically contains the class and detail message of
<code>cause</code>).

@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12031618 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this <code>XMLSignatureException</code> or
<code>null</code> if the cause is nonexistent or unknown.  (The
cause is the throwable that caused this
<code>XMLSignatureException</code> to get thrown.)

@return the cause of this <code>XMLSignatureException</code> or
        <code>null</code> if the cause is nonexistent or unknown.
"
      end

      operation 12031746 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>XMLSignatureException</code>, its backtrace and
the cause's backtrace to the standard error stream.
"
      end

      operation 12031874 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>XMLSignatureException</code>, its backtrace and
the cause's backtrace to the specified print stream.

@param s <code>PrintStream</code> to use for output
"
      end

      operation 12032002 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>XMLSignatureException</code>, its backtrace and
the cause's backtrace to the specified print writer.

@param s <code>PrintWriter</code> to use for output
"
      end
    end

    class 1421186 "SignatureMethod"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>SignatureMethod</code> element
as defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML Schema Definition is defined as:
<p>
<pre>
  &lt;element name=\"SignatureMethod\" type=\"ds:SignatureMethodType\"/&gt;
    &lt;complexType name=\"SignatureMethodType\" mixed=\"true\"&gt;
      &lt;sequence&gt;
        &lt;element name=\"HMACOutputLength\" minOccurs=\"0\" type=\"ds:HMACOutputLengthType\"/&gt;
        &lt;any namespace=\"##any\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;
          &lt;!-- (0,unbounded) elements from (1,1) namespace --&gt;
      &lt;/sequence&gt;
      &lt;attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/&gt;
    &lt;/complexType&gt;
</pre>

A <code>SignatureMethod</code> instance may be created by invoking the
{@link XMLSignatureFactory#newSignatureMethod newSignatureMethod} method
of the {@link XMLSignatureFactory} class.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newSignatureMethod(String, SignatureMethodParameterSpec)
"
      classrelation 4772354 // <generalisation>
	relation 4772354 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4772354 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4772482 // <generalisation>
	relation 4772482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4772482 // <generalisation>
	  b parent class_ref 1417602 // AlgorithmMethod
      end

      classrelation 4772610 // DSA_SHA1 (<unidirectional association>)
	relation 4772610 --->
	  a role_name "DSA_SHA1" init_value "
        \"http://www.w3.org/2000/09/xmldsig#dsa-sha1\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2000/09/xmldsig#dsa-sha1\">DSAwithSHA1</a>
(DSS) signature method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4772610 // DSA_SHA1 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4772738 // RSA_SHA1 (<unidirectional association>)
	relation 4772738 --->
	  a role_name "RSA_SHA1" init_value "
        \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\">RSAwithSHA1</a>
(PKCS #1) signature method algorithm URI.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4772738 // RSA_SHA1 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4772866 // HMAC_SHA1 (<unidirectional association>)
	relation 4772866 --->
	  a role_name "HMAC_SHA1" init_value "
        \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\"" class_relation const_relation public
	    comment "
The <a href=\"http://www.w3.org/2000/09/xmldsig#hmac-sha1\">HMAC-SHA1</a>
MAC signature method algorithm URI

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4772866 // HMAC_SHA1 (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12024706 "getParameterSpec"
	public return_type class_ref 753282 // AlgorithmParameterSpec
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm-specific input parameters of this
<code>SignatureMethod</code>.

<p>The returned parameters can be typecast to a {@link
SignatureMethodParameterSpec} object.

@return the algorithm-specific input parameters of this
   <code>SignatureMethod</code> (may be <code>null</code> if not
   specified)
"
      end
    end

    class 1421314 "SignatureProperties"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>SignatureProperties</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML Schema Definition is defined as:
<pre><code>
&lt;element name=\"SignatureProperties\" type=\"ds:SignaturePropertiesType\"/&gt;
  &lt;complexType name=\"SignaturePropertiesType\"&gt;
    &lt;sequence&gt;
      &lt;element ref=\"ds:SignatureProperty\" maxOccurs=\"unbounded\"/&gt;
    &lt;/sequence&gt;
    &lt;attribute name=\"Id\" type=\"ID\" use=\"optional\"/&gt;
  &lt;/complexType&gt;
</code></pre>

A <code>SignatureProperties</code> instance may be created by invoking the
{@link XMLSignatureFactory#newSignatureProperties newSignatureProperties}
method of the {@link XMLSignatureFactory} class; for example:

<pre>
  XMLSignatureFactory factory = XMLSignatureFactory.getInstance(\"DOM\");
  SignatureProperties properties =
     factory.newSignatureProperties(props, \"signature-properties-1\");
</pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newSignatureProperties(List, String)
@see SignatureProperty
"
      classrelation 4772994 // <generalisation>
	relation 4772994 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4772994 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4773122 // TYPE (<unidirectional association>)
	relation 4773122 --->
	  a role_name "TYPE" init_value "
        \"http://www.w3.org/2000/09/xmldsig#SignatureProperties\"" class_relation const_relation public
	    comment "
URI that identifies the <code>SignatureProperties</code> element (this
can be specified as the value of the <code>type</code> parameter of the
{@link Reference} class to identify the referent's type).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4773122 // TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12024834 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Id of this <code>SignatureProperties</code>.

@return the Id of this <code>SignatureProperties</code> (or
   <code>null</code> if not specified)
"
      end

      operation 12024962 "getProperties"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of one or more {@link SignatureProperty}s that are contained in
this <code>SignatureProperties</code>.

@return an unmodifiable list of one or more
   <code>SignatureProperty</code>s
"
      end
    end

    class 1421442 "SignatureProperty"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>SignatureProperty</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML Schema Definition is defined as:
<pre><code>
&lt;element name=\"SignatureProperty\" type=\"ds:SignaturePropertyType\"/&gt;
  &lt;complexType name=\"SignaturePropertyType\" mixed=\"true\"&gt;
    &lt;choice maxOccurs=\"unbounded\"&gt;
      &lt;any namespace=\"##other\" processContents=\"lax\"/&gt;
      &lt;!-- (1,1) elements from (1, unbounded) namespaces --&gt;
    &lt;/choice&gt;
    &lt;attribute name=\"Target\" type=\"anyURI\" use=\"required\"/&gt;
    &lt;attribute name=\"Id\" type=\"ID\" use=\"optional\"/&gt;
  &lt;/complexType&gt;
</code></pre>

A <code>SignatureProperty</code> instance may be created by invoking the
{@link XMLSignatureFactory#newSignatureProperty newSignatureProperty}
method of the {@link XMLSignatureFactory} class; for example:

<pre>
  XMLSignatureFactory factory = XMLSignatureFactory.getInstance(\"DOM\");
  SignatureProperty property = factory.newSignatureProperty
     (Collections.singletonList(content), \"#Signature-1\", \"TimeStamp\");
</pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newSignatureProperty(List, String, String)
@see SignatureProperties
"
      classrelation 4773250 // <generalisation>
	relation 4773250 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4773250 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      operation 12025090 "getTarget"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the target URI of this <code>SignatureProperty</code>.

@return the target URI of this <code>SignatureProperty</code> (never
   <code>null</code>)
"
      end

      operation 12025218 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Id of this <code>SignatureProperty</code>.

@return the Id of this <code>SignatureProperty</code> (or
   <code>null</code> if not specified)
"
      end

      operation 12025346 "getContent"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of one or more {@link XMLStructure}s that are contained in
this <code>SignatureProperty</code>. These represent additional
information items concerning the generation of the {@link XMLSignature}
(i.e. date/time stamp or serial numbers of cryptographic hardware used
in signature generation).

@return an unmodifiable list of one or more <code>XMLStructure</code>s
"
      end
    end

    class 1421570 "SignedInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An representation of the XML <code>SignedInfo</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
The XML Schema Definition is defined as:
<pre><code>
&lt;element name=\"SignedInfo\" type=\"ds:SignedInfoType\"/&gt;
&lt;complexType name=\"SignedInfoType\"&gt;
  &lt;sequence&gt;
    &lt;element ref=\"ds:CanonicalizationMethod\"/&gt;
    &lt;element ref=\"ds:SignatureMethod\"/&gt;
    &lt;element ref=\"ds:Reference\" maxOccurs=\"unbounded\"/&gt;
  &lt;/sequence&gt;
  &lt;attribute name=\"Id\" type=\"ID\" use=\"optional\"/&gt;
&lt;/complexType&gt;
</code></pre>

A <code>SignedInfo</code> instance may be created by invoking one of the
{@link XMLSignatureFactory#newSignedInfo newSignedInfo} methods of the
{@link XMLSignatureFactory} class.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newSignedInfo(CanonicalizationMethod, SignatureMethod, List)
@see XMLSignatureFactory#newSignedInfo(CanonicalizationMethod, SignatureMethod, List, String)
"
      classrelation 4773378 // <generalisation>
	relation 4773378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4773378 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      operation 12025474 "getCanonicalizationMethod"
	public return_type class_ref 1420162 // CanonicalizationMethod
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonicalization method of this <code>SignedInfo</code>.

@return the canonicalization method
"
      end

      operation 12025602 "getSignatureMethod"
	public return_type class_ref 1421186 // SignatureMethod
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signature method of this <code>SignedInfo</code>.

@return the signature method
"
      end

      operation 12025730 "getReferences"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList
unmodifiable list} of one or more {@link Reference}s.

@return an unmodifiable list of one or more {@link Reference}s
"
      end

      operation 12025858 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the optional <code>Id</code> attribute of this
<code>SignedInfo</code>.

@return the id (may be <code>null</code> if not specified)
"
      end

      operation 12025986 "getCanonicalizedData"
	public return_type class_ref 146434 // InputStream
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonicalized signed info bytes after a signing or
validation operation. This method is useful for debugging.

@return an <code>InputStream</code> containing the canonicalized bytes,
   or <code>null</code> if this <code>SignedInfo</code> has not been
   signed or validated yet
"
      end
    end

    class 1421698 "TransformService"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Service Provider Interface for transform and canonicalization algorithms.

<p>Each instance of <code>TransformService</code> supports a specific
transform or canonicalization algorithm and XML mechanism type. To create a
<code>TransformService</code>, call one of the static
{@link #getInstance getInstance} methods, passing in the algorithm URI and
XML mechanism type desired, for example:

<blockquote><code>
TransformService ts = TransformService.getInstance(Transform.XPATH2, \"DOM\");
</code></blockquote>

<p><code>TransformService</code> implementations are registered and loaded
using the {@link java.security.Provider} mechanism.  Each
<code>TransformService</code> service provider implementation should include
a <code>MechanismType</code> service attribute that identifies the XML
mechanism type that it supports. If the attribute is not specified,
\"DOM\" is assumed. For example, a service provider that supports the
XPath Filter 2 Transform and DOM mechanism would be specified in the
<code>Provider</code> subclass as:
<pre>
    put(\"TransformService.\" + Transform.XPATH2,
        \"org.example.XPath2TransformService\");
    put(\"TransformService.\" + Transform.XPATH2 + \" MechanismType\", \"DOM\");
</pre>
<code>TransformService</code> implementations that support the DOM
mechanism type must abide by the DOM interoperability requirements defined
in the
<a href=\"../../../../../technotes/guides/security/xmldsig/overview.html#DOM Mechanism Requirements\">
DOM Mechanism Requirements</a> section of the API overview. See the
<a href=\"../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
Service Providers</a> section of the API overview for a list of standard
mechanism types.
<p>
Once a <code>TransformService</code> has been created, it can be used
to process <code>Transform</code> or <code>CanonicalizationMethod</code>
objects. If the <code>Transform</code> or <code>CanonicalizationMethod</code>
exists in XML form (for example, when validating an existing
<code>XMLSignature</code>), the {@link #init(XMLStructure, XMLCryptoContext)}
method must be first called to initialize the transform and provide document
context (even if there are no parameters). Alternatively, if the
<code>Transform</code> or <code>CanonicalizationMethod</code> is being
created from scratch, the {@link #init(TransformParameterSpec)} method
is called to initialize the transform with parameters and the
{@link #marshalParams marshalParams} method is called to marshal the
parameters to XML and provide the transform with document context. Finally,
the {@link #transform transform} method is called to perform the
transformation.
<p>
<b>Concurrent Access</b>
<p>The static methods of this class are guaranteed to be thread-safe.
Multiple threads may concurrently invoke the static methods defined in this
class with no ill effects.

<p>However, this is not true for the non-static methods defined by this
class. Unless otherwise documented by a specific provider, threads that
need to access a single <code>TransformService</code> instance
concurrently should synchronize amongst themselves and provide the
necessary locking. Multiple threads each manipulating a different
<code>TransformService</code> instance need not synchronize.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      classrelation 4773762 // <realization>
	relation 4773762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4773762 // <realization>
	  b parent class_ref 1420290 // Transform
      end

      classrelation 4773890 // algorithm (<unidirectional association>)
	relation 4773890 --->
	  a role_name "algorithm" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4773890 // algorithm (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4774018 // mechanism (<unidirectional association>)
	relation 4774018 --->
	  a role_name "mechanism" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4774018 // mechanism (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4774146 // provider (<unidirectional association>)
	relation 4774146 --->
	  a role_name "provider" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4774146 // provider (<unidirectional association>)
	  b parent class_ref 509570 // Provider
      end

      operation 12027138 "TransformService"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for invocation by subclasses.
"
      end

      operation 12027266 "getInstance"
	class_operation public return_type class_ref 1421698 // TransformService
	nparams 2
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "mechanismType" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 509314 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>TransformService</code> that supports the specified
algorithm URI (ex: {@link Transform#XPATH2}) and mechanism type
(ex: DOM).

<p>This method uses the standard JCA provider lookup mechanism to
locate and instantiate a <code>TransformService</code> implementation
of the desired algorithm and <code>MechanismType</code> service
attribute. It traverses the list of registered security
<code>Provider</code>s, starting with the most preferred
<code>Provider</code>. A new <code>TransformService</code> object
from the first <code>Provider</code> that supports the specified
algorithm and mechanism type is returned.

<p> Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param algorithm the URI of the algorithm
@param mechanismType the type of the XML processing mechanism and
  representation
@return a new <code>TransformService</code>
@throws NullPointerException if <code>algorithm</code> or
  <code>mechanismType</code> is  <code>null</code>
@throws NoSuchAlgorithmException if no <code>Provider</code> supports a
  <code>TransformService</code> implementation for the specified
  algorithm and mechanism type
@see Provider
"
      end

      operation 12027394 "getInstance"
	class_operation public return_type class_ref 1421698 // TransformService
	nparams 3
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "mechanismType" type class_ref 128130 // String
	  param inout name "provider" type class_ref 509570 // Provider
	nexceptions 1
	  exception class_ref 509314 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>TransformService</code> that supports the specified
algorithm URI (ex: {@link Transform#XPATH2}) and mechanism type
(ex: DOM) as supplied by the specified provider. Note that the specified
<code>Provider</code> object does not have to be registered in the
provider list.

@param algorithm the URI of the algorithm
@param mechanismType the type of the XML processing mechanism and
  representation
@param provider the <code>Provider</code> object
@return a new <code>TransformService</code>
@throws NullPointerException if <code>provider</code>,
  <code>algorithm</code>, or <code>mechanismType</code> is
  <code>null</code>
@throws NoSuchAlgorithmException if a <code>TransformService</code>
  implementation for the specified algorithm and mechanism type is not
  available from the specified <code>Provider</code> object
@see Provider
"
      end

      operation 12027522 "getInstance"
	class_operation public return_type class_ref 1421698 // TransformService
	nparams 3
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "mechanismType" type class_ref 128130 // String
	  param inout name "provider" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 509314 // NoSuchAlgorithmException
	  exception class_ref 509442 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>TransformService</code> that supports the specified
algorithm URI (ex: {@link Transform#XPATH2}) and mechanism type
(ex: DOM) as supplied by the specified provider. The specified provider
must be registered in the security provider list.

<p>Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param algorithm the URI of the algorithm
@param mechanismType the type of the XML processing mechanism and
  representation
@param provider the string name of the provider
@return a new <code>TransformService</code>
@throws NoSuchProviderException if the specified provider is not
  registered in the security provider list
@throws NullPointerException if <code>provider</code>,
  <code>mechanismType</code>, or <code>algorithm</code> is
  <code>null</code>
@throws NoSuchAlgorithmException if a <code>TransformService</code>
  implementation for the specified algorithm and mechanism type is not
  available from the specified provider
@see Provider
"
      end

      class 1421826 "MechanismMapEntry"
	visibility private 
	nactuals 4
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4774274 // <realization>
	  relation 4774274 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4774274 // <realization>
	    b parent class_ref 192386 // Entry
	end

	classrelation 4774402 // mechanism (<unidirectional association>)
	  relation 4774402 --->
	    a role_name "mechanism" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4774402 // mechanism (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 4774530 // algorithm (<unidirectional association>)
	  relation 4774530 --->
	    a role_name "algorithm" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4774530 // algorithm (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 4774658 // key (<unidirectional association>)
	  relation 4774658 --->
	    a role_name "key" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4774658 // key (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 12027650 "MechanismMapEntry"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "algorithm" type class_ref 128130 // String
	    param inout name "mechanism" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12027778 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12027906 "getKey"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12028034 "getValue"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12028162 "setValue"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "value" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12028290 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 12028418 "getMechanismType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the mechanism type supported by this <code>TransformService</code>.

@return the mechanism type
"
      end

      operation 12028546 "getAlgorithm"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI of the algorithm supported by this
<code>TransformService</code>.

@return the algorithm URI
"
      end

      operation 12028674 "getProvider"
	public return_type class_ref 509570 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this <code>TransformService</code>.

@return the provider
"
      end

      operation 12028802 "init"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 1421954 // TransformParameterSpec
	nexceptions 1
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this <code>TransformService</code> with the specified
parameters.

<p>If the parameters exist in XML form, the
{@link #init(XMLStructure, XMLCryptoContext)} method should be used to
initialize the <code>TransformService</code>.

@param params the algorithm parameters (may be <code>null</code> if
  not required or optional)
@throws InvalidAlgorithmParameterException if the specified parameters
  are invalid for this algorithm
"
      end

      operation 12028930 "marshalParams"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "parent" type class_ref 1419650 // XMLStructure
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	nexceptions 1
	  exception class_ref 1418754 // MarshalException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marshals the algorithm-specific parameters. If there are no parameters
to be marshalled, this method returns without throwing an exception.

@param parent a mechanism-specific structure containing the parent
   node that the marshalled parameters should be appended to
@param context the <code>XMLCryptoContext</code> containing
   additional context (may be <code>null</code> if not applicable)
@throws ClassCastException if the type of <code>parent</code> or
   <code>context</code> is not compatible with this
   <code>TransformService</code>
@throws NullPointerException if <code>parent</code> is <code>null</code>
@throws MarshalException if the parameters cannot be marshalled
"
      end

      operation 12029058 "init"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "parent" type class_ref 1419650 // XMLStructure
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	nexceptions 1
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this <code>TransformService</code> with the specified
parameters and document context.

@param parent a mechanism-specific structure containing the parent
   structure
@param context the <code>XMLCryptoContext</code> containing
   additional context (may be <code>null</code> if not applicable)
@throws ClassCastException if the type of <code>parent</code> or
   <code>context</code> is not compatible with this
   <code>TransformService</code>
@throws NullPointerException if <code>parent</code> is <code>null</code>
@throws InvalidAlgorithmParameterException if the specified parameters
  are invalid for this algorithm
"
      end
    end

    class 1422082 "XMLObject"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>Object</code> element as defined in
the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
An <code>XMLObject</code> may contain any data and may include optional
MIME type, ID, and encoding attributes. The XML Schema Definition is
defined as:

<pre><code>
&lt;element name=\"Object\" type=\"ds:ObjectType\"/&gt;
&lt;complexType name=\"ObjectType\" mixed=\"true\"&gt;
  &lt;sequence minOccurs=\"0\" maxOccurs=\"unbounded\"&gt;
    &lt;any namespace=\"##any\" processContents=\"lax\"/&gt;
  &lt;/sequence&gt;
  &lt;attribute name=\"Id\" type=\"ID\" use=\"optional\"/&gt;
  &lt;attribute name=\"MimeType\" type=\"string\" use=\"optional\"/&gt;
  &lt;attribute name=\"Encoding\" type=\"anyURI\" use=\"optional\"/&gt;
&lt;/complexType&gt;
</code></pre>

A <code>XMLObject</code> instance may be created by invoking the
{@link XMLSignatureFactory#newXMLObject newXMLObject} method of the
{@link XMLSignatureFactory} class; for example:

<pre>
  XMLSignatureFactory fac = XMLSignatureFactory.getInstance(\"DOM\");
  List content = Collections.singletonList(fac.newManifest(references)));
  XMLObject object = factory.newXMLObject(content, \"object-1\", null, null);
</pre>

<p>Note that this class is named <code>XMLObject</code> rather than
<code>Object</code> to avoid naming clashes with the existing
{@link java.lang.Object java.lang.Object} class.

@author Sean Mullan
@author JSR 105 Expert Group
@author Joyce L. Leung
@since 1.6
@see XMLSignatureFactory#newXMLObject(List, String, String, String)
"
      classrelation 4774786 // <generalisation>
	relation 4774786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4774786 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4774914 // TYPE (<unidirectional association>)
	relation 4774914 --->
	  a role_name "TYPE" init_value " \"http://www.w3.org/2000/09/xmldsig#Object\"" class_relation const_relation public
	    comment "
URI that identifies the <code>Object</code> element (this can be
specified as the value of the <code>type</code> parameter of the
{@link Reference} class to identify the referent's type).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4774914 // TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12029186 "getContent"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of {@link XMLStructure}s contained in this <code>XMLObject</code>,
which represent elements from any namespace.

<p>If there is a public subclass representing the type of
<code>XMLStructure</code>, it is returned as an instance of that class
(ex: a <code>SignatureProperties</code> element would be returned
as an instance of {@link javax.xml.crypto.dsig.SignatureProperties}).

@return an unmodifiable list of <code>XMLStructure</code>s (may be empty
   but never <code>null</code>)
"
      end

      operation 12029314 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Id of this <code>XMLObject</code>.

@return the Id (or <code>null</code> if not specified)
"
      end

      operation 12029442 "getMimeType"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the mime type of this <code>XMLObject</code>. The
mime type is an optional attribute which describes the data within this
<code>XMLObject</code> (independent of its encoding).

@return the mime type (or <code>null</code> if not specified)
"
      end

      operation 12029570 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoding URI of this <code>XMLObject</code>. The encoding
URI identifies the method by which the object is encoded.

@return the encoding URI (or <code>null</code> if not specified)
"
      end
    end

    class 1422210 "XMLSignature"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>Signature</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
This class contains methods for signing and validating XML signatures
with behavior as defined by the W3C specification. The XML Schema Definition
is defined as:
<pre><code>
&lt;element name=\"Signature\" type=\"ds:SignatureType\"/&gt;
&lt;complexType name=\"SignatureType\"&gt;
   &lt;sequence&gt;
     &lt;element ref=\"ds:SignedInfo\"/&gt;
     &lt;element ref=\"ds:SignatureValue\"/&gt;
     &lt;element ref=\"ds:KeyInfo\" minOccurs=\"0\"/&gt;
     &lt;element ref=\"ds:Object\" minOccurs=\"0\" maxOccurs=\"unbounded\"/&gt;
   &lt;/sequence&gt;
   &lt;attribute name=\"Id\" type=\"ID\" use=\"optional\"/&gt;
&lt;/complexType&gt;
</code></pre>
<p>
An <code>XMLSignature</code> instance may be created by invoking one of the
{@link XMLSignatureFactory#newXMLSignature newXMLSignature} methods of the
{@link XMLSignatureFactory} class.

<p>If the contents of the underlying document containing the
<code>XMLSignature</code> are subsequently modified, the behavior is
undefined.

<p>Note that this class is named <code>XMLSignature</code> rather than
<code>Signature</code> to avoid naming clashes with the existing
{@link Signature java.security.Signature} class.

@see XMLSignatureFactory#newXMLSignature(SignedInfo, KeyInfo)
@see XMLSignatureFactory#newXMLSignature(SignedInfo, KeyInfo, List, String, String)
@author Joyce L. Leung
@author Sean Mullan
@author Erwin van der Koogh
@author JSR 105 Expert Group
@since 1.6
"
      classrelation 4775042 // <generalisation>
	relation 4775042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4775042 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4775170 // XMLNS (<unidirectional association>)
	relation 4775170 --->
	  a role_name "XMLNS" init_value " \"http://www.w3.org/2000/09/xmldsig#\"" class_relation const_relation public
	    comment "
The XML Namespace URI of the W3C Recommendation for XML-Signature
Syntax and Processing.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4775170 // XMLNS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12029698 "validate"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "validateContext" type class_ref 1420930 // XMLValidateContext
	nexceptions 1
	  exception class_ref 1421058 // XMLSignatureException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates the signature according to the
<a href=\"http://www.w3.org/TR/xmldsig-core/#sec-CoreValidation\">
core validation processing rules</a>. This method validates the
signature using the existing state, it does not unmarshal and
reinitialize the contents of the <code>XMLSignature</code> using the
location information specified in the context.

<p>This method only validates the signature the first time it is
invoked. On subsequent invocations, it returns a cached result.

@param validateContext the validating context
@return <code>true</code> if the signature passed core validation,
   otherwise <code>false</code>
@throws ClassCastException if the type of <code>validateContext</code>
   is not compatible with this <code>XMLSignature</code>
@throws NullPointerException if <code>validateContext</code> is
   <code>null</code>
@throws XMLSignatureException if an unexpected error occurs during
   validation that prevented the validation operation from completing
"
      end

      operation 12029826 "getKeyInfo"
	public return_type class_ref 1418242 // KeyInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key info of this <code>XMLSignature</code>.

@return the key info (may be <code>null</code> if not specified)
"
      end

      operation 12029954 "getSignedInfo"
	public return_type class_ref 1421570 // SignedInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signed info of this <code>XMLSignature</code>.

@return the signed info (never <code>null</code>)
"
      end

      operation 12030082 "getObjects"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of {@link XMLObject}s contained in this <code>XMLSignature</code>.

@return an unmodifiable list of <code>XMLObject</code>s (may be empty
   but never <code>null</code>)
"
      end

      operation 12030210 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the optional Id of this <code>XMLSignature</code>.

@return the Id (may be <code>null</code> if not specified)
"
      end

      class 1422338 "SignatureValue"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4775298 // <generalisation>
	  relation 4775298 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4775298 // <generalisation>
	    b parent class_ref 1419650 // XMLStructure
	end

	operation 12030722 "getId"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the optional <code>Id</code> attribute of this
<code>SignatureValue</code>, which permits this element to be
referenced from elsewhere.

@return the <code>Id</code> attribute (may be <code>null</code> if
   not specified)
"
	end

	operation 12030850 "getValue"
	  public explicit_return_type "byte"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the signature value of this <code>SignatureValue</code>.

@return the signature value (may be <code>null</code> if the
   <code>XMLSignature</code> has not been signed yet). Each
   invocation of this method returns a new clone of the array to
   prevent subsequent modification.
"
	end

	operation 12030978 "validate"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "validateContext" type class_ref 1420930 // XMLValidateContext
	  nexceptions 1
	    exception class_ref 1421058 // XMLSignatureException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Validates the signature value. This method performs a
cryptographic validation of the signature calculated over the
<code>SignedInfo</code> of the <code>XMLSignature</code>.

<p>This method only validates the signature the first
time it is invoked. On subsequent invocations, it returns a cached
result.

@return <code>true</code> if the signature was
   validated successfully; <code>false</code> otherwise
@param validateContext the validating context
@throws NullPointerException if <code>validateContext</code> is
   <code>null</code>
@throws XMLSignatureException if an unexpected exception occurs while
   validating the signature
"
	end
      end

      operation 12030338 "getSignatureValue"
	public return_type class_ref 1422338 // SignatureValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signature value of this <code>XMLSignature</code>.

@return the signature value
"
      end

      operation 12030466 "sign"
	public explicit_return_type "void"
	nparams 1
	  param inout name "signContext" type class_ref 1422466 // XMLSignContext
	nexceptions 2
	  exception class_ref 1418754 // MarshalException
	  exception class_ref 1421058 // XMLSignatureException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Signs this <code>XMLSignature</code>.

<p>If this method throws an exception, this <code>XMLSignature</code> and
the <code>signContext</code> parameter will be left in the state that
it was in prior to the invocation.

@param signContext the signing context
@throws ClassCastException if the type of <code>signContext</code> is
   not compatible with this <code>XMLSignature</code>
@throws NullPointerException if <code>signContext</code> is
   <code>null</code>
@throws MarshalException if an exception occurs while marshalling
@throws XMLSignatureException if an unexpected exception occurs while
   generating the signature
"
      end

      operation 12030594 "getKeySelectorResult"
	public return_type class_ref 1418114 // KeySelectorResult
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of the {@link KeySelector}, if specified, after
this <code>XMLSignature</code> has been signed or validated.

@return the key selector result, or <code>null</code> if a key
   selector has not been specified or this <code>XMLSignature</code>
   has not been signed or validated
"
      end
    end

    class 1422466 "XMLSignContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Contains context information for generating XML Signatures. This interface
is primarily intended for type-safety.

<p>Note that <code>XMLSignContext</code> instances can contain
information and state specific to the XML signature structure it is
used with. The results are unpredictable if an
<code>XMLSignContext</code> is used with different signature structures
(for example, you should not use the same <code>XMLSignContext</code>
instance to sign two different {@link XMLSignature} objects).
<p>
<b><a name=\"Supported Properties\"></a>Supported Properties</b>
<p>The following properties can be set using the
{@link #setProperty setProperty} method.
<ul>
  <li><code>javax.xml.crypto.dsig.cacheReference</code>: value must be a
     {@link Boolean}. This property controls whether or not the digested
     {@link Reference} objects will cache the dereferenced content and
     pre-digested input for subsequent retrieval via the
     {@link Reference#getDereferencedData Reference.getDereferencedData} and
     {@link Reference#getDigestInputStream Reference.getDigestInputStream}
     methods. The default value if not specified is
     <code>Boolean.FALSE</code>.
</ul>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignature#sign(XMLSignContext)
"
      classrelation 4775938 // <generalisation>
	relation 4775938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4775938 // <generalisation>
	  b parent class_ref 1418370 // XMLCryptoContext
      end
    end

    class 1422594 "XMLSignatureFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A factory for creating {@link XMLSignature} objects from scratch or
for unmarshalling an <code>XMLSignature</code> object from a corresponding
XML representation.

<h2>XMLSignatureFactory Type</h2>

<p>Each instance of <code>XMLSignatureFactory</code> supports a specific
XML mechanism type. To create an <code>XMLSignatureFactory</code>, call one
of the static {@link #getInstance getInstance} methods, passing in the XML
mechanism type desired, for example:

<blockquote><code>
XMLSignatureFactory factory = XMLSignatureFactory.getInstance(\"DOM\");
</code></blockquote>

<p>The objects that this factory produces will be based
on DOM and abide by the DOM interoperability requirements as defined in the
<a href=\"../../../../../technotes/guides/security/xmldsig/overview.html#DOM Mechanism Requirements\">
DOM Mechanism Requirements</a> section of the API overview. See the
<a href=\"../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
Service Providers</a> section of the API overview for a list of standard
mechanism types.

<p><code>XMLSignatureFactory</code> implementations are registered and loaded
using the {@link java.security.Provider} mechanism.
For example, a service provider that supports the
DOM mechanism would be specified in the <code>Provider</code> subclass as:
<pre>
    put(\"XMLSignatureFactory.DOM\", \"org.example.DOMXMLSignatureFactory\");
</pre>

<p>An implementation MUST minimally support the default mechanism type: DOM.

<p>Note that a caller must use the same <code>XMLSignatureFactory</code>
instance to create the <code>XMLStructure</code>s of a particular
<code>XMLSignature</code> that is to be generated. The behavior is
undefined if <code>XMLStructure</code>s from different providers or
different mechanism types are used together.

<p>Also, the <code>XMLStructure</code>s that are created by this factory
may contain state specific to the <code>XMLSignature</code> and are not
intended to be reusable.

<h2>Creating XMLSignatures from scratch</h2>

<p>Once the <code>XMLSignatureFactory</code> has been created, objects
can be instantiated by calling the appropriate method. For example, a
{@link Reference} instance may be created by invoking one of the
{@link #newReference newReference} methods.

<h2>Unmarshalling XMLSignatures from XML</h2>

<p>Alternatively, an <code>XMLSignature</code> may be created from an
existing XML representation by invoking the {@link #unmarshalXMLSignature
unmarshalXMLSignature} method and passing it a mechanism-specific
{@link XMLValidateContext} instance containing the XML content:

<pre>
DOMValidateContext context = new DOMValidateContext(key, signatureElement);
XMLSignature signature = factory.unmarshalXMLSignature(context);
</pre>

Each <code>XMLSignatureFactory</code> must support the required
<code>XMLValidateContext</code> types for that factory type, but may support
others. A DOM <code>XMLSignatureFactory</code> must support {@link
DOMValidateContext} objects.

<h2>Signing and marshalling XMLSignatures to XML</h2>

Each <code>XMLSignature</code> created by the factory can also be
marshalled to an XML representation and signed, by invoking the
{@link XMLSignature#sign sign} method of the
{@link XMLSignature} object and passing it a mechanism-specific
{@link XMLSignContext} object containing the signing key and
marshalling parameters (see {@link DOMSignContext}).
For example:

<pre>
   DOMSignContext context = new DOMSignContext(privateKey, document);
   signature.sign(context);
</pre>

<b>Concurrent Access</b>
<p>The static methods of this class are guaranteed to be thread-safe.
Multiple threads may concurrently invoke the static methods defined in this
class with no ill effects.

<p>However, this is not true for the non-static methods defined by this
class. Unless otherwise documented by a specific provider, threads that
need to access a single <code>XMLSignatureFactory</code> instance
concurrently should synchronize amongst themselves and provide the
necessary locking. Multiple threads each manipulating a different
<code>XMLSignatureFactory</code> instance need not synchronize.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      classrelation 4775682 // mechanismType (<unidirectional association>)
	relation 4775682 --->
	  a role_name "mechanismType" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4775682 // mechanismType (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4775810 // provider (<unidirectional association>)
	relation 4775810 --->
	  a role_name "provider" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4775810 // provider (<unidirectional association>)
	  b parent class_ref 509570 // Provider
      end

      operation 12032130 "XMLSignatureFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for invocation by subclasses.
"
      end

      operation 12032258 "getInstance"
	class_operation public return_type class_ref 1422594 // XMLSignatureFactory
	nparams 1
	  param inout name "mechanismType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>XMLSignatureFactory</code> that supports the
specified XML processing mechanism and representation type (ex: \"DOM\").

<p>This method uses the standard JCA provider lookup mechanism to
locate and instantiate an <code>XMLSignatureFactory</code>
implementation of the desired mechanism type. It traverses the list of
registered security <code>Provider</code>s, starting with the most
preferred <code>Provider</code>.  A new <code>XMLSignatureFactory</code>
object from the first <code>Provider</code> that supports the specified
mechanism is returned.

<p>Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param mechanismType the type of the XML processing mechanism and
   representation. See the <a
   href=\"../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
   Service Providers</a> section of the API overview for a list of
   standard mechanism types.
@return a new <code>XMLSignatureFactory</code>
@throws NullPointerException if <code>mechanismType</code> is
   <code>null</code>
@throws NoSuchMechanismException if no <code>Provider</code> supports an
   <code>XMLSignatureFactory</code> implementation for the specified
   mechanism
@see Provider
"
      end

      operation 12032386 "getInstance"
	class_operation public return_type class_ref 1422594 // XMLSignatureFactory
	nparams 2
	  param inout name "mechanismType" type class_ref 128130 // String
	  param inout name "provider" type class_ref 509570 // Provider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>XMLSignatureFactory</code> that supports the
requested XML processing mechanism and representation type (ex: \"DOM\"),
as supplied by the specified provider. Note that the specified
<code>Provider</code> object does not have to be registered in the
provider list.

@param mechanismType the type of the XML processing mechanism and
   representation. See the <a
   href=\"../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
   Service Providers</a> section of the API overview for a list of
   standard mechanism types.
@param provider the <code>Provider</code> object
@return a new <code>XMLSignatureFactory</code>
@throws NullPointerException if <code>provider</code> or
   <code>mechanismType</code> is <code>null</code>
@throws NoSuchMechanismException if an <code>XMLSignatureFactory</code>
  implementation for the specified mechanism is not available
  from the specified <code>Provider</code> object
@see Provider
"
      end

      operation 12032514 "getInstance"
	class_operation public return_type class_ref 1422594 // XMLSignatureFactory
	nparams 2
	  param inout name "mechanismType" type class_ref 128130 // String
	  param inout name "provider" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 509442 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>XMLSignatureFactory</code> that supports the
requested XML processing mechanism and representation type (ex: \"DOM\"),
as supplied by the specified provider. The specified provider must be
registered in the security provider list.

<p>Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param mechanismType the type of the XML processing mechanism and
   representation. See the <a
   href=\"../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
   Service Providers</a> section of the API overview for a list of
   standard mechanism types.
@param provider the string name of the provider
@return a new <code>XMLSignatureFactory</code>
@throws NoSuchProviderException if the specified provider is not
   registered in the security provider list
@throws NullPointerException if <code>provider</code> or
   <code>mechanismType</code> is <code>null</code>
@throws NoSuchMechanismException if an <code>XMLSignatureFactory</code>
   implementation for the specified mechanism is not
   available from the specified provider
@see Provider
"
      end

      operation 12032642 "getInstance"
	class_operation public return_type class_ref 1422594 // XMLSignatureFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>XMLSignatureFactory</code> that supports the
default XML processing mechanism and representation type (\"DOM\").

<p>This method uses the standard JCA provider lookup mechanism to
locate and instantiate an <code>XMLSignatureFactory</code>
implementation of the default mechanism type. It traverses the list of
registered security <code>Provider</code>s, starting with the most
preferred <code>Provider</code>.  A new <code>XMLSignatureFactory</code>
object from the first <code>Provider</code> that supports the DOM
mechanism is returned.

<p>Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@return a new <code>XMLSignatureFactory</code>
@throws NoSuchMechanismException if no <code>Provider</code> supports an
   <code>XMLSignatureFactory</code> implementation for the DOM
   mechanism
@see Provider
"
      end

      operation 12032770 "getMechanismType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of the XML processing mechanism and representation
supported by this <code>XMLSignatureFactory</code> (ex: \"DOM\").

@return the XML processing mechanism type supported by this
   <code>XMLSignatureFactory</code>
"
      end

      operation 12032898 "getProvider"
	public return_type class_ref 509570 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this <code>XMLSignatureFactory</code>.

@return the provider of this <code>XMLSignatureFactory</code>
"
      end

      operation 12033026 "newXMLSignature"
	abstract public return_type class_ref 1422210 // XMLSignature
	nparams 2
	  param inout name "si" type class_ref 1421570 // SignedInfo
	  param inout name "ki" type class_ref 1418242 // KeyInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>XMLSignature</code> and initializes it with the contents
of the specified <code>SignedInfo</code> and <code>KeyInfo</code>
objects.

@param si the signed info
@param ki the key info (may be <code>null</code>)
@return an <code>XMLSignature</code>
@throws NullPointerException if <code>si</code> is <code>null</code>
"
      end

      operation 12033154 "newXMLSignature"
	abstract public return_type class_ref 1422210 // XMLSignature
	nparams 5
	  param inout name "si" type class_ref 1421570 // SignedInfo
	  param inout name "ki" type class_ref 1418242 // KeyInfo
	  param inout name "objects" type class_ref 175362 // List
	  param inout name "id" type class_ref 128130 // String
	  param inout name "signatureValueId" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates an <code>XMLSignature</code> and initializes it with the
specified parameters.

@param si the signed info
@param ki the key info (may be <code>null</code>)
@param objects a list of {@link XMLObject}s (may be empty or
   <code>null</code>)
@param id the Id (may be <code>null</code>)
@param signatureValueId the SignatureValue Id (may be <code>null</code>)
@return an <code>XMLSignature</code>
@throws NullPointerException if <code>si</code> is <code>null</code>
@throws ClassCastException if any of the <code>objects</code> are not of
   type <code>XMLObject</code>
"
      end

      operation 12033282 "newReference"
	abstract public return_type class_ref 1420802 // Reference
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "dm" type class_ref 1420546 // DigestMethod
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Reference</code> with the specified URI and digest
method.

@param uri the reference URI (may be <code>null</code>)
@param dm the digest method
@return a <code>Reference</code>
@throws IllegalArgumentException if <code>uri</code> is not RFC 2396
   compliant
@throws NullPointerException if <code>dm</code> is <code>null</code>
"
      end

      operation 12033410 "newReference"
	abstract public return_type class_ref 1420802 // Reference
	nparams 5
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "dm" type class_ref 1420546 // DigestMethod
	  param inout name "transforms" type class_ref 175362 // List
	  param inout name "type" type class_ref 128130 // String
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>Reference</code> with the specified parameters.

@param uri the reference URI (may be <code>null</code>)
@param dm the digest method
@param transforms a list of {@link Transform}s. The list is defensively
   copied to protect against subsequent modification. May be
   <code>null</code> or empty.
@param type the reference type, as a URI (may be <code>null</code>)
@param id the reference ID (may be <code>null</code>)
@return a <code>Reference</code>
@throws ClassCastException if any of the <code>transforms</code> are
   not of type <code>Transform</code>
@throws IllegalArgumentException if <code>uri</code> is not RFC 2396
   compliant
@throws NullPointerException if <code>dm</code> is <code>null</code>
"
      end

      operation 12033538 "newReference"
	abstract public return_type class_ref 1420802 // Reference
	nparams 6
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "dm" type class_ref 1420546 // DigestMethod
	  param inout name "transforms" type class_ref 175362 // List
	  param inout name "type" type class_ref 128130 // String
	  param inout name "id" type class_ref 128130 // String
	  param inout name "digestValue" explicit_type "byte"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>Reference</code> with the specified parameters and
pre-calculated digest value.

<p>This method is useful when the digest value of a
<code>Reference</code> has been previously computed. See for example,
the
<a href=\"http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dss\">
OASIS-DSS (Digital Signature Services)</a> specification.

@param uri the reference URI (may be <code>null</code>)
@param dm the digest method
@param transforms a list of {@link Transform}s. The list is defensively
   copied to protect against subsequent modification. May be
   <code>null</code> or empty.
@param type the reference type, as a URI (may be <code>null</code>)
@param id the reference ID (may be <code>null</code>)
@param digestValue the digest value. The array is cloned to protect
   against subsequent modification.
@return a <code>Reference</code>
@throws ClassCastException if any of the <code>transforms</code> are
   not of type <code>Transform</code>
@throws IllegalArgumentException if <code>uri</code> is not RFC 2396
   compliant
@throws NullPointerException if <code>dm</code> or
   <code>digestValue</code> is <code>null</code>
"
      end

      operation 12033666 "newReference"
	abstract public return_type class_ref 1420802 // Reference
	nparams 7
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "dm" type class_ref 1420546 // DigestMethod
	  param inout name "appliedTransforms" type class_ref 175362 // List
	  param inout name "result" type class_ref 1417730 // Data
	  param inout name "transforms" type class_ref 175362 // List
	  param inout name "type" type class_ref 128130 // String
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>Reference</code> with the specified parameters.

<p>This method is useful when a list of transforms have already been
applied to the <code>Reference</code>. See for example,
the
<a href=\"http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dss\">
OASIS-DSS (Digital Signature Services)</a> specification.

<p>When an <code>XMLSignature</code> containing this reference is
generated, the specified <code>transforms</code> (if non-null) are
applied to the specified <code>result</code>. The
<code>Transforms</code> element of the resulting <code>Reference</code>
element is set to the concatenation of the
<code>appliedTransforms</code> and <code>transforms</code>.

@param uri the reference URI (may be <code>null</code>)
@param dm the digest method
@param appliedTransforms a list of {@link Transform}s that have
   already been applied. The list is defensively
   copied to protect against subsequent modification. The list must
   contain at least one entry.
@param result the result of processing the sequence of
   <code>appliedTransforms</code>
@param transforms a list of {@link Transform}s that are to be applied
   when generating the signature. The list is defensively copied to
   protect against subsequent modification. May be <code>null</code>
   or empty.
@param type the reference type, as a URI (may be <code>null</code>)
@param id the reference ID (may be <code>null</code>)
@return a <code>Reference</code>
@throws ClassCastException if any of the transforms (in either list)
   are not of type <code>Transform</code>
@throws IllegalArgumentException if <code>uri</code> is not RFC 2396
   compliant or <code>appliedTransforms</code> is empty
@throws NullPointerException if <code>dm</code>,
   <code>appliedTransforms</code> or <code>result</code> is
   <code>null</code>
"
      end

      operation 12033794 "newSignedInfo"
	abstract public return_type class_ref 1421570 // SignedInfo
	nparams 3
	  param inout name "cm" type class_ref 1420162 // CanonicalizationMethod
	  param inout name "sm" type class_ref 1421186 // SignatureMethod
	  param inout name "references" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>SignedInfo</code> with the specified canonicalization
and signature methods, and list of one or more references.

@param cm the canonicalization method
@param sm the signature method
@param references a list of one or more {@link Reference}s. The list is
   defensively copied to protect against subsequent modification.
@return a <code>SignedInfo</code>
@throws ClassCastException if any of the references are not of
   type <code>Reference</code>
@throws IllegalArgumentException if <code>references</code> is empty
@throws NullPointerException if any of the parameters
   are <code>null</code>
"
      end

      operation 12033922 "newSignedInfo"
	abstract public return_type class_ref 1421570 // SignedInfo
	nparams 4
	  param inout name "cm" type class_ref 1420162 // CanonicalizationMethod
	  param inout name "sm" type class_ref 1421186 // SignatureMethod
	  param inout name "references" type class_ref 175362 // List
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>SignedInfo</code> with the specified parameters.

@param cm the canonicalization method
@param sm the signature method
@param references a list of one or more {@link Reference}s. The list is
   defensively copied to protect against subsequent modification.
@param id the id (may be <code>null</code>)
@return a <code>SignedInfo</code>
@throws ClassCastException if any of the references are not of
   type <code>Reference</code>
@throws IllegalArgumentException if <code>references</code> is empty
@throws NullPointerException if <code>cm</code>, <code>sm</code>, or
   <code>references</code> are <code>null</code>
"
      end

      operation 12034050 "newXMLObject"
	abstract public return_type class_ref 1422082 // XMLObject
	nparams 4
	  param inout name "content" type class_ref 175362 // List
	  param inout name "id" type class_ref 128130 // String
	  param inout name "mimeType" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment " Object factory methods

Creates an <code>XMLObject</code> from the specified parameters.

@param content a list of {@link XMLStructure}s. The list
   is defensively copied to protect against subsequent modification.
   May be <code>null</code> or empty.
@param id the Id (may be <code>null</code>)
@param mimeType the mime type (may be <code>null</code>)
@param encoding the encoding (may be <code>null</code>)
@return an <code>XMLObject</code>
@throws ClassCastException if <code>content</code> contains any
   entries that are not of type {@link XMLStructure}
"
      end

      operation 12034178 "newManifest"
	abstract public return_type class_ref 1420674 // Manifest
	nparams 1
	  param inout name "references" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>Manifest</code> containing the specified
list of {@link Reference}s.

@param references a list of one or more <code>Reference</code>s. The list
   is defensively copied to protect against subsequent modification.
@return a <code>Manifest</code>
@throws NullPointerException if <code>references</code> is
   <code>null</code>
@throws IllegalArgumentException if <code>references</code> is empty
@throws ClassCastException if <code>references</code> contains any
   entries that are not of type {@link Reference}
"
      end

      operation 12034306 "newManifest"
	abstract public return_type class_ref 1420674 // Manifest
	nparams 2
	  param inout name "references" type class_ref 175362 // List
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>Manifest</code> containing the specified
list of {@link Reference}s and optional id.

@param references a list of one or more <code>Reference</code>s. The list
   is defensively copied to protect against subsequent modification.
@param id the id (may be <code>null</code>)
@return a <code>Manifest</code>
@throws NullPointerException if <code>references</code> is
   <code>null</code>
@throws IllegalArgumentException if <code>references</code> is empty
@throws ClassCastException if <code>references</code> contains any
   entries that are not of type {@link Reference}
"
      end

      operation 12034434 "newSignatureProperty"
	abstract public return_type class_ref 1421442 // SignatureProperty
	nparams 3
	  param inout name "content" type class_ref 175362 // List
	  param inout name "target" type class_ref 128130 // String
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>SignatureProperty</code> containing the specified
list of {@link XMLStructure}s, target URI and optional id.

@param content a list of one or more <code>XMLStructure</code>s. The list
   is defensively copied to protect against subsequent modification.
@param target the target URI of the Signature that this property applies
   to
@param id the id (may be <code>null</code>)
@return a <code>SignatureProperty</code>
@throws NullPointerException if <code>content</code> or
   <code>target</code> is <code>null</code>
@throws IllegalArgumentException if <code>content</code> is empty
@throws ClassCastException if <code>content</code> contains any
   entries that are not of type {@link XMLStructure}
"
      end

      operation 12034562 "newSignatureProperties"
	abstract public return_type class_ref 1421314 // SignatureProperties
	nparams 2
	  param inout name "properties" type class_ref 175362 // List
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>SignatureProperties</code> containing the specified
list of {@link SignatureProperty}s and optional id.

@param properties a list of one or more <code>SignatureProperty</code>s.
   The list is defensively copied to protect against subsequent
   modification.
@param id the id (may be <code>null</code>)
@return a <code>SignatureProperties</code>
@throws NullPointerException if <code>properties</code>
   is <code>null</code>
@throws IllegalArgumentException if <code>properties</code> is empty
@throws ClassCastException if <code>properties</code> contains any
   entries that are not of type {@link SignatureProperty}
"
      end

      operation 12034690 "newDigestMethod"
	abstract public return_type class_ref 1420546 // DigestMethod
	nparams 2
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "params" type class_ref 1422722 // DigestMethodParameterSpec
	nexceptions 2
	  exception class_ref 509314 // NoSuchAlgorithmException
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Algorithm factory methods

Creates a <code>DigestMethod</code> for the specified algorithm URI
and parameters.

@param algorithm the URI identifying the digest algorithm
@param params algorithm-specific digest parameters (may be
   <code>null</code>)
@return the <code>DigestMethod</code>
@throws InvalidAlgorithmParameterException if the specified parameters
   are inappropriate for the requested algorithm
@throws NoSuchAlgorithmException if an implementation of the
   specified algorithm cannot be found
@throws NullPointerException if <code>algorithm</code> is
   <code>null</code>
"
      end

      operation 12034818 "newSignatureMethod"
	abstract public return_type class_ref 1421186 // SignatureMethod
	nparams 2
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "params" type class_ref 1422850 // SignatureMethodParameterSpec
	nexceptions 2
	  exception class_ref 509314 // NoSuchAlgorithmException
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>SignatureMethod</code> for the specified algorithm URI
and parameters.

@param algorithm the URI identifying the signature algorithm
@param params algorithm-specific signature parameters (may be
   <code>null</code>)
@return the <code>SignatureMethod</code>
@throws InvalidAlgorithmParameterException if the specified parameters
   are inappropriate for the requested algorithm
@throws NoSuchAlgorithmException if an implementation of the
   specified algorithm cannot be found
@throws NullPointerException if <code>algorithm</code> is
   <code>null</code>
"
      end

      operation 12034946 "newTransform"
	abstract public return_type class_ref 1420290 // Transform
	nparams 2
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "params" type class_ref 1421954 // TransformParameterSpec
	nexceptions 2
	  exception class_ref 509314 // NoSuchAlgorithmException
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Transform</code> for the specified algorithm URI
and parameters.

@param algorithm the URI identifying the transform algorithm
@param params algorithm-specific transform parameters (may be
   <code>null</code>)
@return the <code>Transform</code>
@throws InvalidAlgorithmParameterException if the specified parameters
   are inappropriate for the requested algorithm
@throws NoSuchAlgorithmException if an implementation of the
   specified algorithm cannot be found
@throws NullPointerException if <code>algorithm</code> is
   <code>null</code>
"
      end

      operation 12035074 "newTransform"
	abstract public return_type class_ref 1420290 // Transform
	nparams 2
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "params" type class_ref 1419650 // XMLStructure
	nexceptions 2
	  exception class_ref 509314 // NoSuchAlgorithmException
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Transform</code> for the specified algorithm URI
and parameters. The parameters are specified as a mechanism-specific
<code>XMLStructure</code> (ex: {@link DOMStructure}). This method is
useful when the parameters are in XML form or there is no standard
class for specifying the parameters.

@param algorithm the URI identifying the transform algorithm
@param params a mechanism-specific XML structure from which to
  unmarshal the parameters from (may be <code>null</code> if
  not required or optional)
@return the <code>Transform</code>
@throws ClassCastException if the type of <code>params</code> is
  inappropriate for this <code>XMLSignatureFactory</code>
@throws InvalidAlgorithmParameterException if the specified parameters
   are inappropriate for the requested algorithm
@throws NoSuchAlgorithmException if an implementation of the
   specified algorithm cannot be found
@throws NullPointerException if <code>algorithm</code> is
   <code>null</code>
"
      end

      operation 12035202 "newCanonicalizationMethod"
	abstract public return_type class_ref 1420162 // CanonicalizationMethod
	nparams 2
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "params" type class_ref 1422978 // C14NMethodParameterSpec
	nexceptions 2
	  exception class_ref 509314 // NoSuchAlgorithmException
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>CanonicalizationMethod</code> for the specified
algorithm URI and parameters.

@param algorithm the URI identifying the canonicalization algorithm
@param params algorithm-specific canonicalization parameters (may be
   <code>null</code>)
@return the <code>CanonicalizationMethod</code>
@throws InvalidAlgorithmParameterException if the specified parameters
   are inappropriate for the requested algorithm
@throws NoSuchAlgorithmException if an implementation of the
   specified algorithm cannot be found
@throws NullPointerException if <code>algorithm</code> is
   <code>null</code>
"
      end

      operation 12035330 "newCanonicalizationMethod"
	abstract public return_type class_ref 1420162 // CanonicalizationMethod
	nparams 2
	  param inout name "algorithm" type class_ref 128130 // String
	  param inout name "params" type class_ref 1419650 // XMLStructure
	nexceptions 2
	  exception class_ref 509314 // NoSuchAlgorithmException
	  exception class_ref 1013762 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>CanonicalizationMethod</code> for the specified
algorithm URI and parameters. The parameters are specified as a
mechanism-specific <code>XMLStructure</code> (ex: {@link DOMStructure}).
This method is useful when the parameters are in XML form or there is
no standard class for specifying the parameters.

@param algorithm the URI identifying the canonicalization algorithm
@param params a mechanism-specific XML structure from which to
  unmarshal the parameters from (may be <code>null</code> if
  not required or optional)
@return the <code>CanonicalizationMethod</code>
@throws ClassCastException if the type of <code>params</code> is
  inappropriate for this <code>XMLSignatureFactory</code>
@throws InvalidAlgorithmParameterException if the specified parameters
   are inappropriate for the requested algorithm
@throws NoSuchAlgorithmException if an implementation of the
   specified algorithm cannot be found
@throws NullPointerException if <code>algorithm</code> is
   <code>null</code>
"
      end

      operation 12035458 "getKeyInfoFactory"
	public return_type class_ref 1423106 // KeyInfoFactory
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>KeyInfoFactory</code> that creates <code>KeyInfo</code>
objects. The returned <code>KeyInfoFactory</code> has the same
mechanism type and provider as this <code>XMLSignatureFactory</code>.

@return a <code>KeyInfoFactory</code>
@throws NoSuchMechanismException if a <code>KeyFactory</code>
   implementation with the same mechanism type and provider
   is not available
"
      end

      operation 12035586 "unmarshalXMLSignature"
	abstract public return_type class_ref 1422210 // XMLSignature
	nparams 1
	  param inout name "context" type class_ref 1420930 // XMLValidateContext
	nexceptions 1
	  exception class_ref 1418754 // MarshalException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unmarshals a new <code>XMLSignature</code> instance from a
mechanism-specific <code>XMLValidateContext</code> instance.

@param context a mechanism-specific context from which to unmarshal the
   signature from
@return the <code>XMLSignature</code>
@throws NullPointerException if <code>context</code> is
   <code>null</code>
@throws ClassCastException if the type of <code>context</code> is
   inappropriate for this factory
@throws MarshalException if an unrecoverable exception occurs
   during unmarshalling
"
      end

      operation 12035714 "unmarshalXMLSignature"
	abstract public return_type class_ref 1422210 // XMLSignature
	nparams 1
	  param inout name "xmlStructure" type class_ref 1419650 // XMLStructure
	nexceptions 1
	  exception class_ref 1418754 // MarshalException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unmarshals a new <code>XMLSignature</code> instance from a
mechanism-specific <code>XMLStructure</code> instance.
This method is useful if you only want to unmarshal (and not
validate) an <code>XMLSignature</code>.

@param xmlStructure a mechanism-specific XML structure from which to
   unmarshal the signature from
@return the <code>XMLSignature</code>
@throws NullPointerException if <code>xmlStructure</code> is
   <code>null</code>
@throws ClassCastException if the type of <code>xmlStructure</code> is
   inappropriate for this factory
@throws MarshalException if an unrecoverable exception occurs
   during unmarshalling
"
      end

      operation 12035842 "isFeatureSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "feature" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether a specified feature is supported.

@param feature the feature name (as an absolute URI)
@return <code>true</code> if the specified feature is supported,
   <code>false</code> otherwise
@throws NullPointerException if <code>feature</code> is <code>null</code>
"
      end

      operation 12035970 "getURIDereferencer"
	abstract public return_type class_ref 1419266 // URIDereferencer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reference to the <code>URIDereferencer</code> that is used by
default to dereference URIs in {@link Reference} objects.

@return a reference to the default <code>URIDereferencer</code> (never
   <code>null</code>)
"
      end
    end
  end

  deploymentview 178050 "dsig"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1009538 "Transform"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.security.spec.AlgorithmParameterSpec;
import javax.xml.crypto.AlgorithmMethod;
import javax.xml.crypto.Data;
import javax.xml.crypto.OctetStreamData;
import javax.xml.crypto.XMLCryptoContext;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.spec.TransformParameterSpec;
${definition}"
      associated_elems
	class_ref 1420290 // Transform
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: Transform.java,v 1.5 2005/05/10 16:03:48 mullan Exp $
"
    end

    artifact 1009666 "CanonicalizationMethod"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
import javax.xml.crypto.dsig.spec.C14NMethodParameterSpec;
${definition}"
      associated_elems
	class_ref 1420162 // CanonicalizationMethod
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: CanonicalizationMethod.java,v 1.6 2005/05/10 16:03:45 mullan Exp $
"
    end

    artifact 1009794 "DigestMethod"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.AlgorithmMethod;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.spec.DigestMethodParameterSpec;
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_elems
	class_ref 1420546 // DigestMethod
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: DigestMethod.java,v 1.6 2005/05/10 16:03:46 mullan Exp $
"
    end

    artifact 1009922 "Manifest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.XMLStructure;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1420674 // Manifest
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: Manifest.java,v 1.7 2005/05/10 16:03:46 mullan Exp $
"
    end

    artifact 1010050 "Reference"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.Data;
import javax.xml.crypto.URIReference;
import javax.xml.crypto.XMLStructure;
import java.io.InputStream;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1420802 // Reference
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: Reference.java,v 1.9 2005/05/10 16:03:46 mullan Exp $
"
    end

    artifact 1010178 "SignatureMethod"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.AlgorithmMethod;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec;
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_elems
	class_ref 1421186 // SignatureMethod
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: SignatureMethod.java,v 1.5 2005/05/10 16:03:46 mullan Exp $
"
    end

    artifact 1010306 "SignatureProperties"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.XMLStructure;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1421314 // SignatureProperties
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: SignatureProperties.java,v 1.4 2005/05/10 16:03:46 mullan Exp $
"
    end

    artifact 1010434 "SignatureProperty"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.XMLStructure;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1421442 // SignatureProperty
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: SignatureProperty.java,v 1.4 2005/05/10 16:03:46 mullan Exp $
"
    end

    artifact 1010562 "SignedInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.XMLStructure;
import java.io.InputStream;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1421570 // SignedInfo
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: SignedInfo.java,v 1.7 2005/05/10 16:03:47 mullan Exp $
"
    end

    artifact 1010690 "TransformException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
${definition}"
      associated_elems
	class_ref 1420418 // TransformException
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: TransformException.java,v 1.3 2005/05/10 16:03:48 mullan Exp $
"
    end

    artifact 1010818 "TransformService"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Provider.Service;
import java.security.Security;
import java.util.*;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.XMLCryptoContext;
import javax.xml.crypto.dsig.spec.TransformParameterSpec;
import sun.security.jca.*;
import sun.security.jca.GetInstance.Instance;
${definition}"
      associated_elems
	class_ref 1421698 // TransformService
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: TransformService.java,v 1.6.4.1 2005/09/15 12:42:11 mullan Exp $
"
    end

    artifact 1010946 "XMLObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import javax.xml.crypto.XMLStructure;
${definition}"
      associated_elems
	class_ref 1422082 // XMLObject
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















===========================================================================

(C) Copyright IBM Corp. 2003 All Rights Reserved.

===========================================================================


$Id: XMLObject.java,v 1.5 2005/05/10 16:03:48 mullan Exp $
"
    end

    artifact 1011074 "XMLSignature"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.KeySelector;
import javax.xml.crypto.KeySelectorResult;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import java.security.Signature;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1422210 // XMLSignature
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















===========================================================================

(C) Copyright IBM Corp. 2003 All Rights Reserved.

===========================================================================


$Id: XMLSignature.java,v 1.10 2005/05/10 16:03:48 mullan Exp $
"
    end

    artifact 1011202 "XMLSignatureException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
${definition}"
      associated_elems
	class_ref 1421058 // XMLSignatureException
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: XMLSignatureException.java,v 1.5 2005/05/10 16:03:48 mullan Exp $
"
    end

    artifact 1011330 "XMLSignatureFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.Data;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.NoSuchMechanismException;
import javax.xml.crypto.URIDereferencer;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dom.DOMStructure;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import javax.xml.crypto.dsig.keyinfo.KeyInfoFactory;
import javax.xml.crypto.dsig.spec.*;
import javax.xml.crypto.dsig.dom.DOMValidateContext;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import java.security.InvalidAlgorithmParameterException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import java.util.List;
import sun.security.jca.*;
import sun.security.jca.GetInstance.Instance;
${definition}"
      associated_elems
	class_ref 1422594 // XMLSignatureFactory
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: XMLSignatureFactory.java,v 1.14 2005/09/15 14:29:01 mullan Exp $
"
    end

    artifact 1011458 "XMLSignContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.KeySelector;
import javax.xml.crypto.XMLCryptoContext;
${definition}"
      associated_elems
	class_ref 1422466 // XMLSignContext
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: XMLSignContext.java,v 1.8 2005/05/10 16:03:48 mullan Exp $
"
    end

    artifact 1011586 "XMLValidateContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.XMLCryptoContext;
${definition}"
      associated_elems
	class_ref 1420930 // XMLValidateContext
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: XMLValidateContext.java,v 1.8 2005/05/10 16:03:49 mullan Exp $
"
    end
  end

  package_ref 188802 // spec

  package_ref 188930 // dom
end
