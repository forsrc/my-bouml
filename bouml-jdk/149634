format 222
"stream" // jdk1.8::com::sun::imageio::stream
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/imageio/stream/"
  java_package "com.sun.imageio.stream"
  classview 145922 "stream"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 337410 "CloseableDisposerRecord"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Convenience class that closes a given resource (e.g. RandomAccessFile),
typically associated with an Image{Input,Output}Stream, prior to the
stream being garbage collected.
"
      classrelation 589442 // closeable (<unidirectional association>)
	relation 589442 --->
	  a role_name "closeable" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 589442 // closeable (<unidirectional association>)
	  b parent class_ref 146562 // Closeable
      end

      operation 1879810 "CloseableDisposerRecord"
	public explicit_return_type ""
	nparams 1
	  param inout name "closeable" type class_ref 146562 // Closeable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1879938 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 337538 "StreamCloser"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provide means to properly close hanging
image input/output streams on VM shutdown.
This might be useful for proper cleanup such as removal
of temporary files.

Addition of stream do not prevent it from being garbage collected
if no other references to it exists. Stream can be closed
explicitly without removal from StreamCloser queue.
Explicit removal from the queue only helps to save some memory.
"
      class 337666 "CloseAction"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 589826 // iis (<unidirectional association>)
	  relation 589826 --->
	    a role_name "iis" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 589826 // iis (<unidirectional association>)
	    b parent class_ref 314498 // ImageInputStream
	end

	operation 1880450 "CloseAction"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "iis" type class_ref 314498 // ImageInputStream
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1880578 "performAction"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 589570 // toCloseQueue (<unidirectional association>)
	relation 589570 --->
	  a role_name "toCloseQueue" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CloseAction, Object> ${name}${value};
"
	    classrelation_ref 589570 // toCloseQueue (<unidirectional association>)
	  b parent class_ref 192002 // WeakHashMap
      end

      classrelation 589698 // streamCloser (<unidirectional association>)
	relation 589698 --->
	  a role_name "streamCloser" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 589698 // streamCloser (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      operation 1880066 "addToQueue"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ca" type class_ref 337666 // CloseAction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1880194 "removeFromQueue"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ca" type class_ref 337666 // CloseAction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1880322 "createCloseAction"
	class_operation public return_type class_ref 337666 // CloseAction
	nparams 1
	  param inout name "iis" type class_ref 314498 // ImageInputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 337794 "StreamFinalizer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Small class to assist in properly closing an ImageInputStream instance
prior to garbage collection.  The ImageInputStreamImpl class defines a
finalize() method, but in a number of its public subclasses
(e.g. FileImageInputStream) we override the finalize() method to be
empty for performance reasons, and instead rely on the Disposer mechanism
for closing/disposing resources.  This is fine when one of these classes
is instantiated directly (e.g. new FileImageInputStream()) but in the
unlikely case where a user defines their own subclass of one of those
streams, we need some way to get back to the behavior of
ImageInputStreamImpl, which will call close() as part of finalization.

Typically an Image{Input,Output}Stream will construct an instance of
StreamFinalizer in its constructor if it detects that it has been
subclassed by the user.  The ImageInputStream instance will hold a
reference to the StreamFinalizer, and the StreamFinalizer will hold a
reference back to the ImageInputStream from which it was created.  When
both are no longer reachable, the StreamFinalizer.finalize() method will
be called, which will take care of closing down the ImageInputStream.

Clearly this is a bit of a hack, but it will likely only be used in the
rarest of circumstances: when a user has subclassed one of the public
stream classes.  (It should be no worse than the old days when the public
stream classes had non-empty finalize() methods.)
"
      classrelation 589954 // stream (<unidirectional association>)
	relation 589954 --->
	  a role_name "stream" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 589954 // stream (<unidirectional association>)
	  b parent class_ref 314498 // ImageInputStream
      end

      operation 1880706 "StreamFinalizer"
	public explicit_return_type ""
	nparams 1
	  param inout name "stream" type class_ref 314498 // ImageInputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1880834 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 141186 "stream"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 270210 "CloseableDisposerRecord"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Closeable;
import java.io.IOException;
import sun.java2d.DisposerRecord;
${definition}"
      associated_elems
	class_ref 337410 // CloseableDisposerRecord
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 270338 "StreamCloser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Set;
import java.util.WeakHashMap;
import javax.imageio.stream.ImageInputStream;
${definition}"
      associated_elems
	class_ref 337538 // StreamCloser
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 270466 "StreamFinalizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.imageio.stream.ImageInputStream;
${definition}"
      associated_elems
	class_ref 337794 // StreamFinalizer
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
