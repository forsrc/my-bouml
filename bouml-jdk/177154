format 222
"xpath" // jdk1.8::org::w3c::dom::xpath
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/org/w3c/dom/xpath/"
  java_package "org.w3c.dom.xpath"
  classview 170498 "xpath"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 813058 "XPathEvaluator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The evaluation of XPath expressions is provided by
<code>XPathEvaluator</code>. In a DOM implementation which supports the
XPath 3.0 feature, as described above, the <code>XPathEvaluator</code>
interface will be implemented on the same object which implements the
<code>Document</code> interface permitting it to be obtained by the usual
binding-specific method such as casting or by using the DOM Level 3
getInterface method. In this case the implementation obtained from the
Document supports the XPath DOM module and is compatible with the XPath
1.0 specification.
<p>Evaluation of expressions with specialized extension functions or
variables may not work in all implementations and is, therefore, not
portable. <code>XPathEvaluator</code> implementations may be available
from other sources that could provide specific support for specialized
extension functions or variables as would be defined by other
specifications.
<p>See also the <a href='http://www.w3.org/2002/08/WD-DOM-Level-3-XPath-20020820'>Document Object Model (DOM) Level 3 XPath Specification</a>.
"
      operation 5879938 "createExpression"
	public return_type class_ref 813186 // XPathExpression
	nparams 2
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "resolver" type class_ref 813314 // XPathNSResolver
	nexceptions 2
	  exception class_ref 813442 // XPathException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a parsed XPath expression with resolved namespaces. This is
useful when an expression will be reused in an application since it
makes it possible to compile the expression string into a more
efficient internal form and preresolve all namespace prefixes which
occur within the expression.
@param expression The XPath expression string to be parsed.
@param resolver The <code>resolver</code> permits translation of
  prefixes within the XPath expression into appropriate namespace URIs
  . If this is specified as <code>null</code>, any namespace prefix
  within the expression will result in <code>DOMException</code>
  being thrown with the code <code>NAMESPACE_ERR</code>.
@return The compiled form of the XPath expression.
@exception XPathException
  INVALID_EXPRESSION_ERR: Raised if the expression is not legal
  according to the rules of the <code>XPathEvaluator</code>i
@exception DOMException
  NAMESPACE_ERR: Raised if the expression contains namespace prefixes
  which cannot be resolved by the specified
  <code>XPathNSResolver</code>.
"
      end

      operation 5880066 "createNSResolver"
	public return_type class_ref 813314 // XPathNSResolver
	nparams 1
	  param inout name "nodeResolver" type class_ref 317570 // Node
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapts any DOM node to resolve namespaces so that an XPath expression
can be easily evaluated relative to the context of the node where it
appeared within the document. This adapter works like the DOM Level 3
method <code>lookupNamespaceURI</code> on nodes in resolving the
namespaceURI from a given prefix using the current information
available in the node's hierarchy at the time lookupNamespaceURI is
called. also correctly resolving the implicit xml prefix.
@param nodeResolver The node to be used as a context for namespace
  resolution.
@return <code>XPathNSResolver</code> which resolves namespaces with
  respect to the definitions in scope for a specified node.
"
      end

      operation 5880194 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 5
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "resolver" type class_ref 813314 // XPathNSResolver
	  param in name "type" explicit_type "short"
	  param inout name "result" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 813442 // XPathException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates an XPath expression string and returns a result of the
specified type if possible.
@param expression The XPath expression string to be parsed and
  evaluated.
@param contextNode The <code>context</code> is context node for the
  evaluation of this XPath expression. If the XPathEvaluator was
  obtained by casting the <code>Document</code> then this must be
  owned by the same document and must be a <code>Document</code>,
  <code>Element</code>, <code>Attribute</code>, <code>Text</code>,
  <code>CDATASection</code>, <code>Comment</code>,
  <code>ProcessingInstruction</code>, or <code>XPathNamespace</code>
  node. If the context node is a <code>Text</code> or a
  <code>CDATASection</code>, then the context is interpreted as the
  whole logical text node as seen by XPath, unless the node is empty
  in which case it may not serve as the XPath context.
@param resolver The <code>resolver</code> permits translation of
  prefixes within the XPath expression into appropriate namespace URIs
  . If this is specified as <code>null</code>, any namespace prefix
  within the expression will result in <code>DOMException</code>
  being thrown with the code <code>NAMESPACE_ERR</code>.
@param type If a specific <code>type</code> is specified, then the
  result will be returned as the corresponding type.For XPath 1.0
  results, this must be one of the codes of the
  <code>XPathResult</code> interface.
@param result The <code>result</code> specifies a specific result
  object which may be reused and returned by this method. If this is
  specified as <code>null</code>or the implementation does not reuse
  the specified result, a new result object will be constructed and
  returned.For XPath 1.0 results, this object will be of type
  <code>XPathResult</code>.
@return The result of the evaluation of the XPath expression.For XPath
  1.0 results, this object will be of type <code>XPathResult</code>.
@exception XPathException
  INVALID_EXPRESSION_ERR: Raised if the expression is not legal
  according to the rules of the <code>XPathEvaluator</code>i
  <br>TYPE_ERR: Raised if the result cannot be converted to return the
  specified type.
@exception DOMException
  NAMESPACE_ERR: Raised if the expression contains namespace prefixes
  which cannot be resolved by the specified
  <code>XPathNSResolver</code>.
  <br>WRONG_DOCUMENT_ERR: The Node is from a document that is not
  supported by this <code>XPathEvaluator</code>.
  <br>NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath
  context node or the request type is not permitted by this
  <code>XPathEvaluator</code>.
"
      end
    end

    class 813186 "XPathExpression"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>XPathExpression</code> interface represents a parsed and resolved
XPath expression.
<p>See also the <a href='http://www.w3.org/2002/08/WD-DOM-Level-3-XPath-20020820'>Document Object Model (DOM) Level 3 XPath Specification</a>.
"
      operation 5881602 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param in name "type" explicit_type "short"
	  param inout name "result" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 813442 // XPathException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates this XPath expression and returns a result.
@param contextNode The <code>context</code> is context node for the
  evaluation of this XPath expression.If the XPathEvaluator was
  obtained by casting the <code>Document</code> then this must be
  owned by the same document and must be a <code>Document</code>,
  <code>Element</code>, <code>Attribute</code>, <code>Text</code>,
  <code>CDATASection</code>, <code>Comment</code>,
  <code>ProcessingInstruction</code>, or <code>XPathNamespace</code>
  node.If the context node is a <code>Text</code> or a
  <code>CDATASection</code>, then the context is interpreted as the
  whole logical text node as seen by XPath, unless the node is empty
  in which case it may not serve as the XPath context.
@param type If a specific <code>type</code> is specified, then the
  result will be coerced to return the specified type relying on
  XPath conversions and fail if the desired coercion is not possible.
  This must be one of the type codes of <code>XPathResult</code>.
@param result The <code>result</code> specifies a specific result
  object which may be reused and returned by this method. If this is
  specified as <code>null</code>or the implementation does not reuse
  the specified result, a new result object will be constructed and
  returned.For XPath 1.0 results, this object will be of type
  <code>XPathResult</code>.
@return The result of the evaluation of the XPath expression.For XPath
  1.0 results, this object will be of type <code>XPathResult</code>.
@exception XPathException
  TYPE_ERR: Raised if the result cannot be converted to return the
  specified type.
@exception DOMException
  WRONG_DOCUMENT_ERR: The Node is from a document that is not supported
  by the XPathEvaluator that created this <code>XPathExpression</code>
  .
  <br>NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath
  context node or the request type is not permitted by this
  <code>XPathExpression</code>.
"
      end
    end

    class 813314 "XPathNSResolver"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>XPathNSResolver</code> interface permit <code>prefix</code>
strings in the expression to be properly bound to
<code>namespaceURI</code> strings. <code>XPathEvaluator</code> can
construct an implementation of <code>XPathNSResolver</code> from a node,
or the interface may be implemented by any application.
<p>See also the <a href='http://www.w3.org/2002/08/WD-DOM-Level-3-XPath-20020820'>Document Object Model (DOM) Level 3 XPath Specification</a>.
"
      operation 5887106 "lookupNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the namespace URI associated to the given namespace prefix. The
XPath evaluator must never call this with a <code>null</code> or
empty argument, because the result of doing this is undefined.
@param prefix The prefix to look for.
@return Returns the associated namespace URI or <code>null</code> if
  none is found.
"
      end
    end

    class 813442 "XPathException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A new exception has been created for exceptions specific to these XPath
interfaces.
<p>See also the <a href='http://www.w3.org/2002/08/WD-DOM-Level-3-XPath-20020820'>Document Object Model (DOM) Level 3 XPath Specification</a>.
"
      classrelation 4930050 // <generalisation>
	relation 4930050 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4930050 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 12572162 "XPathException"
	public explicit_return_type ""
	nparams 2
	  param in name "code" explicit_type "short"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2673538 "code"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2673666 "INVALID_EXPRESSION_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XPathExceptionCode

If the expression has a syntax error or otherwise is not a legal
expression according to the rules of the specific
<code>XPathEvaluator</code> or contains specialized extension
functions or variables not supported by this implementation.

"
      end

      attribute 2673794 "TYPE_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the expression cannot be converted to return the specified type.

"
      end
    end

    class 813954 "XPathNamespace"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>XPathNamespace</code> interface is returned by
<code>XPathResult</code> interfaces to represent the XPath namespace node
type that DOM lacks. There is no public constructor for this node type.
Attempts to place it into a hierarchy or a NamedNodeMap result in a
<code>DOMException</code> with the code <code>HIERARCHY_REQUEST_ERR</code>
. This node is read only, so methods or setting of attributes that would
mutate the node result in a DOMException with the code
<code>NO_MODIFICATION_ALLOWED_ERR</code>.
<p>The core specification describes attributes of the <code>Node</code>
interface that are different for different node node types but does not
describe <code>XPATH_NAMESPACE_NODE</code>, so here is a description of
those attributes for this node type. All attributes of <code>Node</code>
not described in this section have a <code>null</code> or
<code>false</code> value.
<p><code>ownerDocument</code> matches the <code>ownerDocument</code> of the
<code>ownerElement</code> even if the element is later adopted.
<p><code>prefix</code> is the prefix of the namespace represented by the
node.
<p><code>nodeName</code> is the same as <code>prefix</code>.
<p><code>nodeType</code> is equal to <code>XPATH_NAMESPACE_NODE</code>.
<p><code>namespaceURI</code> is the namespace URI of the namespace
represented by the node.
<p><code>adoptNode</code>, <code>cloneNode</code>, and
<code>importNode</code> fail on this node type by raising a
<code>DOMException</code> with the code <code>NOT_SUPPORTED_ERR</code>.In
future versions of the XPath specification, the definition of a namespace
node may be changed incomatibly, in which case incompatible changes to
field values may be required to implement versions beyond XPath 1.0.
<p>See also the <a href='http://www.w3.org/2002/08/WD-DOM-Level-3-XPath-20020820'>Document Object Model (DOM) Level 3 XPath Specification</a>.
"
      classrelation 2601986 // <generalisation>
	relation 2601986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2601986 // <generalisation>
	  b parent class_ref 317570 // Node
      end

      attribute 1277698 "XPATH_NAMESPACE_NODE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XPathNodeType

The node is a <code>Namespace</code>.

"
      end

      operation 5881986 "getOwnerElement"
	public return_type class_ref 648194 // Element
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>Element</code> on which the namespace was in scope when it
was requested. This does not change on a returned namespace node even
if the document changes such that the namespace goes out of scope on
that element and this node is no longer found there by XPath.
"
      end
    end

    class 814338 "XPathResult"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>XPathResult</code> interface represents the result of the
evaluation of an XPath 1.0 expression within the context of a particular
node. Since evaluation of an XPath expression can result in various
result types, this object makes it possible to discover and manipulate
the type and value of the result.
<p>See also the <a href='http://www.w3.org/2002/08/WD-DOM-Level-3-XPath-20020820'>Document Object Model (DOM) Level 3 XPath Specification</a>.
"
      attribute 1277826 "ANY_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XPathResultType

This code does not represent a specific type. An evaluation of an XPath
expression will never produce this type. If this type is requested,
then the evaluation returns whatever type naturally results from
evaluation of the expression.
<br>If the natural result is a node set when <code>ANY_TYPE</code> was
requested, then <code>UNORDERED_NODE_ITERATOR_TYPE</code> is always
the resulting type. Any other representation of a node set must be
explicitly requested.

"
      end

      attribute 1277954 "NUMBER_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a number as defined by . Document modification does not
invalidate the number, but may mean that reevaluation would not yield
the same number.

"
      end

      attribute 1278082 "STRING_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a string as defined by . Document modification does not
invalidate the string, but may mean that the string no longer
corresponds to the current document.

"
      end

      attribute 1278210 "BOOLEAN_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a boolean as defined by . Document modification does not
invalidate the boolean, but may mean that reevaluation would not
yield the same boolean.

"
      end

      attribute 1278338 "UNORDERED_NODE_ITERATOR_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a node set as defined by  that will be accessed
iteratively, which may not produce nodes in a particular order.
Document modification invalidates the iteration.
<br>This is the default type returned if the result is a node set and
<code>ANY_TYPE</code> is requested.

"
      end

      attribute 1278466 "ORDERED_NODE_ITERATOR_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a node set as defined by  that will be accessed
iteratively, which will produce document-ordered nodes. Document
modification invalidates the iteration.

"
      end

      attribute 1278594 "UNORDERED_NODE_SNAPSHOT_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a node set as defined by  that will be accessed as a
snapshot list of nodes that may not be in a particular order.
Document modification does not invalidate the snapshot but may mean
that reevaluation would not yield the same snapshot and nodes in the
snapshot may have been altered, moved, or removed from the document.

"
      end

      attribute 1278722 "ORDERED_NODE_SNAPSHOT_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a node set as defined by  that will be accessed as a
snapshot list of nodes that will be in original document order.
Document modification does not invalidate the snapshot but may mean
that reevaluation would not yield the same snapshot and nodes in the
snapshot may have been altered, moved, or removed from the document.

"
      end

      attribute 1278850 "ANY_UNORDERED_NODE_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a node set as defined by  and will be accessed as a
single node, which may be <code>null</code>if the node set is empty.
Document modification does not invalidate the node, but may mean that
the result node no longer corresponds to the current document. This
is a convenience that permits optimization since the implementation
can stop once any node in the in the resulting set has been found.
<br>If there are more than one node in the actual result, the single
node returned might not be the first in document order.

"
      end

      attribute 1278978 "FIRST_ORDERED_NODE_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The result is a node set as defined by  and will be accessed as a
single node, which may be <code>null</code> if the node set is empty.
Document modification does not invalidate the node, but may mean that
the result node no longer corresponds to the current document. This
is a convenience that permits optimization since the implementation
can stop once the first node in document order of the resulting set
has been found.
<br>If there are more than one node in the actual result, the single
node returned will be the first in document order.

"
      end

      operation 5887490 "getResultType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A code representing the type of this result, as defined by the type
constants.
"
      end

      operation 5887618 "getNumberValue"
	public explicit_return_type "double"
	nparams 0
	nexceptions 1
	  exception class_ref 813442 // XPathException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value of this number result. If the native double type of the DOM
binding does not directly support the exact IEEE 754 result of the
XPath expression, then it is up to the definition of the binding
binding to specify how the XPath number is converted to the native
binding number.
@exception XPathException
  TYPE_ERR: raised if <code>resultType</code> is not
  <code>NUMBER_TYPE</code>.
"
      end

      operation 5887746 "getStringValue"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 813442 // XPathException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value of this string result.
@exception XPathException
  TYPE_ERR: raised if <code>resultType</code> is not
  <code>STRING_TYPE</code>.
"
      end

      operation 5887874 "getBooleanValue"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 813442 // XPathException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value of this boolean result.
@exception XPathException
  TYPE_ERR: raised if <code>resultType</code> is not
  <code>BOOLEAN_TYPE</code>.
"
      end

      operation 5888002 "getSingleNodeValue"
	public return_type class_ref 317570 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 813442 // XPathException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value of this single node result, which may be <code>null</code>.
@exception XPathException
  TYPE_ERR: raised if <code>resultType</code> is not
  <code>ANY_UNORDERED_NODE_TYPE</code> or
  <code>FIRST_ORDERED_NODE_TYPE</code>.
"
      end

      operation 5888130 "getInvalidIteratorState"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Signifies that the iterator has become invalid. True if
<code>resultType</code> is <code>UNORDERED_NODE_ITERATOR_TYPE</code>
or <code>ORDERED_NODE_ITERATOR_TYPE</code> and the document has been
modified since this result was returned.
"
      end

      operation 5888258 "getSnapshotLength"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 813442 // XPathException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of nodes in the result snapshot. Valid values for
snapshotItem indices are <code>0</code> to
<code>snapshotLength-1</code> inclusive.
@exception XPathException
  TYPE_ERR: raised if <code>resultType</code> is not
  <code>UNORDERED_NODE_SNAPSHOT_TYPE</code> or
  <code>ORDERED_NODE_SNAPSHOT_TYPE</code>.
"
      end

      operation 5888386 "iterateNext"
	public return_type class_ref 317570 // Node
	nparams 0
	nexceptions 2
	  exception class_ref 813442 // XPathException
	  exception class_ref 646658 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterates and returns the next node from the node set or
<code>null</code>if there are no more nodes.
@return Returns the next node.
@exception XPathException
  TYPE_ERR: raised if <code>resultType</code> is not
  <code>UNORDERED_NODE_ITERATOR_TYPE</code> or
  <code>ORDERED_NODE_ITERATOR_TYPE</code>.
@exception DOMException
  INVALID_STATE_ERR: The document has been mutated since the result was
  returned.
"
      end

      operation 5888514 "snapshotItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 813442 // XPathException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>index</code>th item in the snapshot collection. If
<code>index</code> is greater than or equal to the number of nodes in
the list, this method returns <code>null</code>. Unlike the iterator
result, the snapshot does not become invalid, but may not correspond
to the current document if it is mutated.
@param index Index into the snapshot collection.
@return The node at the <code>index</code>th position in the
  <code>NodeList</code>, or <code>null</code> if that is not a valid
  index.
@exception XPathException
  TYPE_ERR: raised if <code>resultType</code> is not
  <code>UNORDERED_NODE_SNAPSHOT_TYPE</code> or
  <code>ORDERED_NODE_SNAPSHOT_TYPE</code>.
"
      end
    end
  end

  deploymentview 163842 "xpath"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 580994 "XPathEvaluator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.DOMException;
${definition}"
      associated_elems
	class_ref 813058 // XPathEvaluator
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2002 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end

    artifact 581250 "XPathExpression"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.DOMException;
${definition}"
      associated_elems
	class_ref 813186 // XPathExpression
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2002 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end

    artifact 581506 "XPathNamespace"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Element;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 813954 // XPathNamespace
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2002 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end

    artifact 581762 "XPathNSResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 813314 // XPathNSResolver
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2002 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end

    artifact 582018 "XPathResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.DOMException;
${definition}"
      associated_elems
	class_ref 814338 // XPathResult
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2002 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end

    artifact 1100802 "XPathException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 813442 // XPathException
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.



























Copyright (c) 2002 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
"
    end
  end
end
