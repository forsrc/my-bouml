class EntrySpliterator
!!!9067010.java!!!	EntrySpliterator(inout tab : ConcurrentHashMap::Node [[]], in size : int, in index : int, in limit : int, in est : long, inout map : ConcurrentHashMap)
            super(tab, size, index, limit);
            this.map = map;
            this.est = est;
!!!9067138.java!!!	trySplit() : Spliterator
            int i, f, h;
            return (h = ((i = baseIndex) + (f = baseLimit)) >>> 1) <= i ? null :
                new EntrySpliterator<K,V>(tab, baseSize, baseLimit = h,
                                          f, est >>>= 1, map);
!!!9067266.java!!!	forEachRemaining(inout action : Consumer) : void
            if (action == null) throw new NullPointerException();
            for (Node<K,V> p; (p = advance()) != null; )
                action.accept(new MapEntry<K,V>(p.key, p.val, map));
!!!9067394.java!!!	tryAdvance(inout action : Consumer) : boolean
            if (action == null) throw new NullPointerException();
            Node<K,V> p;
            if ((p = advance()) == null)
                return false;
            action.accept(new MapEntry<K,V>(p.key, p.val, map));
            return true;
!!!9067522.java!!!	estimateSize() : long
 return est;
!!!9067650.java!!!	characteristics() : int
            return Spliterator.DISTINCT | Spliterator.CONCURRENT |
                Spliterator.NONNULL;
