class ToolBarButtonPainter
!!!11394562.java!!!	ToolBarButtonPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11394690.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_FOCUSED: paintBackgroundFocused(g); break;
            case BACKGROUND_MOUSEOVER: paintBackgroundMouseOver(g); break;
            case BACKGROUND_MOUSEOVER_FOCUSED: paintBackgroundMouseOverAndFocused(g); break;
            case BACKGROUND_PRESSED: paintBackgroundPressed(g); break;
            case BACKGROUND_PRESSED_FOCUSED: paintBackgroundPressedAndFocused(g); break;

        }
!!!11394818.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11394946.java!!!	paintBackgroundFocused(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color1);
        g.fill(path);

!!!11395074.java!!!	paintBackgroundMouseOver(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color2);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11395202.java!!!	paintBackgroundMouseOverAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11395330.java!!!	paintBackgroundPressed(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color2);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);

!!!11395458.java!!!	paintBackgroundPressedAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);

!!!11395586.java!!!	decodePath1() : Path2D
        path.reset();
        path.moveTo(decodeX(1.4133738f), decodeY(0.120000005f));
        path.lineTo(decodeX(1.9893618f), decodeY(0.120000005f));
        path.curveTo(decodeAnchorX(1.9893617630004883f, 3.0f), decodeAnchorY(0.12000000476837158f, 0.0f), decodeAnchorX(2.8857147693634033f, 0.0f), decodeAnchorY(1.04347825050354f, -3.0f), decodeX(2.8857148f), decodeY(1.0434783f));
        path.lineTo(decodeX(2.9f), decodeY(1.9565217f));
        path.curveTo(decodeAnchorX(2.9000000953674316f, 0.0f), decodeAnchorY(1.95652174949646f, 3.0f), decodeAnchorX(1.9893617630004883f, 3.0f), decodeAnchorY(2.8714287281036377f, 0.0f), decodeX(1.9893618f), decodeY(2.8714287f));
        path.lineTo(decodeX(1.0106384f), decodeY(2.8714287f));
        path.curveTo(decodeAnchorX(1.0106383562088013f, -3.0f), decodeAnchorY(2.8714287281036377f, 0.0f), decodeAnchorX(0.12000000476837158f, 0.0f), decodeAnchorY(1.95652174949646f, 3.0f), decodeX(0.120000005f), decodeY(1.9565217f));
        path.lineTo(decodeX(0.120000005f), decodeY(1.0465839f));
        path.curveTo(decodeAnchorX(0.12000000476837158f, 0.0f), decodeAnchorY(1.046583890914917f, -3.000000000000001f), decodeAnchorX(1.0106383562088013f, -3.0f), decodeAnchorY(0.12000000476837158f, 0.0f), decodeX(1.0106384f), decodeY(0.120000005f));
        path.lineTo(decodeX(1.4148936f), decodeY(0.120000005f));
        path.lineTo(decodeX(1.4148936f), decodeY(0.4857143f));
        path.lineTo(decodeX(1.0106384f), decodeY(0.4857143f));
        path.curveTo(decodeAnchorX(1.0106383562088013f, -1.928571428571427f), decodeAnchorY(0.48571428656578064f, 0.0f), decodeAnchorX(0.4714285731315613f, -0.04427948362011014f), decodeAnchorY(1.040372610092163f, -2.429218094741624f), decodeX(0.47142857f), decodeY(1.0403726f));
        path.lineTo(decodeX(0.47142857f), decodeY(1.9565217f));
        path.curveTo(decodeAnchorX(0.4714285731315613f, 0.0f), decodeAnchorY(1.95652174949646f, 2.2142857142856975f), decodeAnchorX(1.0106383562088013f, -1.7857142857142847f), decodeAnchorY(2.5142855644226074f, 0.0f), decodeX(1.0106384f), decodeY(2.5142856f));
        path.lineTo(decodeX(1.9893618f), decodeY(2.5142856f));
        path.curveTo(decodeAnchorX(1.9893617630004883f, 2.071428571428598f), decodeAnchorY(2.5142855644226074f, 0.0f), decodeAnchorX(2.5f, 0.0f), decodeAnchorY(1.95652174949646f, 2.2142857142857046f), decodeX(2.5f), decodeY(1.9565217f));
        path.lineTo(decodeX(2.5142853f), decodeY(1.0434783f));
        path.curveTo(decodeAnchorX(2.5142853260040283f, 0.0f), decodeAnchorY(1.04347825050354f, -2.1428571428571406f), decodeAnchorX(1.990121603012085f, 2.142857142857167f), decodeAnchorY(0.4714285731315613f, 0.0f), decodeX(1.9901216f), decodeY(0.47142857f));
        path.lineTo(decodeX(1.4148936f), decodeY(0.4857143f));
        path.lineTo(decodeX(1.4133738f), decodeY(0.120000005f));
        path.closePath();
        return path;
!!!11395714.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.4f), //x
                               decodeY(0.6f), //y
                               decodeX(2.6f) - decodeX(0.4f), //width
                               decodeY(2.8f) - decodeY(0.6f), //height
                               12.0f, 12.0f); //rounding
        return roundRect;
!!!11395842.java!!!	decodeRoundRect2() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.4f), //x
                               decodeY(0.4f), //y
                               decodeX(2.6f) - decodeX(0.4f), //width
                               decodeY(2.6f) - decodeY(0.4f), //height
                               12.0f, 12.0f); //rounding
        return roundRect;
!!!11395970.java!!!	decodeRoundRect3() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.6f), //x
                               decodeY(0.6f), //y
                               decodeX(2.4f) - decodeX(0.6f), //width
                               decodeY(2.4f) - decodeY(0.6f), //height
                               9.0f, 9.0f); //rounding
        return roundRect;
!!!11396098.java!!!	decodeRoundRect4() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.120000005f), //x
                               decodeY(0.120000005f), //y
                               decodeX(2.8800004f) - decodeX(0.120000005f), //width
                               decodeY(2.8800004f) - decodeY(0.120000005f), //height
                               13.0f, 13.0f); //rounding
        return roundRect;
!!!11396226.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.09f,0.52f,0.95f },
                new Color[] { color3,
                            decodeColor(color3,color4,0.5f),
                            color4});
!!!11396354.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.03f,0.06f,0.33f,0.6f,0.65f,0.7f,0.825f,0.95f,0.975f,1.0f },
                new Color[] { color5,
                            decodeColor(color5,color6,0.5f),
                            color6,
                            decodeColor(color6,color7,0.5f),
                            color7,
                            decodeColor(color7,color7,0.5f),
                            color7,
                            decodeColor(color7,color8,0.5f),
                            color8,
                            decodeColor(color8,color8,0.5f),
                            color8});
!!!11396482.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.03f,0.06f,0.33f,0.6f,0.65f,0.7f,0.825f,0.95f,0.975f,1.0f },
                new Color[] { color9,
                            decodeColor(color9,color10,0.5f),
                            color10,
                            decodeColor(color10,color11,0.5f),
                            color11,
                            decodeColor(color11,color11,0.5f),
                            color11,
                            decodeColor(color11,color12,0.5f),
                            color12,
                            decodeColor(color12,color13,0.5f),
                            color13});
