format 222
"adapters" // jdk1.8::javax::xml::bind::annotation::adapters
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/bind/annotation/adapters/"
  java_package "javax.xml.bind.annotation.adapters"
  classview 180738 "adapters"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1407874 "XmlAdapter"
      abstract visibility public 
      nformals 2
      formal name "ValueType" type "" explicit_default_value ""
        explicit_extends ""
      formal name "BoundType" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Adapts a Java type for custom marshaling.

<p> <b> Usage: </b> </p>

<p>
Some Java types do not map naturally to a XML representation, for
example <tt>HashMap</tt> or other non JavaBean classes. Conversely,
a XML repsentation may map to a Java type but an application may
choose to accesss the XML representation using another Java
type. For example, the schema to Java binding rules bind
xs:DateTime by default to XmlGregorianCalendar. But an application
may desire to bind xs:DateTime to a custom type,
MyXmlGregorianCalendar, for example. In both cases, there is a
mismatch between <i> bound type </i>, used by an application to
access XML content and the <i> value type</i>, that is mapped to an
XML representation.

<p>
This abstract class defines methods for adapting a bound type to a value
type or vice versa. The methods are invoked by the JAXB binding
framework during marshaling and unmarshalling:

<ul>
  <li> <b> XmlAdapter.marshal(...): </b> During marshalling, JAXB
       binding framework invokes XmlAdapter.marshal(..) to adapt a
       bound type to value type, which is then marshaled to XML
       representation. </li>

  <li> <b> XmlAdapter.unmarshal(...): </b> During unmarshalling,
       JAXB binding framework first unmarshals XML representation
       to a value type and then invokes XmlAdapter.unmarshal(..) to
       adapt the value type to a bound type. </li>
</ul>

Writing an adapter therefore involves the following steps:

<ul>
  <li> Write an adapter that implements this abstract class. </li>
  <li> Install the adapter using the annotation {@link
       XmlJavaTypeAdapter} </li>
</ul>

<p><b>Example:</b> Customized mapping of <tt>HashMap</tt></p>
<p> The following example illustrates the use of
<tt>&#64;XmlAdapter</tt> and <tt>&#64;XmlJavaTypeAdapter</tt> to
customize the mapping of a <tt>HashMap</tt>.

<p> <b> Step 1: </b> Determine the desired XML representation for HashMap.

<pre>
    &lt;hashmap>
        &lt;entry key=\"id123\">this is a value&lt;/entry>
        &lt;entry key=\"id312\">this is another value&lt;/entry>
        ...
      &lt;/hashmap>
</pre>

<p> <b> Step 2: </b> Determine the schema definition that the
desired XML representation shown above should follow.

<pre>

    &lt;xs:complexType name=\"myHashMapType\">
      &lt;xs:sequence>
        &lt;xs:element name=\"entry\" type=\"myHashMapEntryType\"
                       minOccurs = \"0\" maxOccurs=\"unbounded\"/>
      &lt;/xs:sequence>
    &lt;/xs:complexType>

    &lt;xs:complexType name=\"myHashMapEntryType\">
      &lt;xs:simpleContent>
        &lt;xs:extension base=\"xs:string\">
          &lt;xs:attribute name=\"key\" type=\"xs:int\"/>
        &lt;/xs:extension>
      &lt;/xs:simpleContent>
    &lt;/xs:complexType>

</pre>

<p> <b> Step 3: </b> Write value types that can generate the above
schema definition.

<pre>
    public class MyHashMapType {
        List&lt;MyHashMapEntryType> entry;
    }

    public class MyHashMapEntryType {
        &#64;XmlAttribute
        public Integer key;

        &#64;XmlValue
        public String value;
    }
</pre>

<p> <b> Step 4: </b> Write the adapter that adapts the value type,
MyHashMapType to a bound type, HashMap, used by the application.

<pre>
    public final class MyHashMapAdapter extends
                       XmlAdapter&lt;MyHashMapType,HashMap> { ... }

</pre>

<p> <b> Step 5: </b> Use the adapter.

<pre>
    public class Foo {
        &#64;XmlJavaTypeAdapter(MyHashMapAdapter.class)
        HashMap hashmap;
        ...
    }
</pre>

The above code fragment will map to the following schema:

<pre>
    &lt;xs:complexType name=\"Foo\">
      &lt;xs:sequence>
        &lt;xs:element name=\"hashmap\" type=\"myHashMapType\"
      &lt;/xs:sequence>
    &lt;/xs:complexType>
</pre>

@param <BoundType>
     The type that JAXB doesn't know how to handle. An adapter is written
     to allow this type to be used as an in-memory representation through
     the <tt>ValueType</tt>.
@param <ValueType>
     The type that JAXB knows how to handle out of the box.

@author <ul><li>Sekhar Vajjhala, Sun Microsystems Inc.</li> <li> Kohsuke Kawaguchi, Sun Microsystems Inc.</li></ul>
@see XmlJavaTypeAdapter
@since JAXB 2.0
"
      operation 11989634 "XmlAdapter"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Do-nothing constructor for the derived classes.
"
      end

      operation 11989762 "unmarshal"
	abstract cpp_inline public explicit_return_type "BoundType"
	nparams 1
	  param inout name "v" explicit_type "ValueType"
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a value type to a bound type.

@param v
     The value to be converted. Can be null.
@throws Exception
     if there's an error during the conversion. The caller is responsible for
     reporting the error to the user through {@link javax.xml.bind.ValidationEventHandler}.
"
      end

      operation 11989890 "marshal"
	abstract cpp_inline public explicit_return_type "ValueType"
	nparams 1
	  param inout name "v" explicit_type "BoundType"
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a bound type to a value type.

@param v
     The value to be convereted. Can be null.
@throws Exception
     if there's an error during the conversion. The caller is responsible for
     reporting the error to the user through {@link javax.xml.bind.ValidationEventHandler}.
"
      end
    end

    class 1415042 "CollapsedStringAdapter"
      visibility public 
      nactuals 2
      actual class class_ref 1407874 // XmlAdapter
        rank 0 explicit_value ""
      actual class class_ref 1407874 // XmlAdapter
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Built-in {@link XmlAdapter} to handle <tt>xs:token</tt> and its derived types.

<p>
This adapter removes leading and trailing whitespaces, then truncate any
sequnce of tab, CR, LF, and SP by a single whitespace character ' '.

@author Kohsuke Kawaguchi
@since JAXB 2.0
"
      classrelation 4757250 // <realization>
	relation 4757250 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4757250 // <realization>
	  b parent class_ref 1407874 // XmlAdapter
      end

      operation 11990018 "unmarshal"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes leading and trailing whitespaces of the string
given as the parameter, then truncate any
sequnce of tab, CR, LF, and SP by a single whitespace character ' '.
"
      end

      operation 11990146 "marshal"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "No-op.

Just return the same string given as the parameter.
"
      end

      operation 11990274 "isWhiteSpace"
	class_operation protected explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " returns true if the specified char is a white space character. "
      end
    end

    class 1415170 "HexBinaryAdapter"
      visibility public 
      nactuals 2
      actual class class_ref 1407874 // XmlAdapter
        rank 0 explicit_value ""
      actual class class_ref 1407874 // XmlAdapter
        rank 1 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@link XmlAdapter} for <tt>xs:hexBinary</tt>.

<p>
This {@link XmlAdapter} binds <tt>byte[]</tt> to the hexBinary representation in XML.

@author Kohsuke Kawaguchi
@since JAXB 2.0
"
      classrelation 4757378 // <realization>
	relation 4757378 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4757378 // <realization>
	  b parent class_ref 1407874 // XmlAdapter
      end

      operation 11990402 "unmarshal"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11990530 "marshal"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1415298 "NormalizedStringAdapter"
      visibility public 
      nactuals 2
      actual class class_ref 1407874 // XmlAdapter
        rank 0 explicit_value ""
      actual class class_ref 1407874 // XmlAdapter
        rank 1 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@link XmlAdapter} to handle <tt>xs:normalizedString</tt>.

<p>
Replaces any tab, CR, and LF by a whitespace character ' ',
as specified in <a href=\"http://www.w3.org/TR/xmlschema-2/#rf-whiteSpace\">the whitespace facet 'replace'</a>

@author Kohsuke Kawaguchi, Martin Grebac
@since JAXB 2.0
"
      classrelation 4757506 // <realization>
	relation 4757506 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4757506 // <realization>
	  b parent class_ref 1407874 // XmlAdapter
      end

      operation 11990658 "unmarshal"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace any tab, CR, and LF by a whitespace character ' ',
as specified in <a href=\"http://www.w3.org/TR/xmlschema-2/#rf-whiteSpace\">the whitespace facet 'replace'</a>
"
      end

      operation 11990786 "marshal"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "No-op.

Just return the same string given as the parameter.
"
      end

      operation 11990914 "isWhiteSpaceExceptSpace"
	class_operation protected explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified char is a white space character
but not 0x20.
"
      end
    end

    class 1415426 "XmlJavaTypeAdapter"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Retention(RUNTIME)
@Target({PACKAGE,FIELD,METHOD,TYPE,PARAMETER})
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Use an adapter that implements {@link XmlAdapter} for custom marshaling.

<p> <b> Usage: </b> </p>

<p> The <tt>@XmlJavaTypeAdapter</tt> annotation can be used with the
following program elements:
<ul>
  <li> a JavaBean property </li>
  <li> field </li>
  <li> parameter </li>
  <li> package </li>
  <li> from within {@link XmlJavaTypeAdapters} </li>
</ul>

<p> When <tt>@XmlJavaTypeAdapter</tt> annotation is defined on a
class, it applies to all references to the class.
<p> When <tt>@XmlJavaTypeAdapter</tt> annotation is defined at the
package level it applies to all references from within the package
to <tt>@XmlJavaTypeAdapter.type()</tt>.
<p> When <tt>@XmlJavaTypeAdapter</tt> annotation is defined on the
field, property or parameter, then the annotation applies to the
field, property or the parameter only.
<p> A <tt>@XmlJavaTypeAdapter</tt> annotation on a field, property
or parameter overrides the <tt>@XmlJavaTypeAdapter</tt> annotation
associated with the class being referenced by the field, property
or parameter.
<p> A <tt>@XmlJavaTypeAdapter</tt> annotation on a class overrides
the <tt>@XmlJavaTypeAdapter</tt> annotation specified at the
package level for that class.

<p>This annotation can be used with the following other annotations:
{@link XmlElement}, {@link XmlAttribute}, {@link XmlElementRef},
{@link XmlElementRefs}, {@link XmlAnyElement}. This can also be
used at the package level with the following annotations:
{@link XmlAccessorType}, {@link XmlSchema}, {@link XmlSchemaType},
{@link XmlSchemaTypes}.

<p><b> Example: </b> See example in {@link XmlAdapter}

@author <ul><li>Sekhar Vajjhala, Sun Microsystems Inc.</li> <li> Kohsuke Kawaguchi, Sun Microsystems Inc.</li></ul>
@since JAXB2.0
@see XmlAdapter
"
      operation 11991042 "value"
	public return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends XmlAdapter> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Points to the class that converts a value type to a bound type or vice versa.
See {@link XmlAdapter} for more details.
"
      end

      operation 11991170 "type"
	public return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default DEFAULT.class;"
	
	
	
	comment "If this annotation is used at the package level, then value of
the type() must be specified.
"
      end

      class 1415554 "DEFAULT"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end
    end

    class 1415682 "XmlJavaTypeAdapters"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Retention(RUNTIME)
@Target({PACKAGE})
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
A container for multiple @{@link XmlJavaTypeAdapter} annotations.

<p> Multiple annotations of the same type are not allowed on a program
element. This annotation therefore serves as a container annotation
for multiple &#64;XmlJavaTypeAdapter as follows:

<pre>
&#64;XmlJavaTypeAdapters ({ @XmlJavaTypeAdapter(...),@XmlJavaTypeAdapter(...) })
</pre>

<p>The <tt>@XmlJavaTypeAdapters</tt> annnotation is useful for
defining {@link XmlJavaTypeAdapter} annotations for different types
at the package level.

<p>See \"Package Specification\" in javax.xml.bind.package javadoc for
additional common information.</p>

@author <ul><li>Sekhar Vajjhala, Sun Microsystems, Inc.</li></ul>
@see XmlJavaTypeAdapter
@since JAXB2.0
"
      operation 11991298 "value"
	public return_type class_ref 1415426 // XmlJavaTypeAdapter
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Collection of @{@link XmlJavaTypeAdapter} annotations
"
      end
    end
  end

  deploymentview 177282 "adapters"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1004290 "XmlAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1407874 // XmlAdapter
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1004418 "CollapsedStringAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1415042 // CollapsedStringAdapter
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1004546 "HexBinaryAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.bind.DatatypeConverter;
${definition}"
      associated_elems
	class_ref 1415170 // HexBinaryAdapter
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1004674 "NormalizedStringAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1415298 // NormalizedStringAdapter
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1004802 "XmlJavaTypeAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchema;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSchemaTypes;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.ElementType.TYPE;
import static java.lang.annotation.ElementType.PARAMETER;
import static java.lang.annotation.ElementType.PACKAGE;
${definition}"
      associated_elems
	class_ref 1415426 // XmlJavaTypeAdapter
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1004930 "XmlJavaTypeAdapters"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import static java.lang.annotation.ElementType.PACKAGE;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
${definition}"
      associated_elems
	class_ref 1415682 // XmlJavaTypeAdapters
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
