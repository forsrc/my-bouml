class LongAdder
!!!9289986.java!!!	add(in x : long) : void
        Cell[] as; long b, v; int m; Cell a;
        if ((as = cells) != null || !casBase(b = base, b + x)) {
            boolean uncontended = true;
            if (as == null || (m = as.length - 1) < 0 ||
                (a = as[getProbe() & m]) == null ||
                !(uncontended = a.cas(v = a.value, v + x)))
                longAccumulate(x, null, uncontended);
        }
!!!9290114.java!!!	increment() : void
        add(1L);
!!!9290242.java!!!	decrement() : void
        add(-1L);
!!!9290370.java!!!	sum() : long
        Cell[] as = cells; Cell a;
        long sum = base;
        if (as != null) {
            for (int i = 0; i < as.length; ++i) {
                if ((a = as[i]) != null)
                    sum += a.value;
            }
        }
        return sum;
!!!9290498.java!!!	reset() : void
        Cell[] as = cells; Cell a;
        base = 0L;
        if (as != null) {
            for (int i = 0; i < as.length; ++i) {
                if ((a = as[i]) != null)
                    a.value = 0L;
            }
        }
!!!9290626.java!!!	sumThenReset() : long
        Cell[] as = cells; Cell a;
        long sum = base;
        base = 0L;
        if (as != null) {
            for (int i = 0; i < as.length; ++i) {
                if ((a = as[i]) != null) {
                    sum += a.value;
                    a.value = 0L;
                }
            }
        }
        return sum;
!!!9290754.java!!!	toString() : String
        return Long.toString(sum());
!!!9290882.java!!!	longValue() : long
        return sum();
!!!9291010.java!!!	intValue() : int
        return (int)sum();
!!!9291138.java!!!	floatValue() : float
        return (float)sum();
!!!9291266.java!!!	doubleValue() : double
        return (double)sum();
!!!9291650.java!!!	writeReplace() : Object
        return new SerializationProxy(this);
!!!9291778.java!!!	readObject(inout s : ObjectInputStream) : void
        throw new java.io.InvalidObjectException("Proxy required");
