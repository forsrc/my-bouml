format 222
"loading" // jdk1.8::javax::management::loading
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/management/loading/"
  java_package "javax.management.loading"
  classview 151938 "loading"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 487810 "ClassLoaderRepository"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Instances of this interface are used to keep the list of ClassLoaders
registered in an MBean Server.
They provide the necessary methods to load classes using the registered
ClassLoaders.</p>

<p>The first ClassLoader in a <code>ClassLoaderRepository</code> is
always the MBean Server's own ClassLoader.</p>

<p>When an MBean is registered in an MBean Server, if it is of a
subclass of {@link java.lang.ClassLoader} and if it does not
implement the interface {@link PrivateClassLoader}, it is added to
the end of the MBean Server's <code>ClassLoaderRepository</code>.
If it is subsequently unregistered from the MBean Server, it is
removed from the <code>ClassLoaderRepository</code>.</p>

<p>The order of MBeans in the <code>ClassLoaderRepository</code> is
significant.  For any two MBeans <em>X</em> and <em>Y</em> in the
<code>ClassLoaderRepository</code>, <em>X</em> must appear before
<em>Y</em> if the registration of <em>X</em> was completed before
the registration of <em>Y</em> started.  If <em>X</em> and
<em>Y</em> were registered concurrently, their order is
indeterminate.  The registration of an MBean corresponds to the
call to {@link MBeanServer#registerMBean} or one of the {@link
MBeanServer}<code>.createMBean</code> methods.</p>

@see javax.management.MBeanServerFactory

@since 1.5
"
      operation 2937474 "loadClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Load the given class name through the list of class loaders.
Each ClassLoader in turn from the ClassLoaderRepository is
asked to load the class via its {@link
ClassLoader#loadClass(String)} method.  If it successfully
returns a {@link Class} object, that is the result of this
method.  If it throws a {@link ClassNotFoundException}, the
search continues with the next ClassLoader.  If it throws
another exception, the exception is propagated from this
method.  If the end of the list is reached, a {@link
ClassNotFoundException} is thrown.</p>

@param className The name of the class to be loaded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be
           found.
"
      end

      operation 2937602 "loadClassWithout"
	public return_type class_ref 130818 // Class
	nparams 2
	  param inout name "exclude" type class_ref 129026 // ClassLoader
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Load the given class name through the list of class loaders,
excluding the given one.  Each ClassLoader in turn from the
ClassLoaderRepository, except <code>exclude</code>, is asked to
load the class via its {@link ClassLoader#loadClass(String)}
method.  If it successfully returns a {@link Class} object,
that is the result of this method.  If it throws a {@link
ClassNotFoundException}, the search continues with the next
ClassLoader.  If it throws another exception, the exception is
propagated from this method.  If the end of the list is
reached, a {@link ClassNotFoundException} is thrown.</p>

<p>Be aware that if a ClassLoader in the ClassLoaderRepository
calls this method from its {@link ClassLoader#loadClass(String)
loadClass} method, it exposes itself to a deadlock if another
ClassLoader in the ClassLoaderRepository does the same thing at
the same time.  The {@link #loadClassBefore} method is
recommended to avoid the risk of deadlock.</p>

@param className The name of the class to be loaded.
@param exclude The class loader to be excluded.  May be null,
in which case this method is equivalent to {@link #loadClass
loadClass(className)}.

@return the loaded class.

@exception ClassNotFoundException The specified class could not
be found.
"
      end

      operation 2937730 "loadClassBefore"
	public return_type class_ref 130818 // Class
	nparams 2
	  param inout name "stop" type class_ref 129026 // ClassLoader
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Load the given class name through the list of class loaders,
stopping at the given one.  Each ClassLoader in turn from the
ClassLoaderRepository is asked to load the class via its {@link
ClassLoader#loadClass(String)} method.  If it successfully
returns a {@link Class} object, that is the result of this
method.  If it throws a {@link ClassNotFoundException}, the
search continues with the next ClassLoader.  If it throws
another exception, the exception is propagated from this
method.  If the search reaches <code>stop</code> or the end of
the list, a {@link ClassNotFoundException} is thrown.</p>

<p>Typically this method is called from the {@link
ClassLoader#loadClass(String) loadClass} method of
<code>stop</code>, to consult loaders that appear before it
in the <code>ClassLoaderRepository</code>.  By stopping the
search as soon as <code>stop</code> is reached, a potential
deadlock with concurrent class loading is avoided.</p>

@param className The name of the class to be loaded.
@param stop The class loader at which to stop.  May be null, in
which case this method is equivalent to {@link #loadClass(String)
loadClass(className)}.

@return the loaded class.

@exception ClassNotFoundException The specified class could not
be found.

"
      end
    end

    class 1192450 "DefaultLoaderRepository"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Keeps the list of Class Loaders registered in the MBean Server.
It provides the necessary methods to load classes using the registered
Class Loaders.</p>

<p>This deprecated class is maintained for compatibility.  In
previous versions of JMX, there was one
<code>DefaultLoaderRepository</code> shared by all MBean servers.
As of JMX 1.2, that functionality is approximated by using {@link
MBeanServerFactory#findMBeanServer} to find all known MBean
servers, and consulting the {@link ClassLoaderRepository} of each
one.  It is strongly recommended that code referencing
<code>DefaultLoaderRepository</code> be rewritten.</p>

@deprecated Use
{@link javax.management.MBeanServer#getClassLoaderRepository()}}
instead.

@since 1.5
"
      operation 9808898 "loadClass"
	class_operation public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Go through the list of class loaders and try to load the requested
class.
The method will stop as soon as the class is found. If the class
is not found the method will throw a <CODE>ClassNotFoundException</CODE>
exception.

@param className The name of the class to be loaded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be
           found.
"
      end

      operation 9809026 "loadClassWithout"
	class_operation public return_type class_ref 130818 // Class
	nparams 2
	  param inout name "loader" type class_ref 129026 // ClassLoader
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Go through the list of class loaders but exclude the given
class loader, then try to load
the requested class.
The method will stop as soon as the class is found. If the class
is not found the method will throw a <CODE>ClassNotFoundException</CODE>
exception.

@param className The name of the class to be loaded.
@param loader The class loader to be excluded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be
   found.
"
      end

      operation 9809154 "load"
	class_operation private return_type class_ref 130818 // Class
	nparams 2
	  param inout name "without" type class_ref 129026 // ClassLoader
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1192578 "MLet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Allows you to instantiate and register one or several MBeans in the MBean server
coming from a remote URL. M-let is a shortcut for management applet. The m-let service does this
by loading an m-let text file, which specifies information on the MBeans to be obtained.
The information on each MBean is specified in a single instance of a tag, called the MLET tag.
The location of the m-let text file is specified by a URL.
<p>
The <CODE>MLET</CODE> tag has the following syntax:
<p>
&lt;<CODE>MLET</CODE><BR>
     <CODE>CODE = </CODE><VAR>class</VAR><CODE> | OBJECT = </CODE><VAR>serfile</VAR><BR>
     <CODE>ARCHIVE = &quot;</CODE><VAR>archiveList</VAR><CODE>&quot;</CODE><BR>
     <CODE>[CODEBASE = </CODE><VAR>codebaseURL</VAR><CODE>]</CODE><BR>
     <CODE>[NAME = </CODE><VAR>mbeanname</VAR><CODE>]</CODE><BR>
     <CODE>[VERSION = </CODE><VAR>version</VAR><CODE>]</CODE><BR>
&gt;<BR>
     <CODE>[</CODE><VAR>arglist</VAR><CODE>]</CODE><BR>
&lt;<CODE>/MLET</CODE>&gt;
<p>
where:
<DL>
<DT><CODE>CODE = </CODE><VAR>class</VAR></DT>
<DD>
This attribute specifies the full Java class name, including package name, of the MBean to be obtained.
The compiled <CODE>.class</CODE> file of the MBean must be contained in one of the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE>
attribute. Either <CODE>CODE</CODE> or <CODE>OBJECT</CODE> must be present.
</DD>
<DT><CODE>OBJECT = </CODE><VAR>serfile</VAR></DT>
<DD>
This attribute specifies the <CODE>.ser</CODE> file that contains a serialized representation of the MBean to be obtained.
This file must be contained in one of the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> attribute. If the <CODE>.jar</CODE> file contains a directory hierarchy, specify the path of the file within this hierarchy. Otherwise  a match will not be found. Either <CODE>CODE</CODE> or <CODE>OBJECT</CODE> must be present.
</DD>
<DT><CODE>ARCHIVE = &quot;</CODE><VAR>archiveList</VAR><CODE>&quot;</CODE></DT>
<DD>
This mandatory attribute specifies one or more <CODE>.jar</CODE> files
containing MBeans or other resources used by
the MBean to be obtained. One of the <CODE>.jar</CODE> files must contain the file specified by the <CODE>CODE</CODE> or <CODE>OBJECT</CODE> attribute.
If archivelist contains more than one file:
<UL>
<LI>Each file must be separated from the one that follows it by a comma (,).
<LI><VAR>archivelist</VAR> must be enclosed in double quote marks.
</UL>
All <CODE>.jar</CODE> files in <VAR>archivelist</VAR> must be stored in the directory specified by the code base URL.
</DD>
<DT><CODE>CODEBASE = </CODE><VAR>codebaseURL</VAR></DT>
<DD>
This optional attribute specifies the code base URL of the MBean to be obtained. It identifies the directory that contains
the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> attribute. Specify this attribute only if the <CODE>.jar</CODE> files are not in the same
directory as the m-let text file. If this attribute is not specified, the base URL of the m-let text file is used.
</DD>
<DT><CODE>NAME = </CODE><VAR>mbeanname</VAR></DT>
<DD>
This optional attribute specifies the object name to be assigned to the
MBean instance when the m-let service registers it. If
<VAR>mbeanname</VAR> starts with the colon character (:), the domain
part of the object name is the default domain of the MBean server,
as returned by {@link javax.management.MBeanServer#getDefaultDomain()}.
</DD>
<DT><CODE>VERSION = </CODE><VAR>version</VAR></DT>
<DD>
This optional attribute specifies the version number of the MBean and
associated <CODE>.jar</CODE> files to be obtained. This version number can
be used to specify that the <CODE>.jar</CODE> files are loaded from the
server to update those stored locally in the cache the next time the m-let
text file is loaded. <VAR>version</VAR> must be a series of non-negative
decimal integers each separated by a period from the one that precedes it.
</DD>
<DT><VAR>arglist</VAR></DT>
<DD>
This optional attribute specifies a list of one or more parameters for the
MBean to be instantiated. This list describes the parameters to be passed the MBean's constructor.
Use the following syntax to specify each item in
<VAR>arglist</VAR>:
<DL>
<DT>&lt;<CODE>ARG TYPE=</CODE><VAR>argumentType</VAR> <CODE>VALUE=</CODE><VAR>value</VAR>&gt;</DT>
<DD>where:
<UL>
<LI><VAR>argumentType</VAR> is the type of the argument that will be passed as parameter to the MBean's constructor.</UL>
</DD>
</DL>
<P>The arguments' type in the argument list should be a Java primitive type or a Java basic type
(<CODE>java.lang.Boolean, java.lang.Byte, java.lang.Short, java.lang.Long, java.lang.Integer, java.lang.Float, java.lang.Double, java.lang.String</CODE>).
</DD>
</DL>

When an m-let text file is loaded, an
instance of each MBean specified in the file is created and registered.
<P>
The m-let service extends the <CODE>java.net.URLClassLoader</CODE> and can be used to load remote classes
and jar files in the VM of the agent.
<p><STRONG>Note - </STRONG> The <CODE>MLet</CODE> class loader uses the {@link javax.management.MBeanServerFactory#getClassLoaderRepository(javax.management.MBeanServer)}
to load classes that could not be found in the loaded jar files.

@since 1.5
"
      classrelation 3807490 // <generalisation>
	relation 3807490 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3807490 // <generalisation>
	  b parent class_ref 972802 // URLClassLoader
      end

      classrelation 3807618 // <realization>
	relation 3807618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3807618 // <realization>
	  b parent class_ref 1192706 // MLetMBean
      end

      classrelation 3807746 // <realization>
	relation 3807746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3807746 // <realization>
	  b parent class_ref 488578 // MBeanRegistration
      end

      classrelation 3807874 // <realization>
	relation 3807874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3807874 // <realization>
	  b parent class_ref 172162 // Externalizable
      end

      attribute 2278402 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3636148327800330130L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3808002 // server (<unidirectional association>)
	relation 3808002 --->
	  a role_name "server" init_value " null" private
	    comment "
------------------------------------------
  PRIVATE VARIABLES
------------------------------------------


The reference to the MBean server.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3808002 // server (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 3808130 // mletList (<unidirectional association>)
	relation 3808130 --->
	  a role_name "mletList" init_value " new ArrayList<MLetContent>()" private
	    comment "
The list of instances of the <CODE>MLetContent</CODE>
class found at the specified URL.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<MLetContent> ${name}${value};
"
	    classrelation_ref 3808130 // mletList (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 3808258 // libraryDirectory (<unidirectional association>)
	relation 3808258 --->
	  a role_name "libraryDirectory" private
	    comment "
The directory used for storing libraries locally before they are loaded.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3808258 // libraryDirectory (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3808386 // mletObjectName (<unidirectional association>)
	relation 3808386 --->
	  a role_name "mletObjectName" init_value " null" private
	    comment "
The object name of the MLet Service.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3808386 // mletObjectName (<unidirectional association>)
	  b parent class_ref 485506 // ObjectName
      end

      classrelation 3808514 // myUrls (<unidirectional association>)
	relation 3808514 --->
	  a role_name "myUrls" multiplicity "[]" init_value " null" private
	    comment "
The URLs of the MLet Service.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3808514 // myUrls (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 3808642 // currentClr (<unidirectional association>)
	relation 3808642 --->
	  a role_name "currentClr" private
	    comment "
What ClassLoaderRepository, if any, to use if this MLet
doesn't find an asked-for class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3808642 // currentClr (<unidirectional association>)
	  b parent class_ref 487810 // ClassLoaderRepository
      end

      attribute 2278530 "delegateToCLR"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if we should consult the {@link ClassLoaderRepository}
when we do not find a class ourselves.

"
      end

      classrelation 3808770 // primitiveClasses (<unidirectional association>)
	relation 3808770 --->
	  a role_name "primitiveClasses" init_value "
         new HashMap<String,Class<?>>(8) " private
	    comment "
objects maps from primitive classes to primitive object classes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Class<?>> ${name}${value};
"
	    classrelation_ref 3808770 // primitiveClasses (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      extra_member 180098 "initialization"
	
	cpp "" ""
	java "  {
         primitiveClasses.put(Boolean.TYPE.toString(), Boolean.class);
         primitiveClasses.put(Character.TYPE.toString(), Character.class);
         primitiveClasses.put(Byte.TYPE.toString(), Byte.class);
         primitiveClasses.put(Short.TYPE.toString(), Short.class);
         primitiveClasses.put(Integer.TYPE.toString(), Integer.class);
         primitiveClasses.put(Long.TYPE.toString(), Long.class);
         primitiveClasses.put(Float.TYPE.toString(), Float.class);
         primitiveClasses.put(Double.TYPE.toString(), Double.class);

     }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9810562 "MLet"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


The constructor stuff would be considerably simplified if our
parent, URLClassLoader, specified that its one- and
two-argument constructors were equivalent to its
three-argument constructor with trailing null arguments.  But
it doesn't, which prevents us from having all the constructors
but one call this(...args...).


Constructs a new MLet using the default delegation parent ClassLoader.
"
      end

      operation 9810690 "MLet"
	public explicit_return_type ""
	nparams 1
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs using the default
delegation parent ClassLoader.  The URLs will be searched in
the order specified for classes and resources after first
searching in the parent class loader.

@param  urls  The URLs from which to load classes and resources.

"
      end

      operation 9810818 "MLet"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "parent" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the given URLs. The URLs will be
searched in the order specified for classes and resources
after first searching in the specified parent class loader.
The parent argument will be used as the parent class loader
for delegation.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.

"
      end

      operation 9810946 "MLet"
	public explicit_return_type ""
	nparams 3
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "parent" type class_ref 129026 // ClassLoader
	  param inout name "factory" type class_ref 972546 // URLStreamHandlerFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs, parent class
loader, and URLStreamHandlerFactory. The parent argument will
be used as the parent class loader for delegation. The factory
argument will be used as the stream handler factory to obtain
protocol handlers when creating new URLs.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  factory  The URLStreamHandlerFactory to use when creating URLs.

"
      end

      operation 9811074 "MLet"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs using the default
delegation parent ClassLoader.  The URLs will be searched in
the order specified for classes and resources after first
searching in the parent class loader.

@param  urls  The URLs from which to load classes and resources.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

"
      end

      operation 9811202 "MLet"
	public explicit_return_type ""
	nparams 3
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "parent" type class_ref 129026 // ClassLoader
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the given URLs. The URLs will be
searched in the order specified for classes and resources
after first searching in the specified parent class loader.
The parent argument will be used as the parent class loader
for delegation.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

"
      end

      operation 9811330 "MLet"
	public explicit_return_type ""
	nparams 4
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "parent" type class_ref 129026 // ClassLoader
	  param inout name "factory" type class_ref 972546 // URLStreamHandlerFactory
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs, parent class
loader, and URLStreamHandlerFactory. The parent argument will
be used as the parent class loader for delegation. The factory
argument will be used as the stream handler factory to obtain
protocol handlers when creating new URLs.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  factory  The URLStreamHandlerFactory to use when creating URLs.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

"
      end

      operation 9811458 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9811586 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Appends the specified URL to the list of URLs to search for classes and
resources.
"
      end

      operation 9811714 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 522882 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified URL to the list of URLs to search for classes and
resources.
@exception ServiceNotFoundException The specified URL is malformed.
"
      end

      operation 9811842 "getURLs"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the search path of URLs for loading classes and resources.
This includes the original list of URLs specified to the constructor,
along with any URLs subsequently appended by the addURL() method.
"
      end

      operation 9811970 "getMBeansFromURL"
	public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 522882 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans to
be added to the MBean server. The location of the text file is specified by
a URL. The MBeans specified in the MLET file will be instantiated and
registered in the MBean server.

@param url The URL of the text file to be loaded as URL object.

@return  A set containing one entry per MLET tag in the m-let text file loaded.
Each entry specifies either the ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be created.

@exception ServiceNotFoundException One of the following errors has occurred: The m-let text file does
not contain an MLET tag, the m-let text file is not found, a mandatory
attribute of the MLET tag is not specified, the value of url is
null.
@exception IllegalStateException MLet MBean is not registered with an MBeanServer.
"
      end

      operation 9812098 "getMBeansFromURL"
	public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "url" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 522882 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans to
be added to the MBean server. The location of the text file is specified by
a URL. The MBeans specified in the MLET file will be instantiated and
registered in the MBean server.

@param url The URL of the text file to be loaded as String object.

@return A set containing one entry per MLET tag in the m-let
text file loaded.  Each entry specifies either the
ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be
created.

@exception ServiceNotFoundException One of the following
errors has occurred: The m-let text file does not contain an
MLET tag, the m-let text file is not found, a mandatory
attribute of the MLET tag is not specified, the url is
malformed.
@exception IllegalStateException MLet MBean is not registered
with an MBeanServer.

"
      end

      operation 9812226 "getLibraryDirectory"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current directory used by the library loader for
storing native libraries before they are loaded into memory.

@return The current directory used by the library loader.

@see #setLibraryDirectory

@throws UnsupportedOperationException if this implementation
does not support storing native libraries in this way.
"
      end

      operation 9812354 "setLibraryDirectory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "libdir" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the directory used by the library loader for storing
native libraries before they are loaded into memory.

@param libdir The directory used by the library loader.

@see #getLibraryDirectory

@throws UnsupportedOperationException if this implementation
does not support storing native libraries in this way.
"
      end

      operation 9812482 "preRegister"
	public return_type class_ref 485506 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 485122 // MBeanServer
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations it needs before
being registered in the MBean server. If the ObjectName is
null, the m-let provides a default name for its registration
&lt;defaultDomain&gt;:type=MLet

@param server The MBean server in which the m-let will be registered.
@param name The object name of the m-let.

@return  The name of the m-let registered.

@exception java.lang.Exception This exception should be caught by the MBean server and re-thrown
as an MBeanRegistrationException.
"
      end

      operation 9812610 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations needed after having been
registered in the MBean server or after the registration has failed.

@param registrationDone Indicates whether or not the m-let has
been successfully registered in the MBean server. The value
false means that either the registration phase has failed.

"
      end

      operation 9812738 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations it needs before being unregistered
by the MBean server.

@exception java.lang.Exception This exception should be caught
by the MBean server and re-thrown as an
MBeanRegistrationException.
"
      end

      operation 9812866 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations needed after having been
unregistered in the MBean server.
"
      end

      operation 9812994 "writeExternal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 174082 // ObjectOutput
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 193538 // UnsupportedOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Save this MLet's contents to the given {@link ObjectOutput}.
Not all implementations support this method.  Those that do not
throw {@link UnsupportedOperationException}.  A subclass may
override this method to support it or to change the format of
the written data.</p>

<p>The format of the written data is not specified, but if
an implementation supports {@link #writeExternal} it must
also support {@link #readExternal} in such a way that what is
written by the former can be read by the latter.</p>

@param out The object output stream to write to.

@exception IOException If a problem occurred while writing.
@exception UnsupportedOperationException If this
implementation does not support this operation.
"
      end

      operation 9813122 "readExternal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 169474 // ObjectInput
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 193538 // UnsupportedOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Restore this MLet's contents from the given {@link ObjectInput}.
Not all implementations support this method.  Those that do not
throw {@link UnsupportedOperationException}.  A subclass may
override this method to support it or to change the format of
the read data.</p>

<p>The format of the read data is not specified, but if an
implementation supports {@link #readExternal} it must also
support {@link #writeExternal} in such a way that what is
written by the latter can be read by the former.</p>

@param in The object input stream to read from.

@exception IOException if a problem occurred while reading.
@exception ClassNotFoundException if the class for the object
being restored cannot be found.
@exception UnsupportedOperationException if this
implementation does not support this operation.
"
      end

      operation 9813250 "loadClass"
	public return_type class_ref 130818 // Class
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "clr" type class_ref 487810 // ClassLoaderRepository
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


<p>Load a class, using the given {@link ClassLoaderRepository} if
the class is not found in this MLet's URLs.  The given
ClassLoaderRepository can be null, in which case a {@link
ClassNotFoundException} occurs immediately if the class is not
found in this MLet's URLs.</p>

@param name The name of the class we want to load.
@param clr  The ClassLoaderRepository that will be used to search
            for the given class, if it is not found in this
            ClassLoader.  May be null.
@return The resulting Class object.
@exception ClassNotFoundException The specified class could not be
           found in this ClassLoader nor in the given
           ClassLoaderRepository.

"
      end

      operation 9813378 "findClass"
	protected return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PROTECTED METHODS
------------------------------------------


This is the main method for class loaders that is being redefined.

@param name The name of the class.

@return The resulting Class object.

@exception ClassNotFoundException The specified class could not be
           found.
"
      end

      operation 9813506 "findClass"
	package return_type class_ref 130818 // Class
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "clr" type class_ref 487810 // ClassLoaderRepository
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link MLet#findClass(java.lang.String)}.

@param name The name of the class that we want to load/find.
@param clr The ClassLoaderRepository that can be used to search
           for the given class. This parameter is
           <code>null</code> when called from within the
           {@link javax.management.MBeanServerFactory#getClassLoaderRepository(javax.management.MBeanServer) Class Loader Repository}.
@exception ClassNotFoundException The specified class could not be
           found.

"
      end

      operation 9813634 "findLibrary"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "libname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path name of a native library. The VM
invokes this method to locate the native libraries that belong
to classes loaded with this class loader. Libraries are
searched in the JAR files using first just the native library
name and if not found the native library name together with
the architecture-specific path name
(<code>OSName/OSArch/OSVersion/lib/nativelibname</code>), i.e.
<p>
the library stat on Solaris SPARC 5.7 will be searched in the JAR file as:
<OL>
<LI>libstat.so
<LI>SunOS/sparc/5.7/lib/libstat.so
</OL>
the library stat on Windows NT 4.0 will be searched in the JAR file as:
<OL>
<LI>stat.dll
<LI>WindowsNT/x86/4.0/lib/stat.dll
</OL>

<p>More specifically, let <em>{@code nativelibname}</em> be the result of
{@link System#mapLibraryName(java.lang.String)
System.mapLibraryName}{@code (libname)}.  Then the following names are
searched in the JAR files, in order:<br>
<em>{@code nativelibname}</em><br>
{@code <os.name>/<os.arch>/<os.version>/lib/}<em>{@code nativelibname}</em><br>
where {@code <X>} means {@code System.getProperty(X)} with any
spaces in the result removed, and {@code /} stands for the
file separator character ({@link File#separator}).
<p>
If this method returns <code>null</code>, i.e. the libraries
were not found in any of the JAR files loaded with this class
loader, the VM searches the library along the path specified
as the <code>java.library.path</code> property.

@param libname The library name.

@return The absolute path of the native library.
"
      end

      operation 9813762 "getTmpDir"
	private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PRIVATE METHODS
------------------------------------------
"
      end

      operation 9813890 "loadLibraryAsResource"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "libname" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Search the specified native library in any of the JAR files
loaded by this classloader.  If the library is found copy it
into the library directory and return the absolute path.  If
the library is not found then return null.
"
      end

      operation 9814018 "removeSpace"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes any white space from a string. This is used to
convert strings such as \"Windows NT\" to \"WindowsNT\".
"
      end

      operation 9814146 "check"
	protected return_type class_ref 243458 // URL
	nparams 4
	  param inout name "version" type class_ref 128130 // String
	  param inout name "codebase" type class_ref 243458 // URL
	  param inout name "jarfile" type class_ref 128130 // String
	  param inout name "mlet" type class_ref 1192834 // MLetContent
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method is to be overridden when extending this service to
support caching and versioning.  It is called from {@link
#getMBeansFromURL getMBeansFromURL} when the version,
codebase, and jarfile have been extracted from the MLet file,
and can be used to verify that it is all right to load the
given MBean, or to replace the given URL with a different one.</p>

<p>The default implementation of this method returns
<code>codebase</code> unchanged.</p>

@param version The version number of the <CODE>.jar</CODE>
file stored locally.
@param codebase The base URL of the remote <CODE>.jar</CODE> file.
@param jarfile The name of the <CODE>.jar</CODE> file to be loaded.
@param mlet The <CODE>MLetContent</CODE> instance that
represents the <CODE>MLET</CODE> tag.

@return the codebase to use for the loaded MBean.  The returned
value should not be null.

@exception Exception if the MBean is not to be loaded for some
reason.  The exception will be added to the set returned by
{@link #getMBeansFromURL getMBeansFromURL}.

"
      end

      operation 9814274 "loadSerializedObject"
	private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "codebase" type class_ref 243458 // URL
	  param inout name "filename" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the serialized object specified by the <CODE>OBJECT</CODE>
attribute of the <CODE>MLET</CODE> tag.

@param codebase The <CODE>codebase</CODE>.
@param filename The name of the file containing the serialized object.
@return The serialized object.
@exception ClassNotFoundException The specified serialized
object could not be found.
@exception IOException An I/O error occurred while loading
serialized object.
"
      end

      operation 9814402 "constructParameter"
	private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "param" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the String value of the constructor's parameter to
a basic Java object with the type of the parameter.
"
      end

      operation 9814530 "setMBeanServer"
	private explicit_return_type "void"
	nparams 1
	  param in name "server" type class_ref 485122 // MBeanServer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1192706 "MLetMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Exposes the remote management interface of the MLet
MBean.

@since 1.5
"
      operation 9809282 "getMBeansFromURL"
	public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "url" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 522882 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans
to be added to the MBean server. The location of the text file is
specified by a URL. The text file is read using the UTF-8
encoding. The MBeans specified in the MLET file will be
instantiated and registered in the MBean server.

@param url The URL of the text file to be loaded as String object.

@return A set containing one entry per MLET tag in the m-let
text file loaded.  Each entry specifies either the
ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be
created.

@exception ServiceNotFoundException One of the following errors
has occurred: The m-let text file does not contain an MLET tag,
the m-let text file is not found, a mandatory attribute of the
MLET tag is not specified, the value of url is malformed.
"
      end

      operation 9809410 "getMBeansFromURL"
	public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 522882 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans
to be added to the MBean server. The location of the text file is
specified by a URL. The text file is read using the UTF-8
encoding. The MBeans specified in the MLET file will be
instantiated and registered in the MBean server.

@param url The URL of the text file to be loaded as URL object.

@return A set containing one entry per MLET tag in the m-let
text file loaded.  Each entry specifies either the
ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be
created.

@exception ServiceNotFoundException One of the following errors
has occurred: The m-let text file does not contain an MLET tag,
the m-let text file is not found, a mandatory attribute of the
MLET tag is not specified, the value of url is null.
"
      end

      operation 9809538 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified URL to the list of URLs to search for classes and
resources.

@param url the URL to add.
"
      end

      operation 9809666 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 522882 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified URL to the list of URLs to search for classes and
resources.

@param url the URL to add.

@exception ServiceNotFoundException The specified URL is malformed.
"
      end

      operation 9809794 "getURLs"
	public return_type class_ref 243458 // URL
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the search path of URLs for loading classes and resources.
This includes the original list of URLs specified to the constructor,
along with any URLs subsequently appended by the addURL() method.

@return the list of URLs.
"
      end

      operation 9809922 "getResource"
	public return_type class_ref 243458 // URL
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finds the resource with the given name.
A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is
  independent of the location of the code.
  The name of a resource is a \"/\"-separated path name that identifies the resource.

@param name The resource name

@return  An URL for reading the resource, or null if the resource could not be found or the caller doesn't have adequate privileges to get the
resource.
"
      end

      operation 9810050 "getResourceAsStream"
	public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns an input stream for reading the specified resource. The search order is described in the documentation for
 getResource(String).

@param name  The resource name

@return An input stream for reading the resource, or null if the resource could not be found

"
      end

      operation 9810178 "getResources"
	public return_type class_ref 185986 // Enumeration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds all the resources with the given name. A resource is some
data (images, audio, text, etc) that can be accessed by class
code in a way that is independent of the location of the code.
The name of a resource is a \"/\"-separated path name that
identifies the resource.

@param name The  resource name.

@return An enumeration of URL to the resource. If no resources
could be found, the enumeration will be empty. Resources that
cannot be accessed will not be in the enumeration.

@exception IOException if an I/O exception occurs when
searching for resources.
"
      end

      operation 9810306 "getLibraryDirectory"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current directory used by the library loader for
storing native libraries before they are loaded into memory.

@return The current directory used by the library loader.

@see #setLibraryDirectory

@throws UnsupportedOperationException if this implementation
does not support storing native libraries in this way.
"
      end

      operation 9810434 "setLibraryDirectory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "libdir" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the directory used by the library loader for storing
native libraries before they are loaded into memory.

@param libdir The directory used by the library loader.

@see #getLibraryDirectory

@throws UnsupportedOperationException if this implementation
does not support storing native libraries in this way.
"
      end
    end

    class 1192834 "MLetContent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents the contents of the <CODE>MLET</CODE> tag.
It can be consulted by a subclass of {@link MLet} that overrides
the {@link MLet#check MLet.check} method.

@since 1.6
"
      classrelation 3808898 // attributes (<unidirectional association>)
	relation 3808898 --->
	  a role_name "attributes" private
	    comment "
A map of the attributes of the <CODE>MLET</CODE> tag
and their values.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,String> ${name}${value};
"
	    classrelation_ref 3808898 // attributes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3809026 // types (<unidirectional association>)
	relation 3809026 --->
	  a role_name "types" private
	    comment "
An ordered list of the TYPE attributes that appeared in nested
&lt;PARAM&gt; tags.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 3809026 // types (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 3809154 // values (<unidirectional association>)
	relation 3809154 --->
	  a role_name "values" private
	    comment "
An ordered list of the VALUE attributes that appeared in nested
&lt;PARAM&gt; tags.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 3809154 // values (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 3809282 // documentURL (<unidirectional association>)
	relation 3809282 --->
	  a role_name "documentURL" private
	    comment "
The MLet text file's base URL.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3809282 // documentURL (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 3809410 // baseURL (<unidirectional association>)
	relation 3809410 --->
	  a role_name "baseURL" private
	    comment "
The base URL.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3809410 // baseURL (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      operation 9814658 "MLetContent"
	public explicit_return_type ""
	nparams 4
	  param inout name "url" type class_ref 243458 // URL
	  param inout name "attributes" type class_ref 130178 // Map
	  param inout name "types" type class_ref 175362 // List
	  param inout name "values" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,String> ${p1}, ${t2}<String> ${p2}, ${t3}<String> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <CODE>MLet</CODE> instance initialized with attributes read
from an <CODE>MLET</CODE> tag in an MLet text file.

@param url The URL of the MLet text file containing the
<CODE>MLET</CODE> tag.
@param attributes A map of the attributes of the <CODE>MLET</CODE> tag.
The keys in this map are the attribute names in lowercase, for
example <code>codebase</code>.  The values are the associated attribute
values.
@param types A list of the TYPE attributes that appeared in nested
&lt;PARAM&gt; tags.
@param values A list of the VALUE attributes that appeared in nested
&lt;PARAM&gt; tags.
"
      end

      operation 9814786 "getAttributes"
	public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Gets the attributes of the <CODE>MLET</CODE> tag.  The keys in
the returned map are the attribute names in lowercase, for
example <code>codebase</code>.  The values are the associated
attribute values.
@return A map of the attributes of the <CODE>MLET</CODE> tag
and their values.
"
      end

      operation 9814914 "getDocumentBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the MLet text file's base URL.
@return The MLet text file's base URL.
"
      end

      operation 9815042 "getCodeBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the code base URL.
@return The code base URL.
"
      end

      operation 9815170 "getJarFiles"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return A comma-separated list of <CODE>.jar</CODE> file names.
"
      end

      operation 9815298 "getCode"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>CODE</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>CODE</CODE>
attribute of the <CODE>MLET</CODE> tag.
"
      end

      operation 9815426 "getSerializedObject"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>OBJECT</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>OBJECT</CODE>
attribute of the <CODE>MLET</CODE> tag.
"
      end

      operation 9815554 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>NAME</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>NAME</CODE>
attribute of the <CODE>MLET</CODE> tag.
"
      end

      operation 9815682 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>VERSION</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>VERSION</CODE>
attribute of the <CODE>MLET</CODE> tag.
"
      end

      operation 9815810 "getParameterTypes"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of values of the <code>TYPE</code> attribute in
each nested &lt;PARAM&gt; tag within the <code>MLET</code>
tag.
@return the list of types.
"
      end

      operation 9815938 "getParameterValues"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of values of the <code>VALUE</code> attribute in
each nested &lt;PARAM&gt; tag within the <code>MLET</code>
tag.
@return the list of values.
"
      end

      operation 9816066 "getParameter"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the specified
attribute of the <CODE>MLET</CODE> tag.

@param name A string representing the name of the attribute.
@return The value of the specified
attribute of the <CODE>MLET</CODE> tag.
"
      end
    end

    class 1192962 "MLetObjectInputStream"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This subclass of ObjectInputStream delegates loading of classes to
an existing MLetClassLoader.

@since 1.5
"
      classrelation 3809538 // <generalisation>
	relation 3809538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3809538 // <generalisation>
	  b parent class_ref 168962 // ObjectInputStream
      end

      classrelation 3809666 // loader (<unidirectional association>)
	relation 3809666 --->
	  a role_name "loader" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3809666 // loader (<unidirectional association>)
	  b parent class_ref 1192578 // MLet
      end

      operation 9816194 "MLetObjectInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "loader" type class_ref 1192578 // MLet
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 171778 // StreamCorruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loader must be non-null;
"
      end

      operation 9816322 "primitiveType"
	private return_type class_ref 130818 // Class
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9816450 "resolveClass"
	protected return_type class_ref 130818 // Class
	nparams 1
	  param inout name "objectstreamclass" type class_ref 170242 // ObjectStreamClass
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Use the given ClassLoader rather than using the system class
"
      end

      operation 9816578 "getClassLoader"
	public return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ClassLoader being used
"
      end
    end

    class 1193090 "MLetParser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used for parsing URLs.

@since 1.5
"
      attribute 2278658 "c"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "------------------------------------------
  PRIVATE VARIABLES
------------------------------------------


The current character

"
      end

      classrelation 3809794 // tag (<unidirectional association>)
	relation 3809794 --->
	  a role_name "tag" init_value " \"mlet\"" class_relation private
	    comment "
Tag to parse.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3809794 // tag (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 9816706 "MLetParser"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
  CONSTRUCTORS
------------------------------------------


Create an MLet parser object
"
      end

      operation 9816834 "skipSpace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 407298 // Reader
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
  PUBLIC METHODS
------------------------------------------


Scan spaces.
"
      end

      operation 9816962 "scanIdentifier"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "in" type class_ref 407298 // Reader
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan identifier
"
      end

      operation 9817090 "scanTag"
	public return_type class_ref 130178 // Map
	nparams 1
	  param inout name "in" type class_ref 407298 // Reader
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan tag
"
      end

      operation 9817218 "parse"
	public return_type class_ref 175362 // List
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<MLetContent> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan an html file for {@literal <mlet>} tags.
"
      end

      operation 9817346 "parseURL"
	public return_type class_ref 175362 // List
	nparams 1
	  param inout name "urlname" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<MLetContent> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the document pointed by the URL urlname
"
      end
    end

    class 1193218 "PrivateClassLoader"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Marker interface indicating that a ClassLoader should not be added
to the {@link ClassLoaderRepository}.  When a ClassLoader is
registered as an MBean in the MBean server, it is added to the
MBean server's ClassLoaderRepository unless it implements this
interface.

@since 1.5
"
    end

    class 1193346 "PrivateMLet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An MLet that is not added to the {@link ClassLoaderRepository}.
This class acts exactly like its parent class, {@link MLet}, with
one exception.  When a PrivateMLet is registered in an MBean
server, it is not added to that MBean server's {@link
ClassLoaderRepository}.  This is true because this class implements
the interface {@link PrivateClassLoader}.

@since 1.5
"
      classrelation 3809922 // <generalisation>
	relation 3809922 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3809922 // <generalisation>
	  b parent class_ref 1192578 // MLet
      end

      classrelation 3810050 // <realization>
	relation 3810050 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3810050 // <realization>
	  b parent class_ref 1193218 // PrivateClassLoader
      end

      attribute 2278786 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2503458973393711979L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9817474 "PrivateMLet"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new PrivateMLet for the specified URLs using the
default delegation parent ClassLoader.  The URLs will be
searched in the order specified for classes and resources
after first searching in the parent class loader.

@param  urls  The URLs from which to load classes and resources.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

"
      end

      operation 9817602 "PrivateMLet"
	public explicit_return_type ""
	nparams 3
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "parent" type class_ref 129026 // ClassLoader
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new PrivateMLet for the given URLs. The URLs will
be searched in the order specified for classes and resources
after first searching in the specified parent class loader.
The parent argument will be used as the parent class loader
for delegation.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

"
      end

      operation 9817730 "PrivateMLet"
	public explicit_return_type ""
	nparams 4
	  param inout name "urls" type class_ref 243458 // URL
	multiplicity "[]"
	  param inout name "parent" type class_ref 129026 // ClassLoader
	  param inout name "factory" type class_ref 972546 // URLStreamHandlerFactory
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new PrivateMLet for the specified URLs, parent
class loader, and URLStreamHandlerFactory. The parent argument
will be used as the parent class loader for delegation. The
factory argument will be used as the stream handler factory to
obtain protocol handlers when creating new URLs.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  factory  The URLStreamHandlerFactory to use when creating URLs.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

"
      end
    end
  end

  deploymentview 146050 "loading"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 324354 "ClassLoaderRepository"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanServer;
${definition}"
      associated_elems
	class_ref 487810 // ClassLoaderRepository
      end
      comment "Copyright (c) 2002, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 858370 "DefaultLoaderRepository"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import javax.management.MBeanServer;
import javax.management.MBeanServerFactory;
import static com.sun.jmx.defaults.JmxProperties.MBEANSERVER_LOGGER;
${definition}"
      associated_elems
	class_ref 1192450 // DefaultLoaderRepository
      end
      comment "Copyright (c) 2000, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 858498 "MLetMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.io.InputStream;
import java.io.IOException;
import java.util.Set;
import java.util.Enumeration;
import javax.management.*;
${definition}"
      associated_elems
	class_ref 1192706 // MLetMBean
      end
      comment "Copyright (c) 1999, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 858626 "MLet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.defaults.JmxProperties;
import com.sun.jmx.defaults.ServiceName;
import com.sun.jmx.remote.util.EnvHelp;
import java.io.Externalizable;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.lang.reflect.Constructor;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandlerFactory;
import java.nio.file.Files;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.Map;
import java.util.Set;
import java.util.StringTokenizer;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanRegistration;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServer;
import javax.management.NotCompliantMBeanException;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import com.sun.jmx.defaults.ServiceName;
import javax.management.ServiceNotFoundException;
${definition}"
      associated_elems
	class_ref 1192578 // MLet
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 858754 "MLetContent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.net.MalformedURLException;
import java.util.Collections;
import java.util.List;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 1192834 // MLetContent
      end
      comment "Copyright (c) 1999, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 858882 "MLetObjectInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.lang.reflect.Array;
${definition}"
      associated_elems
	class_ref 1192962 // MLetObjectInputStream
      end
      comment "Copyright (c) 1999, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 859010 "MLetParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import static com.sun.jmx.defaults.JmxProperties.MLET_LOGGER;
${definition}"
      associated_elems
	class_ref 1193090 // MLetParser
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 859138 "PrivateClassLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1193218 // PrivateClassLoader
      end
      comment "Copyright (c) 2002, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 859266 "PrivateMLet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.net.URLStreamHandlerFactory;
${definition}"
      associated_elems
	class_ref 1193346 // PrivateMLet
      end
      comment "Copyright (c) 2002, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
