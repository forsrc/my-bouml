class ToSAXHandler
!!!5581442.java!!!	ToSAXHandler(inout hdlr : ContentHandler, inout lex : LexicalHandler, inout encoding : String)
        setContentHandler(hdlr);
        setLexHandler(lex);
        setEncoding(encoding);
!!!5581570.java!!!	ToSAXHandler(inout handler : ContentHandler, inout encoding : String)
        setContentHandler(handler);
        setEncoding(encoding);
!!!5581698.java!!!	startDocumentInternal() : void
        if (m_needToCallStartDocument)
        {
            super.startDocumentInternal();

            m_saxHandler.startDocument();
            m_needToCallStartDocument = false;
        }
!!!5581826.java!!!	startDTD(inout arg0 : String, inout arg1 : String, inout arg2 : String) : void
        // do nothing for now
!!!5581954.java!!!	characters(inout characters : String) : void
        final int len = characters.length();
        if (len > m_charsBuff.length)
        {
           m_charsBuff = new char[len*2 + 1];
        }
        characters.getChars(0,len, m_charsBuff, 0);
        characters(m_charsBuff, 0, len);
!!!5582082.java!!!	comment(inout comment : String) : void
        flushPending();

        // Ignore if a lexical handler has not been set
        if (m_lexHandler != null)
        {
            final int len = comment.length();
            if (len > m_charsBuff.length)
            {
               m_charsBuff = new char[len*2 + 1];
            }
            comment.getChars(0,len, m_charsBuff, 0);
            m_lexHandler.comment(m_charsBuff, 0, len);
            // time to fire off comment event
            if (m_tracer != null)
                super.fireCommentEvent(m_charsBuff, 0, len);
        }

!!!5582210.java!!!	processingInstruction(inout target : String, inout data : String) : void
        // Redefined in SAXXMLOutput
!!!5582466.java!!!	closeCDATA() : void
        // Redefined in SAXXMLOutput
!!!5582594.java!!!	startElement(inout arg0 : String, inout arg1 : String, inout arg2 : String, inout arg3 : Attributes) : void
        if (m_state != null) {
            m_state.resetState(getTransformer());
        }

        // fire off the start element event
        if (m_tracer != null)
            super.fireStartElem(arg2);
!!!5582722.java!!!	setLexHandler(inout _lexHandler : LexicalHandler) : void
        this.m_lexHandler = _lexHandler;
!!!5582850.java!!!	setContentHandler(inout _saxHandler : ContentHandler) : void
        this.m_saxHandler = _saxHandler;
        if (m_lexHandler == null && _saxHandler instanceof LexicalHandler)
        {
            // we are not overwriting an existing LexicalHandler, and _saxHandler
            // is also implements LexicalHandler, so lets use it
            m_lexHandler = (LexicalHandler) _saxHandler;
        }
!!!5582978.java!!!	setCdataSectionElements(inout URI_and_localNames : Vector) : void
        // do nothing
!!!5583106.java!!!	setShouldOutputNSAttr(inout doOutputNSAttr : boolean) : void
        m_shouldGenerateNSAttribute = doOutputNSAttr;
!!!5583234.java!!!	getShouldOutputNSAttr() : boolean
        return m_shouldGenerateNSAttribute;
!!!5583362.java!!!	flushPending() : void

            if (m_needToCallStartDocument)
            {
                startDocumentInternal();
                m_needToCallStartDocument = false;
            }

            if (m_elemContext.m_startTagOpen)
            {
                closeStartTag();
                m_elemContext.m_startTagOpen = false;
            }

            if (m_cdataTagOpen)
            {
                closeCDATA();
                m_cdataTagOpen = false;
            }

!!!5583490.java!!!	setTransformState(inout ts : TransformStateSetter) : void
        this.m_state = ts;
!!!5583618.java!!!	startElement(inout uri : String, inout localName : String, inout qName : String) : void

        if (m_state != null) {
            m_state.resetState(getTransformer());
        }

        // fire off the start element event
        if (m_tracer != null)
            super.fireStartElem(qName);
!!!5583746.java!!!	startElement(inout qName : String) : void
        if (m_state != null) {
            m_state.resetState(getTransformer());
        }
        // fire off the start element event
        if (m_tracer != null)
            super.fireStartElem(qName);
!!!5583874.java!!!	characters(inout node : Node) : void
        // remember the current node
        if (m_state != null)
        {
            m_state.setCurrentNode(node);
        }

        // Get the node's value as a String and use that String as if
        // it were an input character notification.
        String data = node.getNodeValue();
        if (data != null) {
            this.characters(data);
        }
!!!5584002.java!!!	fatalError(inout exc : SAXParseException) : void
        super.fatalError(exc);

        m_needToCallStartDocument = false;

        if (m_saxHandler instanceof ErrorHandler) {
            ((ErrorHandler)m_saxHandler).fatalError(exc);
        }
!!!5584130.java!!!	error(inout exc : SAXParseException) : void
        super.error(exc);

        if (m_saxHandler instanceof ErrorHandler)
            ((ErrorHandler)m_saxHandler).error(exc);

!!!5584258.java!!!	warning(inout exc : SAXParseException) : void
        super.warning(exc);

        if (m_saxHandler instanceof ErrorHandler)
            ((ErrorHandler)m_saxHandler).warning(exc);
!!!5584386.java!!!	reset() : boolean
        boolean wasReset = false;
        if (super.reset())
        {
            resetToSAXHandler();
            wasReset = true;
        }
        return wasReset;
!!!5584514.java!!!	resetToSAXHandler() : void
        this.m_lexHandler = null;
        this.m_saxHandler = null;
        this.m_state = null;
        this.m_shouldGenerateNSAttribute = false;
!!!5584642.java!!!	addUniqueAttribute(inout qName : String, inout value : String, in flags : int) : void
        addAttribute(qName, value);
