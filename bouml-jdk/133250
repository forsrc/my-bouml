format 222
"protocol" // jdk1.8::com::sun::corba::se::pept::protocol
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/corba/se/pept/protocol/"
  java_package "com.sun.corba.se.pept.protocol"
  classview 131586 "protocol"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 150530 "MessageMediator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>MessageMediator</code> is a central repository for artifacts
associated with an individual message.

@author Harold Carr
"
      operation 1351810 "getBroker"
	public return_type class_ref 211330 // Broker
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The {@link com.sun.corba.se.pept.broker.Broker Broker} associated
with an invocation.

@return {@link com.sun.corba.se.pept.broker.Broker Broker}
"
      end

      operation 1351938 "getContactInfo"
	public return_type class_ref 212098 // ContactInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the
{@link com.sun.corba.se.pept.transport.ContactInfo ContactInfo}
which created this <code>MessageMediator</code>.

@return
{@link com.sun.corba.se.pept.transport.ContactInfo ContactInfo}
"
      end

      operation 1352066 "getConnection"
	public return_type class_ref 210946 // Connection
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the
{@link com.sun.corba.se.pept.transport.Connection Connection}
on which this message is sent or received.
"
      end

      operation 1352194 "initializeMessage"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to initialize message headers.

Note: this should be moved to a <code>RequestDispatcher</code>.
"
      end

      operation 1352322 "finishSendingRequest"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to send the message (or its last fragment).

Note: this should be moved to a <code>RequestDispatcher</code>.
"
      end

      operation 1352450 "waitForResponse"
	public return_type class_ref 164610 // InputObject
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Used to wait for a response for synchronous messages.

@deprecated
"
      end

      operation 1352578 "setOutputObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outputObject" type class_ref 166914 // OutputObject
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to set the
{@link com.sun.corba.se.pept.encoding.OutputObject OutputObject}
used for the message.

@param outputObject
"
      end

      operation 1352706 "getOutputObject"
	public return_type class_ref 166914 // OutputObject
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to get the
{@link com.sun.corba.se.pept.encoding.OutputObject OutputObject}
used for the message.

@return
{@link com.sun.corba.se.pept.encoding.OutputObject OutputObject}
"
      end

      operation 1352834 "setInputObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputObject" type class_ref 164610 // InputObject
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to set the
{@link com.sun.corba.se.pept.encoding.InputObject InputObject}
used for the message.

@param inputObject
"
      end

      operation 1352962 "getInputObject"
	public return_type class_ref 164610 // InputObject
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to get the
{@link com.sun.corba.se.pept.encoding.InputObject InputObject}
used for the message.

@return
{@link com.sun.corba.se.pept.encoding.InputObject InputObject}
"
      end
    end

    class 213506 "ClientRequestDispatcher"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>ClientRequestDispatcher</code> coordinates the request (and possible
response) processing for a specific <em>protocol</em>.

@author Harold Carr
"
      operation 1346178 "beginRequest"
	public return_type class_ref 166914 // OutputObject
	nparams 4
	  param inout name "self" type class_ref 129538 // Object
	  param inout name "methodName" type class_ref 128130 // String
	  param inout name "isOneWay" explicit_type "boolean"
	  param inout name "contactInfo" type class_ref 212098 // ContactInfo
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "At the beginning of a request the presentation block uses this
to obtain an
{@link com.sun.corba.se.pept.encoding.OutputObject OutputObject}
to set data to be sent on a message.

@param self -
@param methodName - the remote method name
@param isOneWay - <code>true</code> if the message is asynchronous
@param contactInfo - the
{@link com.sun.corba.se.pept.transport.ContactInfo ContactInfo}
which which created/chose this <code>ClientRequestDispatcher</code>

@return
{@link com.sun.corba.se.pept.encoding.OutputObject OutputObject}
"
      end

      operation 1346306 "marshalingComplete"
	public return_type class_ref 164610 // InputObject
	nparams 2
	  param inout name "self" type class_ref 129538 // Object
	  param inout name "outputObject" type class_ref 166914 // OutputObject
	nexceptions 2
	  exception class_ref 135170 // ApplicationException
	  exception class_ref 135298 // RemarshalException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "After the presentation block has set data on the
{@link com.sun.corba.se.pept.encoding.OutputObject OutputObject}
it signals the PEPt runtime to send the encoded data by calling this
method.

@param self -
@param outputObject

@return
{@link com.sun.corba.se.pept.encoding.InputObject InputObject}
if the message is synchronous.

@throws
{@link org.omg.CORBA.portable.ApplicationException ApplicationException}
if the remote side raises an exception declared in the remote interface.

@throws
{@link org.omg.CORBA.portable.RemarshalException RemarshalException}
if the PEPt runtime would like the presentation block to start over.
"
      end

      operation 1346434 "endRequest"
	public explicit_return_type "void"
	nparams 3
	  param inout name "broker" type class_ref 211330 // Broker
	  param inout name "self" type class_ref 129538 // Object
	  param inout name "inputObject" type class_ref 164610 // InputObject
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "After the presentation block completes a request it signals
the PEPt runtime by calling this method.

This method may release resources.  In some cases it may cause
control or error messages to be sent.

@param broker -
@param inputObject -
"
      end
    end

    class 245250 "ClientInvocationInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Harold Carr
"
      operation 1348738 "getContactInfoListIterator"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1348866 "setContactInfoListIterator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contactInfoListIterator" type class_ref 132994 // Iterator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1348994 "isRetryInvocation"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1349122 "setIsRetryInvocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isRetryInvocation" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1349250 "getEntryCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1349378 "incrementEntryCount"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1349506 "decrementEntryCount"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1349634 "setClientRequestDispatcher"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clientRequestDispatcher" type class_ref 213506 // ClientRequestDispatcher
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1349762 "getClientRequestDispatcher"
	public return_type class_ref 213506 // ClientRequestDispatcher
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1349890 "setMessageMediator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "messageMediator" type class_ref 150530 // MessageMediator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1350018 "getMessageMediator"
	public return_type class_ref 150530 // MessageMediator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 264322 "ServerRequestDispatcher"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>ServerRequestDispatcher</code> coordinates the request (and possible
response) processing for a specific <em>protocol</em>.

@author Harold Carr
"
      operation 1338754 "dispatch"
	public explicit_return_type "void"
	nparams 1
	  param inout name "messageMediator" type class_ref 150530 // MessageMediator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method coordinates the processing of a message received
on the server side.

For example, this may involve finding an \"object adapter\" which
would return Ties/Servants to handle the request.
"
      end
    end

    class 264706 "ClientDelegate"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>The presentation block interacts with the PEPt architecture
via the <code>ClientDelegate</code>.</p>

@author Harold Carr
"
      operation 1342594 "getBroker"
	public return_type class_ref 211330 // Broker
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The {@link com.sun.corba.se.pept.broker.Broker Broker} associated
with an invocation.

@return {@link com.sun.corba.se.pept.broker.Broker Broker}
"
      end

      operation 1342722 "getContactInfoList"
	public return_type class_ref 213378 // ContactInfoList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the
{@link com.sun.corba.se.pept.transport.ContactInfoList ContactInfoList}
which represents they encoding/protocol/transport combinations that
may be used to contact the service.

@return
{@link com.sun.corba.se.pept.transport.ContactInfoList ContactInfoList}
"
      end
    end

    class 265730 "ProtocolHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>ProtocolHandler</code> is used to determine the
type of an incoming message.

@author Harold Carr
"
      operation 1359106 "handleRequest"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "messageMediator" type class_ref 150530 // MessageMediator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REVISIT - return type

This method determines the type of an incoming message and
dispatches it appropriately.

For example, on the server side, it may find a
{@link com.sun.corba.se.pept.protocol.ServerRequestDispatcher
ServerRequestDispatcher} to handle the request.  On the client-side
it may signal a waiting thread to handle a reply.

@return deprecated
"
      end
    end
  end

  deploymentview 136962 "protocol"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 204930 "ServerRequestDispatcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.pept.protocol.MessageMediator;
${definition}"
      associated_elems
	class_ref 264322 // ServerRequestDispatcher
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 205570 "ClientDelegate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.pept.broker.Broker;
import com.sun.corba.se.pept.transport.ContactInfoList;
${definition}"
      associated_elems
	class_ref 264706 // ClientDelegate
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 205954 "ClientRequestDispatcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.pept.broker.Broker;
import com.sun.corba.se.pept.encoding.InputObject;
import com.sun.corba.se.pept.encoding.OutputObject;
import com.sun.corba.se.pept.transport.ContactInfo;
${definition}"
      associated_elems
	class_ref 213506 // ClientRequestDispatcher
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 206210 "ClientInvocationInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.pept.protocol.MessageMediator;
import com.sun.corba.se.pept.protocol.ClientRequestDispatcher;
import java.util.Iterator;
${definition}"
      associated_elems
	class_ref 245250 // ClientInvocationInfo
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 206466 "MessageMediator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.pept.broker.Broker;
import com.sun.corba.se.pept.encoding.InputObject;
import com.sun.corba.se.pept.encoding.OutputObject;
import com.sun.corba.se.pept.transport.Connection;
import com.sun.corba.se.pept.transport.ContactInfo;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 150530 // MessageMediator
      end
      comment "Copyright (c) 2001, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 206850 "ProtocolHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.pept.protocol.MessageMediator;
${definition}"
      associated_elems
	class_ref 265730 // ProtocolHandler
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
