class LongList
!!!3130882.java!!!	LongList()
        this(DEFAULT_CAPACITY,DEFAULT_INCREMENT);
!!!3131010.java!!!	LongList(in initialCapacity : int)
        this(initialCapacity,DEFAULT_INCREMENT);
!!!3131138.java!!!	LongList(in initialCapacity : int, in delta : int)
        size = 0;
        DELTA = delta;
        list = allocate(initialCapacity);
!!!3131266.java!!!	size() : int
 return size;
!!!3131394.java!!!	add(in o : long) : boolean
        if (size >= list.length)
            resize();
        list[size++]=o;
        return true;
!!!3131522.java!!!	add(in index : int, in o : long) : void
        if (index >  size) throw new IndexOutOfBoundsException();
        if (index >= list.length) resize();
        if (index == size) {
            list[size++]=o;
            return;
        }

        java.lang.System.arraycopy(list,index,list,index+1,size-index);
        list[index]=o;
        size++;
!!!3131650.java!!!	add(in at : int, in src : long [[]], in from : int, in count : int) : void
        if (count <= 0) return;
        if (at > size) throw new IndexOutOfBoundsException();
        ensure(size+count);
        if (at < size) {
            java.lang.System.arraycopy(list,at,list,at+count,size-at);
        }
        java.lang.System.arraycopy(src,from,list,at,count);
        size+=count;
!!!3131778.java!!!	remove(in from : int, in count : int) : long
        if (count < 1 || from < 0) return -1;
        if (from+count > size) return -1;

        final long o = list[from];
        final int oldsize = size;
        size = size - count;

        if (from == size) return o;

        java.lang.System.arraycopy(list,from+count,list,from,
                                   size-from);
        return o;
!!!3131906.java!!!	remove(in index : int) : long
        if (index >= size) return -1;
        final long o = list[index];
        list[index]=0;
        if (index == --size) return o;

        java.lang.System.arraycopy(list,index+1,list,index,
                                   size-index);
        return o;
!!!3132034.java!!!	toArray(inout a : long [[]]) : long
        java.lang.System.arraycopy(list,0,a,0,size);
        return a;
!!!3132162.java!!!	toArray() : long
        return toArray(new long[size]);
!!!3132290.java!!!	resize() : void
        final long[] newlist = allocate(list.length + DELTA);
        java.lang.System.arraycopy(list,0,newlist,0,size);
        list = newlist;
!!!3132418.java!!!	ensure(in length : int) : void
        if (list.length < length) {
            final int min = list.length+DELTA;
            length=(length<min)?min:length;
            final long[] newlist = allocate(length);
            java.lang.System.arraycopy(list,0,newlist,0,size);
            list = newlist;
        }
!!!3132546.java!!!	allocate(in length : int) : long
        return new long[length];
