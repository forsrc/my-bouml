class BerEncoder
!!!3060866.java!!!	BerEncoder(inout b : byte [[]])
    bytes = b ;
    start = b.length ;
    stackTop = 0 ;
!!!3060994.java!!!	trim() : int
    final int result = bytes.length - start ;

    // for (int i = start ; i < bytes.length ; i++) {
    //  bytes[i-start] = bytes[i] ;
    // }
    if (result > 0)
        java.lang.System.arraycopy(bytes,start,bytes,0,result);

    start = bytes.length ;
    stackTop = 0 ;

    return result ;
!!!3061122.java!!!	putInteger(in v : int) : void
    putInteger(v, IntegerTag) ;
!!!3061250.java!!!	putInteger(in v : int, in tag : int) : void
    putIntegerValue(v) ;
    putTag(tag) ;
!!!3061378.java!!!	putInteger(in v : long) : void
    putInteger(v, IntegerTag) ;
!!!3061506.java!!!	putInteger(in v : long, in tag : int) : void
    putIntegerValue(v) ;
    putTag(tag) ;
!!!3061634.java!!!	putOctetString(inout s : byte [[]]) : void
    putOctetString(s, OctetStringTag) ;
!!!3061762.java!!!	putOctetString(inout s : byte [[]], in tag : int) : void
    putStringValue(s) ;
    putTag(tag) ;
!!!3061890.java!!!	putOid(inout s : long [[]]) : void
    putOid(s, OidTag) ;
!!!3062018.java!!!	putOid(inout s : long [[]], in tag : int) : void
    putOidValue(s) ;
    putTag(tag) ;
!!!3062146.java!!!	putNull() : void
    putNull(NullTag) ;
!!!3062274.java!!!	putNull(in tag : int) : void
    putLength(0) ;
    putTag(tag) ;
!!!3062402.java!!!	putAny(inout s : byte [[]]) : void
        putAny(s, s.length) ;
!!!3062530.java!!!	putAny(inout s : byte [[]], in byteCount : int) : void
      java.lang.System.arraycopy(s,0,bytes,start-byteCount,byteCount);
      start -= byteCount;
      //    for (int i = byteCount - 1 ; i >= 0 ; i--) {
      //      bytes[--start] = s[i] ;
      //    }
!!!3062658.java!!!	openSequence() : void
    stackBuf[stackTop++] = start ;
!!!3062786.java!!!	closeSequence() : void
    closeSequence(SequenceTag) ;
!!!3062914.java!!!	closeSequence(in tag : int) : void
    final int end = stackBuf[--stackTop] ;
    putLength(end - start) ;
    putTag(tag) ;
!!!3063042.java!!!	putTag(in tag : int) : void
    if (tag < 256) {
      bytes[--start] = (byte)tag ;
    }
    else {
      while (tag != 0) {
        bytes[--start] = (byte)(tag & 127) ;
        tag = tag << 7 ;
      }
    }
!!!3063170.java!!!	putLength(in length : int) : void
    if (length < 0) {
      throw new IllegalArgumentException() ;
    }
    else if (length < 128) {
      bytes[--start] = (byte)length ;
    }
    else if (length < 256) {
      bytes[--start] = (byte)length ;
      bytes[--start] = (byte)0x81 ;
    }
    else if (length < 65536) {
      bytes[--start] = (byte)(length) ;
      bytes[--start] = (byte)(length >> 8) ;
      bytes[--start] = (byte)0x82 ;
    }
    else if (length < 16777126) {
      bytes[--start] = (byte)(length) ;
      bytes[--start] = (byte)(length >> 8) ;
      bytes[--start] = (byte)(length >> 16) ;
      bytes[--start] = (byte)0x83 ;
    }
    else {
      bytes[--start] = (byte)(length) ;
      bytes[--start] = (byte)(length >> 8) ;
      bytes[--start] = (byte)(length >> 16) ;
      bytes[--start] = (byte)(length >> 24) ;
      bytes[--start] = (byte)0x84 ;
    }
!!!3063298.java!!!	putIntegerValue(in v : int) : void
    final int end = start ;
    int mask = 0x7f800000 ;
    int byteNeeded = 4 ;
    if (v < 0) {
      while (((mask & v) == mask) && (byteNeeded > 1)) {
        mask = mask >> 8 ;
        byteNeeded-- ;
      }
    }
    else {
      while (((mask & v) == 0) && (byteNeeded > 1)) {
        mask = mask >> 8 ;
        byteNeeded-- ;
      }
    }
    for (int i = 0 ; i < byteNeeded ; i++) {
      bytes[--start] = (byte)v ;
      v =  v >> 8 ;
    }
    putLength(end - start) ;
!!!3063426.java!!!	putIntegerValue(in v : long) : void
    final int end = start ;
    long mask = 0x7f80000000000000L ;
    int byteNeeded = 8 ;
    if (v < 0) {
      while (((mask & v) == mask) && (byteNeeded > 1)) {
        mask = mask >> 8 ;
        byteNeeded-- ;
      }
    }
    else {
      while (((mask & v) == 0) && (byteNeeded > 1)) {
        mask = mask >> 8 ;
        byteNeeded-- ;
      }
    }
    for (int i = 0 ; i < byteNeeded ; i++) {
      bytes[--start] = (byte)v ;
      v =  v >> 8 ;
    }
    putLength(end - start) ;
!!!3063554.java!!!	putStringValue(inout s : byte [[]]) : void
      final int datalen = s.length;
      java.lang.System.arraycopy(s,0,bytes,start-datalen,datalen);
      start -= datalen;
      // for (int i = s.length - 1 ; i >= 0 ; i--) {
      //   bytes[--start] = s[i] ;
      // }
      putLength(datalen) ;
!!!3063682.java!!!	putOidValue(in s : long [[]]) : void
      final int end = start ;
      final int slength = s.length;

      // bugId 4641746: 0, 1, and 2 are legal values.
      if ((slength < 2) || (s[0] > 2) || (s[1] >= 40)) {
          throw new IllegalArgumentException() ;
      }
      for (int i = slength - 1 ; i >= 2 ; i--) {
          long c = s[i] ;
          if (c < 0) {
              throw new IllegalArgumentException() ;
          }
          else if (c < 128) {
              bytes[--start] = (byte)c ;
          }
          else {
              bytes[--start] = (byte)(c & 127) ;
              c = c >> 7 ;
              while (c != 0) {
                  bytes[--start] = (byte)(c | 128) ;
                  c = c >> 7 ;
              }
          }
      }
      bytes[--start] = (byte)(s[0] * 40 + s[1]) ;
      putLength(end - start) ;
