format 222
"interceptor" // jdk1.8::com::sun::jmx::interceptor
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/jmx/interceptor/"
  java_package "com.sun.jmx.interceptor"
  classview 151682 "interceptor"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 484866 "DefaultMBeanServerInterceptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the default class for MBean manipulation on the agent side. It
contains the methods necessary for the creation, registration, and
deletion of MBeans as well as the access methods for registered MBeans.
This is the core component of the JMX infrastructure.
<P>
Every MBean which is added to the MBean server becomes manageable: its attributes and operations
become remotely accessible through the connectors/adaptors connected to that MBean server.
A Java object cannot be registered in the MBean server unless it is a JMX compliant MBean.
<P>
When an MBean is registered or unregistered in the MBean server an
{@link javax.management.MBeanServerNotification MBeanServerNotification}
Notification is emitted. To register an object as listener to MBeanServerNotifications
you should call the MBean server method {@link #addNotificationListener addNotificationListener} with <CODE>ObjectName</CODE>
the <CODE>ObjectName</CODE> of the {@link javax.management.MBeanServerDelegate MBeanServerDelegate}.
This <CODE>ObjectName</CODE> is:
<BR>
<CODE>JMImplementation:type=MBeanServerDelegate</CODE>.

@since 1.5
"
      classrelation 961922 // <realization>
	relation 961922 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 961922 // <realization>
	  b parent class_ref 484994 // MBeanServerInterceptor
      end

      classrelation 962050 // instantiator (<unidirectional association>)
	relation 962050 --->
	  a role_name "instantiator" const_relation private
	    comment " The MBeanInstantiator object used by the
 DefaultMBeanServerInterceptor 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 962050 // instantiator (<unidirectional association>)
	  b parent class_ref 487938 // MBeanInstantiator
      end

      classrelation 962178 // server (<unidirectional association>)
	relation 962178 --->
	  a role_name "server" init_value " null" private
	    comment " The MBean server object that is associated to the
 DefaultMBeanServerInterceptor 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 962178 // server (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 962306 // delegate (<unidirectional association>)
	relation 962306 --->
	  a role_name "delegate" const_relation private
	    comment " The MBean server delegate object that is associated to the
 DefaultMBeanServerInterceptor 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 962306 // delegate (<unidirectional association>)
	  b parent class_ref 488066 // MBeanServerDelegate
      end

      classrelation 962434 // repository (<unidirectional association>)
	relation 962434 --->
	  a role_name "repository" const_relation private
	    comment " The Repository object used by the DefaultMBeanServerInterceptor 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 962434 // repository (<unidirectional association>)
	  b parent class_ref 488194 // Repository
      end

      class 488322 "ListenerWrapper"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 963074 // <realization>
	  relation 963074 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 963074 // <realization>
	    b parent class_ref 487042 // NotificationListener
	end

	operation 2932738 "ListenerWrapper"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "l" type class_ref 487042 // NotificationListener
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "mbean" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2932866 "handleNotification"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "notification" type class_ref 488706 // Notification
	    param inout name "handback" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2932994 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2933122 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	classrelation 963202 // listener (<unidirectional association>)
	  relation 963202 --->
	    a role_name "listener" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 963202 // listener (<unidirectional association>)
	    b parent class_ref 487042 // NotificationListener
	end

	classrelation 963330 // name (<unidirectional association>)
	  relation 963330 --->
	    a role_name "name" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 963330 // name (<unidirectional association>)
	    b parent class_ref 485506 // ObjectName
	end

	classrelation 963458 // mbean (<unidirectional association>)
	  relation 963458 --->
	    a role_name "mbean" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 963458 // mbean (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end
      end

      classrelation 962562 // listenerWrappers (<unidirectional association>)
	relation 962562 --->
	  a role_name "listenerWrappers" init_value "
                new WeakHashMap<ListenerWrapper,
                                WeakReference<ListenerWrapper>>()" const_relation private
	    comment " Wrappers for client listeners.  
 See the comment before addNotificationListener below.  
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ListenerWrapper, WeakReference<ListenerWrapper>> ${name}${value};
"
	    classrelation_ref 962562 // listenerWrappers (<unidirectional association>)
	  b parent class_ref 192002 // WeakHashMap
      end

      classrelation 962690 // domain (<unidirectional association>)
	relation 962690 --->
	  a role_name "domain" const_relation private
	    comment " The default domain of the object names 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 962690 // domain (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 2924546 "DefaultMBeanServerInterceptor"
	public explicit_return_type ""
	nparams 4
	  param inout name "outer" type class_ref 485122 // MBeanServer
	  param inout name "delegate" type class_ref 488066 // MBeanServerDelegate
	  param inout name "instantiator" type class_ref 487938 // MBeanInstantiator
	  param inout name "repository" type class_ref 488194 // Repository
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The sequence number identifying the notifications sent 
 Now sequence number is handled by MBeanServerDelegate.
 private int sequenceNumber=0;

Creates a DefaultMBeanServerInterceptor with the specified
repository instance.
<p>Do not forget to call <code>initialize(outer,delegate)</code>
before using this object.
@param outer A pointer to the MBeanServer object that must be
       passed to the MBeans when invoking their
       {@link javax.management.MBeanRegistration} interface.
@param delegate A pointer to the MBeanServerDelegate associated
       with the new MBeanServer. The new MBeanServer must register
       this MBean in its MBean repository.
@param instantiator The MBeanInstantiator that will be used to
       instantiate MBeans and take care of class loading issues.
@param repository The repository to use for this MBeanServer.
"
      end

      operation 2924674 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 5
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2924802 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2924930 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 5
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2925058 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 5
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2925186 "createMBean"
	private return_type class_ref 485378 // ObjectInstance
	nparams 6
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "withDefaultLoaderRepository" explicit_type "boolean"
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2925314 "registerMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 2
	  param inout name "object" type class_ref 129538 // Object
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2925442 "getNewMBeanClassName"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "mbeanToRegister" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 962818 // beingUnregistered (<unidirectional association>)
	relation 962818 --->
	  a role_name "beingUnregistered" init_value "
        new HashSet<ObjectName>()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ObjectName> ${name}${value};
"
	    classrelation_ref 962818 // beingUnregistered (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      operation 2925570 "unregisterMBean"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2925698 "exclusiveUnregisterMBean"
	private explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2925826 "getObjectInstance"
	public return_type class_ref 485378 // ObjectInstance
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2925954 "queryMBeans"
	public return_type class_ref 192258 // Set
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926082 "queryMBeansImpl"
	private return_type class_ref 192258 // Set
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926210 "queryNames"
	public return_type class_ref 192258 // Set
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926338 "queryNamesImpl"
	private return_type class_ref 192258 // Set
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926466 "isRegistered"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926594 "getDomains"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926722 "getMBeanCount"
	public return_type class_ref 137602 // Integer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926850 "getAttribute"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 128130 // String
	nexceptions 4
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2926978 "getAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2927106 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 486786 // Attribute
	nexceptions 5
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486914 // InvalidAttributeValueException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2927234 "setAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 486658 // AttributeList
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2927362 "invoke"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "operationName" type class_ref 128130 // String
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2927490 "rethrow"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 129922 // Throwable
	nexceptions 1
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Centralize some of the tedious exception wrapping demanded by the JMX
spec. "
      end

      operation 2927618 "rethrowMaybeMBeanException"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 129922 // Throwable
	nexceptions 2
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2927746 "registerObject"
	private return_type class_ref 485378 // ObjectInstance
	nparams 3
	  param inout name "classname" type class_ref 128130 // String
	  param inout name "object" type class_ref 129538 // Object
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register <code>object</code> in the repository, with the
given <code>name</code>.
This method is called by the various createMBean() flavours
and by registerMBean() after all MBean compliance tests
have been performed.
<p>
This method does not performed any kind of test compliance,
and the caller should make sure that the given <code>object</code>
is MBean compliant.
<p>
This methods performed all the basic steps needed for object
registration:
<ul>
<li>If the <code>object</code> implements the MBeanRegistration
    interface, it invokes preRegister() on the object.</li>
<li>Then the object is added to the repository with the given
    <code>name</code>.</li>
<li>Finally, if the <code>object</code> implements the
    MBeanRegistration interface, it invokes postRegister()
    on the object.</li>
</ul>
@param object A reference to a MBean compliant object.
@param name   The ObjectName of the <code>object</code> MBean.
@return the actual ObjectName with which the object was registered.
@exception InstanceAlreadyExistsException if an object is already
           registered with that name.
@exception MBeanRegistrationException if an exception occurs during
           registration.
"
      end

      operation 2927874 "registerDynamicMBean"
	private return_type class_ref 485378 // ObjectInstance
	nparams 3
	  param inout name "classname" type class_ref 128130 // String
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2928002 "throwMBeanRegistrationException"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 129922 // Throwable
	  param inout name "where" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2928130 "preRegister"
	class_operation private return_type class_ref 485506 // ObjectName
	nparams 3
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	  param inout name "mbs" type class_ref 485122 // MBeanServer
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2928258 "postRegister"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "logicalName" type class_ref 485506 // ObjectName
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	  param inout name "registrationDone" explicit_type "boolean"
	  param inout name "registerFailed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2928386 "preDeregisterInvoke"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "moi" type class_ref 488578 // MBeanRegistration
	nexceptions 1
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2928514 "postDeregisterInvoke"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "mbean" type class_ref 485506 // ObjectName
	  param inout name "moi" type class_ref 488578 // MBeanRegistration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2928642 "getMBean"
	private return_type class_ref 488450 // DynamicMBean
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a specific MBean controlled by the DefaultMBeanServerInterceptor.
The name must have a non-default domain.
"
      end

      operation 2928770 "getResource"
	class_operation private return_type class_ref 129538 // Object
	nparams 1
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2928898 "nonDefaultDomain"
	private return_type class_ref 485506 // ObjectName
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2929026 "getDefaultDomain"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2929154 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification handling.

This is not trivial, because the MBeanServer translates the
source of a received notification from a reference to an MBean
into the ObjectName of that MBean.  While that does make
notification sending easier for MBean writers, it comes at a
considerable cost.  We need to replace the source of a
notification, which is basically wrong if there are also
listeners registered directly with the MBean (without going
through the MBean server).  We also need to wrap the listener
supplied by the client of the MBeanServer with a listener that
performs the substitution before forwarding.  This is why we
strongly discourage people from putting MBean references in the
source of their notifications.  Instead they should arrange to
put the ObjectName there themselves.

However, existing code relies on the substitution, so we are
stuck with it.

Here's how we handle it.  When you add a listener, we make a
ListenerWrapper around it.  We look that up in the
listenerWrappers map, and if there was already a wrapper for
that listener with the given ObjectName, we reuse it.  This map
is a WeakHashMap, so a listener that is no longer registered
with any MBean can be garbage collected.

We cannot use simpler solutions such as always creating a new
wrapper or always registering the same listener with the MBean
and using the handback to find the client's original listener.
The reason is that we need to support the removeListener
variant that removes all (listener,filter,handback) triples on
a broadcaster that have a given listener.  And we do not have
any way to inspect a broadcaster's internal list of triples.
So the same client listener must always map to the same
listener registered with the broadcaster.

Another possible solution would be to map from ObjectName to
list of listener wrappers (or IdentityHashMap of listener
wrappers), making this list the first time a listener is added
on a given MBean, and removing it when the MBean is removed.
This is probably more costly in memory, but could be useful if
some day we don't want to rely on weak references.
"
      end

      operation 2929282 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2929410 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 487042 // NotificationListener
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2929538 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2929666 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2929794 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2929922 "getListener"
	private return_type class_ref 487042 // NotificationListener
	nparams 1
	  param inout name "listener" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2930050 "removeNotificationListener"
	private explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	  param inout name "removeAll" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2930178 "getNotificationBroadcaster"
	class_operation private explicit_return_type "T"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "instance" type class_ref 129538 // Object
	  param inout name "reqClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends NotificationBroadcaster> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2930306 "getMBeanInfo"
	public return_type class_ref 487426 // MBeanInfo
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487554 // IntrospectionException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2930434 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2930562 "getClassLoaderFor"
	public return_type class_ref 129026 // ClassLoader
	nparams 1
	  param inout name "mbeanName" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the {@link java.lang.ClassLoader} that was used for
loading the class of the named MBean.
@param mbeanName The ObjectName of the MBean.
@return The ClassLoader used for that MBean.
@exception InstanceNotFoundException if the named MBean is not found.
"
      end

      operation 2930690 "getClassLoader"
	public return_type class_ref 129026 // ClassLoader
	nparams 1
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the named {@link java.lang.ClassLoader}.
@param loaderName The ObjectName of the ClassLoader.
@return The named ClassLoader.
@exception InstanceNotFoundException if the named ClassLoader
is not found.
"
      end

      operation 2930818 "sendNotification"
	private explicit_return_type "void"
	nparams 2
	  param inout name "NotifType" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an MBeanServerNotifications with the specified type for the
MBean with the specified ObjectName
"
      end

      operation 2930946 "objectNamesFromFilteredNamedObjects"
	private return_type class_ref 192258 // Set
	nparams 2
	  param inout name "list" type class_ref 192258 // Set
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0}<NamedObject> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the specified queries to the set of NamedObjects.
"
      end

      operation 2931074 "objectInstancesFromFilteredNamedObjects"
	private return_type class_ref 192258 // Set
	nparams 2
	  param inout name "list" type class_ref 192258 // Set
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0}<NamedObject> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the specified queries to the set of NamedObjects.
"
      end

      operation 2931202 "safeGetClassName"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2931330 "filterListOfObjectInstances"
	private return_type class_ref 192258 // Set
	nparams 2
	  param inout name "list" type class_ref 192258 // Set
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0}<ObjectInstance> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the specified queries to the set of ObjectInstances.
"
      end

      operation 2931458 "getListenerWrapper"
	private return_type class_ref 487042 // NotificationListener
	nparams 4
	  param inout name "l" type class_ref 487042 // NotificationListener
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	  param inout name "create" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the existing wrapper for this listener, name, and mbean, if
there is one.  Otherwise, if \"create\" is true, create and
return one.  Otherwise, return null.

We use a WeakHashMap so that if the only reference to a user
listener is in listenerWrappers, it can be garbage collected.
This requires a certain amount of care, because only the key in
a WeakHashMap is weak; the value is strong.  We need to recover
the existing wrapper object (not just an object that is equal
to it), so we would like listenerWrappers to map any
ListenerWrapper to the canonical ListenerWrapper for that
(listener,name,mbean) set.  But we do not want this canonical
wrapper to be referenced strongly.  Therefore we put it inside
a WeakReference and that is the value in the WeakHashMap.
"
      end

      operation 2931586 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2931714 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2931842 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2931970 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2932098 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487682 // OperationsException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2932226 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 487682 // OperationsException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2932354 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487682 // OperationsException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2932482 "getClassLoaderRepository"
	public return_type class_ref 487810 // ClassLoaderRepository
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2933250 "getClassName"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " SECURITY CHECKS
----------------"
      end

      operation 2933378 "checkMBeanPermission"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "mbean" type class_ref 488450 // DynamicMBean
	  param inout name "member" type class_ref 128130 // String
	  param inout name "objectName" type class_ref 485506 // ObjectName
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2933506 "checkMBeanPermission"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "classname" type class_ref 128130 // String
	  param inout name "member" type class_ref 128130 // String
	  param inout name "objectName" type class_ref 485506 // ObjectName
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2933634 "checkMBeanTrustPermission"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "theClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 488834 "ResourceContext"
	visibility private stereotype "interface"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 964482 // <generalisation>
	  relation 964482 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 964482 // <generalisation>
	    b parent class_ref 488962 // RegistrationContext
	end

	operation 2936450 "done"
	  public explicit_return_type "void"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 964610 // NONE (<unidirectional association>)
	  relation 964610 --->
	    a role_name "NONE" init_value " new ResourceContext() {
            public void done() {}
            public void registering() {}
            public void unregistered() {}
        }" class_relation const_relation public
	      comment " An empty ResourceContext which does nothing *
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 964610 // NONE (<unidirectional association>)
	    b parent class_ref 488834 // ResourceContext
	end
      end

      operation 2936578 "registerWithRepository"
	private return_type class_ref 488834 // ResourceContext
	nparams 3
	  param in name "resource" type class_ref 129538 // Object
	  param in name "object" type class_ref 488450 // DynamicMBean
	  param in name "logicalName" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a MBean in the repository,
sends MBeanServerNotification.REGISTRATION_NOTIFICATION,
returns ResourceContext for special resources such as ClassLoaders
or JMXNamespaces. For regular MBean this method returns
ResourceContext.NONE.
@return a ResourceContext for special resources such as ClassLoaders
        or JMXNamespaces.
"
      end

      operation 2936706 "unregisterFromRepository"
	private return_type class_ref 488834 // ResourceContext
	nparams 3
	  param in name "resource" type class_ref 129538 // Object
	  param in name "object" type class_ref 488450 // DynamicMBean
	  param in name "logicalName" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a MBean in the repository,
sends MBeanServerNotification.UNREGISTRATION_NOTIFICATION,
returns ResourceContext for special resources such as ClassLoaders
or JMXNamespaces, or null. For regular MBean this method returns
ResourceContext.NONE.

@return a ResourceContext for special resources such as ClassLoaders
        or JMXNamespaces.
"
      end

      operation 2936834 "addClassLoader"
	private explicit_return_type "void"
	nparams 2
	  param inout name "loader" type class_ref 129026 // ClassLoader
	  param in name "logicalName" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a ClassLoader with the CLR.
This method is called by the ResourceContext from within the
repository lock.
@param loader       The ClassLoader.
@param logicalName  The ClassLoader MBean ObjectName.
"
      end

      operation 2936962 "removeClassLoader"
	private explicit_return_type "void"
	nparams 2
	  param inout name "loader" type class_ref 129026 // ClassLoader
	  param in name "logicalName" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a ClassLoader from the CLR.
This method is called by the ResourceContext from within the
repository lock.
@param loader       The ClassLoader.
@param logicalName  The ClassLoader MBean ObjectName.
"
      end

      operation 2937090 "createClassLoaderContext"
	private return_type class_ref 488834 // ResourceContext
	nparams 2
	  param in name "loader" type class_ref 129026 // ClassLoader
	  param in name "logicalName" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a ResourceContext for a ClassLoader MBean.
The resource context makes it possible to add the ClassLoader to
(ResourceContext.registering) or resp. remove the ClassLoader from
(ResourceContext.unregistered) the CLR
when the associated MBean is added to or resp. removed from the
repository.

@param loader       The ClassLoader MBean being registered or
                    unregistered.
@param logicalName  The name of the ClassLoader MBean.
@return a ResourceContext that takes in charge the addition or removal
        of the loader to or from the CLR.
"
      end

      operation 2937218 "makeResourceContextFor"
	private return_type class_ref 488834 // ResourceContext
	nparams 2
	  param inout name "resource" type class_ref 129538 // Object
	  param inout name "logicalName" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a ResourceContext for the given resource.
If the resource does not need a ResourceContext, returns
ResourceContext.NONE.
At this time, only ClassLoaders need a ResourceContext.

@param resource     The resource being registered or unregistered.
@param logicalName  The name of the associated MBean.
@return
"
      end

      operation 2937346 "getInstantiatorCLR"
	private return_type class_ref 489474 // ModifiableClassLoaderRepository
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 484994 "MBeanServerInterceptor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This interface specifies the behavior to be implemented by an
MBean Server Interceptor.  An MBean Server Interceptor has
essentially the same interface as an MBean Server.  An MBean Server
forwards received requests to its default interceptor, which may
handle them itself or forward them to other interceptors.  The
default interceptor may be changed via the {@link
com.sun.jmx.mbeanserver.SunJmxMBeanServer#setMBeanServerInterceptor}
method.</p>

<p>The initial default interceptor provides the standard MBean
Server behavior.  It handles a collection of named MBeans, each
represented by a Java object.  A replacement default interceptor
may build on this behavior, for instance by adding logging or
security checks, before forwarding requests to the initial default
interceptor.  Or, it may route each request to one of a number of
sub-interceptors, for instance based on the {@link ObjectName} in
the request.</p>

<p>An interceptor, default or not, need not implement MBeans as
Java objects, in the way that the initial default interceptor does.
It may instead implement <em>virtual MBeans</em>, which do not
exist as Java objects when they are not in use.  For example, these
MBeans could be implemented by forwarding requests to a database,
or to a remote MBean server, or by performing system calls to query
or modify system resources.</p>

@since 1.5
"
      classrelation 961794 // <generalisation>
	relation 961794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 961794 // <generalisation>
	  b parent class_ref 485122 // MBeanServer
      end

      operation 2923522 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should never be called.
Usually hrows UnsupportedOperationException.
"
      end

      operation 2923650 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should never be called.
Usually throws UnsupportedOperationException.
"
      end

      operation 2923778 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should never be called.
Usually throws UnsupportedOperationException.
"
      end

      operation 2923906 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should never be called.
Usually throws UnsupportedOperationException.
"
      end

      operation 2924034 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487682 // OperationsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method should never be called.
Usually throws UnsupportedOperationException.
"
      end

      operation 2924162 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 487682 // OperationsException
	  exception class_ref 485634 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method should never be called.
Usually throws UnsupportedOperationException.
"
      end

      operation 2924290 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487682 // OperationsException
	  exception class_ref 485634 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method should never be called.
Usually hrows UnsupportedOperationException.
"
      end

      operation 2924418 "getClassLoaderRepository"
	public return_type class_ref 487810 // ClassLoaderRepository
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should never be called.
Usually throws UnsupportedOperationException.
"
      end
    end
  end

  deploymentview 145794 "interceptor"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 323842 "MBeanServerInterceptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ObjectInputStream;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.management.OperationsException;
import javax.management.ReflectionException;
import javax.management.loading.ClassLoaderRepository;
${definition}"
      associated_elems
	class_ref 484994 // MBeanServerInterceptor
      end
      comment "Copyright (c) 2002, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 324226 "DefaultMBeanServerInterceptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.mbeanserver.DynamicMBean2;
import com.sun.jmx.mbeanserver.Introspector;
import com.sun.jmx.mbeanserver.MBeanInstantiator;
import com.sun.jmx.mbeanserver.ModifiableClassLoaderRepository;
import com.sun.jmx.mbeanserver.NamedObject;
import com.sun.jmx.mbeanserver.Repository;
import com.sun.jmx.mbeanserver.Repository.RegistrationContext;
import com.sun.jmx.mbeanserver.Util;
import com.sun.jmx.remote.util.EnvHelp;
import java.io.ObjectInputStream;
import java.lang.ref.WeakReference;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.Permission;
import java.security.PrivilegedAction;
import java.security.ProtectionDomain;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.WeakHashMap;
import java.util.logging.Level;
import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.DynamicMBean;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.JMRuntimeException;
import javax.management.ListenerNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanPermission;
import javax.management.MBeanRegistration;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServer;
import javax.management.MBeanServerDelegate;
import javax.management.MBeanServerNotification;
import javax.management.MBeanTrustPermission;
import javax.management.NotCompliantMBeanException;
import javax.management.Notification;
import javax.management.NotificationBroadcaster;
import javax.management.NotificationEmitter;
import javax.management.NotificationFilter;
import javax.management.NotificationListener;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.OperationsException;
import javax.management.QueryEval;
import javax.management.QueryExp;
import javax.management.ReflectionException;
import javax.management.RuntimeErrorException;
import javax.management.RuntimeMBeanException;
import javax.management.RuntimeOperationsException;
import javax.management.loading.ClassLoaderRepository;
import static com.sun.jmx.defaults.JmxProperties.MBEANSERVER_LOGGER;
${definition}"
      associated_elems
	class_ref 484866 // DefaultMBeanServerInterceptor
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
