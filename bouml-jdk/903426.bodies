class EventSetDescriptor
!!!6761602.java!!!	EventSetDescriptor(inout sourceClass : Class, inout eventSetName : String, inout listenerType : Class, inout listenerMethodName : String)
        this(sourceClass, eventSetName, listenerType,
             new String[] { listenerMethodName },
             Introspector.ADD_PREFIX + getListenerClassName(listenerType),
             Introspector.REMOVE_PREFIX + getListenerClassName(listenerType),
             Introspector.GET_PREFIX + getListenerClassName(listenerType) + "s");

        String eventName = NameGenerator.capitalize(eventSetName) + "Event";
        Method[] listenerMethods = getListenerMethods();
        if (listenerMethods.length > 0) {
            Class[] args = getParameterTypes(getClass0(), listenerMethods[0]);
            // Check for EventSet compliance. Special case for vetoableChange. See 4529996
            if (!"vetoableChange".equals(eventSetName) && !args[0].getName().endsWith(eventName)) {
                throw new IntrospectionException("Method \"" + listenerMethodName +
                                                 "\" should have argument \"" +
                                                 eventName + "\"");
            }
        }
!!!6761730.java!!!	getListenerClassName(inout cls : Class) : String
        String className = cls.getName();
        return className.substring(className.lastIndexOf('.') + 1);
!!!6761858.java!!!	EventSetDescriptor(inout sourceClass : Class, inout eventSetName : String, inout listenerType : Class, inout listenerMethodNames : String [[]], inout addListenerMethodName : String, inout removeListenerMethodName : String)
        this(sourceClass, eventSetName, listenerType,
             listenerMethodNames, addListenerMethodName,
             removeListenerMethodName, null);
!!!6761986.java!!!	EventSetDescriptor(inout sourceClass : Class, inout eventSetName : String, inout listenerType : Class, inout listenerMethodNames : String [[]], inout addListenerMethodName : String, inout removeListenerMethodName : String, inout getListenerMethodName : String)
        if (sourceClass == null || eventSetName == null || listenerType == null) {
            throw new NullPointerException();
        }
        setName(eventSetName);
        setClass0(sourceClass);
        setListenerType(listenerType);

        Method[] listenerMethods = new Method[listenerMethodNames.length];
        for (int i = 0; i < listenerMethodNames.length; i++) {
            // Check for null names
            if (listenerMethodNames[i] == null) {
                throw new NullPointerException();
            }
            listenerMethods[i] = getMethod(listenerType, listenerMethodNames[i], 1);
        }
        setListenerMethods(listenerMethods);

        setAddListenerMethod(getMethod(sourceClass, addListenerMethodName, 1));
        setRemoveListenerMethod(getMethod(sourceClass, removeListenerMethodName, 1));

        // Be more forgiving of not finding the getListener method.
        Method method = Introspector.findMethod(sourceClass, getListenerMethodName, 0);
        if (method != null) {
            setGetListenerMethod(method);
        }
!!!6762114.java!!!	getMethod(inout cls : Class, inout name : String, in args : int) : Method
        if (name == null) {
            return null;
        }
        Method method = Introspector.findMethod(cls, name, args);
        if ((method == null) || Modifier.isStatic(method.getModifiers())) {
            throw new IntrospectionException("Method not found: " + name +
                                             " on class " + cls.getName());
        }
        return method;
!!!6762242.java!!!	EventSetDescriptor(inout eventSetName : String, inout listenerType : Class, inout listenerMethods : Method [[]], inout addListenerMethod : Method, inout removeListenerMethod : Method)
        this(eventSetName, listenerType, listenerMethods,
             addListenerMethod, removeListenerMethod, null);
!!!6762370.java!!!	EventSetDescriptor(inout eventSetName : String, inout listenerType : Class, inout listenerMethods : Method [[]], inout addListenerMethod : Method, inout removeListenerMethod : Method, inout getListenerMethod : Method)
        setName(eventSetName);
        setListenerMethods(listenerMethods);
        setAddListenerMethod(addListenerMethod);
        setRemoveListenerMethod( removeListenerMethod);
        setGetListenerMethod(getListenerMethod);
        setListenerType(listenerType);
!!!6762498.java!!!	EventSetDescriptor(inout eventSetName : String, inout listenerType : Class, inout listenerMethodDescriptors : MethodDescriptor [[]], inout addListenerMethod : Method, inout removeListenerMethod : Method)
        setName(eventSetName);
        this.listenerMethodDescriptors = (listenerMethodDescriptors != null)
                ? listenerMethodDescriptors.clone()
                : null;
        setAddListenerMethod(addListenerMethod);
        setRemoveListenerMethod(removeListenerMethod);
        setListenerType(listenerType);
!!!6762626.java!!!	getListenerType() : Class
        return (this.listenerTypeRef != null)
                ? this.listenerTypeRef.get()
                : null;
!!!6762754.java!!!	setListenerType(inout cls : Class) : void
        this.listenerTypeRef = getWeakReference(cls);
!!!6762882.java!!!	getListenerMethods() : Method
        Method[] methods = getListenerMethods0();
        if (methods == null) {
            if (listenerMethodDescriptors != null) {
                methods = new Method[listenerMethodDescriptors.length];
                for (int i = 0; i < methods.length; i++) {
                    methods[i] = listenerMethodDescriptors[i].getMethod();
                }
            }
            setListenerMethods(methods);
        }
        return methods;
!!!6763010.java!!!	setListenerMethods(inout methods : Method [[]]) : void
        if (methods == null) {
            return;
        }
        if (listenerMethodDescriptors == null) {
            listenerMethodDescriptors = new MethodDescriptor[methods.length];
            for (int i = 0; i < methods.length; i++) {
                listenerMethodDescriptors[i] = new MethodDescriptor(methods[i]);
            }
        }
        this.listenerMethodsRef = getSoftReference(methods);
!!!6763138.java!!!	getListenerMethods0() : Method
        return (this.listenerMethodsRef != null)
                ? this.listenerMethodsRef.get()
                : null;
!!!6763266.java!!!	getListenerMethodDescriptors() : MethodDescriptor
        return (this.listenerMethodDescriptors != null)
                ? this.listenerMethodDescriptors.clone()
                : null;
!!!6763394.java!!!	getAddListenerMethod() : Method
        return getMethod(this.addMethodDescriptor);
!!!6763522.java!!!	setAddListenerMethod(inout method : Method) : void
        if (method == null) {
            return;
        }
        if (getClass0() == null) {
            setClass0(method.getDeclaringClass());
        }
        addMethodDescriptor = new MethodDescriptor(method);
        setTransient(method.getAnnotation(Transient.class));
!!!6763650.java!!!	getRemoveListenerMethod() : Method
        return getMethod(this.removeMethodDescriptor);
!!!6763778.java!!!	setRemoveListenerMethod(inout method : Method) : void
        if (method == null) {
            return;
        }
        if (getClass0() == null) {
            setClass0(method.getDeclaringClass());
        }
        removeMethodDescriptor = new MethodDescriptor(method);
        setTransient(method.getAnnotation(Transient.class));
!!!6763906.java!!!	getGetListenerMethod() : Method
        return getMethod(this.getMethodDescriptor);
!!!6764034.java!!!	setGetListenerMethod(inout method : Method) : void
        if (method == null) {
            return;
        }
        if (getClass0() == null) {
            setClass0(method.getDeclaringClass());
        }
        getMethodDescriptor = new MethodDescriptor(method);
        setTransient(method.getAnnotation(Transient.class));
!!!6764162.java!!!	setUnicast(inout unicast : boolean) : void
        this.unicast = unicast;
!!!6764290.java!!!	isUnicast() : boolean
        return unicast;
!!!6764418.java!!!	setInDefaultEventSet(inout inDefaultEventSet : boolean) : void
        this.inDefaultEventSet = inDefaultEventSet;
!!!6764546.java!!!	isInDefaultEventSet() : boolean
        return inDefaultEventSet;
!!!6764674.java!!!	EventSetDescriptor(inout x : EventSetDescriptor, inout y : EventSetDescriptor)
        super(x,y);
        listenerMethodDescriptors = x.listenerMethodDescriptors;
        if (y.listenerMethodDescriptors != null) {
            listenerMethodDescriptors = y.listenerMethodDescriptors;
        }

        listenerTypeRef = x.listenerTypeRef;
        if (y.listenerTypeRef != null) {
            listenerTypeRef = y.listenerTypeRef;
        }

        addMethodDescriptor = x.addMethodDescriptor;
        if (y.addMethodDescriptor != null) {
            addMethodDescriptor = y.addMethodDescriptor;
        }

        removeMethodDescriptor = x.removeMethodDescriptor;
        if (y.removeMethodDescriptor != null) {
            removeMethodDescriptor = y.removeMethodDescriptor;
        }

        getMethodDescriptor = x.getMethodDescriptor;
        if (y.getMethodDescriptor != null) {
            getMethodDescriptor = y.getMethodDescriptor;
        }

        unicast = y.unicast;
        if (!x.inDefaultEventSet || !y.inDefaultEventSet) {
            inDefaultEventSet = false;
        }
!!!6764802.java!!!	EventSetDescriptor(inout old : EventSetDescriptor)
        super(old);
        if (old.listenerMethodDescriptors != null) {
            int len = old.listenerMethodDescriptors.length;
            listenerMethodDescriptors = new MethodDescriptor[len];
            for (int i = 0; i < len; i++) {
                listenerMethodDescriptors[i] = new MethodDescriptor(
                                        old.listenerMethodDescriptors[i]);
            }
        }
        listenerTypeRef = old.listenerTypeRef;

        addMethodDescriptor = old.addMethodDescriptor;
        removeMethodDescriptor = old.removeMethodDescriptor;
        getMethodDescriptor = old.getMethodDescriptor;

        unicast = old.unicast;
        inDefaultEventSet = old.inDefaultEventSet;
!!!6764930.java!!!	appendTo(inout sb : StringBuilder) : void
        appendTo(sb, "unicast", this.unicast);
        appendTo(sb, "inDefaultEventSet", this.inDefaultEventSet);
        appendTo(sb, "listenerType", this.listenerTypeRef);
        appendTo(sb, "getListenerMethod", getMethod(this.getMethodDescriptor));
        appendTo(sb, "addListenerMethod", getMethod(this.addMethodDescriptor));
        appendTo(sb, "removeListenerMethod", getMethod(this.removeMethodDescriptor));
!!!6765058.java!!!	getMethod(inout descriptor : MethodDescriptor) : Method
        return (descriptor != null)
                ? descriptor.getMethod()
                : null;
