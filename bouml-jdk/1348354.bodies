class ButtonPainter
!!!11200258.java!!!	ButtonPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11200386.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_DEFAULT: paintBackgroundDefault(g); break;
            case BACKGROUND_DEFAULT_FOCUSED: paintBackgroundDefaultAndFocused(g); break;
            case BACKGROUND_MOUSEOVER_DEFAULT: paintBackgroundMouseOverAndDefault(g); break;
            case BACKGROUND_MOUSEOVER_DEFAULT_FOCUSED: paintBackgroundMouseOverAndDefaultAndFocused(g); break;
            case BACKGROUND_PRESSED_DEFAULT: paintBackgroundPressedAndDefault(g); break;
            case BACKGROUND_PRESSED_DEFAULT_FOCUSED: paintBackgroundPressedAndDefaultAndFocused(g); break;
            case BACKGROUND_DISABLED: paintBackgroundDisabled(g); break;
            case BACKGROUND_ENABLED: paintBackgroundEnabled(g); break;
            case BACKGROUND_FOCUSED: paintBackgroundFocused(g); break;
            case BACKGROUND_MOUSEOVER: paintBackgroundMouseOver(g); break;
            case BACKGROUND_MOUSEOVER_FOCUSED: paintBackgroundMouseOverAndFocused(g); break;
            case BACKGROUND_PRESSED: paintBackgroundPressed(g); break;
            case BACKGROUND_PRESSED_FOCUSED: paintBackgroundPressedAndFocused(g); break;

        }
!!!11200514.java!!!	getExtendedCacheKeys(inout c : JComponent) : Object
        Object[] extendedCacheKeys = null;
        switch(state) {
            case BACKGROUND_DEFAULT:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color4, -0.6197143f, 0.43137252f, 0),
                     getComponentColor(c, "background", color5, -0.5766426f, 0.38039213f, 0),
                     getComponentColor(c, "background", color6, -0.43866998f, 0.24705881f, 0),
                     getComponentColor(c, "background", color7, -0.46404046f, 0.36470586f, 0),
                     getComponentColor(c, "background", color8, -0.47761154f, 0.44313723f, 0)};
                break;
            case BACKGROUND_DEFAULT_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color4, -0.6197143f, 0.43137252f, 0),
                     getComponentColor(c, "background", color5, -0.5766426f, 0.38039213f, 0),
                     getComponentColor(c, "background", color6, -0.43866998f, 0.24705881f, 0),
                     getComponentColor(c, "background", color7, -0.46404046f, 0.36470586f, 0),
                     getComponentColor(c, "background", color8, -0.47761154f, 0.44313723f, 0)};
                break;
            case BACKGROUND_MOUSEOVER_DEFAULT:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color12, -0.6198413f, 0.43921566f, 0),
                     getComponentColor(c, "background", color13, -0.5822163f, 0.40392154f, 0),
                     getComponentColor(c, "background", color14, -0.4555341f, 0.3215686f, 0),
                     getComponentColor(c, "background", color15, -0.47698414f, 0.43921566f, 0),
                     getComponentColor(c, "background", color16, -0.5455182f, 0.45098037f, 0)};
                break;
            case BACKGROUND_MOUSEOVER_DEFAULT_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color12, -0.6198413f, 0.43921566f, 0),
                     getComponentColor(c, "background", color13, -0.5822163f, 0.40392154f, 0),
                     getComponentColor(c, "background", color14, -0.4555341f, 0.3215686f, 0),
                     getComponentColor(c, "background", color15, -0.47698414f, 0.43921566f, 0),
                     getComponentColor(c, "background", color16, -0.5455182f, 0.45098037f, 0)};
                break;
            case BACKGROUND_PRESSED_DEFAULT:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color20, -0.38050595f, 0.20392156f, 0),
                     getComponentColor(c, "background", color21, -0.29863563f, 0.1490196f, 0),
                     getComponentColor(c, "background", color22, 0.0f, 0.0f, 0),
                     getComponentColor(c, "background", color23, -0.14126986f, 0.15686274f, 0),
                     getComponentColor(c, "background", color24, -0.20852983f, 0.2588235f, 0)};
                break;
            case BACKGROUND_PRESSED_DEFAULT_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color20, -0.38050595f, 0.20392156f, 0),
                     getComponentColor(c, "background", color21, -0.29863563f, 0.1490196f, 0),
                     getComponentColor(c, "background", color22, 0.0f, 0.0f, 0),
                     getComponentColor(c, "background", color23, -0.14126986f, 0.15686274f, 0),
                     getComponentColor(c, "background", color24, -0.20852983f, 0.2588235f, 0)};
                break;
            case BACKGROUND_ENABLED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color35, -0.10655806f, 0.24313724f, 0),
                     getComponentColor(c, "background", color36, -0.09823123f, 0.2117647f, 0),
                     getComponentColor(c, "background", color30, -0.07016757f, 0.12941176f, 0),
                     getComponentColor(c, "background", color37, -0.0749532f, 0.24705881f, 0),
                     getComponentColor(c, "background", color38, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color35, -0.10655806f, 0.24313724f, 0),
                     getComponentColor(c, "background", color36, -0.09823123f, 0.2117647f, 0),
                     getComponentColor(c, "background", color30, -0.07016757f, 0.12941176f, 0),
                     getComponentColor(c, "background", color37, -0.0749532f, 0.24705881f, 0),
                     getComponentColor(c, "background", color38, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_MOUSEOVER:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color41, -0.10658931f, 0.25098038f, 0),
                     getComponentColor(c, "background", color42, -0.098526314f, 0.2352941f, 0),
                     getComponentColor(c, "background", color43, -0.07333623f, 0.20392156f, 0),
                     getComponentColor(c, "background", color38, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_MOUSEOVER_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color41, -0.10658931f, 0.25098038f, 0),
                     getComponentColor(c, "background", color42, -0.098526314f, 0.2352941f, 0),
                     getComponentColor(c, "background", color43, -0.07333623f, 0.20392156f, 0),
                     getComponentColor(c, "background", color38, -0.110526316f, 0.25490195f, 0)};
                break;
            case BACKGROUND_PRESSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color47, -0.05960039f, 0.10196078f, 0),
                     getComponentColor(c, "background", color48, -0.04772438f, 0.06666666f, 0),
                     getComponentColor(c, "background", color49, -0.0018306673f, -0.02352941f, 0),
                     getComponentColor(c, "background", color50, -0.0212406f, 0.13333333f, 0),
                     getComponentColor(c, "background", color51, -0.030845039f, 0.23921567f, 0)};
                break;
            case BACKGROUND_PRESSED_FOCUSED:
                extendedCacheKeys = new Object[] {
                     getComponentColor(c, "background", color47, -0.05960039f, 0.10196078f, 0),
                     getComponentColor(c, "background", color48, -0.04772438f, 0.06666666f, 0),
                     getComponentColor(c, "background", color49, -0.0018306673f, -0.02352941f, 0),
                     getComponentColor(c, "background", color50, -0.0212406f, 0.13333333f, 0),
                     getComponentColor(c, "background", color51, -0.030845039f, 0.23921567f, 0)};
                break;
        }
        return extendedCacheKeys;
!!!11200642.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11200770.java!!!	paintBackgroundDefault(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11200898.java!!!	paintBackgroundDefaultAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11201026.java!!!	paintBackgroundMouseOverAndDefault(inout g : Graphics2D) : void
        roundRect = decodeRoundRect5();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11201154.java!!!	paintBackgroundMouseOverAndDefaultAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11201282.java!!!	paintBackgroundPressedAndDefault(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color17);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11201410.java!!!	paintBackgroundPressedAndDefaultAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11201538.java!!!	paintBackgroundDisabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color25);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient5(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient6(roundRect));
        g.fill(roundRect);

!!!11201666.java!!!	paintBackgroundEnabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient7(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11201794.java!!!	paintBackgroundFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient7(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient8(roundRect));
        g.fill(roundRect);

!!!11201922.java!!!	paintBackgroundMouseOver(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color1);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient9(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11202050.java!!!	paintBackgroundMouseOverAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient9(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient10(roundRect));
        g.fill(roundRect);

!!!11202178.java!!!	paintBackgroundPressed(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color44);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient11(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11202306.java!!!	paintBackgroundPressedAndFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect4();
        g.setPaint(color9);
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient11(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);

!!!11202434.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2857143f), //x
                               decodeY(0.42857143f), //y
                               decodeX(2.7142859f) - decodeX(0.2857143f), //width
                               decodeY(2.857143f) - decodeY(0.42857143f), //height
                               12.0f, 12.0f); //rounding
        return roundRect;
!!!11202562.java!!!	decodeRoundRect2() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2857143f), //x
                               decodeY(0.2857143f), //y
                               decodeX(2.7142859f) - decodeX(0.2857143f), //width
                               decodeY(2.7142859f) - decodeY(0.2857143f), //height
                               9.0f, 9.0f); //rounding
        return roundRect;
!!!11202690.java!!!	decodeRoundRect3() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.42857143f), //x
                               decodeY(0.42857143f), //y
                               decodeX(2.5714285f) - decodeX(0.42857143f), //width
                               decodeY(2.5714285f) - decodeY(0.42857143f), //height
                               7.0f, 7.0f); //rounding
        return roundRect;
!!!11202818.java!!!	decodeRoundRect4() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.08571429f), //x
                               decodeY(0.08571429f), //y
                               decodeX(2.914286f) - decodeX(0.08571429f), //width
                               decodeY(2.914286f) - decodeY(0.08571429f), //height
                               11.0f, 11.0f); //rounding
        return roundRect;
!!!11202946.java!!!	decodeRoundRect5() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.2857143f), //x
                               decodeY(0.42857143f), //y
                               decodeX(2.7142859f) - decodeX(0.2857143f), //width
                               decodeY(2.857143f) - decodeY(0.42857143f), //height
                               9.0f, 9.0f); //rounding
        return roundRect;
!!!11203074.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.05f,0.5f,0.95f },
                new Color[] { color2,
                            decodeColor(color2,color3,0.5f),
                            color3});
!!!11203202.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.024f,0.06f,0.276f,0.6f,0.65f,0.7f,0.856f,0.96f,0.98399997f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3],
                            decodeColor((Color)componentColors[3],(Color)componentColors[4],0.5f),
                            (Color)componentColors[4]});
!!!11203330.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.05f,0.5f,0.95f },
                new Color[] { color10,
                            decodeColor(color10,color11,0.5f),
                            color11});
!!!11203458.java!!!	decodeGradient4(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.05f,0.5f,0.95f },
                new Color[] { color18,
                            decodeColor(color18,color19,0.5f),
                            color19});
!!!11203586.java!!!	decodeGradient5(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.09f,0.52f,0.95f },
                new Color[] { color26,
                            decodeColor(color26,color27,0.5f),
                            color27});
!!!11203714.java!!!	decodeGradient6(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.03f,0.06f,0.33f,0.6f,0.65f,0.7f,0.825f,0.95f,0.975f,1.0f },
                new Color[] { color28,
                            decodeColor(color28,color29,0.5f),
                            color29,
                            decodeColor(color29,color30,0.5f),
                            color30,
                            decodeColor(color30,color30,0.5f),
                            color30,
                            decodeColor(color30,color31,0.5f),
                            color31,
                            decodeColor(color31,color32,0.5f),
                            color32});
!!!11203842.java!!!	decodeGradient7(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.09f,0.52f,0.95f },
                new Color[] { color33,
                            decodeColor(color33,color34,0.5f),
                            color34});
!!!11203970.java!!!	decodeGradient8(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.03f,0.06f,0.33f,0.6f,0.65f,0.7f,0.825f,0.95f,0.975f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3],
                            decodeColor((Color)componentColors[3],(Color)componentColors[4],0.5f),
                            (Color)componentColors[4]});
!!!11204098.java!!!	decodeGradient9(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.09f,0.52f,0.95f },
                new Color[] { color39,
                            decodeColor(color39,color40,0.5f),
                            color40});
!!!11204226.java!!!	decodeGradient10(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.024f,0.06f,0.276f,0.6f,0.65f,0.7f,0.856f,0.96f,0.98f,1.0f },
                new Color[] { (Color)componentColors[0],
                            decodeColor((Color)componentColors[0],(Color)componentColors[1],0.5f),
                            (Color)componentColors[1],
                            decodeColor((Color)componentColors[1],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[2],0.5f),
                            (Color)componentColors[2],
                            decodeColor((Color)componentColors[2],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3],
                            decodeColor((Color)componentColors[3],(Color)componentColors[3],0.5f),
                            (Color)componentColors[3]});
!!!11204354.java!!!	decodeGradient11(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.05f,0.5f,0.95f },
                new Color[] { color45,
                            decodeColor(color45,color46,0.5f),
                            color46});
