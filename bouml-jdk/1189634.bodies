class MBeanServerPermission
!!!9777538.java!!!	MBeanServerPermission(inout name : String)
        this(name, null);
!!!9777666.java!!!	MBeanServerPermission(inout name : String, inout actions : String)
        super(getCanonicalName(parseMask(name)), actions);

        /* It's annoying to have to parse the name twice, but since
           Permission.getName() is final and since we can't access "this"
           until after the call to the superclass constructor, there
           isn't any very clean way to do this.  MBeanServerPermission
           objects aren't constructed very often, luckily.  */
        mask = parseMask(name);

        /* Check that actions is a null empty string */
        if (actions != null && actions.length() > 0)
            throw new IllegalArgumentException("MBeanServerPermission " +
                                               "actions must be null: " +
                                               actions);
!!!9777794.java!!!	MBeanServerPermission(in mask : int)
        super(getCanonicalName(mask));
        this.mask = impliedMask(mask);
!!!9777922.java!!!	readObject(inout in : ObjectInputStream) : void
        in.defaultReadObject();
        mask = parseMask(getName());
!!!9778050.java!!!	simplifyMask(in mask : int) : int
        if ((mask & CREATE_MASK) != 0)
            mask &= ~NEW_MASK;
        return mask;
!!!9778178.java!!!	impliedMask(in mask : int) : int
        if ((mask & CREATE_MASK) != 0)
            mask |= NEW_MASK;
        return mask;
!!!9778306.java!!!	getCanonicalName(in mask : int) : String
        if (mask == ALL_MASK)
            return "*";

        mask = simplifyMask(mask);

        synchronized (canonicalNames) {
            if (canonicalNames[mask] == null)
                canonicalNames[mask] = makeCanonicalName(mask);
        }

        return canonicalNames[mask];
!!!9778434.java!!!	makeCanonicalName(in mask : int) : String
        final StringBuilder buf = new StringBuilder();
        for (int i = 0; i < N_NAMES; i++) {
            if ((mask & (1<<i)) != 0) {
                if (buf.length() > 0)
                    buf.append(',');
                buf.append(names[i]);
            }
        }
        return buf.toString().intern();
        /* intern() avoids duplication when the mask has only
           one bit, so is equivalent to the string constants
           we have for the names[] array.  */
!!!9778562.java!!!	parseMask(inout name : String) : int
        /* Check that target name is a non-null non-empty string */
        if (name == null) {
            throw new NullPointerException("MBeanServerPermission: " +
                                           "target name can't be null");
        }

        name = name.trim();
        if (name.equals("*"))
            return ALL_MASK;

        /* If the name is empty, nameIndex will barf. */
        if (name.indexOf(',') < 0)
            return impliedMask(1 << nameIndex(name.trim()));

        int mask = 0;

        StringTokenizer tok = new StringTokenizer(name, ",");
        while (tok.hasMoreTokens()) {
            String action = tok.nextToken();
            int i = nameIndex(action.trim());
            mask |= (1 << i);
        }

        return impliedMask(mask);
!!!9778690.java!!!	nameIndex(inout name : String) : int
        for (int i = 0; i < N_NAMES; i++) {
            if (names[i].equals(name))
                return i;
        }
        final String msg =
            "Invalid MBeanServerPermission name: \"" + name + "\"";
        throw new IllegalArgumentException(msg);
!!!9778818.java!!!	hashCode() : int
        return mask;
!!!9778946.java!!!	implies(inout p : Permission) : boolean
        if (!(p instanceof MBeanServerPermission))
            return false;

        MBeanServerPermission that = (MBeanServerPermission) p;

        return ((this.mask & that.mask) == that.mask);
!!!9779074.java!!!	equals(inout obj : Object) : boolean
        if (obj == this)
            return true;

        if (! (obj instanceof MBeanServerPermission))
            return false;

        MBeanServerPermission that = (MBeanServerPermission) obj;

        return (this.mask == that.mask);
!!!9779202.java!!!	newPermissionCollection() : PermissionCollection
        return new MBeanServerPermissionCollection();
