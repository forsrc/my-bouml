class BeanContextChildSupport
!!!6816898.java!!!	BeanContextChildSupport()
        super();

        beanContextChildPeer = this;

        pcSupport = new PropertyChangeSupport(beanContextChildPeer);
        vcSupport = new VetoableChangeSupport(beanContextChildPeer);
!!!6817026.java!!!	BeanContextChildSupport(inout bcc : BeanContextChild)
        super();

        beanContextChildPeer = (bcc != null) ? bcc : this;

        pcSupport = new PropertyChangeSupport(beanContextChildPeer);
        vcSupport = new VetoableChangeSupport(beanContextChildPeer);
!!!6817154.java!!!	setBeanContext(inout bc : BeanContext) : void
        if (bc == beanContext) return;

        BeanContext oldValue = beanContext;
        BeanContext newValue = bc;

        if (!rejectedSetBCOnce) {
            if (rejectedSetBCOnce = !validatePendingSetBeanContext(bc)) {
                throw new PropertyVetoException(
                    "setBeanContext() change rejected:",
                    new PropertyChangeEvent(beanContextChildPeer, "beanContext", oldValue, newValue)
                );
            }

            try {
                fireVetoableChange("beanContext",
                                   oldValue,
                                   newValue
                );
            } catch (PropertyVetoException pve) {
                rejectedSetBCOnce = true;

                throw pve; // re-throw
            }
        }

        if (beanContext != null) releaseBeanContextResources();

        beanContext       = newValue;
        rejectedSetBCOnce = false;

        firePropertyChange("beanContext",
                           oldValue,
                           newValue
        );

        if (beanContext != null) initializeBeanContextResources();
!!!6817282.java!!!	getBeanContext() : BeanContext
 return beanContext;
!!!6817410.java!!!	addPropertyChangeListener(inout name : String, inout pcl : PropertyChangeListener) : void
        pcSupport.addPropertyChangeListener(name, pcl);
!!!6817538.java!!!	removePropertyChangeListener(inout name : String, inout pcl : PropertyChangeListener) : void
        pcSupport.removePropertyChangeListener(name, pcl);
!!!6817666.java!!!	addVetoableChangeListener(inout name : String, inout vcl : VetoableChangeListener) : void
        vcSupport.addVetoableChangeListener(name, vcl);
!!!6817794.java!!!	removeVetoableChangeListener(inout name : String, inout vcl : VetoableChangeListener) : void
        vcSupport.removeVetoableChangeListener(name, vcl);
!!!6818178.java!!!	getBeanContextChildPeer() : BeanContextChild
 return beanContextChildPeer;
!!!6818306.java!!!	isDelegated() : boolean
 return !this.equals(beanContextChildPeer);
!!!6818434.java!!!	firePropertyChange(inout name : String, inout oldValue : Object, inout newValue : Object) : void
        pcSupport.firePropertyChange(name, oldValue, newValue);
!!!6818562.java!!!	fireVetoableChange(inout name : String, inout oldValue : Object, inout newValue : Object) : void
        vcSupport.fireVetoableChange(name, oldValue, newValue);
!!!6818690.java!!!	validatePendingSetBeanContext(inout newValue : BeanContext) : boolean
        return true;
!!!6818818.java!!!	releaseBeanContextResources() : void
        // do nothing
!!!6818946.java!!!	initializeBeanContextResources() : void
        // do nothing
!!!6819074.java!!!	writeObject(inout oos : ObjectOutputStream) : void

        /*
         * don't serialize if we are delegated and the delegator is not also
         * serializable.
         */

        if (!equals(beanContextChildPeer) && !(beanContextChildPeer instanceof Serializable))
            throw new IOException("BeanContextChildSupport beanContextChildPeer not Serializable");

        else
            oos.defaultWriteObject();

!!!6819202.java!!!	readObject(inout ois : ObjectInputStream) : void
        ois.defaultReadObject();
