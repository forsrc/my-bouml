class OptionalDouble
!!!8865410.java!!!	OptionalDouble()
        this.isPresent = false;
        this.value = Double.NaN;
!!!8865538.java!!!	empty() : OptionalDouble
        return EMPTY;
!!!8865666.java!!!	OptionalDouble(in value : double)
        this.isPresent = true;
        this.value = value;
!!!8865794.java!!!	of(in value : double) : OptionalDouble
        return new OptionalDouble(value);
!!!8865922.java!!!	getAsDouble() : double
        if (!isPresent) {
            throw new NoSuchElementException("No value present");
        }
        return value;
!!!8866050.java!!!	isPresent() : boolean
        return isPresent;
!!!8866178.java!!!	ifPresent(inout consumer : DoubleConsumer) : void
        if (isPresent)
            consumer.accept(value);
!!!8866306.java!!!	orElse(in other : double) : double
        return isPresent ? value : other;
!!!8866434.java!!!	orElseGet(inout other : DoubleSupplier) : double
        return isPresent ? value : other.getAsDouble();
!!!8866562.java!!!	orElseThrow(inout exceptionSupplier : Supplier) : double
        if (isPresent) {
            return value;
        } else {
            throw exceptionSupplier.get();
        }
!!!8866690.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof OptionalDouble)) {
            return false;
        }

        OptionalDouble other = (OptionalDouble) obj;
        return (isPresent && other.isPresent)
               ? Double.compare(value, other.value) == 0
               : isPresent == other.isPresent;
!!!8866818.java!!!	hashCode() : int
        return isPresent ? Double.hashCode(value) : 0;
!!!8866946.java!!!	toString() : String
        return isPresent
                ? String.format("OptionalDouble[%s]", value)
                : "OptionalDouble.empty";
