class TreeScanner
!!!6056322.java!!!	scan(inout node : Tree, inout p : P) : R
        return (node == null) ? null : node.accept(this, p);
!!!6056450.java!!!	scanAndReduce(inout node : Tree, inout p : P, inout r : R) : R
        return reduce(scan(node, p), r);
!!!6056578.java!!!	scan(inout nodes : Iterable, inout p : P) : R
        R r = null;
        if (nodes != null) {
            boolean first = true;
            for (Tree node : nodes) {
                r = (first ? scan(node, p) : scanAndReduce(node, p, r));
                first = false;
            }
        }
        return r;
!!!6056706.java!!!	scanAndReduce(inout nodes : Iterable, inout p : P, inout r : R) : R
        return reduce(scan(nodes, p), r);
!!!6056834.java!!!	reduce(inout r1 : R, inout r2 : R) : R
        return r1;
!!!6056962.java!!!	visitCompilationUnit(inout node : CompilationUnitTree, inout p : P) : R
        R r = scan(node.getPackageAnnotations(), p);
        r = scanAndReduce(node.getPackageName(), p, r);
        r = scanAndReduce(node.getImports(), p, r);
        r = scanAndReduce(node.getTypeDecls(), p, r);
        return r;
!!!6057090.java!!!	visitImport(inout node : ImportTree, inout p : P) : R
        return scan(node.getQualifiedIdentifier(), p);
!!!6057218.java!!!	visitClass(inout node : ClassTree, inout p : P) : R
        R r = scan(node.getModifiers(), p);
        r = scanAndReduce(node.getTypeParameters(), p, r);
        r = scanAndReduce(node.getExtendsClause(), p, r);
        r = scanAndReduce(node.getImplementsClause(), p, r);
        r = scanAndReduce(node.getMembers(), p, r);
        return r;
!!!6057346.java!!!	visitMethod(inout node : MethodTree, inout p : P) : R
        R r = scan(node.getModifiers(), p);
        r = scanAndReduce(node.getReturnType(), p, r);
        r = scanAndReduce(node.getTypeParameters(), p, r);
        r = scanAndReduce(node.getParameters(), p, r);
        r = scanAndReduce(node.getReceiverParameter(), p, r);
        r = scanAndReduce(node.getThrows(), p, r);
        r = scanAndReduce(node.getBody(), p, r);
        r = scanAndReduce(node.getDefaultValue(), p, r);
        return r;
!!!6057474.java!!!	visitVariable(inout node : VariableTree, inout p : P) : R
        R r = scan(node.getModifiers(), p);
        r = scanAndReduce(node.getType(), p, r);
        r = scanAndReduce(node.getNameExpression(), p, r);
        r = scanAndReduce(node.getInitializer(), p, r);
        return r;
!!!6057602.java!!!	visitEmptyStatement(inout node : EmptyStatementTree, inout p : P) : R
        return null;
!!!6057730.java!!!	visitBlock(inout node : BlockTree, inout p : P) : R
        return scan(node.getStatements(), p);
!!!6057858.java!!!	visitDoWhileLoop(inout node : DoWhileLoopTree, inout p : P) : R
        R r = scan(node.getStatement(), p);
        r = scanAndReduce(node.getCondition(), p, r);
        return r;
!!!6057986.java!!!	visitWhileLoop(inout node : WhileLoopTree, inout p : P) : R
        R r = scan(node.getCondition(), p);
        r = scanAndReduce(node.getStatement(), p, r);
        return r;
!!!6058114.java!!!	visitForLoop(inout node : ForLoopTree, inout p : P) : R
        R r = scan(node.getInitializer(), p);
        r = scanAndReduce(node.getCondition(), p, r);
        r = scanAndReduce(node.getUpdate(), p, r);
        r = scanAndReduce(node.getStatement(), p, r);
        return r;
!!!6058242.java!!!	visitEnhancedForLoop(inout node : EnhancedForLoopTree, inout p : P) : R
        R r = scan(node.getVariable(), p);
        r = scanAndReduce(node.getExpression(), p, r);
        r = scanAndReduce(node.getStatement(), p, r);
        return r;
!!!6058370.java!!!	visitLabeledStatement(inout node : LabeledStatementTree, inout p : P) : R
        return scan(node.getStatement(), p);
!!!6058498.java!!!	visitSwitch(inout node : SwitchTree, inout p : P) : R
        R r = scan(node.getExpression(), p);
        r = scanAndReduce(node.getCases(), p, r);
        return r;
!!!6058626.java!!!	visitCase(inout node : CaseTree, inout p : P) : R
        R r = scan(node.getExpression(), p);
        r = scanAndReduce(node.getStatements(), p, r);
        return r;
!!!6058754.java!!!	visitSynchronized(inout node : SynchronizedTree, inout p : P) : R
        R r = scan(node.getExpression(), p);
        r = scanAndReduce(node.getBlock(), p, r);
        return r;
!!!6058882.java!!!	visitTry(inout node : TryTree, inout p : P) : R
        R r = scan(node.getResources(), p);
        r = scanAndReduce(node.getBlock(), p, r);
        r = scanAndReduce(node.getCatches(), p, r);
        r = scanAndReduce(node.getFinallyBlock(), p, r);
        return r;
!!!6059010.java!!!	visitCatch(inout node : CatchTree, inout p : P) : R
        R r = scan(node.getParameter(), p);
        r = scanAndReduce(node.getBlock(), p, r);
        return r;
!!!6059138.java!!!	visitConditionalExpression(inout node : ConditionalExpressionTree, inout p : P) : R
        R r = scan(node.getCondition(), p);
        r = scanAndReduce(node.getTrueExpression(), p, r);
        r = scanAndReduce(node.getFalseExpression(), p, r);
        return r;
!!!6059266.java!!!	visitIf(inout node : IfTree, inout p : P) : R
        R r = scan(node.getCondition(), p);
        r = scanAndReduce(node.getThenStatement(), p, r);
        r = scanAndReduce(node.getElseStatement(), p, r);
        return r;
!!!6059394.java!!!	visitExpressionStatement(inout node : ExpressionStatementTree, inout p : P) : R
        return scan(node.getExpression(), p);
!!!6059522.java!!!	visitBreak(inout node : BreakTree, inout p : P) : R
        return null;
!!!6059650.java!!!	visitContinue(inout node : ContinueTree, inout p : P) : R
        return null;
!!!6059778.java!!!	visitReturn(inout node : ReturnTree, inout p : P) : R
        return scan(node.getExpression(), p);
!!!6059906.java!!!	visitThrow(inout node : ThrowTree, inout p : P) : R
        return scan(node.getExpression(), p);
!!!6060034.java!!!	visitAssert(inout node : AssertTree, inout p : P) : R
        R r = scan(node.getCondition(), p);
        r = scanAndReduce(node.getDetail(), p, r);
        return r;
!!!6060162.java!!!	visitMethodInvocation(inout node : MethodInvocationTree, inout p : P) : R
        R r = scan(node.getTypeArguments(), p);
        r = scanAndReduce(node.getMethodSelect(), p, r);
        r = scanAndReduce(node.getArguments(), p, r);
        return r;
!!!6060290.java!!!	visitNewClass(inout node : NewClassTree, inout p : P) : R
        R r = scan(node.getEnclosingExpression(), p);
        r = scanAndReduce(node.getIdentifier(), p, r);
        r = scanAndReduce(node.getTypeArguments(), p, r);
        r = scanAndReduce(node.getArguments(), p, r);
        r = scanAndReduce(node.getClassBody(), p, r);
        return r;
!!!6060418.java!!!	visitNewArray(inout node : NewArrayTree, inout p : P) : R
        R r = scan(node.getType(), p);
        r = scanAndReduce(node.getDimensions(), p, r);
        r = scanAndReduce(node.getInitializers(), p, r);
        r = scanAndReduce(node.getAnnotations(), p, r);
        for (Iterable< ? extends Tree> dimAnno : node.getDimAnnotations()) {
            r = scanAndReduce(dimAnno, p, r);
        }
        return r;
!!!6060546.java!!!	visitLambdaExpression(inout node : LambdaExpressionTree, inout p : P) : R
        R r = scan(node.getParameters(), p);
        r = scanAndReduce(node.getBody(), p, r);
        return r;
!!!6060674.java!!!	visitParenthesized(inout node : ParenthesizedTree, inout p : P) : R
        return scan(node.getExpression(), p);
!!!6060802.java!!!	visitAssignment(inout node : AssignmentTree, inout p : P) : R
        R r = scan(node.getVariable(), p);
        r = scanAndReduce(node.getExpression(), p, r);
        return r;
!!!6060930.java!!!	visitCompoundAssignment(inout node : CompoundAssignmentTree, inout p : P) : R
        R r = scan(node.getVariable(), p);
        r = scanAndReduce(node.getExpression(), p, r);
        return r;
!!!6061058.java!!!	visitUnary(inout node : UnaryTree, inout p : P) : R
        return scan(node.getExpression(), p);
!!!6061186.java!!!	visitBinary(inout node : BinaryTree, inout p : P) : R
        R r = scan(node.getLeftOperand(), p);
        r = scanAndReduce(node.getRightOperand(), p, r);
        return r;
!!!6061314.java!!!	visitTypeCast(inout node : TypeCastTree, inout p : P) : R
        R r = scan(node.getType(), p);
        r = scanAndReduce(node.getExpression(), p, r);
        return r;
!!!6061442.java!!!	visitInstanceOf(inout node : InstanceOfTree, inout p : P) : R
        R r = scan(node.getExpression(), p);
        r = scanAndReduce(node.getType(), p, r);
        return r;
!!!6061570.java!!!	visitArrayAccess(inout node : ArrayAccessTree, inout p : P) : R
        R r = scan(node.getExpression(), p);
        r = scanAndReduce(node.getIndex(), p, r);
        return r;
!!!6061698.java!!!	visitMemberSelect(inout node : MemberSelectTree, inout p : P) : R
        return scan(node.getExpression(), p);
!!!6061826.java!!!	visitMemberReference(inout node : MemberReferenceTree, inout p : P) : R
        R r = scan(node.getQualifierExpression(), p);
        r = scanAndReduce(node.getTypeArguments(), p, r);
        return r;
!!!6061954.java!!!	visitIdentifier(inout node : IdentifierTree, inout p : P) : R
        return null;
!!!6062082.java!!!	visitLiteral(inout node : LiteralTree, inout p : P) : R
        return null;
!!!6062210.java!!!	visitPrimitiveType(inout node : PrimitiveTypeTree, inout p : P) : R
        return null;
!!!6062338.java!!!	visitArrayType(inout node : ArrayTypeTree, inout p : P) : R
        return scan(node.getType(), p);
!!!6062466.java!!!	visitParameterizedType(inout node : ParameterizedTypeTree, inout p : P) : R
        R r = scan(node.getType(), p);
        r = scanAndReduce(node.getTypeArguments(), p, r);
        return r;
!!!6062594.java!!!	visitUnionType(inout node : UnionTypeTree, inout p : P) : R
        return scan(node.getTypeAlternatives(), p);
!!!6062722.java!!!	visitIntersectionType(inout node : IntersectionTypeTree, inout p : P) : R
        return scan(node.getBounds(), p);
!!!6062850.java!!!	visitTypeParameter(inout node : TypeParameterTree, inout p : P) : R
        R r = scan(node.getAnnotations(), p);
        r = scanAndReduce(node.getBounds(), p, r);
        return r;
!!!6062978.java!!!	visitWildcard(inout node : WildcardTree, inout p : P) : R
        return scan(node.getBound(), p);
!!!6063106.java!!!	visitModifiers(inout node : ModifiersTree, inout p : P) : R
        return scan(node.getAnnotations(), p);
!!!6063234.java!!!	visitAnnotation(inout node : AnnotationTree, inout p : P) : R
        R r = scan(node.getAnnotationType(), p);
        r = scanAndReduce(node.getArguments(), p, r);
        return r;
!!!6063362.java!!!	visitAnnotatedType(inout node : AnnotatedTypeTree, inout p : P) : R
       R r = scan(node.getAnnotations(), p);
       r = scanAndReduce(node.getUnderlyingType(), p, r);
       return r;
!!!6063490.java!!!	visitOther(inout node : Tree, inout p : P) : R
        return null;
!!!6063618.java!!!	visitErroneous(inout node : ErroneousTree, inout p : P) : R
        return null;
