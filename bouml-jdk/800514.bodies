class UnImplNode
!!!5714690.java!!!	error(inout msg : String) : void

    System.out.println("DOM ERROR! class: " + this.getClass().getName());

    throw new RuntimeException(XMLMessages.createXMLMessage(msg, null));
!!!5714818.java!!!	error(inout msg : String, inout args : Object [[]]) : void

    System.out.println("DOM ERROR! class: " + this.getClass().getName());

    throw new RuntimeException(XMLMessages.createXMLMessage(msg, args));  //"UnImplNode error: "+msg);
!!!5714946.java!!!	appendChild(inout newChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"appendChild not supported!");

    return null;
!!!5715074.java!!!	hasChildNodes() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasChildNodes not supported!");

    return false;
!!!5715202.java!!!	getNodeType() : short

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNodeType not supported!");

    return 0;
!!!5715330.java!!!	getParentNode() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getParentNode not supported!");

    return null;
!!!5715458.java!!!	getChildNodes() : NodeList

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getChildNodes not supported!");

    return null;
!!!5715586.java!!!	getFirstChild() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getFirstChild not supported!");

    return null;
!!!5715714.java!!!	getLastChild() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getLastChild not supported!");

    return null;
!!!5715842.java!!!	getNextSibling() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNextSibling not supported!");

    return null;
!!!5715970.java!!!	getLength() : int

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getLength not supported!");

    return 0;
!!!5716098.java!!!	item(in index : int) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"item not supported!");

    return null;
!!!5716226.java!!!	getOwnerDocument() : Document

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getOwnerDocument not supported!");

    return null;
!!!5716354.java!!!	getTagName() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getTagName not supported!");

    return null;
!!!5716482.java!!!	getNodeName() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNodeName not supported!");

    return null;
!!!5716610.java!!!	normalize() : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"normalize not supported!");
!!!5716738.java!!!	getElementsByTagName(inout name : String) : NodeList

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getElementsByTagName not supported!");

    return null;
!!!5716866.java!!!	removeAttributeNode(inout oldAttr : Attr) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"removeAttributeNode not supported!");

    return null;
!!!5716994.java!!!	setAttributeNode(inout newAttr : Attr) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttributeNode not supported!");

    return null;
!!!5717122.java!!!	hasAttribute(inout name : String) : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasAttribute not supported!");

    return false;
!!!5717250.java!!!	hasAttributeNS(inout name : String, inout x : String) : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasAttributeNS not supported!");

    return false;
!!!5717378.java!!!	getAttributeNode(inout name : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributeNode not supported!");

    return null;
!!!5717506.java!!!	removeAttribute(inout name : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"removeAttribute not supported!");
!!!5717634.java!!!	setAttribute(inout name : String, inout value : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttribute not supported!");
!!!5717762.java!!!	getAttribute(inout name : String) : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttribute not supported!");

    return null;
!!!5717890.java!!!	hasAttributes() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasAttributes not supported!");

    return false;
!!!5718018.java!!!	getElementsByTagNameNS(inout namespaceURI : String, inout localName : String) : NodeList

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getElementsByTagNameNS not supported!");

    return null;
!!!5718146.java!!!	setAttributeNodeNS(inout newAttr : Attr) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttributeNodeNS not supported!");

    return null;
!!!5718274.java!!!	getAttributeNodeNS(inout namespaceURI : String, inout localName : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributeNodeNS not supported!");

    return null;
!!!5718402.java!!!	removeAttributeNS(inout namespaceURI : String, inout localName : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"removeAttributeNS not supported!");
!!!5718530.java!!!	setAttributeNS(inout namespaceURI : String, inout qualifiedName : String, inout value : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttributeNS not supported!");
!!!5718658.java!!!	getAttributeNS(inout namespaceURI : String, inout localName : String) : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributeNS not supported!");

    return null;
!!!5718786.java!!!	getPreviousSibling() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getPreviousSibling not supported!");

    return null;
!!!5718914.java!!!	cloneNode(inout deep : boolean) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"cloneNode not supported!");

    return null;
!!!5719042.java!!!	getNodeValue() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNodeValue not supported!");

    return null;
!!!5719170.java!!!	setNodeValue(inout nodeValue : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setNodeValue not supported!");
!!!5719298.java!!!	setValue(inout value : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setValue not supported!");
!!!5719426.java!!!	getOwnerElement() : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getOwnerElement not supported!");

    return null;
!!!5719554.java!!!	getSpecified() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setValue not supported!");

    return false;
!!!5719682.java!!!	getAttributes() : NamedNodeMap

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributes not supported!");

    return null;
!!!5719810.java!!!	insertBefore(inout newChild : Node, inout refChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"insertBefore not supported!");

    return null;
!!!5719938.java!!!	replaceChild(inout newChild : Node, inout oldChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"replaceChild not supported!");

    return null;
!!!5720066.java!!!	removeChild(inout oldChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"replaceChild not supported!");

    return null;
!!!5720194.java!!!	isSupported(inout feature : String, inout version : String) : boolean
    return false;
!!!5720322.java!!!	getNamespaceURI() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNamespaceURI not supported!");

    return null;
!!!5720450.java!!!	getPrefix() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getPrefix not supported!");

    return null;
!!!5720578.java!!!	setPrefix(inout prefix : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setPrefix not supported!");
!!!5720706.java!!!	getLocalName() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getLocalName not supported!");

    return null;
!!!5720834.java!!!	getDoctype() : DocumentType

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5720962.java!!!	getImplementation() : DOMImplementation

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721090.java!!!	getDocumentElement() : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721218.java!!!	createElement(inout tagName : String) : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721346.java!!!	createDocumentFragment() : DocumentFragment

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721474.java!!!	createTextNode(inout data : String) : Text

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721602.java!!!	createComment(inout data : String) : Comment

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721730.java!!!	createCDATASection(inout data : String) : CDATASection

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721858.java!!!	createProcessingInstruction(inout target : String, inout data : String) : ProcessingInstruction

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5721986.java!!!	createAttribute(inout name : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5722114.java!!!	createEntityReference(inout name : String) : EntityReference

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5722242.java!!!	importNode(inout importedNode : Node, inout deep : boolean) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5722370.java!!!	createElementNS(inout namespaceURI : String, inout qualifiedName : String) : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5722498.java!!!	createAttributeNS(inout namespaceURI : String, inout qualifiedName : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5722626.java!!!	getElementById(inout elementId : String) : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5722754.java!!!	setData(inout data : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5722882.java!!!	substringData(in offset : int, in count : int) : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5723010.java!!!	appendData(inout arg : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5723138.java!!!	insertData(in offset : int, inout arg : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5723266.java!!!	deleteData(in offset : int, in count : int) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5723394.java!!!	replaceData(in offset : int, in count : int, inout arg : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5723522.java!!!	splitText(in offset : int) : Text

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5723650.java!!!	adoptNode(inout source : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5723778.java!!!	getInputEncoding() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5723906.java!!!	setInputEncoding(inout encoding : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5724034.java!!!	getStandalone() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return false;
!!!5724162.java!!!	setStandalone(inout standalone : boolean) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5724290.java!!!	getStrictErrorChecking() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return false;
!!!5724418.java!!!	setStrictErrorChecking(inout strictErrorChecking : boolean) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5724546.java!!!	getVersion() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5724674.java!!!	setVersion(inout version : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5724802.java!!!	setUserData(inout key : String, inout data : Object, inout handler : UserDataHandler) : Object
        return getOwnerDocument().setUserData( key, data, handler);
!!!5724930.java!!!	getUserData(inout key : String) : Object
        return getOwnerDocument().getUserData( key);
!!!5725058.java!!!	getFeature(inout feature : String, inout version : String) : Object
        // we don't have any alternate node, either this node does the job
        // or we don't have anything that does
        return isSupported(feature, version) ? this : null;
!!!5725186.java!!!	isEqualNode(inout arg : Node) : boolean
        if (arg == this) {
            return true;
        }
        if (arg.getNodeType() != getNodeType()) {
            return false;
        }
        // in theory nodeName can't be null but better be careful
        // who knows what other implementations may be doing?...
        if (getNodeName() == null) {
            if (arg.getNodeName() != null) {
                return false;
            }
        }
        else if (!getNodeName().equals(arg.getNodeName())) {
            return false;
        }

        if (getLocalName() == null) {
            if (arg.getLocalName() != null) {
                return false;
            }
        }
        else if (!getLocalName().equals(arg.getLocalName())) {
            return false;
        }

        if (getNamespaceURI() == null) {
            if (arg.getNamespaceURI() != null) {
                return false;
            }
        }
        else if (!getNamespaceURI().equals(arg.getNamespaceURI())) {
            return false;
        }

        if (getPrefix() == null) {
            if (arg.getPrefix() != null) {
                return false;
            }
        }
        else if (!getPrefix().equals(arg.getPrefix())) {
            return false;
        }

        if (getNodeValue() == null) {
            if (arg.getNodeValue() != null) {
                return false;
            }
        }
        else if (!getNodeValue().equals(arg.getNodeValue())) {
            return false;
        }
    /*
        if (getBaseURI() == null) {
            if (((NodeImpl) arg).getBaseURI() != null) {
                return false;
            }
        }
        else if (!getBaseURI().equals(((NodeImpl) arg).getBaseURI())) {
            return false;
        }
*/

             return true;
!!!5725314.java!!!	lookupNamespaceURI(inout specifiedPrefix : String) : String
        short type = this.getNodeType();
        switch (type) {
        case Node.ELEMENT_NODE : {

                String namespace = this.getNamespaceURI();
                String prefix = this.getPrefix();
                if (namespace !=null) {
                    // REVISIT: is it possible that prefix is empty string?
                    if (specifiedPrefix== null && prefix==specifiedPrefix) {
                        // looking for default namespace
                        return namespace;
                    } else if (prefix != null && prefix.equals(specifiedPrefix)) {
                        // non default namespace
                        return namespace;
                    }
                }
                if (this.hasAttributes()) {
                    NamedNodeMap map = this.getAttributes();
                    int length = map.getLength();
                    for (int i=0;i<length;i++) {
                        Node attr = map.item(i);
                        String attrPrefix = attr.getPrefix();
                        String value = attr.getNodeValue();
                        namespace = attr.getNamespaceURI();
                        if (namespace !=null && namespace.equals("http://www.w3.org/2000/xmlns/")) {
                            // at this point we are dealing with DOM Level 2 nodes only
                            if (specifiedPrefix == null &&
                                attr.getNodeName().equals("xmlns")) {
                                // default namespace
                                return value;
                            } else if (attrPrefix !=null &&
                                       attrPrefix.equals("xmlns") &&
                                       attr.getLocalName().equals(specifiedPrefix)) {
                 // non default namespace
                                return value;
                            }
                        }
                    }
                }
                /*
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.lookupNamespaceURI(specifiedPrefix);
                }
                */

                return null;


            }
/*
        case Node.DOCUMENT_NODE : {
                return((NodeImpl)((Document)this).getDocumentElement()).lookupNamespaceURI(specifiedPrefix) ;
            }
*/
        case Node.ENTITY_NODE :
        case Node.NOTATION_NODE:
        case Node.DOCUMENT_FRAGMENT_NODE:
        case Node.DOCUMENT_TYPE_NODE:
            // type is unknown
            return null;
        case Node.ATTRIBUTE_NODE:{
                if (this.getOwnerElement().getNodeType() == Node.ELEMENT_NODE) {
                    return getOwnerElement().lookupNamespaceURI(specifiedPrefix);

                }
                return null;
            }
        default:{
           /*
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.lookupNamespaceURI(specifiedPrefix);
                }
             */
                return null;
            }

        }
!!!5725442.java!!!	isDefaultNamespace(inout namespaceURI : String) : boolean
       /*
        // REVISIT: remove casts when DOM L3 becomes REC.
        short type = this.getNodeType();
        switch (type) {
        case Node.ELEMENT_NODE: {
            String namespace = this.getNamespaceURI();
            String prefix = this.getPrefix();

            // REVISIT: is it possible that prefix is empty string?
            if (prefix == null || prefix.length() == 0) {
                if (namespaceURI == null) {
                    return (namespace == namespaceURI);
                }
                return namespaceURI.equals(namespace);
            }
            if (this.hasAttributes()) {
                ElementImpl elem = (ElementImpl)this;
                NodeImpl attr = (NodeImpl)elem.getAttributeNodeNS("http://www.w3.org/2000/xmlns/", "xmlns");
                if (attr != null) {
                    String value = attr.getNodeValue();
                    if (namespaceURI == null) {
                        return (namespace == value);
                    }
                    return namespaceURI.equals(value);
                }
            }

            NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
            if (ancestor != null) {
                return ancestor.isDefaultNamespace(namespaceURI);
            }
            return false;
        }
        case Node.DOCUMENT_NODE:{
                return((NodeImpl)((Document)this).getDocumentElement()).isDefaultNamespace(namespaceURI);
            }

        case Node.ENTITY_NODE :
          case Node.NOTATION_NODE:
        case Node.DOCUMENT_FRAGMENT_NODE:
        case Node.DOCUMENT_TYPE_NODE:
            // type is unknown
            return false;
        case Node.ATTRIBUTE_NODE:{
                if (this.ownerNode.getNodeType() == Node.ELEMENT_NODE) {
                    return ownerNode.isDefaultNamespace(namespaceURI);

                }
                return false;
            }
        default:{
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.isDefaultNamespace(namespaceURI);
                }
                return false;
            }

        }
*/
        return false;


!!!5725570.java!!!	lookupPrefix(inout namespaceURI : String) : String

        // REVISIT: When Namespaces 1.1 comes out this may not be true
        // Prefix can't be bound to null namespace
        if (namespaceURI == null) {
            return null;
        }

        short type = this.getNodeType();

        switch (type) {
/*
        case Node.ELEMENT_NODE: {

                String namespace = this.getNamespaceURI(); // to flip out children
                return lookupNamespacePrefix(namespaceURI, (ElementImpl)this);
            }

        case Node.DOCUMENT_NODE:{
                return((NodeImpl)((Document)this).getDocumentElement()).lookupPrefix(namespaceURI);
            }
*/
        case Node.ENTITY_NODE :
        case Node.NOTATION_NODE:
        case Node.DOCUMENT_FRAGMENT_NODE:
        case Node.DOCUMENT_TYPE_NODE:
            // type is unknown
            return null;
        case Node.ATTRIBUTE_NODE:{
                if (this.getOwnerElement().getNodeType() == Node.ELEMENT_NODE) {
                    return getOwnerElement().lookupPrefix(namespaceURI);

                }
                return null;
            }
        default:{
/*
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.lookupPrefix(namespaceURI);
                }
*/
                return null;
            }
         }
!!!5725698.java!!!	isSameNode(inout other : Node) : boolean
        // we do not use any wrapper so the answer is obvious
        return this == other;
!!!5725826.java!!!	setTextContent(inout textContent : String) : void
        setNodeValue(textContent);
!!!5725954.java!!!	getTextContent() : String
        return getNodeValue();  // overriden in some subclasses
!!!5726082.java!!!	compareDocumentPosition(inout other : Node) : short
        return 0;
!!!5726210.java!!!	getBaseURI() : String
        return null;
!!!5726338.java!!!	renameNode(inout n : Node, inout namespaceURI : String, inout name : String) : Node
        return n;
!!!5726466.java!!!	normalizeDocument() : void

!!!5726594.java!!!	getDomConfig() : DOMConfiguration
       return null;
!!!5726722.java!!!	setDocumentURI(inout documentURI : String) : void

        fDocumentURI= documentURI;
!!!5726850.java!!!	getDocumentURI() : String
        return fDocumentURI;
!!!5726978.java!!!	getActualEncoding() : String
        return actualEncoding;
!!!5727106.java!!!	setActualEncoding(inout value : String) : void
        actualEncoding = value;
!!!5727234.java!!!	replaceWholeText(inout content : String) : Text
/*

        if (needsSyncData()) {
            synchronizeData();
        }

        // make sure we can make the replacement
        if (!canModify(nextSibling)) {
            throw new DOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR,
                DOMMessageFormatter.formatMessage(DOMMessageFormatter.DOM_DOMAIN, "NO_MODIFICATION_ALLOWED_ERR", null));
        }

        Node parent = this.getParentNode();
        if (content == null || content.length() == 0) {
            // remove current node
            if (parent !=null) { // check if node in the tree
                parent.removeChild(this);
                return null;
            }
        }
        Text currentNode = null;
        if (isReadOnly()){
            Text newNode = this.ownerDocument().createTextNode(content);
            if (parent !=null) { // check if node in the tree
                parent.insertBefore(newNode, this);
                parent.removeChild(this);
                currentNode = newNode;
            } else {
                return newNode;
            }
        }  else {
            this.setData(content);
            currentNode = this;
        }
        Node sibling =  currentNode.getNextSibling();
        while ( sibling !=null) {
            parent.removeChild(sibling);
            sibling = currentNode.getNextSibling();
        }

        return currentNode;
*/
        return null; //Pending
!!!5727362.java!!!	getWholeText() : String

/*
        if (needsSyncData()) {
            synchronizeData();
        }
        if (nextSibling == null) {
            return data;
        }
        StringBuffer buffer = new StringBuffer();
        if (data != null && data.length() != 0) {
            buffer.append(data);
        }
        getWholeText(nextSibling, buffer);
        return buffer.toString();
*/
        return null; // PENDING

!!!5727490.java!!!	isWhitespaceInElementContent() : boolean
        return false;
!!!5727618.java!!!	setIdAttribute(inout id : boolean) : void
        //PENDING
!!!5727746.java!!!	setIdAttribute(inout name : String, inout makeId : boolean) : void
        //PENDING
!!!5727874.java!!!	setIdAttributeNode(inout at : Attr, inout makeId : boolean) : void
        //PENDING
!!!5728002.java!!!	setIdAttributeNS(inout namespaceURI : String, inout localName : String, inout makeId : boolean) : void
        //PENDING
!!!5728130.java!!!	getSchemaTypeInfo() : TypeInfo
      return null; //PENDING
!!!5728258.java!!!	isId() : boolean
        return false; //PENDING
!!!5728386.java!!!	getXmlEncoding() : String
        return xmlEncoding;
!!!5728514.java!!!	setXmlEncoding(inout xmlEncoding : String) : void
        this.xmlEncoding = xmlEncoding;
!!!5728642.java!!!	getXmlStandalone() : boolean
        return xmlStandalone;
!!!5728770.java!!!	setXmlStandalone(inout xmlStandalone : boolean) : void
        this.xmlStandalone = xmlStandalone;
!!!5728898.java!!!	getXmlVersion() : String
        return xmlVersion;
!!!5729026.java!!!	setXmlVersion(inout xmlVersion : String) : void
        this.xmlVersion = xmlVersion;
