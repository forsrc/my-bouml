class StylesheetPIHandler
!!!5704962.java!!!	setURIResolver(inout resolver : URIResolver) : void
    m_uriResolver = resolver;
!!!5705090.java!!!	getURIResolver() : URIResolver
    return m_uriResolver;
!!!5705218.java!!!	StylesheetPIHandler(inout baseID : String, inout media : String, inout title : String, inout charset : String)

    m_baseID = baseID;
    m_media = media;
    m_title = title;
    m_charset = charset;
!!!5705346.java!!!	getAssociatedStylesheet() : Source

    int sz = m_stylesheets.size();

    if (sz > 0)
    {
      Source source = (Source) m_stylesheets.elementAt(sz-1);
      return source;
    }
    else
      return null;
!!!5705474.java!!!	processingInstruction(inout target : String, inout data : String) : void

    if (target.equals("xml-stylesheet"))
    {
      String href = null;  // CDATA #REQUIRED
      String type = null;  // CDATA #REQUIRED
      String title = null;  // CDATA #IMPLIED
      String media = null;  // CDATA #IMPLIED
      String charset = null;  // CDATA #IMPLIED
      boolean alternate = false;  // (yes|no) "no"
      StringTokenizer tokenizer = new StringTokenizer(data, " \t=\n", true);
      boolean lookedAhead = false;
      Source source = null;

      String token = "";
      while (tokenizer.hasMoreTokens())
      {
        if (!lookedAhead)
          token = tokenizer.nextToken();
        else
          lookedAhead = false;
        if (tokenizer.hasMoreTokens() &&
               (token.equals(" ") || token.equals("\t") || token.equals("=")))
          continue;

        String name = token;
        if (name.equals("type"))
        {
          token = tokenizer.nextToken();
          while (tokenizer.hasMoreTokens() &&
               (token.equals(" " ) || token.equals("\t") || token.equals("=")))
            token = tokenizer.nextToken();
          type = token.substring(1, token.length() - 1);

        }
        else if (name.equals("href"))
        {
          token = tokenizer.nextToken();
          while (tokenizer.hasMoreTokens() &&
               (token.equals(" " ) || token.equals("\t") || token.equals("=")))
            token = tokenizer.nextToken();
          href = token;
          if (tokenizer.hasMoreTokens())
          {
            token = tokenizer.nextToken();
            // If the href value has parameters to be passed to a
            // servlet(something like "foobar?id=12..."),
            // we want to make sure we get them added to
            // the href value. Without this check, we would move on
            // to try to process another attribute and that would be
            // wrong.
            // We need to set lookedAhead here to flag that we
            // already have the next token.
            while ( token.equals("=") && tokenizer.hasMoreTokens())
            {
              href = href + token + tokenizer.nextToken();
              if (tokenizer.hasMoreTokens())
              {
                token = tokenizer.nextToken();
                lookedAhead = true;
              }
              else
              {
                break;
              }
            }
          }
          href = href.substring(1, href.length() - 1);
          try
          {
            // Add code to use a URIResolver. Patch from Dmitri Ilyin.
            if (m_uriResolver != null)
            {
              source = m_uriResolver.resolve(href, m_baseID);
            }
           else
            {
              href = SystemIDResolver.getAbsoluteURI(href, m_baseID);
              source = new SAXSource(new InputSource(href));
            }
          }
          catch(TransformerException te)
          {
            throw new org.xml.sax.SAXException(te);
          }
        }
        else if (name.equals("title"))
        {
          token = tokenizer.nextToken();
          while (tokenizer.hasMoreTokens() &&
               (token.equals(" " ) || token.equals("\t") || token.equals("=")))
            token = tokenizer.nextToken();
          title = token.substring(1, token.length() - 1);
        }
        else if (name.equals("media"))
        {
          token = tokenizer.nextToken();
          while (tokenizer.hasMoreTokens() &&
               (token.equals(" " ) || token.equals("\t") || token.equals("=")))
            token = tokenizer.nextToken();
          media = token.substring(1, token.length() - 1);
        }
        else if (name.equals("charset"))
        {
          token = tokenizer.nextToken();
          while (tokenizer.hasMoreTokens() &&
              (token.equals(" " ) || token.equals("\t") || token.equals("=")))
            token = tokenizer.nextToken();
          charset = token.substring(1, token.length() - 1);
        }
        else if (name.equals("alternate"))
        {
          token = tokenizer.nextToken();
          while (tokenizer.hasMoreTokens() &&
               (token.equals(" " ) || token.equals("\t") || token.equals("=")))
            token = tokenizer.nextToken();
          alternate = token.substring(1, token.length()
                                             - 1).equals("yes");
        }

      }

      if ((null != type)
          && (type.equals("text/xsl") || type.equals("text/xml") || type.equals("application/xml+xslt"))
          && (null != href))
      {
        if (null != m_media)
        {
          if (null != media)
          {
            if (!media.equals(m_media))
              return;
          }
          else
            return;
        }

        if (null != m_charset)
        {
          if (null != charset)
          {
            if (!charset.equals(m_charset))
              return;
          }
          else
            return;
        }

        if (null != m_title)
        {
          if (null != title)
          {
            if (!title.equals(m_title))
              return;
          }
          else
            return;
        }

        m_stylesheets.addElement(source);
      }
    }
!!!5705602.java!!!	startElement(inout namespaceURI : String, inout localName : String, inout qName : String, inout atts : Attributes) : void
    throw new StopParseException();
!!!5705730.java!!!	setBaseId(inout baseId : String) : void
       m_baseID = baseId;

!!!5705858.java!!!	getBaseId() : String
       return m_baseID ;
