class StateEdit
!!!11913346.java!!!	StateEdit(inout anObject : StateEditable)
        super();
        init (anObject,null);
!!!11913474.java!!!	StateEdit(inout anObject : StateEditable, inout name : String)
        super();
        init (anObject,name);
!!!11913602.java!!!	init(inout anObject : StateEditable, inout name : String) : void
        this.object = anObject;
        this.preState = new Hashtable<Object, Object>(11);
        this.object.storeState(this.preState);
        this.postState = null;
        this.undoRedoName = name;
!!!11913730.java!!!	end() : void
        this.postState = new Hashtable<Object, Object>(11);
        this.object.storeState(this.postState);
        this.removeRedundantState();
!!!11913858.java!!!	undo() : void
        super.undo();
        this.object.restoreState(preState);
!!!11913986.java!!!	redo() : void
        super.redo();
        this.object.restoreState(postState);
!!!11914114.java!!!	getPresentationName() : String
        return this.undoRedoName;
!!!11914242.java!!!	removeRedundantState() : void
        Vector<Object> uselessKeys = new Vector<Object>();
        Enumeration myKeys = preState.keys();

        // Locate redundant state
        while (myKeys.hasMoreElements()) {
            Object myKey = myKeys.nextElement();
            if (postState.containsKey(myKey) &&
                postState.get(myKey).equals(preState.get(myKey))) {
                uselessKeys.addElement(myKey);
            }
        }

        // Remove redundant state
        for (int i = uselessKeys.size()-1; i >= 0; i--) {
            Object myKey = uselessKeys.elementAt(i);
            preState.remove(myKey);
            postState.remove(myKey);
        }
