class TrayIcon
!!!6374146.java!!!	getAccessControlContext() : AccessControlContext
        if (acc == null) {
            throw new SecurityException("TrayIcon is missing AccessControlContext");
        }
        return acc;
!!!6374274.java!!!	TrayIcon()
        SystemTray.checkSystemTrayAllowed();
        if (GraphicsEnvironment.isHeadless()) {
            throw new HeadlessException();
        }
        if (!SystemTray.isSupported()) {
            throw new UnsupportedOperationException();
        }
        SunToolkit.insertTargetMapping(this, AppContext.getAppContext());
!!!6374402.java!!!	TrayIcon(inout image : Image)
        this();
        if (image == null) {
            throw new IllegalArgumentException("creating TrayIcon with null Image");
        }
        setImage(image);
!!!6374530.java!!!	TrayIcon(inout image : Image, inout tooltip : String)
        this(image);
        setToolTip(tooltip);
!!!6374658.java!!!	TrayIcon(inout image : Image, inout tooltip : String, inout popup : PopupMenu)
        this(image, tooltip);
        setPopupMenu(popup);
!!!6374786.java!!!	setImage(inout image : Image) : void
        if (image == null) {
            throw new NullPointerException("setting null Image");
        }
        this.image = image;

        TrayIconPeer peer = this.peer;
        if (peer != null) {
            peer.updateImage();
        }
!!!6374914.java!!!	getImage() : Image
        return image;
!!!6375042.java!!!	setPopupMenu(inout popup : PopupMenu) : void
        if (popup == this.popup) {
            return;
        }
        synchronized (TrayIcon.class) {
            if (popup != null) {
                if (popup.isTrayIconPopup) {
                    throw new IllegalArgumentException("the PopupMenu is already set for another TrayIcon");
                }
                popup.isTrayIconPopup = true;
            }
            if (this.popup != null) {
                this.popup.isTrayIconPopup = false;
            }
            this.popup = popup;
        }
!!!6375170.java!!!	getPopupMenu() : PopupMenu
        return popup;
!!!6375298.java!!!	setToolTip(inout tooltip : String) : void
        this.tooltip = tooltip;

        TrayIconPeer peer = this.peer;
        if (peer != null) {
            peer.setToolTip(tooltip);
        }
!!!6375426.java!!!	getToolTip() : String
        return tooltip;
!!!6375554.java!!!	setImageAutoSize(inout autosize : boolean) : void
        this.autosize = autosize;

        TrayIconPeer peer = this.peer;
        if (peer != null) {
            peer.updateImage();
        }
!!!6375682.java!!!	isImageAutoSize() : boolean
        return autosize;
!!!6375810.java!!!	addMouseListener(inout listener : MouseListener) : void
        if (listener == null) {
            return;
        }
        mouseListener = AWTEventMulticaster.add(mouseListener, listener);
!!!6375938.java!!!	removeMouseListener(inout listener : MouseListener) : void
        if (listener == null) {
            return;
        }
        mouseListener = AWTEventMulticaster.remove(mouseListener, listener);
!!!6376066.java!!!	getMouseListeners() : MouseListener
        return AWTEventMulticaster.getListeners(mouseListener, MouseListener.class);
!!!6376194.java!!!	addMouseMotionListener(inout listener : MouseMotionListener) : void
        if (listener == null) {
            return;
        }
        mouseMotionListener = AWTEventMulticaster.add(mouseMotionListener, listener);
!!!6376322.java!!!	removeMouseMotionListener(inout listener : MouseMotionListener) : void
        if (listener == null) {
            return;
        }
        mouseMotionListener = AWTEventMulticaster.remove(mouseMotionListener, listener);
!!!6376450.java!!!	getMouseMotionListeners() : MouseMotionListener
        return AWTEventMulticaster.getListeners(mouseMotionListener, MouseMotionListener.class);
!!!6376578.java!!!	getActionCommand() : String
        return actionCommand;
!!!6376706.java!!!	setActionCommand(inout command : String) : void
        actionCommand = command;
!!!6376834.java!!!	addActionListener(inout listener : ActionListener) : void
        if (listener == null) {
            return;
        }
        actionListener = AWTEventMulticaster.add(actionListener, listener);
!!!6376962.java!!!	removeActionListener(inout listener : ActionListener) : void
        if (listener == null) {
            return;
        }
        actionListener = AWTEventMulticaster.remove(actionListener, listener);
!!!6377090.java!!!	getActionListeners() : ActionListener
        return AWTEventMulticaster.getListeners(actionListener, ActionListener.class);
!!!6377218.java!!!	displayMessage(inout caption : String, inout text : String, inout messageType : TrayIcon::MessageType) : void
        if (caption == null && text == null) {
            throw new NullPointerException("displaying the message with both caption and text being null");
        }

        TrayIconPeer peer = this.peer;
        if (peer != null) {
            peer.displayMessage(caption, text, messageType.name());
        }
!!!6377346.java!!!	getSize() : Dimension
        return SystemTray.getSystemTray().getTrayIconSize();
!!!6377474.java!!!	addNotify() : void
        synchronized (this) {
            if (peer == null) {
                Toolkit toolkit = Toolkit.getDefaultToolkit();
                if (toolkit instanceof SunToolkit) {
                    peer = ((SunToolkit)Toolkit.getDefaultToolkit()).createTrayIcon(this);
                } else if (toolkit instanceof HeadlessToolkit) {
                    peer = ((HeadlessToolkit)Toolkit.getDefaultToolkit()).createTrayIcon(this);
                }
            }
        }
        peer.setToolTip(tooltip);
!!!6377602.java!!!	removeNotify() : void
        TrayIconPeer p = null;
        synchronized (this) {
            p = peer;
            peer = null;
        }
        if (p != null) {
            p.dispose();
        }
!!!6377730.java!!!	setID(in id : int) : void
        this.id = id;
!!!6377858.java!!!	getID() : int
        return id;
!!!6377986.java!!!	dispatchEvent(inout e : AWTEvent) : void
        EventQueue.setCurrentEventAndMostRecentTime(e);
        Toolkit.getDefaultToolkit().notifyAWTEventListeners(e);
        processEvent(e);
!!!6378114.java!!!	processEvent(inout e : AWTEvent) : void
        if (e instanceof MouseEvent) {
            switch(e.getID()) {
            case MouseEvent.MOUSE_PRESSED:
            case MouseEvent.MOUSE_RELEASED:
            case MouseEvent.MOUSE_CLICKED:
                processMouseEvent((MouseEvent)e);
                break;
            case MouseEvent.MOUSE_MOVED:
                processMouseMotionEvent((MouseEvent)e);
                break;
            default:
                return;
            }
        } else if (e instanceof ActionEvent) {
            processActionEvent((ActionEvent)e);
        }
!!!6378242.java!!!	processMouseEvent(inout e : MouseEvent) : void
        MouseListener listener = mouseListener;

        if (listener != null) {
            int id = e.getID();
            switch(id) {
            case MouseEvent.MOUSE_PRESSED:
                listener.mousePressed(e);
                break;
            case MouseEvent.MOUSE_RELEASED:
                listener.mouseReleased(e);
                break;
            case MouseEvent.MOUSE_CLICKED:
                listener.mouseClicked(e);
                break;
            default:
                return;
            }
        }
!!!6378370.java!!!	processMouseMotionEvent(inout e : MouseEvent) : void
        MouseMotionListener listener = mouseMotionListener;
        if (listener != null &&
            e.getID() == MouseEvent.MOUSE_MOVED)
        {
            listener.mouseMoved(e);
        }
!!!6378498.java!!!	processActionEvent(inout e : ActionEvent) : void
        ActionListener listener = actionListener;
        if (listener != null) {
            listener.actionPerformed(e);
        }
