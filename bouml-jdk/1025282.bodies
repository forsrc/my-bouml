class Signer
!!!8014210.java!!!	Signer()
        super();
!!!8014338.java!!!	Signer(inout name : String)
        super(name);
!!!8014466.java!!!	Signer(inout name : String, inout scope : IdentityScope)
        super(name, scope);
!!!8014594.java!!!	getPrivateKey() : PrivateKey
        check("getSignerPrivateKey");
        return privateKey;
!!!8014722.java!!!	setKeyPair(inout pair : KeyPair) : void
        check("setSignerKeyPair");
        final PublicKey pub = pair.getPublic();
        PrivateKey priv = pair.getPrivate();

        if (pub == null || priv == null) {
            throw new InvalidParameterException();
        }
        try {
            AccessController.doPrivileged(
                new PrivilegedExceptionAction<Void>() {
                public Void run() throws KeyManagementException {
                    setPublicKey(pub);
                    return null;
                }
            });
        } catch (PrivilegedActionException pae) {
            throw (KeyManagementException) pae.getException();
        }
        privateKey = priv;
!!!8014850.java!!!	printKeys() : String
        String keys = "";
        PublicKey publicKey = getPublicKey();
        if (publicKey != null && privateKey != null) {
            keys = "\tpublic and private keys initialized";

        } else {
            keys = "\tno keys";
        }
        return keys;
!!!8014978.java!!!	toString() : String
        return "[Signer]" + super.toString();
!!!8015106.java!!!	check(inout directive : String) : void
        SecurityManager security = System.getSecurityManager();
        if (security != null) {
            security.checkSecurityAccess(directive);
        }
