class MultiSplitPaneUI
!!!11181954.java!!!	getUIs() : ComponentUI
        return MultiLookAndFeel.uisToArray(uis);
!!!11182082.java!!!	resetToPreferredSizes(inout a : JSplitPane) : void
        for (int i = 0; i < uis.size(); i++) {
            ((SplitPaneUI) (uis.elementAt(i))).resetToPreferredSizes(a);
        }
!!!11182210.java!!!	setDividerLocation(inout a : JSplitPane, in b : int) : void
        for (int i = 0; i < uis.size(); i++) {
            ((SplitPaneUI) (uis.elementAt(i))).setDividerLocation(a,b);
        }
!!!11182338.java!!!	getDividerLocation(inout a : JSplitPane) : int
        int returnValue =
            ((SplitPaneUI) (uis.elementAt(0))).getDividerLocation(a);
        for (int i = 1; i < uis.size(); i++) {
            ((SplitPaneUI) (uis.elementAt(i))).getDividerLocation(a);
        }
        return returnValue;
!!!11182466.java!!!	getMinimumDividerLocation(inout a : JSplitPane) : int
        int returnValue =
            ((SplitPaneUI) (uis.elementAt(0))).getMinimumDividerLocation(a);
        for (int i = 1; i < uis.size(); i++) {
            ((SplitPaneUI) (uis.elementAt(i))).getMinimumDividerLocation(a);
        }
        return returnValue;
!!!11182594.java!!!	getMaximumDividerLocation(inout a : JSplitPane) : int
        int returnValue =
            ((SplitPaneUI) (uis.elementAt(0))).getMaximumDividerLocation(a);
        for (int i = 1; i < uis.size(); i++) {
            ((SplitPaneUI) (uis.elementAt(i))).getMaximumDividerLocation(a);
        }
        return returnValue;
!!!11182722.java!!!	finishedPaintingChildren(inout a : JSplitPane, inout b : Graphics) : void
        for (int i = 0; i < uis.size(); i++) {
            ((SplitPaneUI) (uis.elementAt(i))).finishedPaintingChildren(a,b);
        }
!!!11182850.java!!!	contains(inout a : JComponent, in b : int, in c : int) : boolean
        boolean returnValue =
            ((ComponentUI) (uis.elementAt(0))).contains(a,b,c);
        for (int i = 1; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).contains(a,b,c);
        }
        return returnValue;
!!!11182978.java!!!	update(inout a : Graphics, inout b : JComponent) : void
        for (int i = 0; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).update(a,b);
        }
!!!11183106.java!!!	createUI(inout a : JComponent) : ComponentUI
        ComponentUI mui = new MultiSplitPaneUI();
        return MultiLookAndFeel.createUIs(mui,
                                          ((MultiSplitPaneUI) mui).uis,
                                          a);
!!!11183234.java!!!	installUI(inout a : JComponent) : void
        for (int i = 0; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).installUI(a);
        }
!!!11183362.java!!!	uninstallUI(inout a : JComponent) : void
        for (int i = 0; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).uninstallUI(a);
        }
!!!11183490.java!!!	paint(inout a : Graphics, inout b : JComponent) : void
        for (int i = 0; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).paint(a,b);
        }
!!!11183618.java!!!	getPreferredSize(inout a : JComponent) : Dimension
        Dimension returnValue =
            ((ComponentUI) (uis.elementAt(0))).getPreferredSize(a);
        for (int i = 1; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).getPreferredSize(a);
        }
        return returnValue;
!!!11183746.java!!!	getMinimumSize(inout a : JComponent) : Dimension
        Dimension returnValue =
            ((ComponentUI) (uis.elementAt(0))).getMinimumSize(a);
        for (int i = 1; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).getMinimumSize(a);
        }
        return returnValue;
!!!11183874.java!!!	getMaximumSize(inout a : JComponent) : Dimension
        Dimension returnValue =
            ((ComponentUI) (uis.elementAt(0))).getMaximumSize(a);
        for (int i = 1; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).getMaximumSize(a);
        }
        return returnValue;
!!!11184002.java!!!	getAccessibleChildrenCount(inout a : JComponent) : int
        int returnValue =
            ((ComponentUI) (uis.elementAt(0))).getAccessibleChildrenCount(a);
        for (int i = 1; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).getAccessibleChildrenCount(a);
        }
        return returnValue;
!!!11184130.java!!!	getAccessibleChild(inout a : JComponent, in b : int) : Accessible
        Accessible returnValue =
            ((ComponentUI) (uis.elementAt(0))).getAccessibleChild(a,b);
        for (int i = 1; i < uis.size(); i++) {
            ((ComponentUI) (uis.elementAt(i))).getAccessibleChild(a,b);
        }
        return returnValue;
