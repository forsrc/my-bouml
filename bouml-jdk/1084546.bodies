class Values
!!!8819842.java!!!	iterator() : Iterator
            return new ValueIterator();
!!!8819970.java!!!	size() : int
            return size;
!!!8820098.java!!!	contains(inout o : Object) : boolean
            return containsValue(o);
!!!8820226.java!!!	remove(inout o : Object) : boolean
            for (Iterator<V> i = iterator(); i.hasNext(); ) {
                if (i.next() == o) {
                    i.remove();
                    return true;
                }
            }
            return false;
!!!8820354.java!!!	clear() : void
            IdentityHashMap.this.clear();
!!!8820482.java!!!	toArray() : Object
            return toArray(new Object[0]);
!!!8820610.java!!!	toArray(inout a : T [[]]) : T
            int expectedModCount = modCount;
            int size = size();
            if (a.length < size)
                a = (T[]) Array.newInstance(a.getClass().getComponentType(), size);
            Object[] tab = table;
            int ti = 0;
            for (int si = 0; si < tab.length; si += 2) {
                if (tab[si] != null) { // key present ?
                    // more elements than expected -> concurrent modification from other thread
                    if (ti >= size) {
                        throw new ConcurrentModificationException();
                    }
                    a[ti++] = (T) tab[si+1]; // copy value
                }
            }
            // fewer elements than expected or concurrent modification from other thread detected
            if (ti < size || expectedModCount != modCount) {
                throw new ConcurrentModificationException();
            }
            // final null marker as per spec
            if (ti < a.length) {
                a[ti] = null;
            }
            return a;
!!!8820738.java!!!	spliterator() : Spliterator
            return new ValueSpliterator<>(IdentityHashMap.this, 0, -1, 0, 0);
