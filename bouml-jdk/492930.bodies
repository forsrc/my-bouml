class CompositeBuilderViaFrom
!!!2950914.java!!!	CompositeBuilderViaFrom(inout targetClass : Class, inout itemNames : String [[]])
            super(targetClass, itemNames);
!!!2951042.java!!!	applicable(inout getters : Method [[]]) : String
            // See if it has a method "T from(CompositeData)"
            // as is conventional for a CompositeDataView
            Class<?> targetClass = getTargetClass();
            try {
                Method fromMethod =
                    targetClass.getMethod("from", CompositeData.class);

                if (!Modifier.isStatic(fromMethod.getModifiers())) {
                    final String msg =
                        "Method from(CompositeData) is not static";
                    throw new InvalidObjectException(msg);
                }

                if (fromMethod.getReturnType() != getTargetClass()) {
                    final String msg =
                        "Method from(CompositeData) returns " +
                        typeName(fromMethod.getReturnType()) +
                        " not " + typeName(targetClass);
                    throw new InvalidObjectException(msg);
                }

                this.fromMethod = fromMethod;
                return null; // success!
            } catch (InvalidObjectException e) {
                throw e;
            } catch (Exception e) {
                // OK: it doesn't have the method
                return "no method from(CompositeData)";
            }
!!!2951170.java!!!	fromCompositeData(inout cd : CompositeData, inout itemNames : String [[]], inout converters : MXBeanMapping [[]]) : Object
            try {
                return MethodUtil.invoke(fromMethod, null, new Object[] {cd});
            } catch (Exception e) {
                final String msg = "Failed to invoke from(CompositeData)";
                throw invalidObjectException(msg, e);
            }
