class CalendarFormatter
!!!11957122.java!!!	doFormat(inout format : String, inout cal : Calendar) : String
            int fidx = 0;
            int flen = format.length();
            StringBuilder buf = new StringBuilder();

            while (fidx < flen) {
                char fch = format.charAt(fidx++);

                if (fch != '%') {  // not a meta character
                    buf.append(fch);
                    continue;
                }

                // seen meta character. we don't do error check against the format
                switch (format.charAt(fidx++)) {
                    case 'Y': // year
                        formatYear(cal, buf);
                        break;

                    case 'M': // month
                        formatMonth(cal, buf);
                        break;

                    case 'D': // days
                        formatDays(cal, buf);
                        break;

                    case 'h': // hours
                        formatHours(cal, buf);
                        break;

                    case 'm': // minutes
                        formatMinutes(cal, buf);
                        break;

                    case 's': // parse seconds.
                        formatSeconds(cal, buf);
                        break;

                    case 'z': // time zone
                        formatTimeZone(cal, buf);
                        break;

                    default:
                        // illegal meta character. impossible.
                        throw new InternalError();
                }
            }

            return buf.toString();
!!!11957250.java!!!	formatYear(inout cal : Calendar, inout buf : StringBuilder) : void
            int year = cal.get(Calendar.YEAR);

            String s;
            if (year <= 0) // negative value
            {
                s = Integer.toString(1 - year);
            } else // positive value
            {
                s = Integer.toString(year);
            }

            while (s.length() < 4) {
                s = '0' + s;
            }
            if (year <= 0) {
                s = '-' + s;
            }

            buf.append(s);
!!!11957378.java!!!	formatMonth(inout cal : Calendar, inout buf : StringBuilder) : void
            formatTwoDigits(cal.get(Calendar.MONTH) + 1, buf);
!!!11957506.java!!!	formatDays(inout cal : Calendar, inout buf : StringBuilder) : void
            formatTwoDigits(cal.get(Calendar.DAY_OF_MONTH), buf);
!!!11957634.java!!!	formatHours(inout cal : Calendar, inout buf : StringBuilder) : void
            formatTwoDigits(cal.get(Calendar.HOUR_OF_DAY), buf);
!!!11957762.java!!!	formatMinutes(inout cal : Calendar, inout buf : StringBuilder) : void
            formatTwoDigits(cal.get(Calendar.MINUTE), buf);
!!!11957890.java!!!	formatSeconds(inout cal : Calendar, inout buf : StringBuilder) : void
            formatTwoDigits(cal.get(Calendar.SECOND), buf);
            if (cal.isSet(Calendar.MILLISECOND)) { // milliseconds
                int n = cal.get(Calendar.MILLISECOND);
                if (n != 0) {
                    String ms = Integer.toString(n);
                    while (ms.length() < 3) {
                        ms = '0' + ms; // left 0 paddings.
                    }
                    buf.append('.');
                    buf.append(ms);
                }
            }
!!!11958018.java!!!	formatTimeZone(inout cal : Calendar, inout buf : StringBuilder) : void
            TimeZone tz = cal.getTimeZone();

            if (tz == null) {
                return;
            }

            // otherwise print out normally.
            int offset = tz.getOffset(cal.getTime().getTime());

            if (offset == 0) {
                buf.append('Z');
                return;
            }

            if (offset >= 0) {
                buf.append('+');
            } else {
                buf.append('-');
                offset *= -1;
            }

            offset /= 60 * 1000; // offset is in milli-seconds

            formatTwoDigits(offset / 60, buf);
            buf.append(':');
            formatTwoDigits(offset % 60, buf);
!!!11958146.java!!!	formatTwoDigits(in n : int, inout buf : StringBuilder) : void
            // n is always non-negative.
            if (n < 10) {
                buf.append('0');
            }
            buf.append(n);
