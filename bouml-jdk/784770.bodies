class OutputFormat
!!!5536770.java!!!	OutputFormat(inout method : String, inout encoding : String, inout indenting : boolean)
        setMethod( method );
        setEncoding( encoding );
        setIndenting( indenting );
!!!5536898.java!!!	OutputFormat(inout doc : Document)
        setMethod( whichMethod( doc ) );
        setDoctype( whichDoctypePublic( doc ), whichDoctypeSystem( doc ) );
        setMediaType( whichMediaType( getMethod() ) );
!!!5537026.java!!!	OutputFormat(inout doc : Document, inout encoding : String, inout indenting : boolean)
        this( doc );
        setEncoding( encoding );
        setIndenting( indenting );
!!!5537154.java!!!	getMethod() : String
        return _method;
!!!5537282.java!!!	setMethod(inout method : String) : void
        _method = method;
!!!5537410.java!!!	getVersion() : String
        return _version;
!!!5537538.java!!!	setVersion(inout version : String) : void
        _version = version;
!!!5537666.java!!!	getIndent() : int
        return _indent;
!!!5537794.java!!!	getIndenting() : boolean
        return ( _indent > 0 );
!!!5537922.java!!!	setIndent(in indent : int) : void
        if ( indent < 0 )
            _indent = 0;
        else
            _indent = indent;
!!!5538050.java!!!	setIndenting(inout on : boolean) : void
        if ( on ) {
            _indent = Defaults.Indent;
            _lineWidth = Defaults.LineWidth;
        } else {
            _indent = 0;
            _lineWidth = 0;
        }
!!!5538178.java!!!	getEncoding() : String
        return _encoding;
!!!5538306.java!!!	setEncoding(inout encoding : String) : void
        _encoding = encoding;
        _encodingInfo = null;
!!!5538434.java!!!	setEncoding(inout encInfo : EncodingInfo) : void
        _encoding = encInfo.getIANAName();
        _encodingInfo = encInfo;
!!!5538562.java!!!	getEncodingInfo() : EncodingInfo
        if (_encodingInfo == null)
            _encodingInfo = Encodings.getEncodingInfo(_encoding, _allowJavaNames);
        return _encodingInfo;
!!!5538690.java!!!	setAllowJavaNames(inout allow : boolean) : void
        _allowJavaNames = allow;
!!!5538818.java!!!	setAllowJavaNames() : boolean
        return _allowJavaNames;
!!!5538946.java!!!	getMediaType() : String
        return _mediaType;
!!!5539074.java!!!	setMediaType(inout mediaType : String) : void
        _mediaType = mediaType;
!!!5539202.java!!!	setDoctype(inout publicId : String, inout systemId : String) : void
        _doctypePublic = publicId;
        _doctypeSystem = systemId;
!!!5539330.java!!!	getDoctypePublic() : String
        return _doctypePublic;
!!!5539458.java!!!	getDoctypeSystem() : String
        return _doctypeSystem;
!!!5539586.java!!!	getOmitComments() : boolean
        return _omitComments;
!!!5539714.java!!!	setOmitComments(inout omit : boolean) : void
        _omitComments = omit;
!!!5539842.java!!!	getOmitDocumentType() : boolean
        return _omitDoctype;
!!!5539970.java!!!	setOmitDocumentType(inout omit : boolean) : void
        _omitDoctype = omit;
!!!5540098.java!!!	getOmitXMLDeclaration() : boolean
        return _omitXmlDeclaration;
!!!5540226.java!!!	setOmitXMLDeclaration(inout omit : boolean) : void
        _omitXmlDeclaration = omit;
!!!5540354.java!!!	getStandalone() : boolean
        return _standalone;
!!!5540482.java!!!	setStandalone(inout standalone : boolean) : void
        _standalone = standalone;
!!!5540610.java!!!	getCDataElements() : String
        return _cdataElements;
!!!5540738.java!!!	isCDataElement(inout tagName : String) : boolean
        int i;

        if ( _cdataElements == null )
            return false;
        for ( i = 0 ; i < _cdataElements.length ; ++i )
            if ( _cdataElements[ i ].equals( tagName ) )
                return true;
        return false;
!!!5540866.java!!!	setCDataElements(inout cdataElements : String [[]]) : void
        _cdataElements = cdataElements;
!!!5540994.java!!!	getNonEscapingElements() : String
        return _nonEscapingElements;
!!!5541122.java!!!	isNonEscapingElement(inout tagName : String) : boolean
        int i;

        if ( _nonEscapingElements == null ) {
            return false;
        }
        for ( i = 0 ; i < _nonEscapingElements.length ; ++i )
            if ( _nonEscapingElements[ i ].equals( tagName ) )
                return true;
        return false;
!!!5541250.java!!!	setNonEscapingElements(inout nonEscapingElements : String [[]]) : void
        _nonEscapingElements = nonEscapingElements;
!!!5541378.java!!!	getLineSeparator() : String
        return _lineSeparator;
!!!5541506.java!!!	setLineSeparator(inout lineSeparator : String) : void
        if ( lineSeparator == null )
            _lineSeparator =  LineSeparator.Web;
        else
            _lineSeparator = lineSeparator;
!!!5541634.java!!!	getPreserveSpace() : boolean
        return _preserve;
!!!5541762.java!!!	setPreserveSpace(inout preserve : boolean) : void
        _preserve = preserve;
!!!5541890.java!!!	getLineWidth() : int
        return _lineWidth;
!!!5542018.java!!!	setLineWidth(in lineWidth : int) : void
        if ( lineWidth <= 0 )
            _lineWidth = 0;
        else
            _lineWidth = lineWidth;
!!!5542146.java!!!	getPreserveEmptyAttributes() : boolean
          return _preserveEmptyAttributes;
!!!5542274.java!!!	setPreserveEmptyAttributes(inout preserve : boolean) : void
             _preserveEmptyAttributes = preserve;
!!!5542402.java!!!	getLastPrintable() : char
        if ( getEncoding() != null &&
             ( getEncoding().equalsIgnoreCase( "ASCII" ) ) )
            return 0xFF;
        else
            return 0xFFFF;
!!!5542530.java!!!	whichMethod(inout doc : Document) : String
        Node    node;
        String  value;
        int     i;

        // If document is derived from HTMLDocument then the default
        // method is html.
        if ( doc instanceof HTMLDocument )
            return Method.HTML;

        // Lookup the root element and the text nodes preceding it.
        // If root element is html and all text nodes contain whitespace
        // only, the method is html.

        // FIXME (SM) should we care about namespaces here?

        node = doc.getFirstChild();
        while (node != null) {
            // If the root element is html, the method is html.
            if ( node.getNodeType() == Node.ELEMENT_NODE ) {
                if ( node.getNodeName().equalsIgnoreCase( "html" ) ) {
                    return Method.HTML;
                } else if ( node.getNodeName().equalsIgnoreCase( "root" ) ) {
                    return Method.FOP;
                } else {
                    return Method.XML;
                }
            } else if ( node.getNodeType() == Node.TEXT_NODE ) {
                // If a text node preceding the root element contains
                // only whitespace, this might be html, otherwise it's
                // definitely xml.
                value = node.getNodeValue();
                for ( i = 0 ; i < value.length() ; ++i )
                    if ( value.charAt( i ) != 0x20 && value.charAt( i ) != 0x0A &&
                         value.charAt( i ) != 0x09 && value.charAt( i ) != 0x0D )
                        return Method.XML;
            }
            node = node.getNextSibling();
        }
        // Anything else, the method is xml.
        return Method.XML;
!!!5542658.java!!!	whichDoctypePublic(inout doc : Document) : String
        DocumentType doctype;

           /*  DOM Level 2 was introduced into the code base*/
           doctype = doc.getDoctype();
           if ( doctype != null ) {
           // Note on catch: DOM Level 1 does not specify this method
           // and the code will throw a NoSuchMethodError
           try {
           return doctype.getPublicId();
           } catch ( Error except ) {  }
           }

        if ( doc instanceof HTMLDocument )
            return DTD.XHTMLPublicId;
        return null;
!!!5542786.java!!!	whichDoctypeSystem(inout doc : Document) : String
        DocumentType doctype;

        /* DOM Level 2 was introduced into the code base*/
           doctype = doc.getDoctype();
           if ( doctype != null ) {
           // Note on catch: DOM Level 1 does not specify this method
           // and the code will throw a NoSuchMethodError
           try {
           return doctype.getSystemId();
           } catch ( Error except ) { }
           }

        if ( doc instanceof HTMLDocument )
            return DTD.XHTMLSystemId;
        return null;
!!!5542914.java!!!	whichMediaType(inout method : String) : String
        if ( method.equalsIgnoreCase( Method.XML ) )
            return "text/xml";
        if ( method.equalsIgnoreCase( Method.HTML ) )
            return "text/html";
        if ( method.equalsIgnoreCase( Method.XHTML ) )
            return "text/html";
        if ( method.equalsIgnoreCase( Method.TEXT ) )
            return "text/plain";
        if ( method.equalsIgnoreCase( Method.FOP ) )
            return "application/pdf";
        return null;
