class HashAttributeSet
!!!10125826.java!!!	writeObject(inout s : ObjectOutputStream) : void

        s.defaultWriteObject();
        Attribute [] attrs = toArray();
        s.writeInt(attrs.length);
        for (int i = 0; i < attrs.length; i++) {
            s.writeObject(attrs[i]);
        }
!!!10125954.java!!!	readObject(inout s : ObjectInputStream) : void

        s.defaultReadObject();
        attrMap = new HashMap();
        int count = s.readInt();
        Attribute attr;
        for (int i = 0; i < count; i++) {
            attr = (Attribute)s.readObject();
            add(attr);
        }
!!!10126082.java!!!	HashAttributeSet()
        this(Attribute.class);
!!!10126210.java!!!	HashAttributeSet(inout attribute : Attribute)
        this (attribute, Attribute.class);
!!!10126338.java!!!	HashAttributeSet(inout attributes : Attribute [[]])
        this (attributes, Attribute.class);
!!!10126466.java!!!	HashAttributeSet(inout attributes : AttributeSet)
        this (attributes, Attribute.class);
!!!10126594.java!!!	HashAttributeSet(inout interfaceName : Class)
        if (interfaceName == null) {
            throw new NullPointerException("null interface");
        }
        myInterface = interfaceName;
!!!10126722.java!!!	HashAttributeSet(inout attribute : Attribute, inout interfaceName : Class)
        if (interfaceName == null) {
            throw new NullPointerException("null interface");
        }
        myInterface = interfaceName;
        add (attribute);
!!!10126850.java!!!	HashAttributeSet(inout attributes : Attribute [[]], inout interfaceName : Class)
        if (interfaceName == null) {
            throw new NullPointerException("null interface");
        }
        myInterface = interfaceName;
        int n = attributes == null ? 0 : attributes.length;
        for (int i = 0; i < n; ++ i) {
            add (attributes[i]);
        }
!!!10126978.java!!!	HashAttributeSet(inout attributes : AttributeSet, inout interfaceName : Class)
      myInterface = interfaceName;
      if (attributes != null) {
        Attribute[] attribArray = attributes.toArray();
        int n = attribArray == null ? 0 : attribArray.length;
        for (int i = 0; i < n; ++ i) {
          add (attribArray[i]);
        }
      }
!!!10127106.java!!!	get(inout category : Class) : Attribute
        return (Attribute)
            attrMap.get(AttributeSetUtilities.
                        verifyAttributeCategory(category,
                                                Attribute.class));
!!!10127234.java!!!	add(inout attribute : Attribute) : boolean
        Object oldAttribute =
            attrMap.put(attribute.getCategory(),
                        AttributeSetUtilities.
                        verifyAttributeValue(attribute, myInterface));
        return (!attribute.equals(oldAttribute));
!!!10127362.java!!!	remove(inout category : Class) : boolean
        return
            category != null &&
            AttributeSetUtilities.
            verifyAttributeCategory(category, Attribute.class) != null &&
            attrMap.remove(category) != null;
!!!10127490.java!!!	remove(inout attribute : Attribute) : boolean
        return
            attribute != null &&
            attrMap.remove(attribute.getCategory()) != null;
!!!10127618.java!!!	containsKey(inout category : Class) : boolean
        return
            category != null &&
            AttributeSetUtilities.
            verifyAttributeCategory(category, Attribute.class) != null &&
            attrMap.get(category) != null;
!!!10127746.java!!!	containsValue(inout attribute : Attribute) : boolean
        return
           attribute != null &&
           attribute instanceof Attribute &&
           attribute.equals(attrMap.get(((Attribute)attribute).getCategory()));
!!!10127874.java!!!	addAll(inout attributes : AttributeSet) : boolean

        Attribute []attrs = attributes.toArray();
        boolean result = false;
        for (int i=0; i<attrs.length; i++) {
            Attribute newValue =
                AttributeSetUtilities.verifyAttributeValue(attrs[i],
                                                           myInterface);
            Object oldValue = attrMap.put(newValue.getCategory(), newValue);
            result = (! newValue.equals(oldValue)) || result;
        }
        return result;
!!!10128002.java!!!	size() : int
        return attrMap.size();
!!!10128130.java!!!	toArray() : Attribute
        Attribute []attrs = new Attribute[size()];
        attrMap.values().toArray(attrs);
        return attrs;
!!!10128258.java!!!	clear() : void
        attrMap.clear();
!!!10128386.java!!!	isEmpty() : boolean
        return attrMap.isEmpty();
!!!10128514.java!!!	equals(inout object : Object) : boolean
        if (object == null || !(object instanceof AttributeSet)) {
            return false;
        }

        AttributeSet aset = (AttributeSet)object;
        if (aset.size() != size()) {
            return false;
        }

        Attribute[] attrs = toArray();
        for (int i=0;i<attrs.length; i++) {
            if (!aset.containsValue(attrs[i])) {
                return false;
            }
        }
        return true;
!!!10128642.java!!!	hashCode() : int
        int hcode = 0;
        Attribute[] attrs = toArray();
        for (int i=0;i<attrs.length; i++) {
            hcode += attrs[i].hashCode();
        }
        return hcode;
