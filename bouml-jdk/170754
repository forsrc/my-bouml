format 222
"traversers" // jdk1.8::com::sun::org::apache::xerces::internal::impl::xs::traversers
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/impl/xs/traversers/"
  java_package "com.sun.org.apache.xerces.internal.impl.xs.traversers"
  classview 164098 "traversers"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 704130 "XSDHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The purpose of this class is to co-ordinate the construction of a
grammar object corresponding to a schema.  To do this, it must be
prepared to parse several schema documents (for instance if the
schema document originally referred to contains <include> or
<redefined> information items).  If any of the schemas imports a
schema, other grammars may be constructed as a side-effect.

@xerces.internal

@author Neil Graham, IBM
@author Pavani Mukthipudi, Sun Microsystems

@version $Id: XSDHandler.java,v 1.9 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2060546 // VALIDATION (<unidirectional association>)
	relation 2060546 --->
	  a role_name "VALIDATION" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.VALIDATION_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: validation. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060546 // VALIDATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2060674 // XMLSCHEMA_VALIDATION (<unidirectional association>)
	relation 2060674 --->
	  a role_name "XMLSCHEMA_VALIDATION" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.SCHEMA_VALIDATION_FEATURE" class_relation const_relation protected
	    comment " feature identifier: XML Schema validation 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060674 // XMLSCHEMA_VALIDATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2060802 // ALLOW_JAVA_ENCODINGS (<unidirectional association>)
	relation 2060802 --->
	  a role_name "ALLOW_JAVA_ENCODINGS" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.ALLOW_JAVA_ENCODINGS_FEATURE" class_relation const_relation protected
	    comment " Feature identifier:  allow java encodings 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060802 // ALLOW_JAVA_ENCODINGS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2060930 // CONTINUE_AFTER_FATAL_ERROR (<unidirectional association>)
	relation 2060930 --->
	  a role_name "CONTINUE_AFTER_FATAL_ERROR" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.CONTINUE_AFTER_FATAL_ERROR_FEATURE" class_relation const_relation protected
	    comment " Feature identifier:  continue after fatal error 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060930 // CONTINUE_AFTER_FATAL_ERROR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061058 // STANDARD_URI_CONFORMANT_FEATURE (<unidirectional association>)
	relation 2061058 --->
	  a role_name "STANDARD_URI_CONFORMANT_FEATURE" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.STANDARD_URI_CONFORMANT_FEATURE" class_relation const_relation protected
	    comment " Feature identifier:  allow java encodings 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061058 // STANDARD_URI_CONFORMANT_FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061186 // DISALLOW_DOCTYPE (<unidirectional association>)
	relation 2061186 --->
	  a role_name "DISALLOW_DOCTYPE" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.DISALLOW_DOCTYPE_DECL_FEATURE" class_relation const_relation protected
	    comment " Feature: disallow doctype
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061186 // DISALLOW_DOCTYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061314 // GENERATE_SYNTHETIC_ANNOTATIONS (<unidirectional association>)
	relation 2061314 --->
	  a role_name "GENERATE_SYNTHETIC_ANNOTATIONS" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.GENERATE_SYNTHETIC_ANNOTATIONS_FEATURE" class_relation const_relation protected
	    comment " Feature: generate synthetic annotations 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061314 // GENERATE_SYNTHETIC_ANNOTATIONS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061442 // VALIDATE_ANNOTATIONS (<unidirectional association>)
	relation 2061442 --->
	  a role_name "VALIDATE_ANNOTATIONS" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.VALIDATE_ANNOTATIONS_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: validate annotations. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061442 // VALIDATE_ANNOTATIONS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061570 // HONOUR_ALL_SCHEMALOCATIONS (<unidirectional association>)
	relation 2061570 --->
	  a role_name "HONOUR_ALL_SCHEMALOCATIONS" init_value "
      Constants.XERCES_FEATURE_PREFIX + Constants.HONOUR_ALL_SCHEMALOCATIONS_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: honour all schemaLocations 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061570 // HONOUR_ALL_SCHEMALOCATIONS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061698 // NAMESPACE_GROWTH (<unidirectional association>)
	relation 2061698 --->
	  a role_name "NAMESPACE_GROWTH" init_value "
      Constants.XERCES_FEATURE_PREFIX + Constants.NAMESPACE_GROWTH_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: namespace growth 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061698 // NAMESPACE_GROWTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061826 // TOLERATE_DUPLICATES (<unidirectional association>)
	relation 2061826 --->
	  a role_name "TOLERATE_DUPLICATES" init_value "
      Constants.XERCES_FEATURE_PREFIX + Constants.TOLERATE_DUPLICATES_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: tolerate duplicates 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061826 // TOLERATE_DUPLICATES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2061954 // NAMESPACE_PREFIXES (<unidirectional association>)
	relation 2061954 --->
	  a role_name "NAMESPACE_PREFIXES" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.NAMESPACE_PREFIXES_FEATURE" class_relation const_relation private
	    comment " Feature identifier: namespace prefixes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061954 // NAMESPACE_PREFIXES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062082 // STRING_INTERNING (<unidirectional association>)
	relation 2062082 --->
	  a role_name "STRING_INTERNING" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.STRING_INTERNING_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: string interning. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062082 // STRING_INTERNING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062210 // ERROR_HANDLER (<unidirectional association>)
	relation 2062210 --->
	  a role_name "ERROR_HANDLER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_HANDLER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: error handler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062210 // ERROR_HANDLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062338 // JAXP_SCHEMA_SOURCE (<unidirectional association>)
	relation 2062338 --->
	  a role_name "JAXP_SCHEMA_SOURCE" init_value "
        Constants.JAXP_PROPERTY_PREFIX + Constants.SCHEMA_SOURCE" class_relation const_relation protected
	    comment " Property identifier: JAXP schema source. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062338 // JAXP_SCHEMA_SOURCE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062466 // ENTITY_RESOLVER (<unidirectional association>)
	relation 2062466 --->
	  a role_name "ENTITY_RESOLVER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_RESOLVER_PROPERTY" class_relation const_relation public
	    comment " Property identifier: entity resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062466 // ENTITY_RESOLVER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062594 // ENTITY_MANAGER (<unidirectional association>)
	relation 2062594 --->
	  a role_name "ENTITY_MANAGER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_MANAGER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: entity manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062594 // ENTITY_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062722 // ERROR_REPORTER (<unidirectional association>)
	relation 2062722 --->
	  a role_name "ERROR_REPORTER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_REPORTER_PROPERTY" class_relation const_relation public
	    comment " Property identifier: error reporter. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062722 // ERROR_REPORTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062850 // XMLGRAMMAR_POOL (<unidirectional association>)
	relation 2062850 --->
	  a role_name "XMLGRAMMAR_POOL" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.XMLGRAMMAR_POOL_PROPERTY" class_relation const_relation public
	    comment " Property identifier: grammar pool. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062850 // XMLGRAMMAR_POOL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2062978 // SYMBOL_TABLE (<unidirectional association>)
	relation 2062978 --->
	  a role_name "SYMBOL_TABLE" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.SYMBOL_TABLE_PROPERTY" class_relation const_relation public
	    comment " Property identifier: symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062978 // SYMBOL_TABLE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2063106 // SECURITY_MANAGER (<unidirectional association>)
	relation 2063106 --->
	  a role_name "SECURITY_MANAGER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.SECURITY_MANAGER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: security manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063106 // SECURITY_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2063234 // LOCALE (<unidirectional association>)
	relation 2063234 --->
	  a role_name "LOCALE" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.LOCALE_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: locale. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063234 // LOCALE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2063362 // XML_SECURITY_PROPERTY_MANAGER (<unidirectional association>)
	relation 2063362 --->
	  a role_name "XML_SECURITY_PROPERTY_MANAGER" init_value "
        Constants.XML_SECURITY_PROPERTY_MANAGER" class_relation const_relation private
	    comment " Property identifier: Security property manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063362 // XML_SECURITY_PROPERTY_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1079426 "DEBUG_NODE_POOL"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1079554 "ATTRIBUTE_TYPE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data
 different sorts of declarations; should make lookup and
 traverser calling more efficient/less bulky.
"
      end

      attribute 1079682 "ATTRIBUTEGROUP_TYPE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1079810 "ELEMENT_TYPE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1079938 "GROUP_TYPE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1080066 "IDENTITYCONSTRAINT_TYPE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1080194 "NOTATION_TYPE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1080322 "TYPEDECL_TYPE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2063490 // REDEF_IDENTIFIER (<unidirectional association>)
	relation 2063490 --->
	  a role_name "REDEF_IDENTIFIER" init_value " \"_fn3dktizrknc9pi\"" class_relation const_relation public
	    comment " this string gets appended to redefined names; it's purpose is to be
 as unlikely as possible to cause collisions.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063490 // REDEF_IDENTIFIER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2063618 // fDeclPool (<unidirectional association>)
	relation 2063618 --->
	  a role_name "fDeclPool" init_value " null" protected
	    comment "protected data that can be accessible by any traverser
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063618 // fDeclPool (<unidirectional association>)
	  b parent class_ref 684802 // XSDeclarationPool
      end

      classrelation 2063746 // fSecurityManager (<unidirectional association>)
	relation 2063746 --->
	  a role_name "fSecurityManager" init_value " null" protected
	    comment " the Security manager in effect.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063746 // fSecurityManager (<unidirectional association>)
	  b parent class_ref 666498 // XMLSecurityManager
      end

      classrelation 2063874 // fAccessExternalSchema (<unidirectional association>)
	relation 2063874 --->
	  a role_name "fAccessExternalSchema" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063874 // fAccessExternalSchema (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2064002 // fAccessExternalDTD (<unidirectional association>)
	relation 2064002 --->
	  a role_name "fAccessExternalDTD" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064002 // fAccessExternalDTD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1080450 "registryEmpty"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These tables correspond to the symbol spaces defined in the
 spec.
 They are keyed with a QName (that is, String(\"URI,localpart) and
 their values are nodes corresponding to the given name's decl.
 By asking the node for its ownerDocument and looking in
 XSDocumentInfoRegistry we can easily get the corresponding
 XSDocumentInfo object.
"
      end

      classrelation 2064130 // fUnparsedAttributeRegistry (<unidirectional association>)
	relation 2064130 --->
	  a role_name "fUnparsedAttributeRegistry" init_value " new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Element> ${name}${value};
"
	    classrelation_ref 2064130 // fUnparsedAttributeRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2064258 // fUnparsedAttributeGroupRegistry (<unidirectional association>)
	relation 2064258 --->
	  a role_name "fUnparsedAttributeGroupRegistry" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Element> ${name}${value};
"
	    classrelation_ref 2064258 // fUnparsedAttributeGroupRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2064386 // fUnparsedElementRegistry (<unidirectional association>)
	relation 2064386 --->
	  a role_name "fUnparsedElementRegistry" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Element> ${name}${value};
"
	    classrelation_ref 2064386 // fUnparsedElementRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2064514 // fUnparsedGroupRegistry (<unidirectional association>)
	relation 2064514 --->
	  a role_name "fUnparsedGroupRegistry" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Element> ${name}${value};
"
	    classrelation_ref 2064514 // fUnparsedGroupRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2064642 // fUnparsedIdentityConstraintRegistry (<unidirectional association>)
	relation 2064642 --->
	  a role_name "fUnparsedIdentityConstraintRegistry" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Element> ${name}${value};
"
	    classrelation_ref 2064642 // fUnparsedIdentityConstraintRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2064770 // fUnparsedNotationRegistry (<unidirectional association>)
	relation 2064770 --->
	  a role_name "fUnparsedNotationRegistry" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Element> ${name}${value};
"
	    classrelation_ref 2064770 // fUnparsedNotationRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2064898 // fUnparsedTypeRegistry (<unidirectional association>)
	relation 2064898 --->
	  a role_name "fUnparsedTypeRegistry" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Element> ${name}${value};
"
	    classrelation_ref 2064898 // fUnparsedTypeRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065026 // fUnparsedAttributeRegistrySub (<unidirectional association>)
	relation 2065026 --->
	  a role_name "fUnparsedAttributeRegistrySub" init_value "  new HashMap<>()" private
	    comment " Compensation for the above maps to locate XSDocumentInfo,
 Since we may take Schema Element directly, so can not get the
 corresponding XSDocumentInfo object just using above maps.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo> ${name}${value};
"
	    classrelation_ref 2065026 // fUnparsedAttributeRegistrySub (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065154 // fUnparsedAttributeGroupRegistrySub (<unidirectional association>)
	relation 2065154 --->
	  a role_name "fUnparsedAttributeGroupRegistrySub" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo> ${name}${value};
"
	    classrelation_ref 2065154 // fUnparsedAttributeGroupRegistrySub (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065282 // fUnparsedElementRegistrySub (<unidirectional association>)
	relation 2065282 --->
	  a role_name "fUnparsedElementRegistrySub" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo> ${name}${value};
"
	    classrelation_ref 2065282 // fUnparsedElementRegistrySub (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065410 // fUnparsedGroupRegistrySub (<unidirectional association>)
	relation 2065410 --->
	  a role_name "fUnparsedGroupRegistrySub" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo> ${name}${value};
"
	    classrelation_ref 2065410 // fUnparsedGroupRegistrySub (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065538 // fUnparsedIdentityConstraintRegistrySub (<unidirectional association>)
	relation 2065538 --->
	  a role_name "fUnparsedIdentityConstraintRegistrySub" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo> ${name}${value};
"
	    classrelation_ref 2065538 // fUnparsedIdentityConstraintRegistrySub (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065666 // fUnparsedNotationRegistrySub (<unidirectional association>)
	relation 2065666 --->
	  a role_name "fUnparsedNotationRegistrySub" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo> ${name}${value};
"
	    classrelation_ref 2065666 // fUnparsedNotationRegistrySub (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065794 // fUnparsedTypeRegistrySub (<unidirectional association>)
	relation 2065794 --->
	  a role_name "fUnparsedTypeRegistrySub" init_value "  new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo> ${name}${value};
"
	    classrelation_ref 2065794 // fUnparsedTypeRegistrySub (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2065922 // fUnparsedRegistriesExt (<unidirectional association>)
	relation 2065922 --->
	  a role_name "fUnparsedRegistriesExt" multiplicity "[]" init_value " new HashMap[] {
        null,
        null, // ATTRIBUTE_TYPE
        null, // ATTRIBUTEGROUP_TYPE
        null, // ELEMENT_TYPE
        null, // GROUP_TYPE
        null, // IDENTITYCONSTRAINT_TYPE
        null, // NOTATION_TYPE
        null, // TYPEDECL_TYPE
    }" private
	    comment " Stores XSDocumentInfo (keyed by component name), to check for duplicate
 components declared within the same xsd document
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XSDocumentInfo>${multiplicity} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 2065922 // fUnparsedRegistriesExt (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2066050 // fDependencyMap (<unidirectional association>)
	relation 2066050 --->
	  a role_name "fDependencyMap" init_value " new HashMap<>()" private
	    comment " this map is keyed on by XSDocumentInfo objects.  Its values
 are Vectors containing the XSDocumentInfo objects <include>d,
 <import>ed or <redefine>d by the key XSDocumentInfo.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<XSDocumentInfo, Vector<XSDocumentInfo>> ${name}${value};
"
	    classrelation_ref 2066050 // fDependencyMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2066178 // fImportMap (<unidirectional association>)
	relation 2066178 --->
	  a role_name "fImportMap" init_value " new HashMap<> ()" private
	    comment " this map is keyed on by a target namespace.  Its values
 are Vectors containing namespaces imported by schema documents
 with the key target namespace.
 if an imported schema has absent namespace, the value \"null\" is stored.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Vector> ${name}${value};
"
	    classrelation_ref 2066178 // fImportMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2066306 // fAllTNSs (<unidirectional association>)
	relation 2066306 --->
	  a role_name "fAllTNSs" init_value " new Vector<>()" private
	    comment " all namespaces that imports other namespaces
 if the importing schema has absent namespace, empty string is stored.
 (because the key of a map can't be null.)
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 2066306 // fAllTNSs (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2066434 // fLocationPairs (<unidirectional association>)
	relation 2066434 --->
	  a role_name "fLocationPairs" init_value " null" private
	    comment " stores instance document mappings between namespaces and schema hints
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XMLSchemaLoader.LocationArray> ${name}${value};
"
	    classrelation_ref 2066434 // fLocationPairs (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2066562 // fHiddenNodes (<unidirectional association>)
	relation 2066562 --->
	  a role_name "fHiddenNodes" init_value " null" package
	    comment " Records which nodes are hidden when the input is a DOMInputSource.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Node, String> ${name}${value};
"
	    classrelation_ref 2066562 // fHiddenNodes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 4813826 "null2EmptyString"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "ns" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " convenience methods"
      end

      operation 4813954 "emptyString2Null"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "ns" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4814082 "doc2SystemId"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "ele" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " use Schema Element to lookup the SystemId."
      end

      class 716418 "XSDKey"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2074242 // systemId (<unidirectional association>)
	  relation 2074242 --->
	    a role_name "systemId" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2074242 // systemId (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1082114 "referType"
	  package explicit_type "short"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2074370 // referNS (<unidirectional association>)
	  relation 2074370 --->
	    a role_name "referNS" package
	      comment " for inclue/redefine, this is the enclosing namespace
 for import/preparse/instance, this is the target namespace
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2074370 // referNS (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 4830722 "XSDKey"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "systemId" type class_ref 128130 // String
	    param in name "referType" explicit_type "short"
	    param inout name "referNS" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4830850 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4830978 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2066690 // fTraversed (<unidirectional association>)
	relation 2066690 --->
	  a role_name "fTraversed" init_value " new HashMap<>()" private
	    comment " This vector stores strings which are combinations of the
 publicId and systemId of the inputSource corresponding to a
 schema document.  This combination is used so that the user's
 EntityResolver can provide a consistent way of identifying a
 schema document that is included in multiple other schemas.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<XSDKey, Element> ${name}${value};
"
	    classrelation_ref 2066690 // fTraversed (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2066818 // fDoc2SystemId (<unidirectional association>)
	relation 2066818 --->
	  a role_name "fDoc2SystemId" init_value " new HashMap<>()" private
	    comment " this map contains a mapping from Schema Element to its systemId
 this is useful to resolve a uri relative to the referring document
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Element, String> ${name}${value};
"
	    classrelation_ref 2066818 // fDoc2SystemId (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2066946 // fRoot (<unidirectional association>)
	relation 2066946 --->
	  a role_name "fRoot" init_value " null" private
	    comment " the primary XSDocumentInfo we were called to parse
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2066946 // fRoot (<unidirectional association>)
	  b parent class_ref 714370 // XSDocumentInfo
      end

      classrelation 2067074 // fDoc2XSDocumentMap (<unidirectional association>)
	relation 2067074 --->
	  a role_name "fDoc2XSDocumentMap" init_value " new HashMap()" private
	    comment " This map's job is to act as a link between the Schema Element and its
 XSDocumentInfo object.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067074 // fDoc2XSDocumentMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2067202 // fRedefine2XSDMap (<unidirectional association>)
	relation 2067202 --->
	  a role_name "fRedefine2XSDMap" init_value " null" private
	    comment " map between <redefine> elements and the XSDocumentInfo
 objects that correspond to the documents being redefined.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067202 // fRedefine2XSDMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2067330 // fRedefine2NSSupport (<unidirectional association>)
	relation 2067330 --->
	  a role_name "fRedefine2NSSupport" init_value " null" private
	    comment " map between <redefine> elements and the namespace support
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067330 // fRedefine2NSSupport (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2067458 // fRedefinedRestrictedAttributeGroupRegistry (<unidirectional association>)
	relation 2067458 --->
	  a role_name "fRedefinedRestrictedAttributeGroupRegistry" init_value " new HashMap()" private
	    comment " these objects store a mapping between the names of redefining
 groups/attributeGroups and the groups/AttributeGroups which
 they redefine by restriction (implicitly).  It is up to the
 Group and AttributeGroup traversers to check these restrictions for
 validity.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067458 // fRedefinedRestrictedAttributeGroupRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2067586 // fRedefinedRestrictedGroupRegistry (<unidirectional association>)
	relation 2067586 --->
	  a role_name "fRedefinedRestrictedGroupRegistry" init_value " new HashMap()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067586 // fRedefinedRestrictedGroupRegistry (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 1080578 "fLastSchemaWasDuplicate"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " a variable storing whether the last schema document
 processed (by getSchema) was a duplicate.
"
      end

      attribute 1080706 "fValidateAnnotations"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " validate annotations feature
"
      end

      attribute 1080834 "fHonourAllSchemaLocations"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "handle multiple import feature
"
      end

      attribute 1080962 "fNamespaceGrowth"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "handle namespace growth feature
"
      end

      attribute 1081090 "fTolerateDuplicates"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " handle tolerate duplicates feature
"
      end

      classrelation 2067714 // fErrorReporter (<unidirectional association>)
	relation 2067714 --->
	  a role_name "fErrorReporter" private
	    comment " the XMLErrorReporter
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067714 // fErrorReporter (<unidirectional association>)
	  b parent class_ref 658946 // XMLErrorReporter
      end

      classrelation 2067842 // fErrorHandler (<unidirectional association>)
	relation 2067842 --->
	  a role_name "fErrorHandler" private
	    comment " the XMLErrorHandler
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067842 // fErrorHandler (<unidirectional association>)
	  b parent class_ref 657922 // XMLErrorHandler
      end

      classrelation 2067970 // fLocale (<unidirectional association>)
	relation 2067970 --->
	  a role_name "fLocale" private
	    comment " the Locale
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067970 // fLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 2068098 // fEntityManager (<unidirectional association>)
	relation 2068098 --->
	  a role_name "fEntityManager" private
	    comment " the XMLEntityManager
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068098 // fEntityManager (<unidirectional association>)
	  b parent class_ref 658434 // XMLEntityResolver
      end

      classrelation 2068226 // fAttributeChecker (<unidirectional association>)
	relation 2068226 --->
	  a role_name "fAttributeChecker" private
	    comment " the XSAttributeChecker
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068226 // fAttributeChecker (<unidirectional association>)
	  b parent class_ref 713986 // XSAttributeChecker
      end

      classrelation 2068354 // fSymbolTable (<unidirectional association>)
	relation 2068354 --->
	  a role_name "fSymbolTable" private
	    comment " the symbol table
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068354 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2068482 // fGrammarBucket (<unidirectional association>)
	relation 2068482 --->
	  a role_name "fGrammarBucket" private
	    comment " the GrammarResolver
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068482 // fGrammarBucket (<unidirectional association>)
	  b parent class_ref 703362 // XSGrammarBucket
      end

      classrelation 2068610 // fSchemaGrammarDescription (<unidirectional association>)
	relation 2068610 --->
	  a role_name "fSchemaGrammarDescription" private
	    comment " the Grammar description
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068610 // fSchemaGrammarDescription (<unidirectional association>)
	  b parent class_ref 699650 // XSDDescription
      end

      classrelation 2068738 // fGrammarPool (<unidirectional association>)
	relation 2068738 --->
	  a role_name "fGrammarPool" private
	    comment " the Grammar Pool
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068738 // fGrammarPool (<unidirectional association>)
	  b parent class_ref 662274 // XMLGrammarPool
      end

      classrelation 2068866 // fSecurityPropertyMgr (<unidirectional association>)
	relation 2068866 --->
	  a role_name "fSecurityPropertyMgr" init_value " null" private
	    comment " the security property manager
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068866 // fSecurityPropertyMgr (<unidirectional association>)
	  b parent class_ref 666626 // XMLSecurityPropertyManager
      end

      classrelation 2068994 // fAttributeGroupTraverser (<unidirectional association>)
	relation 2068994 --->
	  a role_name "fAttributeGroupTraverser" package
	    comment "************ Traversers **********
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2068994 // fAttributeGroupTraverser (<unidirectional association>)
	  b parent class_ref 715650 // XSDAttributeGroupTraverser
      end

      classrelation 2069122 // fAttributeTraverser (<unidirectional association>)
	relation 2069122 --->
	  a role_name "fAttributeTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2069122 // fAttributeTraverser (<unidirectional association>)
	  b parent class_ref 715778 // XSDAttributeTraverser
      end

      classrelation 2069250 // fComplexTypeTraverser (<unidirectional association>)
	relation 2069250 --->
	  a role_name "fComplexTypeTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2069250 // fComplexTypeTraverser (<unidirectional association>)
	  b parent class_ref 715906 // XSDComplexTypeTraverser
      end

      classrelation 2069378 // fElementTraverser (<unidirectional association>)
	relation 2069378 --->
	  a role_name "fElementTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2069378 // fElementTraverser (<unidirectional association>)
	  b parent class_ref 716162 // XSDElementTraverser
      end

      classrelation 2069506 // fGroupTraverser (<unidirectional association>)
	relation 2069506 --->
	  a role_name "fGroupTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2069506 // fGroupTraverser (<unidirectional association>)
	  b parent class_ref 716290 // XSDGroupTraverser
      end

      classrelation 2069634 // fKeyrefTraverser (<unidirectional association>)
	relation 2069634 --->
	  a role_name "fKeyrefTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2069634 // fKeyrefTraverser (<unidirectional association>)
	  b parent class_ref 716546 // XSDKeyrefTraverser
      end

      classrelation 2069762 // fNotationTraverser (<unidirectional association>)
	relation 2069762 --->
	  a role_name "fNotationTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2069762 // fNotationTraverser (<unidirectional association>)
	  b parent class_ref 716674 // XSDNotationTraverser
      end

      classrelation 2069890 // fSimpleTypeTraverser (<unidirectional association>)
	relation 2069890 --->
	  a role_name "fSimpleTypeTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2069890 // fSimpleTypeTraverser (<unidirectional association>)
	  b parent class_ref 716802 // XSDSimpleTypeTraverser
      end

      classrelation 2070018 // fUniqueOrKeyTraverser (<unidirectional association>)
	relation 2070018 --->
	  a role_name "fUniqueOrKeyTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070018 // fUniqueOrKeyTraverser (<unidirectional association>)
	  b parent class_ref 716930 // XSDUniqueOrKeyTraverser
      end

      classrelation 2070146 // fWildCardTraverser (<unidirectional association>)
	relation 2070146 --->
	  a role_name "fWildCardTraverser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070146 // fWildCardTraverser (<unidirectional association>)
	  b parent class_ref 717058 // XSDWildcardTraverser
      end

      classrelation 2070274 // fDVFactory (<unidirectional association>)
	relation 2070274 --->
	  a role_name "fDVFactory" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070274 // fDVFactory (<unidirectional association>)
	  b parent class_ref 679682 // SchemaDVFactory
      end

      classrelation 2070402 // fSchemaParser (<unidirectional association>)
	relation 2070402 --->
	  a role_name "fSchemaParser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070402 // fSchemaParser (<unidirectional association>)
	  b parent class_ref 712450 // SchemaDOMParser
      end

      classrelation 2070530 // fXSContentHandler (<unidirectional association>)
	relation 2070530 --->
	  a role_name "fXSContentHandler" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070530 // fXSContentHandler (<unidirectional association>)
	  b parent class_ref 713218 // SchemaContentHandler
      end

      classrelation 2070658 // fStAXSchemaParser (<unidirectional association>)
	relation 2070658 --->
	  a role_name "fStAXSchemaParser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070658 // fStAXSchemaParser (<unidirectional association>)
	  b parent class_ref 713474 // StAXSchemaParser
      end

      classrelation 2070786 // fAnnotationValidator (<unidirectional association>)
	relation 2070786 --->
	  a role_name "fAnnotationValidator" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070786 // fAnnotationValidator (<unidirectional association>)
	  b parent class_ref 717186 // XML11Configuration
      end

      class 717314 "XSAnnotationGrammarPool"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2073858 // <realization>
	  relation 2073858 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2073858 // <realization>
	    b parent class_ref 662274 // XMLGrammarPool
	end

	classrelation 2073986 // fGrammarBucket (<unidirectional association>)
	  relation 2073986 --->
	    a role_name "fGrammarBucket" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2073986 // fGrammarBucket (<unidirectional association>)
	    b parent class_ref 703362 // XSGrammarBucket
	end

	classrelation 2074114 // fInitialGrammarSet (<unidirectional association>)
	  relation 2074114 --->
	    a role_name "fInitialGrammarSet" multiplicity "[]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2074114 // fInitialGrammarSet (<unidirectional association>)
	    b parent class_ref 674818 // Grammar
	end

	operation 4829826 "retrieveInitialGrammarSet"
	  public return_type class_ref 674818 // Grammar
	  nparams 1
	    param inout name "grammarType" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4829954 "cacheGrammars"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "grammarType" type class_ref 128130 // String
	    param inout name "grammars" type class_ref 674818 // Grammar
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4830082 "retrieveGrammar"
	  public return_type class_ref 674818 // Grammar
	  nparams 1
	    param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4830210 "refreshGrammars"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "gBucket" type class_ref 703362 // XSGrammarBucket
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4830338 "lockPool"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4830466 "unlockPool"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4830594 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2070914 // fGrammarBucketAdapter (<unidirectional association>)
	relation 2070914 --->
	  a role_name "fGrammarBucketAdapter" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2070914 // fGrammarBucketAdapter (<unidirectional association>)
	  b parent class_ref 717314 // XSAnnotationGrammarPool
      end

      attribute 1081218 "INIT_STACK_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " these data members are needed for the deferred traversal
 of local elements.
 the initial size of the array to store deferred local elements
"
      end

      attribute 1081346 "INC_STACK_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the incremental size of the array to store deferred local elements
"
      end

      attribute 1081474 "fLocalElemStackPos"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " current position of the array (# of deferred local elements)
"
      end

      classrelation 2071042 // fParticle (<unidirectional association>)
	relation 2071042 --->
	  a role_name "fParticle" multiplicity "[]" init_value " new XSParticleDecl[INIT_STACK_SIZE]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071042 // fParticle (<unidirectional association>)
	  b parent class_ref 701314 // XSParticleDecl
      end

      classrelation 2071170 // fLocalElementDecl (<unidirectional association>)
	relation 2071170 --->
	  a role_name "fLocalElementDecl" multiplicity "[]" init_value " new Element[INIT_STACK_SIZE]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071170 // fLocalElementDecl (<unidirectional association>)
	  b parent class_ref 648194 // Element
      end

      classrelation 2071298 // fLocalElementDecl_schema (<unidirectional association>)
	relation 2071298 --->
	  a role_name "fLocalElementDecl_schema" multiplicity "[]" init_value " new XSDocumentInfo[INIT_STACK_SIZE]" private
	    comment "JACK"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071298 // fLocalElementDecl_schema (<unidirectional association>)
	  b parent class_ref 714370 // XSDocumentInfo
      end

      attribute 1081602 "fAllContext"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[INIT_STACK_SIZE]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2071426 // fParent (<unidirectional association>)
	relation 2071426 --->
	  a role_name "fParent" multiplicity "[]" init_value " new XSObject[INIT_STACK_SIZE]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071426 // fParent (<unidirectional association>)
	  b parent class_ref 680706 // XSObject
      end

      classrelation 2071554 // fLocalElemNamespaceContext (<unidirectional association>)
	relation 2071554 --->
	  a role_name "fLocalElemNamespaceContext" multiplicity "[][]" init_value " new String [INIT_STACK_SIZE][1]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071554 // fLocalElemNamespaceContext (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1081730 "INIT_KEYREF_STACK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " these data members are needed for the deferred traversal
 of keyrefs.
 the initial size of the array to store deferred keyrefs
"
      end

      attribute 1081858 "INC_KEYREF_STACK_AMOUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the incremental size of the array to store deferred keyrefs
"
      end

      attribute 1081986 "fKeyrefStackPos"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " current position of the array (# of deferred keyrefs)
"
      end

      classrelation 2071682 // fKeyrefs (<unidirectional association>)
	relation 2071682 --->
	  a role_name "fKeyrefs" multiplicity "[]" init_value " new Element[INIT_KEYREF_STACK]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071682 // fKeyrefs (<unidirectional association>)
	  b parent class_ref 648194 // Element
      end

      classrelation 2071810 // fKeyrefsMapXSDocumentInfo (<unidirectional association>)
	relation 2071810 --->
	  a role_name "fKeyrefsMapXSDocumentInfo" multiplicity "[]" init_value " new XSDocumentInfo[INIT_KEYREF_STACK]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071810 // fKeyrefsMapXSDocumentInfo (<unidirectional association>)
	  b parent class_ref 714370 // XSDocumentInfo
      end

      classrelation 2071938 // fKeyrefElems (<unidirectional association>)
	relation 2071938 --->
	  a role_name "fKeyrefElems" multiplicity "[]" init_value " new XSElementDecl [INIT_KEYREF_STACK]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2071938 // fKeyrefElems (<unidirectional association>)
	  b parent class_ref 700290 // XSElementDecl
      end

      classrelation 2072066 // fKeyrefNamespaceContext (<unidirectional association>)
	relation 2072066 --->
	  a role_name "fKeyrefNamespaceContext" multiplicity "[][]" init_value " new String[INIT_KEYREF_STACK][1]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2072066 // fKeyrefNamespaceContext (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2072194 // fGlobalAttrDecls (<unidirectional association>)
	relation 2072194 --->
	  a role_name "fGlobalAttrDecls" init_value " new SymbolHash(12)" package
	    comment " global decls: map from decl name to decl object
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2072194 // fGlobalAttrDecls (<unidirectional association>)
	  b parent class_ref 679938 // SymbolHash
      end

      classrelation 2072322 // fGlobalAttrGrpDecls (<unidirectional association>)
	relation 2072322 --->
	  a role_name "fGlobalAttrGrpDecls" init_value " new SymbolHash(5)" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2072322 // fGlobalAttrGrpDecls (<unidirectional association>)
	  b parent class_ref 679938 // SymbolHash
      end

      classrelation 2072450 // fGlobalElemDecls (<unidirectional association>)
	relation 2072450 --->
	  a role_name "fGlobalElemDecls" init_value " new SymbolHash(25)" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2072450 // fGlobalElemDecls (<unidirectional association>)
	  b parent class_ref 679938 // SymbolHash
      end

      classrelation 2072578 // fGlobalGroupDecls (<unidirectional association>)
	relation 2072578 --->
	  a role_name "fGlobalGroupDecls" init_value " new SymbolHash(5)" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2072578 // fGlobalGroupDecls (<unidirectional association>)
	  b parent class_ref 679938 // SymbolHash
      end

      classrelation 2072706 // fGlobalNotationDecls (<unidirectional association>)
	relation 2072706 --->
	  a role_name "fGlobalNotationDecls" init_value " new SymbolHash(1)" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2072706 // fGlobalNotationDecls (<unidirectional association>)
	  b parent class_ref 679938 // SymbolHash
      end

      classrelation 2072834 // fGlobalIDConstraintDecls (<unidirectional association>)
	relation 2072834 --->
	  a role_name "fGlobalIDConstraintDecls" init_value " new SymbolHash(3)" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2072834 // fGlobalIDConstraintDecls (<unidirectional association>)
	  b parent class_ref 679938 // SymbolHash
      end

      classrelation 2072962 // fGlobalTypeDecls (<unidirectional association>)
	relation 2072962 --->
	  a role_name "fGlobalTypeDecls" init_value " new SymbolHash(25)" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2072962 // fGlobalTypeDecls (<unidirectional association>)
	  b parent class_ref 679938 // SymbolHash
      end

      operation 4814210 "XSDHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors"
      end

      operation 4814338 "XSDHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "gBucket" type class_ref 703362 // XSGrammarBucket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " it should be possible to use the same XSDHandler to parse
 multiple schema documents; this will allow one to be
 constructed."
      end

      operation 4814466 "parseSchema"
	public return_type class_ref 699010 // SchemaGrammar
	nparams 3
	  param inout name "is" type class_ref 657666 // XMLInputSource
	  param inout name "desc" type class_ref 699650 // XSDDescription
	  param inout name "locationPairs" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String, XMLSchemaLoader.LocationArray> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end constructor

This method initiates the parse of a schema.  It will likely be
called from the Validator and it will make the
resulting grammar available; it returns a reference to this object just
in case.  A reset(XMLComponentManager) must be called before this methods is called.
@param is
@param desc
@param locationPairs
@return the SchemaGrammar
@throws IOException
"
      end

      operation 4814594 "validateAnnotations"
	private explicit_return_type "void"
	nparams 1
	  param inout name "annotationInfo" type class_ref 186498 // ArrayList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end parseSchema"
      end

      operation 4814722 "createAnnotationValidator"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4814850 "getGrammar"
	package return_type class_ref 699010 // SchemaGrammar
	nparams 1
	  param inout name "tns" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pull the grammar out of the bucket simply using
its TNS as a key
"
      end

      operation 4814978 "findGrammar"
	protected return_type class_ref 699010 // SchemaGrammar
	nparams 2
	  param inout name "desc" type class_ref 699650 // XSDDescription
	  param inout name "ignoreConflict" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "First try to find a grammar in the bucket, if failed, consult the
grammar pool. If a grammar is found in the pool, then add it (and all
imported ones) into the bucket.
"
      end

      classrelation 2073090 // NS_ERROR_CODES (<unidirectional association>)
	relation 2073090 --->
	  a role_name "NS_ERROR_CODES" multiplicity "[][]" init_value " {
            {\"src-include.2.1\", \"src-include.2.1\"},
            {\"src-redefine.3.1\", \"src-redefine.3.1\"},
            {\"src-import.3.1\", \"src-import.3.2\"},
            null,
            {\"TargetNamespace.1\", \"TargetNamespace.2\"},
            {\"TargetNamespace.1\", \"TargetNamespace.2\"},
            {\"TargetNamespace.1\", \"TargetNamespace.2\"},
            {\"TargetNamespace.1\", \"TargetNamespace.2\"}
    }" class_relation const_relation private
	    comment " may wish to have setter methods for ErrorHandler,
 EntityResolver...
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2073090 // NS_ERROR_CODES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2073218 // ELE_ERROR_CODES (<unidirectional association>)
	relation 2073218 --->
	  a role_name "ELE_ERROR_CODES" multiplicity "[]" init_value " {
            \"src-include.1\", \"src-redefine.2\", \"src-import.2\", \"schema_reference.4\",
            \"schema_reference.4\", \"schema_reference.4\", \"schema_reference.4\", \"schema_reference.4\"
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2073218 // ELE_ERROR_CODES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4815106 "constructTrees"
	protected return_type class_ref 714370 // XSDocumentInfo
	nparams 4
	  param inout name "schemaRoot" type class_ref 648194 // Element
	  param inout name "locationHint" type class_ref 128130 // String
	  param inout name "desc" type class_ref 699650 // XSDDescription
	  param inout name "nsCollision" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method does several things:
 It constructs an instance of an XSDocumentInfo object using the
 schemaRoot node.  Then, for each <include>,
 <redefine>, and <import> children, it attempts to resolve the
 requested schema document, initiates a DOM parse, and calls
 itself recursively on that document's root.  It also records in
 the DependencyMap object what XSDocumentInfo objects its XSDocumentInfo
 depends on.
 It also makes sure the targetNamespace of the schema it was
 called to parse is correct."
      end

      operation 4815234 "isExistingGrammar"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "desc" type class_ref 699650 // XSDDescription
	  param inout name "ignoreConflict" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end constructTrees"
      end

      operation 4815362 "updateImportListFor"
	private explicit_return_type "void"
	nparams 1
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Namespace growth

Go through the import list of a given grammar and for each imported
grammar, check to see if the grammar bucket has a newer version.
If a new instance is found, we update the import list with the
newer version.
"
      end

      operation 4815490 "updateImportListWith"
	private explicit_return_type "void"
	nparams 1
	  param inout name "newGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Namespace growth

Go throuth the grammar bucket, and for each grammar in the bucket
check the import list. If there exists a grammar in import list
that has the same namespace as newGrammar, but a different instance,
then update the import list and replace the old grammar instance with
the new one
"
      end

      operation 4815618 "buildGlobalNameRegistries"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method builds registries for all globally-referenceable
 names.  A registry will be built for each symbol space defined
 by the spec.  It is also this method's job to rename redefined
 components, and to record which components redefine others (so
 that implicit redefinitions of groups and attributeGroups can be handled)."
      end

      operation 4815746 "traverseSchemas"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "annotationInfo" type class_ref 186498 // ArrayList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end buildGlobalNameRegistries
 Beginning at the first schema processing was requested for
 (fRoot), this method
 examines each child (global schema information item) of each
 schema document (and of each <redefine> element)
 corresponding to an XSDocumentInfo object.  If the
 readOnly field on that node has not been set, it calls an
 appropriate traverser to traverse it.  Once all global decls in
 an XSDocumentInfo object have been traversed, it marks that object
 as traversed (or hidden) in order to avoid infinite loops.  It completes
 when it has visited all XSDocumentInfo objects in the
 DependencyMap and marked them as traversed."
      end

      classrelation 2073346 // fReportedTNS (<unidirectional association>)
	relation 2073346 --->
	  a role_name "fReportedTNS" init_value " null" private
	    comment " end traverseSchemas
 store whether we have reported an error about that no grammar
 is found for the given namespace uri
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2073346 // fReportedTNS (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 4815874 "needReportTNSError"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " check whether we need to report an error against the given uri.
 if we have reported an error, then we don't need to report again;
 otherwise we reported the error, and remember this fact."
      end

      classrelation 2073474 // COMP_TYPE (<unidirectional association>)
	relation 2073474 --->
	  a role_name "COMP_TYPE" multiplicity "[]" init_value " {
            null,               // index 0
            \"attribute declaration\",
            \"attribute group\",
            \"element declaration\",
            \"group\",
            \"identity constraint\",
            \"notation\",
            \"type definition\",
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2073474 // COMP_TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2073602 // CIRCULAR_CODES (<unidirectional association>)
	relation 2073602 --->
	  a role_name "CIRCULAR_CODES" multiplicity "[]" init_value " {
            \"Internal-Error\",
            \"Internal-Error\",
            \"src-attribute_group.3\",
            \"e-props-correct.6\",
            \"mg-props-correct.2\",
            \"Internal-Error\",
            \"Internal-Error\",
            \"st-props-correct.2\",       //or ct-props-correct.3
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2073602 // CIRCULAR_CODES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4816002 "addGlobalAttributeDecl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "decl" type class_ref 700034 // XSAttributeDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add a global attribute decl from a current schema load (only if no existing decl is found)"
      end

      operation 4816130 "addGlobalAttributeGroupDecl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "decl" type class_ref 700162 // XSAttributeGroupDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add a global attribute group decl from a current schema load (only if no existing decl is found)"
      end

      operation 4816258 "addGlobalElementDecl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "decl" type class_ref 700290 // XSElementDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add a global element decl from a current schema load (only if no existing decl is found)"
      end

      operation 4816386 "addGlobalGroupDecl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "decl" type class_ref 700418 // XSGroupDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add a global group decl from a current schema load (only if no existing decl is found)"
      end

      operation 4816514 "addGlobalNotationDecl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "decl" type class_ref 700546 // XSNotationDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add a global notation decl from a current schema load (only if no existing decl is found)"
      end

      operation 4816642 "addGlobalTypeDecl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "decl" type class_ref 655490 // XSTypeDefinition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add a global type decl from a current schema load (only if no existing decl is found)"
      end

      operation 4816770 "addIDConstraintDecl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "decl" type class_ref 701442 // IdentityConstraint
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add a identity constraint decl from a current schema load (only if no existing decl is found)"
      end

      operation 4816898 "getGlobalAttributeDecl"
	private return_type class_ref 700034 // XSAttributeDecl
	nparams 1
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4817026 "getGlobalAttributeGroupDecl"
	private return_type class_ref 700162 // XSAttributeGroupDecl
	nparams 1
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4817154 "getGlobalElementDecl"
	private return_type class_ref 700290 // XSElementDecl
	nparams 1
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4817282 "getGlobalGroupDecl"
	private return_type class_ref 700418 // XSGroupDecl
	nparams 1
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4817410 "getGlobalNotationDecl"
	private return_type class_ref 700546 // XSNotationDecl
	nparams 1
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4817538 "getGlobalTypeDecl"
	private return_type class_ref 655490 // XSTypeDefinition
	nparams 1
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4817666 "getIDConstraintDecl"
	private return_type class_ref 701442 // IdentityConstraint
	nparams 1
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4817794 "getGlobalDecl"
	protected return_type class_ref 129538 // Object
	nparams 4
	  param inout name "currSchema" type class_ref 714370 // XSDocumentInfo
	  param in name "declType" explicit_type "int"
	  param inout name "declToTraverse" type class_ref 661378 // QName
	  param inout name "elmNode" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " since it is forbidden for traversers to talk to each other
 directly (except wen a traverser encounters a local declaration),
 this provides a generic means for a traverser to call
 for the traversal of some declaration.  An XSDocumentInfo is
 required because the XSDocumentInfo that the traverser is traversing
 may bear no relation to the one the handler is operating on.
 This method will:
 1.  See if a global definition matching declToTraverse exists;
 2. if so, determine if there is a path from currSchema to the
 schema document where declToTraverse lives (i.e., do a lookup
 in DependencyMap);
 3. depending on declType (which will be relevant to step 1 as
 well), call the appropriate traverser with the appropriate
 XSDocumentInfo object.
 This method returns whatever the traverser it called returned;
 this will be an Object of some kind
 that lives in the Grammar."
      end

      operation 4817922 "getGlobalDecl"
	protected return_type class_ref 129538 // Object
	nparams 2
	  param inout name "declKey" type class_ref 128130 // String
	  param in name "declType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getGlobalDecl(XSDocumentInfo, int, QName):  Object
 If we are tolerating duplicate declarations and allowing namespace growth
 use the declaration from the current schema load (if it exists)"
      end

      operation 4818050 "getGlobalDeclFromGrammar"
	protected return_type class_ref 129538 // Object
	nparams 3
	  param inout name "sGrammar" type class_ref 699010 // SchemaGrammar
	  param in name "declType" explicit_type "int"
	  param inout name "localpart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4818178 "getGlobalDeclFromGrammar"
	protected return_type class_ref 129538 // Object
	nparams 4
	  param inout name "sGrammar" type class_ref 699010 // SchemaGrammar
	  param in name "declType" explicit_type "int"
	  param inout name "localpart" type class_ref 128130 // String
	  param inout name "schemaLoc" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4818306 "traverseGlobalDecl"
	protected return_type class_ref 129538 // Object
	nparams 4
	  param in name "declType" explicit_type "int"
	  param inout name "decl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4818434 "schemaDocument2SystemId"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4818562 "getGrpOrAttrGrpRedefinedByRestriction"
	package return_type class_ref 129538 // Object
	nparams 4
	  param in name "type" explicit_type "int"
	  param inout name "name" type class_ref 661378 // QName
	  param inout name "currSchema" type class_ref 714370 // XSDocumentInfo
	  param inout name "elmNode" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method determines whether there is a group
 (attributeGroup) which the given one has redefined by
 restriction.  If so, it returns it; else it returns null.
 @param type:  whether what's been redefined is an
 attributeGroup or a group;
 @param name:  the QName of the component doing the redefining.
 @param currSchema:  schema doc in which the redefining component lives.
 @return:  Object representing decl redefined if present, null
 otherwise."
      end

      operation 4818690 "resolveKeyRefs"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getGrpOrAttrGrpRedefinedByRestriction(int, QName, XSDocumentInfo):  Object
 Since ID constraints can occur in local elements, unless we
 wish to completely traverse all our DOM trees looking for ID
 constraints while we're building our global name registries,
 which seems terribly inefficient, we need to resolve keyrefs
 after all parsing is complete.  This we can simply do by running through
 fIdentityConstraintRegistry and calling traverseKeyRef on all
 of the KeyRef nodes.  This unfortunately removes this knowledge
 from the elementTraverser class (which must ignore keyrefs),
 but there seems to be no efficient way around this..."
      end

      operation 4818818 "getIDRegistry"
	protected return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end resolveKeyRefs
 an accessor method.  Just makes sure callers
 who want the Identity constraint registry vaguely know what they're about."
      end

      operation 4818946 "getIDRegistry_sub"
	protected return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " an accessor method."
      end

      operation 4819074 "storeKeyRef"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "keyrefToStore" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "currElemDecl" type class_ref 700290 // XSElementDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method squirrels away <keyref> declarations--along with the element
 decls and namespace bindings they might find handy."
      end

      operation 4819202 "resolveSchema"
	private return_type class_ref 648194 // Element
	nparams 4
	  param inout name "desc" type class_ref 699650 // XSDDescription
	  param inout name "mustResolve" explicit_type "boolean"
	  param inout name "referElement" type class_ref 648194 // Element
	  param inout name "usePairs" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " storeKeyref (Element, XSDocumentInfo, XSElementDecl): void

resolveSchema method is responsible for resolving location of the schema (using XMLEntityResolver),
and if it was succefully resolved getting the schema Document.
@param desc
@param mustResolve
@param referElement
@return A schema Element or null.
"
      end

      operation 4819330 "resolveSchema"
	private return_type class_ref 648194 // Element
	nparams 4
	  param inout name "schemaSource" type class_ref 657666 // XMLInputSource
	  param inout name "desc" type class_ref 699650 // XSDDescription
	  param inout name "mustResolve" explicit_type "boolean"
	  param inout name "referElement" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchema(String, String, String, boolean, short):  Document"
      end

      operation 4819458 "resolveSchemaSource"
	private return_type class_ref 657666 // XMLInputSource
	nparams 4
	  param inout name "desc" type class_ref 699650 // XSDDescription
	  param inout name "mustResolve" explicit_type "boolean"
	  param inout name "referElement" type class_ref 648194 // Element
	  param inout name "usePairs" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4819586 "getSchemaDocument"
	private return_type class_ref 648194 // Element
	nparams 5
	  param inout name "schemaNamespace" type class_ref 128130 // String
	  param inout name "schemaSource" type class_ref 657666 // XMLInputSource
	  param inout name "mustResolve" explicit_type "boolean"
	  param in name "referType" explicit_type "short"
	  param inout name "referElement" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getSchemaDocument method uses XMLInputSource to parse a schema document.
@param schemaNamespace
@param schemaSource
@param mustResolve
@param referType
@param referElement
@return A schema Element.
"
      end

      operation 4819714 "getSchemaDocument"
	private return_type class_ref 648194 // Element
	nparams 5
	  param inout name "schemaNamespace" type class_ref 128130 // String
	  param inout name "schemaSource" type class_ref 717442 // SAXInputSource
	  param inout name "mustResolve" explicit_type "boolean"
	  param in name "referType" explicit_type "short"
	  param inout name "referElement" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchemaDocument(String, XMLInputSource, boolean, short, Element): Element

getSchemaDocument method uses SAXInputSource to parse a schema document.
@param schemaNamespace
@param schemaSource
@param mustResolve
@param referType
@param referElement
@return A schema Element.
"
      end

      operation 4819842 "getSchemaDocument"
	private return_type class_ref 648194 // Element
	nparams 5
	  param inout name "schemaNamespace" type class_ref 128130 // String
	  param inout name "schemaSource" type class_ref 717570 // DOMInputSource
	  param inout name "mustResolve" explicit_type "boolean"
	  param in name "referType" explicit_type "short"
	  param inout name "referElement" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchemaDocument(String, SAXInputSource, boolean, short, Element): Element

getSchemaDocument method uses DOMInputSource to parse a schema document.
@param schemaNamespace
@param schemaSource
@param mustResolve
@param referType
@param referElement
@return A schema Element.
"
      end

      operation 4819970 "getSchemaDocument"
	private return_type class_ref 648194 // Element
	nparams 5
	  param inout name "schemaNamespace" type class_ref 128130 // String
	  param inout name "schemaSource" type class_ref 717698 // StAXInputSource
	  param inout name "mustResolve" explicit_type "boolean"
	  param in name "referType" explicit_type "short"
	  param inout name "referElement" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchemaDocument(String, DOMInputSource, boolean, short, Element): Element

getSchemaDocument method uses StAXInputSource to parse a schema document.
@param schemaNamespace
@param schemaSource
@param mustResolve
@param referType
@param referElement
@return A schema Element.
"
      end

      operation 4820098 "getSchemaDocument0"
	private return_type class_ref 648194 // Element
	nparams 3
	  param inout name "key" type class_ref 716418 // XSDKey
	  param inout name "schemaId" type class_ref 128130 // String
	  param inout name "schemaElement" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchemaDocument(String, StAXInputSource, boolean, short, Element): Element

Code shared between the various getSchemaDocument() methods which
stores mapping information for the document.
"
      end

      operation 4820226 "getSchemaDocument1"
	private return_type class_ref 648194 // Element
	nparams 5
	  param inout name "mustResolve" explicit_type "boolean"
	  param inout name "hasInput" explicit_type "boolean"
	  param inout name "schemaSource" type class_ref 657666 // XMLInputSource
	  param inout name "referElement" type class_ref 648194 // Element
	  param inout name "ioe" type class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchemaDocument0(XSDKey, String, Element): Element

Error handling code shared between the various getSchemaDocument() methods.
"
      end

      operation 4820354 "getSchemaDocument"
	private return_type class_ref 648194 // Element
	nparams 2
	  param inout name "schemaSource" type class_ref 717826 // XSInputSource
	  param inout name "desc" type class_ref 699650 // XSDDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchemaDocument1(boolean, boolean, XMLInputSource, Element): Element

getSchemaDocument method uses XMLInputSource to parse a schema document.
@param schemaNamespace
@param schemaSource
@param mustResolve
@param referType
@param referElement
@return A schema Element.
"
      end

      operation 4820482 "expandGrammars"
	private return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "grammars" type class_ref 699010 // SchemaGrammar
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSchemaDocument(String, XSInputSource, boolean, short, Element): Element"
      end

      operation 4820610 "existingGrammars"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "grammars" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4820738 "canAddComponents"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "components" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4820866 "canAddComponent"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "component" type class_ref 680706 // XSObject
	  param inout name "desc" type class_ref 699650 // XSDDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4820994 "addGrammars"
	private explicit_return_type "void"
	nparams 1
	  param inout name "grammars" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4821122 "addGrammarComponents"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4821250 "createGrammarFrom"
	private return_type class_ref 699010 // SchemaGrammar
	nparams 1
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4821378 "addNewGrammarLocations"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4821506 "addNewImportedGrammars"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4821634 "updateImportList"
	private explicit_return_type "void"
	nparams 2
	  param inout name "importedSrc" type class_ref 141442 // Vector
	  param inout name "importedDst" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4821762 "addNewGrammarComponents"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4821890 "addGlobalElementDecls"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822018 "addGlobalAttributeDecls"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822146 "addGlobalAttributeGroupDecls"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822274 "addGlobalNotationDecls"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822402 "addGlobalGroupDecls"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822530 "addGlobalTypeDecls"
	private explicit_return_type "void"
	nparams 2
	  param inout name "srcGrammar" type class_ref 699010 // SchemaGrammar
	  param inout name "dstGrammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822658 "expandComponents"
	private return_type class_ref 141442 // Vector
	nparams 2
	  param inout name "components" type class_ref 680706 // XSObject
	multiplicity "[]"
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}<String, Vector> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822786 "expandRelatedComponents"
	private explicit_return_type "void"
	nparams 3
	  param inout name "component" type class_ref 680706 // XSObject
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String, Vector> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4822914 "expandRelatedAttributeComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "decl" type class_ref 663938 // XSAttributeDeclaration
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823042 "expandRelatedElementComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "decl" type class_ref 664578 // XSElementDeclaration
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823170 "expandRelatedTypeComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 655490 // XSTypeDefinition
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823298 "expandRelatedModelGroupDefinitionComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "modelGroupDef" type class_ref 699522 // XSModelGroupDefinition
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823426 "expandRelatedAttributeGroupComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "attrGroup" type class_ref 699394 // XSAttributeGroupDefinition
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823554 "expandRelatedComplexTypeComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 700674 // XSComplexTypeDecl
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823682 "expandRelatedSimpleTypeComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 663810 // XSSimpleTypeDefinition
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823810 "expandRelatedAttributeUsesComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "attrUses" type class_ref 680066 // XSObjectList
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4823938 "expandRelatedAttributeUseComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "component" type class_ref 702338 // XSAttributeUse
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824066 "expandRelatedParticleComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "component" type class_ref 701954 // XSParticle
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824194 "expandRelatedModelGroupComponents"
	private explicit_return_type "void"
	nparams 4
	  param inout name "modelGroup" type class_ref 707714 // XSModelGroup
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824322 "addRelatedType"
	private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 655490 // XSTypeDefinition
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824450 "addRelatedElement"
	private explicit_return_type "void"
	nparams 4
	  param inout name "decl" type class_ref 664578 // XSElementDeclaration
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824578 "addRelatedAttribute"
	private explicit_return_type "void"
	nparams 4
	  param inout name "decl" type class_ref 663938 // XSAttributeDeclaration
	  param inout name "componentList" type class_ref 141442 // Vector
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "dependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, Vector> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824706 "addGlobalComponents"
	private explicit_return_type "void"
	nparams 2
	  param inout name "components" type class_ref 141442 // Vector
	  param inout name "importDependencies" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, Vector> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824834 "addGlobalComponent"
	private explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 680706 // XSObject
	  param inout name "desc" type class_ref 699650 // XSDDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4824962 "updateImportDependencies"
	private explicit_return_type "void"
	nparams 1
	  param inout name "table" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Vector> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4825090 "expandImportList"
	private explicit_return_type "void"
	nparams 2
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "namespaceList" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4825218 "addImportList"
	private explicit_return_type "void"
	nparams 3
	  param inout name "sg" type class_ref 699010 // SchemaGrammar
	  param inout name "importedGrammars" type class_ref 141442 // Vector
	  param inout name "namespaceList" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4825346 "updateImportList"
	private explicit_return_type "void"
	nparams 3
	  param inout name "sg" type class_ref 699010 // SchemaGrammar
	  param inout name "importedGrammars" type class_ref 141442 // Vector
	  param inout name "namespaceList" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4825474 "containedImportedGrammar"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "importedGrammar" type class_ref 141442 // Vector
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4825602 "getSchemaGrammar"
	private return_type class_ref 699010 // SchemaGrammar
	nparams 1
	  param inout name "desc" type class_ref 699650 // XSDDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: always assuming that fNamespaceGrowth is enabled
       otherwise the grammar should have existed"
      end

      operation 4825730 "findDependentNamespaces"
	private return_type class_ref 141442 // Vector
	nparams 2
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "table" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4825858 "addNamespaceDependency"
	private explicit_return_type "void"
	nparams 3
	  param inout name "namespace1" type class_ref 128130 // String
	  param inout name "namespace2" type class_ref 128130 // String
	  param inout name "list" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4825986 "reportSharingError"
	private explicit_return_type "void"
	nparams 2
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4826114 "createTraversers"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " initialize all the traversers.
 this should only need to be called once during the construction
 of this object; it creates the traversers that will be used to
 construct schemaGrammars."
      end

      operation 4826242 "prepareForParse"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createTraversers()
 before parsing a schema, need to clear registries associated with
 parsing schemas"
      end

      operation 4826370 "prepareForTraverse"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " before traversing a schema's parse tree, need to reset all traversers and
 clear all registries"
      end

      operation 4826498 "setDeclPool"
	public explicit_return_type "void"
	nparams 1
	  param inout name "declPool" type class_ref 684802 // XSDeclarationPool
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4826626 "setDVFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dvFactory" type class_ref 679682 // SchemaDVFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4826754 "getDVFactory"
	public return_type class_ref 679682 // SchemaDVFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4826882 "reset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "componentManager" type class_ref 657026 // XMLComponentManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4827010 "traverseLocalElements"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " reset(XMLComponentManager)

Traverse all the deferred local elements. This method should be called
by traverseSchemas after we've done with all the global declarations.
"
      end

      operation 4827138 "removeParticle"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "group" type class_ref 707458 // XSModelGroupImpl
	  param inout name "particle" type class_ref 701314 // XSParticleDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4827266 "fillInLocalElemInfo"
	package explicit_return_type "void"
	nparams 5
	  param inout name "elmDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param in name "allContextFlags" explicit_type "int"
	  param inout name "parent" type class_ref 680706 // XSObject
	  param inout name "particle" type class_ref 701314 // XSParticleDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " the purpose of this method is to keep up-to-date structures
 we'll need for the feferred traversal of local elements."
      end

      operation 4827394 "checkForDuplicateNames"
	package explicit_return_type "void"
	nparams 6
	  param inout name "qName" type class_ref 128130 // String
	  param in name "declType" explicit_type "int"
	  param inout name "registry" type class_ref 130178 // Map
	  param inout name "registry_sub" type class_ref 130178 // Map
	  param inout name "currComp" type class_ref 648194 // Element
	  param inout name "currSchema" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,Element> ${p2}, ${t3}<String,XSDocumentInfo> ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end fillInLocalElemInfo(...)
 This method makes sure that
if this component is being redefined that it lives in the
right schema.  It then renames the component correctly.  If it
detects a collision--a duplicate definition--then it complains.
Note that redefines must be handled carefully:  if there
is a collision, it may be because we're redefining something we know about
or because we've found the thing we're redefining.
"
      end

      operation 4827522 "checkForDuplicateNames"
	package explicit_return_type "void"
	nparams 3
	  param inout name "qName" type class_ref 128130 // String
	  param in name "declType" explicit_type "int"
	  param inout name "currComp" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkForDuplicateNames(String, Map, Element, XSDocumentInfo):void"
      end

      operation 4827650 "renameRedefiningComponents"
	private explicit_return_type "void"
	nparams 5
	  param inout name "currSchema" type class_ref 714370 // XSDocumentInfo
	  param inout name "child" type class_ref 648194 // Element
	  param inout name "componentType" type class_ref 128130 // String
	  param inout name "oldName" type class_ref 128130 // String
	  param inout name "newName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " the purpose of this method is to take the component of the
 specified type and rename references to itself so that they
 refer to the object being redefined.  It takes special care of
 <group>s and <attributeGroup>s to ensure that information
 relating to implicit restrictions is preserved for those
 traversers."
      end

      operation 4827778 "findQName"
	private return_type class_ref 128130 // String
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " renameRedefiningComponents(XSDocumentInfo, Element, String, String, String):void
 this method takes a name of the form a:b, determines the URI mapped
 to by a in the current SchemaNamespaceSupport object, and returns this
 information in the form (nsURI,b) suitable for lookups in the global
 decl maps.
 REVISIT: should have it return QName, instead of String. this would
          save lots of string concatenation time. we can use
          QName#equals() to compare two QNames, and use QName directly
          as a key to the SymbolHash.
          And when the DV's are ready to return compiled values from
          validate() method, we should just call QNameDV.validate()
          in this method."
      end

      operation 4827906 "changeRedefineGroup"
	private explicit_return_type "int"
	nparams 5
	  param inout name "originalQName" type class_ref 128130 // String
	  param inout name "elementSought" type class_ref 128130 // String
	  param inout name "newName" type class_ref 128130 // String
	  param inout name "curr" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " findQName(String, XSDocumentInfo):  String
 This function looks among the children of curr for an element of type elementSought.
 If it finds one, it evaluates whether its ref attribute contains a reference
 to originalQName.  If it does, it returns 1 + the value returned by
 calls to itself on all other children.  In all other cases it returns 0 plus
 the sum of the values returned by calls to itself on curr's children.
 It also resets the value of ref so that it will refer to the renamed type from the schema
 being redefined."
      end

      operation 4828034 "findXSDocumentForDecl"
	private return_type class_ref 714370 // XSDocumentInfo
	nparams 3
	  param inout name "currSchema" type class_ref 714370 // XSDocumentInfo
	  param inout name "decl" type class_ref 648194 // Element
	  param inout name "decl_Doc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " changeRedefineGroup
 this method returns the XSDocumentInfo object that contains the
 component corresponding to decl.  If components from this
 document cannot be referred to from those of currSchema, this
 method returns null; it's up to the caller to throw an error.
 @param:  currSchema:  the XSDocumentInfo object containing the
 decl ref'ing us.
 @param:  decl:  the declaration being ref'd.
 this method is superficial now. ---Jack"
      end

      operation 4828162 "nonAnnotationContent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "elem" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " findXSDocumentForDecl(XSDocumentInfo, Element):  XSDocumentInfo
 returns whether more than <annotation>s occur in children of elem"
      end

      operation 4828290 "setSchemasVisible"
	private explicit_return_type "void"
	nparams 1
	  param inout name "startSchema" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " nonAnnotationContent(Element):  boolean"
      end

      classrelation 2073730 // xl (<unidirectional association>)
	relation 2073730 --->
	  a role_name "xl" init_value " new SimpleLocator()" private
	    comment " setSchemasVisible(XSDocumentInfo): void
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2073730 // xl (<unidirectional association>)
	  b parent class_ref 700802 // SimpleLocator
      end

      operation 4828418 "element2Locator"
	public return_type class_ref 700802 // SimpleLocator
	nparams 1
	  param inout name "e" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract location information from an Element node, and create a
new SimpleLocator object from such information. Returning null means
no information can be retrieved from the element.
"
      end

      operation 4828546 "element2Locator"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "e" type class_ref 648194 // Element
	  param inout name "l" type class_ref 700802 // SimpleLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract location information from an Element node, store such
information in the passed-in SimpleLocator object, then return
true. Returning false means can't extract or store such information.
"
      end

      operation 4828674 "getElementFromMap"
	private return_type class_ref 648194 // Element
	nparams 2
	  param inout name "registry" type class_ref 130178 // Map
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Element> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4828802 "getDocInfoFromMap"
	private return_type class_ref 714370 // XSDocumentInfo
	nparams 2
	  param inout name "registry" type class_ref 130178 // Map
	  param inout name "declKey" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, XSDocumentInfo> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4828930 "getFromMap"
	private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "registry" type class_ref 130178 // Map
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4829058 "reportSchemaFatalError"
	package explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4829186 "reportSchemaError"
	package explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4829314 "reportSchemaError"
	package explicit_return_type "void"
	nparams 4
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	  param inout name "exception" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4829442 "reportSchemaWarning"
	package explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4829570 "reportSchemaWarning"
	package explicit_return_type "void"
	nparams 4
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	  param inout name "exception" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4829698 "reportSchemaErr"
	package explicit_return_type "void"
	nparams 5
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	  param in name "type" explicit_type "short"
	  param inout name "exception" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 717954 "SAX2XNIUtil"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2074754 // <generalisation>
	  relation 2074754 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2074754 // <generalisation>
	    b parent class_ref 718082 // ErrorHandlerWrapper
	end

	operation 4832770 "createXMLParseException0"
	  class_operation public return_type class_ref 659842 // XMLParseException
	  nparams 1
	    param inout name "exception" type class_ref 618242 // SAXParseException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4832898 "createXNIException0"
	  class_operation public return_type class_ref 657794 // XNIException
	  nparams 1
	    param inout name "exception" type class_ref 379266 // SAXException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 4833026 "setGenerateSyntheticAnnotations"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param state
"
      end
    end

    class 713218 "SchemaContentHandler"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>SchemaContentHandler converts SAX events into XNI
and passes them directly to the SchemaDOMParser.</p>

@xerces.internal

@author Michael Glavassevich, IBM
@author Jack Z. Wang, IBM

"
      classrelation 2048770 // <realization>
	relation 2048770 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2048770 // <realization>
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 2048898 // fSymbolTable (<unidirectional association>)
	relation 2048898 --->
	  a role_name "fSymbolTable" private
	    comment " Symbol table *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2048898 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2049026 // fSchemaDOMParser (<unidirectional association>)
	relation 2049026 --->
	  a role_name "fSchemaDOMParser" private
	    comment " SchemaDOMParser, events will be delegated to SchemaDOMParser to pass 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049026 // fSchemaDOMParser (<unidirectional association>)
	  b parent class_ref 712450 // SchemaDOMParser
      end

      classrelation 2049154 // fSAXLocatorWrapper (<unidirectional association>)
	relation 2049154 --->
	  a role_name "fSAXLocatorWrapper" init_value " new SAXLocatorWrapper()" const_relation private
	    comment " XML Locator wrapper for SAX. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049154 // fSAXLocatorWrapper (<unidirectional association>)
	  b parent class_ref 713346 // SAXLocatorWrapper
      end

      classrelation 2049282 // fNamespaceContext (<unidirectional association>)
	relation 2049282 --->
	  a role_name "fNamespaceContext" init_value " new NamespaceSupport()" private
	    comment " The namespace context of this document: stores namespaces in scope 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049282 // fNamespaceContext (<unidirectional association>)
	  b parent class_ref 702722 // NamespaceSupport
      end

      attribute 1065730 "fNeedPushNSContext"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicate if push NamespaceContest is needed 
"
      end

      attribute 1065858 "fNamespacePrefixes"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag used to track whether namespace declarations are reported as attributes. 
"
      end

      attribute 1065986 "fStringsInternalized"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag used to track whether XML names and Namespace URIs have been internalized. 
"
      end

      classrelation 2049410 // fElementQName (<unidirectional association>)
	relation 2049410 --->
	  a role_name "fElementQName" init_value " new QName()" const_relation private
	    comment " Fields for start element, end element and characters. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049410 // fElementQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 2049538 // fAttributeQName (<unidirectional association>)
	relation 2049538 --->
	  a role_name "fAttributeQName" init_value " new QName()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049538 // fAttributeQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 2049666 // fAttributes (<unidirectional association>)
	relation 2049666 --->
	  a role_name "fAttributes" init_value " new XMLAttributesImpl()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049666 // fAttributes (<unidirectional association>)
	  b parent class_ref 670978 // XMLAttributesImpl
      end

      classrelation 2049794 // fTempString (<unidirectional association>)
	relation 2049794 --->
	  a role_name "fTempString" init_value " new XMLString()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049794 // fTempString (<unidirectional association>)
	  b parent class_ref 661250 // XMLString
      end

      operation 4798210 "SchemaContentHandler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs an SchemaContentHandler.</p>
"
      end

      operation 4798338 "getDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#setDocumentLocator(org.xml.sax.Locator)
"
      end

      operation 4798466 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 606082 // Locator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#setDocumentLocator(org.xml.sax.Locator)
"
      end

      operation 4798594 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startDocument()
"
      end

      operation 4798722 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endDocument()
"
      end

      operation 4798850 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startPrefixMapping(java.lang.String, java.lang.String)
"
      end

      operation 4798978 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endPrefixMapping(java.lang.String)
"
      end

      operation 4799106 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	  param inout name "atts" type class_ref 593410 // Attributes
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
"
      end

      operation 4799234 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "qName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#endElement(java.lang.String, java.lang.String, java.lang.String)
"
      end

      operation 4799362 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#characters(char[], int, int)
"
      end

      operation 4799490 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)
"
      end

      operation 4799618 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#processingInstruction(java.lang.String, java.lang.String)
"
      end

      operation 4799746 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.xml.sax.ContentHandler#skippedEntity(java.lang.String)
"
      end

      operation 4799874 "fillQName"
	private explicit_return_type "void"
	nparams 4
	  param inout name "toFill" type class_ref 661378 // QName
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	  param inout name "rawname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Other methods
"
      end

      operation 4800002 "fillXMLAttributes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 593410 // Attributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4800130 "addNamespaceDeclarations"
	private explicit_return_type "void"
	nparams 1
	  param in name "prefixCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4800258 "reset"
	public explicit_return_type "void"
	nparams 4
	  param inout name "schemaDOMParser" type class_ref 712450 // SchemaDOMParser
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "namespacePrefixes" explicit_type "boolean"
	  param inout name "stringsInternalized" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4800386 "convertToSAXParseException"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 659842 // XMLParseException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Static methods
"
      end

      operation 4800514 "convertToSAXException"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 657794 // XNIException
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 713474 "StAXSchemaParser"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>StAXSchemaParser reads StAX events, converts them into XNI events
and passes them directly to the SchemaDOMParser.</p>

@xerces.internal

@version $Id: StAXSchemaParser.java,v 1.2 2010-10-26 23:01:12 joehw Exp $
"
      attribute 1066114 "CHUNK_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 10)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chunk size (1024). 
"
      end

      attribute 1066242 "CHUNK_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " CHUNK_SIZE - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chunk mask (CHUNK_SIZE - 1). 
"
      end

      attribute 1066370 "fCharBuffer"
	const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " new char[CHUNK_SIZE]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array for holding character data. *
"
      end

      classrelation 2049922 // fSymbolTable (<unidirectional association>)
	relation 2049922 --->
	  a role_name "fSymbolTable" private
	    comment " Symbol table *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2049922 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2050050 // fSchemaDOMParser (<unidirectional association>)
	relation 2050050 --->
	  a role_name "fSchemaDOMParser" private
	    comment " SchemaDOMParser, events will be delegated to SchemaDOMParser to pass 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050050 // fSchemaDOMParser (<unidirectional association>)
	  b parent class_ref 712450 // SchemaDOMParser
      end

      classrelation 2050178 // fLocationWrapper (<unidirectional association>)
	relation 2050178 --->
	  a role_name "fLocationWrapper" init_value " new StAXLocationWrapper()" const_relation private
	    comment " XML Locator wrapper for SAX. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050178 // fLocationWrapper (<unidirectional association>)
	  b parent class_ref 713602 // StAXLocationWrapper
      end

      classrelation 2050306 // fNamespaceContext (<unidirectional association>)
	relation 2050306 --->
	  a role_name "fNamespaceContext" init_value " new JAXPNamespaceContextWrapper(fSymbolTable)" const_relation private
	    comment " The namespace context of this document: stores namespaces in scope 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050306 // fNamespaceContext (<unidirectional association>)
	  b parent class_ref 713730 // JAXPNamespaceContextWrapper
      end

      classrelation 2050434 // fElementQName (<unidirectional association>)
	relation 2050434 --->
	  a role_name "fElementQName" init_value " new QName()" const_relation private
	    comment " Fields for start element, end element and characters. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050434 // fElementQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 2050562 // fAttributeQName (<unidirectional association>)
	relation 2050562 --->
	  a role_name "fAttributeQName" init_value " new QName()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050562 // fAttributeQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 2050690 // fAttributes (<unidirectional association>)
	relation 2050690 --->
	  a role_name "fAttributes" init_value " new XMLAttributesImpl()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050690 // fAttributes (<unidirectional association>)
	  b parent class_ref 670978 // XMLAttributesImpl
      end

      classrelation 2050818 // fTempString (<unidirectional association>)
	relation 2050818 --->
	  a role_name "fTempString" init_value " new XMLString()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050818 // fTempString (<unidirectional association>)
	  b parent class_ref 661250 // XMLString
      end

      classrelation 2050946 // fDeclaredPrefixes (<unidirectional association>)
	relation 2050946 --->
	  a role_name "fDeclaredPrefixes" init_value " new ArrayList()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2050946 // fDeclaredPrefixes (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      classrelation 2051074 // fStringBuffer (<unidirectional association>)
	relation 2051074 --->
	  a role_name "fStringBuffer" init_value " new XMLStringBuffer()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051074 // fStringBuffer (<unidirectional association>)
	  b parent class_ref 667650 // XMLStringBuffer
      end

      attribute 1066498 "fDepth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4800642 "StAXSchemaParser"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4800770 "reset"
	public explicit_return_type "void"
	nparams 2
	  param inout name "schemaDOMParser" type class_ref 712450 // SchemaDOMParser
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4800898 "getDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4801026 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 643586 // XMLEventReader
	nexceptions 2
	  exception class_ref 643714 // XMLStreamException
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4801154 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 644610 // XMLStreamReader
	nexceptions 2
	  exception class_ref 643714 // XMLStreamException
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4801282 "sendCharactersToSchemaParser"
	private explicit_return_type "void"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param inout name "whitespace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Send characters to the validator in CHUNK_SIZE character chunks. "
      end

      operation 4801410 "fillProcessingInstruction"
	private explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " processing instructions must be sent all in one chunk"
      end

      operation 4801538 "fillXMLAttributes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 644354 // StartElement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4801666 "fillXMLAttributes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 644610 // XMLStreamReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4801794 "addNamespaceDeclarations"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4801922 "fillDeclaredPrefixes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 644354 // StartElement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fills in the list of declared prefixes. "
      end

      operation 4802050 "fillDeclaredPrefixes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 644226 // EndElement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fills in the list of declared prefixes. "
      end

      operation 4802178 "fillDeclaredPrefixes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "namespaces" type class_ref 132994 // Iterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fills in the list of declared prefixes. "
      end

      operation 4802306 "fillDeclaredPrefixes"
	private explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 644610 // XMLStreamReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fills in the list of declared prefixes. "
      end

      operation 4802434 "fillQName"
	private explicit_return_type "void"
	nparams 2
	  param inout name "toFill" type class_ref 661378 // QName
	  param inout name "toCopy" type class_ref 673666 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fills in a QName object. "
      end

      operation 4802562 "fillQName"
	package explicit_return_type "void"
	nparams 4
	  param inout name "toFill" type class_ref 661378 // QName
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fills in a QName object. "
      end
    end

    class 713858 "XSAnnotationInfo"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Objects of this class contain the textual representation of
an XML schema annotation as well as information on the location
of the annotation in the document it originated from.

@xerces.internal

@author Michael Glavassevich, IBM
"
      classrelation 2051202 // fAnnotation (<unidirectional association>)
	relation 2051202 --->
	  a role_name "fAnnotation" package
	    comment " Textual representation of annotation. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051202 // fAnnotation (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1066626 "fLine"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Line number of &lt;annotation&gt; element. *
"
      end

      attribute 1066754 "fColumn"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Column number of &lt;annotation&gt; element. *
"
      end

      attribute 1066882 "fCharOffset"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Character offset of &lt;annotation&gt; element. *
"
      end

      classrelation 2051330 // next (<unidirectional association>)
	relation 2051330 --->
	  a role_name "next" package
	    comment " Next annotation. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051330 // next (<unidirectional association>)
	  b parent class_ref 713858 // XSAnnotationInfo
      end

      operation 4802690 "XSAnnotationInfo"
	package explicit_return_type ""
	nparams 4
	  param inout name "annotation" type class_ref 128130 // String
	  param in name "line" explicit_type "int"
	  param in name "column" explicit_type "int"
	  param in name "charOffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4802818 "XSAnnotationInfo"
	package explicit_return_type ""
	nparams 2
	  param inout name "annotation" type class_ref 128130 // String
	  param inout name "annotationDecl" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 713986 "XSAttributeChecker"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class <code>XSAttributeCheck</code> is used to check the validity of attributes
appearing in the schema document. It
- reports an error for invalid element (invalid namespace, invalid name)
- reports an error for invalid attribute (invalid namespace, invalid name)
- reports an error for invalid attribute value
- return compiled values for attriute values
- provide default value for missing optional attributes
- provide default value for incorrect attribute values

But it's the caller's responsibility to check whether a required attribute
is present.

Things need revisiting:
- Whether to return non-schema attributes/values
- Do we need to update NamespaceScope and ErrorReporter when reset()?
- Should have the datatype validators return compiled value
- use symbol table instead of many maps

@xerces.internal

@author Sandy Gao, IBM
@version $Id: XSAttributeChecker.java,v 1.12 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2051458 // ELEMENT_N (<unidirectional association>)
	relation 2051458 --->
	  a role_name "ELEMENT_N" init_value " \"element_n\"" class_relation const_relation private
	    comment " REVISIT: only local element and attribute are different from others.
          it's possible to have either name or ref. all the others
          are only allowed to have one of name or ref, or neither of them.
          we'd better move such checking to the traverser.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051458 // ELEMENT_N (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2051586 // ELEMENT_R (<unidirectional association>)
	relation 2051586 --->
	  a role_name "ELEMENT_R" init_value " \"element_r\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051586 // ELEMENT_R (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2051714 // ATTRIBUTE_N (<unidirectional association>)
	relation 2051714 --->
	  a role_name "ATTRIBUTE_N" init_value " \"attribute_n\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051714 // ATTRIBUTE_N (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2051842 // ATTRIBUTE_R (<unidirectional association>)
	relation 2051842 --->
	  a role_name "ATTRIBUTE_R" init_value " \"attribute_r\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051842 // ATTRIBUTE_R (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1067010 "ATTIDX_COUNT"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1067138 "ATTIDX_ABSTRACT"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1067266 "ATTIDX_AFORMDEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1067394 "ATTIDX_BASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1067522 "ATTIDX_BLOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1067650 "ATTIDX_BLOCKDEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1067778 "ATTIDX_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1067906 "ATTIDX_EFORMDEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068034 "ATTIDX_FINAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068162 "ATTIDX_FINALDEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068290 "ATTIDX_FIXED"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068418 "ATTIDX_FORM"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068546 "ATTIDX_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068674 "ATTIDX_ITEMTYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068802 "ATTIDX_MAXOCCURS"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1068930 "ATTIDX_MEMBERTYPES"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069058 "ATTIDX_MINOCCURS"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069186 "ATTIDX_MIXED"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069314 "ATTIDX_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069442 "ATTIDX_NAMESPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069570 "ATTIDX_NAMESPACE_LIST"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069698 "ATTIDX_NILLABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069826 "ATTIDX_NONSCHEMA"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1069954 "ATTIDX_PROCESSCONTENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070082 "ATTIDX_PUBLIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070210 "ATTIDX_REF"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070338 "ATTIDX_REFER"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070466 "ATTIDX_SCHEMALOCATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070594 "ATTIDX_SOURCE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070722 "ATTIDX_SUBSGROUP"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070850 "ATTIDX_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1070978 "ATTIDX_TARGETNAMESPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1071106 "ATTIDX_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1071234 "ATTIDX_USE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1071362 "ATTIDX_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1071490 "ATTIDX_ENUMNSDECLS"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1071618 "ATTIDX_VERSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1071746 "ATTIDX_XML_LANG"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1071874 "ATTIDX_XPATH"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1072002 "ATTIDX_FROMDEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1072130 "ATTIDX_ISRETURNED"
	class_attribute const_attribute public explicit_type "int"
	init_value " ATTIDX_COUNT++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "public static final int ATTIDX_OTHERVALUES     = ATTIDX_COUNT++;
"
      end

      classrelation 2051970 // fXIntPool (<unidirectional association>)
	relation 2051970 --->
	  a role_name "fXIntPool" init_value " new XIntPool()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051970 // fXIntPool (<unidirectional association>)
	  b parent class_ref 714114 // XIntPool
      end

      classrelation 2052098 // INT_QUALIFIED (<unidirectional association>)
	relation 2052098 --->
	  a role_name "INT_QUALIFIED" init_value " fXIntPool.getXInt(SchemaSymbols.FORM_QUALIFIED)" class_relation const_relation private
	    comment " constants to return
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052098 // INT_QUALIFIED (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2052226 // INT_UNQUALIFIED (<unidirectional association>)
	relation 2052226 --->
	  a role_name "INT_UNQUALIFIED" init_value " fXIntPool.getXInt(SchemaSymbols.FORM_UNQUALIFIED)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052226 // INT_UNQUALIFIED (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2052354 // INT_EMPTY_SET (<unidirectional association>)
	relation 2052354 --->
	  a role_name "INT_EMPTY_SET" init_value " fXIntPool.getXInt(XSConstants.DERIVATION_NONE)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052354 // INT_EMPTY_SET (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2052482 // INT_ANY_STRICT (<unidirectional association>)
	relation 2052482 --->
	  a role_name "INT_ANY_STRICT" init_value " fXIntPool.getXInt(XSWildcardDecl.PC_STRICT)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052482 // INT_ANY_STRICT (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2052610 // INT_ANY_LAX (<unidirectional association>)
	relation 2052610 --->
	  a role_name "INT_ANY_LAX" init_value " fXIntPool.getXInt(XSWildcardDecl.PC_LAX)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052610 // INT_ANY_LAX (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2052738 // INT_ANY_SKIP (<unidirectional association>)
	relation 2052738 --->
	  a role_name "INT_ANY_SKIP" init_value " fXIntPool.getXInt(XSWildcardDecl.PC_SKIP)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052738 // INT_ANY_SKIP (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2052866 // INT_ANY_ANY (<unidirectional association>)
	relation 2052866 --->
	  a role_name "INT_ANY_ANY" init_value " fXIntPool.getXInt(XSWildcardDecl.NSCONSTRAINT_ANY)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052866 // INT_ANY_ANY (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2052994 // INT_ANY_LIST (<unidirectional association>)
	relation 2052994 --->
	  a role_name "INT_ANY_LIST" init_value " fXIntPool.getXInt(XSWildcardDecl.NSCONSTRAINT_LIST)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052994 // INT_ANY_LIST (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2053122 // INT_ANY_NOT (<unidirectional association>)
	relation 2053122 --->
	  a role_name "INT_ANY_NOT" init_value " fXIntPool.getXInt(XSWildcardDecl.NSCONSTRAINT_NOT)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053122 // INT_ANY_NOT (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2053250 // INT_USE_OPTIONAL (<unidirectional association>)
	relation 2053250 --->
	  a role_name "INT_USE_OPTIONAL" init_value " fXIntPool.getXInt(SchemaSymbols.USE_OPTIONAL)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053250 // INT_USE_OPTIONAL (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2053378 // INT_USE_REQUIRED (<unidirectional association>)
	relation 2053378 --->
	  a role_name "INT_USE_REQUIRED" init_value " fXIntPool.getXInt(SchemaSymbols.USE_REQUIRED)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053378 // INT_USE_REQUIRED (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2053506 // INT_USE_PROHIBITED (<unidirectional association>)
	relation 2053506 --->
	  a role_name "INT_USE_PROHIBITED" init_value " fXIntPool.getXInt(SchemaSymbols.USE_PROHIBITED)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053506 // INT_USE_PROHIBITED (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2053634 // INT_WS_PRESERVE (<unidirectional association>)
	relation 2053634 --->
	  a role_name "INT_WS_PRESERVE" init_value " fXIntPool.getXInt(XSSimpleType.WS_PRESERVE)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053634 // INT_WS_PRESERVE (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2053762 // INT_WS_REPLACE (<unidirectional association>)
	relation 2053762 --->
	  a role_name "INT_WS_REPLACE" init_value " fXIntPool.getXInt(XSSimpleType.WS_REPLACE)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053762 // INT_WS_REPLACE (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2053890 // INT_WS_COLLAPSE (<unidirectional association>)
	relation 2053890 --->
	  a role_name "INT_WS_COLLAPSE" init_value " fXIntPool.getXInt(XSSimpleType.WS_COLLAPSE)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053890 // INT_WS_COLLAPSE (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2054018 // INT_UNBOUNDED (<unidirectional association>)
	relation 2054018 --->
	  a role_name "INT_UNBOUNDED" init_value " fXIntPool.getXInt(SchemaSymbols.OCCURRENCE_UNBOUNDED)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054018 // INT_UNBOUNDED (<unidirectional association>)
	  b parent class_ref 714242 // XInt
      end

      classrelation 2054146 // fEleAttrsMapG (<unidirectional association>)
	relation 2054146 --->
	  a role_name "fEleAttrsMapG" init_value " new HashMap(29)" class_relation const_relation private
	    comment " used to store the map from element name to attribute list
 for 14 global elements
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054146 // fEleAttrsMapG (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2054274 // fEleAttrsMapL (<unidirectional association>)
	relation 2054274 --->
	  a role_name "fEleAttrsMapL" init_value " new HashMap(79)" class_relation const_relation private
	    comment " for 39 local elememnts
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054274 // fEleAttrsMapL (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 1072258 "DT_ANYURI"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " used to initialize fEleAttrsMap
 step 1: all possible data types
 DT_??? >= 0 : validate using a validator, which is initialized staticly
 DT_??? <  0 : validate directly, which is done in \"validate()\"
"
      end

      attribute 1072386 "DT_ID"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1072514 "DT_QNAME"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1072642 "DT_STRING"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1072770 "DT_TOKEN"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1072898 "DT_NCNAME"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1073026 "DT_XPATH"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1073154 "DT_XPATH1"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1073282 "DT_LANGUAGE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1073410 "DT_COUNT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " DT_LANGUAGE + 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " used to store extra datatype validators
"
      end

      classrelation 2054402 // fExtraDVs (<unidirectional association>)
	relation 2054402 --->
	  a role_name "fExtraDVs" multiplicity "[]" init_value " new XSSimpleType[DT_COUNT]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2054402 // fExtraDVs (<unidirectional association>)
	  b parent class_ref 679810 // XSSimpleType
      end

      extra_member 143874 "initialization"
	
	cpp "" ""
	java "  static {
        // step 5: register all datatype validators for new types
        SchemaGrammar grammar = SchemaGrammar.SG_SchemaNS;
        // anyURI
        fExtraDVs[DT_ANYURI] = (XSSimpleType)grammar.getGlobalTypeDecl(SchemaSymbols.ATTVAL_ANYURI);
        // ID
        fExtraDVs[DT_ID] = (XSSimpleType)grammar.getGlobalTypeDecl(SchemaSymbols.ATTVAL_ID);
        // QName
        fExtraDVs[DT_QNAME] = (XSSimpleType)grammar.getGlobalTypeDecl(SchemaSymbols.ATTVAL_QNAME);
        // string
        fExtraDVs[DT_STRING] = (XSSimpleType)grammar.getGlobalTypeDecl(SchemaSymbols.ATTVAL_STRING);
        // token
        fExtraDVs[DT_TOKEN] = (XSSimpleType)grammar.getGlobalTypeDecl(SchemaSymbols.ATTVAL_TOKEN);
        // NCName
        fExtraDVs[DT_NCNAME] = (XSSimpleType)grammar.getGlobalTypeDecl(SchemaSymbols.ATTVAL_NCNAME);
        // xpath = a subset of XPath expression
        fExtraDVs[DT_XPATH] = fExtraDVs[DT_STRING];
        // xpath = a subset of XPath expression
        fExtraDVs[DT_XPATH] = fExtraDVs[DT_STRING];
        // language
        fExtraDVs[DT_LANGUAGE] = (XSSimpleType)grammar.getGlobalTypeDecl(SchemaSymbols.ATTVAL_LANGUAGE);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1073538 "DT_BLOCK"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1073666 "DT_BLOCK1"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1073794 "DT_FINAL"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1073922 "DT_FINAL1"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074050 "DT_FINAL2"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074178 "DT_FORM"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074306 "DT_MAXOCCURS"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074434 "DT_MAXOCCURS1"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074562 "DT_MEMBERTYPES"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074690 "DT_MINOCCURS1"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074818 "DT_NAMESPACE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1074946 "DT_PROCESSCONTENTS"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1075074 "DT_USE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1075202 "DT_WHITESPACE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1075330 "DT_BOOLEAN"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1075458 "DT_NONNEGINT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1075586 "DT_POSINT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " -17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 144002 "initialization"
	
	cpp "" ""
	java "  static {
        // step 2: all possible attributes for all elements
        int attCount = 0;
        int ATT_ABSTRACT_D          = attCount++;
        int ATT_ATTRIBUTE_FD_D      = attCount++;
        int ATT_BASE_R              = attCount++;
        int ATT_BASE_N              = attCount++;
        int ATT_BLOCK_N             = attCount++;
        int ATT_BLOCK1_N            = attCount++;
        int ATT_BLOCK_D_D           = attCount++;
        int ATT_DEFAULT_N           = attCount++;
        int ATT_ELEMENT_FD_D        = attCount++;
        int ATT_FINAL_N             = attCount++;
        int ATT_FINAL1_N            = attCount++;
        int ATT_FINAL_D_D           = attCount++;
        int ATT_FIXED_N             = attCount++;
        int ATT_FIXED_D             = attCount++;
        int ATT_FORM_N              = attCount++;
        int ATT_ID_N                = attCount++;
        int ATT_ITEMTYPE_N          = attCount++;
        int ATT_MAXOCCURS_D         = attCount++;
        int ATT_MAXOCCURS1_D        = attCount++;
        int ATT_MEMBER_T_N          = attCount++;
        int ATT_MINOCCURS_D         = attCount++;
        int ATT_MINOCCURS1_D        = attCount++;
        int ATT_MIXED_D             = attCount++;
        int ATT_MIXED_N             = attCount++;
        int ATT_NAME_R              = attCount++;
        int ATT_NAMESPACE_D         = attCount++;
        int ATT_NAMESPACE_N         = attCount++;
        int ATT_NILLABLE_D          = attCount++;
        int ATT_PROCESS_C_D         = attCount++;
        int ATT_PUBLIC_R            = attCount++;
        int ATT_REF_R               = attCount++;
        int ATT_REFER_R             = attCount++;
        int ATT_SCHEMA_L_R          = attCount++;
        int ATT_SCHEMA_L_N          = attCount++;
        int ATT_SOURCE_N            = attCount++;
        int ATT_SUBSTITUTION_G_N    = attCount++;
        int ATT_SYSTEM_N            = attCount++;
        int ATT_TARGET_N_N          = attCount++;
        int ATT_TYPE_N              = attCount++;
        int ATT_USE_D               = attCount++;
        int ATT_VALUE_NNI_N         = attCount++;
        int ATT_VALUE_PI_N          = attCount++;
        int ATT_VALUE_STR_N         = attCount++;
        int ATT_VALUE_WS_N          = attCount++;
        int ATT_VERSION_N           = attCount++;
        int ATT_XML_LANG            = attCount++;
        int ATT_XPATH_R             = attCount++;
        int ATT_XPATH1_R            = attCount++;

        // step 3: store all these attributes in an array
        OneAttr[] allAttrs = new OneAttr[attCount];
        allAttrs[ATT_ABSTRACT_D]        =   new OneAttr(SchemaSymbols.ATT_ABSTRACT,
                                                        DT_BOOLEAN,
                                                        ATTIDX_ABSTRACT,
                                                        Boolean.FALSE);
        allAttrs[ATT_ATTRIBUTE_FD_D]    =   new OneAttr(SchemaSymbols.ATT_ATTRIBUTEFORMDEFAULT,
                                                        DT_FORM,
                                                        ATTIDX_AFORMDEFAULT,
                                                        INT_UNQUALIFIED);
        allAttrs[ATT_BASE_R]            =   new OneAttr(SchemaSymbols.ATT_BASE,
                                                        DT_QNAME,
                                                        ATTIDX_BASE,
                                                        null);
        allAttrs[ATT_BASE_N]            =   new OneAttr(SchemaSymbols.ATT_BASE,
                                                        DT_QNAME,
                                                        ATTIDX_BASE,
                                                        null);
        allAttrs[ATT_BLOCK_N]           =   new OneAttr(SchemaSymbols.ATT_BLOCK,
                                                        DT_BLOCK,
                                                        ATTIDX_BLOCK,
                                                        null);
        allAttrs[ATT_BLOCK1_N]          =   new OneAttr(SchemaSymbols.ATT_BLOCK,
                                                        DT_BLOCK1,
                                                        ATTIDX_BLOCK,
                                                        null);
        allAttrs[ATT_BLOCK_D_D]         =   new OneAttr(SchemaSymbols.ATT_BLOCKDEFAULT,
                                                        DT_BLOCK,
                                                        ATTIDX_BLOCKDEFAULT,
                                                        INT_EMPTY_SET);
        allAttrs[ATT_DEFAULT_N]         =   new OneAttr(SchemaSymbols.ATT_DEFAULT,
                                                        DT_STRING,
                                                        ATTIDX_DEFAULT,
                                                        null);
        allAttrs[ATT_ELEMENT_FD_D]      =   new OneAttr(SchemaSymbols.ATT_ELEMENTFORMDEFAULT,
                                                        DT_FORM,
                                                        ATTIDX_EFORMDEFAULT,
                                                        INT_UNQUALIFIED);
        allAttrs[ATT_FINAL_N]           =   new OneAttr(SchemaSymbols.ATT_FINAL,
                                                        DT_FINAL,
                                                        ATTIDX_FINAL,
                                                        null);
        allAttrs[ATT_FINAL1_N]          =   new OneAttr(SchemaSymbols.ATT_FINAL,
                                                        DT_FINAL1,
                                                        ATTIDX_FINAL,
                                                        null);
        allAttrs[ATT_FINAL_D_D]         =   new OneAttr(SchemaSymbols.ATT_FINALDEFAULT,
                                                        DT_FINAL2,
                                                        ATTIDX_FINALDEFAULT,
                                                        INT_EMPTY_SET);
        allAttrs[ATT_FIXED_N]           =   new OneAttr(SchemaSymbols.ATT_FIXED,
                                                        DT_STRING,
                                                        ATTIDX_FIXED,
                                                        null);
        allAttrs[ATT_FIXED_D]           =   new OneAttr(SchemaSymbols.ATT_FIXED,
                                                        DT_BOOLEAN,
                                                        ATTIDX_FIXED,
                                                        Boolean.FALSE);
        allAttrs[ATT_FORM_N]            =   new OneAttr(SchemaSymbols.ATT_FORM,
                                                        DT_FORM,
                                                        ATTIDX_FORM,
                                                        null);
        allAttrs[ATT_ID_N]              =   new OneAttr(SchemaSymbols.ATT_ID,
                                                        DT_ID,
                                                        ATTIDX_ID,
                                                        null);
        allAttrs[ATT_ITEMTYPE_N]        =   new OneAttr(SchemaSymbols.ATT_ITEMTYPE,
                                                        DT_QNAME,
                                                        ATTIDX_ITEMTYPE,
                                                        null);
        allAttrs[ATT_MAXOCCURS_D]       =   new OneAttr(SchemaSymbols.ATT_MAXOCCURS,
                                                        DT_MAXOCCURS,
                                                        ATTIDX_MAXOCCURS,
                                                        fXIntPool.getXInt(1));
        allAttrs[ATT_MAXOCCURS1_D]      =   new OneAttr(SchemaSymbols.ATT_MAXOCCURS,
                                                        DT_MAXOCCURS1,
                                                        ATTIDX_MAXOCCURS,
                                                        fXIntPool.getXInt(1));
        allAttrs[ATT_MEMBER_T_N]        =   new OneAttr(SchemaSymbols.ATT_MEMBERTYPES,
                                                        DT_MEMBERTYPES,
                                                        ATTIDX_MEMBERTYPES,
                                                        null);
        allAttrs[ATT_MINOCCURS_D]       =   new OneAttr(SchemaSymbols.ATT_MINOCCURS,
                                                        DT_NONNEGINT,
                                                        ATTIDX_MINOCCURS,
                                                        fXIntPool.getXInt(1));
        allAttrs[ATT_MINOCCURS1_D]      =   new OneAttr(SchemaSymbols.ATT_MINOCCURS,
                                                        DT_MINOCCURS1,
                                                        ATTIDX_MINOCCURS,
                                                        fXIntPool.getXInt(1));
        allAttrs[ATT_MIXED_D]           =   new OneAttr(SchemaSymbols.ATT_MIXED,
                                                        DT_BOOLEAN,
                                                        ATTIDX_MIXED,
                                                        Boolean.FALSE);
        allAttrs[ATT_MIXED_N]           =   new OneAttr(SchemaSymbols.ATT_MIXED,
                                                        DT_BOOLEAN,
                                                        ATTIDX_MIXED,
                                                        null);
        allAttrs[ATT_NAME_R]            =   new OneAttr(SchemaSymbols.ATT_NAME,
                                                        DT_NCNAME,
                                                        ATTIDX_NAME,
                                                        null);
        allAttrs[ATT_NAMESPACE_D]       =   new OneAttr(SchemaSymbols.ATT_NAMESPACE,
                                                        DT_NAMESPACE,
                                                        ATTIDX_NAMESPACE,
                                                        INT_ANY_ANY);
        allAttrs[ATT_NAMESPACE_N]       =   new OneAttr(SchemaSymbols.ATT_NAMESPACE,
                                                        DT_ANYURI,
                                                        ATTIDX_NAMESPACE,
                                                        null);
        allAttrs[ATT_NILLABLE_D]        =   new OneAttr(SchemaSymbols.ATT_NILLABLE,
                                                        DT_BOOLEAN,
                                                        ATTIDX_NILLABLE,
                                                        Boolean.FALSE);
        allAttrs[ATT_PROCESS_C_D]       =   new OneAttr(SchemaSymbols.ATT_PROCESSCONTENTS,
                                                        DT_PROCESSCONTENTS,
                                                        ATTIDX_PROCESSCONTENTS,
                                                        INT_ANY_STRICT);
        allAttrs[ATT_PUBLIC_R]          =   new OneAttr(SchemaSymbols.ATT_PUBLIC,
                                                        DT_TOKEN,
                                                        ATTIDX_PUBLIC,
                                                        null);
        allAttrs[ATT_REF_R]             =   new OneAttr(SchemaSymbols.ATT_REF,
                                                        DT_QNAME,
                                                        ATTIDX_REF,
                                                        null);
        allAttrs[ATT_REFER_R]           =   new OneAttr(SchemaSymbols.ATT_REFER,
                                                        DT_QNAME,
                                                        ATTIDX_REFER,
                                                        null);
        allAttrs[ATT_SCHEMA_L_R]        =   new OneAttr(SchemaSymbols.ATT_SCHEMALOCATION,
                                                        DT_ANYURI,
                                                        ATTIDX_SCHEMALOCATION,
                                                        null);
        allAttrs[ATT_SCHEMA_L_N]        =   new OneAttr(SchemaSymbols.ATT_SCHEMALOCATION,
                                                        DT_ANYURI,
                                                        ATTIDX_SCHEMALOCATION,
                                                        null);
        allAttrs[ATT_SOURCE_N]          =   new OneAttr(SchemaSymbols.ATT_SOURCE,
                                                        DT_ANYURI,
                                                        ATTIDX_SOURCE,
                                                        null);
        allAttrs[ATT_SUBSTITUTION_G_N]  =   new OneAttr(SchemaSymbols.ATT_SUBSTITUTIONGROUP,
                                                        DT_QNAME,
                                                        ATTIDX_SUBSGROUP,
                                                        null);
        allAttrs[ATT_SYSTEM_N]          =   new OneAttr(SchemaSymbols.ATT_SYSTEM,
                                                        DT_ANYURI,
                                                        ATTIDX_SYSTEM,
                                                        null);
        allAttrs[ATT_TARGET_N_N]        =   new OneAttr(SchemaSymbols.ATT_TARGETNAMESPACE,
                                                        DT_ANYURI,
                                                        ATTIDX_TARGETNAMESPACE,
                                                        null);
        allAttrs[ATT_TYPE_N]            =   new OneAttr(SchemaSymbols.ATT_TYPE,
                                                        DT_QNAME,
                                                        ATTIDX_TYPE,
                                                        null);
        allAttrs[ATT_USE_D]             =   new OneAttr(SchemaSymbols.ATT_USE,
                                                        DT_USE,
                                                        ATTIDX_USE,
                                                        INT_USE_OPTIONAL);
        allAttrs[ATT_VALUE_NNI_N]       =   new OneAttr(SchemaSymbols.ATT_VALUE,
                                                        DT_NONNEGINT,
                                                        ATTIDX_VALUE,
                                                        null);
        allAttrs[ATT_VALUE_PI_N]        =   new OneAttr(SchemaSymbols.ATT_VALUE,
                                                        DT_POSINT,
                                                        ATTIDX_VALUE,
                                                        null);
        allAttrs[ATT_VALUE_STR_N]       =   new OneAttr(SchemaSymbols.ATT_VALUE,
                                                        DT_STRING,
                                                        ATTIDX_VALUE,
                                                        null);
        allAttrs[ATT_VALUE_WS_N]        =   new OneAttr(SchemaSymbols.ATT_VALUE,
                                                        DT_WHITESPACE,
                                                        ATTIDX_VALUE,
                                                        null);
        allAttrs[ATT_VERSION_N]         =   new OneAttr(SchemaSymbols.ATT_VERSION,
                                                        DT_TOKEN,
                                                        ATTIDX_VERSION,
                                                        null);
        allAttrs[ATT_XML_LANG]          =   new OneAttr(SchemaSymbols.ATT_XML_LANG,
                                                        DT_LANGUAGE,
                                                        ATTIDX_XML_LANG,
                                                        null);
        allAttrs[ATT_XPATH_R]           =   new OneAttr(SchemaSymbols.ATT_XPATH,
                                                        DT_XPATH,
                                                        ATTIDX_XPATH,
                                                        null);
        allAttrs[ATT_XPATH1_R]          =   new OneAttr(SchemaSymbols.ATT_XPATH,
                                                        DT_XPATH1,
                                                        ATTIDX_XPATH,
                                                        null);

        // step 4: for each element, make a list of possible attributes
        Container attrList;

        // for element \"attribute\" - global
        attrList = Container.getContainer(5);
        // default = string
        attrList.put(SchemaSymbols.ATT_DEFAULT, allAttrs[ATT_DEFAULT_N]);
        // fixed = string
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        // type = QName
        attrList.put(SchemaSymbols.ATT_TYPE, allAttrs[ATT_TYPE_N]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_ATTRIBUTE, attrList);

        // for element \"attribute\" - local name
        attrList = Container.getContainer(7);
        // default = string
        attrList.put(SchemaSymbols.ATT_DEFAULT, allAttrs[ATT_DEFAULT_N]);
        // fixed = string
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_N]);
        // form = (qualified | unqualified)
        attrList.put(SchemaSymbols.ATT_FORM, allAttrs[ATT_FORM_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        // type = QName
        attrList.put(SchemaSymbols.ATT_TYPE, allAttrs[ATT_TYPE_N]);
        // use = (optional | prohibited | required) : optional
        attrList.put(SchemaSymbols.ATT_USE, allAttrs[ATT_USE_D]);
        fEleAttrsMapL.put(ATTRIBUTE_N, attrList);

        // for element \"attribute\" - local ref
        attrList = Container.getContainer(5);
        // default = string
        attrList.put(SchemaSymbols.ATT_DEFAULT, allAttrs[ATT_DEFAULT_N]);
        // fixed = string
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // ref = QName
        attrList.put(SchemaSymbols.ATT_REF, allAttrs[ATT_REF_R]);
        // use = (optional | prohibited | required) : optional
        attrList.put(SchemaSymbols.ATT_USE, allAttrs[ATT_USE_D]);
        fEleAttrsMapL.put(ATTRIBUTE_R, attrList);

        // for element \"element\" - global
        attrList = Container.getContainer(10);
        // abstract = boolean : false
        attrList.put(SchemaSymbols.ATT_ABSTRACT, allAttrs[ATT_ABSTRACT_D]);
        // block = (#all | List of (extension | restriction | substitution))
        attrList.put(SchemaSymbols.ATT_BLOCK, allAttrs[ATT_BLOCK_N]);
        // default = string
        attrList.put(SchemaSymbols.ATT_DEFAULT, allAttrs[ATT_DEFAULT_N]);
        // final = (#all | List of (extension | restriction))
        attrList.put(SchemaSymbols.ATT_FINAL, allAttrs[ATT_FINAL_N]);
        // fixed = string
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        // nillable = boolean : false
        attrList.put(SchemaSymbols.ATT_NILLABLE, allAttrs[ATT_NILLABLE_D]);
        // substitutionGroup = QName
        attrList.put(SchemaSymbols.ATT_SUBSTITUTIONGROUP, allAttrs[ATT_SUBSTITUTION_G_N]);
        // type = QName
        attrList.put(SchemaSymbols.ATT_TYPE, allAttrs[ATT_TYPE_N]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_ELEMENT, attrList);

        // for element \"element\" - local name
        attrList = Container.getContainer(10);
        // block = (#all | List of (extension | restriction | substitution))
        attrList.put(SchemaSymbols.ATT_BLOCK, allAttrs[ATT_BLOCK_N]);
        // default = string
        attrList.put(SchemaSymbols.ATT_DEFAULT, allAttrs[ATT_DEFAULT_N]);
        // fixed = string
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_N]);
        // form = (qualified | unqualified)
        attrList.put(SchemaSymbols.ATT_FORM, allAttrs[ATT_FORM_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // maxOccurs = (nonNegativeInteger | unbounded)  : 1
        attrList.put(SchemaSymbols.ATT_MAXOCCURS, allAttrs[ATT_MAXOCCURS_D]);
        // minOccurs = nonNegativeInteger : 1
        attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS_D]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        // nillable = boolean : false
        attrList.put(SchemaSymbols.ATT_NILLABLE, allAttrs[ATT_NILLABLE_D]);
        // type = QName
        attrList.put(SchemaSymbols.ATT_TYPE, allAttrs[ATT_TYPE_N]);
        fEleAttrsMapL.put(ELEMENT_N, attrList);

        // for element \"element\" - local ref
        attrList = Container.getContainer(4);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // maxOccurs = (nonNegativeInteger | unbounded)  : 1
        attrList.put(SchemaSymbols.ATT_MAXOCCURS, allAttrs[ATT_MAXOCCURS_D]);
        // minOccurs = nonNegativeInteger : 1
        attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS_D]);
        // ref = QName
        attrList.put(SchemaSymbols.ATT_REF, allAttrs[ATT_REF_R]);
        fEleAttrsMapL.put(ELEMENT_R, attrList);

        // for element \"complexType\" - global
        attrList = Container.getContainer(6);
        // abstract = boolean : false
        attrList.put(SchemaSymbols.ATT_ABSTRACT, allAttrs[ATT_ABSTRACT_D]);
        // block = (#all | List of (extension | restriction))
        attrList.put(SchemaSymbols.ATT_BLOCK, allAttrs[ATT_BLOCK1_N]);
        // final = (#all | List of (extension | restriction))
        attrList.put(SchemaSymbols.ATT_FINAL, allAttrs[ATT_FINAL_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // mixed = boolean : false
        attrList.put(SchemaSymbols.ATT_MIXED, allAttrs[ATT_MIXED_D]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_COMPLEXTYPE, attrList);

        // for element \"notation\" - global
        attrList = Container.getContainer(4);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        // public = A public identifier, per ISO 8879
        attrList.put(SchemaSymbols.ATT_PUBLIC, allAttrs[ATT_PUBLIC_R]);
        // system = anyURI
        attrList.put(SchemaSymbols.ATT_SYSTEM, allAttrs[ATT_SYSTEM_N]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_NOTATION, attrList);


        // for element \"complexType\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // mixed = boolean : false
        attrList.put(SchemaSymbols.ATT_MIXED, allAttrs[ATT_MIXED_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_COMPLEXTYPE, attrList);

        // for element \"simpleContent\" - local
        attrList = Container.getContainer(1);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_SIMPLECONTENT, attrList);

        // for element \"restriction\" - local
        attrList = Container.getContainer(2);
        // base = QName
        attrList.put(SchemaSymbols.ATT_BASE, allAttrs[ATT_BASE_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_RESTRICTION, attrList);

        // for element \"extension\" - local
        attrList = Container.getContainer(2);
        // base = QName
        attrList.put(SchemaSymbols.ATT_BASE, allAttrs[ATT_BASE_R]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_EXTENSION, attrList);

        // for element \"attributeGroup\" - local ref
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // ref = QName
        attrList.put(SchemaSymbols.ATT_REF, allAttrs[ATT_REF_R]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_ATTRIBUTEGROUP, attrList);

        // for element \"anyAttribute\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace | ##local)) )  : ##any
        attrList.put(SchemaSymbols.ATT_NAMESPACE, allAttrs[ATT_NAMESPACE_D]);
        // processContents = (lax | skip | strict) : strict
        attrList.put(SchemaSymbols.ATT_PROCESSCONTENTS, allAttrs[ATT_PROCESS_C_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_ANYATTRIBUTE, attrList);

        // for element \"complexContent\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // mixed = boolean
        attrList.put(SchemaSymbols.ATT_MIXED, allAttrs[ATT_MIXED_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_COMPLEXCONTENT, attrList);

        // for element \"attributeGroup\" - global
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_ATTRIBUTEGROUP, attrList);

        // for element \"group\" - global
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_GROUP, attrList);

        // for element \"group\" - local ref
        attrList = Container.getContainer(4);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // maxOccurs = (nonNegativeInteger | unbounded)  : 1
        attrList.put(SchemaSymbols.ATT_MAXOCCURS, allAttrs[ATT_MAXOCCURS_D]);
        // minOccurs = nonNegativeInteger : 1
        attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS_D]);
        // ref = QName
        attrList.put(SchemaSymbols.ATT_REF, allAttrs[ATT_REF_R]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_GROUP, attrList);

        // for element \"all\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // maxOccurs = 1 : 1
        attrList.put(SchemaSymbols.ATT_MAXOCCURS, allAttrs[ATT_MAXOCCURS1_D]);
        // minOccurs = (0 | 1) : 1
        attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS1_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_ALL, attrList);

        // for element \"choice\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // maxOccurs = (nonNegativeInteger | unbounded)  : 1
        attrList.put(SchemaSymbols.ATT_MAXOCCURS, allAttrs[ATT_MAXOCCURS_D]);
        // minOccurs = nonNegativeInteger : 1
        attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_CHOICE, attrList);
        // for element \"sequence\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_SEQUENCE, attrList);

        // for element \"any\" - local
        attrList = Container.getContainer(5);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // maxOccurs = (nonNegativeInteger | unbounded)  : 1
        attrList.put(SchemaSymbols.ATT_MAXOCCURS, allAttrs[ATT_MAXOCCURS_D]);
        // minOccurs = nonNegativeInteger : 1
        attrList.put(SchemaSymbols.ATT_MINOCCURS, allAttrs[ATT_MINOCCURS_D]);
        // namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace | ##local)) )  : ##any
        attrList.put(SchemaSymbols.ATT_NAMESPACE, allAttrs[ATT_NAMESPACE_D]);
        // processContents = (lax | skip | strict) : strict
        attrList.put(SchemaSymbols.ATT_PROCESSCONTENTS, allAttrs[ATT_PROCESS_C_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_ANY, attrList);

        // for element \"unique\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_UNIQUE, attrList);
        // for element \"key\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_KEY, attrList);

        // for element \"keyref\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        // refer = QName
        attrList.put(SchemaSymbols.ATT_REFER, allAttrs[ATT_REFER_R]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_KEYREF, attrList);

        // for element \"selector\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // xpath = a subset of XPath expression
        attrList.put(SchemaSymbols.ATT_XPATH, allAttrs[ATT_XPATH_R]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_SELECTOR, attrList);

        // for element \"field\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // xpath = a subset of XPath expression
        attrList.put(SchemaSymbols.ATT_XPATH, allAttrs[ATT_XPATH1_R]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_FIELD, attrList);

        // for element \"annotation\" - global
        attrList = Container.getContainer(1);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_ANNOTATION, attrList);
        // for element \"annotation\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_ANNOTATION, attrList);

        // for element \"appinfo\" - local
        attrList = Container.getContainer(1);
        // source = anyURI
        attrList.put(SchemaSymbols.ATT_SOURCE, allAttrs[ATT_SOURCE_N]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_APPINFO, attrList);
        fEleAttrsMapL.put(SchemaSymbols.ELT_APPINFO, attrList);

        // for element \"documentation\" - local
        attrList = Container.getContainer(2);
        // source = anyURI
        attrList.put(SchemaSymbols.ATT_SOURCE, allAttrs[ATT_SOURCE_N]);
        // xml:lang = language
        attrList.put(SchemaSymbols.ATT_XML_LANG, allAttrs[ATT_XML_LANG]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_DOCUMENTATION, attrList);
        fEleAttrsMapL.put(SchemaSymbols.ELT_DOCUMENTATION, attrList);

        // for element \"simpleType\" - global
        attrList = Container.getContainer(3);
        // final = (#all | List of (list | union | restriction))
        attrList.put(SchemaSymbols.ATT_FINAL, allAttrs[ATT_FINAL1_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // name = NCName
        attrList.put(SchemaSymbols.ATT_NAME, allAttrs[ATT_NAME_R]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_SIMPLETYPE, attrList);

        // for element \"simpleType\" - local
        attrList = Container.getContainer(2);
        // final = (#all | List of (list | union | restriction))
        attrList.put(SchemaSymbols.ATT_FINAL, allAttrs[ATT_FINAL1_N]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_SIMPLETYPE, attrList);

        // for element \"restriction\" - local
        // already registered for complexType

        // for element \"list\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // itemType = QName
        attrList.put(SchemaSymbols.ATT_ITEMTYPE, allAttrs[ATT_ITEMTYPE_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_LIST, attrList);

        // for element \"union\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // memberTypes = List of QName
        attrList.put(SchemaSymbols.ATT_MEMBERTYPES, allAttrs[ATT_MEMBER_T_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_UNION, attrList);

        // for element \"schema\" - global
        attrList = Container.getContainer(8);
        // attributeFormDefault = (qualified | unqualified) : unqualified
        attrList.put(SchemaSymbols.ATT_ATTRIBUTEFORMDEFAULT, allAttrs[ATT_ATTRIBUTE_FD_D]);
        // blockDefault = (#all | List of (extension | restriction | substitution))  : ''
        attrList.put(SchemaSymbols.ATT_BLOCKDEFAULT, allAttrs[ATT_BLOCK_D_D]);
        // elementFormDefault = (qualified | unqualified) : unqualified
        attrList.put(SchemaSymbols.ATT_ELEMENTFORMDEFAULT, allAttrs[ATT_ELEMENT_FD_D]);
        // finalDefault = (#all | List of (extension | restriction | list | union))  : ''
        attrList.put(SchemaSymbols.ATT_FINALDEFAULT, allAttrs[ATT_FINAL_D_D]);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // targetNamespace = anyURI
        attrList.put(SchemaSymbols.ATT_TARGETNAMESPACE, allAttrs[ATT_TARGET_N_N]);
        // version = token
        attrList.put(SchemaSymbols.ATT_VERSION, allAttrs[ATT_VERSION_N]);
        // xml:lang = language
        attrList.put(SchemaSymbols.ATT_XML_LANG, allAttrs[ATT_XML_LANG]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_SCHEMA, attrList);

        // for element \"include\" - global
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // schemaLocation = anyURI
        attrList.put(SchemaSymbols.ATT_SCHEMALOCATION, allAttrs[ATT_SCHEMA_L_R]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_INCLUDE, attrList);
        // for element \"redefine\" - global
        fEleAttrsMapG.put(SchemaSymbols.ELT_REDEFINE, attrList);

        // for element \"import\" - global
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // namespace = anyURI
        attrList.put(SchemaSymbols.ATT_NAMESPACE, allAttrs[ATT_NAMESPACE_N]);
        // schemaLocation = anyURI
        attrList.put(SchemaSymbols.ATT_SCHEMALOCATION, allAttrs[ATT_SCHEMA_L_N]);
        fEleAttrsMapG.put(SchemaSymbols.ELT_IMPORT, attrList);

        // for element \"length\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // value = nonNegativeInteger
        attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_NNI_N]);
        // fixed = boolean : false
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_LENGTH, attrList);
        // for element \"minLength\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_MINLENGTH, attrList);
        // for element \"maxLength\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_MAXLENGTH, attrList);
        // for element \"fractionDigits\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_FRACTIONDIGITS, attrList);

        // for element \"totalDigits\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // value = positiveInteger
        attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_PI_N]);
        // fixed = boolean : false
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_TOTALDIGITS, attrList);

        // for element \"pattern\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // value = string
        attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_STR_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_PATTERN, attrList);

        // for element \"enumeration\" - local
        attrList = Container.getContainer(2);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // value = anySimpleType
        attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_STR_N]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_ENUMERATION, attrList);

        // for element \"whiteSpace\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // value = preserve | replace | collapse
        attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_WS_N]);
        // fixed = boolean : false
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_WHITESPACE, attrList);

        // for element \"maxInclusive\" - local
        attrList = Container.getContainer(3);
        // id = ID
        attrList.put(SchemaSymbols.ATT_ID, allAttrs[ATT_ID_N]);
        // value = anySimpleType
        attrList.put(SchemaSymbols.ATT_VALUE, allAttrs[ATT_VALUE_STR_N]);
        // fixed = boolean : false
        attrList.put(SchemaSymbols.ATT_FIXED, allAttrs[ATT_FIXED_D]);
        fEleAttrsMapL.put(SchemaSymbols.ELT_MAXINCLUSIVE, attrList);
        // for element \"maxExclusive\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_MAXEXCLUSIVE, attrList);
        // for element \"minInclusive\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_MININCLUSIVE, attrList);
        // for element \"minExclusive\" - local
        fEleAttrsMapL.put(SchemaSymbols.ELT_MINEXCLUSIVE, attrList);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2054530 // fSchemaHandler (<unidirectional association>)
	relation 2054530 --->
	  a role_name "fSchemaHandler" init_value " null" protected
	    comment " used to resolver namespace prefixes
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054530 // fSchemaHandler (<unidirectional association>)
	  b parent class_ref 704130 // XSDHandler
      end

      classrelation 2054658 // fSymbolTable (<unidirectional association>)
	relation 2054658 --->
	  a role_name "fSymbolTable" init_value " null" protected
	    comment " used to store symbols.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054658 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2054786 // fNonSchemaAttrs (<unidirectional association>)
	relation 2054786 --->
	  a role_name "fNonSchemaAttrs" init_value " new HashMap()" protected
	    comment " used to store the mapping from processed element to attributes
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054786 // fNonSchemaAttrs (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2054914 // fNamespaceList (<unidirectional association>)
	relation 2054914 --->
	  a role_name "fNamespaceList" init_value " new Vector()" protected
	    comment " temprory vector, used to hold the namespace list
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054914 // fNamespaceList (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1075714 "fSeen"
	protected explicit_type "boolean"
	multiplicity "[]"
	init_value " new boolean[ATTIDX_COUNT]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " whether this attribute appeared in the current element
"
      end

      attribute 1075842 "fSeenTemp"
	class_attribute private explicit_type "boolean"
	multiplicity "[]"
	init_value " new boolean[ATTIDX_COUNT]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4802946 "XSAttributeChecker"
	public explicit_return_type ""
	nparams 1
	  param inout name "schemaHandler" type class_ref 704130 // XSDHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " constructor. Sets fErrorReproter and get datatype validators"
      end

      operation 4803074 "reset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4803202 "checkAttributes"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "element" type class_ref 648194 // Element
	  param inout name "isGlobal" explicit_type "boolean"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the specified element conforms to the attributes restriction
an array of attribute values is returned. the caller must call
<code>returnAttrArray</code> to return that array.

@param element    which element to check
@param isGlobal   whether a child of &lt;schema&gt; or &lt;redefine&gt;
@param schemaDoc  the document where the element lives in
@return           an array containing attribute values
"
      end

      operation 4803330 "checkAttributes"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "element" type class_ref 648194 // Element
	  param inout name "isGlobal" explicit_type "boolean"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "enumAsQName" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the specified element conforms to the attributes restriction
an array of attribute values is returned. the caller must call
<code>returnAttrArray</code> to return that array. This method also takes
an extra parameter: if the element is \"enumeration\", whether to make a
copy of the namespace context, so that the value can be resolved as a
QName later.

@param element      which element to check
@param isGlobal     whether a child of &lt;schema&gt; or &lt;redefine&gt;
@param schemaDoc    the document where the element lives in
@param enumAsQName  whether to tread enumeration value as QName
@return             an array containing attribute values
"
      end

      operation 4803458 "validate"
	private return_type class_ref 129538 // Object
	nparams 5
	  param inout name "attrValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "attr" type class_ref 128130 // String
	  param inout name "ivalue" type class_ref 128130 // String
	  param in name "dvIndex" explicit_type "int"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4803586 "reportSchemaFatalError"
	package explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4803714 "reportSchemaError"
	package explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4803842 "checkNonSchemaAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "grammarBucket" type class_ref 703362 // XSGrammarBucket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " validate attriubtes from non-schema namespaces
 REVISIT: why we store the attributes in this way? why not just a list
          of structure {element node, attr name/qname, attr value)?
 REVISIT: pass the proper element node to reportSchemaError"
      end

      operation 4803970 "normalize"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param in name "ws" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " normalize the string according to the whiteSpace facet"
      end

      attribute 1075970 "INIT_POOL_SIZE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the following part implements an attribute-value-array pool.
 when checkAttribute is called, it calls getAvailableArray to get
 an array from the pool; when the caller is done with the array,
 it calls returnAttrArray to return that array to the pool.
 initial size of the array pool. 10 is big enough
"
      end

      attribute 1076098 "INC_POOL_SIZE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the incremental size of the array pool
"
      end

      classrelation 2055042 // fArrayPool (<unidirectional association>)
	relation 2055042 --->
	  a role_name "fArrayPool" multiplicity "[][]" init_value " new Object[INIT_POOL_SIZE][ATTIDX_COUNT]" package
	    comment " the array pool
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2055042 // fArrayPool (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2055170 // fTempArray (<unidirectional association>)
	relation 2055170 --->
	  a role_name "fTempArray" multiplicity "[]" init_value " new Object[ATTIDX_COUNT]" class_relation private
	    comment " used to clear the returned array
 I think System.arrayCopy is more efficient than setting 35 fields to null
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2055170 // fTempArray (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1076226 "fPoolPos"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " current position of the array pool (# of arrays not returned)
"
      end

      operation 4804098 "getAvailableArray"
	protected return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " get the next available array"
      end

      operation 4804226 "returnAttrArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "attrArray" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return an array back to the pool"
      end

      operation 4804354 "resolveNamespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 648194 // Element
	  param inout name "attrs" type class_ref 648066 // Attr
	multiplicity "[]"
	  param inout name "nsSupport" type class_ref 702594 // SchemaNamespaceSupport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 714370 "XSDocumentInfo"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Objects of this class hold all information pecular to a
particular XML Schema document.  This is needed because
namespace bindings and other settings on the <schema/> element
affect the contents of that schema document alone.

@xerces.internal

@author Neil Graham, IBM
@version $Id: XSDocumentInfo.java,v 1.5 2007/10/15 22:27:48 spericas Exp $
"
      classrelation 2075138 // fNamespaceSupport (<unidirectional association>)
	relation 2075138 --->
	  a role_name "fNamespaceSupport" protected
	    comment " Data
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2075138 // fNamespaceSupport (<unidirectional association>)
	  b parent class_ref 702594 // SchemaNamespaceSupport
      end

      classrelation 2075266 // fNamespaceSupportRoot (<unidirectional association>)
	relation 2075266 --->
	  a role_name "fNamespaceSupportRoot" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2075266 // fNamespaceSupportRoot (<unidirectional association>)
	  b parent class_ref 702594 // SchemaNamespaceSupport
      end

      classrelation 2075394 // SchemaNamespaceSupportStack (<unidirectional association>)
	relation 2075394 --->
	  a role_name "SchemaNamespaceSupportStack" init_value " new Stack()" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2075394 // SchemaNamespaceSupportStack (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      attribute 1082242 "fAreLocalAttributesQualified"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " schema's attributeFormDefault
"
      end

      attribute 1082370 "fAreLocalElementsQualified"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " elementFormDefault
"
      end

      attribute 1082498 "fBlockDefault"
	protected explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " [block | final]Default
"
      end

      attribute 1082626 "fFinalDefault"
	protected explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2075522 // fTargetNamespace (<unidirectional association>)
	relation 2075522 --->
	  a role_name "fTargetNamespace" package
	    comment " targetNamespace
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2075522 // fTargetNamespace (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1082754 "fIsChameleonSchema"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " represents whether this is a chameleon schema (i.e., whether its TNS is natural or comes from without)
"
      end

      classrelation 2075650 // fSchemaElement (<unidirectional association>)
	relation 2075650 --->
	  a role_name "fSchemaElement" protected
	    comment " the root of the schema Document tree itself
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2075650 // fSchemaElement (<unidirectional association>)
	  b parent class_ref 648194 // Element
      end

      classrelation 2075778 // fImportedNS (<unidirectional association>)
	relation 2075778 --->
	  a role_name "fImportedNS" init_value " new Vector()" package
	    comment " all namespaces that this document can refer to
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2075778 // fImportedNS (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2075906 // fValidationContext (<unidirectional association>)
	relation 2075906 --->
	  a role_name "fValidationContext" init_value " new ValidationState()" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2075906 // fValidationContext (<unidirectional association>)
	  b parent class_ref 677378 // ValidationState
      end

      classrelation 2076034 // fSymbolTable (<unidirectional association>)
	relation 2076034 --->
	  a role_name "fSymbolTable" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2076034 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2076162 // fAttrChecker (<unidirectional association>)
	relation 2076162 --->
	  a role_name "fAttrChecker" protected
	    comment " attribute checker to which we'll return the attributes
 once we've been told that we're done with them
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2076162 // fAttrChecker (<unidirectional association>)
	  b parent class_ref 713986 // XSAttributeChecker
      end

      classrelation 2076290 // fSchemaAttrs (<unidirectional association>)
	relation 2076290 --->
	  a role_name "fSchemaAttrs" multiplicity "[]" protected
	    comment " array of objects on the schema's root element.  This is null
 once returnSchemaAttrs has been called.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2076290 // fSchemaAttrs (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2076418 // fAnnotations (<unidirectional association>)
	relation 2076418 --->
	  a role_name "fAnnotations" init_value " null" protected
	    comment " list of annotations contained in the schema document. This is null
 once removeAnnotations has been called.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2076418 // fAnnotations (<unidirectional association>)
	  b parent class_ref 713858 // XSAnnotationInfo
      end

      operation 4833666 "XSDocumentInfo"
	package explicit_return_type ""
	nparams 3
	  param inout name "schemaRoot" type class_ref 648194 // Element
	  param inout name "attrChecker" type class_ref 713986 // XSAttributeChecker
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	nexceptions 1
	  exception class_ref 703618 // XMLSchemaException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " note that the caller must ensure to call returnSchemaAttrs()
 to avoid memory leaks!"
      end

      operation 4833794 "initNamespaceSupport"
	private explicit_return_type "void"
	nparams 1
	  param inout name "schemaRoot" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize namespace support by collecting all of the namespace
declarations in the root's ancestors. This is necessary to
support schemas fragments, i.e. schemas embedded in other
documents. See,

https://jaxp.dev.java.net/issues/show_bug.cgi?id=43

Requires the DOM to be created with namespace support enabled.
"
      end

      operation 4833922 "backupNSSupport"
	package explicit_return_type "void"
	nparams 1
	  param inout name "nsSupport" type class_ref 702594 // SchemaNamespaceSupport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " backup the current ns support, and use the one passed-in.
 if no ns support is passed-in, use the one for <schema> element"
      end

      operation 4834050 "restoreNSSupport"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4834178 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " some Object methods"
      end

      operation 4834306 "addAllowedNS"
	public explicit_return_type "void"
	nparams 1
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4834434 "isAllowedNS"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2076546 // fReportedTNS (<unidirectional association>)
	relation 2076546 --->
	  a role_name "fReportedTNS" init_value " null" private
	    comment " store whether we have reported an error about that this document
 can't access components from the given namespace
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2076546 // fReportedTNS (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 4834562 "needReportTNSError"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " check whether we need to report an error against the given uri.
 if we have reported an error, then we don't need to report again;
 otherwise we reported the error, and remember this fact."
      end

      operation 4834690 "getSchemaAttrs"
	package return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return the attributes on the schema element itself:"
      end

      operation 4834818 "returnSchemaAttrs"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " deallocate the storage set aside for the schema element's
 attributes"
      end

      operation 4834946 "addAnnotation"
	package explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 713858 // XSAnnotationInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " adds an annotation to the list of annotations"
      end

      operation 4835074 "getAnnotations"
	package return_type class_ref 713858 // XSAnnotationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " returns the list of annotations conatined in the
 schema document or null if the document contained no annotations."
      end

      operation 4835202 "removeAnnotations"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removes reference to annotation list"
      end
    end

    class 714498 "OneAttr"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2055298 // name (<unidirectional association>)
	relation 2055298 --->
	  a role_name "name" public
	    comment " name of the attribute
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2055298 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1076354 "dvIndex"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " index of the datatype validator
"
      end

      attribute 1076482 "valueIndex"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " whether it's optional, and has default value
"
      end

      classrelation 2055426 // dfltValue (<unidirectional association>)
	relation 2055426 --->
	  a role_name "dfltValue" public
	    comment " the default value of this attribute
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2055426 // dfltValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 4804482 "OneAttr"
	public explicit_return_type ""
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param in name "dvIndex" explicit_type "int"
	  param in name "valueIndex" explicit_type "int"
	  param inout name "dfltValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 714626 "Container"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 1076610 "THRESHOLD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4804610 "getContainer"
	class_operation package return_type class_ref 714626 // Container
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4804738 "put"
	abstract package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 714498 // OneAttr
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4804866 "get"
	abstract package return_type class_ref 714498 // OneAttr
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2055554 // values (<unidirectional association>)
	relation 2055554 --->
	  a role_name "values" multiplicity "[]" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2055554 // values (<unidirectional association>)
	  b parent class_ref 714498 // OneAttr
      end

      attribute 1076738 "pos"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 714754 "SmallContainer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2055682 // <generalisation>
	relation 2055682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2055682 // <generalisation>
	  b parent class_ref 714626 // Container
      end

      classrelation 2055810 // keys (<unidirectional association>)
	relation 2055810 --->
	  a role_name "keys" multiplicity "[]" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2055810 // keys (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4804994 "SmallContainer"
	package explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4805122 "put"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 714498 // OneAttr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4805250 "get"
	package return_type class_ref 714498 // OneAttr
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 714882 "LargeContainer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2055938 // <generalisation>
	relation 2055938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2055938 // <generalisation>
	  b parent class_ref 714626 // Container
      end

      classrelation 2056066 // items (<unidirectional association>)
	relation 2056066 --->
	  a role_name "items" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056066 // items (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 4805378 "LargeContainer"
	package explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4805506 "put"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 714498 // OneAttr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4805634 "get"
	package return_type class_ref 714498 // OneAttr
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 715010 "XSDAbstractIDConstraintTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class contains code that all three IdentityConstraint
traversers (the XSDUniqueTraverser, XSDKeyTraverser and
XSDKeyrefTraverser) rely upon.

@xerces.internal

@version $Id: XSDAbstractIDConstraintTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2057474 // <generalisation>
	relation 2057474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2057474 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      operation 4807426 "XSDAbstractIDConstraintTraverser"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4807554 "traverseIdentityConstraint"
	package explicit_return_type "boolean"
	nparams 4
	  param inout name "ic" type class_ref 701442 // IdentityConstraint
	  param inout name "icElem" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "icElemAttrs" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 715138 "XSDAbstractTraverser"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class <code>XSDAbstractTraverser</code> serves as the base class for all
other <code>XSD???Traverser</code>s. It holds the common data and provide
a unified way to initialize these data.

@xerces.internal

@author Elena Litani, IBM
@author Rahul Srivastava, Sun Microsystems Inc.
@author Neeraj Bajaj, Sun Microsystems Inc.

@version $Id: XSDAbstractTraverser.java,v 1.8 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2056194 // NO_NAME (<unidirectional association>)
	relation 2056194 --->
	  a role_name "NO_NAME" init_value " \"(no name)\"" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056194 // NO_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1076866 "NOT_ALL_CONTEXT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flags for checkOccurrences to indicate any special
 restrictions on minOccurs and maxOccurs relating to \"all\".
    NOT_ALL_CONTEXT    - not processing an <all>
    PROCESSING_ALL_EL  - processing an <element> in an <all>
    GROUP_REF_WITH_ALL - processing <group> reference that contained <all>
    CHILD_OF_GROUP     - processing a child of a model group definition
    PROCESSING_ALL_GP  - processing an <all> group itself
"
      end

      attribute 1076994 "PROCESSING_ALL_EL"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1077122 "GROUP_REF_WITH_ALL"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1077250 "CHILD_OF_GROUP"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1077378 "PROCESSING_ALL_GP"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2056322 // fSchemaHandler (<unidirectional association>)
	relation 2056322 --->
	  a role_name "fSchemaHandler" init_value " null" protected
	    comment "Shared data
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056322 // fSchemaHandler (<unidirectional association>)
	  b parent class_ref 704130 // XSDHandler
      end

      classrelation 2056450 // fSymbolTable (<unidirectional association>)
	relation 2056450 --->
	  a role_name "fSymbolTable" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056450 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 2056578 // fAttrChecker (<unidirectional association>)
	relation 2056578 --->
	  a role_name "fAttrChecker" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056578 // fAttrChecker (<unidirectional association>)
	  b parent class_ref 713986 // XSAttributeChecker
      end

      attribute 1077506 "fValidateAnnotations"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2056706 // fValidationState (<unidirectional association>)
	relation 2056706 --->
	  a role_name "fValidationState" init_value " new ValidationState()" package
	    comment " used to validate default/fixed attribute values
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056706 // fValidationState (<unidirectional association>)
	  b parent class_ref 677378 // ValidationState
      end

      operation 4805762 "XSDAbstractTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "attrChecker" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4805890 "reset"
	package explicit_return_type "void"
	nparams 3
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "validateAnnotations" explicit_type "boolean"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4806018 "traverseAnnotationDecl"
	package return_type class_ref 699778 // XSAnnotationImpl
	nparams 4
	  param inout name "annotationDecl" type class_ref 648194 // Element
	  param inout name "parentAttrs" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "isGlobal" explicit_type "boolean"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " traverse the annotation declaration
 REVISIT: how to pass the parentAttrs? as DOM attributes?
          as name/value pairs (string)? in parsed form?
 @return XSAnnotationImpl object"
      end

      operation 4806146 "traverseSyntheticAnnotation"
	package return_type class_ref 699778 // XSAnnotationImpl
	nparams 5
	  param inout name "annotationParent" type class_ref 648194 // Element
	  param inout name "initialContent" type class_ref 128130 // String
	  param inout name "parentAttrs" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "isGlobal" explicit_type "boolean"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2056834 // fQNameDV (<unidirectional association>)
	relation 2056834 --->
	  a role_name "fQNameDV" init_value " (XSSimpleType)SchemaGrammar.SG_SchemaNS.getGlobalTypeDecl(SchemaSymbols.ATTVAL_QNAME)" class_relation const_relation private
	    comment " the QName simple type used to resolve qnames
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056834 // fQNameDV (<unidirectional association>)
	  b parent class_ref 679810 // XSSimpleType
      end

      classrelation 2056962 // fPattern (<unidirectional association>)
	relation 2056962 --->
	  a role_name "fPattern" init_value " new StringBuffer()" private
	    comment " Temp data structures to be re-used in traversing facets
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056962 // fPattern (<unidirectional association>)
	  b parent class_ref 166018 // StringBuffer
      end

      classrelation 2057090 // xsFacets (<unidirectional association>)
	relation 2057090 --->
	  a role_name "xsFacets" init_value " new XSFacets()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2057090 // xsFacets (<unidirectional association>)
	  b parent class_ref 680322 // XSFacets
      end

      class 715266 "FacetInfo"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2057218 // facetdata (<unidirectional association>)
	  relation 2057218 --->
	    a role_name "facetdata" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2057218 // facetdata (<unidirectional association>)
	    b parent class_ref 680322 // XSFacets
	end

	classrelation 2057346 // nodeAfterFacets (<unidirectional association>)
	  relation 2057346 --->
	    a role_name "nodeAfterFacets" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2057346 // nodeAfterFacets (<unidirectional association>)
	    b parent class_ref 648194 // Element
	end

	attribute 1077634 "fPresentFacets"
	  const_attribute package explicit_type "short"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1077762 "fFixedFacets"
	  const_attribute package explicit_type "short"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 4806274 "FacetInfo"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "facets" type class_ref 680322 // XSFacets
	    param inout name "nodeAfterFacets" type class_ref 648194 // Element
	    param in name "presentFacets" explicit_type "short"
	    param in name "fixedFacets" explicit_type "short"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 4806402 "traverseFacets"
	package return_type class_ref 715266 // FacetInfo
	nparams 3
	  param inout name "content" type class_ref 648194 // Element
	  param inout name "baseValidator" type class_ref 679810 // XSSimpleType
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4806530 "containsQName"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "type" type class_ref 679810 // XSSimpleType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return whether QName/NOTATION is part of the given type"
      end

      operation 4806658 "traverseAttrsAndAttrGrps"
	package return_type class_ref 648194 // Element
	nparams 5
	  param inout name "firstAttr" type class_ref 648194 // Element
	  param inout name "attrGrp" type class_ref 700162 // XSAttributeGroupDecl
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param inout name "enclosingCT" type class_ref 700674 // XSComplexTypeDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Traverse a set of attribute and attribute group elements
 Needed by complexType and attributeGroup traversal
 This method will return the first non-attribute/attrgrp found
"
      end

      operation 4806786 "reportSchemaError"
	package explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "ele" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4806914 "checkNotationType"
	package explicit_return_type "void"
	nparams 3
	  param inout name "refName" type class_ref 128130 // String
	  param inout name "typeDecl" type class_ref 655490 // XSTypeDefinition
	  param inout name "elem" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Element/Attribute traversers call this method to check whether
the type is NOTATION without enumeration facet
"
      end

      operation 4807042 "checkOccurrences"
	protected return_type class_ref 701314 // XSParticleDecl
	nparams 5
	  param inout name "particle" type class_ref 701314 // XSParticleDecl
	  param inout name "particleName" type class_ref 128130 // String
	  param inout name "parent" type class_ref 648194 // Element
	  param in name "allContextFlags" explicit_type "int"
	  param in name "defaultVals" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks constraints for minOccurs, maxOccurs"
      end

      operation 4807170 "processAttValue"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "original" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4807298 "escapeAttValue"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "original" type class_ref 128130 // String
	  param in name "from" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " this is not terribly performant!"
      end
    end

    class 715394 "XSDAbstractParticleTraverser"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@xerces.internal

@author Elena Litani, IBM
@author Sandy Gao, IBM
@version $Id: XSDAbstractParticleTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2057602 // <generalisation>
	relation 2057602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2057602 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      operation 4807682 "XSDAbstractParticleTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4807810 "traverseAll"
	package return_type class_ref 701314 // XSParticleDecl
	nparams 5
	  param inout name "allDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param in name "allContextFlags" explicit_type "int"
	  param inout name "parent" type class_ref 680706 // XSObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Traverse the \"All\" declaration

&lt;all
  id = ID
  maxOccurs = 1 : 1
  minOccurs = (0 | 1) : 1&gt;
  Content: (annotation? , element*)
&lt;/all&gt;
"
      end

      operation 4807938 "traverseSequence"
	package return_type class_ref 701314 // XSParticleDecl
	nparams 5
	  param inout name "seqDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param in name "allContextFlags" explicit_type "int"
	  param inout name "parent" type class_ref 680706 // XSObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse the Sequence declaration

<sequence
  id = ID
  maxOccurs = string
  minOccurs = nonNegativeInteger>
  Content: (annotation? , (element | group | choice | sequence | any)*)
</sequence>

@param seqDecl
@param schemaDoc
@param grammar
@return
"
      end

      operation 4808066 "traverseChoice"
	package return_type class_ref 701314 // XSParticleDecl
	nparams 5
	  param inout name "choiceDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param in name "allContextFlags" explicit_type "int"
	  param inout name "parent" type class_ref 680706 // XSObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse the Choice declaration

<choice
  id = ID
  maxOccurs = string
  minOccurs = nonNegativeInteger>
  Content: (annotation? , (element | group | choice | sequence | any)*)
</choice>

@param choiceDecl
@param schemaDoc
@param grammar
@return
"
      end

      operation 4808194 "traverseSeqChoice"
	private return_type class_ref 701314 // XSParticleDecl
	nparams 6
	  param inout name "decl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param in name "allContextFlags" explicit_type "int"
	  param inout name "choice" explicit_type "boolean"
	  param inout name "parent" type class_ref 680706 // XSObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Common traversal for <choice> and <sequence>

@param decl
@param schemaDoc
@param grammar
@param choice    If traversing <choice> this parameter is true.
@return
"
      end

      operation 4808322 "hasAllContent"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "particle" type class_ref 701314 // XSParticleDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determines whether a content spec tree represents an \"all\" content model"
      end

      class 715522 "ParticleArray"
	visibility protected 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2057730 // fParticles (<unidirectional association>)
	  relation 2057730 --->
	    a role_name "fParticles" multiplicity "[]" init_value " new XSParticleDecl[10]" package
	      comment " big array to contain all particles
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2057730 // fParticles (<unidirectional association>)
	    b parent class_ref 701314 // XSParticleDecl
	end

	attribute 1077890 "fPos"
	  package explicit_type "int"
	  multiplicity "[]"
	  init_value " new int[5]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " the ending position of particles in the array for each context
 index 0 is reserved, with value 0. index 1 is used for the fist
 context. so that the number of particles for context 'i' can be
 computed simply by fPos[i] - fPos[i-1].
"
	end

	attribute 1078018 "fContextCount"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " number of contexts
"
	end

	operation 4808450 "pushContext"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " start a new context (start traversing a new model group)"
	end

	operation 4808578 "getParticleCount"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " get the number of particles of this context (model group)"
	end

	operation 4808706 "addParticle"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "particle" type class_ref 701314 // XSParticleDecl
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " add a particle to the current context"
	end

	operation 4808834 "popContext"
	  package return_type class_ref 701314 // XSParticleDecl
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " end the current context, and return an array of particles"
	end
      end

      classrelation 2057858 // fPArray (<unidirectional association>)
	relation 2057858 --->
	  a role_name "fPArray" init_value " new ParticleArray()" package
	    comment " the big particle array to hold all particles in model groups
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2057858 // fPArray (<unidirectional association>)
	  b parent class_ref 715522 // ParticleArray
      end
    end

    class 715650 "XSDAttributeGroupTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The attribute group definition schema component traverser.

<attributeGroup
  id = ID
  name = NCName
  ref = QName
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, ((attribute | attributeGroup)*, anyAttribute?))
</attributeGroup>

@xerces.internal

@author Rahul Srivastava, Sun Microsystems Inc.
@author Sandy Gao, IBM

@version $Id: XSDAttributeGroupTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2057986 // <generalisation>
	relation 2057986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2057986 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      operation 4808962 "XSDAttributeGroupTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4809090 "traverseLocal"
	package return_type class_ref 700162 // XSAttributeGroupDecl
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4809218 "traverseGlobal"
	package return_type class_ref 700162 // XSAttributeGroupDecl
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " traverseLocal"
      end
    end

    class 715778 "XSDAttributeTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The attribute declaration schema component traverser.

<attribute
  default = string
  fixed = string
  form = (qualified | unqualified)
  id = ID
  name = NCName
  ref = QName
  type = QName
  use = (optional | prohibited | required) : optional
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, (simpleType?))
</attribute>

@xerces.internal

@author Sandy Gao, IBM
@author Neeraj Bajaj, Sun Microsystems, inc.
@version $Id: XSDAttributeTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2058114 // <generalisation>
	relation 2058114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2058114 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      operation 4809346 "XSDAttributeTraverser"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4809474 "traverseLocal"
	protected return_type class_ref 705666 // XSAttributeUseImpl
	nparams 4
	  param inout name "attrDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param inout name "enclosingCT" type class_ref 700674 // XSComplexTypeDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4809602 "traverseGlobal"
	protected return_type class_ref 700034 // XSAttributeDecl
	nparams 3
	  param inout name "attrDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4809730 "traverseNamedAttr"
	package return_type class_ref 700034 // XSAttributeDecl
	nparams 6
	  param inout name "attrDecl" type class_ref 648194 // Element
	  param inout name "attrValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param inout name "isGlobal" explicit_type "boolean"
	  param inout name "enclosingCT" type class_ref 700674 // XSComplexTypeDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse a globally declared attribute.

@param  attrDecl
@param  attrValues
@param  schemaDoc
@param  grammar
@param  isGlobal
@return the attribute declaration index
"
      end

      operation 4809858 "checkDefaultValid"
	package explicit_return_type "void"
	nparams 1
	  param inout name "attribute" type class_ref 700034 // XSAttributeDecl
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " throws an error if the constraint value is invalid for the given type"
      end

      operation 4809986 "checkDefaultValid"
	package explicit_return_type "void"
	nparams 1
	  param inout name "attrUse" type class_ref 705666 // XSAttributeUseImpl
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " throws an error if the constraint value is invalid for the given type"
      end
    end

    class 715906 "XSDComplexTypeTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A complex type definition schema component traverser.

<complexType
  abstract = boolean : false
  block = (#all | List of (extension | restriction))
  final = (#all | List of (extension | restriction))
  id = ID
  mixed = boolean : false
  name = NCName
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, (simpleContent | complexContent |
           ((group | all | choice | sequence)?,
           ((attribute | attributeGroup)*, anyAttribute?))))
</complexType>

@xerces.internal

@version $Id: XSDComplexTypeTraverser.java,v 1.8 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2058242 // <generalisation>
	relation 2058242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2058242 // <generalisation>
	  b parent class_ref 715394 // XSDAbstractParticleTraverser
      end

      attribute 1078146 "GLOBAL_NUM"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " size of stack to hold globals:
"
      end

      classrelation 2058370 // fErrorContent (<unidirectional association>)
	relation 2058370 --->
	  a role_name "fErrorContent" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058370 // fErrorContent (<unidirectional association>)
	  b parent class_ref 701314 // XSParticleDecl
      end

      classrelation 2058498 // fErrorWildcard (<unidirectional association>)
	relation 2058498 --->
	  a role_name "fErrorWildcard" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058498 // fErrorWildcard (<unidirectional association>)
	  b parent class_ref 707074 // XSWildcardDecl
      end

      operation 4810114 "getErrorContent"
	class_operation private return_type class_ref 701314 // XSParticleDecl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4810242 "getErrorWildcard"
	class_operation private return_type class_ref 707074 // XSWildcardDecl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2058626 // fName (<unidirectional association>)
	relation 2058626 --->
	  a role_name "fName" init_value " null" private
	    comment " globals for building XSComplexTypeDecls
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058626 // fName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2058754 // fTargetNamespace (<unidirectional association>)
	relation 2058754 --->
	  a role_name "fTargetNamespace" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058754 // fTargetNamespace (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1078274 "fDerivedBy"
	private explicit_type "short"
	init_value " XSConstants.DERIVATION_RESTRICTION"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1078402 "fFinal"
	private explicit_type "short"
	init_value " XSConstants.DERIVATION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1078530 "fBlock"
	private explicit_type "short"
	init_value " XSConstants.DERIVATION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1078658 "fContentType"
	private explicit_type "short"
	init_value " XSComplexTypeDecl.CONTENTTYPE_EMPTY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2058882 // fBaseType (<unidirectional association>)
	relation 2058882 --->
	  a role_name "fBaseType" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058882 // fBaseType (<unidirectional association>)
	  b parent class_ref 655490 // XSTypeDefinition
      end

      classrelation 2059010 // fAttrGrp (<unidirectional association>)
	relation 2059010 --->
	  a role_name "fAttrGrp" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2059010 // fAttrGrp (<unidirectional association>)
	  b parent class_ref 700162 // XSAttributeGroupDecl
      end

      classrelation 2059138 // fXSSimpleType (<unidirectional association>)
	relation 2059138 --->
	  a role_name "fXSSimpleType" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2059138 // fXSSimpleType (<unidirectional association>)
	  b parent class_ref 679810 // XSSimpleType
      end

      classrelation 2059266 // fParticle (<unidirectional association>)
	relation 2059266 --->
	  a role_name "fParticle" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2059266 // fParticle (<unidirectional association>)
	  b parent class_ref 701314 // XSParticleDecl
      end

      attribute 1078786 "fIsAbstract"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2059394 // fComplexTypeDecl (<unidirectional association>)
	relation 2059394 --->
	  a role_name "fComplexTypeDecl" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2059394 // fComplexTypeDecl (<unidirectional association>)
	  b parent class_ref 700674 // XSComplexTypeDecl
      end

      classrelation 2059522 // fAnnotations (<unidirectional association>)
	relation 2059522 --->
	  a role_name "fAnnotations" multiplicity "[]" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2059522 // fAnnotations (<unidirectional association>)
	  b parent class_ref 699778 // XSAnnotationImpl
      end

      classrelation 2059650 // fGlobalStore (<unidirectional association>)
	relation 2059650 --->
	  a role_name "fGlobalStore" multiplicity "[]" init_value " null" private
	    comment " our own little stack to retain state when getGlobalDecls is called:
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2059650 // fGlobalStore (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1078914 "fGlobalStorePos"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4810370 "XSDComplexTypeTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1079042 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 716034 "ComplexTypeRecoverableError"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2059778 // <generalisation>
	  relation 2059778 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2059778 // <generalisation>
	    b parent class_ref 132226 // Exception
	end

	attribute 1079170 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 6802729912091130335L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2059906 // errorSubstText (<unidirectional association>)
	  relation 2059906 --->
	    a role_name "errorSubstText" multiplicity "[]" init_value "null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2059906 // errorSubstText (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 2060034 // errorElem (<unidirectional association>)
	  relation 2060034 --->
	    a role_name "errorElem" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2060034 // errorElem (<unidirectional association>)
	    b parent class_ref 648194 // Element
	end

	operation 4810498 "ComplexTypeRecoverableError"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4810626 "ComplexTypeRecoverableError"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "msgKey" type class_ref 128130 // String
	    param inout name "args" type class_ref 129538 // Object
	  multiplicity "[]"
	    param inout name "e" type class_ref 648194 // Element
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 4810754 "traverseLocal"
	package return_type class_ref 700674 // XSComplexTypeDecl
	nparams 3
	  param inout name "complexTypeNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse local complexType declarations

@param Element
@param XSDocumentInfo
@param SchemaGrammar
@return XSComplexTypeDecl
"
      end

      operation 4810882 "traverseGlobal"
	package return_type class_ref 700674 // XSComplexTypeDecl
	nparams 3
	  param inout name "complexTypeNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse global complexType declarations

@param Element
@param XSDocumentInfo
@param SchemaGrammar
@return XSComplexTypeDecXSComplexTypeDecl
"
      end

      operation 4811010 "traverseComplexTypeDecl"
	private return_type class_ref 700674 // XSComplexTypeDecl
	nparams 5
	  param inout name "complexTypeDecl" type class_ref 648194 // Element
	  param inout name "complexTypeName" type class_ref 128130 // String
	  param inout name "attrValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4811138 "traverseSimpleContent"
	private explicit_return_type "void"
	nparams 3
	  param inout name "simpleContentElement" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	nexceptions 1
	  exception class_ref 716034 // ComplexTypeRecoverableError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4811266 "traverseComplexContent"
	private explicit_return_type "void"
	nparams 4
	  param inout name "complexContentElement" type class_ref 648194 // Element
	  param inout name "mixedOnType" explicit_type "boolean"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	nexceptions 1
	  exception class_ref 716034 // ComplexTypeRecoverableError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4811394 "mergeAttributes"
	private explicit_return_type "void"
	nparams 5
	  param inout name "fromAttrGrp" type class_ref 700162 // XSAttributeGroupDecl
	  param inout name "toAttrGrp" type class_ref 700162 // XSAttributeGroupDecl
	  param inout name "typeName" type class_ref 128130 // String
	  param inout name "extension" explicit_type "boolean"
	  param inout name "elem" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 716034 // ComplexTypeRecoverableError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end of traverseComplexContent
 This method merges attribute uses from the base, into the derived set.
 LM: may want to merge with attributeGroup processing."
      end

      operation 4811522 "processComplexContent"
	private explicit_return_type "void"
	nparams 5
	  param inout name "complexContentChild" type class_ref 648194 // Element
	  param inout name "isMixed" explicit_type "boolean"
	  param inout name "isDerivation" explicit_type "boolean"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	nexceptions 1
	  exception class_ref 716034 // ComplexTypeRecoverableError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4811650 "isAttrOrAttrGroup"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end processComplexContent"
      end

      operation 4811778 "traverseSimpleContentDecl"
	private explicit_return_type "void"
	nparams 1
	  param inout name "simpleContentDecl" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4811906 "traverseComplexContentDecl"
	private explicit_return_type "void"
	nparams 2
	  param inout name "complexContentDecl" type class_ref 648194 // Element
	  param inout name "mixedOnComplexTypeDecl" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4812034 "genAnonTypeName"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "complexTypeDecl" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate a name for an anonymous type
"
      end

      operation 4812162 "handleComplexTypeError"
	private explicit_return_type "void"
	nparams 3
	  param inout name "messageId" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "e" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4812290 "contentBackup"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4812418 "contentRestore"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4812546 "addAnnotation"
	private explicit_return_type "void"
	nparams 1
	  param inout name "annotation" type class_ref 699778 // XSAnnotationImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 716162 "XSDElementTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The element declaration schema component traverser.
<element
  abstract = boolean : false
  block = (#all | List of (extension | restriction | substitution))
  default = string
  final = (#all | List of (extension | restriction))
  fixed = string
  form = (qualified | unqualified)
  id = ID
  maxOccurs = (nonNegativeInteger | unbounded)  : 1
  minOccurs = nonNegativeInteger : 1
  name = NCName
  nillable = boolean : false
  ref = QName
  substitutionGroup = QName
  type = QName
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, ((simpleType | complexType)?, (unique | key | keyref)*))
</element>

@xerces.internal

@author Sandy Gao, IBM

@version $Id: XSDElementTraverser.java,v 1.9 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2060162 // <generalisation>
	relation 2060162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2060162 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      classrelation 2060290 // fTempElementDecl (<unidirectional association>)
	relation 2060290 --->
	  a role_name "fTempElementDecl" init_value " new XSElementDecl()" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060290 // fTempElementDecl (<unidirectional association>)
	  b parent class_ref 700290 // XSElementDecl
      end

      attribute 1079298 "fDeferTraversingLocalElements"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " this controls what happens when a local element is encountered.
 We may not encounter all local elements when first parsing.
"
      end

      operation 4812674 "XSDElementTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4812802 "traverseLocal"
	package return_type class_ref 701314 // XSParticleDecl
	nparams 5
	  param inout name "elmDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param in name "allContextFlags" explicit_type "int"
	  param inout name "parent" type class_ref 680706 // XSObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse a locally declared element (or an element reference).

To handle the recursive cases efficiently, we delay the traversal
and return an empty particle node. We'll fill in this particle node
later after we've done with all the global declarations.
This method causes a number of data structures in the schema handler to be filled in.

@param  elmDecl
@param  schemaDoc
@param  grammar
@return the particle
"
      end

      operation 4812930 "traverseLocal"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "particle" type class_ref 701314 // XSParticleDecl
	  param inout name "elmDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param in name "allContextFlags" explicit_type "int"
	  param inout name "parent" type class_ref 680706 // XSObject
	  param inout name "localNSDecls" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6}[] ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse a locally declared element (or an element reference).

This is the real traversal method. It's called after we've done with
all the global declarations.

@param  index
"
      end

      operation 4813058 "traverseGlobal"
	package return_type class_ref 700290 // XSElementDecl
	nparams 3
	  param inout name "elmDecl" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse a globally declared element.

@param  elmDecl
@param  schemaDoc
@param  grammar
@return the element declaration
"
      end

      operation 4813186 "traverseNamedElement"
	package return_type class_ref 700290 // XSElementDecl
	nparams 6
	  param inout name "elmDecl" type class_ref 648194 // Element
	  param inout name "attrValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	  param inout name "isGlobal" explicit_type "boolean"
	  param inout name "parent" type class_ref 680706 // XSObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse a globally declared element.

@param  elmDecl
@param  attrValues
@param  schemaDoc
@param  grammar
@param  isGlobal
@return the element declaration
"
      end

      operation 4813314 "reset"
	package explicit_return_type "void"
	nparams 3
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "validateAnnotations" explicit_type "boolean"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 716290 "XSDGroupTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The model group schema component traverser.

<group
  name = NCName>
  Content: (annotation?, (all | choice | sequence))
</group>

@xerces.internal

@author Rahul Srivastava, Sun Microsystems Inc.
@author Elena Litani, IBM
@author Lisa Martin,  IBM
@version $Id: XSDGroupTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2060418 // <generalisation>
	relation 2060418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2060418 // <generalisation>
	  b parent class_ref 715394 // XSDAbstractParticleTraverser
      end

      operation 4813442 "XSDGroupTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4813570 "traverseLocal"
	package return_type class_ref 701314 // XSParticleDecl
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4813698 "traverseGlobal"
	package return_type class_ref 700418 // XSGroupDecl
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " traverseLocal"
      end
    end

    class 716546 "XSDKeyrefTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class contains code that is used to traverse <keyref>s.

@xerces.internal

@author Neil Graham, IBM
@version $Id: XSDKeyrefTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2074882 // <generalisation>
	relation 2074882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2074882 // <generalisation>
	  b parent class_ref 715010 // XSDAbstractIDConstraintTraverser
      end

      operation 4833154 "XSDKeyrefTraverser"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4833282 "traverse"
	package explicit_return_type "void"
	nparams 4
	  param inout name "krElem" type class_ref 648194 // Element
	  param inout name "element" type class_ref 700290 // XSElementDecl
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 716674 "XSDNotationTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The notation declaration schema component traverser.

<notation
  id = ID
  name = NCName
  public = anyURI
  system = anyURI
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?)
</notation>

@xerces.internal

@author Rahul Srivastava, Sun Microsystems Inc.
@author Elena Litani, IBM
@version $Id: XSDNotationTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2075010 // <generalisation>
	relation 2075010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2075010 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      operation 4833410 "XSDNotationTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4833538 "traverse"
	package return_type class_ref 700546 // XSNotationDecl
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 716802 "XSDSimpleTypeTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The simple type definition schema component traverser.

<simpleType
  final = (#all | (list | union | restriction))
  id = ID
  name = NCName
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, (restriction | list | union))
</simpleType>

<restriction
  base = QName
  id = ID
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, (simpleType?, (minExclusive | minInclusive | maxExclusive | maxInclusive | totalDigits | fractionDigits | length | minLength | maxLength | enumeration | whiteSpace | pattern)*))
</restriction>

<list
  id = ID
  itemType = QName
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, (simpleType?))
</list>

<union
  id = ID
  memberTypes = List of QName
  {any attributes with non-schema namespace . . .}>
  Content: (annotation?, (simpleType*))
</union>

@xerces.internal

@author Elena Litani, IBM
@author Neeraj Bajaj, Sun Microsystems, Inc.
@author Sandy Gao, IBM

@version $Id: XSDSimpleTypeTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2076674 // <generalisation>
	relation 2076674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2076674 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      attribute 1082882 "fIsBuiltIn"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " whether the type being parsed is a S4S built-in type.
"
      end

      operation 4835330 "XSDSimpleTypeTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4835458 "traverseGlobal"
	package return_type class_ref 679810 // XSSimpleType
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "return qualified name of simpleType or empty string if error occured"
      end

      operation 4835586 "traverseLocal"
	package return_type class_ref 679810 // XSSimpleType
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4835714 "traverseSimpleTypeDecl"
	private return_type class_ref 679810 // XSSimpleType
	nparams 4
	  param inout name "simpleTypeDecl" type class_ref 648194 // Element
	  param inout name "attrValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4835842 "genAnonTypeName"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "simpleTypeDecl" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate a name for an anonymous type
"
      end

      operation 4835970 "getSimpleType"
	private return_type class_ref 679810 // XSSimpleType
	nparams 5
	  param inout name "name" type class_ref 128130 // String
	  param inout name "simpleTypeDecl" type class_ref 648194 // Element
	  param inout name "attrValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param name
@param simpleTypeDecl
@param attrValues
@param schemaDoc
@param grammar
@return
"
      end

      operation 4836098 "findDTValidator"
	private return_type class_ref 679810 // XSSimpleType
	nparams 5
	  param inout name "elm" type class_ref 648194 // Element
	  param inout name "refName" type class_ref 128130 // String
	  param inout name "baseTypeStr" type class_ref 661378 // QName
	  param in name "baseRefContext" explicit_type "short"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param: elm - top element
@param: baseTypeStr - type (base/itemType/memberTypes)
@param: baseRefContext:  whether the caller is using this type as a base for restriction, union or list
return XSSimpleType available for the baseTypeStr, null if not found or disallowed.
 also throws an error if the base type won't allow itself to be used in this context.
 REVISIT: can this code be re-used?"
      end

      operation 4836226 "checkBuiltIn"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " check whethe the type denoted by the name and namespace is a S4S
 built-in type. update fIsBuiltIn at the same time."
      end

      operation 4836354 "isListDatatype"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "validator" type class_ref 679810 // XSSimpleType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " find if a datatype validator is a list or has list datatype member."
      end

      operation 4836482 "errorType"
	private return_type class_ref 679810 // XSSimpleType
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	  param in name "refType" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "isListDatatype(XSSimpleTypeDecl):boolean"
      end
    end

    class 716930 "XSDUniqueOrKeyTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class contains code that is used to traverse both <key>s and
<unique>s.

@xerces.internal

@author Neil Graham, IBM
@version $Id: XSDUniqueOrKeyTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2076802 // <generalisation>
	relation 2076802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2076802 // <generalisation>
	  b parent class_ref 715010 // XSDAbstractIDConstraintTraverser
      end

      operation 4836610 "XSDUniqueOrKeyTraverser"
	public explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4836738 "traverse"
	package explicit_return_type "void"
	nparams 4
	  param inout name "uElem" type class_ref 648194 // Element
	  param inout name "element" type class_ref 700290 // XSElementDecl
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 717058 "XSDWildcardTraverser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The wildcard schema component traverser.

&lt;any
  id = ID
  maxOccurs = (nonNegativeInteger | unbounded)  : 1
  minOccurs = nonNegativeInteger : 1
  namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace | ##local)) )  : ##any
  processContents = (lax | skip | strict) : strict
  {any attributes with non-schema namespace . . .}&gt;
  Content: (annotation?)
&lt;/any&gt;

&lt;anyAttribute
  id = ID
  namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace | ##local)) )  : ##any
  processContents = (lax | skip | strict) : strict
  {any attributes with non-schema namespace . . .}&gt;
  Content: (annotation?)
&lt;/anyAttribute&gt;

@xerces.internal

@author Rahul Srivastava, Sun Microsystems Inc.
@author Sandy Gao, IBM

@version $Id: XSDWildcardTraverser.java,v 1.7 2010-11-01 04:40:02 joehw Exp $
"
      classrelation 2076930 // <generalisation>
	relation 2076930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2076930 // <generalisation>
	  b parent class_ref 715138 // XSDAbstractTraverser
      end

      operation 4836866 "XSDWildcardTraverser"
	package explicit_return_type ""
	nparams 2
	  param inout name "handler" type class_ref 704130 // XSDHandler
	  param inout name "gAttrCheck" type class_ref 713986 // XSAttributeChecker
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "constructor

@param  handler
@param  errorReporter
@param  gAttrCheck
"
      end

      operation 4836994 "traverseAny"
	package return_type class_ref 701314 // XSParticleDecl
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse &lt;any&gt;

@param  elmNode
@param  schemaDoc
@param  grammar
@return the wildcard node index
"
      end

      operation 4837122 "traverseAnyAttribute"
	package return_type class_ref 707074 // XSWildcardDecl
	nparams 3
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverse &lt;anyAttribute&gt;

@param  elmNode
@param  schemaDoc
@param  grammar
@return the wildcard node index
"
      end

      operation 4837250 "traverseWildcardDecl"
	package return_type class_ref 707074 // XSWildcardDecl
	nparams 4
	  param inout name "elmNode" type class_ref 648194 // Element
	  param inout name "attrValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "schemaDoc" type class_ref 714370 // XSDocumentInfo
	  param inout name "grammar" type class_ref 699010 // SchemaGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param  elmNode
@param  attrValues
@param  schemaDoc
@param  grammar
@return the wildcard node index
"
      end
    end
  end

  deploymentview 157570 "traversers"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 494594 "SchemaContentHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser;
import com.sun.org.apache.xerces.internal.util.NamespaceSupport;
import com.sun.org.apache.xerces.internal.util.SAXLocatorWrapper;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XMLAttributesImpl;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLParseException;
import org.w3c.dom.Document;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.helpers.LocatorImpl;
${definition}"
      associated_elems
	class_ref 713218 // SchemaContentHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 494722 "StAXSchemaParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Iterator;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.events.Attribute;
import javax.xml.stream.events.EndElement;
import javax.xml.stream.events.Namespace;
import javax.xml.stream.events.ProcessingInstruction;
import javax.xml.stream.events.StartElement;
import javax.xml.stream.events.XMLEvent;
import com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser;
import com.sun.org.apache.xerces.internal.util.JAXPNamespaceContextWrapper;
import com.sun.org.apache.xerces.internal.util.StAXLocationWrapper;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XMLAttributesImpl;
import com.sun.org.apache.xerces.internal.util.XMLStringBuffer;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import org.w3c.dom.Document;
${definition}"
      associated_elems
	class_ref 713474 // StAXSchemaParser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 494850 "XSAnnotationInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Element;
import com.sun.org.apache.xerces.internal.impl.xs.opti.ElementImpl;
${definition}"
      associated_elems
	class_ref 713858 // XSAnnotationInfo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 494978 "XSAttributeChecker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.InvalidDatatypeValueException;
import com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket;
import com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XIntPool;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.utils.XMLSecurityManager;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSConstants;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.Vector;
import org.w3c.dom.Attr;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 713986 // XSAttributeChecker
	class_ref 714498 // OneAttr
	class_ref 714626 // Container
	class_ref 714754 // SmallContainer
	class_ref 714882 // LargeContainer
      end
      comment "Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 495106 "XSDAbstractTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import java.util.Vector;
import com.sun.org.apache.xerces.internal.impl.dv.InvalidDatatypeValueException;
import com.sun.org.apache.xerces.internal.impl.dv.XSFacets;
import com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType;
import com.sun.org.apache.xerces.internal.impl.validation.ValidationState;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.NamespaceSupport;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSAttributeUse;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 715138 // XSDAbstractTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 495234 "XSDAbstractIDConstraintTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xpath.XPathException;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.identity.Field;
import com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint;
import com.sun.org.apache.xerces.internal.impl.xs.identity.Selector;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 715010 // XSDAbstractIDConstraintTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 495362 "XSDAbstractParticleTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.xs.XSObject;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 715394 // XSDAbstractParticleTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 495490 "XSDAttributeGroupTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 715650 // XSDAttributeGroupTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 495618 "XSDAttributeTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.InvalidDatatypeValueException;
import com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo;
import com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSConstants;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 715778 // XSDAttributeTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 495746 "XSDComplexTypeTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.InvalidDatatypeFacetException;
import com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory;
import com.sun.org.apache.xerces.internal.impl.dv.XSFacets;
import com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType;
import com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSConstraints;
import com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSAttributeUse;
import com.sun.org.apache.xerces.internal.xs.XSConstants;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 715906 // XSDComplexTypeTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 495874 "XSDElementTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo;
import com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSConstraints;
import com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSConstants;
import com.sun.org.apache.xerces.internal.xs.XSObject;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import org.w3c.dom.Attr;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 716162 // XSDElementTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 496002 "XSDGroupTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSConstraints;
import com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 716290 // XSDGroupTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 496386 "XSDHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.XMLEntityManager;
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory;
import com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaException;
import com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSDDescription;
import com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool;
import com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket;
import com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSMessageFormatter;
import com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl;
import com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint;
import com.sun.org.apache.xerces.internal.impl.xs.opti.ElementImpl;
import com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser;
import com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig;
import com.sun.org.apache.xerces.internal.impl.xs.util.SimpleLocator;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSInputSource;
import com.sun.org.apache.xerces.internal.parsers.SAXParser;
import com.sun.org.apache.xerces.internal.parsers.XML11Configuration;
import com.sun.org.apache.xerces.internal.util.DOMInputSource;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.util.DefaultErrorHandler;
import com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper;
import com.sun.org.apache.xerces.internal.util.SAXInputSource;
import com.sun.org.apache.xerces.internal.util.StAXInputSource;
import com.sun.org.apache.xerces.internal.util.StAXLocationWrapper;
import com.sun.org.apache.xerces.internal.util.SymbolHash;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.URI.MalformedURIException;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import com.sun.org.apache.xerces.internal.utils.XMLSecurityManager;
import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.Grammar;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLSchemaDescription;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager;
import com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import com.sun.org.apache.xerces.internal.xni.parser.XMLParseException;
import com.sun.org.apache.xerces.internal.xs.StringList;
import com.sun.org.apache.xerces.internal.xs.XSAttributeDeclaration;
import com.sun.org.apache.xerces.internal.xs.XSAttributeGroupDefinition;
import com.sun.org.apache.xerces.internal.xs.XSAttributeUse;
import com.sun.org.apache.xerces.internal.xs.XSConstants;
import com.sun.org.apache.xerces.internal.xs.XSElementDeclaration;
import com.sun.org.apache.xerces.internal.xs.XSModelGroup;
import com.sun.org.apache.xerces.internal.xs.XSModelGroupDefinition;
import com.sun.org.apache.xerces.internal.xs.XSNamedMap;
import com.sun.org.apache.xerces.internal.xs.XSObject;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.xs.XSParticle;
import com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition;
import com.sun.org.apache.xerces.internal.xs.XSTerm;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import com.sun.org.apache.xerces.internal.xs.datatypes.ObjectList;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import javax.xml.XMLConstants;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;
${definition}"
      associated_elems
	class_ref 704130 // XSDHandler
      end
      comment "Copyright (c) 2007, 2016, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 496514 "XSDKeyrefTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl;
import com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint;
import com.sun.org.apache.xerces.internal.impl.xs.identity.KeyRef;
import com.sun.org.apache.xerces.internal.impl.xs.identity.UniqueOrKey;
import com.sun.org.apache.xerces.internal.xni.QName;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 716546 // XSDKeyrefTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 496642 "XSDNotationTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 716674 // XSDNotationTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 496770 "XSDocumentInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Stack;
import java.util.Vector;
import com.sun.org.apache.xerces.internal.impl.validation.ValidationState;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaException;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Attr;
import org.w3c.dom.NamedNodeMap;
${definition}"
      associated_elems
	class_ref 714370 // XSDocumentInfo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 496898 "XSDSimpleTypeTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Vector;
import com.sun.org.apache.xerces.internal.impl.dv.InvalidDatatypeFacetException;
import com.sun.org.apache.xerces.internal.impl.dv.SchemaDVFactory;
import com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType;
import com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl;
import com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xs.XSConstants;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 716802 // XSDSimpleTypeTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 497026 "XSDUniqueOrKeyTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl;
import com.sun.org.apache.xerces.internal.impl.xs.identity.IdentityConstraint;
import com.sun.org.apache.xerces.internal.impl.xs.identity.UniqueOrKey;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 716930 // XSDUniqueOrKeyTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 497154 "XSDWildcardTraverser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar;
import com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols;
import com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl;
import com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl;
import com.sun.org.apache.xerces.internal.impl.xs.util.XInt;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
import com.sun.org.apache.xerces.internal.util.DOMUtil;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 717058 // XSDWildcardTraverser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
