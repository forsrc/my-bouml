class MultipleScopeNamespaceSupport
!!!5132162.java!!!	MultipleScopeNamespaceSupport()
        super();
        fCurrentScope = 0;
        fScope[0] = 0;
!!!5132290.java!!!	MultipleScopeNamespaceSupport(inout context : NamespaceContext)
        super(context);
        fCurrentScope = 0;
        fScope[0] = 0;
!!!5132418.java!!!	getAllPrefixes() : Enumeration
        int count = 0;
        if (fPrefixes.length < (fNamespace.length / 2)) {
            // resize prefix array
            String[] prefixes = new String[fNamespaceSize];
            fPrefixes = prefixes;
        }
        String prefix = null;
        boolean unique = true;
        for (int i = fContext[fScope[fCurrentScope]];
            i <= (fNamespaceSize - 2);
            i += 2) {
            prefix = fNamespace[i];
            for (int k = 0; k < count; k++) {
                if (fPrefixes[k] == prefix) {
                    unique = false;
                    break;
                }
            }
            if (unique) {
                fPrefixes[count++] = prefix;
            }
            unique = true;
        }
        return new Prefixes(fPrefixes, count);
!!!5132546.java!!!	getScopeForContext(in context : int) : int
        int scope = fCurrentScope;
        while (context < fScope[scope]) {
            scope--;
        }
        return scope;
!!!5132674.java!!!	getPrefix(inout uri : String) : String
        return getPrefix(uri, fNamespaceSize, fContext[fScope[fCurrentScope]]);
!!!5132802.java!!!	getURI(inout prefix : String) : String
        return getURI(prefix, fNamespaceSize, fContext[fScope[fCurrentScope]]);
!!!5132930.java!!!	getPrefix(inout uri : String, in context : int) : String
        return getPrefix(uri, fContext[context+1], fContext[fScope[getScopeForContext(context)]]);
!!!5133058.java!!!	getURI(inout prefix : String, in context : int) : String
        return getURI(prefix, fContext[context+1], fContext[fScope[getScopeForContext(context)]]);
!!!5133186.java!!!	getPrefix(inout uri : String, in start : int, in end : int) : String
        // this saves us from having a copy of each of these in fNamespace for each scope
        if (uri == NamespaceContext.XML_URI) {
            return XMLSymbols.PREFIX_XML;
        }
        if (uri == NamespaceContext.XMLNS_URI) {
            return XMLSymbols.PREFIX_XMLNS;
        }

        // find uri in current context
        for (int i = start; i > end; i -= 2) {
            if (fNamespace[i - 1] == uri) {
                if (getURI(fNamespace[i - 2]) == uri)
                    return fNamespace[i - 2];
            }
        }

        // uri not found
        return null;
!!!5133314.java!!!	getURI(inout prefix : String, in start : int, in end : int) : String
        // this saves us from having a copy of each of these in fNamespace for each scope
        if (prefix == XMLSymbols.PREFIX_XML) {
            return NamespaceContext.XML_URI;
        }
        if (prefix == XMLSymbols.PREFIX_XMLNS) {
            return NamespaceContext.XMLNS_URI;
        }

        // find prefix in current context
        for (int i = start; i > end; i -= 2) {
            if (fNamespace[i - 2] == prefix) {
                return fNamespace[i - 1];
            }
        }

        // prefix not found
        return null;
!!!5133442.java!!!	reset() : void
        fCurrentContext = fScope[fCurrentScope];
        fNamespaceSize = fContext[fCurrentContext];
!!!5133570.java!!!	pushScope() : void
        if (fCurrentScope + 1 == fScope.length) {
            int[] contextarray = new int[fScope.length * 2];
            System.arraycopy(fScope, 0, contextarray, 0, fScope.length);
            fScope = contextarray;
        }
        pushContext();
        fScope[++fCurrentScope] = fCurrentContext;
!!!5133698.java!!!	popScope() : void
        fCurrentContext = fScope[fCurrentScope--];
        popContext();
