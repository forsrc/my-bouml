format 222
"resolver" // jdk1.8::com::sun::corba::se::spi::resolver
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/corba/se/spi/resolver/"
  java_package "com.sun.corba.se.spi.resolver"
  classview 140546 "resolver"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 246146 "Resolver"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Resolver defines the operations needed to support ORB operations for
resolve_initial_references and list_initial_services.
"
      operation 1426818 "resolve"
	public return_type class_ref 133378 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Look up the name using this resolver and return the CORBA object
reference bound to this name, if any.  Returns null if no object
is bound to the name.
"
      end

      operation 1426946 "list"
	public return_type class_ref 192258 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the entire collection of names that are currently bound
by this resolver.  Resulting collection contains only strings for
which resolve does not return null.  Some resolvers may not support
this method, in which case they return an empty set.
"
      end
    end

    class 246274 "LocalResolver"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A LocalResolver is a Resolver that allows registration of (name, CORBA object)
bindings.
"
      classrelation 414338 // <generalisation>
	relation 414338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 414338 // <generalisation>
	  b parent class_ref 246146 // Resolver
      end

      operation 1429762 "register"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "closure" type class_ref 204802 // Closure
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Register the Closure with the given name.
The Closure must evaluate to an org.omg.CORBA.Object.
"
      end
    end

    class 309250 "ResolverDefault"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Utility class that provides factory methods for all of the
standard resolvers that we provide.
"
      operation 1644674 "makeLocalResolver"
	class_operation public return_type class_ref 246274 // LocalResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a local resolver that simply stores bindings in a map.
"
      end

      operation 1644802 "makeORBInitRefResolver"
	class_operation public return_type class_ref 246146 // Resolver
	nparams 2
	  param inout name "urlOperation" type class_ref 241154 // Operation
	  param inout name "initRefs" type class_ref 243202 // StringPair
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a resolver that relies on configured values of ORBInitRef for data.
"
      end

      operation 1644930 "makeORBDefaultInitRefResolver"
	class_operation public return_type class_ref 246146 // Resolver
	nparams 2
	  param inout name "urlOperation" type class_ref 241154 // Operation
	  param inout name "defaultInitRef" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1645058 "makeBootstrapResolver"
	class_operation public return_type class_ref 246146 // Resolver
	nparams 3
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "host" type class_ref 128130 // String
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a resolver that uses the proprietary bootstrap protocol
to implement a resolver.  Obtains the necessary host and port
information from the ORB.
"
      end

      operation 1645186 "makeCompositeResolver"
	class_operation public return_type class_ref 246146 // Resolver
	nparams 2
	  param inout name "first" type class_ref 246146 // Resolver
	  param inout name "second" type class_ref 246146 // Resolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a resolver composed of the two given resolvers.  result.list() is the
union of first.list() and second.list().  result.resolve( name ) returns
first.resolve( name ) if that is not null, otherwise returns the result of
second.resolve( name ).
"
      end

      operation 1645314 "makeINSURLOperation"
	class_operation public return_type class_ref 241154 // Operation
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "bootstrapResolver" type class_ref 246146 // Resolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1645442 "makeSplitLocalResolver"
	class_operation public return_type class_ref 246274 // LocalResolver
	nparams 2
	  param inout name "resolver" type class_ref 246146 // Resolver
	  param inout name "localResolver" type class_ref 246274 // LocalResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1645570 "makeFileResolver"
	class_operation public return_type class_ref 246146 // Resolver
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 137218 "resolver"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 214146 "Resolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 246146 // Resolver
      end
      comment "Copyright (c) 2002, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 214914 "LocalResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.spi.orbutil.closure.Closure;
${definition}"
      associated_elems
	class_ref 246274 // LocalResolver
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 253570 "ResolverDefault"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import com.sun.corba.se.impl.resolver.LocalResolverImpl;
import com.sun.corba.se.impl.resolver.ORBInitRefResolverImpl;
import com.sun.corba.se.impl.resolver.ORBDefaultInitRefResolverImpl;
import com.sun.corba.se.impl.resolver.BootstrapResolverImpl;
import com.sun.corba.se.impl.resolver.CompositeResolverImpl;
import com.sun.corba.se.impl.resolver.INSURLOperationImpl;
import com.sun.corba.se.impl.resolver.SplitLocalResolverImpl;
import com.sun.corba.se.impl.resolver.FileResolverImpl;
import com.sun.corba.se.spi.orb.ORB;
import com.sun.corba.se.spi.orb.Operation;
import com.sun.corba.se.spi.orb.StringPair;
${definition}"
      associated_elems
	class_ref 309250 // ResolverDefault
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
