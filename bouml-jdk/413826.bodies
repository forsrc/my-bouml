class ImageIcon
!!!10538114.java!!!	createNoPermsComponent() : Component
        // 7020198 - set acc field to no permissions and no subject
        // Note, will have appContext set.
        return AccessController.doPrivileged(
                new PrivilegedAction<Component>() {
                    public Component run() {
                        return new Component() {
                        };
                    }
                },
                new AccessControlContext(new ProtectionDomain[]{
                        new ProtectionDomain(null, null)
                })
        );
!!!10538242.java!!!	ImageIcon(inout filename : String, inout description : String)
        image = Toolkit.getDefaultToolkit().getImage(filename);
        if (image == null) {
            return;
        }
        this.filename = filename;
        this.description = description;
        loadImage(image);
!!!10538370.java!!!	ImageIcon(inout filename : String)
        this(filename, filename);
!!!10538498.java!!!	ImageIcon(inout location : URL, inout description : String)
        image = Toolkit.getDefaultToolkit().getImage(location);
        if (image == null) {
            return;
        }
        this.location = location;
        this.description = description;
        loadImage(image);
!!!10538626.java!!!	ImageIcon(inout location : URL)
        this(location, location.toExternalForm());
!!!10538754.java!!!	ImageIcon(inout image : Image, inout description : String)
        this(image);
        this.description = description;
!!!10538882.java!!!	ImageIcon(inout image : Image)
        this.image = image;
        Object o = image.getProperty("comment", imageObserver);
        if (o instanceof String) {
            description = (String) o;
        }
        loadImage(image);
!!!10539010.java!!!	ImageIcon(inout imageData : byte [[]], inout description : String)
        this.image = Toolkit.getDefaultToolkit().createImage(imageData);
        if (image == null) {
            return;
        }
        this.description = description;
        loadImage(image);
!!!10539138.java!!!	ImageIcon(inout imageData : byte [[]])
        this.image = Toolkit.getDefaultToolkit().createImage(imageData);
        if (image == null) {
            return;
        }
        Object o = image.getProperty("comment", imageObserver);
        if (o instanceof String) {
            description = (String) o;
        }
        loadImage(image);
!!!10539394.java!!!	loadImage(inout image : Image) : void
        MediaTracker mTracker = getTracker();
        synchronized(mTracker) {
            int id = getNextID();

            mTracker.addImage(image, id);
            try {
                mTracker.waitForID(id, 0);
            } catch (InterruptedException e) {
                System.out.println("INTERRUPTED while loading Image");
            }
            loadStatus = mTracker.statusID(id, false);
            mTracker.removeImage(image, id);

            width = image.getWidth(imageObserver);
            height = image.getHeight(imageObserver);
        }
!!!10539522.java!!!	getNextID() : int
        synchronized(getTracker()) {
            return ++mediaTrackerID;
        }
!!!10539650.java!!!	getTracker() : MediaTracker
        Object trackerObj;
        AppContext ac = AppContext.getAppContext();
        // Opt: Only synchronize if trackerObj comes back null?
        // If null, synchronize, re-check for null, and put new tracker
        synchronized(ac) {
            trackerObj = ac.get(TRACKER_KEY);
            if (trackerObj == null) {
                Component comp = new Component() {};
                trackerObj = new MediaTracker(comp);
                ac.put(TRACKER_KEY, trackerObj);
            }
        }
        return (MediaTracker) trackerObj;
!!!10539778.java!!!	getImageLoadStatus() : int
        return loadStatus;
!!!10539906.java!!!	getImage() : Image
        return image;
!!!10540034.java!!!	setImage(inout image : Image) : void
        this.image = image;
        loadImage(image);
!!!10540162.java!!!	getDescription() : String
        return description;
!!!10540290.java!!!	setDescription(inout description : String) : void
        this.description = description;
!!!10540418.java!!!	paintIcon(inout c : Component, inout g : Graphics, in x : int, in y : int) : void
        if(imageObserver == null) {
           g.drawImage(image, x, y, c);
        } else {
           g.drawImage(image, x, y, imageObserver);
        }
!!!10540546.java!!!	getIconWidth() : int
        return width;
!!!10540674.java!!!	getIconHeight() : int
        return height;
!!!10540802.java!!!	setImageObserver(inout observer : ImageObserver) : void
        imageObserver = observer;
!!!10540930.java!!!	getImageObserver() : ImageObserver
        return imageObserver;
!!!10541058.java!!!	toString() : String
        if (description != null) {
            return description;
        }
        return super.toString();
!!!10541186.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();

        int w = s.readInt();
        int h = s.readInt();
        int[] pixels = (int[])(s.readObject());

        if (pixels != null) {
            Toolkit tk = Toolkit.getDefaultToolkit();
            ColorModel cm = ColorModel.getRGBdefault();
            image = tk.createImage(new MemoryImageSource(w, h, cm, pixels, 0, w));
            loadImage(image);
        }
!!!10541314.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();

        int w = getIconWidth();
        int h = getIconHeight();
        int[] pixels = image != null? new int[w * h] : null;

        if (image != null) {
            try {
                PixelGrabber pg = new PixelGrabber(image, 0, 0, w, h, pixels, 0, w);
                pg.grabPixels();
                if ((pg.getStatus() & ImageObserver.ABORT) != 0) {
                    throw new IOException("failed to load image contents");
                }
            }
            catch (InterruptedException e) {
                throw new IOException("image load interrupted");
            }
        }

        s.writeInt(w);
        s.writeInt(h);
        s.writeObject(pixels);
!!!10541442.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleImageIcon();
        }
        return accessibleContext;
