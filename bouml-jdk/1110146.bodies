class ForEachTransformedMappingTask
!!!9079682.java!!!	ForEachTransformedMappingTask(inout p : ConcurrentHashMap::BulkTask, in b : int, in i : int, in f : int, inout t : ConcurrentHashMap::Node [[]], inout transformer : BiFunction, inout action : Consumer)
            super(p, b, i, f, t);
            this.transformer = transformer; this.action = action;
!!!9079810.java!!!	compute() : void
            final BiFunction<? super K, ? super V, ? extends U> transformer;
            final Consumer<? super U> action;
            if ((transformer = this.transformer) != null &&
                (action = this.action) != null) {
                for (int i = baseIndex, f, h; batch > 0 &&
                         (h = ((f = baseLimit) + i) >>> 1) > i;) {
                    addToPendingCount(1);
                    new ForEachTransformedMappingTask<K,V,U>
                        (this, batch >>>= 1, baseLimit = h, f, tab,
                         transformer, action).fork();
                }
                for (Node<K,V> p; (p = advance()) != null; ) {
                    U u;
                    if ((u = transformer.apply(p.key, p.val)) != null)
                        action.accept(u);
                }
                propagateCompletion();
            }
