format 222
"transforms" // jdk1.8::com::sun::org::apache::xml::internal::security::transforms
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/security/transforms/"
  java_package "com.sun.org.apache.xml.internal.security.transforms"
  classview 167554 "transforms"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 762114 "Transforms"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Holder of the {@link com.sun.org.apache.xml.internal.security.transforms.Transform} steps to
be performed on the data.
The input to the first Transform is the result of dereferencing the
<code>URI</code> attribute of the <code>Reference</code> element.
The output from the last Transform is the input for the
<code>DigestMethod algorithm</code>

@author Christian Geuer-Pollmann
@see Transform
@see com.sun.org.apache.xml.internal.security.signature.Reference
"
      classrelation 2436610 // <generalisation>
	relation 2436610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2436610 // <generalisation>
	  b parent class_ref 751362 // SignatureElementProxy
      end

      classrelation 2436738 // TRANSFORM_C14N_OMIT_COMMENTS (<unidirectional association>)
	relation 2436738 --->
	  a role_name "TRANSFORM_C14N_OMIT_COMMENTS" init_value " Canonicalizer.ALGO_ID_C14N_OMIT_COMMENTS" class_relation const_relation public
	    comment " Canonicalization - Required Canonical XML (omits comments) 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2436738 // TRANSFORM_C14N_OMIT_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2436866 // TRANSFORM_C14N_WITH_COMMENTS (<unidirectional association>)
	relation 2436866 --->
	  a role_name "TRANSFORM_C14N_WITH_COMMENTS" init_value " Canonicalizer.ALGO_ID_C14N_WITH_COMMENTS" class_relation const_relation public
	    comment " Canonicalization - Recommended Canonical XML with Comments 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2436866 // TRANSFORM_C14N_WITH_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2436994 // TRANSFORM_C14N11_OMIT_COMMENTS (<unidirectional association>)
	relation 2436994 --->
	  a role_name "TRANSFORM_C14N11_OMIT_COMMENTS" init_value " Canonicalizer.ALGO_ID_C14N11_OMIT_COMMENTS" class_relation const_relation public
	    comment " Canonicalization - Required Canonical XML 1.1 (omits comments) 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2436994 // TRANSFORM_C14N11_OMIT_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2437122 // TRANSFORM_C14N11_WITH_COMMENTS (<unidirectional association>)
	relation 2437122 --->
	  a role_name "TRANSFORM_C14N11_WITH_COMMENTS" init_value " Canonicalizer.ALGO_ID_C14N11_WITH_COMMENTS" class_relation const_relation public
	    comment " Canonicalization - Recommended Canonical XML 1.1 with Comments 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2437122 // TRANSFORM_C14N11_WITH_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2437250 // TRANSFORM_C14N_EXCL_OMIT_COMMENTS (<unidirectional association>)
	relation 2437250 --->
	  a role_name "TRANSFORM_C14N_EXCL_OMIT_COMMENTS" init_value " Canonicalizer.ALGO_ID_C14N_EXCL_OMIT_COMMENTS" class_relation const_relation public
	    comment " Canonicalization - Required Exclusive Canonicalization (omits comments) 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2437250 // TRANSFORM_C14N_EXCL_OMIT_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2437378 // TRANSFORM_C14N_EXCL_WITH_COMMENTS (<unidirectional association>)
	relation 2437378 --->
	  a role_name "TRANSFORM_C14N_EXCL_WITH_COMMENTS" init_value " Canonicalizer.ALGO_ID_C14N_EXCL_WITH_COMMENTS" class_relation const_relation public
	    comment " Canonicalization - Recommended Exclusive Canonicalization with Comments 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2437378 // TRANSFORM_C14N_EXCL_WITH_COMMENTS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2437506 // TRANSFORM_XSLT (<unidirectional association>)
	relation 2437506 --->
	  a role_name "TRANSFORM_XSLT" init_value " \"http://www.w3.org/TR/1999/REC-xslt-19991116\"" class_relation const_relation public
	    comment " Transform - Optional XSLT 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2437506 // TRANSFORM_XSLT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2437634 // TRANSFORM_BASE64_DECODE (<unidirectional association>)
	relation 2437634 --->
	  a role_name "TRANSFORM_BASE64_DECODE" init_value " Constants.SignatureSpecNS + \"base64\"" class_relation const_relation public
	    comment " Transform - Required base64 decoding 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2437634 // TRANSFORM_BASE64_DECODE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2437762 // TRANSFORM_XPATH (<unidirectional association>)
	relation 2437762 --->
	  a role_name "TRANSFORM_XPATH" init_value " \"http://www.w3.org/TR/1999/REC-xpath-19991116\"" class_relation const_relation public
	    comment " Transform - Recommended XPath 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2437762 // TRANSFORM_XPATH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2437890 // TRANSFORM_ENVELOPED_SIGNATURE (<unidirectional association>)
	relation 2437890 --->
	  a role_name "TRANSFORM_ENVELOPED_SIGNATURE" init_value " Constants.SignatureSpecNS + \"enveloped-signature\"" class_relation const_relation public
	    comment " Transform - Required Enveloped Signature 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2437890 // TRANSFORM_ENVELOPED_SIGNATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2438018 // TRANSFORM_XPOINTER (<unidirectional association>)
	relation 2438018 --->
	  a role_name "TRANSFORM_XPOINTER" init_value " \"http://www.w3.org/TR/2001/WD-xptr-20010108\"" class_relation const_relation public
	    comment " Transform - XPointer 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2438018 // TRANSFORM_XPOINTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2438146 // TRANSFORM_XPATH2FILTER (<unidirectional association>)
	relation 2438146 --->
	  a role_name "TRANSFORM_XPATH2FILTER" init_value " \"http://www.w3.org/2002/06/xmldsig-filter2\"" class_relation const_relation public
	    comment " Transform - XPath Filter 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2438146 // TRANSFORM_XPATH2FILTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2438274 // log (<unidirectional association>)
	relation 2438274 --->
	  a role_name "log" init_value "
        java.util.logging.Logger.getLogger(Transforms.class.getName())" class_relation private
	    comment " {@link org.apache.commons.logging} logging facility 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2438274 // log (<unidirectional association>)
	  b parent class_ref 215298 // Logger
      end

      classrelation 2438402 // transforms (<unidirectional association>)
	relation 2438402 --->
	  a role_name "transforms" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2438402 // transforms (<unidirectional association>)
	  b parent class_ref 648194 // Element
      end

      operation 5372674 "Transforms"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1186434 "secureValidation"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5372802 "Transforms"
	public explicit_return_type ""
	nparams 1
	  param inout name "doc" type class_ref 378626 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs {@link Transforms}.

@param doc the {@link Document} in which <code>XMLSignature</code> will
be placed
"
      end

      operation 5372930 "Transforms"
	public explicit_return_type ""
	nparams 2
	  param inout name "element" type class_ref 648194 // Element
	  param inout name "BaseURI" type class_ref 128130 // String
	nexceptions 5
	  exception class_ref 646658 // DOMException
	  exception class_ref 752514 // XMLSignatureException
	  exception class_ref 764034 // InvalidTransformException
	  exception class_ref 764162 // TransformationException
	  exception class_ref 751618 // XMLSecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs {@link Transforms} from {@link Element} which is
<code>Transforms</code> Element

@param element  is <code>Transforms</code> element
@param BaseURI the URI where the XML instance was stored
@throws DOMException
@throws InvalidTransformException
@throws TransformationException
@throws XMLSecurityException
@throws XMLSignatureException
"
      end

      operation 5373058 "setSecureValidation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "secureValidation" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether secure validation is enabled or not. The default is false.
"
      end

      operation 5373186 "addTransform"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transformURI" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the <code>Transform</code> with the specified <code>Transform
algorithm URI</code>

@param transformURI the URI form of transform that indicates which
transformation is applied to data
@throws TransformationException
"
      end

      operation 5373314 "addTransform"
	public explicit_return_type "void"
	nparams 2
	  param inout name "transformURI" type class_ref 128130 // String
	  param inout name "contextElement" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the <code>Transform</code> with the specified <code>Transform
algorithm URI</code>

@param transformURI the URI form of transform that indicates which
transformation is applied to data
@param contextElement
@throws TransformationException
"
      end

      operation 5373442 "addTransform"
	public explicit_return_type "void"
	nparams 2
	  param inout name "transformURI" type class_ref 128130 // String
	  param inout name "contextNodes" type class_ref 333058 // NodeList
	nexceptions 1
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the <code>Transform</code> with the specified <code>Transform
algorithm URI</code>.

@param transformURI the URI form of transform that indicates which
transformation is applied to data
@param contextNodes
@throws TransformationException
"
      end

      operation 5373570 "addTransform"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transform" type class_ref 764290 // Transform
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a user-provided Transform step.

@param transform {@link Transform} object
"
      end

      operation 5373698 "performTransforms"
	public return_type class_ref 757506 // XMLSignatureInput
	nparams 1
	  param inout name "xmlSignatureInput" type class_ref 757506 // XMLSignatureInput
	nexceptions 1
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies all included <code>Transform</code>s to xmlSignatureInput and
returns the result of these transformations.

@param xmlSignatureInput the input for the <code>Transform</code>s
@return the result of the <code>Transforms</code>
@throws TransformationException
"
      end

      operation 5373826 "performTransforms"
	public return_type class_ref 757506 // XMLSignatureInput
	nparams 2
	  param inout name "xmlSignatureInput" type class_ref 757506 // XMLSignatureInput
	  param inout name "os" type class_ref 151298 // OutputStream
	nexceptions 1
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies all included <code>Transform</code>s to xmlSignatureInput and
returns the result of these transformations.

@param xmlSignatureInput the input for the <code>Transform</code>s
@param os where to output the last transformation.
@return the result of the <code>Transforms</code>
@throws TransformationException
"
      end

      operation 5373954 "checkSecureValidation"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transform" type class_ref 764290 // Transform
	nexceptions 1
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5374082 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the nonnegative number of transformations.

@return the number of transformations
"
      end

      operation 5374210 "item"
	public return_type class_ref 764290 // Transform
	nparams 1
	  param in name "i" explicit_type "int"
	nexceptions 1
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the <it>i</it><sup>th</sup> <code>{@link Transform}</code>.
Valid <code>i</code> values are 0 to <code>{@link #getLength}-1</code>.

@param i index of {@link Transform} to return
@return the <it>i</it><sup>th</sup> Transform
@throws TransformationException
"
      end

      operation 5374338 "getBaseLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end
    end

    class 764034 "InvalidTransformException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
@author Christian Geuer-Pollmann
"
      classrelation 2469890 // <generalisation>
	relation 2469890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2469890 // <generalisation>
	  b parent class_ref 751618 // XMLSecurityException
      end

      attribute 1192066 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "

"
      end

      operation 5461250 "InvalidTransformException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor InvalidTransformException

"
      end

      operation 5461378 "InvalidTransformException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msgId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor InvalidTransformException

@param msgId
"
      end

      operation 5461506 "InvalidTransformException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msgId" type class_ref 128130 // String
	  param inout name "exArgs" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor InvalidTransformException

@param msgId
@param exArgs
"
      end

      operation 5461634 "InvalidTransformException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msgId" type class_ref 128130 // String
	  param inout name "originalException" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor InvalidTransformException

@param msgId
@param originalException
"
      end

      operation 5461762 "InvalidTransformException"
	public explicit_return_type ""
	nparams 3
	  param inout name "msgId" type class_ref 128130 // String
	  param inout name "exArgs" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "originalException" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor InvalidTransformException

@param msgId
@param exArgs
@param originalException
"
      end
    end

    class 764162 "TransformationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
@author Christian Geuer-Pollmann
"
      classrelation 2470530 // <generalisation>
	relation 2470530 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2470530 // <generalisation>
	  b parent class_ref 751618 // XMLSecurityException
      end

      attribute 1192194 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "

"
      end

      operation 5463426 "TransformationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor TransformationException

"
      end

      operation 5463554 "TransformationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msgID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor TransformationException

@param msgID
"
      end

      operation 5463682 "TransformationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msgID" type class_ref 128130 // String
	  param inout name "exArgs" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor TransformationException

@param msgID
@param exArgs
"
      end

      operation 5463810 "TransformationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msgID" type class_ref 128130 // String
	  param inout name "originalException" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor TransformationException

@param msgID
@param originalException
"
      end

      operation 5463938 "TransformationException"
	public explicit_return_type ""
	nparams 3
	  param inout name "msgID" type class_ref 128130 // String
	  param inout name "exArgs" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "originalException" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor TransformationException

@param msgID
@param exArgs
@param originalException
"
      end
    end

    class 764290 "Transform"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements the behaviour of the <code>ds:Transform</code> element.

This <code>Transform</code>(Factory) class acts as the Factory and Proxy of
the implementing class that supports the functionality of <a
href=http://www.w3.org/TR/xmldsig-core/#sec-TransformAlg>a Transform
algorithm</a>.
Implements the Factory and Proxy pattern for ds:Transform algorithms.

@author Christian Geuer-Pollmann
@see Transforms
@see TransformSpi
"
      classrelation 2470018 // <generalisation>
	relation 2470018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2470018 // <generalisation>
	  b parent class_ref 751362 // SignatureElementProxy
      end

      classrelation 2470146 // log (<unidirectional association>)
	relation 2470146 --->
	  a role_name "log" init_value "
        java.util.logging.Logger.getLogger(Transform.class.getName())" class_relation private
	    comment " {@link org.apache.commons.logging} logging facility 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2470146 // log (<unidirectional association>)
	  b parent class_ref 215298 // Logger
      end

      classrelation 2470274 // transformSpiHash (<unidirectional association>)
	relation 2470274 --->
	  a role_name "transformSpiHash" init_value "
        new ConcurrentHashMap<String, Class<? extends TransformSpi>>()" class_relation private
	    comment " All available Transform classes are registered here 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Class<? extends TransformSpi>> ${name}${value};
"
	    classrelation_ref 2470274 // transformSpiHash (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2470402 // transformSpi (<unidirectional association>)
	relation 2470402 --->
	  a role_name "transformSpi" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2470402 // transformSpi (<unidirectional association>)
	  b parent class_ref 775170 // TransformSpi
      end

      operation 5461890 "Transform"
	public explicit_return_type ""
	nparams 2
	  param inout name "doc" type class_ref 378626 // Document
	  param inout name "algorithmURI" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 764034 // InvalidTransformException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a Transform object that implements the specified
<code>Transform algorithm</code> URI.

@param doc the proxy {@link Document}
@param algorithmURI <code>Transform algorithm</code> URI representation,
such as specified in
<a href=http://www.w3.org/TR/xmldsig-core/#sec-TransformAlg>Transform algorithm </a>
@throws InvalidTransformException
"
      end

      operation 5462018 "Transform"
	public explicit_return_type ""
	nparams 3
	  param inout name "doc" type class_ref 378626 // Document
	  param inout name "algorithmURI" type class_ref 128130 // String
	  param inout name "contextChild" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 764034 // InvalidTransformException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a Transform object that implements the specified
<code>Transform algorithm</code> URI.

@param algorithmURI <code>Transform algorithm</code> URI representation,
such as specified in
<a href=http://www.w3.org/TR/xmldsig-core/#sec-TransformAlg>Transform algorithm </a>
@param contextChild the child element of <code>Transform</code> element
@param doc the proxy {@link Document}
@throws InvalidTransformException
"
      end

      operation 5462146 "Transform"
	public explicit_return_type ""
	nparams 3
	  param inout name "doc" type class_ref 378626 // Document
	  param inout name "algorithmURI" type class_ref 128130 // String
	  param inout name "contextNodes" type class_ref 333058 // NodeList
	nexceptions 1
	  exception class_ref 764034 // InvalidTransformException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs {@link Transform}

@param doc the {@link Document} in which <code>Transform</code> will be
placed
@param algorithmURI URI representation of <code>Transform algorithm</code>
@param contextNodes the child node list of <code>Transform</code> element
@throws InvalidTransformException
"
      end

      operation 5462274 "Transform"
	public explicit_return_type ""
	nparams 2
	  param inout name "element" type class_ref 648194 // Element
	  param inout name "BaseURI" type class_ref 128130 // String
	nexceptions 3
	  exception class_ref 764034 // InvalidTransformException
	  exception class_ref 764162 // TransformationException
	  exception class_ref 751618 // XMLSecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param element <code>ds:Transform</code> element
@param BaseURI the URI of the resource where the XML instance was stored
@throws InvalidTransformException
@throws TransformationException
@throws XMLSecurityException
"
      end

      operation 5462402 "register"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "algorithmURI" type class_ref 128130 // String
	  param inout name "implementingClass" type class_ref 128130 // String
	nexceptions 3
	  exception class_ref 753410 // AlgorithmAlreadyRegisteredException
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 764034 // InvalidTransformException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Registers implementing class of the Transform algorithm with algorithmURI

@param algorithmURI algorithmURI URI representation of <code>Transform algorithm</code>
@param implementingClass <code>implementingClass</code> the implementing
class of {@link TransformSpi}
@throws AlgorithmAlreadyRegisteredException if specified algorithmURI
is already registered
@throws SecurityException if a security manager is installed and the
   caller does not have permission to register the transform
"
      end

      operation 5462530 "register"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "algorithmURI" type class_ref 128130 // String
	  param inout name "implementingClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 753410 // AlgorithmAlreadyRegisteredException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends TransformSpi> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers implementing class of the Transform algorithm with algorithmURI

@param algorithmURI algorithmURI URI representation of <code>Transform algorithm</code>
@param implementingClass <code>implementingClass</code> the implementing
class of {@link TransformSpi}
@throws AlgorithmAlreadyRegisteredException if specified algorithmURI
is already registered
@throws SecurityException if a security manager is installed and the
   caller does not have permission to register the transform
"
      end

      operation 5462658 "registerDefaultAlgorithms"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method registers the default algorithms.
"
      end

      operation 5462786 "getURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI representation of Transformation algorithm

@return the URI representation of Transformation algorithm
"
      end

      operation 5462914 "performTransform"
	public return_type class_ref 757506 // XMLSignatureInput
	nparams 1
	  param inout name "input" type class_ref 757506 // XMLSignatureInput
	nexceptions 4
	  exception class_ref 146818 // IOException
	  exception class_ref 756354 // CanonicalizationException
	  exception class_ref 756738 // InvalidCanonicalizerException
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms the input, and generates {@link XMLSignatureInput} as output.

@param input input {@link XMLSignatureInput} which can supplied Octet
Stream and NodeSet as Input of Transformation
@return the {@link XMLSignatureInput} class as the result of
transformation
@throws CanonicalizationException
@throws IOException
@throws InvalidCanonicalizerException
@throws TransformationException
"
      end

      operation 5463042 "performTransform"
	public return_type class_ref 757506 // XMLSignatureInput
	nparams 2
	  param inout name "input" type class_ref 757506 // XMLSignatureInput
	  param inout name "os" type class_ref 151298 // OutputStream
	nexceptions 4
	  exception class_ref 146818 // IOException
	  exception class_ref 756354 // CanonicalizationException
	  exception class_ref 756738 // InvalidCanonicalizerException
	  exception class_ref 764162 // TransformationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms the input, and generates {@link XMLSignatureInput} as output.

@param input input {@link XMLSignatureInput} which can supplied Octect
Stream and NodeSet as Input of Transformation
@param os where to output the result of the last transformation
@return the {@link XMLSignatureInput} class as the result of
transformation
@throws CanonicalizationException
@throws IOException
@throws InvalidCanonicalizerException
@throws TransformationException
"
      end

      operation 5463170 "getBaseLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 5463298 "initializeTransform"
	private return_type class_ref 775170 // TransformSpi
	nparams 2
	  param inout name "algorithmURI" type class_ref 128130 // String
	  param inout name "contextNodes" type class_ref 333058 // NodeList
	nexceptions 1
	  exception class_ref 764034 // InvalidTransformException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the transform object.
"
      end
    end

    class 775042 "ClassLoaderUtils"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is extremely useful for loading resources and classes in a fault
tolerant manner that works across different applications servers. Do not
touch this unless you're a grizzled classloading guru veteran who is going to
verify any change on 6 different application servers.

 NOTE! This is a duplicate of utils.ClassLoaderUtils with public
 modifiers changed to package-private. Make sure to integrate any future
 changes to utils.ClassLoaderUtils to this file."
      classrelation 2469762 // log (<unidirectional association>)
	relation 2469762 --->
	  a role_name "log" init_value "
        java.util.logging.Logger.getLogger(ClassLoaderUtils.class.getName())" class_relation const_relation private
	    comment " {@link org.apache.commons.logging} logging facility 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2469762 // log (<unidirectional association>)
	  b parent class_ref 215298 // Logger
      end

      operation 5460482 "ClassLoaderUtils"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5460610 "getResource"
	class_operation package return_type class_ref 243458 // URL
	nparams 2
	  param inout name "resourceName" type class_ref 128130 // String
	  param inout name "callingClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load a given resource. <p/> This method will try to load the resource
using the following methods (in order):
<ul>
<li>From Thread.currentThread().getContextClassLoader()
<li>From ClassLoaderUtil.class.getClassLoader()
<li>callingClass.getClassLoader()
</ul>

@param resourceName The name of the resource to load
@param callingClass The Class object of the calling object
"
      end

      operation 5460738 "getResources"
	class_operation package return_type class_ref 175362 // List
	nparams 2
	  param inout name "resourceName" type class_ref 128130 // String
	  param inout name "callingClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load a given resources. <p/> This method will try to load the resources
using the following methods (in order):
<ul>
<li>From Thread.currentThread().getContextClassLoader()
<li>From ClassLoaderUtil.class.getClassLoader()
<li>callingClass.getClassLoader()
</ul>

@param resourceName The name of the resource to load
@param callingClass The Class object of the calling object
"
      end

      operation 5460866 "getResourceAsStream"
	class_operation package return_type class_ref 146434 // InputStream
	nparams 2
	  param inout name "resourceName" type class_ref 128130 // String
	  param inout name "callingClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is a convenience method to load a resource as a stream. <p/> The
algorithm used to find the resource is given in getResource()

@param resourceName The name of the resource to load
@param callingClass The Class object of the calling object
"
      end

      operation 5460994 "loadClass"
	class_operation package return_type class_ref 130818 // Class
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "callingClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load a class with a given name. <p/> It will try to load the class in the
following order:
<ul>
<li>From Thread.currentThread().getContextClassLoader()
<li>Using the basic Class.forName()
<li>From ClassLoaderUtil.class.getClassLoader()
<li>From the callingClass.getClassLoader()
</ul>

@param className The name of the class to load
@param callingClass The Class object of the calling object
@throws ClassNotFoundException If the class cannot be found anywhere.
"
      end

      operation 5461122 "loadClass2"
	class_operation private return_type class_ref 130818 // Class
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "callingClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 775170 "TransformSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base class which all Transform algorithms extend. The common methods that
have to be overridden are the
{@link #enginePerformTransform(XMLSignatureInput, Transform)} method.

@author Christian Geuer-Pollmann
"
      operation 5464066 "enginePerformTransform"
	protected return_type class_ref 757506 // XMLSignatureInput
	nparams 3
	  param inout name "input" type class_ref 757506 // XMLSignatureInput
	  param inout name "os" type class_ref 151298 // OutputStream
	  param inout name "transformObject" type class_ref 764290 // Transform
	nexceptions 6
	  exception class_ref 146818 // IOException
	  exception class_ref 756354 // CanonicalizationException
	  exception class_ref 756738 // InvalidCanonicalizerException
	  exception class_ref 764162 // TransformationException
	  exception class_ref 379138 // ParserConfigurationException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The mega method which MUST be implemented by the Transformation Algorithm.

@param input {@link XMLSignatureInput} as the input of transformation
@param os where to output this transformation.
@param transformObject the Transform object
@return {@link XMLSignatureInput} as the result of transformation
@throws CanonicalizationException
@throws IOException
@throws InvalidCanonicalizerException
@throws ParserConfigurationException
@throws SAXException
@throws TransformationException
"
      end

      operation 5464194 "enginePerformTransform"
	protected return_type class_ref 757506 // XMLSignatureInput
	nparams 2
	  param inout name "input" type class_ref 757506 // XMLSignatureInput
	  param inout name "transformObject" type class_ref 764290 // Transform
	nexceptions 6
	  exception class_ref 146818 // IOException
	  exception class_ref 756354 // CanonicalizationException
	  exception class_ref 756738 // InvalidCanonicalizerException
	  exception class_ref 764162 // TransformationException
	  exception class_ref 379138 // ParserConfigurationException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The mega method which MUST be implemented by the Transformation Algorithm.
In order to be compatible with preexisting Transform implementations,
by default this implementation invokes the deprecated, thread-unsafe
methods. Subclasses should override this with a thread-safe
implementation.

@param input {@link XMLSignatureInput} as the input of transformation
@param transformObject the Transform object
@return {@link XMLSignatureInput} as the result of transformation
@throws CanonicalizationException
@throws IOException
@throws InvalidCanonicalizerException
@throws ParserConfigurationException
@throws SAXException
@throws TransformationException
"
      end

      operation 5464322 "enginePerformTransform"
	protected return_type class_ref 757506 // XMLSignatureInput
	nparams 1
	  param inout name "input" type class_ref 757506 // XMLSignatureInput
	nexceptions 6
	  exception class_ref 146818 // IOException
	  exception class_ref 756354 // CanonicalizationException
	  exception class_ref 756738 // InvalidCanonicalizerException
	  exception class_ref 764162 // TransformationException
	  exception class_ref 379138 // ParserConfigurationException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The mega method which MUST be implemented by the Transformation Algorithm.
@param input {@link XMLSignatureInput} as the input of transformation
@return {@link XMLSignatureInput} as the result of transformation
@throws CanonicalizationException
@throws IOException
@throws InvalidCanonicalizerException
@throws ParserConfigurationException
@throws SAXException
@throws TransformationException
"
      end

      operation 5464450 "engineGetURI"
	abstract protected return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI representation of <code>Transformation algorithm</code>

@return the URI representation of <code>Transformation algorithm</code>
"
      end
    end

    class 775298 "TransformParam"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 160770 "transforms"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 536322 "Transforms"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException;
import com.sun.org.apache.xml.internal.security.c14n.Canonicalizer;
import com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException;
import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException;
import com.sun.org.apache.xml.internal.security.signature.XMLSignatureException;
import com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;
import com.sun.org.apache.xml.internal.security.utils.Constants;
import com.sun.org.apache.xml.internal.security.utils.SignatureElementProxy;
import com.sun.org.apache.xml.internal.security.utils.XMLUtils;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
${definition}"
      associated_elems
	class_ref 762114 // Transforms
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end

    artifact 545922 "ClassLoaderUtils"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
${definition}"
      associated_elems
	class_ref 775042 // ClassLoaderUtils
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end

    artifact 546050 "InvalidTransformException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException;
${definition}"
      associated_elems
	class_ref 764034 // InvalidTransformException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end

    artifact 546178 "Transform"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.util.concurrent.ConcurrentHashMap;
import java.util.Map;
import javax.xml.parsers.ParserConfigurationException;
import com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException;
import com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException;
import com.sun.org.apache.xml.internal.security.exceptions.AlgorithmAlreadyRegisteredException;
import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException;
import com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformBase64Decode;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformC14N;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformC14N11;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformC14N11_WithComments;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformC14NExclusive;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformC14NExclusiveWithComments;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformC14NWithComments;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformEnvelopedSignature;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformXPath;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformXPath2Filter;
import com.sun.org.apache.xml.internal.security.transforms.implementations.TransformXSLT;
import com.sun.org.apache.xml.internal.security.utils.Constants;
import com.sun.org.apache.xml.internal.security.utils.HelperNodeList;
import com.sun.org.apache.xml.internal.security.utils.JavaUtils;
import com.sun.org.apache.xml.internal.security.utils.SignatureElementProxy;
import com.sun.org.apache.xml.internal.security.utils.XMLUtils;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 764290 // Transform
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end

    artifact 546306 "TransformationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException;
${definition}"
      associated_elems
	class_ref 764162 // TransformationException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end

    artifact 546434 "TransformParam"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 775298 // TransformParam
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end

    artifact 546562 "TransformSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import javax.xml.parsers.ParserConfigurationException;
import com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException;
import com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException;
import com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 775170 // TransformSpi
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
"
    end
  end

  package_ref 175490 // implementations

  package_ref 175874 // params
end
