class BasicTextAreaUI
!!!2689410.java!!!	createUI(inout ta : JComponent) : ComponentUI
        return new BasicTextAreaUI();
!!!2689538.java!!!	BasicTextAreaUI()
        super();
!!!2689666.java!!!	getPropertyPrefix() : String
        return "TextArea";
!!!2689794.java!!!	installDefaults() : void
        super.installDefaults();
        //the fix for 4785160 is undone
!!!2689922.java!!!	propertyChange(inout evt : PropertyChangeEvent) : void
        super.propertyChange(evt);
        if (evt.getPropertyName().equals("lineWrap") ||
            evt.getPropertyName().equals("wrapStyleWord") ||
                evt.getPropertyName().equals("tabSize")) {
            // rebuild the view
            modelChanged();
        } else if ("editable".equals(evt.getPropertyName())) {
            updateFocusTraversalKeys();
        }
!!!2690050.java!!!	getPreferredSize(inout c : JComponent) : Dimension
        return super.getPreferredSize(c);
        //the fix for 4785160 is undone
!!!2690178.java!!!	getMinimumSize(inout c : JComponent) : Dimension
        return super.getMinimumSize(c);
        //the fix for 4785160 is undone
!!!2690306.java!!!	create(inout elem : Element) : View
        Document doc = elem.getDocument();
        Object i18nFlag = doc.getProperty("i18n"/*AbstractDocument.I18NProperty*/);
        if ((i18nFlag != null) && i18nFlag.equals(Boolean.TRUE)) {
            // build a view that support bidi
            return createI18N(elem);
        } else {
            JTextComponent c = getComponent();
            if (c instanceof JTextArea) {
                JTextArea area = (JTextArea) c;
                View v;
                if (area.getLineWrap()) {
                    v = new WrappedPlainView(elem, area.getWrapStyleWord());
                } else {
                    v = new PlainView(elem);
                }
                return v;
            }
        }
        return null;
!!!2690434.java!!!	createI18N(inout elem : Element) : View
        String kind = elem.getName();
        if (kind != null) {
            if (kind.equals(AbstractDocument.ContentElementName)) {
                return new PlainParagraph(elem);
            } else if (kind.equals(AbstractDocument.ParagraphElementName)) {
                return new BoxView(elem, View.Y_AXIS);
            }
        }
        return null;
!!!2690562.java!!!	getBaseline(inout c : JComponent, in width : int, in height : int) : int
        super.getBaseline(c, width, height);
        Object i18nFlag = ((JTextComponent)c).getDocument().
                                              getProperty("i18n");
        Insets insets = c.getInsets();
        if (Boolean.TRUE.equals(i18nFlag)) {
            View rootView = getRootView((JTextComponent)c);
            if (rootView.getViewCount() > 0) {
                height = height - insets.top - insets.bottom;
                int baseline = insets.top;
                int fieldBaseline = BasicHTML.getBaseline(
                        rootView.getView(0), width - insets.left -
                        insets.right, height);
                if (fieldBaseline < 0) {
                    return -1;
                }
                return baseline + fieldBaseline;
            }
            return -1;
        }
        FontMetrics fm = c.getFontMetrics(c.getFont());
        return insets.top + fm.getAscent();
!!!2690690.java!!!	getBaselineResizeBehavior(inout c : JComponent) : Component::BaselineResizeBehavior
        super.getBaselineResizeBehavior(c);
        return Component.BaselineResizeBehavior.CONSTANT_ASCENT;
