class MBeanSupport
!!!2982274.java!!!	MBeanSupport(inout resource : T, inout mbeanInterfaceType : Class)
        if (mbeanInterfaceType == null)
            throw new NotCompliantMBeanException("Null MBean interface");
        if (!mbeanInterfaceType.isInstance(resource)) {
            final String msg =
                "Resource class " + resource.getClass().getName() +
                " is not an instance of " + mbeanInterfaceType.getName();
            throw new NotCompliantMBeanException(msg);
        }
        ReflectUtil.checkPackageAccess(mbeanInterfaceType);
        this.resource = resource;
        MBeanIntrospector<M> introspector = getMBeanIntrospector();
        this.perInterface = introspector.getPerInterface(mbeanInterfaceType);
        this.mbeanInfo = introspector.getMBeanInfo(resource, perInterface);
!!!2982658.java!!!	isMXBean() : boolean
        return perInterface.isMXBean();
!!!2983042.java!!!	preRegister(inout server : MBeanServer, inout name : ObjectName) : ObjectName
        if (resource instanceof MBeanRegistration)
            name = ((MBeanRegistration) resource).preRegister(server, name);
        return name;
!!!2983170.java!!!	preRegister2(inout server : MBeanServer, inout name : ObjectName) : void
        register(server, name);
!!!2983298.java!!!	registerFailed() : void
        unregister();
!!!2983426.java!!!	postRegister(inout registrationDone : Boolean) : void
        if (resource instanceof MBeanRegistration)
            ((MBeanRegistration) resource).postRegister(registrationDone);
!!!2983554.java!!!	preDeregister() : void
        if (resource instanceof MBeanRegistration)
            ((MBeanRegistration) resource).preDeregister();
!!!2983682.java!!!	postDeregister() : void
        // Undo any work from registration.  We do this in postDeregister
        // not preDeregister, because if the user preDeregister throws an
        // exception then the MBean is not unregistered.
        try {
            unregister();
        } finally {
            if (resource instanceof MBeanRegistration)
                ((MBeanRegistration) resource).postDeregister();
        }
!!!2983810.java!!!	getAttribute(inout attribute : String) : Object
        return perInterface.getAttribute(resource, attribute, getCookie());
!!!2983938.java!!!	getAttributes(inout attributes : String [[]]) : AttributeList
        final AttributeList result = new AttributeList(attributes.length);
        for (String attrName : attributes) {
            try {
                final Object attrValue = getAttribute(attrName);
                result.add(new Attribute(attrName, attrValue));
            } catch (Exception e) {
                // OK: attribute is not included in returned list, per spec
                // XXX: log the exception
            }
        }
        return result;
!!!2984066.java!!!	setAttribute(inout attribute : Attribute) : void
        final String name = attribute.getName();
        final Object value = attribute.getValue();
        perInterface.setAttribute(resource, name, value, getCookie());
!!!2984194.java!!!	setAttributes(inout attributes : AttributeList) : AttributeList
        final AttributeList result = new AttributeList(attributes.size());
        for (Object attrObj : attributes) {
            // We can't use AttributeList.asList because it has side-effects
            Attribute attr = (Attribute) attrObj;
            try {
                setAttribute(attr);
                result.add(new Attribute(attr.getName(), attr.getValue()));
            } catch (Exception e) {
                // OK: attribute is not included in returned list, per spec
                // XXX: log the exception
            }
        }
        return result;
!!!2984322.java!!!	invoke(inout operation : String, inout params : Object [[]], inout signature : String [[]]) : Object
        return perInterface.invoke(resource, operation, params, signature,
                                   getCookie());
!!!2984450.java!!!	getMBeanInfo() : MBeanInfo
        return mbeanInfo;
!!!2984578.java!!!	getClassName() : String
        return resource.getClass().getName();
!!!2984706.java!!!	getResource() : Object
        return resource;
!!!2984834.java!!!	getMBeanInterface() : Class
        return perInterface.getMBeanInterface();
