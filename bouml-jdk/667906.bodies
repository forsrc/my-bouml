class XMLLimitAnalyzer
!!!5123842.java!!!	XMLLimitAnalyzer()
        values = new int[Limit.values().length];
        totalValue = new int[Limit.values().length];
        names = new String[Limit.values().length];
        caches = new Map[Limit.values().length];
!!!5123970.java!!!	addValue(inout limit : XMLSecurityManager::Limit, inout entityName : String, in value : int) : void
        addValue(limit.ordinal(), entityName, value);
!!!5124098.java!!!	addValue(in index : int, inout entityName : String, in value : int) : void
        if (index == Limit.ENTITY_EXPANSION_LIMIT.ordinal() ||
                index == Limit.MAX_OCCUR_NODE_LIMIT.ordinal() ||
                index == Limit.ELEMENT_ATTRIBUTE_LIMIT.ordinal() ||
                index == Limit.TOTAL_ENTITY_SIZE_LIMIT.ordinal() ||
                index == Limit.ENTITY_REPLACEMENT_LIMIT.ordinal()
                ) {
            totalValue[index] += value;
            return;
        }
        if (index == Limit.MAX_ELEMENT_DEPTH_LIMIT.ordinal() ||
                index == Limit.MAX_NAME_LIMIT.ordinal()) {
            values[index] = value;
            totalValue[index] = value;
            return;
        }

        Map<String, Integer> cache;
        if (caches[index] == null) {
            cache = new HashMap<>(10);
            caches[index] = cache;
        } else {
            cache = caches[index];
        }

        int accumulatedValue = value;
        if (cache.containsKey(entityName)) {
            accumulatedValue += cache.get(entityName);
            cache.put(entityName, accumulatedValue);
        } else {
            cache.put(entityName, value);
        }

        if (accumulatedValue > values[index]) {
            values[index] = accumulatedValue;
            names[index] = entityName;
        }


        if (index == Limit.GENERAL_ENTITY_SIZE_LIMIT.ordinal() ||
                index == Limit.PARAMETER_ENTITY_SIZE_LIMIT.ordinal()) {
            totalValue[Limit.TOTAL_ENTITY_SIZE_LIMIT.ordinal()] += value;
        }
!!!5124226.java!!!	getValue(inout limit : XMLSecurityManager::Limit) : int
        return getValue(limit.ordinal());
!!!5124354.java!!!	getValue(in index : int) : int
        if (index == Limit.ENTITY_REPLACEMENT_LIMIT.ordinal()) {
            return totalValue[index];
        }
        return values[index];
!!!5124482.java!!!	getTotalValue(inout limit : XMLSecurityManager::Limit) : int
        return totalValue[limit.ordinal()];
!!!5124610.java!!!	getTotalValue(in index : int) : int
        return totalValue[index];
!!!5124738.java!!!	getValueByIndex(in index : int) : int
        return values[index];
!!!5124866.java!!!	startEntity(inout name : String) : void
        entityStart = name;
!!!5124994.java!!!	isTracking(inout name : String) : boolean
        if (entityStart == null) {
            return false;
        }
        return entityStart.equals(name);
!!!5125122.java!!!	endEntity(inout limit : XMLSecurityManager::Limit, inout name : String) : void
        entityStart = "";
        Map<String, Integer> cache = caches[limit.ordinal()];
        if (cache != null) {
            cache.remove(name);
        }
!!!5125250.java!!!	reset(inout limit : XMLSecurityManager::Limit) : void
        if (limit.ordinal() == Limit.TOTAL_ENTITY_SIZE_LIMIT.ordinal()) {
            totalValue[limit.ordinal()] = 0;
        } else if (limit.ordinal() == Limit.GENERAL_ENTITY_SIZE_LIMIT.ordinal()) {
            names[limit.ordinal()] = null;
            values[limit.ordinal()] = 0;
            caches[limit.ordinal()] = null;
            totalValue[limit.ordinal()] = 0;
        }
!!!5125378.java!!!	debugPrint(inout securityManager : XMLSecurityManager) : void
        Formatter formatter = new Formatter();
        System.out.println(formatter.format("%30s %15s %15s %15s %30s",
                "Property","Limit","Total size","Size","Entity Name"));

        for (Limit limit : Limit.values()) {
            formatter = new Formatter();
            System.out.println(formatter.format("%30s %15d %15d %15d %30s",
                    limit.name(),
                    securityManager.getLimit(limit),
                    totalValue[limit.ordinal()],
                    values[limit.ordinal()],
                    names[limit.ordinal()]));
        }
