class IntStreamBuilderImpl
!!!9591810.java!!!	IntStreamBuilderImpl(in t : int)
            first = t;
            count = -2;
!!!9591938.java!!!	accept(in t : int) : void
            if (count == 0) {
                first = t;
                count++;
            }
            else if (count > 0) {
                if (buffer == null) {
                    buffer = new SpinedBuffer.OfInt();
                    buffer.accept(first);
                    count++;
                }

                buffer.accept(t);
            }
            else {
                throw new IllegalStateException();
            }
!!!9592066.java!!!	build() : IntStream
            int c = count;
            if (c >= 0) {
                // Switch count to negative value signalling the builder is built
                count = -count - 1;
                // Use this spliterator if 0 or 1 elements, otherwise use
                // the spliterator of the spined buffer
                return (c < 2) ? StreamSupport.intStream(this, false) : StreamSupport.intStream(buffer.spliterator(), false);
            }

            throw new IllegalStateException();
!!!9592194.java!!!	tryAdvance(inout action : IntConsumer) : boolean
            Objects.requireNonNull(action);

            if (count == -2) {
                action.accept(first);
                count = -1;
                return true;
            }
            else {
                return false;
            }
!!!9592322.java!!!	forEachRemaining(inout action : IntConsumer) : void
            Objects.requireNonNull(action);

            if (count == -2) {
                action.accept(first);
                count = -1;
            }
