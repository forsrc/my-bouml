class ByteArrayInputStream
!!!400898.java!!!	ByteArrayInputStream(inout buf : byte [[]])
        this.buf = buf;
        this.pos = 0;
        this.count = buf.length;
!!!401026.java!!!	ByteArrayInputStream(inout buf : byte [[]], in offset : int, in length : int)
        this.buf = buf;
        this.pos = offset;
        this.count = Math.min(offset + length, buf.length);
        this.mark = offset;
!!!401154.java!!!	read() : int
        return (pos < count) ? (buf[pos++] & 0xff) : -1;
!!!401282.java!!!	read(inout b : byte [[]], in off : int, in len : int) : int
        if (b == null) {
            throw new NullPointerException();
        } else if (off < 0 || len < 0 || len > b.length - off) {
            throw new IndexOutOfBoundsException();
        }

        if (pos >= count) {
            return -1;
        }

        int avail = count - pos;
        if (len > avail) {
            len = avail;
        }
        if (len <= 0) {
            return 0;
        }
        System.arraycopy(buf, pos, b, off, len);
        pos += len;
        return len;
!!!401410.java!!!	skip(in n : long) : long
        long k = count - pos;
        if (n < k) {
            k = n < 0 ? 0 : n;
        }

        pos += k;
        return k;
!!!401538.java!!!	available() : int
        return count - pos;
!!!401666.java!!!	markSupported() : boolean
        return true;
!!!401794.java!!!	mark(in readAheadLimit : int) : void
        mark = pos;
!!!401922.java!!!	reset() : void
        pos = mark;
