format 222
"ssl" // jdk1.8::javax::rmi::ssl
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/rmi/ssl/"
  java_package "javax.rmi.ssl"
  classview 178306 "ssl"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1240450 "SslRMIClientSocketFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An <code>SslRMIClientSocketFactory</code> instance is used by the RMI
runtime in order to obtain client sockets for RMI calls via SSL.</p>

<p>This class implements <code>RMIClientSocketFactory</code> over
the Secure Sockets Layer (SSL) or Transport Layer Security (TLS)
protocols.</p>

<p>This class creates SSL sockets using the default
<code>SSLSocketFactory</code> (see {@link
SSLSocketFactory#getDefault}).  All instances of this class are
functionally equivalent.  In particular, they all share the same
truststore, and the same keystore when client authentication is
required by the server.  This behavior can be modified in
subclasses by overriding the {@link #createSocket(String,int)}
method; in that case, {@link #equals(Object) equals} and {@link
#hashCode() hashCode} may also need to be overridden.</p>

<p>If the system property
<code>javax.rmi.ssl.client.enabledCipherSuites</code> is specified,
the {@link #createSocket(String,int)} method will call {@link
SSLSocket#setEnabledCipherSuites(String[])} before returning the
socket.  The value of this system property is a string that is a
comma-separated list of SSL/TLS cipher suites to enable.</p>

<p>If the system property
<code>javax.rmi.ssl.client.enabledProtocols</code> is specified,
the {@link #createSocket(String,int)} method will call {@link
SSLSocket#setEnabledProtocols(String[])} before returning the
socket.  The value of this system property is a string that is a
comma-separated list of SSL/TLS protocol versions to enable.</p>

@see javax.net.ssl.SSLSocketFactory
@see javax.rmi.ssl.SslRMIServerSocketFactory
@since 1.5
"
      classrelation 4004354 // <realization>
	relation 4004354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4004354 // <realization>
	  b parent class_ref 504834 // RMIClientSocketFactory
      end

      classrelation 4004482 // <realization>
	relation 4004482 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4004482 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 10192002 "SslRMIClientSocketFactory"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new <code>SslRMIClientSocketFactory</code>.</p>
"
      end

      operation 10192130 "createSocket"
	public return_type class_ref 209154 // Socket
	nparams 2
	  param inout name "host" type class_ref 128130 // String
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates an SSL socket.</p>

<p>If the system property
<code>javax.rmi.ssl.client.enabledCipherSuites</code> is
specified, this method will call {@link
SSLSocket#setEnabledCipherSuites(String[])} before returning
the socket. The value of this system property is a string that
is a comma-separated list of SSL/TLS cipher suites to
enable.</p>

<p>If the system property
<code>javax.rmi.ssl.client.enabledProtocols</code> is
specified, this method will call {@link
SSLSocket#setEnabledProtocols(String[])} before returning the
socket. The value of this system property is a string that is a
comma-separated list of SSL/TLS protocol versions to
enable.</p>
"
      end

      operation 10192258 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Indicates whether some other object is \"equal to\" this one.</p>

<p>Because all instances of this class are functionally equivalent
(they all use the default
<code>SSLSocketFactory</code>), this method simply returns
<code>this.getClass().equals(obj.getClass())</code>.</p>

<p>A subclass should override this method (as well
as {@link #hashCode()}) if its instances are not all
functionally equivalent.</p>
"
      end

      operation 10192386 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a hash code value for this
<code>SslRMIClientSocketFactory</code>.</p>

@return a hash code value for this
<code>SslRMIClientSocketFactory</code>.
"
      end

      attribute 2342146 "defaultSocketFactory"
	class_attribute private explicit_type "SocketFactory"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " We use a static field because:

    SSLSocketFactory.getDefault() always returns the same object
    (at least on Sun's implementation), and we want to make sure
    that the Javadoc & the implementation stay in sync.

 If someone needs to have different SslRMIClientSocketFactory factories
 with different underlying SSLSocketFactory objects using different key
 and trust stores, he can always do so by subclassing this class and
 overriding createSocket(String host, int port).

"
      end

      operation 10192514 "getDefaultClientSocketFactory"
	class_operation private explicit_return_type "SocketFactory"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2342274 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8310631444933958385L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1240578 "SslRMIServerSocketFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An <code>SslRMIServerSocketFactory</code> instance is used by the RMI
runtime in order to obtain server sockets for RMI calls via SSL.</p>

<p>This class implements <code>RMIServerSocketFactory</code> over
the Secure Sockets Layer (SSL) or Transport Layer Security (TLS)
protocols.</p>

<p>This class creates SSL sockets using the default
<code>SSLSocketFactory</code> (see {@link
SSLSocketFactory#getDefault}) or the default
<code>SSLServerSocketFactory</code> (see {@link
SSLServerSocketFactory#getDefault}) unless the
constructor taking an <code>SSLContext</code> is
used in which case the SSL sockets are created using
the <code>SSLSocketFactory</code> returned by
{@link SSLContext#getSocketFactory} or the
<code>SSLServerSocketFactory</code> returned by
{@link SSLContext#getServerSocketFactory}.

When an <code>SSLContext</code> is not supplied all the instances of this
class share the same keystore, and the same truststore (when client
authentication is required by the server). This behavior can be modified
by supplying an already initialized <code>SSLContext</code> instance.

@see javax.net.ssl.SSLSocketFactory
@see javax.net.ssl.SSLServerSocketFactory
@see javax.rmi.ssl.SslRMIClientSocketFactory
@since 1.5
"
      classrelation 4004610 // <realization>
	relation 4004610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4004610 // <realization>
	  b parent class_ref 504962 // RMIServerSocketFactory
      end

      operation 10192642 "SslRMIServerSocketFactory"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new <code>SslRMIServerSocketFactory</code> with
the default SSL socket configuration.</p>

<p>SSL connections accepted by server sockets created by this
factory have the default cipher suites and protocol versions
enabled and do not require client authentication.</p>
"
      end

      operation 10192770 "SslRMIServerSocketFactory"
	public explicit_return_type ""
	nparams 3
	  param inout name "enabledCipherSuites" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "enabledProtocols" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "needClientAuth" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new <code>SslRMIServerSocketFactory</code> with
the specified SSL socket configuration.</p>

@param enabledCipherSuites names of all the cipher suites to
enable on SSL connections accepted by server sockets created by
this factory, or <code>null</code> to use the cipher suites
that are enabled by default

@param enabledProtocols names of all the protocol versions to
enable on SSL connections accepted by server sockets created by
this factory, or <code>null</code> to use the protocol versions
that are enabled by default

@param needClientAuth <code>true</code> to require client
authentication on SSL connections accepted by server sockets
created by this factory; <code>false</code> to not require
client authentication

@exception IllegalArgumentException when one or more of the cipher
suites named by the <code>enabledCipherSuites</code> parameter is
not supported, when one or more of the protocols named by the
<code>enabledProtocols</code> parameter is not supported or when
a problem is encountered while trying to check if the supplied
cipher suites and protocols to be enabled are supported.

@see SSLSocket#setEnabledCipherSuites
@see SSLSocket#setEnabledProtocols
@see SSLSocket#setNeedClientAuth
"
      end

      operation 10192898 "SslRMIServerSocketFactory"
	public explicit_return_type ""
	nparams 4
	  param inout name "context" explicit_type "SSLContext"
	  param inout name "enabledCipherSuites" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "enabledProtocols" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "needClientAuth" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new <code>SslRMIServerSocketFactory</code> with the
specified <code>SSLContext</code> and SSL socket configuration.</p>

@param context the SSL context to be used for creating SSL sockets.
If <code>context</code> is null the default <code>SSLSocketFactory</code>
or the default <code>SSLServerSocketFactory</code> will be used to
create SSL sockets. Otherwise, the socket factory returned by
<code>SSLContext.getSocketFactory()</code> or
<code>SSLContext.getServerSocketFactory()</code> will be used instead.

@param enabledCipherSuites names of all the cipher suites to
enable on SSL connections accepted by server sockets created by
this factory, or <code>null</code> to use the cipher suites
that are enabled by default

@param enabledProtocols names of all the protocol versions to
enable on SSL connections accepted by server sockets created by
this factory, or <code>null</code> to use the protocol versions
that are enabled by default

@param needClientAuth <code>true</code> to require client
authentication on SSL connections accepted by server sockets
created by this factory; <code>false</code> to not require
client authentication

@exception IllegalArgumentException when one or more of the cipher
suites named by the <code>enabledCipherSuites</code> parameter is
not supported, when one or more of the protocols named by the
<code>enabledProtocols</code> parameter is not supported or when
a problem is encountered while trying to check if the supplied
cipher suites and protocols to be enabled are supported.

@see SSLSocket#setEnabledCipherSuites
@see SSLSocket#setEnabledProtocols
@see SSLSocket#setNeedClientAuth
@since 1.7
"
      end

      operation 10193026 "getEnabledCipherSuites"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the names of the cipher suites enabled on SSL
connections accepted by server sockets created by this factory,
or <code>null</code> if this factory uses the cipher suites
that are enabled by default.</p>

@return an array of cipher suites enabled, or <code>null</code>

@see SSLSocket#setEnabledCipherSuites
"
      end

      operation 10193154 "getEnabledProtocols"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the names of the protocol versions enabled on SSL
connections accepted by server sockets created by this factory,
or <code>null</code> if this factory uses the protocol versions
that are enabled by default.</p>

@return an array of protocol versions enabled, or
<code>null</code>

@see SSLSocket#setEnabledProtocols
"
      end

      operation 10193282 "getNeedClientAuth"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns <code>true</code> if client authentication is
required on SSL connections accepted by server sockets created
by this factory.</p>

@return <code>true</code> if client authentication is required

@see SSLSocket#setNeedClientAuth
"
      end

      operation 10193410 "createServerSocket"
	public return_type class_ref 208898 // ServerSocket
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a server socket that accepts SSL connections
configured according to this factory's SSL socket configuration
parameters.</p>
"
      end

      operation 10193538 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Indicates whether some other object is \"equal to\" this one.</p>

<p>Two <code>SslRMIServerSocketFactory</code> objects are equal
if they have been constructed with the same SSL context and
SSL socket configuration parameters.</p>

<p>A subclass should override this method (as well as
{@link #hashCode()}) if it adds instance state that affects
equality.</p>
"
      end

      operation 10193666 "checkParameters"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "that" type class_ref 1240578 // SslRMIServerSocketFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10193794 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a hash code value for this
<code>SslRMIServerSocketFactory</code>.</p>

@return a hash code value for this
<code>SslRMIServerSocketFactory</code>.
"
      end

      attribute 2342402 "defaultSSLSocketFactory"
	class_attribute private explicit_type "SSLSocketFactory"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " We use a static field because:

    SSLSocketFactory.getDefault() always returns the same object
    (at least on Sun's implementation), and we want to make sure
    that the Javadoc & the implementation stay in sync.

 If someone needs to have different SslRMIServerSocketFactory
 factories with different underlying SSLSocketFactory objects
 using different keystores and truststores, he/she can always
 use the constructor that takes an SSLContext as input.

"
      end

      operation 10193922 "getDefaultSSLSocketFactory"
	class_operation private explicit_return_type "SSLSocketFactory"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4004738 // enabledCipherSuites (<unidirectional association>)
	relation 4004738 --->
	  a role_name "enabledCipherSuites" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4004738 // enabledCipherSuites (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4004866 // enabledProtocols (<unidirectional association>)
	relation 4004866 --->
	  a role_name "enabledProtocols" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4004866 // enabledProtocols (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2342530 "needClientAuth"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4004994 // enabledCipherSuitesList (<unidirectional association>)
	relation 4004994 --->
	  a role_name "enabledCipherSuitesList" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 4004994 // enabledCipherSuitesList (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 4005122 // enabledProtocolsList (<unidirectional association>)
	relation 4005122 --->
	  a role_name "enabledProtocolsList" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 4005122 // enabledProtocolsList (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      attribute 2342658 "context"
	private explicit_type "SSLContext"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end
  end

  deploymentview 174594 "ssl"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 902018 "SslRMIClientSocketFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.net.Socket;
import java.rmi.server.RMIClientSocketFactory;
import java.util.StringTokenizer;
import javax.net.SocketFactory;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
${definition}"
      associated_elems
	class_ref 1240450 // SslRMIClientSocketFactory
      end
      comment "Copyright (c) 2003, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 902146 "SslRMIServerSocketFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.rmi.server.RMIServerSocketFactory;
import java.util.Arrays;
import java.util.List;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLServerSocketFactory;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
${definition}"
      associated_elems
	class_ref 1240578 // SslRMIServerSocketFactory
      end
      comment "Copyright (c) 2003, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
