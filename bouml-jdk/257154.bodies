class WorkQueueImpl
!!!1300098.java!!!	WorkQueueImpl()
        name=ORBConstants.WORKQUEUE_DEFAULT_NAME;
        initializeMonitoring();
!!!1300226.java!!!	WorkQueueImpl(inout workerThreadPool : ThreadPool)
        this(workerThreadPool, ORBConstants.WORKQUEUE_DEFAULT_NAME);
!!!1300354.java!!!	WorkQueueImpl(inout workerThreadPool : ThreadPool, inout name : String)
        this.workerThreadPool = workerThreadPool;
        this.name = name;
        initializeMonitoring();
!!!1300482.java!!!	initializeMonitoring() : void
        workqueueMonitoredObject = MonitoringFactories.
                            getMonitoredObjectFactory().
                            createMonitoredObject(name,
                            MonitoringConstants.WORKQUEUE_MONITORING_DESCRIPTION);

        LongMonitoredAttributeBase b1 = new
            LongMonitoredAttributeBase(MonitoringConstants.WORKQUEUE_TOTAL_WORK_ITEMS_ADDED,
                    MonitoringConstants.WORKQUEUE_TOTAL_WORK_ITEMS_ADDED_DESCRIPTION) {
                public Object getValue() {
                    return new Long(WorkQueueImpl.this.totalWorkItemsAdded());
                }
            };
        workqueueMonitoredObject.addAttribute(b1);
        LongMonitoredAttributeBase b2 = new
            LongMonitoredAttributeBase(MonitoringConstants.WORKQUEUE_WORK_ITEMS_IN_QUEUE,
                    MonitoringConstants.WORKQUEUE_WORK_ITEMS_IN_QUEUE_DESCRIPTION) {
                public Object getValue() {
                    return new Long(WorkQueueImpl.this.workItemsInQueue());
                }
            };
        workqueueMonitoredObject.addAttribute(b2);
        LongMonitoredAttributeBase b3 = new
            LongMonitoredAttributeBase(MonitoringConstants.WORKQUEUE_AVERAGE_TIME_IN_QUEUE,
                    MonitoringConstants.WORKQUEUE_AVERAGE_TIME_IN_QUEUE_DESCRIPTION) {
                public Object getValue() {
                    return new Long(WorkQueueImpl.this.averageTimeInQueue());
                }
            };
        workqueueMonitoredObject.addAttribute(b3);
!!!1300610.java!!!	getMonitoredObject() : MonitoredObject
        return workqueueMonitoredObject;
!!!1300738.java!!!	addWork(inout work : Work) : void
            workItemsAdded++;
            work.setEnqueueTime(System.currentTimeMillis());
            theWorkQueue.addLast(work);
            ((ThreadPoolImpl)workerThreadPool).notifyForAvailableWork(this);
!!!1300866.java!!!	requestWork(in waitTime : long) : Work
        Work workItem;
        ((ThreadPoolImpl)workerThreadPool).incrementNumberOfAvailableThreads();

            if (theWorkQueue.size() != 0) {
                workItem = (Work)theWorkQueue.removeFirst();
                totalTimeInQueue += System.currentTimeMillis() - workItem.getEnqueueTime();
                workItemsDequeued++;
                ((ThreadPoolImpl)workerThreadPool).decrementNumberOfAvailableThreads();
                return workItem;
            }

            try {

                long remainingWaitTime = waitTime;
                long finishTime = System.currentTimeMillis() + waitTime;

                do {

                    this.wait(remainingWaitTime);

                    if (theWorkQueue.size() != 0) {
                        workItem = (Work)theWorkQueue.removeFirst();
                        totalTimeInQueue += System.currentTimeMillis() - workItem.getEnqueueTime();
                        workItemsDequeued++;
                        ((ThreadPoolImpl)workerThreadPool).decrementNumberOfAvailableThreads();
                        return workItem;
                    }

                    remainingWaitTime = finishTime - System.currentTimeMillis();

                } while (remainingWaitTime > 0);

                ((ThreadPoolImpl)workerThreadPool).decrementNumberOfAvailableThreads();
                throw new TimeoutException();

            } catch (InterruptedException ie) {
                ((ThreadPoolImpl)workerThreadPool).decrementNumberOfAvailableThreads();
                throw ie;
            }
!!!1300994.java!!!	setThreadPool(inout workerThreadPool : ThreadPool) : void
            this.workerThreadPool = workerThreadPool;
!!!1301122.java!!!	getThreadPool() : ThreadPool
            return workerThreadPool;
!!!1301250.java!!!	totalWorkItemsAdded() : long
        return workItemsAdded;
!!!1301378.java!!!	workItemsInQueue() : int
        return theWorkQueue.size();
!!!1301506.java!!!	averageTimeInQueue() : long
        return (totalTimeInQueue/workItemsDequeued);
!!!1301634.java!!!	getName() : String
        return name;
