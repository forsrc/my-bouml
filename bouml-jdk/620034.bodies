class SAXImpl
!!!4047618.java!!!	setDocumentURI(inout uri : String) : void
        if (uri != null) {
            setDocumentBaseURI(SystemIDResolver.getAbsoluteURI(uri));
        }
!!!4047746.java!!!	getDocumentURI() : String
        String baseURI = getDocumentBaseURI();
        return (baseURI != null) ? baseURI : "rtf" + _documentURIIndex++;
!!!4047874.java!!!	getDocumentURI(in node : int) : String
        return getDocumentURI();
!!!4048002.java!!!	setupMapping(inout names : String [[]], inout urisArray : String [[]], inout typesArray : int [[]], inout namespaces : String [[]]) : void
        // This method only has a function in DOM adapters
!!!4048130.java!!!	lookupNamespace(in node : int, inout prefix : String) : String
        int anode, nsnode;
        final AncestorIterator ancestors = new AncestorIterator();

        if (isElement(node)) {
            ancestors.includeSelf();
        }

        ancestors.setStartNode(node);
        while ((anode = ancestors.next()) != DTM.NULL) {
            final NamespaceIterator namespaces = new NamespaceIterator();

            namespaces.setStartNode(anode);
            while ((nsnode = namespaces.next()) != DTM.NULL) {
                if (getLocalName(nsnode).equals(prefix)) {
                    return getNodeValue(nsnode);
                }
            }
        }

        BasisLibrary.runTimeError(BasisLibrary.NAMESPACE_PREFIX_ERR, prefix);
        return null;
!!!4048258.java!!!	isElement(in node : int) : boolean
        return getNodeType(node) == DTM.ELEMENT_NODE;
!!!4048386.java!!!	isAttribute(in node : int) : boolean
        return getNodeType(node) == DTM.ATTRIBUTE_NODE;
!!!4048514.java!!!	getSize() : int
        return getNumberOfNodes();
!!!4048770.java!!!	lessThan(in node1 : int, in node2 : int) : boolean
        if (node1 == DTM.NULL) {
            return false;
        }

        if (node2 == DTM.NULL) {
            return true;
        }

        return (node1 < node2);
!!!4048898.java!!!	makeNode(in index : int) : Node
        if (_nodes == null) {
            _nodes = new Node[_namesSize];
        }

        int nodeID = makeNodeIdentity(index);
        if (nodeID < 0) {
            return null;
        }
        else if (nodeID < _nodes.length) {
            return (_nodes[nodeID] != null) ? _nodes[nodeID]
                : (_nodes[nodeID] = new DTMNodeProxy((DTM)this, index));
        }
        else {
            return new DTMNodeProxy((DTM)this, index);
        }
!!!4049026.java!!!	makeNode(inout iter : DTMAxisIterator) : Node
        return makeNode(iter.next());
!!!4049154.java!!!	makeNodeList(in index : int) : NodeList
        if (_nodeLists == null) {
            _nodeLists = new NodeList[_namesSize];
        }

        int nodeID = makeNodeIdentity(index);
        if (nodeID < 0) {
            return null;
        }
        else if (nodeID < _nodeLists.length) {
            return (_nodeLists[nodeID] != null) ? _nodeLists[nodeID]
                   : (_nodeLists[nodeID] = new DTMAxisIterNodeList(this,
                                                 new SingletonIterator(index)));
    }
        else {
            return new DTMAxisIterNodeList(this, new SingletonIterator(index));
        }
!!!4049282.java!!!	makeNodeList(inout iter : DTMAxisIterator) : NodeList
        return new DTMAxisIterNodeList(this, iter);
