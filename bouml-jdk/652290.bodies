class DeepNodeListImpl
!!!4224642.java!!!	DeepNodeListImpl(inout rootNode : NodeImpl, inout tagName : String)
        this.rootNode = rootNode;
        this.tagName  = tagName;
        nodes = new Vector();
!!!4224770.java!!!	DeepNodeListImpl(inout rootNode : NodeImpl, inout nsName : String, inout tagName : String)
        this(rootNode, tagName);
        this.nsName = (nsName != null && !nsName.equals("")) ? nsName : null;
        enableNS = true;
!!!4224898.java!!!	getLength() : int
        // Preload all matching elements. (Stops when we run out of subtree!)
        item(java.lang.Integer.MAX_VALUE);
        return nodes.size();
!!!4225026.java!!!	item(in index : int) : Node
        Node thisNode;

        // Tree changed. Do it all from scratch!
        if(rootNode.changes() != changes) {
            nodes   = new Vector();
            changes = rootNode.changes();
        }

        // In the cache
        if (index < nodes.size())
            return (Node)nodes.elementAt(index);

        // Not yet seen
        else {

            // Pick up where we left off (Which may be the beginning)
                if (nodes.size() == 0)
                    thisNode = rootNode;
                else
                    thisNode=(NodeImpl)(nodes.lastElement());

                // Add nodes up to the one we're looking for
                while(thisNode != null && index >= nodes.size()) {
                        thisNode=nextMatchingElementAfter(thisNode);
                        if (thisNode != null)
                            nodes.addElement(thisNode);
                    }

            // Either what we want, or null (not avail.)
                    return thisNode;
            }

!!!4225154.java!!!	nextMatchingElementAfter(inout current : Node) : Node

            Node next;
            while (current != null) {
                    // Look down to first child.
                    if (current.hasChildNodes()) {
                            current = (current.getFirstChild());
                    }

                    // Look right to sibling (but not from root!)
                    else if (current != rootNode && null != (next = current.getNextSibling())) {
                                current = next;
                        }

                        // Look up and right (but not past root!)
                        else {
                                next = null;
                                for (; current != rootNode; // Stop when we return to starting point
                                        current = current.getParentNode()) {

                                        next = current.getNextSibling();
                                        if (next != null)
                                                break;
                                }
                                current = next;
                        }

                        // Have we found an Element with the right tagName?
                        // ("*" matches anything.)
                    if (current != rootNode
                        && current != null
                        && current.getNodeType() ==  Node.ELEMENT_NODE) {
                        if (!enableNS) {
                            if (tagName.equals("*") ||
                                ((ElementImpl) current).getTagName().equals(tagName))
                            {
                                return current;
                            }
                        } else {
                            // DOM2: Namespace logic.
                            if (tagName.equals("*")) {
                                if (nsName != null && nsName.equals("*")) {
                                    return current;
                                } else {
                                    ElementImpl el = (ElementImpl) current;
                                    if ((nsName == null
                                         && el.getNamespaceURI() == null)
                                        || (nsName != null
                                            && nsName.equals(el.getNamespaceURI())))
                                    {
                                        return current;
                                    }
                                }
                            } else {
                                ElementImpl el = (ElementImpl) current;
                                if (el.getLocalName() != null
                                    && el.getLocalName().equals(tagName)) {
                                    if (nsName != null && nsName.equals("*")) {
                                        return current;
                                    } else {
                                        if ((nsName == null
                                             && el.getNamespaceURI() == null)
                                            || (nsName != null &&
                                                nsName.equals(el.getNamespaceURI())))
                                        {
                                            return current;
                                        }
                                    }
                                }
                            }
                        }
                    }

                // Otherwise continue walking the tree
            }

            // Fell out of tree-walk; no more instances found
            return null;

