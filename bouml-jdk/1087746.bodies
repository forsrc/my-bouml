class LanguageRange
!!!8855170.java!!!	LanguageRange(inout range : String)
            this(range, MAX_WEIGHT);
!!!8855298.java!!!	LanguageRange(inout range : String, in weight : double)
            if (range == null) {
                throw new NullPointerException();
            }
            if (weight < MIN_WEIGHT || weight > MAX_WEIGHT) {
                throw new IllegalArgumentException("weight=" + weight);
            }

            range = range.toLowerCase();

            // Do syntax check.
            boolean isIllFormed = false;
            String[] subtags = range.split("-");
            if (isSubtagIllFormed(subtags[0], true)
                || range.endsWith("-")) {
                isIllFormed = true;
            } else {
                for (int i = 1; i < subtags.length; i++) {
                    if (isSubtagIllFormed(subtags[i], false)) {
                        isIllFormed = true;
                        break;
                    }
                }
            }
            if (isIllFormed) {
                throw new IllegalArgumentException("range=" + range);
            }

            this.range = range;
            this.weight = weight;
!!!8855426.java!!!	isSubtagIllFormed(inout subtag : String, inout isFirstSubtag : boolean) : boolean
            if (subtag.equals("") || subtag.length() > 8) {
                return true;
            } else if (subtag.equals("*")) {
                return false;
            }
            char[] charArray = subtag.toCharArray();
            if (isFirstSubtag) { // ALPHA
                for (char c : charArray) {
                    if (c < 'a' || c > 'z') {
                        return true;
                    }
                }
            } else { // ALPHA / DIGIT
                for (char c : charArray) {
                    if (c < '0' || (c > '9' && c < 'a') || c > 'z') {
                        return true;
                    }
                }
            }
            return false;
!!!8855554.java!!!	getRange() : String
            return range;
!!!8855682.java!!!	getWeight() : double
            return weight;
!!!8855810.java!!!	parse(inout ranges : String) : List
            return LocaleMatcher.parse(ranges);
!!!8855938.java!!!	parse(inout ranges : String, inout map : Map) : List
            return mapEquivalents(parse(ranges), map);
!!!8856066.java!!!	mapEquivalents(inout priorityList : List, inout map : Map) : List
            return LocaleMatcher.mapEquivalents(priorityList, map);
!!!8856194.java!!!	hashCode() : int
            if (hash == 0) {
                int result = 17;
                result = 37*result + range.hashCode();
                long bitsWeight = Double.doubleToLongBits(weight);
                result = 37*result + (int)(bitsWeight ^ (bitsWeight >>> 32));
                hash = result;
            }
            return hash;
!!!8856322.java!!!	equals(inout obj : Object) : boolean
            if (this == obj) {
                return true;
            }
            if (!(obj instanceof LanguageRange)) {
                return false;
            }
            LanguageRange other = (LanguageRange)obj;
            return hash == other.hash
                   && range.equals(other.range)
                   && weight == other.weight;
