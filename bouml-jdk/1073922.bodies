class UnmodifiableList
!!!8684034.java!!!	UnmodifiableList(inout list : List)
            super(list);
            this.list = list;
!!!8684162.java!!!	equals(inout o : Object) : boolean
return o == this || list.equals(o);
!!!8684290.java!!!	hashCode() : int
return list.hashCode();
!!!8684418.java!!!	get(in index : int) : E
return list.get(index);
!!!8684546.java!!!	set(in index : int, inout element : E) : E
            throw new UnsupportedOperationException();
!!!8684674.java!!!	add(in index : int, inout element : E) : void
            throw new UnsupportedOperationException();
!!!8684802.java!!!	remove(in index : int) : E
            throw new UnsupportedOperationException();
!!!8684930.java!!!	indexOf(inout o : Object) : int
return list.indexOf(o);
!!!8685058.java!!!	lastIndexOf(inout o : Object) : int
return list.lastIndexOf(o);
!!!8685186.java!!!	addAll(in index : int, inout c : Collection) : boolean
            throw new UnsupportedOperationException();
!!!8685314.java!!!	replaceAll(inout operator : UnaryOperator) : void
            throw new UnsupportedOperationException();
!!!8685442.java!!!	sort(inout c : Comparator) : void
            throw new UnsupportedOperationException();
!!!8685570.java!!!	listIterator() : ListIterator
return listIterator(0);
!!!8685698.java!!!	listIterator(in index : int) : ListIterator
            return new ListIterator<E>() {
                private final ListIterator<? extends E> i
                    = list.listIterator(index);

                public boolean hasNext()     {return i.hasNext();}
                public E next()              {return i.next();}
                public boolean hasPrevious() {return i.hasPrevious();}
                public E previous()          {return i.previous();}
                public int nextIndex()       {return i.nextIndex();}
                public int previousIndex()   {return i.previousIndex();}

                public void remove() {
                    throw new UnsupportedOperationException();
                }
                public void set(E e) {
                    throw new UnsupportedOperationException();
                }
                public void add(E e) {
                    throw new UnsupportedOperationException();
                }

                @Override
                public void forEachRemaining(Consumer<? super E> action) {
                    i.forEachRemaining(action);
                }
            };
!!!8685826.java!!!	subList(in fromIndex : int, in toIndex : int) : List
            return new UnmodifiableList<>(list.subList(fromIndex, toIndex));
!!!8685954.java!!!	readResolve() : Object
            return (list instanceof RandomAccess
                    ? new UnmodifiableRandomAccessList<>(list)
                    : this);
