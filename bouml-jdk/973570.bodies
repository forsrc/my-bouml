class Authority
!!!7571458.java!!!	Authority(inout scheme : String, inout authority : String)
            int at = authority.indexOf('@');
            if (at == -1) {
                    p = new HostPortrange(scheme, authority);
            } else {
                    p = new HostPortrange(scheme, authority.substring(at+1));
            }
!!!7571586.java!!!	implies(inout other : URLPermission::Authority) : boolean
            return impliesHostrange(other) && impliesPortrange(other);
!!!7571714.java!!!	impliesHostrange(inout that : URLPermission::Authority) : boolean
            String thishost = this.p.hostname();
            String thathost = that.p.hostname();

            if (p.wildcard() && thishost.equals("")) {
                // this "*" implies all others
                return true;
            }
            if (that.p.wildcard() && thathost.equals("")) {
                // that "*" can only be implied by this "*"
                return false;
            }
            if (thishost.equals(thathost)) {
                // covers all cases of literal IP addresses and fixed
                // domain names.
                return true;
            }
            if (this.p.wildcard()) {
                // this "*.foo.com" implies "bub.bar.foo.com"
                return thathost.endsWith(thishost);
            }
            return false;
!!!7571842.java!!!	impliesPortrange(inout that : URLPermission::Authority) : boolean
            int[] thisrange = this.p.portrange();
            int[] thatrange = that.p.portrange();
            if (thisrange[0] == -1) {
                /* port not specified non http/s URL */
                return true;
            }
            return thisrange[0] <= thatrange[0] &&
                        thisrange[1] >= thatrange[1];
!!!7571970.java!!!	equals(inout that : URLPermission::Authority) : boolean
            return this.p.equals(that.p);
!!!7572098.java!!!	hashCode() : int
            return p.hashCode();
