class FeaturePropertyBase
!!!3657730.java!!!	setValue(inout property : Enum, inout state : FeaturePropertyBase::State, inout value : String) : void
        //only update if it shall override
        if (state.compareTo(states[property.ordinal()]) >= 0) {
            values[property.ordinal()] = value;
            states[property.ordinal()] = state;
        }
!!!3657858.java!!!	setValue(in index : int, inout state : FeaturePropertyBase::State, inout value : String) : void
        //only update if it shall override
        if (state.compareTo(states[index]) >= 0) {
            values[index] = value;
            states[index] = state;
        }
!!!3657986.java!!!	setValue(inout propertyName : String, inout state : FeaturePropertyBase::State, inout value : Object) : boolean
        int index = getIndex(propertyName);
        if (index > -1) {
            setValue(index, state, (String)value);
            return true;
        }
        return false;
!!!3658114.java!!!	setValue(inout propertyName : String, inout state : FeaturePropertyBase::State, inout value : boolean) : boolean
        int index = getIndex(propertyName);
        if (index > -1) {
            if (value) {
                setValue(index, state, XalanConstants.FEATURE_TRUE);
            } else {
                setValue(index, state, XalanConstants.FEATURE_FALSE);
            }
            return true;
        }
        return false;
!!!3658242.java!!!	getValue(inout property : Enum) : String
        return values[property.ordinal()];
!!!3658370.java!!!	getValue(inout property : String) : String
        int index = getIndex(property);
        if (index > -1) {
            return getValueByIndex(index);
        }
        return null;
!!!3658498.java!!!	getValueAsString(inout propertyName : String) : String
        int index = getIndex(propertyName);
        if (index > -1) {
            return getValueByIndex(index);
        }

        return null;
!!!3658626.java!!!	getValueByIndex(in index : int) : String
        return values[index];
!!!3658882.java!!!	getIndex(inout property : Class, inout propertyName : String) : int
        for (Enum<E> enumItem : property.getEnumConstants()) {
            if (enumItem.toString().equals(propertyName)) {
                //internally, ordinal is used as index
                return enumItem.ordinal();
            }
        }
        return -1;
!!!3659010.java!!!	getSystemProperty(inout property : Enum, inout systemProperty : String) : void
        try {
            String value = SecuritySupport.getSystemProperty(systemProperty);
            if (value != null) {
                values[property.ordinal()] = value;
                states[property.ordinal()] = State.SYSTEMPROPERTY;
                return;
            }

            value = SecuritySupport.readJAXPProperty(systemProperty);
            if (value != null) {
                values[property.ordinal()] = value;
                states[property.ordinal()] = State.JAXPDOTPROPERTIES;
            }
        } catch (NumberFormatException e) {
            //invalid setting ignored
        }
