class LeafElement
!!!2388226.java!!!	LeafElement(inout parent : Element, inout a : AttributeSet, in offs0 : int, in offs1 : int)
            super(parent, a);
            try {
                p0 = createPosition(offs0);
                p1 = createPosition(offs1);
            } catch (BadLocationException e) {
                p0 = null;
                p1 = null;
                throw new StateInvariantError("Can't create Position references");
            }
!!!2388354.java!!!	toString() : String
            return "LeafElement(" + getName() + ") " + p0 + "," + p1 + "\n";
!!!2388482.java!!!	getStartOffset() : int
            return p0.getOffset();
!!!2388610.java!!!	getEndOffset() : int
            return p1.getOffset();
!!!2388738.java!!!	getName() : String
            String nm = super.getName();
            if (nm == null) {
                nm = ContentElementName;
            }
            return nm;
!!!2388866.java!!!	getElementIndex(in pos : int) : int
            return -1;
!!!2388994.java!!!	getElement(in index : int) : Element
            return null;
!!!2389122.java!!!	getElementCount() : int
            return 0;
!!!2389250.java!!!	isLeaf() : boolean
            return true;
!!!2389378.java!!!	getAllowsChildren() : boolean
            return false;
!!!2389506.java!!!	children() : Enumeration
            return null;
!!!2389634.java!!!	writeObject(inout s : ObjectOutputStream) : void
            s.defaultWriteObject();
            s.writeInt(p0.getOffset());
            s.writeInt(p1.getOffset());
!!!2389762.java!!!	readObject(inout s : ObjectInputStream) : void
            s.defaultReadObject();

            // set the range with positions that track change
            int off0 = s.readInt();
            int off1 = s.readInt();
            try {
                p0 = createPosition(off0);
                p1 = createPosition(off1);
            } catch (BadLocationException e) {
                p0 = null;
                p1 = null;
                throw new IOException("Can't restore Position references");
            }
