class DateFormatter
!!!10723586.java!!!	DateFormatter()
        this(DateFormat.getDateInstance());
!!!10723714.java!!!	DateFormatter(inout format : DateFormat)
        super(format);
        setFormat(format);
!!!10723842.java!!!	setFormat(inout format : DateFormat) : void
        super.setFormat(format);
!!!10723970.java!!!	getCalendar() : Calendar
        Format f = getFormat();

        if (f instanceof DateFormat) {
            return ((DateFormat)f).getCalendar();
        }
        return Calendar.getInstance();
!!!10724098.java!!!	getSupportsIncrement() : boolean
        return true;
!!!10724226.java!!!	getAdjustField(in start : int, inout attributes : Map) : Object
        Iterator attrs = attributes.keySet().iterator();

        while (attrs.hasNext()) {
            Object key = attrs.next();

            if ((key instanceof DateFormat.Field) &&
                (key == DateFormat.Field.HOUR1 ||
                 ((DateFormat.Field)key).getCalendarField() != -1)) {
                return key;
            }
        }
        return null;
!!!10724354.java!!!	adjustValue(inout value : Object, inout attributes : Map, inout key : Object, in direction : int) : Object
        if (key != null) {
            int field;

            // HOUR1 has no corresponding calendar field, thus, map
            // it to HOUR0 which will give the correct behavior.
            if (key == DateFormat.Field.HOUR1) {
                key = DateFormat.Field.HOUR0;
            }
            field = ((DateFormat.Field)key).getCalendarField();

            Calendar calendar = getCalendar();

            if (calendar != null) {
                calendar.setTime((Date)value);

                int fieldValue = calendar.get(field);

                try {
                    calendar.add(field, direction);
                    value = calendar.getTime();
                } catch (Throwable th) {
                    value = null;
                }
                return value;
            }
        }
        return null;
