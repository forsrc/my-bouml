class SimpleBindings
!!!10205826.java!!!	SimpleBindings(inout m : Map)
        if (m == null) {
            throw new NullPointerException();
        }
        this.map = m;
!!!10205954.java!!!	SimpleBindings()
        this(new HashMap<String,Object>());
!!!10206082.java!!!	put(inout name : String, inout value : Object) : Object
        checkKey(name);
        return map.put(name,value);
!!!10206210.java!!!	putAll(inout toMerge : Map) : void
        if (toMerge == null) {
            throw new NullPointerException("toMerge map is null");
        }
        for (Map.Entry<? extends String, ? extends Object> entry : toMerge.entrySet()) {
            String key = entry.getKey();
            checkKey(key);
            put(key, entry.getValue());
        }
!!!10206338.java!!!	clear() : void
        map.clear();
!!!10206466.java!!!	containsKey(inout key : Object) : boolean
        checkKey(key);
        return map.containsKey(key);
!!!10206594.java!!!	containsValue(inout value : Object) : boolean
        return map.containsValue(value);
!!!10206722.java!!!	entrySet() : Set
        return map.entrySet();
!!!10206850.java!!!	get(inout key : Object) : Object
        checkKey(key);
        return map.get(key);
!!!10206978.java!!!	isEmpty() : boolean
        return map.isEmpty();
!!!10207106.java!!!	keySet() : Set
        return map.keySet();
!!!10207234.java!!!	remove(inout key : Object) : Object
        checkKey(key);
        return map.remove(key);
!!!10207362.java!!!	size() : int
        return map.size();
!!!10207490.java!!!	values() : Collection
        return map.values();
!!!10207618.java!!!	checkKey(inout key : Object) : void
        if (key == null) {
            throw new NullPointerException("key can not be null");
        }
        if (!(key instanceof String)) {
            throw new ClassCastException("key should be a String");
        }
        if (key.equals("")) {
            throw new IllegalArgumentException("key can not be empty");
        }
