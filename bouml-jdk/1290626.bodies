class NumberEditor
!!!10728706.java!!!	getDefaultPattern(inout locale : Locale) : String
            // Get the pattern for the default locale.
            LocaleProviderAdapter adapter;
            adapter = LocaleProviderAdapter.getAdapter(NumberFormatProvider.class,
                                                       locale);
            LocaleResources lr = adapter.getLocaleResources(locale);
            if (lr == null) {
                lr = LocaleProviderAdapter.forJRE().getLocaleResources(locale);
            }
            String[] all = lr.getNumberPatterns();
            return all[0];
!!!10728834.java!!!	NumberEditor(inout spinner : JSpinner)
            this(spinner, getDefaultPattern(spinner.getLocale()));
!!!10728962.java!!!	NumberEditor(inout spinner : JSpinner, inout decimalFormatPattern : String)
            this(spinner, new DecimalFormat(decimalFormatPattern));
!!!10729090.java!!!	NumberEditor(inout spinner : JSpinner, inout format : DecimalFormat)
            super(spinner);
            if (!(spinner.getModel() instanceof SpinnerNumberModel)) {
                throw new IllegalArgumentException(
                          "model not a SpinnerNumberModel");
            }

            SpinnerNumberModel model = (SpinnerNumberModel)spinner.getModel();
            NumberFormatter formatter = new NumberEditorFormatter(model,
                                                                  format);
            DefaultFormatterFactory factory = new DefaultFormatterFactory(
                                                  formatter);
            JFormattedTextField ftf = getTextField();
            ftf.setEditable(true);
            ftf.setFormatterFactory(factory);
            ftf.setHorizontalAlignment(JTextField.RIGHT);

            /* TBD - initializing the column width of the text field
             * is imprecise and doing it here is tricky because
             * the developer may configure the formatter later.
             */
            try {
                String maxString = formatter.valueToString(model.getMinimum());
                String minString = formatter.valueToString(model.getMaximum());
                ftf.setColumns(Math.max(maxString.length(),
                                        minString.length()));
            }
            catch (ParseException e) {
                // TBD should throw a chained error here
            }

!!!10729218.java!!!	getFormat() : DecimalFormat
            return (DecimalFormat)((NumberFormatter)(getTextField().getFormatter())).getFormat();
!!!10729346.java!!!	getModel() : SpinnerNumberModel
            return (SpinnerNumberModel)(getSpinner().getModel());
