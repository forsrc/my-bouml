format 222
"daemon" // jdk1.8::com::sun::jmx::snmp::daemon
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/jmx/snmp/daemon/"
  java_package "com.sun.jmx.snmp.daemon"
  classview 154370 "daemon"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 526082 "ClientHandler"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " jmx RI import


The <CODE>ClientHandler</CODE> class is the base class of each
adaptor.<p>
"
      classrelation 1033090 // <realization>
	relation 1033090 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1033090 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      operation 3180034 "ClientHandler"
	public explicit_return_type ""
	nparams 4
	  param inout name "server" type class_ref 526210 // CommunicatorServer
	  param in name "id" explicit_type "int"
	  param inout name "f" type class_ref 485122 // MBeanServer
	  param inout name "n" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3180162 "createThread"
	package return_type class_ref 128642 // Thread
	nparams 1
	  param inout name "r" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " thread service"
      end

      operation 3180290 "interrupt"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3180418 "join"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3180546 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3180674 "doRun"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The protocol-dependent part of the request
"
      end

      classrelation 1033218 // adaptorServer (<unidirectional association>)
	relation 1033218 --->
	  a role_name "adaptorServer" init_value " null " protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1033218 // adaptorServer (<unidirectional association>)
	  b parent class_ref 526210 // CommunicatorServer
      end

      attribute 670466 "requestId"
	protected explicit_type "int"
	init_value " -1 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1033346 // mbs (<unidirectional association>)
	relation 1033346 --->
	  a role_name "mbs" init_value " null " protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1033346 // mbs (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 1033474 // objectName (<unidirectional association>)
	relation 1033474 --->
	  a role_name "objectName" init_value " null " protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1033474 // objectName (<unidirectional association>)
	  b parent class_ref 485506 // ObjectName
      end

      classrelation 1033602 // thread (<unidirectional association>)
	relation 1033602 --->
	  a role_name "thread" init_value " null " protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1033602 // thread (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      attribute 670594 "interruptCalled"
	protected explicit_type "boolean"
	init_value " false "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1033730 // dbgTag (<unidirectional association>)
	relation 1033730 --->
	  a role_name "dbgTag" init_value " null " protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1033730 // dbgTag (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 3180802 "makeDebugTag"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 526210 "CommunicatorServer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines generic behavior for the server part of a connector or an adaptor.
Most connectors or adaptors extend <CODE>CommunicatorServer</CODE>
and inherit this behavior. Connectors or adaptors that do not fit into
this model do not extend <CODE>CommunicatorServer</CODE>.
<p>
A <CODE>CommunicatorServer</CODE> is an active object, it listens for
client requests  and processes them in its own thread. When necessary, a
<CODE>CommunicatorServer</CODE> creates other threads to process multiple
requests concurrently.
<p>
A <CODE>CommunicatorServer</CODE> object can be stopped by calling the
<CODE>stop</CODE> method. When it is stopped, the
<CODE>CommunicatorServer</CODE> no longer listens to client requests and
no longer holds any thread or communication resources.
It can be started again by calling the <CODE>start</CODE> method.
<p>
A <CODE>CommunicatorServer</CODE> has a <CODE>State</CODE> attribute
which reflects its  activity.
<p>
<TABLE>
<TR><TH>CommunicatorServer</TH>      <TH>State</TH></TR>
<TR><TD><CODE>stopped</CODE></TD>    <TD><CODE>OFFLINE</CODE></TD></TR>
<TR><TD><CODE>starting</CODE></TD>    <TD><CODE>STARTING</CODE></TD></TR>
<TR><TD><CODE>running</CODE></TD>     <TD><CODE>ONLINE</CODE></TD></TR>
<TR><TD><CODE>stopping</CODE></TD>     <TD><CODE>STOPPING</CODE></TD></TR>
</TABLE>
<p>
The <CODE>STARTING</CODE> state marks the transition
from <CODE>OFFLINE</CODE> to <CODE>ONLINE</CODE>.
<p>
The <CODE>STOPPING</CODE> state marks the transition from
<CODE>ONLINE</CODE> to <CODE>OFFLINE</CODE>. This occurs when the
<CODE>CommunicatorServer</CODE> is finishing or interrupting active
requests.
<p>
When a <CODE>CommunicatorServer</CODE> is unregistered from the MBeanServer,
it is stopped automatically.
<p>
When the value of the <CODE>State</CODE> attribute changes the
<CODE>CommunicatorServer</CODE> sends a
<tt>{@link javax.management.AttributeChangeNotification}</tt> to the
registered listeners, if any.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1034114 // <realization>
	relation 1034114 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1034114 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      classrelation 1034242 // <realization>
	relation 1034242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1034242 // <realization>
	  b parent class_ref 488578 // MBeanRegistration
      end

      classrelation 1034370 // <realization>
	relation 1034370 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1034370 // <realization>
	  b parent class_ref 497794 // NotificationBroadcaster
      end

      classrelation 1034498 // <realization>
	relation 1034498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1034498 // <realization>
	  b parent class_ref 526594 // CommunicatorServerMBean
      end

      attribute 670978 "ONLINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " States of a CommunicatorServer


Represents an <CODE>ONLINE</CODE> state.

"
      end

      attribute 671106 "OFFLINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents an <CODE>OFFLINE</CODE> state.

"
      end

      attribute 671234 "STOPPING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents a <CODE>STOPPING</CODE> state.

"
      end

      attribute 671362 "STARTING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents a <CODE>STARTING</CODE> state.

"
      end

      attribute 671490 "SNMP_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Types of connectors.


Indicates that it is an RMI connector type.

public static final int RMI_TYPE = 1 ;

Indicates that it is an HTTP connector type.

public static final int HTTP_TYPE = 2 ;

Indicates that it is an HTML connector type.

public static final int HTML_TYPE = 3 ;

Indicates that it is an SNMP connector type.

"
      end

      attribute 671618 "state"
	volatile package explicit_type "int"
	init_value " OFFLINE "
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that it is an HTTPS connector type.

public static final int HTTPS_TYPE = 5 ;

 Package variables


The state of the connector server.

"
      end

      classrelation 1034626 // objectName (<unidirectional association>)
	relation 1034626 --->
	  a role_name "objectName" package
	    comment "
The object name of the connector server.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1034626 // objectName (<unidirectional association>)
	  b parent class_ref 485506 // ObjectName
      end

      classrelation 1034754 // topMBS (<unidirectional association>)
	relation 1034754 --->
	  a role_name "topMBS" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1034754 // topMBS (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 1034882 // bottomMBS (<unidirectional association>)
	relation 1034882 --->
	  a role_name "bottomMBS" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1034882 // bottomMBS (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 1035010 // dbgTag (<unidirectional association>)
	relation 1035010 --->
	  a role_name "dbgTag" init_value " null " package
	    comment "

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1035010 // dbgTag (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 671746 "maxActiveClientCount"
	package explicit_type "int"
	init_value " 1 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum number of clients that the CommunicatorServer can
process concurrently.
@serial

"
      end

      attribute 671874 "servedClientCount"
	package explicit_type "int"
	init_value " 0 "
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1035138 // host (<unidirectional association>)
	relation 1035138 --->
	  a role_name "host" init_value " null " package
	    comment "
The host name used by this CommunicatorServer.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1035138 // host (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 672002 "port"
	package explicit_type "int"
	init_value " -1 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The port number used by this CommunicatorServer.
@serial

"
      end

      classrelation 1035266 // stateLock (<unidirectional association>)
	relation 1035266 --->
	  a role_name "stateLock" init_value " new Object()" private
	    comment " Private fields

 This object controls access to the \"state\" and \"interrupted\" variables.
If held at the same time as the lock on \"this\", the \"this\" lock must
be taken first.  
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1035266 // stateLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1035394 // clientHandlerVector (<unidirectional association>)
	relation 1035394 --->
	  a role_name "clientHandlerVector" init_value " new Vector<>() " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ClientHandler> ${name}${value};
"
	    classrelation_ref 1035394 // clientHandlerVector (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1035522 // mainThread (<unidirectional association>)
	relation 1035522 --->
	  a role_name "mainThread" init_value " null " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1035522 // mainThread (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      attribute 672130 "stopRequested"
	volatile private explicit_type "boolean"
	init_value " false "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 672258 "interrupted"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1035650 // startException (<unidirectional association>)
	relation 1035650 --->
	  a role_name "startException" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1035650 // startException (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      attribute 672386 "notifCount"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Notifs count, broadcaster and info
"
      end

      classrelation 1035778 // notifBroadcaster (<unidirectional association>)
	relation 1035778 --->
	  a role_name "notifBroadcaster" init_value "
        new NotificationBroadcasterSupport()" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1035778 // notifBroadcaster (<unidirectional association>)
	  b parent class_ref 497922 // NotificationBroadcasterSupport
      end

      classrelation 1035906 // notifInfos (<unidirectional association>)
	relation 1035906 --->
	  a role_name "notifInfos" multiplicity "[]" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1035906 // notifInfos (<unidirectional association>)
	  b parent class_ref 497154 // MBeanNotificationInfo
      end

      operation 3183106 "CommunicatorServer"
	public explicit_return_type ""
	nparams 1
	  param in name "connectorType" explicit_type "int"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiates a <CODE>CommunicatorServer</CODE>.

@param connectorType Indicates the connector type. Possible values are:
SNMP_TYPE.

@exception <CODE>java.lang.IllegalArgumentException</CODE>
           This connector type is not correct.
"
      end

      operation 3183234 "createMainThread"
	protected return_type class_ref 128642 // Thread
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3183362 "start"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts this <CODE>CommunicatorServer</CODE>.
<p>
Has no effect if this <CODE>CommunicatorServer</CODE> is
<CODE>ONLINE</CODE> or <CODE>STOPPING</CODE>.
@param timeout Time in ms to wait for the connector to start.
       If <code>timeout</code> is positive, wait for at most
       the specified time. An infinite timeout can be specified
       by passing a <code>timeout</code> value equals
       <code>Long.MAX_VALUE</code>. In that case the method
       will wait until the connector starts or fails to start.
       If timeout is negative or zero, returns as soon as possible
       without waiting.
@exception CommunicationException if the connectors fails to start.
@exception InterruptedException if the thread is interrupted or the
           timeout expires.
"
      end

      operation 3183490 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Starts this <CODE>CommunicatorServer</CODE>.
<p>
Has no effect if this <CODE>CommunicatorServer</CODE> is
<CODE>ONLINE</CODE> or <CODE>STOPPING</CODE>.
"
      end

      operation 3183618 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Stops this <CODE>CommunicatorServer</CODE>.
<p>
Has no effect if this <CODE>CommunicatorServer</CODE> is
<CODE>OFFLINE</CODE> or  <CODE>STOPPING</CODE>.
"
      end

      operation 3183746 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Tests whether the <CODE>CommunicatorServer</CODE> is active.

@return True if connector is <CODE>ONLINE</CODE>; false otherwise.
"
      end

      operation 3183874 "waitState"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "wantedState" explicit_type "int"
	  param in name "timeOut" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Waits until either the State attribute of this MBean equals the
specified <VAR>wantedState</VAR> parameter,
or the specified  <VAR>timeOut</VAR> has elapsed.
The method <CODE>waitState</CODE> returns with a boolean value
indicating whether the specified <VAR>wantedState</VAR> parameter
equals the value of this MBean's State attribute at the time the method
terminates.</p>

<p>Two special cases for the <VAR>timeOut</VAR> parameter value are:</p>
<UL><LI> if <VAR>timeOut</VAR> is negative then <CODE>waitState</CODE>
    returns immediately (i.e. does not wait at all),</LI>
<LI> if <VAR>timeOut</VAR> equals zero then <CODE>waitState</CODE>
    waits untill the value of this MBean's State attribute
    is the same as the <VAR>wantedState</VAR> parameter (i.e. will wait
    indefinitely if this condition is never met).</LI></UL>

@param wantedState The value of this MBean's State attribute to wait
       for. <VAR>wantedState</VAR> can be one of:
<ul>
<li><CODE>CommunicatorServer.OFFLINE</CODE>,</li>
<li><CODE>CommunicatorServer.ONLINE</CODE>,</li>
<li><CODE>CommunicatorServer.STARTING</CODE>,</li>
<li><CODE>CommunicatorServer.STOPPING</CODE>.</li>
</ul>
@param timeOut The maximum time to wait for, in milliseconds,
       if positive.
Infinite time out if 0, or no waiting at all if negative.

@return true if the value of this MBean's State attribute is the
     same as the <VAR>wantedState</VAR> parameter; false otherwise.
"
      end

      operation 3184002 "waitForStart"
	private explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "long"
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Waits until the communicator is started or timeout expires.

@param timeout Time in ms to wait for the connector to start.
       If <code>timeout</code> is positive, wait for at most
       the specified time. An infinite timeout can be specified
       by passing a <code>timeout</code> value equals
       <code>Long.MAX_VALUE</code>. In that case the method
       will wait until the connector starts or fails to start.
       If timeout is negative or zero, returns as soon as possible
       without waiting.

@exception CommunicationException if the connectors fails to start.
@exception InterruptedException if the thread is interrupted or the
           timeout expires.

"
      end

      operation 3184130 "getState"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the state of this <CODE>CommunicatorServer</CODE> as an integer.

@return <CODE>ONLINE</CODE>, <CODE>OFFLINE</CODE>,
        <CODE>STARTING</CODE> or <CODE>STOPPING</CODE>.
"
      end

      operation 3184258 "getStateString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the state of this <CODE>CommunicatorServer</CODE> as a string.

@return One of the strings \"ONLINE\", \"OFFLINE\", \"STARTING\" or
        \"STOPPING\".
"
      end

      operation 3184386 "getHost"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the host name used by this <CODE>CommunicatorServer</CODE>.

@return The host name used by this <CODE>CommunicatorServer</CODE>.
"
      end

      operation 3184514 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the port number used by this <CODE>CommunicatorServer</CODE>.

@return The port number used by this <CODE>CommunicatorServer</CODE>.
"
      end

      operation 3184642 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the port number used by this <CODE>CommunicatorServer</CODE>.

@param port The port number used by this
            <CODE>CommunicatorServer</CODE>.

@exception java.lang.IllegalStateException This method has been invoked
while the communicator was ONLINE or STARTING.
"
      end

      operation 3184770 "getProtocol"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the protocol being used by this <CODE>CommunicatorServer</CODE>.
@return The protocol as a string.
"
      end

      operation 3184898 "getServedClientCount"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of clients that have been processed by this
<CODE>CommunicatorServer</CODE>  since its creation.

@return The number of clients handled by this
        <CODE>CommunicatorServer</CODE>
        since its creation. This counter is not reset by the
        <CODE>stop</CODE> method.
"
      end

      operation 3185026 "getActiveClientCount"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of clients currently being processed by this
<CODE>CommunicatorServer</CODE>.

@return The number of clients currently being processed by this
        <CODE>CommunicatorServer</CODE>.
"
      end

      operation 3185154 "getMaxActiveClientCount"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum number of clients that this
<CODE>CommunicatorServer</CODE> can  process concurrently.

@return The maximum number of clients that this
        <CODE>CommunicatorServer</CODE> can
        process concurrently.
"
      end

      operation 3185282 "setMaxActiveClientCount"
	package explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum number of clients this
<CODE>CommunicatorServer</CODE> can process concurrently.

@param c The number of clients.

@exception java.lang.IllegalStateException This method has been invoked
while the communicator was ONLINE or STARTING.
"
      end

      operation 3185410 "notifyClientHandlerCreated"
	package explicit_return_type "void"
	nparams 1
	  param inout name "h" type class_ref 526082 // ClientHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3185538 "notifyClientHandlerDeleted"
	package explicit_return_type "void"
	nparams 1
	  param inout name "h" type class_ref 526082 // ClientHandler
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3185666 "getBindTries"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of times the communicator server will attempt
to bind before giving up.
"
      end

      operation 3185794 "getBindSleepTime"
	protected explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The delay, in ms, during which the communicator server will sleep before
attempting to bind again.
"
      end

      operation 3185922 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "For SNMP Runtime internal use only.
<p>
The <CODE>run</CODE> method executed by this connector's main thread.
"
      end

      operation 3186050 "doError"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	nexceptions 1
	  exception class_ref 526338 // CommunicationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3186178 "doBind"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To be defined by the subclass.

 Each method below is called by run() and must be subclassed.
 If the method sends an exception (Communication or Interrupt), this
 will end up the run() method and switch the connector offline.

 If it is a CommunicationException, run() will call
       Debug.printException().

 All these methods should propagate the InterruptedException to inform
 run() that the connector must be switch OFFLINE.



 doBind() should do all what is needed before calling doReceive().
 If doBind() throws an exception, doUnbind() is not to be called
 and run() ends up.


"
      end

      operation 3186306 "doReceive"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<CODE>doReceive()</CODE> should block until a client is available.
If this method throws an exception, <CODE>doProcess()</CODE> is not
called but <CODE>doUnbind()</CODE> is called then <CODE>run()</CODE>
stops.
"
      end

      operation 3186434 "doProcess"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<CODE>doProcess()</CODE> is called after <CODE>doReceive()</CODE>:
it should process the requests of the incoming client.
If it throws an exception, <CODE>doUnbind()</CODE> is called and
<CODE>run()</CODE> stops.
"
      end

      operation 3186562 "doUnbind"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<CODE>doUnbind()</CODE> is called whenever the connector goes
<CODE>OFFLINE</CODE>, except if <CODE>doBind()</CODE> has thrown an
exception.
"
      end

      operation 3186690 "getMBeanServer"
	public return_type class_ref 485122 // MBeanServer
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>MBeanServer</code> object to which incoming requests are
sent.  This is either the MBean server in which this connector is
registered, or an <code>MBeanServerForwarder</code> leading to that
server.
"
      end

      operation 3186818 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newMBS" type class_ref 485122 // MBeanServer
	nexceptions 2
	  exception class_ref 187778 // IllegalArgumentException
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the <code>MBeanServer</code> object to which incoming
requests are sent.  This must be either the MBean server in
which this connector is registered, or an
<code>MBeanServerForwarder</code> leading to that server.  An
<code>MBeanServerForwarder</code> <code>mbsf</code> leads to an
MBean server <code>mbs</code> if
<code>mbsf.getMBeanServer()</code> is either <code>mbs</code>
or an <code>MBeanServerForwarder</code> leading to
<code>mbs</code>.

@exception IllegalArgumentException if <code>newMBS</code> is neither
the MBean server in which this connector is registered nor an
<code>MBeanServerForwarder</code> leading to that server.

@exception IllegalStateException This method has been invoked
while the communicator was ONLINE or STARTING.
"
      end

      operation 3186946 "getObjectName"
	package return_type class_ref 485506 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To be called by the subclass if needed


For internal use only.
"
      end

      operation 3187074 "changeState"
	package explicit_return_type "void"
	nparams 1
	  param in name "newState" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For internal use only.
"
      end

      operation 3187202 "makeDebugTag"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string used in debug traces.
"
      end

      operation 3187330 "makeThreadName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string used to name the connector thread.
"
      end

      operation 3187458 "waitIfTooManyClients"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method blocks if there are too many active clients.
Call to <CODE>wait()</CODE> is terminated when a client handler
thread calls <CODE>notifyClientHandlerDeleted(this)</CODE> ;
"
      end

      operation 3187586 "waitClientTermination"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method blocks until there is no more active client.
"
      end

      operation 3187714 "terminateAllClient"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <CODE>interrupt()</CODE> on each pending client.
"
      end

      operation 3187842 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Controls the way the CommunicatorServer service is deserialized.
"
      end

      operation 3187970 "addNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " NotificationBroadcaster


Adds a listener for the notifications emitted by this
CommunicatorServer.
There is only one type of notifications sent by the CommunicatorServer:
they are <tt>{@link javax.management.AttributeChangeNotification}</tt>,
sent when the <tt>State</tt> attribute of this CommunicatorServer
changes.

@param listener The listener object which will handle the emitted
       notifications.
@param filter The filter object. If filter is null, no filtering
       will be performed before handling notifications.
@param handback An object which will be sent back unchanged to the
       listener when a notification is emitted.

@exception IllegalArgumentException Listener parameter is null.
"
      end

      operation 3188098 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 487042 // NotificationListener
	nexceptions 1
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the specified listener from this CommunicatorServer.
Note that if the listener has been registered with different
handback objects or notification filters, all entries corresponding
to the listener will be removed.

@param listener The listener object to be removed.

@exception ListenerNotFoundException The listener is not registered.
"
      end

      operation 3188226 "getNotificationInfo"
	public return_type class_ref 497154 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an array of MBeanNotificationInfo objects describing
the notification types sent by this CommunicatorServer.
There is only one type of notifications sent by the CommunicatorServer:
it is <tt>{@link javax.management.AttributeChangeNotification}</tt>,
sent when the <tt>State</tt> attribute of this CommunicatorServer
changes.
"
      end

      operation 3188354 "sendStateChangeNotification"
	private explicit_return_type "void"
	nparams 2
	  param in name "oldState" explicit_type "int"
	  param in name "newState" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3188482 "getStringForState"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3188610 "preRegister"
	public return_type class_ref 485506 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 485122 // MBeanServer
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " MBeanRegistration


Preregister method of connector.

@param server The <CODE>MBeanServer</CODE> in which the MBean will
      be registered.
@param name The object name of the MBean.

@return  The name of the MBean registered.

@exception java.langException This exception should be caught by
          the <CODE>MBeanServer</CODE> and re-thrown
          as an <CODE>MBeanRegistrationException</CODE>.
"
      end

      operation 3188738 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "
@param registrationDone Indicates whether or not the MBean has been
      successfully registered in the <CODE>MBeanServer</CODE>.
      The value false means that the registration phase has failed.
"
      end

      operation 3188866 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Stop the connector.

@exception java.langException This exception should be caught by
           the <CODE>MBeanServer</CODE> and re-thrown
           as an <CODE>MBeanRegistrationException</CODE>.
"
      end

      operation 3188994 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Do nothing.
"
      end
    end

    class 526338 "CommunicationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents exceptions raised due to communications problems,
for example when a managed object server is out of reach.<p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1033986 // <generalisation>
	relation 1033986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1033986 // <generalisation>
	  b parent class_ref 526466 // JMRuntimeException
      end

      attribute 670850 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2499186113233316177L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serial version 
"
      end

      operation 3181314 "CommunicationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CommunicationException with a target exception.
"
      end

      operation 3181442 "CommunicationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "target" type class_ref 129922 // Throwable
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CommunicationException with a target exception
and a detail message.
"
      end

      operation 3181570 "CommunicationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CommunicationException with a detail message.
"
      end

      operation 3181698 "getTargetException"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the thrown target exception.
"
      end
    end

    class 526594 "CommunicatorServerMBean"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines generic behaviour for the server
part of a connector or an adaptor. Most connectors or adaptors extend <CODE>CommunicatorServer</CODE>
and inherit this behaviour. Connectors or adaptors that do not fit into this model do not extend
<CODE>CommunicatorServer</CODE>.
<p>
An <CODE>CommunicatorServer</CODE> is an active object, it listens for client requests
and processes them in its own thread. When necessary, a <CODE>CommunicatorServer</CODE>
creates other threads to process multiple requests concurrently.
<p>
A <CODE>CommunicatorServer</CODE> object can be stopped by calling the <CODE>stop</CODE>
method. When it is stopped, the <CODE>CommunicatorServer</CODE> no longer listens to client
requests and no longer holds any thread or communication resources.
It can be started again by calling the <CODE>start</CODE> method.
<p>
A <CODE>CommunicatorServer</CODE> has a <CODE>state</CODE> property which reflects its
activity.
<p>
<TABLE>
<TR><TH>CommunicatorServer</TH>            <TH>State</TH></TR>
<TR><TD><CODE>stopped</CODE></TD>          <TD><CODE>OFFLINE</CODE></TD></TR>
<TR><TD><CODE>starting</CODE></TD>         <TD><CODE>STARTING</CODE></TD></TR>
<TR><TD><CODE>running</CODE></TD>          <TD><CODE>ONLINE</CODE></TD></TR>
<TR><TD><CODE>stopping</CODE></TD>         <TD><CODE>STOPPING</CODE></TD></TR>
</TABLE>
<p>
The <CODE>STARTING</CODE> state marks the transition from <CODE>OFFLINE</CODE> to
<CODE>ONLINE</CODE>.
<p>
The <CODE>STOPPING</CODE> state marks the transition from <CODE>ONLINE</CODE> to
<CODE>OFFLINE</CODE>. This occurs when the <CODE>CommunicatorServer</CODE> is
finishing or interrupting active requests.
<p>
A <CODE>CommunicatorServer</CODE> may serve several clients concurrently. The
number of concurrent clients can be limited using the property
<CODE>maxActiveClientCount</CODE>. The default value of this property is
defined by the subclasses.
<p>
When a <CODE>CommunicatorServer</CODE> is unregistered from the MBeanServer,
it is stopped automatically.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      operation 3181826 "start"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts this <CODE>CommunicatorServer</CODE>.
<p>
Has no effect if this <CODE>CommunicatorServer</CODE> is <CODE>ONLINE</CODE> or
<CODE>STOPPING</CODE>.
"
      end

      operation 3181954 "stop"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops this <CODE>CommunicatorServer</CODE>.
<p>
Has no effect if this <CODE>CommunicatorServer</CODE> is <CODE>OFFLINE</CODE> or
<CODE>STOPPING</CODE>.
"
      end

      operation 3182082 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the <CODE>CommunicatorServer</CODE> is active.

@return True if connector is <CODE>ONLINE</CODE>; false otherwise.
"
      end

      operation 3182210 "waitState"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "state" explicit_type "int"
	  param in name "timeOut" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits untill either the State attribute of this MBean equals the specified <VAR>state</VAR> parameter,
or the specified  <VAR>timeOut</VAR> has elapsed. The method <CODE>waitState</CODE> returns with a boolean value indicating whether
the specified <VAR>state</VAR> parameter equals the value of this MBean's State attribute at the time the method terminates.

Two special cases for the <VAR>timeOut</VAR> parameter value are:
<UL><LI> if <VAR>timeOut</VAR> is negative then <CODE>waitState</CODE> returns immediately (i.e. does not wait at all),</LI>
<LI> if <VAR>timeOut</VAR> equals zero then <CODE>waitState</CODE> waits untill the value of this MBean's State attribute
is the same as the <VAR>state</VAR> parameter (i.e. will wait indefinitely if this condition is never met).</LI></UL>

@param state The value of this MBean's State attribute
       to wait for. <VAR>state</VAR> can be one of:
<ul>
<li><CODE>CommunicatorServer.OFFLINE</CODE>,</li>
<li><CODE>CommunicatorServer.ONLINE</CODE>,</li>
<li><CODE>CommunicatorServer.STARTING</CODE>,</li>
<li><CODE>CommunicatorServer.STOPPING</CODE>.</li>
</ul>
@param timeOut The maximum time to wait for, in
       milliseconds, if positive.
Infinite time out if 0, or no waiting at all if negative.

@return true if the value of this MBean's State attribute is the
 same as the <VAR>state</VAR> parameter; false otherwise.
"
      end

      operation 3182338 "getState"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of this <CODE>CommunicatorServer</CODE> as an integer.

@return <CODE>ONLINE</CODE>, <CODE>OFFLINE</CODE>, <CODE>STARTING</CODE> or <CODE>STOPPING</CODE>.
"
      end

      operation 3182466 "getStateString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of this <CODE>CommunicatorServer</CODE> as a string.

@return One of the strings \"ONLINE\", \"OFFLINE\", \"STARTING\" or \"STOPPING\".
"
      end

      operation 3182594 "getHost"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the host name used by this <CODE>CommunicatorServer</CODE>.

@return The host name used by this <CODE>CommunicatorServer</CODE>.
"
      end

      operation 3182722 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the port number used by this <CODE>CommunicatorServer</CODE>.

@return The port number used by this <CODE>CommunicatorServer</CODE>.
"
      end

      operation 3182850 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the port number used by this <CODE>CommunicatorServer</CODE>.

@param port The port number used by this <CODE>CommunicatorServer</CODE>.

@exception java.lang.IllegalStateException This method has been invoked
while the communicator was ONLINE or STARTING.
"
      end

      operation 3182978 "getProtocol"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the protocol being used by this <CODE>CommunicatorServer</CODE>.
@return The protocol as a string.
"
      end
    end

    class 526722 "SnmpAdaptorServer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implements an adaptor on top of the SNMP protocol.
<P>
When this SNMP protocol adaptor is started it creates a datagram socket
and is able to receive requests and send traps or inform requests.
When it is stopped, the socket is closed and neither requests
and nor traps/inform request are processed.
<P>
The default port number of the socket is 161. This default value can be
changed by specifying a port number:
<UL>
<LI>in the object constructor</LI>
<LI>using the {@link com.sun.jmx.snmp.daemon.CommunicatorServer#setPort
    setPort} method before starting the adaptor</LI>
</UL>
The default object name is defined by {@link
com.sun.jmx.snmp.ServiceName#DOMAIN com.sun.jmx.snmp.ServiceName.DOMAIN}
and {@link com.sun.jmx.snmp.ServiceName#SNMP_ADAPTOR_SERVER
com.sun.jmx.snmp.ServiceName.SNMP_ADAPTOR_SERVER}.
<P>
The SNMP protocol adaptor supports versions 1 and 2 of the SNMP protocol
in a stateless way: when it receives a v1 request, it replies with a v1
response, when it receives a v2 request it replies with a v2 response.
<BR>The method {@link #snmpV1Trap snmpV1Trap} sends traps using SNMP v1
format.
The method {@link #snmpV2Trap snmpV2Trap} sends traps using SNMP v2 format.
The method {@link #snmpInformRequest snmpInformRequest} sends inform
requests using SNMP v2 format.
<P>
To receive data packets, the SNMP protocol adaptor uses a buffer
which size can be configured using the property <CODE>bufferSize</CODE>
(default value is 1024).
Packets which do not fit into the buffer are rejected.
Increasing <CODE>bufferSize</CODE> allows the exchange of bigger packets.
However, the underlying networking system may impose a limit on the size
of UDP packets.
Packets which size exceed this limit will be rejected, no matter what
the value of <CODE>bufferSize</CODE> actually is.
<P>
An SNMP protocol adaptor may serve several managers concurrently. The
number of concurrent managers can be limited using the property
<CODE>maxActiveClientCount</CODE>.
<p>
The SNMP protocol adaptor specifies a default value (10) for the
<CODE>maxActiveClientCount</CODE> property. When the adaptor is stopped,
the active requests are interrupted and an error result is sent to
the managers.
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1036034 // <generalisation>
	relation 1036034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1036034 // <generalisation>
	  b parent class_ref 526210 // CommunicatorServer
      end

      classrelation 1036290 // <realization>
	relation 1036290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1036290 // <realization>
	  b parent class_ref 526850 // SnmpAdaptorServerMBean
      end

      classrelation 1036418 // <realization>
	relation 1036418 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1036418 // <realization>
	  b parent class_ref 488578 // MBeanRegistration
      end

      classrelation 1036546 // <realization>
	relation 1036546 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1036546 // <realization>
	  b parent class_ref 514690 // SnmpDefinitions
      end

      classrelation 1036674 // <realization>
	relation 1036674 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1036674 // <realization>
	  b parent class_ref 522754 // SnmpMibHandler
      end

      attribute 672514 "trapPort"
	private explicit_type "int"
	init_value " 162"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " PRIVATE VARIABLES
------------------

Port number for sending SNMP traps.
<BR>The default value is 162.

"
      end

      attribute 672642 "informPort"
	private explicit_type "int"
	init_value " 162"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Port number for sending SNMP inform requests.
<BR>The default value is 162.

"
      end

      classrelation 1036802 // address (<unidirectional association>)
	relation 1036802 --->
	  a role_name "address" init_value " null" package
	    comment "
The <CODE>InetAddress</CODE> used when creating the datagram socket.
<BR>It is specified when creating the SNMP protocol adaptor.
If not specified, the local host machine is used.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1036802 // address (<unidirectional association>)
	  b parent class_ref 513154 // InetAddress
      end

      classrelation 1036930 // ipacl (<unidirectional association>)
	relation 1036930 --->
	  a role_name "ipacl" init_value " null" private
	    comment "
The IP address based ACL used by this SNMP protocol adaptor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1036930 // ipacl (<unidirectional association>)
	  b parent class_ref 513026 // InetAddressAcl
      end

      classrelation 1037058 // pduFactory (<unidirectional association>)
	relation 1037058 --->
	  a role_name "pduFactory" init_value " null" private
	    comment "
The factory object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1037058 // pduFactory (<unidirectional association>)
	  b parent class_ref 518402 // SnmpPduFactory
      end

      classrelation 1037186 // userDataFactory (<unidirectional association>)
	relation 1037186 --->
	  a role_name "userDataFactory" init_value " null" private
	    comment "
The user-data factory object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1037186 // userDataFactory (<unidirectional association>)
	  b parent class_ref 525954 // SnmpUserDataFactory
      end

      attribute 672770 "authRespEnabled"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates if the SNMP protocol adaptor sends a response in case
of authentication failure

"
      end

      attribute 672898 "authTrapEnabled"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates if authentication traps are enabled.

"
      end

      classrelation 1037314 // enterpriseOid (<unidirectional association>)
	relation 1037314 --->
	  a role_name "enterpriseOid" init_value " new SnmpOid(\"1.3.6.1.4.1.42\")" private
	    comment "
The enterprise OID.
<BR>The default value is \"1.3.6.1.4.1.42\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1037314 // enterpriseOid (<unidirectional association>)
	  b parent class_ref 514306 // SnmpOid
      end

      attribute 673026 "bufferSize"
	package explicit_type "int"
	init_value " 1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The buffer size of the SNMP protocol adaptor.
This buffer size is used for both incoming request and outgoing
inform requests.
<BR>The default value is 1024.

"
      end

      attribute 673154 "startUpTime"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1037442 // socket (<unidirectional association>)
	relation 1037442 --->
	  a role_name "socket" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1037442 // socket (<unidirectional association>)
	  b parent class_ref 527234 // DatagramSocket
      end

      classrelation 1037570 // trapSocket (<unidirectional association>)
	relation 1037570 --->
	  a role_name "trapSocket" init_value " null" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1037570 // trapSocket (<unidirectional association>)
	  b parent class_ref 527234 // DatagramSocket
      end

      classrelation 1037698 // informSession (<unidirectional association>)
	relation 1037698 --->
	  a role_name "informSession" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1037698 // informSession (<unidirectional association>)
	  b parent class_ref 527362 // SnmpSession
      end

      classrelation 1037826 // packet (<unidirectional association>)
	relation 1037826 --->
	  a role_name "packet" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1037826 // packet (<unidirectional association>)
	  b parent class_ref 527490 // DatagramPacket
      end

      classrelation 1037954 // mibs (<unidirectional association>)
	relation 1037954 --->
	  a role_name "mibs" init_value " new Vector<>()" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpMibAgent> ${name}${value};
"
	    classrelation_ref 1037954 // mibs (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1038082 // root (<unidirectional association>)
	relation 1038082 --->
	  a role_name "root" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1038082 // root (<unidirectional association>)
	  b parent class_ref 527618 // SnmpMibTree
      end

      attribute 673282 "useAcl"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether ACL must be used.

"
      end

      attribute 673410 "maxTries"
	private explicit_type "int"
	init_value " 3 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " SENDING SNMP INFORMS STUFF
---------------------------

Number of times to try an inform request before giving up.
The default number is 3.

"
      end

      attribute 673538 "timeout"
	private explicit_type "int"
	init_value " 3 * 1000 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The amount of time to wait for an inform response from the manager.
The default amount of time is 3000 millisec.

"
      end

      attribute 673666 "snmpOutTraps"
	package explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " VARIABLES REQUIRED FOR IMPLEMENTING SNMP GROUP (MIBII)
-------------------------------------------------------

The <CODE>snmpOutTraps</CODE> value defined in MIB-II.

"
      end

      attribute 673794 "snmpOutGetResponses"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpOutGetResponses</CODE> value defined in MIB-II.

"
      end

      attribute 673922 "snmpOutGenErrs"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpOutGenErrs</CODE> value defined in MIB-II.

"
      end

      attribute 674050 "snmpOutBadValues"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpOutBadValues</CODE> value defined in MIB-II.

"
      end

      attribute 674178 "snmpOutNoSuchNames"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpOutNoSuchNames</CODE> value defined in MIB-II.

"
      end

      attribute 674306 "snmpOutTooBigs"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpOutTooBigs</CODE> value defined in MIB-II.

"
      end

      attribute 674434 "snmpOutPkts"
	package explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpOutPkts</CODE> value defined in MIB-II.

"
      end

      attribute 674562 "snmpInASNParseErrs"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInASNParseErrs</CODE> value defined in MIB-II.

"
      end

      attribute 674690 "snmpInBadCommunityUses"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInBadCommunityUses</CODE> value defined in MIB-II.

"
      end

      attribute 674818 "snmpInBadCommunityNames"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInBadCommunityNames</CODE> value defined in MIB-II.

"
      end

      attribute 674946 "snmpInBadVersions"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInBadVersions</CODE> value defined in MIB-II.

"
      end

      attribute 675074 "snmpInGetRequests"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInGetRequests</CODE> value defined in MIB-II.

"
      end

      attribute 675202 "snmpInGetNexts"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInGetNexts</CODE> value defined in MIB-II.

"
      end

      attribute 675330 "snmpInSetRequests"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInSetRequests</CODE> value defined in MIB-II.

"
      end

      attribute 675458 "snmpInPkts"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInPkts</CODE> value defined in MIB-II.

"
      end

      attribute 675586 "snmpInTotalReqVars"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInTotalReqVars</CODE> value defined in MIB-II.

"
      end

      attribute 675714 "snmpInTotalSetVars"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInTotalSetVars</CODE> value defined in MIB-II.

"
      end

      attribute 675842 "snmpSilentDrops"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <CODE>snmpInTotalSetVars</CODE> value defined in rfc 1907 MIB-II.

"
      end

      classrelation 1038210 // InterruptSysCallMsg (<unidirectional association>)
	relation 1038210 --->
	  a role_name "InterruptSysCallMsg" init_value "
        \"Interrupted system call\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1038210 // InterruptSysCallMsg (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1038338 // sysUpTimeOid (<unidirectional association>)
	relation 1038338 --->
	  a role_name "sysUpTimeOid" init_value " new SnmpOid(\"1.3.6.1.2.1.1.3.0\") " class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1038338 // sysUpTimeOid (<unidirectional association>)
	  b parent class_ref 514306 // SnmpOid
      end

      classrelation 1038466 // snmpTrapOidOid (<unidirectional association>)
	relation 1038466 --->
	  a role_name "snmpTrapOidOid" init_value " new SnmpOid(\"1.3.6.1.6.3.1.1.4.1.0\")" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1038466 // snmpTrapOidOid (<unidirectional association>)
	  b parent class_ref 514306 // SnmpOid
      end

      classrelation 1038594 // threadService (<unidirectional association>)
	relation 1038594 --->
	  a role_name "threadService" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1038594 // threadService (<unidirectional association>)
	  b parent class_ref 527746 // ThreadService
      end

      attribute 675970 "threadNumber"
	class_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 139778 "initialization"
	
	cpp "" ""
	java "  static {
        String s = System.getProperty(\"com.sun.jmx.snmp.threadnumber\");

        if (s != null) {
            try {
                threadNumber = Integer.parseInt(System.getProperty(s));
            } catch (Exception e) {
                SNMP_ADAPTOR_LOGGER.logp(Level.FINER,
                        SnmpAdaptorServer.class.getName(),
                        \"<static init>\",
                        \"Got wrong value for com.sun.jmx.snmp.threadnumber: \" +
                        s + \". Use the default value: \" + threadNumber);
            }
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 3196802 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PUBLIC CONSTRUCTORS
--------------------

Initializes this SNMP protocol adaptor using the default port (161).
Use the {@link com.sun.jmx.snmp.IPAcl.SnmpAcl} default
implementation of the <CODE>InetAddressAcl</CODE> interface.
"
      end

      operation 3196930 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the specified port.
Use the {@link com.sun.jmx.snmp.IPAcl.SnmpAcl} default
implementation of the <CODE>InetAddressAcl</CODE> interface.

@param port The port number for sending SNMP responses.
"
      end

      operation 3197058 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 1
	  param inout name "acl" type class_ref 513026 // InetAddressAcl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the default port (161)
and the specified IP address based ACL implementation.

@param acl The <CODE>InetAddressAcl</CODE> implementation.
       <code>null</code> means no ACL - everybody is authorized.

@since 1.5
"
      end

      operation 3197186 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 1
	  param inout name "addr" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the default port (161)
and the
specified <CODE>InetAddress</CODE>.
Use the {@link com.sun.jmx.snmp.IPAcl.SnmpAcl} default
implementation of the <CODE>InetAddressAcl</CODE> interface.

@param addr The IP address to bind.
"
      end

      operation 3197314 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 2
	  param inout name "acl" type class_ref 513026 // InetAddressAcl
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the specified port and the
specified IP address based ACL implementation.

@param acl The <CODE>InetAddressAcl</CODE> implementation.
       <code>null</code> means no ACL - everybody is authorized.
@param port The port number for sending SNMP responses.

@since 1.5
"
      end

      operation 3197442 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 2
	  param in name "port" explicit_type "int"
	  param inout name "addr" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the specified port and the
specified <CODE>InetAddress</CODE>.
Use the {@link com.sun.jmx.snmp.IPAcl.SnmpAcl} default
implementation of the <CODE>InetAddressAcl</CODE> interface.

@param port The port number for sending SNMP responses.
@param addr The IP address to bind.
"
      end

      operation 3197570 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 2
	  param inout name "acl" type class_ref 513026 // InetAddressAcl
	  param inout name "addr" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the specified IP
address based ACL implementation and the specified
<CODE>InetAddress</CODE>.

@param acl The <CODE>InetAddressAcl</CODE> implementation.
@param addr The IP address to bind.

@since 1.5
"
      end

      operation 3197698 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 3
	  param inout name "acl" type class_ref 513026 // InetAddressAcl
	  param in name "port" explicit_type "int"
	  param inout name "addr" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the specified port, the
specified  address based ACL implementation and the specified
<CODE>InetAddress</CODE>.

@param acl The <CODE>InetAddressAcl</CODE> implementation.
@param port The port number for sending SNMP responses.
@param addr The IP address to bind.

@since 1.5
"
      end

      operation 3197826 "SnmpAdaptorServer"
	public explicit_return_type ""
	nparams 3
	  param inout name "useAcl" explicit_type "boolean"
	  param in name "port" explicit_type "int"
	  param inout name "addr" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this SNMP protocol adaptor using the specified port and the
specified <CODE>InetAddress</CODE>.
This constructor allows to initialize an SNMP adaptor without using
the ACL mechanism (by setting the <CODE>useAcl</CODE> parameter to
false).
<br>This constructor must be used in particular with a platform that
does not support the <CODE>java.security.acl</CODE> package like pJava.

@param useAcl Specifies if this new SNMP adaptor uses the ACL mechanism.
If the specified parameter is set to <CODE>true</CODE>, this
constructor is equivalent to
<CODE>SnmpAdaptorServer((int)port,(InetAddress)addr)</CODE>.
@param port The port number for sending SNMP responses.
@param addr The IP address to bind.
"
      end

      operation 3197954 "SnmpAdaptorServer"
	private explicit_return_type ""
	nparams 4
	  param inout name "forceAcl" explicit_type "boolean"
	  param inout name "acl" type class_ref 513026 // InetAddressAcl
	  param in name "port" explicit_type "int"
	  param inout name "addr" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If forceAcl is `true' and InetAddressAcl is null, then a default
 SnmpAcl object is created.
"
      end

      operation 3198082 "getServedClientCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Gets the number of managers that have been processed by this
SNMP protocol adaptor  since its creation.

@return The number of managers handled by this SNMP protocol adaptor
since its creation. This counter is not reset by the <CODE>stop</CODE>
method.
"
      end

      operation 3198210 "getActiveClientCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the number of managers currently being processed by this
SNMP protocol adaptor.

@return The number of managers currently being processed by this
SNMP protocol adaptor.
"
      end

      operation 3198338 "getMaxActiveClientCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the maximum number of managers that this SNMP protocol adaptor can
process concurrently.

@return The maximum number of managers that this SNMP protocol adaptor
        can process concurrently.
"
      end

      operation 3198466 "setMaxActiveClientCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the maximum number of managers this SNMP protocol adaptor can
process concurrently.

@param c The number of managers.

@exception java.lang.IllegalStateException This method has been invoked
while the communicator was <CODE>ONLINE</CODE> or <CODE>STARTING</CODE>.
"
      end

      operation 3198594 "getInetAddressAcl"
	public return_type class_ref 513026 // InetAddressAcl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the Ip address based ACL used by this SNMP protocol adaptor.
@return The <CODE>InetAddressAcl</CODE> implementation.

@since 1.5
"
      end

      operation 3198722 "getTrapPort"
	public return_type class_ref 137602 // Integer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the port used by this SNMP protocol adaptor for sending traps.
By default, port 162 is used.

@return The port number for sending SNMP traps.
"
      end

      operation 3198850 "setTrapPort"
	public explicit_return_type "void"
	nparams 1
	  param inout name "port" type class_ref 137602 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the port used by this SNMP protocol adaptor for sending traps.

@param port The port number for sending SNMP traps.
"
      end

      operation 3198978 "setTrapPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the port used by this SNMP protocol adaptor for sending traps.

@param port The port number for sending SNMP traps.
"
      end

      operation 3199106 "getInformPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the port used by this SNMP protocol adaptor for sending
inform requests. By default, port 162 is used.

@return The port number for sending SNMP inform requests.
"
      end

      operation 3199234 "setInformPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the port used by this SNMP protocol adaptor for sending
inform requests.

@param port The port number for sending SNMP inform requests.
"
      end

      operation 3199362 "getProtocol"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the protocol of this SNMP protocol adaptor.

@return The string \"snmp\".
"
      end

      operation 3199490 "getBufferSize"
	public return_type class_ref 137602 // Integer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the buffer size of this SNMP protocol adaptor.
This buffer size is used for both incoming request and outgoing
inform requests.
By default, buffer size 1024 is used.

@return The buffer size.
"
      end

      operation 3199618 "setBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 137602 // Integer
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the buffer size of this SNMP protocol adaptor.
This buffer size is used for both incoming request and outgoing
inform requests.

@param s The buffer size.

@exception java.lang.IllegalStateException This method has been invoked
while the communicator was <CODE>ONLINE</CODE> or <CODE>STARTING</CODE>.
"
      end

      operation 3199746 "getMaxTries"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the number of times to try sending an inform request before
giving up.
By default, a maximum of 3 tries is used.
@return The maximun number of tries.
"
      end

      operation 3199874 "setMaxTries"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMaxTries" explicit_type "int"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Changes the maximun number of times to try sending an inform
request before giving up.
@param newMaxTries The maximun number of tries.
"
      end

      operation 3200002 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the timeout to wait for an inform response from the manager.
By default, a timeout of 3 seconds is used.
@return The value of the timeout property.
"
      end

      operation 3200130 "setTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "newTimeout" explicit_type "int"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Changes the timeout to wait for an inform response from the manager.
@param newTimeout The timeout (in milliseconds).
"
      end

      operation 3200258 "getPduFactory"
	public return_type class_ref 518402 // SnmpPduFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the message factory of this SNMP protocol adaptor.

@return The factory object.
"
      end

      operation 3200386 "setPduFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 518402 // SnmpPduFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the message factory of this SNMP protocol adaptor.

@param factory The factory object (null means the default factory).
"
      end

      operation 3200514 "setUserDataFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 525954 // SnmpUserDataFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Set the user-data factory of this SNMP protocol adaptor.

@param factory The factory object (null means no factory).
@see com.sun.jmx.snmp.agent.SnmpUserDataFactory
"
      end

      operation 3200642 "getUserDataFactory"
	public return_type class_ref 525954 // SnmpUserDataFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Get the user-data factory associated with this SNMP protocol adaptor.

@return The factory object (null means no factory).
@see com.sun.jmx.snmp.agent.SnmpUserDataFactory
"
      end

      operation 3200770 "getAuthTrapEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns <CODE>true</CODE> if authentication traps are enabled.
<P>
When this feature is enabled, the SNMP protocol adaptor sends
an <CODE>authenticationFailure</CODE> trap each time an
authentication fails.
<P>
The default behaviour is to send authentication traps.

@return <CODE>true</CODE> if authentication traps are enabled,
        <CODE>false</CODE> otherwise.
"
      end

      operation 3200898 "setAuthTrapEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the flag indicating if traps need to be sent in case of
authentication failure.

@param enabled Flag indicating if traps need to be sent.
"
      end

      operation 3201026 "getAuthRespEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns <code>true</code> if this SNMP protocol adaptor sends a
response in case of authentication failure.
<P>
When this feature is enabled, the SNMP protocol adaptor sends a
response with <CODE>noSuchName</CODE> or <CODE>readOnly</CODE> when
the authentication failed. If the flag is disabled, the
SNMP protocol adaptor trashes the PDU silently.
<P>
The default behavior is to send responses.

@return <CODE>true</CODE> if responses are sent.
"
      end

      operation 3201154 "setAuthRespEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the flag indicating if responses need to be sent in case of
authentication failure.

@param enabled Flag indicating if responses need to be sent.
"
      end

      operation 3201282 "getEnterpriseOid"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the enterprise OID. It is used by
{@link #snmpV1Trap snmpV1Trap} to fill the 'enterprise' field of the
trap request.

@return The OID in string format \"x.x.x.x\".
"
      end

      operation 3201410 "setEnterpriseOid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oid" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the enterprise OID.

@param oid The OID in string format \"x.x.x.x\".

@exception IllegalArgumentException The string format is incorrect
"
      end

      operation 3201538 "getMibs"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the names of the MIBs available in this SNMP protocol adaptor.

@return An array of MIB names.
"
      end

      operation 3201666 "getSnmpOutTraps"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " GETTERS FOR SNMP GROUP (MIBII)
-------------------------------

Returns the <CODE>snmpOutTraps</CODE> value defined in MIB-II.

@return The <CODE>snmpOutTraps</CODE> value.
"
      end

      operation 3201794 "getSnmpOutGetResponses"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpOutGetResponses</CODE> value defined in MIB-II.

@return The <CODE>snmpOutGetResponses</CODE> value.
"
      end

      operation 3201922 "getSnmpOutGenErrs"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpOutGenErrs</CODE> value defined in MIB-II.

@return The <CODE>snmpOutGenErrs</CODE> value.
"
      end

      operation 3202050 "getSnmpOutBadValues"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpOutBadValues</CODE> value defined in MIB-II.

@return The <CODE>snmpOutBadValues</CODE> value.
"
      end

      operation 3202178 "getSnmpOutNoSuchNames"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpOutNoSuchNames</CODE> value defined in MIB-II.

@return The <CODE>snmpOutNoSuchNames</CODE> value.
"
      end

      operation 3202306 "getSnmpOutTooBigs"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpOutTooBigs</CODE> value defined in MIB-II.

@return The <CODE>snmpOutTooBigs</CODE> value.
"
      end

      operation 3202434 "getSnmpInASNParseErrs"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInASNParseErrs</CODE> value defined in MIB-II.

@return The <CODE>snmpInASNParseErrs</CODE> value.
"
      end

      operation 3202562 "getSnmpInBadCommunityUses"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInBadCommunityUses</CODE> value defined in MIB-II.

@return The <CODE>snmpInBadCommunityUses</CODE> value.
"
      end

      operation 3202690 "getSnmpInBadCommunityNames"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInBadCommunityNames</CODE> value defined in
MIB-II.

@return The <CODE>snmpInBadCommunityNames</CODE> value.
"
      end

      operation 3202818 "getSnmpInBadVersions"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInBadVersions</CODE> value defined in MIB-II.

@return The <CODE>snmpInBadVersions</CODE> value.
"
      end

      operation 3202946 "getSnmpOutPkts"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpOutPkts</CODE> value defined in MIB-II.

@return The <CODE>snmpOutPkts</CODE> value.
"
      end

      operation 3203074 "getSnmpInPkts"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInPkts</CODE> value defined in MIB-II.

@return The <CODE>snmpInPkts</CODE> value.
"
      end

      operation 3203202 "getSnmpInGetRequests"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInGetRequests</CODE> value defined in MIB-II.

@return The <CODE>snmpInGetRequests</CODE> value.
"
      end

      operation 3203330 "getSnmpInGetNexts"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInGetNexts</CODE> value defined in MIB-II.

@return The <CODE>snmpInGetNexts</CODE> value.
"
      end

      operation 3203458 "getSnmpInSetRequests"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInSetRequests</CODE> value defined in MIB-II.

@return The <CODE>snmpInSetRequests</CODE> value.
"
      end

      operation 3203586 "getSnmpInTotalSetVars"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInTotalSetVars</CODE> value defined in MIB-II.

@return The <CODE>snmpInTotalSetVars</CODE> value.
"
      end

      operation 3203714 "getSnmpInTotalReqVars"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpInTotalReqVars</CODE> value defined in MIB-II.

@return The <CODE>snmpInTotalReqVars</CODE> value.
"
      end

      operation 3203842 "getSnmpSilentDrops"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpSilentDrops</CODE> value defined in RFC
1907 NMPv2-MIB .

@return The <CODE>snmpSilentDrops</CODE> value.

@since 1.5
"
      end

      operation 3203970 "getSnmpProxyDrops"
	public return_type class_ref 251778 // Long
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the <CODE>snmpProxyDrops</CODE> value defined in RFC
1907 NMPv2-MIB .

@return The <CODE>snmpProxyDrops</CODE> value.

@since 1.5
"
      end

      operation 3204098 "preRegister"
	public return_type class_ref 485506 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 485122 // MBeanServer
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " PUBLIC METHODS
---------------

Allows the MBean to perform any operations it needs before being
registered in the MBean server.
If the name of the SNMP protocol adaptor MBean is not specified,
it is initialized with the default value:
{@link com.sun.jmx.snmp.ServiceName#DOMAIN
  com.sun.jmx.snmp.ServiceName.DOMAIN}:{@link
com.sun.jmx.snmp.ServiceName#SNMP_ADAPTOR_SERVER
com.sun.jmx.snmp.ServiceName.SNMP_ADAPTOR_SERVER}.
If any exception is raised, the SNMP protocol adaptor MBean will
not be registered in the MBean server.

@param server The MBean server to register the service with.
@param name The object name.

@return The name of the SNMP protocol adaptor registered.

@exception java.lang.Exception
"
      end

      operation 3204226 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Not used in this context.
"
      end

      operation 3204354 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Not used in this context.
"
      end

      operation 3204482 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Not used in this context.
"
      end

      operation 3204610 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 1
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a new MIB in the SNMP MIB handler.

@param mib The MIB to add.

@return A reference to the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.
"
      end

      operation 3204738 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a new MIB in the SNMP MIB handler.
This method is to be called to set a specific agent to a specific OID.
This can be useful when dealing with MIB overlapping.
Some OID can be implemented in more than one MIB. In this case,
the OID nearer agent will be used on SNMP operations.

@param mib The MIB to add.
@param oids The set of OIDs this agent implements.

@return A reference to the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3204866 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a new MIB in the SNMP MIB handler. In SNMP V1 and V2 the
<CODE>contextName</CODE> is useless and this method
is equivalent to <CODE>addMib(SnmpMibAgent mib)</CODE>.

@param mib The MIB to add.
@param contextName The MIB context name.
@return A reference on the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3204994 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 3
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a new MIB in the SNMP MIB handler. In SNMP V1 and V2 the
<CODE>contextName</CODE> is useless and this method
is equivalent to <CODE>addMib(SnmpMibAgent mib, SnmpOid[] oids)</CODE>.

@param mib The MIB to add.
@param contextName The MIB context. If null is passed, will be
       registered in the default context.
@param oids The set of OIDs this agent implements.

@return A reference to the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3205122 "removeMib"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.
In SNMP V1 and V2 the <CODE>contextName</CODE> is useless and this
method is equivalent to <CODE>removeMib(SnmpMibAgent mib)</CODE>.

@param mib The MIB to be removed.
@param contextName The context name used at registration time.

@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was
a MIB included in the SNMP MIB handler, <CODE>false</CODE>
otherwise.

@since 1.5
"
      end

      operation 3205250 "removeMib"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.

@param mib The MIB to be removed.

@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was a MIB
        included in the SNMP MIB handler, <CODE>false</CODE> otherwise.
"
      end

      operation 3205378 "removeMib"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.

@param mib The MIB to be removed.
@param oids The oid the MIB was previously registered for.
@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was
a MIB included in the SNMP MIB handler, <CODE>false</CODE>
otherwise.

@since 1.5
"
      end

      operation 3205506 "removeMib"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.

@param mib The MIB to be removed.
@param contextName The context name used at registration time.
@param oids The oid the MIB was previously registered for.
@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was
a MIB included in the SNMP MIB handler, <CODE>false</CODE>
otherwise.

@since 1.5
"
      end

      operation 3205634 "doBind"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " SUBCLASSING OF COMMUNICATOR SERVER
-----------------------------------

Creates the datagram socket.
"
      end

      operation 3205762 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Return the actual port to which the adaptor is bound.
Can be different from the port given at construction time if
that port number was 0.
@return the actual port to which the adaptor is bound.
"
      end

      operation 3205890 "doUnbind"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Closes the datagram socket.
"
      end

      operation 3206018 "createSnmpRequestHandler"
	private explicit_return_type "void"
	nparams 11
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	  param in name "id" explicit_type "int"
	  param inout name "s" type class_ref 527234 // DatagramSocket
	  param inout name "p" type class_ref 527490 // DatagramPacket
	  param inout name "tree" type class_ref 527618 // SnmpMibTree
	  param inout name "m" type class_ref 141442 // Vector
	  param inout name "a" type class_ref 513026 // InetAddressAcl
	  param inout name "factory" type class_ref 518402 // SnmpPduFactory
	  param inout name "dataFactory" type class_ref 525954 // SnmpUserDataFactory
	  param inout name "f" type class_ref 485122 // MBeanServer
	  param inout name "n" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<SnmpMibAgent> ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3206146 "doReceive"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Reads a packet from the datagram socket and creates a request
handler which decodes and processes the request.
"
      end

      operation 3206274 "doError"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	nexceptions 1
	  exception class_ref 526338 // CommunicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3206402 "doProcess"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 526338 // CommunicationException
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Not used in this context.
"
      end

      operation 3206530 "getBindTries"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "The number of times the communicator server will attempt
to bind before giving up.
We attempt only once...
@return 1
"
      end

      operation 3206658 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Stops this SNMP protocol adaptor.
Closes the datagram socket.
<p>
Has no effect if this SNMP protocol adaptor is <CODE>OFFLINE</CODE> or
<CODE>STOPPING</CODE>.
"
      end

      operation 3206786 "snmpV1Trap"
	public explicit_return_type "void"
	nparams 3
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " SENDING SNMP TRAPS STUFF
-------------------------

Sends a trap using SNMP V1 trap format.
<BR>The trap is sent to each destination defined in the ACL file
(if available).
If no ACL file or no destinations are available, the trap is sent
to the local host.

@param generic The generic number of the trap.
@param specific The specific number of the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined
           by <CODE>bufferSize</CODE>.
"
      end

      operation 3206914 "handleMultipleIpVersion"
	private return_type class_ref 515714 // SnmpIpAddress
	nparams 1
	  param inout name "address" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3207042 "snmpV1Trap"
	public explicit_return_type "void"
	nparams 5
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends a trap using SNMP V1 trap format.
<BR>The trap is sent to the specified <CODE>InetAddress</CODE>
destination using the specified community string (and the ACL file
is not used).

@param addr The <CODE>InetAddress</CODE> destination of the trap.
@param cs The community string to be used for the trap.
@param generic The generic number of the trap.
@param specific The specific number of the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined
           by <CODE>bufferSize</CODE>.
"
      end

      operation 3207170 "snmpV1Trap"
	public explicit_return_type "void"
	nparams 8
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "agentAddr" type class_ref 515714 // SnmpIpAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "enterpOid" type class_ref 514306 // SnmpOid
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V1 trap format.
<BR>The trap is sent to the specified <CODE>InetAddress</CODE>
destination using the specified parameters (and the ACL file is not
used).
Note that if the specified <CODE>InetAddress</CODE> destination is null,
then the ACL file mechanism is used.

@param addr The <CODE>InetAddress</CODE> destination of the trap.
@param agentAddr The agent address to be used for the trap.
@param cs The community string to be used for the trap.
@param enterpOid The enterprise OID to be used for the trap.
@param generic The generic number of the trap.
@param specific The specific number of the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.
@param time The time stamp (overwrite the current time).

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined
           by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3207298 "snmpV1Trap"
	public explicit_return_type "void"
	nparams 7
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "agentAddr" type class_ref 515714 // SnmpIpAddress
	  param inout name "enterpOid" type class_ref 514306 // SnmpOid
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends a trap using SNMP V1 trap format.
<BR>The trap is sent to the specified <CODE>SnmpPeer</CODE> destination.
The community string used is the one located in the
<CODE>SnmpPeer</CODE> parameters
(<CODE>SnmpParameters.getRdCommunity() </CODE>).

@param peer The <CODE>SnmpPeer</CODE> destination of the trap.
@param agentAddr The agent address to be used for the trap.
@param enterpOid The enterprise OID to be used for the trap.
@param generic The generic number of the trap.
@param specific The specific number of the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.
@param time The time stamp (overwrite the current time).

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit
defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3207426 "snmpV1Trap"
	private explicit_return_type "void"
	nparams 9
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "agentAddr" type class_ref 515714 // SnmpIpAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "enterpOid" type class_ref 514306 // SnmpOid
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3207554 "snmpV2Trap"
	public explicit_return_type "void"
	nparams 4
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends a trap using SNMP V2 trap format.
<BR>The trap is sent to the specified <CODE>SnmpPeer</CODE> destination.
<BR>The community string used is the one located in the
<CODE>SnmpPeer</CODE> parameters
(<CODE>SnmpParameters.getRdCommunity() </CODE>).
<BR>The variable list included in the outgoing trap is composed of
the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with the value specified by
    <CODE>time</CODE></LI>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by
    <CODE>trapOid</CODE></LI>
<LI><CODE>all the (oid,values)</CODE> from the specified
    <CODE>varBindList</CODE></LI>
</UL>

@param peer The <CODE>SnmpPeer</CODE> destination of the trap.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.
@param time The time stamp (overwrite the current time).

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit
defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3207682 "snmpV2Trap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends a trap using SNMP V2 trap format.
<BR>The trap is sent to each destination defined in the ACL file
(if available). If no ACL file or no destinations are available,
the trap is sent to the local host.
<BR>The variable list included in the outgoing trap is composed of
the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value</LI>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by
    <CODE>trapOid</CODE></LI>
<LI><CODE>all the (oid,values)</CODE> from the specified
    <CODE>varBindList</CODE></LI>
</UL>

@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined
           by <CODE>bufferSize</CODE>.
"
      end

      operation 3207810 "snmpV2Trap"
	public explicit_return_type "void"
	nparams 4
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends a trap using SNMP V2 trap format.
<BR>The trap is sent to the specified <CODE>InetAddress</CODE>
destination using the specified community string (and the ACL file
is not used).
<BR>The variable list included in the outgoing trap is composed of
the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value</LI>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by
    <CODE>trapOid</CODE></LI>
<LI><CODE>all the (oid,values)</CODE> from the specified
    <CODE>varBindList</CODE></LI>
</UL>

@param addr The <CODE>InetAddress</CODE> destination of the trap.
@param cs The community string to be used for the trap.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit
           defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3207938 "snmpV2Trap"
	public explicit_return_type "void"
	nparams 5
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V2 trap format.
<BR>The trap is sent to the specified <CODE>InetAddress</CODE>
destination using the specified parameters (and the ACL file is not
used).
Note that if the specified <CODE>InetAddress</CODE> destination is null,
then the ACL file mechanism is used.
<BR>The variable list included in the outgoing trap is composed of the
following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with the value specified by
    <CODE>time</CODE></LI>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by
    <CODE>trapOid</CODE></LI>
<LI><CODE>all the (oid,values)</CODE> from the specified
    <CODE>varBindList</CODE></LI>
</UL>

@param addr The <CODE>InetAddress</CODE> destination of the trap.
@param cs The community string to be used for the trap.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.
@param time The time stamp (overwrite the current time).

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit
defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3208066 "snmpV2Trap"
	private explicit_return_type "void"
	nparams 6
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3208194 "snmpPduTrap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 513154 // InetAddress
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Send the specified trap PDU to the passed <CODE>InetAddress</CODE>.
@param address The destination address.
@param pdu The pdu to send.
@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit
defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3208322 "snmpPduTrap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Send the specified trap PDU to the passed <CODE>SnmpPeer</CODE>.
@param peer The destination peer. The Read community string is used of
<CODE>SnmpParameters</CODE> is used as the trap community string.
@param pdu The pdu to send.
@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined
by <CODE>bufferSize</CODE>.
@since 1.5
"
      end

      operation 3208450 "sendTrapPdu"
	private explicit_return_type "void"
	nparams 1
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	nexceptions 2
	  exception class_ref 514434 // SnmpStatusException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the specified trap PDU to every destinations from the ACL file.
"
      end

      operation 3208578 "sendTrapPdu"
	private explicit_return_type "void"
	nparams 2
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	nexceptions 2
	  exception class_ref 514434 // SnmpStatusException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the specified trap PDU to the specified destination.
"
      end

      operation 3208706 "sendTrapMessage"
	private explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 516226 // SnmpMessage
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 516610 // SnmpTooBigException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the specified message on trapSocket.
"
      end

      operation 3208834 "openTrapSocketIfNeeded"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 248066 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open trapSocket if it's not already done.
"
      end

      operation 3208962 "closeTrapSocketIfNeeded"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close trapSocket if the SNMP protocol adaptor is not ONLINE.
"
      end

      operation 3209090 "snmpInformRequest"
	public return_type class_ref 141442 // Vector
	nparams 3
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 3
	  exception class_ref 254850 // IllegalStateException
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpInformRequest> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " SENDING SNMP INFORMS STUFF
---------------------------

Sends an inform using SNMP V2 inform request format.
<BR>The inform request is sent to each destination defined in the ACL
file (if available).
If no ACL file or no destinations are available, the inform request is
sent to the local host.
<BR>The variable list included in the outgoing inform is composed of
the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value</LI>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by
    <CODE>trapOid</CODE></LI>
<LI><CODE>all the (oid,values)</CODE> from the specified
    <CODE>varBindList</CODE></LI>
</UL>
To send an inform request, the SNMP adaptor server must be active.

@param cb The callback that is invoked when a request is complete.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@return A vector of {@link com.sun.jmx.snmp.daemon.SnmpInformRequest}
        objects.
        <P>If there is no destination host for this inform request,
        the returned vector will be empty.

@exception IllegalStateException  This method has been invoked while
           the SNMP adaptor server was not active.
@exception IOException An I/O error occurred while sending the
           inform request.
@exception SnmpStatusException If the inform request exceeds the
           limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3209218 "snmpInformRequest"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 5
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 3
	  exception class_ref 254850 // IllegalStateException
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends an inform using SNMP V2 inform request format.
<BR>The inform is sent to the specified <CODE>InetAddress</CODE>
destination
using the specified community string.
<BR>The variable list included in the outgoing inform is composed
    of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value</LI>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by
     <CODE>trapOid</CODE></LI>
<LI><CODE>all the (oid,values)</CODE> from the specified
    <CODE>varBindList</CODE></LI>
</UL>
To send an inform request, the SNMP adaptor server must be active.

@param addr The <CODE>InetAddress</CODE> destination for this inform
            request.
@param cs The community string to be used for the inform request.
@param cb The callback that is invoked when a request is complete.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@return The inform request object.

@exception IllegalStateException  This method has been invoked
           while the SNMP adaptor server was not active.
@exception IOException An I/O error occurred while sending the
           inform request.
@exception SnmpStatusException If the inform request exceeds the
           limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3209346 "snmpInformRequest"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 4
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 3
	  exception class_ref 254850 // IllegalStateException
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends an inform using SNMP V2 inform request format.
<BR>The inform is sent to the specified <CODE>SnmpPeer</CODE>
    destination.
<BR>The community string used is the one located in the
    <CODE>SnmpPeer</CODE> parameters
    (<CODE>SnmpParameters.getInformCommunity() </CODE>).
<BR>The variable list included in the outgoing inform is composed
    of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value</LI>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by
    <CODE>trapOid</CODE></LI>
<LI><CODE>all the (oid,values)</CODE> from the specified
    <CODE>varBindList</CODE></LI>
</UL>
To send an inform request, the SNMP adaptor server must be active.

@param peer The <CODE>SnmpPeer</CODE> destination for this inform
            request.
@param cb The callback that is invoked when a request is complete.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@return The inform request object.

@exception IllegalStateException  This method has been invoked while
           the SNMP adaptor server was not active.
@exception IOException An I/O error occurred while sending the
           inform request.
@exception SnmpStatusException If the inform request exceeds the
           limit defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3209474 "mapErrorStatus"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "errorStatus" explicit_type "int"
	  param in name "protocolVersion" explicit_type "int"
	  param in name "reqPduType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method that maps an SNMP error status in the passed protocolVersion
according to the provided pdu type.
@param errorStatus The error status to convert.
@param protocolVersion The protocol version.
@param reqPduType The pdu type.
"
      end

      operation 3209602 "snmpInformRequest"
	private return_type class_ref 527106 // SnmpInformRequest
	nparams 6
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 3
	  exception class_ref 254850 // IllegalStateException
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3209730 "openInformSocketIfNeeded"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 248066 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open informSocket if it's not already done.
"
      end

      operation 3209858 "closeInformSocketIfNeeded"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close informSocket if the SNMP protocol adaptor is not ONLINE.
"
      end

      operation 3209986 "getAddress"
	package return_type class_ref 513154 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the IP address to bind.
This getter is used to initialize the DatagramSocket in the
SnmpSocket object created for the inform request stuff.
"
      end

      operation 3210114 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " PROTECTED METHODS
------------------

Finalizer of the SNMP protocol adaptor objects.
This method is called by the garbage collector on an object
when garbage collection determines that there are no more
references to the object.
<P>Closes the datagram socket associated to this SNMP protocol adaptor.
"
      end

      operation 3210242 "makeDebugTag"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " PACKAGE METHODS
----------------

Returns the string used in debug traces.
"
      end

      operation 3210370 "updateRequestCounters"
	package explicit_return_type "void"
	nparams 1
	  param in name "pduType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3210498 "updateErrorCounters"
	package explicit_return_type "void"
	nparams 1
	  param in name "errorStatus" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3210626 "updateVarCounters"
	package explicit_return_type "void"
	nparams 2
	  param in name "pduType" explicit_type "int"
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3210754 "incSnmpInASNParseErrs"
	package explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3210882 "incSnmpInBadVersions"
	package explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3211010 "incSnmpInBadCommunityUses"
	package explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3211138 "incSnmpInBadCommunityNames"
	package explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3211266 "incSnmpSilentDrops"
	package explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3211394 "getSysUpTime"
	package explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PRIVATE METHODS
----------------

Returns the time (in hundreths of second) elapsed since the SNMP
protocol adaptor startup.
"
      end

      operation 3211522 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control the way the SnmpAdaptorServer service is deserialized.
"
      end

      operation 3211650 "init"
	private explicit_return_type "void"
	nparams 3
	  param inout name "acl" type class_ref 513026 // InetAddressAcl
	  param in name "p" explicit_type "int"
	  param inout name "a" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Common initializations.
"
      end

      operation 3211778 "getAgentMib"
	package return_type class_ref 522498 // SnmpMibAgent
	nparams 1
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3211906 "createMainThread"
	protected return_type class_ref 128642 // Thread
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 526850 "SnmpAdaptorServerMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Exposes the remote management interface of the {@link SnmpAdaptorServer} MBean.
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1036162 // <generalisation>
	relation 1036162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1036162 // <generalisation>
	  b parent class_ref 526594 // CommunicatorServerMBean
      end

      operation 3189122 "getInetAddressAcl"
	public return_type class_ref 513026 // InetAddressAcl
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Returns the Ip address based ACL used by this SNMP protocol adaptor.
@return The <CODE>InetAddressAcl</CODE> implementation.

@since 1.5
"
      end

      operation 3189250 "getTrapPort"
	public return_type class_ref 137602 // Integer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port used by this SNMP protocol adaptor for sending traps.
By default, port 162 is used.

@return The port number for sending SNMP traps.
"
      end

      operation 3189378 "setTrapPort"
	public explicit_return_type "void"
	nparams 1
	  param inout name "port" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the port used by this SNMP protocol adaptor for sending traps.

@param port The port number for sending SNMP traps.
"
      end

      operation 3189506 "getInformPort"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port used by this SNMP protocol adaptor for sending inform requests.
By default, port 162 is used.

@return The port number for sending SNMP inform requests.
"
      end

      operation 3189634 "setInformPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the port used by this SNMP protocol adaptor for sending inform requests.

@param port The port number for sending SNMP inform requests.
"
      end

      operation 3189762 "getServedClientCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of managers that have been processed by this SNMP protocol adaptor
since its creation.

@return The number of managers handled by this SNMP protocol adaptor
since its creation. This counter is not reset by the <CODE>stop</CODE> method.
"
      end

      operation 3189890 "getActiveClientCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of managers currently being processed by this
SNMP protocol adaptor.

@return The number of managers currently being processed by this
SNMP protocol adaptor.
"
      end

      operation 3190018 "getMaxActiveClientCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum number of managers that this SNMP protocol adaptor can
process concurrently.

@return The maximum number of managers that this SNMP protocol adaptor can
process concurrently.
"
      end

      operation 3190146 "setMaxActiveClientCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum number of managers this SNMP protocol adaptor can
process concurrently.

@param c The number of managers.

@exception java.lang.IllegalStateException This method has been invoked
while the communicator was <CODE>ONLINE</CODE> or <CODE>STARTING</CODE>.
"
      end

      operation 3190274 "getProtocol"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the protocol of this SNMP protocol adaptor.

@return The string \"snmp\".
"
      end

      operation 3190402 "getBufferSize"
	public return_type class_ref 137602 // Integer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the buffer size of this SNMP protocol adaptor.
By default, buffer size 1024 is used.

@return The buffer size.
"
      end

      operation 3190530 "setBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 137602 // Integer
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the buffer size of this SNMP protocol adaptor.

@param s The buffer size.

@exception java.lang.IllegalStateException This method has been invoked
while the communicator was <CODE>ONLINE</CODE> or <CODE>STARTING</CODE>.
"
      end

      operation 3190658 "getMaxTries"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of times to try sending an inform request before giving up.
@return The maximun number of tries.
"
      end

      operation 3190786 "setMaxTries"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMaxTries" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the maximun number of times to try sending an inform request before giving up.
@param newMaxTries The maximun number of tries.
"
      end

      operation 3190914 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timeout to wait for an inform response from the manager.
@return The value of the timeout property.
"
      end

      operation 3191042 "setTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "newTimeout" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the timeout to wait for an inform response from the manager.
@param newTimeout The timeout (in milliseconds).
"
      end

      operation 3191170 "getPduFactory"
	public return_type class_ref 518402 // SnmpPduFactory
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message factory of this SNMP protocol adaptor.

@return The factory object.
"
      end

      operation 3191298 "setPduFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 518402 // SnmpPduFactory
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the message factory of this SNMP protocol adaptor.

@param factory The factory object (null means the default factory).
"
      end

      operation 3191426 "setUserDataFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 525954 // SnmpUserDataFactory
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the user-data factory of this SNMP protocol adaptor.

@param factory The factory object (null means no factory).
@see com.sun.jmx.snmp.agent.SnmpUserDataFactory
"
      end

      operation 3191554 "getUserDataFactory"
	public return_type class_ref 525954 // SnmpUserDataFactory
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the user-data factory associated with this SNMP protocol adaptor.

@return The factory object (null means no factory).
@see com.sun.jmx.snmp.agent.SnmpUserDataFactory
"
      end

      operation 3191682 "getAuthTrapEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <CODE>true</CODE> if authentication traps are enabled.
<P>
When this feature is enabled, the SNMP protocol adaptor sends
an <CODE>authenticationFailure</CODE> trap each time an authentication fails.
<P>
The default behaviour is to send authentication traps.

@return <CODE>true</CODE> if authentication traps are enabled, <CODE>false</CODE> otherwise.
"
      end

      operation 3191810 "setAuthTrapEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating if traps need to be sent in case of authentication failure.

@param enabled Flag indicating if traps need to be sent.
"
      end

      operation 3191938 "getAuthRespEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this SNMP protocol adaptor sends a response in case
of authentication failure.
<P>
When this feature is enabled, the SNMP protocol adaptor sends a response with <CODE>noSuchName</CODE>
or <CODE>readOnly</CODE> when the authentication failed. If the flag is disabled, the
SNMP protocol adaptor trashes the PDU silently.
<P>
The default behavior is to send responses.

@return <code>true</code> if responses are sent.
"
      end

      operation 3192066 "setAuthRespEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating if responses need to be sent in case of authentication failure.

@param enabled Flag indicating if responses need to be sent.
"
      end

      operation 3192194 "getEnterpriseOid"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the enterprise OID. It is used by {@link #snmpV1Trap snmpV1Trap} to fill
the 'enterprise' field of the trap request.

@return The OID in string format \"x.x.x.x\".
"
      end

      operation 3192322 "setEnterpriseOid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oid" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the enterprise OID.

@param oid The OID in string format \"x.x.x.x\".

@exception IllegalArgumentException The string format is incorrect
"
      end

      operation 3192450 "getMibs"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the MIBs available in this SNMP protocol adaptor.

@return An array of MIB names.
"
      end

      operation 3192578 "getSnmpOutTraps"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS FOR SNMP GROUP (MIBII)
-------------------------------

Returns the <CODE>snmpOutTraps</CODE> value defined in MIB-II.

@return The <CODE>snmpOutTraps</CODE> value.
"
      end

      operation 3192706 "getSnmpOutGetResponses"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpOutGetResponses</CODE> value defined in MIB-II.

@return The <CODE>snmpOutGetResponses</CODE> value.
"
      end

      operation 3192834 "getSnmpOutGenErrs"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpOutGenErrs</CODE> value defined in MIB-II.

@return The <CODE>snmpOutGenErrs</CODE> value.
"
      end

      operation 3192962 "getSnmpOutBadValues"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpOutBadValues</CODE> value defined in MIB-II.

@return The <CODE>snmpOutBadValues</CODE> value.
"
      end

      operation 3193090 "getSnmpOutNoSuchNames"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpOutNoSuchNames</CODE> value defined in MIB-II.

@return The <CODE>snmpOutNoSuchNames</CODE> value.
"
      end

      operation 3193218 "getSnmpOutTooBigs"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpOutTooBigs</CODE> value defined in MIB-II.

@return The <CODE>snmpOutTooBigs</CODE> value.
"
      end

      operation 3193346 "getSnmpInASNParseErrs"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInASNParseErrs</CODE> value defined in MIB-II.

@return The <CODE>snmpInASNParseErrs</CODE> value.
"
      end

      operation 3193474 "getSnmpInBadCommunityUses"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInBadCommunityUses</CODE> value defined in MIB-II.

@return The <CODE>snmpInBadCommunityUses</CODE> value.
"
      end

      operation 3193602 "getSnmpInBadCommunityNames"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInBadCommunityNames</CODE> value defined in MIB-II.

@return The <CODE>snmpInBadCommunityNames</CODE> value.
"
      end

      operation 3193730 "getSnmpInBadVersions"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInBadVersions</CODE> value defined in MIB-II.

@return The <CODE>snmpInBadVersions</CODE> value.
"
      end

      operation 3193858 "getSnmpOutPkts"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpOutPkts</CODE> value defined in MIB-II.

@return The <CODE>snmpOutPkts</CODE> value.
"
      end

      operation 3193986 "getSnmpInPkts"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInPkts</CODE> value defined in MIB-II.

@return The <CODE>snmpInPkts</CODE> value.
"
      end

      operation 3194114 "getSnmpInGetRequests"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInGetRequests</CODE> value defined in MIB-II.

@return The <CODE>snmpInGetRequests</CODE> value.
"
      end

      operation 3194242 "getSnmpInGetNexts"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInGetNexts</CODE> value defined in MIB-II.

@return The <CODE>snmpInGetNexts</CODE> value.
"
      end

      operation 3194370 "getSnmpInSetRequests"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInSetRequests</CODE> value defined in MIB-II.

@return The <CODE>snmpInSetRequests</CODE> value.
"
      end

      operation 3194498 "getSnmpInTotalSetVars"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInTotalSetVars</CODE> value defined in MIB-II.

@return The <CODE>snmpInTotalSetVars</CODE> value.
"
      end

      operation 3194626 "getSnmpInTotalReqVars"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpInTotalReqVars</CODE> value defined in MIB-II.

@return The <CODE>snmpInTotalReqVars</CODE> value.
"
      end

      operation 3194754 "getSnmpSilentDrops"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpSilentDrops</CODE> value defined in rfc 1907 NMPv2-MIB .

@return The <CODE>snmpSilentDrops</CODE> value.

@since 1.5
"
      end

      operation 3194882 "getSnmpProxyDrops"
	public return_type class_ref 251778 // Long
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>snmpProxyDrops</CODE> value defined in rfc 1907 NMPv2-MIB .

@return The <CODE>snmpProxyDrops</CODE> value.

@since 1.5
"
      end

      operation 3195010 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 1
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PUBLIC METHODS
---------------

Adds a new MIB in the SNMP MIB handler.
This method is called automatically by {@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptor(SnmpMibHandler)}
and {@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptorName(ObjectName)}
and should not be called directly.

@param mib The MIB to add.

@return A reference to the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.
"
      end

      operation 3195138 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new MIB in the SNMP MIB handler.

@param mib The MIB to add.
@param oids The set of OIDs this agent implements.

@return A reference to the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3195266 "removeMib"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.
This method is called automatically by {@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptor(SnmpMibHandler)}
and {@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptorName(ObjectName)}
and should not be called directly.

@param mib The MIB to be removed.

@return <code>true</code> if the specified <CODE>mib</CODE> was a MIB included in the SNMP MIB handler,
<code>false</code> otherwise.
"
      end

      operation 3195394 "snmpV1Trap"
	public explicit_return_type "void"
	nparams 3
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V1 trap format.
<BR>The trap is sent to each destination defined in the ACL file (if available).
If no ACL file or no destinations are available, the trap is sent to the local host.

@param generic The generic number of the trap.
@param specific The specific number of the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3195522 "snmpV1Trap"
	public explicit_return_type "void"
	nparams 5
	  param inout name "address" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V1 trap format.
<BR>The trap is sent to the specified <CODE>InetAddress</CODE> destination
using the specified community string (and the ACL file is not used).

@param address The <CODE>InetAddress</CODE> destination of the trap.
@param cs The community string to be used for the trap.
@param generic The generic number of the trap.
@param specific The specific number of the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3195650 "snmpV1Trap"
	public explicit_return_type "void"
	nparams 7
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "agentAddr" type class_ref 515714 // SnmpIpAddress
	  param inout name "enterpOid" type class_ref 514306 // SnmpOid
	  param in name "generic" explicit_type "int"
	  param in name "specific" explicit_type "int"
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V1 trap format.
<BR>The trap is sent to the specified <CODE>SnmpPeer</CODE> destination.
The community string used is the one located in the <CODE>SnmpPeer</CODE> parameters (<CODE>SnmpParameters.getRdCommunity() </CODE>).

@param peer The <CODE>SnmpPeer</CODE> destination of the trap.
@param agentAddr The agent address to be used for the trap.
@param enterpOid The enterprise OID to be used for the trap.
@param generic The generic number of the trap.
@param specific The specific number of the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.
@param time The time stamp (overwrite the current time).

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3195778 "snmpV2Trap"
	public explicit_return_type "void"
	nparams 4
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	  param inout name "time" type class_ref 519938 // SnmpTimeticks
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V2 trap format.
<BR>The trap is sent to the specified <CODE>SnmpPeer</CODE> destination.
<BR>The community string used is the one located in the <CODE>SnmpPeer</CODE> parameters (<CODE>SnmpParameters.getRdCommunity() </CODE>).
<BR>The variable list included in the outgoing trap is composed of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with the value specified by <CODE>time</CODE>
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by <CODE>trapOid</CODE>
<LI><CODE>all the (oid,values)</CODE> from the specified <CODE>varBindList</CODE>
</UL>

@param peer The <CODE>SnmpPeer</CODE> destination of the trap.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.
@param time The time stamp (overwrite the current time).

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3195906 "snmpV2Trap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V2 trap format.
<BR>The trap is sent to each destination defined in the ACL file (if available).
If no ACL file or no destinations are available, the trap is sent to the local host.
<BR>The variable list included in the outgoing trap is composed of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by <CODE>trapOid</CODE>
<LI><CODE>all the (oid,values)</CODE> from the specified <CODE>varBindList</CODE>
</UL>

@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3196034 "snmpV2Trap"
	public explicit_return_type "void"
	nparams 4
	  param inout name "address" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a trap using SNMP V2 trap format.
<BR>The trap is sent to the specified <CODE>InetAddress</CODE> destination
using the specified community string (and the ACL file is not used).
<BR>The variable list included in the outgoing trap is composed of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by <CODE>trapOid</CODE>
<LI><CODE>all the (oid,values)</CODE> from the specified <CODE>varBindList</CODE>
</UL>

@param address The <CODE>InetAddress</CODE> destination of the trap.
@param cs The community string to be used for the trap.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3196162 "snmpPduTrap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 513154 // InetAddress
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the specified trap PDU to the passed <CODE>InetAddress</CODE>.
@param address The destination address.
@param pdu The pdu to send.
@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end

      operation 3196290 "snmpPduTrap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the specified trap PDU to the passed <CODE>SnmpPeer</CODE>.
@param peer The destination peer. The Read community string is used of <CODE>SnmpParameters</CODE> is used as the trap community string.
@param pdu The pdu to send.
@exception IOException An I/O error occurred while sending the trap.
@exception SnmpStatusException If the trap exceeds the limit defined by <CODE>bufferSize</CODE>.
@since 1.5
"
      end

      operation 3196418 "snmpInformRequest"
	public return_type class_ref 141442 // Vector
	nparams 3
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 3
	  exception class_ref 254850 // IllegalStateException
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an inform using SNMP V2 inform request format.
<BR>The inform request is sent to each destination defined in the ACL file (if available).
If no ACL file or no destinations are available, the inform request is sent to the local host.
<BR>The variable list included in the outgoing inform request is composed of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by <CODE>trapOid</CODE>
<LI><CODE>all the (oid,values)</CODE> from the specified <CODE>varBindList</CODE>
</UL>
To send an inform request, the SNMP adaptor server must be active.

@param cb The callback that is invoked when a request is complete.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@return A vector of {@link com.sun.jmx.snmp.daemon.SnmpInformRequest} objects.
<P>If there is no destination host for this inform request, the returned vector will be empty.

@exception IllegalStateException  This method has been invoked while the SNMP adaptor server was not active.
@exception IOException An I/O error occurred while sending the inform request.
@exception SnmpStatusException If the inform request exceeds the limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3196546 "snmpInformRequest"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 5
	  param inout name "address" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 3
	  exception class_ref 254850 // IllegalStateException
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an inform using SNMP V2 inform request format.
<BR>The inform is sent to the specified <CODE>InetAddress</CODE> destination
using the specified community string.
<BR>The variable list included in the outgoing inform request is composed of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by <CODE>trapOid</CODE>
<LI><CODE>all the (oid,values)</CODE> from the specified <CODE>varBindList</CODE>
</UL>
To send an inform request, the SNMP adaptor server must be active.

@param address The <CODE>InetAddress</CODE> destination for this inform request.
@param cs The community string to be used for the inform request.
@param cb The callback that is invoked when a request is complete.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@return The inform request object.

@exception IllegalStateException  This method has been invoked while the SNMP adaptor server was not active.
@exception IOException An I/O error occurred while sending the inform request.
@exception SnmpStatusException If the inform request exceeds the limit defined by <CODE>bufferSize</CODE>.
"
      end

      operation 3196674 "snmpInformRequest"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 4
	  param inout name "peer" type class_ref 519042 // SnmpPeer
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "trapOid" type class_ref 514306 // SnmpOid
	  param inout name "varBindList" type class_ref 520962 // SnmpVarBindList
	nexceptions 3
	  exception class_ref 254850 // IllegalStateException
	  exception class_ref 146818 // IOException
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an inform using SNMP V2 inform request format.
<BR>The inform is sent to the specified <CODE>SnmpPeer</CODE> destination.
<BR> The community string used is the one located in the <CODE>SnmpPeer</CODE> parameters (<CODE>SnmpParameters.getInformCommunity() </CODE>).
<BR>The variable list included in the outgoing inform is composed of the following items:
<UL>
<LI><CODE>sysUpTime.0</CODE> with its current value
<LI><CODE>snmpTrapOid.0</CODE> with the value specified by <CODE>trapOid</CODE>
<LI><CODE>all the (oid,values)</CODE> from the specified <CODE>varBindList</CODE>
</UL>
To send an inform request, the SNMP adaptor server must be active.

@param peer The <CODE>SnmpPeer</CODE> destination for this inform request.
@param cb The callback that is invoked when a request is complete.
@param trapOid The OID identifying the trap.
@param varBindList A list of <CODE>SnmpVarBind</CODE> instances or null.

@return The inform request object.

@exception IllegalStateException  This method has been invoked while the SNMP adaptor server was not active.
@exception IOException An I/O error occurred while sending the inform request.
@exception SnmpStatusException If the inform request exceeds the limit defined by <CODE>bufferSize</CODE>.

@since 1.5
"
      end
    end

    class 526978 "SnmpInformHandler"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides the callback methods that are required to be implemented by the application
when an inform response is received by the agent.
<P>
Each inform request can be provided with an object that implements this callback
interface. An application then uses the SNMP adaptor to start an SNMP inform request,
which marks the request as active. The methods in this callback interface
get invoked when any of the following happens:
<P>
<UL>
<LI> The agent receives the SNMP inform response.
<LI> The agent does not receive any response within a specified time and the number of tries
have exceeded the limit (timeout condition).
<LI> An internal error occurs while processing or parsing the inform request.
</UL>
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1038722 // <generalisation>
	relation 1038722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1038722 // <generalisation>
	  b parent class_ref 514690 // SnmpDefinitions
      end

      operation 3212034 "processSnmpPollData"
	abstract public explicit_return_type "void"
	nparams 4
	  param inout name "request" type class_ref 527106 // SnmpInformRequest
	  param in name "errStatus" explicit_type "int"
	  param in name "errIndex" explicit_type "int"
	  param inout name "vblist" type class_ref 520962 // SnmpVarBindList
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This callback is invoked when a manager responds to an SNMP inform request.
The callback should check the error status of the inform request to determine
the kind of response.

@param request The <CODE>SnmpInformRequest</CODE> associated with this callback.
@param errStatus The status of the request.
@param errIndex The index in the list that caused the error.
@param vblist The <CODE>Response varBind</CODE> list for the successful request.
"
      end

      operation 3212162 "processSnmpPollTimeout"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 527106 // SnmpInformRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This callback is invoked when a manager does not respond within the
specified timeout value to the SNMP inform request. The number of tries have also
been exhausted.
@param request The <CODE>SnmpInformRequest</CODE> associated with this callback.
"
      end

      operation 3212290 "processSnmpInternalError"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "request" type class_ref 527106 // SnmpInformRequest
	  param inout name "errmsg" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This callback is invoked when any form of internal error occurs.
@param request The <CODE>SnmpInformRequest</CODE> associated with this callback.
@param errmsg The <CODE>String</CODE> describing the internal error.
"
      end
    end

    class 527106 "SnmpInformRequest"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used by the {@link com.sun.jmx.snmp.daemon.SnmpAdaptorServer SNMP adaptor server} to send inform requests
to an SNMP manager and receive inform responses.
<P>
This class provides basic functions that enable you to fire inform requests,
handle retries, timeouts, and process responses from the manager.
<BR>
The SNMP adaptor server specifies the destination of the inform request and controls
the size of a single inform request/response to fit into its <CODE>bufferSize</CODE>.
It specifies the maximum number of tries and the timeout to be used for the inform requests.
It also provides resources such as the authentication mechanism (using its PDU factory),
controlling all inform requests created by it, and finally the inform response to the user.
<P>
Each inform request, when ready to be sent, is assigned a unique identifier which helps
in identifying the inform request with matching inform responses to the protocol engine
lying transparently underneath. The engine does the job of retrying the inform requests
when the timer expires and calls the SNMP adaptor server when a timeout occurs after exhausting
the maximum number of tries.
<P>
The inform request object provides the method, {@link #waitForCompletion waitForCompletion(long time)},
which enables a user to operate in a synchronous mode with an inform request.
This is done by blocking the user thread for the desired time interval.
The user thread gets notified whenever a request reaches completion, independently of the status of the response.
<P>
If an {@link com.sun.jmx.snmp.daemon.SnmpInformHandler inform callback} is provided when sending the inform request,
the user operates in an asynchronous mode with the inform request. The user thread is not blocked
and the specific inform callback implementation provided by the user is invoked when the inform response is received.

<P>
<B>Note:</B>
<BR>From RFC 1905, the SNMP inform request is defined as a request generated and transmitted
by an SNMPv2 entity acting in a manager role to another SNMPv2 entity also acting in a manager role.
The mechanisms to implement this behaviour are defined in the SNMP manager API.
<BR>
Nevertheless, this feature has derived and in some documentations, the inform request appears
like an SNMPv2 trap that gets responded.
<BR>The <CODE>SnmpInformRequest</CODE> class is used to fullfill this latter case.
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1038850 // <realization>
	relation 1038850 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1038850 // <realization>
	  b parent class_ref 514690 // SnmpDefinitions
      end

      classrelation 1038978 // requestCounter (<unidirectional association>)
	relation 1038978 --->
	  a role_name "requestCounter" init_value " new SnmpRequestCounter()" class_relation private
	    comment " VARIABLES
----------

This object maintains a global counter for the inform request ID.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1038978 // requestCounter (<unidirectional association>)
	  b parent class_ref 527874 // SnmpRequestCounter
      end

      classrelation 1039106 // varBindList (<unidirectional association>)
	relation 1039106 --->
	  a role_name "varBindList" init_value " null" private
	    comment "
This contains a list of <CODE>SnmpVarBind</CODE> objects for making the SNMP inform requests.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1039106 // varBindList (<unidirectional association>)
	  b parent class_ref 520962 // SnmpVarBindList
      end

      attribute 676098 "errorStatus"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The error status associated with the inform response packet.

"
      end

      attribute 676226 "errorIndex"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index in <CODE>SnmpVarBindList</CODE> that caused the exception.

"
      end

      classrelation 1039234 // internalVarBind (<unidirectional association>)
	relation 1039234 --->
	  a role_name "internalVarBind" multiplicity "[]" init_value " null" package
	    comment "private SnmpVarBind internalVarBind[] = null;
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1039234 // internalVarBind (<unidirectional association>)
	  b parent class_ref 516738 // SnmpVarBind
      end

      classrelation 1039362 // reason (<unidirectional association>)
	relation 1039362 --->
	  a role_name "reason" init_value " null" package
	    comment "private String reason = null;
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1039362 // reason (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1039490 // adaptor (<unidirectional association>)
	relation 1039490 --->
	  a role_name "adaptor" private
	    comment "
The SNMP adaptor associated with this inform request.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1039490 // adaptor (<unidirectional association>)
	  b parent class_ref 526722 // SnmpAdaptorServer
      end

      classrelation 1039618 // informSession (<unidirectional association>)
	relation 1039618 --->
	  a role_name "informSession" private
	    comment "
The session object associated with this inform request.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1039618 // informSession (<unidirectional association>)
	  b parent class_ref 527362 // SnmpSession
      end

      classrelation 1039746 // callback (<unidirectional association>)
	relation 1039746 --->
	  a role_name "callback" init_value " null" private
	    comment "
The user implementation of the callback interface for this request.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1039746 // callback (<unidirectional association>)
	  b parent class_ref 526978 // SnmpInformHandler
      end

      classrelation 1039874 // requestPdu (<unidirectional association>)
	relation 1039874 --->
	  a role_name "requestPdu" package
	    comment "
The inform request PDU.

private SnmpPduPacket requestPdu;
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1039874 // requestPdu (<unidirectional association>)
	  b parent class_ref 513538 // SnmpPdu
      end

      classrelation 1040002 // responsePdu (<unidirectional association>)
	relation 1040002 --->
	  a role_name "responsePdu" package
	    comment "
The inform response PDU.

private SnmpPduRequest responsePdu;
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1040002 // responsePdu (<unidirectional association>)
	  b parent class_ref 518786 // SnmpPduRequestType
      end

      attribute 676354 "stBase"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Base status of an inform request.

"
      end

      attribute 676482 "stInProgress"
	class_attribute const_attribute public explicit_type "int"
	init_value " stBase"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: in progress.

"
      end

      attribute 676610 "stWaitingToSend"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 1) | stInProgress"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: waiting to be sent.

"
      end

      attribute 676738 "stWaitingForReply"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 2) | stInProgress"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: waiting for reply.

"
      end

      attribute 676866 "stReceivedReply"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 3) | stInProgress"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: reply received.

"
      end

      attribute 676994 "stAborted"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 4)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: request aborted.

"
      end

      attribute 677122 "stTimeout"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 5)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: timeout.

"
      end

      attribute 677250 "stInternalError"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 6)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: internal error occured.

"
      end

      attribute 677378 "stResultsAvailable"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 7)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: result available for the request.

"
      end

      attribute 677506 "stNeverUsed"
	class_attribute const_attribute public explicit_type "int"
	init_value " (stBase << 8)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Status of an inform request: request never used.

"
      end

      attribute 677634 "numTries"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of tries performed for the current polling operation.

"
      end

      attribute 677762 "timeout"
	private explicit_type "int"
	init_value " 3 * 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Timeout.
The default amount of time is 3000 millisec.

 3 seconds."
      end

      attribute 677890 "reqState"
	private explicit_type "int"
	init_value " stNeverUsed"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 678018 "prevPollTime"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Polling control parameters.
 value of 0 means poll never happened."
      end

      attribute 678146 "nextPollTime"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 678274 "waitTimeForResponse"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1040130 // debugDate (<unidirectional association>)
	relation 1040130 --->
	  a role_name "debugDate" init_value " new Date()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1040130 // debugDate (<unidirectional association>)
	  b parent class_ref 521474 // Date
      end

      attribute 678402 "requestId"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The request ID for an active inform request.

"
      end

      attribute 678530 "port"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1040258 // address (<unidirectional association>)
	relation 1040258 --->
	  a role_name "address" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1040258 // address (<unidirectional association>)
	  b parent class_ref 513154 // InetAddress
      end

      classrelation 1040386 // communityString (<unidirectional association>)
	relation 1040386 --->
	  a role_name "communityString" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1040386 // communityString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 3212418 "SnmpInformRequest"
	package explicit_return_type ""
	nparams 6
	  param inout name "session" type class_ref 527362 // SnmpSession
	  param inout name "adp" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param in name "p" explicit_type "int"
	  param inout name "requestCB" type class_ref 526978 // SnmpInformHandler
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CONSTRUCTORS
-------------

For SNMP Runtime internal use only.
Constructor for creating new inform request. This object can be created only by an SNMP adaptor object.
@param session <CODE>SnmpSession</CODE> object for this inform request.
@param adp <CODE>SnmpAdaptorServer</CODE> object for this inform request.
@param addr The <CODE>InetAddress</CODE> destination for this inform request.
@param cs The community string to be used for the inform request.
@param requestCB Callback interface for the inform request.
@exception SnmpStatusException SNMP adaptor is not ONLINE or session is dead.
"
      end

      operation 3212546 "getRequestId"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PUBLIC METHODS
---------------

Gets the request id (invoke identifier) of the current inform request.
@return The request id.
"
      end

      operation 3212674 "getAddress"
	package return_type class_ref 513154 // InetAddress
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the destination address of the current inform request.
@return The destination address.
"
      end

      operation 3212802 "getRequestStatus"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current status of the inform request.
@return The current status of the inform request.
"
      end

      operation 3212930 "isAborted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the inform request was aborted.
@return <CODE>true</CODE> if the inform request was aborted, <CODE>false</CODE> otherwise.
"
      end

      operation 3213058 "inProgress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the inform request is in progress.
@return <CODE>true</CODE> if the inform request is in progress, <CODE>false</CODE> otherwise.
"
      end

      operation 3213186 "isResultAvailable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the inform request result is available.
@return <CODE>true</CODE> if the inform request result is available, <CODE>false</CODE> otherwise.
"
      end

      operation 3213314 "getErrorStatus"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the status associated with the <CODE>SnmpVarBindList</CODE>.
@return The error status.
"
      end

      operation 3213442 "getErrorIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index.
<P>NOTE: this value is equal to the <CODE>errorIndex</CODE> field minus 1.
@return The error index.
"
      end

      operation 3213570 "getMaxTries"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum number of tries before declaring that the manager is not responding.
@return The maximum number of times an inform request should be tried.
"
      end

      operation 3213698 "getNumTries"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of tries performed for the current inform request.
@return The number of tries performed.
"
      end

      operation 3213826 "setTimeout"
	package explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3213954 "getAbsNextPollTime"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets absolute time in milliseconds (based on epoch time) when the next
polling activity will begin.
@return The absolute time when polling will begin.
"
      end

      operation 3214082 "getAbsMaxTimeToWait"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets absolute time in milliseconds (based on epoch time) before which an inform
response is expected from a manager.
@return The absolute time within which an inform response is expected.
"
      end

      operation 3214210 "getResponseVarBindList"
	public return_type class_ref 520962 // SnmpVarBindList
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <CODE>SnmpVarBindList</CODE> of the inform response.
It returns a null value if the inform request is in progress.
This ensures accidental manipulation does not occur when a request is in progress.
In case of an error, <CODE>SnmpVarBindList</CODE> is the copy
of the original <CODE>SnmpVarBindList</CODE> at the time of making the inform request.
@return The list of <CODE>SnmpVarBind</CODE> objects returned by the manager or the null value if the request
is in progress.
"
      end

      operation 3214338 "waitForCompletion"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used in synchronous mode only.
Provides a hook that enables a synchronous operation on a previously sent inform request.
Only one inform request can be in synchronous mode on a given thread.
The blocked thread is notified when the inform request state reaches completion.
If the inform request is not active, the method returns immediately.
The user must get the error status of the inform request to determine the
exact status of the request.

@param time The amount of time to wait. Zero means block until complete.
@return <CODE>true</CODE> if the inform request has completed, <CODE>false</CODE> if it is still active.
"
      end

      operation 3214466 "cancelRequest"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels the active inform request and removes itself from the polling list.
"
      end

      operation 3214594 "notifyClient"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the registered client about the completion of an operation.
"
      end

      operation 3214722 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Finalizer of the <CODE>SnmpInformRequest</CODE> objects.
This method is called by the garbage collector on an object
when garbage collection determines that there are no more references to the object.
<P>Sets all the references to this SNMP inform request object to <CODE>null</CODE>.
"
      end

      operation 3214850 "snmpErrorToString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "errcode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>String</CODE> representation of an error code.
@param errcode The error code as an integer.
@return The error code as a <CODE>String</CODE>.
"
      end

      operation 3214978 "start"
	package explicit_return_type "void"
	nparams 1
	  param inout name "vblst" type class_ref 520962 // SnmpVarBindList
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PRIVATE AND PACKAGE METHODS
----------------------------

For SNMP Runtime internal use only.
Starts an inform request in asynchronous mode. The callback interface
is used to notify the user upon request completion.
@param vblst The list of <CODE>SnmpVarBind</CODE> to be used.
@exception SnmpStatusException This inform request is already in progress.
"
      end

      operation 3215106 "initializeAndFire"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3215234 "startRequest"
	private explicit_return_type "void"
	nparams 1
	  param in name "starttime" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method submits the inform request for polling and marks the request
active. It does nothing if the request is already active.
The poll will be scheduled to happen immediately.
@param starttime The start time for polling.
"
      end

      operation 3215362 "schedulePoll"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method creates a new request ID. The ID is submitted to the poll server for scheduling.
"
      end

      operation 3215490 "action"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method determines whether the inform request is to be retried. This is used if the
peer did not respond to a previous request. If the request exceeds
the maxTries limit, a timeout is signaled.
"
      end

      operation 3215618 "invokeOnReady"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3215746 "invokeOnRetry"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3215874 "invokeOnTimeout"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3216002 "queueResponse"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3216130 "constructPduPacket"
	package return_type class_ref 513538 // SnmpPdu
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an inform request PDU.
"
      end

      operation 3216258 "sendPdu"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3216386 "sendPduPacket"
	package explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "byte"
	multiplicity "[]"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the prepared PDU packet to the manager and updates the data structure
to expect a response. It acquires a lock on the socket to prevent a case
where a response arrives before this thread could insert the
request into the wait queue.
@exception IOException Signals that an I/O exception of some sort has occurred.
"
      end

      operation 3216514 "processResponse"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3216642 "parsePduPacket"
	package explicit_return_type "void"
	nparams 1
	  param inout name "rpdu" type class_ref 518786 // SnmpPduRequestType
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the inform response packet. If the agent responds with error set,
it does not parse any further.
"
      end

      operation 3216770 "handleSuccess"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the user implementation of the <CODE>SnmpInformHandler</CODE> interface.
"
      end

      operation 3216898 "handleTimeout"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the user implementation of the <CODE>SnmpInformHandler</CODE> interface.
"
      end

      operation 3217026 "handleError"
	private explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the user implementation of the <CODE>SnmpInformHandler</CODE> interface.
"
      end

      operation 3217154 "handleInternalError"
	private explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the user implementation of the <CODE>SnmpInformHandler</CODE> interface.
"
      end

      operation 3217282 "updateInternalVarBindWithResult"
	package explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 516738 // SnmpVarBind
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3217410 "invokeOnResponse"
	package explicit_return_type "void"
	nparams 1
	  param inout name "resp" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3217538 "stopRequest"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method cancels an active inform request and removes it from the polling list.
"
      end

      operation 3217666 "deleteRequest"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3217794 "getVarBindList"
	package return_type class_ref 520962 // SnmpVarBindList
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
Gets the active <CODE>SnmpVarBindList</CODE>. The contents of it
are not guaranteed to be consistent when the inform request is active.
@return The list of <CODE>SnmpVarBind</CODE> objects.
"
      end

      operation 3217922 "setVarBindList"
	package explicit_return_type "void"
	nparams 1
	  param inout name "newvblst" type class_ref 520962 // SnmpVarBindList
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
You should specify the <CODE>SnmpVarBindList</CODE> at SnmpInformRequest creation time.
You cannot modify it during the life-time of the object.
"
      end

      operation 3218050 "setErrorStatusAndIndex"
	package explicit_return_type "void"
	nparams 2
	  param in name "stat" explicit_type "int"
	  param in name "idx" explicit_type "int"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3218178 "setPrevPollTime"
	package explicit_return_type "void"
	nparams 1
	  param in name "prev" explicit_type "long"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3218306 "setRequestSentTime"
	package explicit_return_type "void"
	nparams 1
	  param in name "sendtime" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3218434 "initNewRequest"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the request id from the request counter.
"
      end

      operation 3218562 "timeRemainingForAction"
	package explicit_return_type "long"
	nparams 1
	  param in name "currtime" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For SNMP Runtime internal use only.
"
      end

      operation 3218690 "statusDescription"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param in name "state" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string state corresponding to the specified integer state.
@param state The integer state.
@return The string state.
"
      end

      operation 3218818 "setRequestStatus"
	package explicit_return_type "void"
	nparams 1
	  param in name "reqst" explicit_type "int"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the request status to the specified value.
@param reqst The new status request.
"
      end

      operation 3218946 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gives a status report of the request.
@return The status report of the request.
"
      end

      operation 3219074 "tostring"
	private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 527362 "SnmpSession"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used for sending INFORM REQUESTS from an agent to a manager.

Creates, controls, and manages one or more inform requests.

The SnmpSession maintains the list of all active inform requests and inform responses.
Each SnmpSession has a dispatcher that is a thread used to service all the inform requests it creates
and each SnmpSession uses a separate socket for sending/receiving inform requests/responses.

An SnmpSession object is associated with an SNMP adaptor server.
It is created the first time an inform request is sent by the SNMP adaptor server
and is destroyed (with its associated SnmpSocket) when the SNMP adaptor server is stopped.

"
      classrelation 1044482 // <realization>
	relation 1044482 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1044482 // <realization>
	  b parent class_ref 514690 // SnmpDefinitions
      end

      classrelation 1044610 // <realization>
	relation 1044610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1044610 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      classrelation 1044738 // adaptor (<unidirectional association>)
	relation 1044738 --->
	  a role_name "adaptor" protected
	    comment " PRIVATE VARIABLES
------------------

The SNMP adaptor associated with this SnmpSession.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1044738 // adaptor (<unidirectional association>)
	  b parent class_ref 526722 // SnmpAdaptorServer
      end

      classrelation 1044866 // informSocket (<unidirectional association>)
	relation 1044866 --->
	  a role_name "informSocket" init_value " null" protected
	    comment "
The SnmpSocket to be used to communicate with the manager
by all inform requests created in this session.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1044866 // informSocket (<unidirectional association>)
	  b parent class_ref 528898 // SnmpSocket
      end

      classrelation 1044994 // informRequestList (<unidirectional association>)
	relation 1044994 --->
	  a role_name "informRequestList" init_value "
            new Hashtable<>()" private
	    comment "
This table maintains the list of inform requests.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpInformRequest, SnmpInformRequest> ${name}${value};
"
	    classrelation_ref 1044994 // informRequestList (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 1045122 // informRespq (<unidirectional association>)
	relation 1045122 --->
	  a role_name "informRespq" init_value "
            new Stack<>()" private
	    comment "
This table maintains the list of inform responses.
A FIFO queue is needed here.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpInformRequest> ${name}${value};
"
	    classrelation_ref 1045122 // informRespq (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      classrelation 1045250 // myThread (<unidirectional association>)
	relation 1045250 --->
	  a role_name "myThread" init_value " null" private
	    comment "
The dispatcher that will service all inform responses to inform requests generated
using this session object. An SnmpSession object creates one or more inform requests.
Thus it services all inform requests, which are created by this session object,
when an inform response arrives for an inform request generated by the session.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1045250 // myThread (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      classrelation 1045378 // syncInformReq (<unidirectional association>)
	relation 1045378 --->
	  a role_name "syncInformReq" private
	    comment "
Request being synchronized from session thread. This happens when
a user does sync operation from a callback.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1045378 // syncInformReq (<unidirectional association>)
	  b parent class_ref 527106 // SnmpInformRequest
      end

      classrelation 1045506 // snmpQman (<unidirectional association>)
	relation 1045506 --->
	  a role_name "snmpQman" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1045506 // snmpQman (<unidirectional association>)
	  b parent class_ref 528130 // SnmpQManager
      end

      attribute 679554 "isBeingCancelled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3229570 "SnmpSession"
	public explicit_return_type ""
	nparams 1
	  param inout name "adp" type class_ref 526722 // SnmpAdaptorServer
	nexceptions 1
	  exception class_ref 248066 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PUBLIC CONSTRUCTORS
--------------------

Constructor for creating a new session.
@param adp The SNMP adaptor associated with this SnmpSession.
@exception SocketException Unable to initialize the SnmpSocket.
"
      end

      operation 3229698 "SnmpSession"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 248066 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for creating a new session. Allows subclassing.
"
      end

      operation 3229826 "initialize"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "adp" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "snmpRespHdlr" type class_ref 528642 // SnmpResponseHandler
	nexceptions 1
	  exception class_ref 248066 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " OTHER METHODS
--------------

Initializes the SnmpSession.
@param adp The SNMP adaptor associated with this SnmpSession.
@exception SocketException Unable to initialize the SnmpSocket.
"
      end

      operation 3229954 "isSessionActive"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the thread for this session is active and the SNMP adaptor server ONLINE.
@return true if active, false otherwise.
"
      end

      operation 3230082 "getSocket"
	package return_type class_ref 528898 // SnmpSocket
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the SnmpSocket which will be used by inform requests created in this session.
@return The socket which will be used in this session.
"
      end

      operation 3230210 "getSnmpQManager"
	package return_type class_ref 528130 // SnmpQManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the SnmpQManager which will be used by inform requests created in this session.
@return The SnmpQManager which will be used in this session.
"
      end

      operation 3230338 "syncInProgress"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this session is performing synchronous operation for an inform request.
@return <CODE>true</CODE> if the session is performing synchronous operation, <CODE>false</CODE> otherwise.
"
      end

      operation 3230466 "setSyncMode"
	private explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3230594 "resetSyncMode"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3230722 "thisSessionContext"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <CODE>true</CODE> if the current executing thread is this session's dispatcher.
Typically used to detect whether the user is doing a sync operation from
this dispatcher context. For instance, a user gives a sync command
from within a request callback using its associated session.
@return <CODE>true</CODE> if current thread is this session's dispatcher, <CODE>false</CODE> otherwise.
"
      end

      operation 3230850 "makeAsyncRequest"
	package return_type class_ref 527106 // SnmpInformRequest
	nparams 5
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param inout name "cs" type class_ref 128130 // String
	  param inout name "cb" type class_ref 526978 // SnmpInformHandler
	  param inout name "vblst" type class_ref 520962 // SnmpVarBindList
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an inform request to the specified InetAddress destination using the specified community string.
@param addr The InetAddress destination for this inform request.
@param cs The community string to be used for the inform request.
@param cb The callback that is invoked when a request is complete.
@param vblst A list of SnmpVarBind instances or null.
@exception SnmpStatusException SNMP adaptor is not ONLINE or session
           is dead.
"
      end

      operation 3230978 "waitForResponse"
	package explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 527106 // SnmpInformRequest
	  param in name "waitTime" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs sync operations on active requests. Any number of inform requests
can be done in sync mode but only one per thread.
The user can do synchronous operation using the request handle only.
"
      end

      operation 3231106 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Dispatcher method for this session thread. This is the dispatcher method
which goes in an endless-loop and waits for servicing inform requests
which received a reply from the manager.
"
      end

      operation 3231234 "processResponse"
	private explicit_return_type "void"
	nparams 1
	  param inout name "reqc" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3231362 "addInformRequest"
	package explicit_return_type "void"
	nparams 1
	  param inout name "snmpreq" type class_ref 527106 // SnmpInformRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " HANDLING INFORM REQUESTS LIST AND INFORM RESPONSES LIST
--------------------------------------------------------

Adds an inform request.
@param snmpreq The inform request to add.
@exception SnmpStatusException SNMP adaptor is not ONLINE or session is dead.
"
      end

      operation 3231490 "removeInformRequest"
	package explicit_return_type "void"
	nparams 1
	  param inout name "snmpreq" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes an inform request.
@param snmpreq The inform request to delete.
"
      end

      operation 3231618 "cancelAllRequests"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels all pending inform requests in this session.
"
      end

      operation 3231746 "addResponse"
	package explicit_return_type "void"
	nparams 1
	  param inout name "reqc" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the inform request object which received a response to an inform request
generated by the session.  This is added to a private store, which
will be eventually picked up by the dispatcher for processing.
@param reqc The inform request that received the response from the manager.
"
      end

      operation 3231874 "nextResponse"
	private return_type class_ref 527106 // SnmpInformRequest
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3232002 "cancelAllResponses"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3232130 "destroySession"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys any pending inform requests and then stops the session.
The session will not be usable after this method returns.
"
      end

      operation 3232258 "killSessionThread"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make sure you are killing the thread when it is active. Instead
prepare for a graceful exit.
"
      end

      operation 3232386 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Finalizer of the <CODE>SnmpSession</CODE> objects.
This method is called by the garbage collector on an object
when garbage collection determines that there are no more references to the object.
<P>Removes all the requests for this SNMP session, closes the socket and
sets all the references to the <CODE>SnmpSession</CODE> object to <CODE>null</CODE>.
"
      end
    end

    class 527618 "SnmpMibTree"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class is used for building a tree representation of the different
root oids of the supported MIBs. Each node is associated to a specific MIB.
"
      operation 3219202 "SnmpMibTree"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3219330 "setDefaultAgent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "def" type class_ref 522498 // SnmpMibAgent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3219458 "getDefaultAgent"
	public return_type class_ref 522498 // SnmpMibAgent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3219586 "register"
	public explicit_return_type "void"
	nparams 1
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3219714 "register"
	public explicit_return_type "void"
	nparams 2
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3219842 "getAgentMib"
	public return_type class_ref 522498 // SnmpMibAgent
	nparams 1
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3219970 "unregister"
	public explicit_return_type "void"
	nparams 2
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3220098 "unregister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3220226 "printTree"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "public void unregister(SnmpMibAgent agent) {
long[] oid= agent.getRootOid();
TreeNode node= root.retrieveMatchingBranch(oid, 0);
if (node == null)
return;
node.removeAgent(agent);
}
"
      end

      classrelation 1040514 // defaultAgent (<unidirectional association>)
	relation 1040514 --->
	  a role_name "defaultAgent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1040514 // defaultAgent (<unidirectional association>)
	  b parent class_ref 522498 // SnmpMibAgent
      end

      class 528002 "TreeNode"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 3220354 "registerNode"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3220482 "retrieveMatchingBranch"
	  package return_type class_ref 528002 // TreeNode
	  nparams 2
	    param inout name "oid" explicit_type "long"
	  multiplicity "[]"
	    param in name "cursor" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3220610 "getAgentMib"
	  package return_type class_ref 522498 // SnmpMibAgent
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3220738 "printTree"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ident" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3220866 "TreeNode"
	  private explicit_return_type ""
	  nparams 3
	    param in name "nodeValue" explicit_type "long"
	    param inout name "agent" type class_ref 522498 // SnmpMibAgent
	    param inout name "sup" type class_ref 528002 // TreeNode
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " PRIVATE STUFF
--------------

Only the treeNode class can create an instance of treeNode.
The creation occurs when registering a new oid.
"
	end

	operation 3220994 "removeAgentFully"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3221122 "removeAgent"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3221250 "setAgent"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3221378 "registerNode"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "oid" explicit_type "long"
	  multiplicity "[]"
	    param in name "cursor" explicit_type "int"
	    param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3221506 "retrieveChild"
	  private return_type class_ref 528002 // TreeNode
	  nparams 2
	    param inout name "oid" explicit_type "long"
	  multiplicity "[]"
	    param in name "current" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3221634 "match"
	  private explicit_return_type "boolean"
	  nparams 1
	    param in name "value" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1040770 // children (<unidirectional association>)
	  relation 1040770 --->
	    a role_name "children" init_value " new Vector<>()" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TreeNode> ${name}${value};
"
	      classrelation_ref 1040770 // children (<unidirectional association>)
	    b parent class_ref 141442 // Vector
	end

	classrelation 1040898 // agents (<unidirectional association>)
	  relation 1040898 --->
	    a role_name "agents" init_value " new Vector<>()" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpMibAgent> ${name}${value};
"
	      classrelation_ref 1040898 // agents (<unidirectional association>)
	    b parent class_ref 141442 // Vector
	end

	attribute 678658 "nodeValue"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1041026 // agent (<unidirectional association>)
	  relation 1041026 --->
	    a role_name "agent" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1041026 // agent (<unidirectional association>)
	    b parent class_ref 522498 // SnmpMibAgent
	end

	classrelation 1041154 // parent (<unidirectional association>)
	  relation 1041154 --->
	    a role_name "parent" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1041154 // parent (<unidirectional association>)
	    b parent class_ref 528002 // TreeNode
	end
      end

      classrelation 1040642 // root (<unidirectional association>)
	relation 1040642 --->
	  a role_name "root" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1040642 // root (<unidirectional association>)
	  b parent class_ref 528002 // TreeNode
      end
    end

    class 527874 "SnmpRequestCounter"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A static instance of this class is usually created.  It contains a
counter that is incremented every time it is accessed.  For example,
this class can be used in <CODE>SnmpSession</CODE> to generate a request
identifier that is used to identify a message in a client-server session.
The class wraps around when it reaches the maximum positive value, 2^31 - 1.
"
      attribute 679170 "reqid"
	package explicit_type "int"
	init_value " 0 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A counter with value between 1...2^31-1.

"
      end

      operation 3224962 "SnmpRequestCounter"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3225090 "getNewId"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next request identifier.
@return next request identifier.  The value wraps to 1 if it reaches negative value.
"
      end
    end

    class 528130 "SnmpQManager"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " import debug stuff


This class implements a server queue manager.
This class is for internal use.
"
      classrelation 1041282 // <realization>
	relation 1041282 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1041282 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 678786 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2163709017015248264L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1041410 // newq (<unidirectional association>)
	relation 1041410 --->
	  a role_name "newq" private
	    comment " VARIABLES
----------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1041410 // newq (<unidirectional association>)
	  b parent class_ref 528258 // SendQ
      end

      classrelation 1041538 // waitq (<unidirectional association>)
	relation 1041538 --->
	  a role_name "waitq" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1041538 // waitq (<unidirectional association>)
	  b parent class_ref 528386 // WaitQ
      end

      classrelation 1041666 // queueThreadGroup (<unidirectional association>)
	relation 1041666 --->
	  a role_name "queueThreadGroup" init_value " null " private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1041666 // queueThreadGroup (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      classrelation 1041794 // requestQThread (<unidirectional association>)
	relation 1041794 --->
	  a role_name "requestQThread" init_value " null " private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1041794 // requestQThread (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      classrelation 1041922 // timerQThread (<unidirectional association>)
	relation 1041922 --->
	  a role_name "timerQThread" init_value " null " private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1041922 // timerQThread (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      operation 3221762 "SnmpQManager"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CONSTRUCTORS
-------------"
      end

      operation 3221890 "startQThreads"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3222018 "stopQThreads"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3222146 "addRequest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reqc" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3222274 "addWaiting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reqc" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3222402 "getAllOutstandingRequest"
	public return_type class_ref 141442 // Vector
	nparams 1
	  param in name "range" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpInformRequest> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3222530 "getTimeoutRequests"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3222658 "removeRequest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reqc" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3222786 "removeRequest"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 1
	  param in name "reqid" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 528258 "SendQ"
      visibility package 
      nactuals 1
      actual class class_ref 141442 // Vector
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This vector manages the inform requests to be sent to the manager.

 no serialVersionUID but never serialized"
      classrelation 1042050 // <realization>
	relation 1042050 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1042050 // <realization>
	  b parent class_ref 141442 // Vector
      end

      operation 3222914 "SendQ"
	package explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "capacityIncr" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3223042 "notifyClients"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3223170 "addRequest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3223298 "waitUntilReady"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3223426 "getAllOutstandingRequest"
	public return_type class_ref 141442 // Vector
	nparams 1
	  param in name "margin" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpInformRequest> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3223554 "waitOnThisQueue"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3223682 "getRequestAt"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 1
	  param in name "idx" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3223810 "removeRequest"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 1
	  param in name "reqid" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 678914 "isBeingDestroyed"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This boolean is used to stop handling requests while the corresponding SnmpQManager
 is being destroyed.

"
      end
    end

    class 528386 "WaitQ"
      visibility package 
      nactuals 1
      actual class class_ref 141442 // Vector
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This vector manages the inform requests to be retried to the manager.

 no serialVersionUID, but never serialized"
      classrelation 1042178 // <realization>
	relation 1042178 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1042178 // <realization>
	  b parent class_ref 141442 // Vector
      end

      operation 3223938 "WaitQ"
	package explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "capacityIncr" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3224066 "addWaiting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3224194 "waitUntilReady"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3224322 "getTimeoutRequests"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3224450 "notifyClients"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3224578 "waitOnThisQueue"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3224706 "getRequestAt"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 1
	  param in name "idx" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3224834 "removeRequest"
	public return_type class_ref 527106 // SnmpInformRequest
	nparams 1
	  param in name "reqid" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 679042 "isBeingDestroyed"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This boolean is used to stop handling requests while the corresponding SnmpQManager
 is being destroyed.

"
      end
    end

    class 528514 "SnmpRequestHandler"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 1042306 // <generalisation>
	relation 1042306 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1042306 // <generalisation>
	  b parent class_ref 526082 // ClientHandler
      end

      classrelation 1042434 // <realization>
	relation 1042434 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1042434 // <realization>
	  b parent class_ref 514690 // SnmpDefinitions
      end

      classrelation 1042562 // socket (<unidirectional association>)
	relation 1042562 --->
	  a role_name "socket" init_value " null " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1042562 // socket (<unidirectional association>)
	  b parent class_ref 527234 // DatagramSocket
      end

      classrelation 1042690 // packet (<unidirectional association>)
	relation 1042690 --->
	  a role_name "packet" init_value " null " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1042690 // packet (<unidirectional association>)
	  b parent class_ref 527490 // DatagramPacket
      end

      classrelation 1042818 // mibs (<unidirectional association>)
	relation 1042818 --->
	  a role_name "mibs" init_value " null " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpMibAgent> ${name}${value};
"
	    classrelation_ref 1042818 // mibs (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1042946 // subs (<unidirectional association>)
	relation 1042946 --->
	  a role_name "subs" init_value " null" private
	    comment "
Contains the list of sub-requests associated to the current request.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpMibAgent, SnmpSubRequestHandler> ${name}${value};
"
	    classrelation_ref 1042946 // subs (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 1043074 // root (<unidirectional association>)
	relation 1043074 --->
	  a role_name "root" private
	    comment "
Reference on the MIBS

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043074 // root (<unidirectional association>)
	  b parent class_ref 527618 // SnmpMibTree
      end

      classrelation 1043202 // ipacl (<unidirectional association>)
	relation 1043202 --->
	  a role_name "ipacl" init_value " null " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043202 // ipacl (<unidirectional association>)
	  b parent class_ref 513026 // InetAddressAcl
      end

      classrelation 1043330 // pduFactory (<unidirectional association>)
	relation 1043330 --->
	  a role_name "pduFactory" init_value " null " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043330 // pduFactory (<unidirectional association>)
	  b parent class_ref 518402 // SnmpPduFactory
      end

      classrelation 1043458 // userDataFactory (<unidirectional association>)
	relation 1043458 --->
	  a role_name "userDataFactory" init_value " null " private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043458 // userDataFactory (<unidirectional association>)
	  b parent class_ref 525954 // SnmpUserDataFactory
      end

      classrelation 1043586 // adaptor (<unidirectional association>)
	relation 1043586 --->
	  a role_name "adaptor" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043586 // adaptor (<unidirectional association>)
	  b parent class_ref 526722 // SnmpAdaptorServer
      end

      operation 3225218 "SnmpRequestHandler"
	public explicit_return_type ""
	nparams 11
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	  param in name "id" explicit_type "int"
	  param inout name "s" type class_ref 527234 // DatagramSocket
	  param inout name "p" type class_ref 527490 // DatagramPacket
	  param inout name "tree" type class_ref 527618 // SnmpMibTree
	  param inout name "m" type class_ref 141442 // Vector
	  param inout name "a" type class_ref 513026 // InetAddressAcl
	  param inout name "factory" type class_ref 518402 // SnmpPduFactory
	  param inout name "dataFactory" type class_ref 525954 // SnmpUserDataFactory
	  param inout name "f" type class_ref 485122 // MBeanServer
	  param inout name "n" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<SnmpMibAgent> ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Full constructor
"
      end

      operation 3225346 "doRun"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Treat the request available in 'packet' and send the result
back to the client.
Note: we overwrite 'packet' with the response bytes.
"
      end

      operation 3225474 "makeResponsePacket"
	private return_type class_ref 527490 // DatagramPacket
	nparams 1
	  param inout name "reqPacket" type class_ref 527490 // DatagramPacket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Here we make a response packet from a request packet.
We return null if there no response packet to sent.
"
      end

      operation 3225602 "makeResponseMessage"
	private return_type class_ref 516226 // SnmpMessage
	nparams 1
	  param inout name "reqMsg" type class_ref 516226 // SnmpMessage
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Here we make a response message from a request message.
We return null if there is no message to reply.
"
      end

      operation 3225730 "makeResponsePdu"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 2
	  param inout name "reqPdu" type class_ref 518146 // SnmpPduPacket
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Here we make a response pdu from a request pdu.
We return null if there is no pdu to reply.
"
      end

      operation 3225858 "makeErrorVarbindPdu"
	package return_type class_ref 518146 // SnmpPduPacket
	nparams 2
	  param inout name "req" type class_ref 518146 // SnmpPduPacket
	  param in name "statusTag" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generates a response packet, filling the values in the
 varbindlist with one of endOfMibView, noSuchObject, noSuchInstance
 according to the value of <code>status</code>

 @param statusTag should be one of:
        <li>SnmpDataTypeEnums.errEndOfMibViewTag</li>
        <li>SnmpDataTypeEnums.errNoSuchObjectTag</li>
        <li>SnmpDataTypeEnums.errNoSuchInstanceTag</li>
"
      end

      operation 3225986 "makeNoMibErrorPdu"
	package return_type class_ref 518146 // SnmpPduPacket
	nparams 2
	  param inout name "req" type class_ref 518658 // SnmpPduRequest
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generates an appropriate response when no mib is registered in
 the adaptor.

 <li>If the version is V1:</li>
 <ul><li>Generates a NoSuchName error V1 response PDU</li></ul>
 <li>If the version is V2:</li>
 <ul><li>If the request is a GET, fills the varbind list with
         NoSuchObject's</li>
     <li>If the request is a GET-NEXT/GET-BULK, fills the varbind
         list with EndOfMibView's</li>
     <li>If the request is a SET, generates a NoAccess error V2
          response PDU</li>
 </ul>

"
      end

      operation 3226114 "makeGetSetResponsePdu"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 2
	  param inout name "req" type class_ref 518658 // SnmpPduRequest
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Here we make the response pdu from a get/set request pdu.
At this level, the result is never null.
"
      end

      operation 3226242 "executeSubRequest"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 2
	  param inout name "req" type class_ref 518146 // SnmpPduPacket
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method runs all the sub-requests associated to the current
instance of SnmpRequestHandler.
"
      end

      operation 3226370 "turboProcessingGetSet"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 2
	  param inout name "req" type class_ref 518658 // SnmpPduRequest
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Optimize when there is only one sub request
"
      end

      operation 3226498 "makeGetBulkResponsePdu"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 2
	  param inout name "req" type class_ref 518018 // SnmpPduBulk
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Here we make the response pdu for a bulk request.
At this level, the result is never null.
"
      end

      operation 3226626 "checkPduType"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the type of the pdu: only the get/set/bulk request
are accepted.
"
      end

      operation 3226754 "checkAcl"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 1
	  param inout name "pdu" type class_ref 518146 // SnmpPduPacket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the specified pdu is conform to the ACL.
This method returns null if the pdu is ok. If not, it returns
the response pdu to be replied.
"
      end

      operation 3226882 "newValidResponsePdu"
	private return_type class_ref 518658 // SnmpPduRequest
	nparams 2
	  param inout name "reqPdu" type class_ref 518146 // SnmpPduPacket
	  param inout name "varBindList" type class_ref 516738 // SnmpVarBind
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a response pdu with the specified error status and index.
NOTE: the response pdu share its varBindList with the request pdu.
"
      end

      operation 3227010 "newErrorResponsePdu"
	private return_type class_ref 518658 // SnmpPduRequest
	nparams 3
	  param inout name "req" type class_ref 518146 // SnmpPduPacket
	  param in name "s" explicit_type "int"
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a response pdu with the specified error status and index.
NOTE: the response pdu share its varBindList with the request pdu.
"
      end

      operation 3227138 "newTooBigMessage"
	private return_type class_ref 516226 // SnmpMessage
	nparams 1
	  param inout name "reqMsg" type class_ref 516226 // SnmpMessage
	nexceptions 1
	  exception class_ref 516610 // SnmpTooBigException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3227266 "newTooBigPdu"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 1
	  param inout name "req" type class_ref 518146 // SnmpPduPacket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3227394 "reduceResponsePdu"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 3
	  param inout name "req" type class_ref 518146 // SnmpPduPacket
	  param inout name "resp" type class_ref 518146 // SnmpPduPacket
	  param in name "acceptedVbCount" explicit_type "int"
	nexceptions 1
	  exception class_ref 516610 // SnmpTooBigException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3227522 "splitRequest"
	private explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 518658 // SnmpPduRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method takes the incoming requests and split it into subrequests.
"
      end

      operation 3227650 "splitBulkRequest"
	private explicit_return_type "void"
	nparams 4
	  param inout name "req" type class_ref 518018 // SnmpPduBulk
	  param in name "nonRepeaters" explicit_type "int"
	  param in name "maxRepetitions" explicit_type "int"
	  param in name "R" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method takes the incoming get bulk requests and split it into
subrequests.
"
      end

      operation 3227778 "mergeResponses"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 1
	  param inout name "req" type class_ref 518658 // SnmpPduRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3227906 "mergeNextResponses"
	private return_type class_ref 518146 // SnmpPduPacket
	nparams 1
	  param inout name "req" type class_ref 518658 // SnmpPduRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3228034 "mergeBulkResponses"
	private return_type class_ref 516738 // SnmpVarBind
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3228162 "makeDebugTag"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3228290 "createThread"
	package return_type class_ref 128642 // Thread
	nparams 1
	  param inout name "r" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1043714 // InterruptSysCallMsg (<unidirectional association>)
	relation 1043714 --->
	  a role_name "InterruptSysCallMsg" init_value "
        \"Interrupted system call\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043714 // InterruptSysCallMsg (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 528642 "SnmpResponseHandler"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to handle received inform request responses.
This classes parses the SNMP inform response packet to obtain the corresponding inform request.
"
      classrelation 1043842 // adaptor (<unidirectional association>)
	relation 1043842 --->
	  a role_name "adaptor" init_value " null" package
	    comment " VARIABLES
----------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043842 // adaptor (<unidirectional association>)
	  b parent class_ref 526722 // SnmpAdaptorServer
      end

      classrelation 1043970 // snmpq (<unidirectional association>)
	relation 1043970 --->
	  a role_name "snmpq" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1043970 // snmpq (<unidirectional association>)
	  b parent class_ref 528130 // SnmpQManager
      end

      operation 3228418 "SnmpResponseHandler"
	public explicit_return_type ""
	nparams 2
	  param inout name "adp" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "s" type class_ref 528130 // SnmpQManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CONSTRUCTORS
-------------"
      end

      operation 3228546 "processDatagram"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dgrm" type class_ref 527490 // DatagramPacket
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PUBLIC METHODS
---------------"
      end
    end

    class 528770 "SnmpSendServer"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " import debug stuff


This class starts a thread which picks up a session from the queue
and prepares the inform request protocol data unit (PDU) packet and sends
it to the manager. The request is then added to the wait queue and
marked as one that is waiting for a response.
"
      classrelation 1044098 // <generalisation>
	relation 1044098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1044098 // <generalisation>
	  b parent class_ref 128642 // Thread
      end

      attribute 679298 "intervalRange"
	private explicit_type "int"
	init_value " 5 * 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " VARIABLES
----------
"
      end

      classrelation 1044226 // readyPool (<unidirectional association>)
	relation 1044226 --->
	  a role_name "readyPool" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpInformRequest> ${name}${value};
"
	    classrelation_ref 1044226 // readyPool (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1044354 // snmpq (<unidirectional association>)
	relation 1044354 --->
	  a role_name "snmpq" init_value " null " package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1044354 // snmpq (<unidirectional association>)
	  b parent class_ref 528130 // SnmpQManager
      end

      attribute 679426 "isBeingDestroyed"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This boolean is used to stop handling requests while the corresponding SnmpQManager
 is being destroyed.

"
      end

      operation 3228674 "SnmpSendServer"
	public explicit_return_type ""
	nparams 2
	  param inout name "grp" type class_ref 128898 // ThreadGroup
	  param inout name "q" type class_ref 528130 // SnmpQManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CONSTRUCTORS
-------------"
      end

      operation 3228802 "stopSendServer"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3228930 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3229058 "prepareAndSendRequest"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3229186 "fireRequest"
	private explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 527106 // SnmpInformRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will fire the specified request.
"
      end

      operation 3229314 "fireRequestList"
	private explicit_return_type "void"
	nparams 1
	  param inout name "reqList" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<SnmpInformRequest> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3229442 "reqListToString"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "vec" type class_ref 141442 // Vector
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<SnmpInformRequest> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 528898 "SnmpSocket"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " SNMP Runtime imports


This class creates an SNMP Datagram Socket. This class has methods helpful
to send SNMP inform request packets to an arbitrary port of a specified device.
It also runs a thread that is devoted to receiving SNMP inform response on the socket.
<BR>
A socket imposes an upper limit on size of inform response packet. Any
packet which exceeds this limit is truncated. By default, this
limit is {@link SnmpAdaptorServer#bufferSize}.
"
      classrelation 1045634 // <realization>
	relation 1045634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1045634 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      classrelation 1045762 // _socket (<unidirectional association>)
	relation 1045762 --->
	  a role_name "_socket" init_value " null" private
	    comment " VARIABLES
----------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1045762 // _socket (<unidirectional association>)
	  b parent class_ref 527234 // DatagramSocket
      end

      classrelation 1045890 // _dgramHdlr (<unidirectional association>)
	relation 1045890 --->
	  a role_name "_dgramHdlr" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1045890 // _dgramHdlr (<unidirectional association>)
	  b parent class_ref 528642 // SnmpResponseHandler
      end

      classrelation 1046018 // _sockThread (<unidirectional association>)
	relation 1046018 --->
	  a role_name "_sockThread" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1046018 // _sockThread (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      attribute 679682 "_buffer"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 679810 "isClosing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 679938 "_socketPort"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 680066 "responseBufSize"
	package explicit_type "int"
	init_value " 1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3232514 "SnmpSocket"
	public explicit_return_type ""
	nparams 3
	  param inout name "rspHdlr" type class_ref 528642 // SnmpResponseHandler
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param in name "bufferSize" explicit_type "int"
	nexceptions 1
	  exception class_ref 248066 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CONSTRUCTORS
-------------

Creates a new <CODE>SnmpSocket</CODE> object.
@param rspHdlr A Datagram handler.
@param bufferSize The SNMP adaptor buffer size.
@exception SocketException A socket could not be created.
"
      end

      operation 3232642 "sendPacket"
	public explicit_return_type "void"
	nparams 4
	  param inout name "buff" explicit_type "byte"
	multiplicity "[]"
	  param in name "length" explicit_type "int"
	  param inout name "addr" type class_ref 513154 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PUBLIC METHODS
---------------

Sends a datagram packet to a specified device at specified port.
@param buff The packet data.
@param length The packet length.
@param addr The destination address.
@param port The destination port number.
@exception IOException Signals that an I/O exception of some sort has occurred.
"
      end

      operation 3232770 "sendPacket"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dgrmpkt" type class_ref 527490 // DatagramPacket
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a datagram packet to a specified device at specified port.
@param dgrmpkt The datagram packet.
@exception IOException Signals that an I/O exception of some sort has occurred.
"
      end

      operation 3232898 "isValid"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the socket is initialised correctly and if it is still active.
@return <CODE>true</CODE> if the socket is initialised correctly and if it is still active,
<CODE>false</CODE> otherwise.
"
      end

      operation 3233026 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the socket and its associated resources.
"
      end

      operation 3233154 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Dispatcher method for this socket thread. This is the dispatcher method
which goes in an endless-loop and waits for receiving datagram packets on the socket.
"
      end

      operation 3233282 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Finalizer of the <CODE>SnmpSocket</CODE> objects.
This method is called by the garbage collector on an object
when garbage collection determines that there are no more references to the object.
<P>Closes the datagram socket and stops the socket thread associated to this SNMP socket.
"
      end

      operation 3233410 "handleJavaError"
	private explicit_return_type "void"
	nparams 1
	  param inout name "thr" type class_ref 129922 // Throwable
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PRIVATE METHODS
----------------

Keep this locked so that send can't happen.
"
      end

      operation 3233538 "handleDatagram"
	private explicit_return_type "void"
	nparams 1
	  param inout name "dgrmpkt" type class_ref 527490 // DatagramPacket
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 529026 "SnmpSubBulkRequestHandler"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 1047426 // <generalisation>
	relation 1047426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1047426 // <generalisation>
	  b parent class_ref 529154 // SnmpSubRequestHandler
      end

      classrelation 1047554 // server (<unidirectional association>)
	relation 1047554 --->
	  a role_name "server" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1047554 // server (<unidirectional association>)
	  b parent class_ref 526722 // SnmpAdaptorServer
      end

      operation 3235970 "SnmpSubBulkRequestHandler"
	protected explicit_return_type ""
	nparams 8
	  param inout name "engine" type class_ref 514818 // SnmpEngine
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "incRequest" type class_ref 529282 // SnmpIncomingRequest
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	  param in name "R" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The constructor initialize the subrequest with the whole varbind list contained
in the original request.
"
      end

      operation 3236098 "SnmpSubBulkRequestHandler"
	protected explicit_return_type ""
	nparams 6
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	  param in name "R" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The constructor initialize the subrequest with the whole varbind list contained
in the original request.
"
      end

      operation 3236226 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3236354 "init"
	private explicit_return_type "void"
	nparams 5
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "req" type class_ref 513538 // SnmpPdu
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	  param in name "R" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3236482 "findVarBind"
	private return_type class_ref 516738 // SnmpVarBind
	nparams 2
	  param inout name "element" type class_ref 516738 // SnmpVarBind
	  param inout name "result" type class_ref 516738 // SnmpVarBind
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method updates find out which element to use at update time. Handle oid overlapping as well
"
      end

      operation 3236610 "updateResult"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 516738 // SnmpVarBind
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "The method updates a given var bind list with the result of a
previsouly invoked operation.
Prior to calling the method, one must make sure that the operation was
successful. As such the method getErrorIndex or getErrorStatus should be
called.
"
      end

      attribute 680834 "nonRepeat"
	protected explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " PROTECTED VARIABLES
------------------

Specific to the sub request

"
      end

      attribute 680962 "maxRepeat"
	protected explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 681090 "globalR"
	protected explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "R as defined in RCF 1902 for the global request the sub-request is associated to.

"
      end

      attribute 681218 "size"
	protected explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 529154 "SnmpSubRequestHandler"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 1046146 // <realization>
	relation 1046146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1046146 // <realization>
	  b parent class_ref 514690 // SnmpDefinitions
      end

      classrelation 1046274 // <realization>
	relation 1046274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1046274 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      classrelation 1046402 // incRequest (<unidirectional association>)
	relation 1046402 --->
	  a role_name "incRequest" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1046402 // incRequest (<unidirectional association>)
	  b parent class_ref 529282 // SnmpIncomingRequest
      end

      classrelation 1046530 // engine (<unidirectional association>)
	relation 1046530 --->
	  a role_name "engine" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1046530 // engine (<unidirectional association>)
	  b parent class_ref 514818 // SnmpEngine
      end

      operation 3233666 "SnmpSubRequestHandler"
	protected explicit_return_type ""
	nparams 4
	  param inout name "engine" type class_ref 514818 // SnmpEngine
	  param inout name "incRequest" type class_ref 529282 // SnmpIncomingRequest
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "V3 enabled Adaptor. Each Oid is added using updateRequest method.
"
      end

      operation 3233794 "SnmpSubRequestHandler"
	protected explicit_return_type ""
	nparams 5
	  param inout name "engine" type class_ref 514818 // SnmpEngine
	  param inout name "incRequest" type class_ref 529282 // SnmpIncomingRequest
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	  param inout name "nouse" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "V3 enabled Adaptor.
"
      end

      operation 3233922 "SnmpSubRequestHandler"
	protected explicit_return_type ""
	nparams 2
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "SNMP V1/V2 . To be called with updateRequest.
"
      end

      operation 3234050 "SnmpSubRequestHandler"
	protected explicit_return_type ""
	nparams 3
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	  param inout name "nouse" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "SNMP V1/V2 The constructor initialize the subrequest with the whole varbind list contained
in the original request.
"
      end

      operation 3234178 "createMibRequest"
	package return_type class_ref 522114 // SnmpMibRequest
	nparams 3
	  param inout name "vblist" type class_ref 141442 // Vector
	  param in name "protocolVersion" explicit_type "int"
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<SnmpVarBind> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3234306 "setUserData"
	package explicit_return_type "void"
	nparams 1
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3234434 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3234562 "mapErrorStatusToV1"
	class_operation package explicit_return_type "int"
	nparams 2
	  param in name "errorStatus" explicit_type "int"
	  param in name "reqPduType" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------

 This function does a best-effort to map global error status
 to SNMP v1 valid global error status.

 An SnmpStatusException can contain either:
 <li> v2 local error codes (that should be stored in the varbind)</li>
 <li> v2 global error codes </li>
 <li> v1 global error codes </li>

 v2 local error codes (noSuchInstance, noSuchObject) are
 transformed in a global v1 snmpRspNoSuchName error.

 v2 global error codes are transformed in the following way:

    If the request was a GET/GETNEXT then either
         snmpRspNoSuchName or snmpRspGenErr is returned.

    Otherwise:
      snmpRspNoAccess, snmpRspInconsistentName
               => snmpRspNoSuchName
      snmpRspAuthorizationError, snmpRspNotWritable, snmpRspNoCreation
               => snmpRspReadOnly  (snmpRspNoSuchName for GET/GETNEXT)
      snmpRspWrong*
               => snmpRspBadValue  (snmpRspNoSuchName for GET/GETNEXT)
      snmpRspResourceUnavailable, snmpRspRspCommitFailed,
      snmpRspUndoFailed
                  => snmpRspGenErr

 -------------------------------------------------------------
"
      end

      operation 3234690 "mapErrorStatusToV2"
	class_operation package explicit_return_type "int"
	nparams 2
	  param in name "errorStatus" explicit_type "int"
	  param in name "reqPduType" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------

 This function does a best-effort to map global error status
 to SNMP v2 valid global error status.

 An SnmpStatusException can contain either:
 <li> v2 local error codes (that should be stored in the varbind)</li>
 <li> v2 global error codes </li>
 <li> v1 global error codes </li>

 v2 local error codes (noSuchInstance, noSuchObject)
 should not raise this level: they should have been stored in the
 varbind earlier. If they, do there is nothing much we can do except
 to transform them into:
 <li> a global snmpRspGenErr (if the request is a GET/GETNEXT) </li>
 <li> a global snmpRspNoSuchName otherwise. </li>

 v2 global error codes are transformed in the following way:

    If the request was a GET/GETNEXT then snmpRspGenErr is returned.
    (snmpRspGenErr is the only global error that is expected to be
     raised by a GET/GETNEXT request).

    Otherwise the v2 code itself is returned

 v1 global error codes are transformed in the following way:

      snmpRspNoSuchName
               => snmpRspNoAccess  (snmpRspGenErr for GET/GETNEXT)
      snmpRspReadOnly
               => snmpRspNotWritable (snmpRspGenErr for GET/GETNEXT)
      snmpRspBadValue
               => snmpRspWrongValue  (snmpRspGenErr for GET/GETNEXT)

 -------------------------------------------------------------
"
      end

      operation 3234818 "mapErrorStatus"
	class_operation package explicit_return_type "int"
	nparams 3
	  param in name "errorStatus" explicit_type "int"
	  param in name "protocolVersion" explicit_type "int"
	  param in name "reqPduType" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3234946 "getErrorStatus"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method returns the error status of the operation.
The method takes into account the protocol version.
"
      end

      operation 3235074 "getErrorIndex"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method returns the error index as a position in the var bind list.
The value returned by the method corresponds to the index in the original
var bind list as received by the SNMP protocol adaptor.
"
      end

      operation 3235202 "updateRequest"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "var" type class_ref 516738 // SnmpVarBind
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method updates the varbind list of the subrequest.
"
      end

      operation 3235330 "updateResult"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 516738 // SnmpVarBind
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method updates a given var bind list with the result of a
previsouly invoked operation.
Prior to calling the method, one must make sure that the operation was
successful. As such the method getErrorIndex or getErrorStatus should be
called.
"
      end

      operation 3235458 "init"
	private explicit_return_type "void"
	nparams 2
	  param inout name "engine" type class_ref 514818 // SnmpEngine
	  param inout name "incRequest" type class_ref 529282 // SnmpIncomingRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 680194 "version"
	protected explicit_type "int"
	init_value " snmpVersionOne"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " PRIVATE VARIABLES
------------------

Store the protocol version to handle

"
      end

      attribute 680322 "type"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Store the operation type. Remember if the type is Walk, it means
that we have to invoke the check method ...

"
      end

      classrelation 1046658 // agent (<unidirectional association>)
	relation 1046658 --->
	  a role_name "agent" protected
	    comment "
Agent directly handled by the sub-request handler.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1046658 // agent (<unidirectional association>)
	  b parent class_ref 522498 // SnmpMibAgent
      end

      attribute 680450 "errorStatus"
	protected explicit_type "int"
	init_value " snmpRspNoError"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Error status.

"
      end

      attribute 680578 "errorIndex"
	protected explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Index of error.
A value of -1 means no error.

"
      end

      classrelation 1046786 // varBind (<unidirectional association>)
	relation 1046786 --->
	  a role_name "varBind" protected
	    comment "
The varbind list specific to the current sub request.
The vector must contain object of type SnmpVarBind.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpVarBind> ${name}${value};
"
	    classrelation_ref 1046786 // varBind (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 680706 "translation"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array giving the index translation between the content of
<VAR>varBind</VAR> and the varbind list as specified in the request.

"
      end

      classrelation 1046914 // data (<unidirectional association>)
	relation 1046914 --->
	  a role_name "data" protected
	    comment "
Contextual object allocated by the SnmpUserDataFactory.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1046914 // data (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1047042 // mibRequest (<unidirectional association>)
	relation 1047042 --->
	  a role_name "mibRequest" init_value " null" private
	    comment "
The SnmpMibRequest that will be passed to the agent.


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1047042 // mibRequest (<unidirectional association>)
	  b parent class_ref 522114 // SnmpMibRequest
      end

      classrelation 1047170 // reqPdu (<unidirectional association>)
	relation 1047170 --->
	  a role_name "reqPdu" init_value " null" private
	    comment "
The SnmpPdu that will be passed to the request.


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1047170 // reqPdu (<unidirectional association>)
	  b parent class_ref 513538 // SnmpPdu
      end

      class 529410 "NonSyncVector"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 141442 // Vector
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " we never serialize this"
	classrelation 1047298 // <realization>
	  relation 1047298 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 1047298 // <realization>
	    b parent class_ref 141442 // Vector
	end

	operation 3235586 "NonSyncVector"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3235714 "addNonSyncElement"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "obj" explicit_type "E"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3235842 "elementAtNonSync"
	  cpp_inline package explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end
    end

    class 529538 "SnmpSubNextRequestHandler"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " end of NPCTE fix for bugId 4492741 "
      classrelation 1047682 // <generalisation>
	relation 1047682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1047682 // <generalisation>
	  b parent class_ref 529154 // SnmpSubRequestHandler
      end

      classrelation 1047810 // server (<unidirectional association>)
	relation 1047810 --->
	  a role_name "server" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1047810 // server (<unidirectional association>)
	  b parent class_ref 526722 // SnmpAdaptorServer
      end

      operation 3236738 "SnmpSubNextRequestHandler"
	protected explicit_return_type ""
	nparams 3
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The constructor initialize the subrequest with the whole varbind
list contained in the original request.
"
      end

      operation 3236866 "SnmpSubNextRequestHandler"
	protected explicit_return_type ""
	nparams 5
	  param inout name "engine" type class_ref 514818 // SnmpEngine
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	  param inout name "incRequest" type class_ref 529282 // SnmpIncomingRequest
	  param inout name "agent" type class_ref 522498 // SnmpMibAgent
	  param inout name "req" type class_ref 513538 // SnmpPdu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3236994 "init"
	private explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 513538 // SnmpPdu
	  param inout name "server" type class_ref 526722 // SnmpAdaptorServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3237122 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3237250 "updateRequest"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "var" type class_ref 516738 // SnmpVarBind
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method updates the varbind list of the subrequest.
"
      end

      operation 3237378 "updateResult"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 516738 // SnmpVarBind
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method updates a given var bind list with the result of a
previsouly invoked operation.
Prior to calling the method, one must make sure that the operation was
successful. As such the method getErrorIndex or getErrorStatus should be
called.
"
      end
    end

    class 529666 "SnmpTimerServer"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class retries any timed out inform requests. This class is for internal use.
"
      classrelation 1047938 // <generalisation>
	relation 1047938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1047938 // <generalisation>
	  b parent class_ref 128642 // Thread
      end

      classrelation 1048066 // req (<unidirectional association>)
	relation 1048066 --->
	  a role_name "req" init_value " null " private
	    comment " VARIABLES
----------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1048066 // req (<unidirectional association>)
	  b parent class_ref 527106 // SnmpInformRequest
      end

      classrelation 1048194 // snmpq (<unidirectional association>)
	relation 1048194 --->
	  a role_name "snmpq" init_value " null " package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1048194 // snmpq (<unidirectional association>)
	  b parent class_ref 528130 // SnmpQManager
      end

      attribute 681346 "isBeingDestroyed"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This boolean is used to stop handling requests while the corresponding SnmpQManager
 is being destroyed.

"
      end

      operation 3237506 "SnmpTimerServer"
	public explicit_return_type ""
	nparams 2
	  param inout name "grp" type class_ref 128898 // ThreadGroup
	  param inout name "q" type class_ref 528130 // SnmpQManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CONSTRUCTORS
-------------"
      end

      operation 3237634 "stopTimerServer"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3237762 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 147970 "daemon"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 347394 "ClientHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.logging.Level;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 526082 // ClientHandler
      end
      comment "Copyright (c) 1999, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 347650 "CommunicationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
${definition}"
      associated_elems
	class_ref 526338 // CommunicationException
      end
      comment "Copyright (c) 1999, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 347778 "CommunicatorServerMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 526594 // CommunicatorServerMBean
      end
      comment "Copyright (c) 1999, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 347906 "CommunicatorServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ObjectInputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.util.logging.Level;
import java.util.Vector;
import java.util.NoSuchElementException;
import javax.management.MBeanServer;
import javax.management.MBeanRegistration;
import javax.management.ObjectName;
import javax.management.NotificationListener;
import javax.management.NotificationFilter;
import javax.management.NotificationBroadcaster;
import javax.management.NotificationBroadcasterSupport;
import javax.management.MBeanNotificationInfo;
import javax.management.AttributeChangeNotification;
import javax.management.ListenerNotFoundException;
import javax.management.remote.MBeanServerForwarder;
${definition}"
      associated_elems
	class_ref 526210 // CommunicatorServer
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 348034 "SnmpAdaptorServerMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.io.IOException;
import java.net.InetAddress;
import com.sun.jmx.snmp.SnmpPduFactory;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpVarBindList;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpTimeticks;
import com.sun.jmx.snmp.SnmpIpAddress;
import com.sun.jmx.snmp.SnmpPduPacket;
import com.sun.jmx.snmp.InetAddressAcl;
import com.sun.jmx.snmp.SnmpPeer;
import com.sun.jmx.snmp.agent.SnmpMibAgent;
import com.sun.jmx.snmp.agent.SnmpMibHandler;
import com.sun.jmx.snmp.agent.SnmpUserDataFactory;
${definition}"
      associated_elems
	class_ref 526850 // SnmpAdaptorServerMBean
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 348162 "SnmpAdaptorServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Enumeration;
import java.util.logging.Level;
import java.net.DatagramSocket;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import javax.management.MBeanServer;
import javax.management.MBeanRegistration;
import javax.management.ObjectName;
import com.sun.jmx.snmp.SnmpIpAddress;
import com.sun.jmx.snmp.SnmpMessage;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpPduFactory;
import com.sun.jmx.snmp.SnmpPduPacket;
import com.sun.jmx.snmp.SnmpPduRequest;
import com.sun.jmx.snmp.SnmpPduTrap;
import com.sun.jmx.snmp.SnmpTimeticks;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpVarBindList;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpTooBigException;
import com.sun.jmx.snmp.InetAddressAcl;
import com.sun.jmx.snmp.SnmpPeer;
import com.sun.jmx.snmp.SnmpParameters;
import com.sun.jmx.snmp.SnmpPduFactoryBER;
import com.sun.jmx.snmp.agent.SnmpMibAgent;
import com.sun.jmx.snmp.agent.SnmpMibHandler;
import com.sun.jmx.snmp.agent.SnmpUserDataFactory;
import com.sun.jmx.snmp.agent.SnmpErrorHandlerAgent;
import com.sun.jmx.snmp.IPAcl.SnmpAcl;
import com.sun.jmx.snmp.tasks.ThreadService;
${definition}"
      associated_elems
	class_ref 526722 // SnmpAdaptorServer
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 348290 "SnmpInformHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpVarBindList;
${definition}"
      associated_elems
	class_ref 526978 // SnmpInformHandler
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 348418 "SnmpInformRequest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.util.Date;
import java.util.logging.Level;
import com.sun.jmx.snmp.SnmpMessage;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpPduFactory;
import com.sun.jmx.snmp.SnmpPduPacket;
import com.sun.jmx.snmp.SnmpPduRequest;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpTooBigException;
import com.sun.jmx.snmp.SnmpVarBindList;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpPduRequestType;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 527106 // SnmpInformRequest
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end

    artifact 348546 "SnmpMibTree"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Enumeration;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.agent.SnmpMibAgent;
${definition}"
      associated_elems
	class_ref 527618 // SnmpMibTree
      end
      comment "Copyright (c) 1998, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 348674 "SnmpQManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.logging.Level;
import java.util.Vector;
import java.io.Serializable;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 528130 // SnmpQManager
	class_ref 528258 // SendQ
	class_ref 528386 // WaitQ
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end

    artifact 348802 "SnmpRequestCounter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 527874 // SnmpRequestCounter
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end

    artifact 348930 "SnmpRequestHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.logging.Level;
import java.io.InterruptedIOException;
import java.net.DatagramSocket;
import java.net.DatagramPacket;
import java.net.SocketException;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import com.sun.jmx.snmp.SnmpMessage;
import com.sun.jmx.snmp.SnmpPduFactory;
import com.sun.jmx.snmp.SnmpPduBulk;
import com.sun.jmx.snmp.SnmpPduPacket;
import com.sun.jmx.snmp.SnmpPduRequest;
import com.sun.jmx.snmp.SnmpPduTrap;
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpVarBindList;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpTooBigException;
import com.sun.jmx.snmp.SnmpDataTypeEnums;
import com.sun.jmx.snmp.agent.SnmpMibAgent;
import com.sun.jmx.snmp.agent.SnmpUserDataFactory;
import com.sun.jmx.snmp.InetAddressAcl;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 528514 // SnmpRequestHandler
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 349058 "SnmpResponseHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.DatagramPacket;
import java.util.logging.Level;
import com.sun.jmx.snmp.SnmpMessage;
import com.sun.jmx.snmp.SnmpPduFactory;
import com.sun.jmx.snmp.SnmpPduPacket;
import com.sun.jmx.snmp.SnmpPduRequest;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 528642 // SnmpResponseHandler
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end

    artifact 349186 "SnmpSendServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.Vector;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 528770 // SnmpSendServer
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end

    artifact 349314 "SnmpSession"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.Stack;
import java.net.InetAddress;
import java.net.SocketException;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpVarBindList;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 527362 // SnmpSession
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end

    artifact 349442 "SnmpSocket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.SocketException;
import java.io.IOException;
import java.util.logging.Level;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 528898 // SnmpSocket
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end

    artifact 349570 "SnmpSubRequestHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.logging.Level;
import java.util.Vector;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpEngine;
import com.sun.jmx.snmp.agent.SnmpMibAgent;
import com.sun.jmx.snmp.agent.SnmpMibRequest;
import com.sun.jmx.snmp.ThreadContext;
import com.sun.jmx.snmp.internal.SnmpIncomingRequest;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 529154 // SnmpSubRequestHandler
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 349698 "SnmpSubBulkRequestHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.logging.Level;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpEngine;
import com.sun.jmx.snmp.agent.SnmpMibAgent;
import com.sun.jmx.snmp.internal.SnmpIncomingRequest;
import com.sun.jmx.snmp.ThreadContext;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 529026 // SnmpSubBulkRequestHandler
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 349826 "SnmpSubNextRequestHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.logging.Level;
import java.util.Vector;
import com.sun.jmx.snmp.SnmpEngine;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpVarBindList;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.agent.SnmpMibAgent;
import com.sun.jmx.snmp.agent.SnmpMibRequest;
import com.sun.jmx.snmp.daemon.SnmpAdaptorServer;
import com.sun.jmx.snmp.internal.SnmpIncomingRequest;
import com.sun.jmx.snmp.ThreadContext;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 529538 // SnmpSubNextRequestHandler
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 349954 "SnmpTimerServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.logging.Level;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 529666 // SnmpTimerServer
      end
      comment "
Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 Copyright (c) 1995-96 by Cisco Systems, Inc."
    end
  end
end
