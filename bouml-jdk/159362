format 222
"agent" // jdk1.8::com::sun::jmx::snmp::agent
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/jmx/snmp/agent/"
  java_package "com.sun.jmx.snmp.agent"
  classview 154114 "agent"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 521602 "AcmChecker"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Oid Checker makes use of ACM to check each OID during the getnext process.
"
      classrelation 1022082 // model (<unidirectional association>)
	relation 1022082 --->
	  a role_name "model" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1022082 // model (<unidirectional association>)
	  b parent class_ref 521730 // SnmpAccessControlModel
      end

      classrelation 1022210 // principal (<unidirectional association>)
	relation 1022210 --->
	  a role_name "principal" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1022210 // principal (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 663170 "securityLevel"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 663298 "version"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 663426 "pduType"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 663554 "securityModel"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 663682 "contextName"
	package explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1022338 // engine (<unidirectional association>)
	relation 1022338 --->
	  a role_name "engine" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1022338 // engine (<unidirectional association>)
	  b parent class_ref 521858 // SnmpEngineImpl
      end

      classrelation 1022466 // l (<unidirectional association>)
	relation 1022466 --->
	  a role_name "l" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1022466 // l (<unidirectional association>)
	  b parent class_ref 521986 // LongList
      end

      operation 3130114 "AcmChecker"
	package explicit_return_type ""
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3130242 "add"
	package explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "arc" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3130370 "remove"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3130498 "add"
	package explicit_return_type "void"
	nparams 4
	  param in name "at" explicit_type "int"
	  param in name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3130626 "remove"
	package explicit_return_type "void"
	nparams 2
	  param in name "from" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3130754 "checkCurrentOid"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 521986 "LongList"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This list is used in order to construct the OID during the getnext.
The constructed oid is checked by the checker AcmChecker.
"
      attribute 663810 "DEFAULT_CAPACITY"
	class_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 663938 "DEFAULT_INCREMENT"
	class_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 664066 "DELTA"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 664194 "size"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 664322 "list"
	public explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The list content. Any access to this variable must be protected
by a synchronized block on the LongList object.
Only read-only action should be performed on this object.

"
      end

      operation 3130882 "LongList"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3131010 "LongList"
	package explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3131138 "LongList"
	package explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "delta" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3131266 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same behaviour than size() in {@link java.util.List}.
"
      end

      operation 3131394 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "o" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same behaviour than add(long o) in {@link java.util.List}.
Any access to this method should be protected in a synchronized
block on the LongList object.
"
      end

      operation 3131522 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "o" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same behaviour than add(int index, long o) in
{@link java.util.List}.
Any access to this method should be protected in a synchronized
block on the LongList object.
"
      end

      operation 3131650 "add"
	public explicit_return_type "void"
	nparams 4
	  param in name "at" explicit_type "int"
	  param in name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "from" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds <var>count</var> elements to the list.
@param at index at which the elements must be inserted. The
       first element will be inserted at this index.
@param src  An array containing the elements we want to insert.
@param from Index of the first element from <var>src</var> that
       must be inserted.
@param count number of elements to insert.
Any access to this method should be protected in a synchronized
block on the LongList object.
"
      end

      operation 3131778 "remove"
	public explicit_return_type "long"
	nparams 2
	  param in name "from" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Any access to this method should be protected in a synchronized
block on the LongList object.
"
      end

      operation 3131906 "remove"
	public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same behaviour than remove(int index) in {@link java.util.List}.
Any access to this method should be protected in a synchronized
block on the LongList object.
"
      end

      operation 3132034 "toArray"
	public explicit_return_type "long"
	nparams 1
	  param inout name "a" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same behaviour than the toArray(long[] a) method in
{@link java.util.List}.
Any access to this method should be protected in a synchronized
block on the LongList object.
"
      end

      operation 3132162 "toArray"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same behaviour than the toArray() method in
{@link java.util.List}.
Any access to this method should be protected in a synchronized
block on the LongList object.
"
      end

      operation 3132290 "resize"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resize the list. Increase its capacity by DELTA elements.
Any call to this method must be protected by a synchronized
block on this LongList.
"
      end

      operation 3132418 "ensure"
	private explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resize the list. Insure that the new length will be at
least equal to <var>length</var>.
@param length new minimal length requested.
Any call to this method must be protected by a synchronized
block on this LongList.
"
      end

      operation 3132546 "allocate"
	private explicit_return_type "long"
	nparams 1
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocate a new array of object of specified length.
"
      end
    end

    class 522114 "SnmpMibRequest"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface models the part of a SNMP request that involves
a specific MIB. One object implementing this interface will be created
for every MIB involved in a SNMP request, and that object will be passed
to the SnmpMibAgent in charge of handling that MIB.

Objects implementing this interface will be allocated by the SNMP engine.
You will never need to implement this interface. You will only use it.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      operation 3152130 "getElements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of varbind to be handled by the SNMP mib node.

@return The element of the enumeration are instances of
        {@link com.sun.jmx.snmp.SnmpVarBind}
"
      end

      operation 3152258 "getSubList"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vector of varbind to be handled by the SNMP mib node.
The caller shall not modify this vector.

@return The element of the vector are instances of
        {@link com.sun.jmx.snmp.SnmpVarBind}
"
      end

      operation 3152386 "getVersion"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SNMP protocol version of the original request. If SNMP V1 request are received, the version is upgraded to SNMP V2.

@return The SNMP protocol version of the original request.
"
      end

      operation 3152514 "getRequestPduVersion"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SNMP protocol version of the original request. No translation is done on the version. The actual received request SNMP version is returned.

@return The SNMP protocol version of the original request.

@since 1.5
"
      end

      operation 3152642 "getEngine"
	public return_type class_ref 514818 // SnmpEngine
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local engine. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return the local engine.

@since 1.5
"
      end

      operation 3152770 "getPrincipal"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the incoming request principal. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return The request principal.

@since 1.5
"
      end

      operation 3152898 "getSecurityLevel"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the incoming request security level. This level is defined in {@link com.sun.jmx.snmp.SnmpEngine SnmpEngine}. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise -1 is returned.
@return The security level.

@since 1.5
"
      end

      operation 3153026 "getSecurityModel"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the incoming request security model. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise -1 is returned.
@return The security model.

@since 1.5
"
      end

      operation 3153154 "getContextName"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the incoming request context name. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return The context name.

@since 1.5
"
      end

      operation 3153282 "getAccessContextName"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the incoming request context name used by Access Control Model in order to allow or deny the access to OIDs. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return The checked context name.

@since 1.5
"
      end

      operation 3153410 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a handle on a user allocated contextual object.
This contextual object is allocated through the SnmpUserDataFactory
on a per SNMP request basis, and is handed back to the user via
SnmpMibRequest (and derivative) objects. It is never accessed by
the system, but might be handed back in multiple threads. It is thus
the user responsibility to make sure he handles this object in a
thread safe manner.
"
      end

      operation 3153538 "getVarIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the varbind index that should be embedded in an
SnmpStatusException for this particular varbind.
This does not necessarily correspond to the \"real\"
index value that will be returned in the result PDU.

@param varbind The varbind for which the index value is
       querried. Note that this varbind <b>must</b> have
       been obtained from the enumeration returned by
       <CODE>getElements()</CODE>, or from the vector
       returned by <CODE>getSublist()</CODE>.

@return The varbind index that should be embedded in an
        SnmpStatusException for this particular varbind.
"
      end

      operation 3153666 "addVarBind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a varbind to this request sublist. This method is used for
internal purposes and you should never need to call it directly.

@param varbind The varbind to be added in the sublist.

"
      end

      operation 3153794 "getSize"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements (varbinds) in this request sublist.

@return The number of elements in the sublist.

"
      end

      operation 3153922 "getPdu"
	public return_type class_ref 513538 // SnmpPdu
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SNMP PDU attached to the request.
@return The SNMP PDU.

@since 1.5
"
      end
    end

    class 522242 "SnmpEntryOid"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class only adds a new constructor to SnmpOid...

"
      classrelation 1022594 // <generalisation>
	relation 1022594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1022594 // <generalisation>
	  b parent class_ref 514306 // SnmpOid
      end

      attribute 664450 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9212653887791059564L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3132674 "SnmpEntryOid"
	public explicit_return_type ""
	nparams 2
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <CODE>SnmpOid</CODE> from the specified
component array, starting at given position.

@param oid   The original OID array
@param start The position at which to begin.

"
      end
    end

    class 522370 "SnmpErrorHandlerAgent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A simple MIB agent that implements SNMP calls (get, set, getnext and getbulk) in a way that only errors or exceptions are returned. Every call done on this agent fails. Error handling is done according to the manager's SNMP protocol version.
<P>It is used by <CODE>SnmpAdaptorServer</CODE> for its default agent behavior. When a received Oid doesn't match, this agent is called to fill the result list with errors.</P>
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
@since 1.5

"
      classrelation 1023618 // <generalisation>
	relation 1023618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1023618 // <generalisation>
	  b parent class_ref 522498 // SnmpMibAgent
      end

      classrelation 1023746 // <realization>
	relation 1023746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1023746 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 664578 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7751082923508885650L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3139074 "SnmpErrorHandlerAgent"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3139202 "init"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Initializes the MIB (with no registration of the MBeans into the
MBean server). Does nothing.

@exception IllegalAccessException The MIB cannot be initialized.
"
      end

      operation 3139330 "preRegister"
	public return_type class_ref 485506 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 485122 // MBeanServer
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Initializes the MIB but each single MBean representing the MIB
is inserted into the MBean server.

@param server The MBean server to register the service with.
@param name The object name.

@return The passed name parameter.

@exception java.lang.Exception
"
      end

      operation 3139458 "getRootOid"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the root object identifier of the MIB.
<P>The root object identifier is the object identifier uniquely
identifying the MIB.

@return The returned oid is null.
"
      end

      operation 3139586 "get"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inRequest" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>get</CODE> operation. It will throw an exception for V1 requests or it will set exceptions within the list for V2 requests.

@param inRequest The SnmpMibRequest object holding the list of variable to be retrieved.

@exception SnmpStatusException An error occurred during the operation.
"
      end

      operation 3139714 "check"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inRequest" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Checks if a <CODE>set</CODE> operation can be performed.
If the operation can not be performed, the method should emit a
<CODE>SnmpStatusException</CODE>.

@param inRequest The SnmpMibRequest object holding the list of variables to
           be set. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException The <CODE>set</CODE> operation
   cannot be performed.
"
      end

      operation 3139842 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inRequest" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>set</CODE> operation. Should never be called (check previously called having failed).

@param inRequest The SnmpMibRequest object holding the list of variable to be set.

@exception SnmpStatusException An error occurred during the operation.
"
      end

      operation 3139970 "getNext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inRequest" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>getNext</CODE> operation. It will throw an exception for V1 requests or it will set exceptions within the list for V2 requests..

@param inRequest The SnmpMibRequest object holding the list of variables to be retrieved.

@exception SnmpStatusException An error occurred during the operation.
"
      end

      operation 3140098 "getBulk"
	public explicit_return_type "void"
	nparams 3
	  param inout name "inRequest" type class_ref 522114 // SnmpMibRequest
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>getBulk</CODE> operation. It will throw an exception if the request is a V1 one or it will set exceptions within the list for V2 ones.

@param inRequest The SnmpMibRequest object holding the list of variable to be retrieved.

@exception SnmpStatusException An error occurred during the operation.
"
      end
    end

    class 522498 "SnmpMibAgent"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Abstract class for representing an SNMP agent.

The class is used by the SNMP protocol adaptor as the entry point in
the SNMP agent to query.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1022722 // <realization>
	relation 1022722 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1022722 // <realization>
	  b parent class_ref 522626 // SnmpMibAgentMBean
      end

      classrelation 1022850 // <realization>
	relation 1022850 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1022850 // <realization>
	  b parent class_ref 488578 // MBeanRegistration
      end

      classrelation 1022978 // <realization>
	relation 1022978 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1022978 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 3135106 "SnmpMibAgent"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
"
      end

      operation 3135234 "init"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 321538 // IllegalAccessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------
 PUBLIC METHODS
----------------------------------------------------------------------

Initializes the MIB (with no registration of the MBeans into the
MBean server).

@exception IllegalAccessException The MIB can not be initialized.
"
      end

      operation 3135362 "preRegister"
	abstract public return_type class_ref 485506 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 485122 // MBeanServer
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Initializes the MIB but each single MBean representing the MIB
is inserted into the MBean server.

@param server The MBean server to register the service with.
@param name The object name.

@return The name of the SNMP MIB registered.

@exception java.lang.Exception
"
      end

      operation 3135490 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Not used in this context.
"
      end

      operation 3135618 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Not used in this context.
"
      end

      operation 3135746 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Not used in this context.
"
      end

      operation 3135874 "get"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>get</CODE> operation.
This method must update the SnmpVarBinds contained in the
<var>{@link SnmpMibRequest} req</var> parameter.

@param req The SnmpMibRequest object holding the list of variable to
           be retrieved. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException An error occurred during the operation.
"
      end

      operation 3136002 "getNext"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>getNext</CODE> operation.
This method must update the SnmpVarBinds contained in the
<var>{@link SnmpMibRequest} req</var> parameter.

@param req The SnmpMibRequest object holding the list of
           OIDs from which the next variables should be retrieved.
           This list is composed of <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException An error occurred during the operation.
"
      end

      operation 3136130 "getBulk"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>getBulk</CODE> operation.
This method must update the SnmpVarBinds contained in the
<var>{@link SnmpMibRequest} req</var> parameter.

@param req The SnmpMibRequest object holding the list of variable to
           be retrieved. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@param nonRepeat The number of variables, starting with the first
   variable in the variable-bindings, for which a single
   lexicographic successor is requested.

@param maxRepeat The number of lexicographic successors requested
   for each of the last R variables. R is the number of variables
   following the first <CODE>nonRepeat</CODE> variables for which
   multiple lexicographic successors are requested.

@exception SnmpStatusException An error occurred during the operation.
"
      end

      operation 3136258 "set"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>set</CODE> operation.
This method must update the SnmpVarBinds contained in the
<var>{@link SnmpMibRequest} req</var> parameter.
This method is called during the second phase of the SET two-phase
commit.

@param req The SnmpMibRequest object holding the list of variable to
           be set. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException An error occurred during the operation.
           Throwing an exception in this method will break the
           atomicity of the SET operation. Care must be taken so that
           the exception is thrown in the {@link #check(SnmpMibRequest)}
           method instead.
"
      end

      operation 3136386 "check"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Checks if a <CODE>set</CODE> operation can be performed.
If the operation can not be performed, the method should throw an
<CODE>SnmpStatusException</CODE>.
This method is called during the first phase of the SET two-phase
commit.

@param req The SnmpMibRequest object holding the list of variable to
           be set. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException The <CODE>set</CODE> operation
   cannot be performed.
"
      end

      operation 3136514 "getRootOid"
	abstract public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root object identifier of the MIB.
<P>The root object identifier is the object identifier uniquely
identifying the MIB.

@return The root object identifier.
"
      end

      operation 3136642 "getMBeanServer"
	public return_type class_ref 485122 // MBeanServer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------
 GETTERS AND SETTERS
 ---------------------------------------------------------------------

Gets the reference to the MBean server in which the SNMP MIB is
registered.

@return The MBean server or null if the MIB is not registered in any
    MBean server.
"
      end

      operation 3136770 "getSnmpAdaptor"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the reference to the SNMP protocol adaptor to which the MIB is
bound.

@return The SNMP MIB handler.
"
      end

      operation 3136898 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler.

@param stack The SNMP MIB handler.
"
      end

      operation 3137026 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler.
This method is to be called to set a specific agent to a specific OID. This can be useful when dealing with MIB overlapping.
Some OID can be implemented in more than one MIB. In this case, the OID nearest the agent will be used on SNMP operations.
@param stack The SNMP MIB handler.
@param oids The set of OIDs this agent implements.

@since 1.5
"
      end

      operation 3137154 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	  param inout name "contextName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and adds this new MIB in the SNMP MIB handler.
Adds a new contextualized MIB in the SNMP MIB handler.

@param stack The SNMP MIB handler.
@param contextName The MIB context name. If null is passed, will be registered in the default context.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3137282 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 3
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and adds this new MIB in the SNMP MIB handler.
Adds a new contextualized MIB in the SNMP MIB handler.

@param stack The SNMP MIB handler.
@param contextName The MIB context name. If null is passed, will be registered in the default context.
@param oids The set of OIDs this agent implements.
@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3137410 "getSnmpAdaptorName"
	public return_type class_ref 485506 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the object name of the SNMP protocol adaptor to which the MIB
is bound.

@return The name of the SNMP protocol adaptor.
"
      end

      operation 3137538 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.

@param name The name of the SNMP protocol adaptor.

@exception InstanceNotFoundException The SNMP protocol adaptor does
    not exist in the MBean server.

@exception ServiceNotFoundException This SNMP MIB is not registered
    in the MBean server or the requested service is not supported.
"
      end

      operation 3137666 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.
This method is to be called to set a specific agent to a specific OID. This can be useful when dealing with MIB overlapping.
Some OID can be implemented in more than one MIB. In this case, the OID nearer agent will be used on SNMP operations.
@param name The name of the SNMP protocol adaptor.
@param oids The set of OIDs this agent implements.
@exception InstanceNotFoundException The SNMP protocol adaptor does
    not exist in the MBean server.

@exception ServiceNotFoundException This SNMP MIB is not registered
    in the MBean server or the requested service is not supported.

@since 1.5
"
      end

      operation 3137794 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "contextName" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.

@param name The name of the SNMP protocol adaptor.
@param contextName The MIB context name. If null is passed, will be registered in the default context.
@exception InstanceNotFoundException The SNMP protocol adaptor does
    not exist in the MBean server.

@exception ServiceNotFoundException This SNMP MIB is not registered
    in the MBean server or the requested service is not supported.

@since 1.5
"
      end

      operation 3137922 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.

@param name The name of the SNMP protocol adaptor.
@param contextName The MIB context name. If null is passed, will be registered in the default context.
@param oids The set of OIDs this agent implements.
@exception InstanceNotFoundException The SNMP protocol adaptor does
    not exist in the MBean server.

@exception ServiceNotFoundException This SNMP MIB is not registered
    in the MBean server or the requested service is not supported.

@since 1.5
"
      end

      operation 3138050 "getBindingState"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates whether or not the MIB module is bound to a SNMP protocol
adaptor.
As a reminder, only bound MIBs can be accessed through SNMP protocol
adaptor.

@return <CODE>true</CODE> if the MIB module is bound,
        <CODE>false</CODE> otherwise.
"
      end

      operation 3138178 "getMibName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the MIB name.

@return The MIB name.
"
      end

      operation 3138306 "newMibRequest"
	class_operation public return_type class_ref 522114 // SnmpMibRequest
	nparams 4
	  param inout name "reqPdu" type class_ref 513538 // SnmpPdu
	  param inout name "vblist" type class_ref 141442 // Vector
	  param in name "version" explicit_type "int"
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<SnmpVarBind> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is a factory method for creating new SnmpMibRequest objects.
@param reqPdu The received PDU.
@param vblist   The vector of SnmpVarBind objects in which the
       MIB concerned by this request is involved.
@param version  The protocol version of the SNMP request.
@param userData User allocated contextual data.

@return A new SnmpMibRequest object.

@since 1.5
"
      end

      operation 3138434 "newMibRequest"
	class_operation public return_type class_ref 522114 // SnmpMibRequest
	nparams 10
	  param inout name "engine" type class_ref 514818 // SnmpEngine
	  param inout name "reqPdu" type class_ref 513538 // SnmpPdu
	  param inout name "vblist" type class_ref 141442 // Vector
	  param in name "version" explicit_type "int"
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "principal" type class_ref 128130 // String
	  param in name "securityLevel" explicit_type "int"
	  param in name "securityModel" explicit_type "int"
	  param inout name "contextName" explicit_type "byte"
	multiplicity "[]"
	  param inout name "accessContextName" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<SnmpVarBind> ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}, ${t9}[] ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is a factory method for creating new SnmpMibRequest objects.
@param engine The local engine.
@param reqPdu The received pdu.
@param vblist The vector of SnmpVarBind objects in which the
       MIB concerned by this request is involved.
@param version The protocol version of the SNMP request.
@param userData User allocated contextual data.

@return A new SnmpMibRequest object.

@since 1.5
"
      end

      operation 3138562 "getBulkWithGetNext"
	package explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------
 PACKAGE METHODS
 ---------------------------------------------------------------------

Processes a <CODE>getBulk</CODE> operation using call to
<CODE>getNext</CODE>.
The method implements the <CODE>getBulk</CODE> operation by calling
appropriately the <CODE>getNext</CODE> method.

@param req The SnmpMibRequest containing the variable list to be
       retrieved.

@param nonRepeat The number of variables, starting with the first
   variable in the variable-bindings, for which a single lexicographic
   successor is requested.

@param maxRepeat The number of lexicographic successors
   requested for each of the last R variables. R is the number of
   variables following the first nonRepeat variables for which
   multiple lexicographic successors are requested.

@return The variable list containing returned values.

@exception SnmpStatusException An error occurred during the operation.
"
      end

      operation 3138690 "splitFrom"
	private return_type class_ref 141442 // Vector
	nparams 2
	  param inout name "original" type class_ref 141442 // Vector
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${t0}<SnmpVarBind> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------
 PRIVATE METHODS
 ---------------------------------------------------------------------

This method creates a new Vector which does not contain the first
element up to the specified limit.

@param original The original vector.
@param limit The limit.
"
      end

      operation 3138818 "concatVector"
	private explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	  param inout name "source" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<SnmpVarBind> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3138946 "getSecurityModel"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "version" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1023106 // mibName (<unidirectional association>)
	relation 1023106 --->
	  a role_name "mibName" protected
	    comment " ---------------------------------------------------------------------
 PROTECTED VARIABLES
 ---------------------------------------------------------------------

The object name of the MIB.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1023106 // mibName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1023234 // server (<unidirectional association>)
	relation 1023234 --->
	  a role_name "server" protected
	    comment "
The reference to the MBean server.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1023234 // server (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 1023362 // adaptorName (<unidirectional association>)
	relation 1023362 --->
	  a role_name "adaptorName" private
	    comment " ---------------------------------------------------------------------
 PRIVATE VARIABLES
 ---------------------------------------------------------------------

The object name of the SNMP protocol adaptor.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1023362 // adaptorName (<unidirectional association>)
	  b parent class_ref 485506 // ObjectName
      end

      classrelation 1023490 // adaptor (<unidirectional association>)
	relation 1023490 --->
	  a role_name "adaptor" private
	    comment "
The reference to the SNMP stack.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1023490 // adaptor (<unidirectional association>)
	  b parent class_ref 522754 // SnmpMibHandler
      end
    end

    class 522626 "SnmpMibAgentMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Exposes the remote management interface of the <CODE>SnmpMibAgent</CODE> MBean.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      operation 3132802 "get"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PUBLIC METHODS
---------------

Processes a <CODE>get</CODE> operation.
This method must not be called from remote.

@param req The SnmpMibRequest object holding the list of variables to
           be retrieved. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException An error occurred during the operation.
@see SnmpMibAgent#get(SnmpMibRequest)
"
      end

      operation 3132930 "getNext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a <CODE>getNext</CODE> operation.
This method must not be called from remote.

@param req The SnmpMibRequest object holding the list of variables to
           be retrieved. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException An error occurred during the operation.
@see SnmpMibAgent#getNext(SnmpMibRequest)
"
      end

      operation 3133058 "getBulk"
	public explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a <CODE>getBulk</CODE> operation.
This method must not be called from remote.

@param req The SnmpMibRequest object holding the list of variables to
           be retrieved. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@param nonRepeat The number of variables, starting with the first
   variable in the variable-bindings, for which a single
   lexicographic successor is requested.

@param maxRepeat The number of lexicographic successors requested
   for each of the last R variables. R is the number of variables
   following the first <CODE>nonRepeat</CODE> variables for which
   multiple lexicographic successors are requested.

@exception SnmpStatusException An error occurred during the operation.
@see SnmpMibAgent#getBulk(SnmpMibRequest,int,int)
"
      end

      operation 3133186 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a <CODE>set</CODE> operation.
This method must not be called from remote.

@param req The SnmpMibRequest object holding the list of variables to
           be set. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException An error occurred during the operation.
@see SnmpMibAgent#set(SnmpMibRequest)
"
      end

      operation 3133314 "check"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if a <CODE>set</CODE> operation can be performed.
If the operation cannot be performed, the method should emit a
<CODE>SnmpStatusException</CODE>.

@param req The SnmpMibRequest object holding the list of variables to
           be set. This list is composed of
           <CODE>SnmpVarBind</CODE> objects.

@exception SnmpStatusException The <CODE>set</CODE> operation
   cannot be performed.
@see SnmpMibAgent#check(SnmpMibRequest)
"
      end

      operation 3133442 "getMBeanServer"
	public return_type class_ref 485122 // MBeanServer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Gets the reference to the MBean server in which the SNMP MIB is
registered.

@return The MBean server or null if the MIB is not registered in any
        MBean server.
"
      end

      operation 3133570 "getSnmpAdaptor"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the reference to the SNMP protocol adaptor to which the MIB is
bound.
<BR>This method is used for accessing the SNMP MIB handler property
of the SNMP MIB agent in case of a standalone agent.

@return The SNMP MIB handler.
"
      end

      operation 3133698 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the
MIB will be SNMP accessible and add this new MIB in the SNMP MIB
handler.
<BR>This method is used for setting the SNMP MIB handler property of
the SNMP MIB agent in case of a standalone agent.

@param stack The SNMP MIB handler.
"
      end

      operation 3133826 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler.
This method is to be called to set a specific agent to a specific OID.
This can be useful when dealing with MIB overlapping.
Some OID can be implemented in more than one MIB. In this case, the
OID nearer agent will be used on SNMP operations.
@param stack The SNMP MIB handler.
@param oids The set of OIDs this agent implements.

@since 1.5
"
      end

      operation 3133954 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	  param inout name "contextName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler.
Adds a new contextualized MIB in the SNMP MIB handler.

@param stack The SNMP MIB handler.
@param contextName The MIB context name. If null is passed, will be
       registered in the default context.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3134082 "setSnmpAdaptor"
	public explicit_return_type "void"
	nparams 3
	  param inout name "stack" type class_ref 522754 // SnmpMibHandler
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and adds this new MIB in the SNMP MIB handler.
Adds a new contextualized MIB in the SNMP MIB handler.

@param stack The SNMP MIB handler.
@param contextName The MIB context name. If null is passed, will be
       registered in the default context.
@param oids The set of OIDs this agent implements.
@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3134210 "getSnmpAdaptorName"
	public return_type class_ref 485506 // ObjectName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the object name of the SNMP protocol adaptor to which the MIB is
bound.

@return The name of the SNMP protocol adaptor.
"
      end

      operation 3134338 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.

@param name The object name of the SNMP MIB handler.

@exception InstanceNotFoundException The MBean does not exist in the
       MBean server.
@exception ServiceNotFoundException This SNMP MIB is not registered
       in the MBean server or the requested service is not supported.
"
      end

      operation 3134466 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.
This method is to be called to set a specific agent to a specific OID.
This can be useful when dealing with MIB overlapping.
Some OID can be implemented in more than one MIB. In this case, the
OID nearer agent will be used on SNMP operations.
@param name The name of the SNMP protocol adaptor.
@param oids The set of OIDs this agent implements.
@exception InstanceNotFoundException The SNMP protocol adaptor does
    not exist in the MBean server.

@exception ServiceNotFoundException This SNMP MIB is not registered
    in the MBean server or the requested service is not supported.

@since 1.5
"
      end

      operation 3134594 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "contextName" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.

@param name The name of the SNMP protocol adaptor.
@param contextName The MIB context name. If null is passed, will be
    registered in the default context.
@exception InstanceNotFoundException The SNMP protocol adaptor does
    not exist in the MBean server.

@exception ServiceNotFoundException This SNMP MIB is not registered
    in the MBean server or the requested service is not supported.

@since 1.5
"
      end

      operation 3134722 "setSnmpAdaptorName"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 522882 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the reference to the SNMP protocol adaptor through which the MIB
will be SNMP accessible and add this new MIB in the SNMP MIB handler
associated to the specified <CODE>name</CODE>.

@param name The name of the SNMP protocol adaptor.
@param contextName The MIB context name. If null is passed, will be
       registered in the default context.
@param oids The set of OIDs this agent implements.
@exception InstanceNotFoundException The SNMP protocol adaptor does
    not exist in the MBean server.

@exception ServiceNotFoundException This SNMP MIB is not registered
    in the MBean server or the requested service is not supported.

@since 1.5
"
      end

      operation 3134850 "getBindingState"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the MIB module is bound to a SNMP protocol
adaptor.
As a reminder, only bound MIBs can be accessed through SNMP protocol
adaptor.

@return <CODE>true</CODE> if the MIB module is bound,
        <CODE>false</CODE> otherwise.
"
      end

      operation 3134978 "getMibName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the MIB name.

@return The MIB name.
"
      end
    end

    class 522754 "SnmpMibHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The logical link between an SNMP MIB and the SNMP communication stack.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      operation 3151106 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 1
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new MIB in the SNMP MIB handler.
This method is called automatically by {@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptor(SnmpMibHandler)} and
{@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptorName(ObjectName)} and should not be called directly.

@param mib The MIB to add.

@return A reference on the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.
"
      end

      operation 3151234 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new MIB in the SNMP MIB handler.

@param mib The MIB to add.
@param oids The array of oid used to add the mib. Each oid is a root oid for the mib.
@return A reference on the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3151362 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new contextualized MIB in the SNMP MIB handler.

@param mib The MIB to add.
@param contextName The MIB context name. If null is passed, will be registered in the default context.

@return A reference to the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3151490 "addMib"
	public return_type class_ref 522754 // SnmpMibHandler
	nparams 3
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new contextualized MIB in the SNMP MIB handler.

@param mib The MIB to add.
@param contextName The MIB context name. If null is passed, will be registered in the default context.
@param oids The array of oid used to add the mib. Each oid is a root oid for the mib.

@return A reference to the SNMP MIB handler.

@exception IllegalArgumentException If the parameter is null.

@since 1.5
"
      end

      operation 3151618 "removeMib"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.
This method is called automatically by {@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptor(SnmpMibHandler)} and
{@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptorName(ObjectName)} and should not be called directly.

@param mib The MIB to be removed.

@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was a MIB included in the SNMP MIB handler,
<CODE>false</CODE> otherwise.
"
      end

      operation 3151746 "removeMib"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.
This method is called automatically by {@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptor(SnmpMibHandler)} and
{@link com.sun.jmx.snmp.agent.SnmpMibAgent#setSnmpAdaptorName(ObjectName)} and should not be called directly.

@param mib The MIB to be removed.
@param oids The oid the MIB was previously registered for.
@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was a MIB included in the SNMP MIB handler,
<CODE>false</CODE> otherwise.

@since 1.5
"
      end

      operation 3151874 "removeMib"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.

@param mib The MIB to be removed.
@param contextName The context name used at registration time.

@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was a MIB included in the SNMP MIB handler,
<CODE>false</CODE> otherwise.

@since 1.5
"
      end

      operation 3152002 "removeMib"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "mib" type class_ref 522498 // SnmpMibAgent
	  param inout name "contextName" type class_ref 128130 // String
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified MIB from the SNMP protocol adaptor.

@param mib The MIB to be removed.
@param contextName The context name used at registration time.
@param oids The oid the MIB was previously registered for.
@return <CODE>true</CODE> if the specified <CODE>mib</CODE> was a MIB included in the SNMP MIB handler,
<CODE>false</CODE> otherwise.

@since 1.5
"
      end
    end

    class 523010 "SnmpGenericMetaServer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
This interface defines the methods that must be implemented by an
SNMP metadata object that needs to interact with an
{@link com.sun.jmx.snmp.agent.SnmpGenericObjectServer} object.
</p>

<p>
All these methods are usually generated by <code>mibgen</code> when
run in generic-metadata mode.
</p>

<p><b><i>
This interface is used internally between the generated Metadata and
the SNMP runtime and you shouldn't need to worry about it, because
you will never have to use it directly.
</b></i></p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      operation 3140226 "buildAttributeValue"
	public return_type class_ref 129538 // Object
	nparams 2
	  param in name "id" explicit_type "long"
	  param inout name "value" type class_ref 514050 // SnmpValue
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an attribute value (as returned by Attribute::getValue())
from an SnmpValue. The returned attribute value can be used to
construct an Attribute object.

@param id The OID arc identifying the variable for which the
          value is constructed.
@param value The SnmpValue from which the Attribute::value will be
             constructed.
@return The attribute value built from the given <code>value</code>.
@exception SnmpStatusException if the attribute value cannot be built
           from the given SnmpValue <code>value</code>.

"
      end

      operation 3140354 "buildSnmpValue"
	public return_type class_ref 514050 // SnmpValue
	nparams 2
	  param in name "id" explicit_type "long"
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an SnmpValue from an Attribute value as returned by
Attribute::getValue().

@param id The OID arc identifying the variable for which the
          value is constructed.
@param value The attribute value as returned by Attribute::getValue().

@return The SnmpValue built from the given <code>value</code>.
@exception SnmpStatusException if the SnmpValue cannot be built from
           the given <code>value</code>.
"
      end

      operation 3140482 "getAttributeName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "id" explicit_type "long"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of the attribute corresponding to the
SNMP variable identified by the given <code>id</code>.

@param id The OID arc identifying the variable.

@return The name of the variable identified by the given
        <code>id</code>.

@exception SnmpStatusException if the given <code>id</code> does not
           correspond to a known variable.
"
      end

      operation 3140610 "checkSetAccess"
	public explicit_return_type "void"
	nparams 3
	  param inout name "x" type class_ref 514050 // SnmpValue
	  param in name "id" explicit_type "long"
	  param inout name "data" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the access rights for a SET operation.

@param x  The new requested value.
@param id The OID arc identifying the variable for which the SET is
          requested.
@param data A contextual object containing user-data.
          This object is allocated through the <code>
          {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
          for each incoming SNMP request.
@exception SnmpStatusException if the SET operation must be rejected.
"
      end

      operation 3140738 "checkGetAccess"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "long"
	  param inout name "data" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the access rights for a GET operation.

@param id The OID arc identifying the variable for which the SET is
          requested.
@param data A contextual object containing user-data.
          This object is allocated through the <code>
          {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
          for each incoming SNMP request.
@exception SnmpStatusException if the SET operation must be rejected.
"
      end
    end

    class 523138 "SnmpGenericObjectServer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
This class is a utility class that transforms SNMP GET / SET requests
into standard JMX getAttributes() setAttributes() requests.
</p>

<p>
The transformation relies on the metadata information provided by the
{@link com.sun.jmx.snmp.agent.SnmpGenericMetaServer} object which is
passed as the first parameter to every method. This SnmpGenericMetaServer
object is usually a Metadata object generated by <code>mibgen</code>.
</p>

<p><b><i>
This class is used internally by mibgen generated metadata objects and
you should never need to use it directly.
</b></i></p>
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1023874 // server (<unidirectional association>)
	relation 1023874 --->
	  a role_name "server" const_relation protected
	    comment " ----------------------------------------------------------------------

    Protected variables

 ----------------------------------------------------------------------

The MBean server through which the MBeans will be accessed.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1023874 // server (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      operation 3140866 "SnmpGenericObjectServer"
	public explicit_return_type ""
	nparams 1
	  param inout name "server" type class_ref 485122 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----------------------------------------------------------------------

 Constructors

 ----------------------------------------------------------------------

Builds a new SnmpGenericObjectServer. Usually there will be a single
object of this type per MIB.

@param server The MBeanServer in which the MBean accessed by this
              MIB are registered.
"
      end

      operation 3140994 "get"
	public explicit_return_type "void"
	nparams 4
	  param inout name "meta" type class_ref 523010 // SnmpGenericMetaServer
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an SNMP GET request.

<p>
This method first builds the list of attributes that need to be
retrieved from the MBean and then calls getAttributes() on the
MBean server. Then it updates the SnmpMibSubRequest with the values
retrieved from the MBean.
</p>

<p>
The SNMP metadata information is obtained through the given
<code>meta</code> object, which usually is an instance of a
<code>mibgen</code> generated class.
</p>

<p><b><i>
This method is called internally by <code>mibgen</code> generated
objects and you should never need to call it directly.
</i></b></p>

@param meta  The metadata object impacted by the subrequest
@param name  The ObjectName of the MBean impacted by this subrequest
@param req   The SNMP subrequest to execute on the MBean
@param depth The depth of the SNMP object in the OID tree.

@exception SnmpStatusException whenever an SNMP exception must be
     raised. Raising an exception will abort the request.<br>
     Exceptions should never be raised directly, but only by means of
<code>
req.registerGetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
</code>
"
      end

      operation 3141122 "get"
	public return_type class_ref 514050 // SnmpValue
	nparams 4
	  param inout name "meta" type class_ref 523010 // SnmpGenericMetaServer
	  param inout name "name" type class_ref 485506 // ObjectName
	  param in name "id" explicit_type "long"
	  param inout name "data" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value of an SNMP variable.

<p><b><i>
You should never need to use this method directly.
</i></b></p>

@param meta  The impacted metadata object
@param name  The ObjectName of the impacted MBean
@param id    The OID arc identifying the variable we're trying to set.
@param data  User contextual data allocated through the
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}

@return The value of the variable.

@exception SnmpStatusException whenever an SNMP exception must be
     raised. Raising an exception will abort the request. <br>
     Exceptions should never be raised directly, but only by means of
<code>
req.registerGetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
</code>
"
      end

      operation 3141250 "set"
	public explicit_return_type "void"
	nparams 4
	  param inout name "meta" type class_ref 523010 // SnmpGenericMetaServer
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an SNMP SET request.

<p>
This method first builds the list of attributes that need to be
set on the MBean and then calls setAttributes() on the
MBean server. Then it updates the SnmpMibSubRequest with the new
values retrieved from the MBean.
</p>

<p>
The SNMP metadata information is obtained through the given
<code>meta</code> object, which usually is an instance of a
<code>mibgen</code> generated class.
</p>

<p><b><i>
This method is called internally by <code>mibgen</code> generated
objects and you should never need to call it directly.
</i></b></p>

@param meta  The metadata object impacted by the subrequest
@param name  The ObjectName of the MBean impacted by this subrequest
@param req   The SNMP subrequest to execute on the MBean
@param depth The depth of the SNMP object in the OID tree.

@exception SnmpStatusException whenever an SNMP exception must be
     raised. Raising an exception will abort the request. <br>
     Exceptions should never be raised directly, but only by means of
<code>
req.registerGetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
</code>
"
      end

      operation 3141378 "set"
	public return_type class_ref 514050 // SnmpValue
	nparams 5
	  param inout name "meta" type class_ref 523010 // SnmpGenericMetaServer
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "x" type class_ref 514050 // SnmpValue
	  param in name "id" explicit_type "long"
	  param inout name "data" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of an SNMP variable.

<p><b><i>
You should never need to use this method directly.
</i></b></p>

@param meta  The impacted metadata object
@param name  The ObjectName of the impacted MBean
@param x     The new requested SnmpValue
@param id    The OID arc identifying the variable we're trying to set.
@param data  User contextual data allocated through the
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}

@return The new value of the variable after the operation.

@exception SnmpStatusException whenever an SNMP exception must be
     raised. Raising an exception will abort the request. <br>
     Exceptions should never be raised directly, but only by means of
<code>
req.registerSetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
</code>
"
      end

      operation 3141506 "check"
	public explicit_return_type "void"
	nparams 4
	  param inout name "meta" type class_ref 523010 // SnmpGenericMetaServer
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether an SNMP SET request can be successfully performed.

<p>
For each variable in the subrequest, this method calls
checkSetAccess() on the meta object, and then tries to invoke the
check<i>AttributeName</i>() method on the MBean. If this method
is not defined then it is assumed that the SET won't fail.
</p>

<p><b><i>
This method is called internally by <code>mibgen</code> generated
objects and you should never need to call it directly.
</i></b></p>

@param meta  The metadata object impacted by the subrequest
@param name  The ObjectName of the MBean impacted by this subrequest
@param req   The SNMP subrequest to execute on the MBean
@param depth The depth of the SNMP object in the OID tree.

@exception SnmpStatusException if the requested SET operation must
     be rejected. Raising an exception will abort the request. <br>
     Exceptions should never be raised directly, but only by means of
<code>
req.registerCheckException(<i>VariableId</i>,<i>SnmpStatusException</i>)
</code>

"
      end

      operation 3141634 "check"
	public explicit_return_type "void"
	nparams 5
	  param inout name "meta" type class_ref 523010 // SnmpGenericMetaServer
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "x" type class_ref 514050 // SnmpValue
	  param in name "id" explicit_type "long"
	  param inout name "data" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a SET operation can be performed on a given SNMP
variable.

@param meta  The impacted metadata object
@param name  The ObjectName of the impacted MBean
@param x     The new requested SnmpValue
@param id    The OID arc identifying the variable we're trying to set.
@param data  User contextual data allocated through the
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}

<p>
This method calls checkSetAccess() on the meta object, and then
tries to invoke the check<i>AttributeName</i>() method on the MBean.
If this method is not defined then it is assumed that the SET
won't fail.
</p>

<p><b><i>
This method is called internally by <code>mibgen</code> generated
objects and you should never need to call it directly.
</i></b></p>

@exception SnmpStatusException if the requested SET operation must
     be rejected. Raising an exception will abort the request. <br>
     Exceptions should never be raised directly, but only by means of
<code>
req.registerCheckException(<i>VariableId</i>,<i>SnmpStatusException</i>)
</code>


 XXX xxx ZZZ zzz Maybe we should go through the MBeanInfo here?"
      end

      operation 3141762 "registerTableEntry"
	public explicit_return_type "void"
	nparams 4
	  param inout name "meta" type class_ref 523394 // SnmpMibTable
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param inout name "objname" type class_ref 485506 // ObjectName
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 523266 "SnmpMibSubRequest"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " import com.sun.jmx.snmp.SnmpIndex;

This interface models an SNMP sub request to be performed on a specific
SNMP MIB node. The node involved can be either an SNMP group, an SNMP table,
or an SNMP table entry (conceptual row). The conceptual row may or may not
already exist. If the row did not exist at the time when the request
was received, the <CODE>isNewEntry()</CODE> method will return <CODE>
true</CODE>.
<p>
Objects implementing this interface will be allocated by the SNMP engine.
You will never need to implement this interface. You will only use it.
</p>
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1026818 // <generalisation>
	relation 1026818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1026818 // <generalisation>
	  b parent class_ref 522114 // SnmpMibRequest
      end

      operation 3156482 "getElements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Return the list of varbind to be handled by the SNMP MIB node.
<p>
<b>Note:</b> <ul>
<i>In case of SET operation, if this node is a table row which
contains a control variable (as identified by the table's
isRowStatus() method) the control variable will not
be included in this list: it will be obtained by calling
getRowStatusVarBind(). This will allow you to handle the control
variable specifically.</i><br>
You will never need to worry about this unless you need to
implement a non standard mechanism for handling row
creation and deletion.
</ul>
<p>
@return The elements of the enumeration are instances of
        {@link com.sun.jmx.snmp.SnmpVarBind}
"
      end

      operation 3156610 "getSubList"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Return the list of varbind to be handled by the SNMP MIB node.
<p>
<b>Note:</b> <ul>
<i>In case of SET operation, if this node is a table row which
contains a control variable (as identified by the table's
isRowStatus() method) the control variable will not
be included in this list: it will be obtained by calling
getRowStatusVarBind(). This will allow you to handle the control
variable specifically.</i><br>
You will never need to worry about this unless you need to
implement a non standard mechanism for handling row
creation and deletion.
</ul>
<p>
@return The elements of the vector are instances of
        {@link com.sun.jmx.snmp.SnmpVarBind}
"
      end

      operation 3156738 "getEntryOid"
	public return_type class_ref 514306 // SnmpOid
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the part of the OID identifying the table entry involved.
<p>

@return {@link com.sun.jmx.snmp.SnmpOid} or <CODE>null</CODE>
        if the request is not directed to an entry.
"
      end

      operation 3156866 "isNewEntry"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicate whether the entry involved is a new entry.
This method will return <CODE>true</CODE> if the entry was not
found when the request was processed. As a consequence, <CODE>
true</CODE> means that either the entry does not exist yet,
or it has been created while processing this request.
The result of this method is only significant when an entry
is involved.

<p>
@return <CODE>true</CODE> If the entry did not exist,
 or <CODE>false</CODE> if the entry involved was found.
"
      end

      operation 3156994 "getRowStatusVarBind"
	public return_type class_ref 516738 // SnmpVarBind
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the varbind that holds the RowStatus variable.
It corresponds to the varbind that was identified by
the <code>isRowStatus()</code> method generated by mibgen
on {@link com.sun.jmx.snmp.agent.SnmpMibTable} derivatives.
<ul><li>In SMIv2, it is the varbind which contains the columnar
        object implementing the RowStatus TEXTUAL-CONVENTION.</li>
     <li>In SMIv1 nothing special is generated</li>
     <ul>You may however subclass the generated table metadata
         class in order to provide your own implementation of
         isRowStatus(), getRowAction(), isRowReady() and
         setRowStatus()
         (see  {@link com.sun.jmx.snmp.agent.SnmpMibTable}).</ul>
</ul>
<p>
@return a varbind that serves to control the table modification.
        <code>null</code> means that no such varbind could be
        identified.<br>
        <b>Note:</b><i>The runtime will only try to identify
        the RowStatus varbind when processing an
        SNMP SET request. In this case, the identified
        varbind will not be included in the set of varbinds
        returned by getSubList() and getElements().
        </i>

"
      end

      operation 3157122 "registerGetException"
	public explicit_return_type "void"
	nparams 2
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "exception" type class_ref 514434 // SnmpStatusException
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should be called when a status exception needs to
be raised for a given varbind of an SNMP GET request. This method
performs all the necessary conversions (SNMPv1 <=> SNMPv2) and
propagates the exception if needed:
If the version is SNMP v1, the exception is propagated.
If the version is SNMP v2, the exception is stored in the varbind.
This method also takes care of setting the correct value of the
index field.
<p>

@param varbind The varbind for which the exception is
       registered. Note that this varbind <b>must</b> have
       been obtained from the enumeration returned by
       <CODE>getElements()</CODE>, or from the vector
       returned by <CODE>getSubList()</CODE>

@param exception The exception to be registered for the given varbind.

"
      end

      operation 3157250 "registerSetException"
	public explicit_return_type "void"
	nparams 2
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "exception" type class_ref 514434 // SnmpStatusException
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should be called when a status exception needs to
be raised for a given varbind of an SNMP SET request. This method
performs all the necessary conversions (SNMPv1 <=> SNMPv2) and
propagates the exception if needed.
This method also takes care of setting the correct value of the
index field.
<p>

@param varbind The varbind for which the exception is
       registered. Note that this varbind <b>must</b> have
       been obtained from the enumeration returned by
       <CODE>getElements()</CODE>, or from the vector
       returned by <CODE>getSubList()</CODE>

@param exception The exception to be registered for the given varbind.

"
      end

      operation 3157378 "registerCheckException"
	public explicit_return_type "void"
	nparams 2
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "exception" type class_ref 514434 // SnmpStatusException
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should be called when a status exception needs to
be raised when checking a given varbind for an SNMP SET request.
This method performs all the necessary conversions (SNMPv1 <=>
SNMPv2) and propagates the exception if needed.
This method also takes care of setting the correct value of the
index field.
<p>

@param varbind The varbind for which the exception is
       registered. Note that this varbind <b>must</b> have
       been obtained from the enumeration returned by
       <CODE>getElements()</CODE>, or from the vector
       returned by <CODE>getSubList()</CODE>

@param exception The exception to be registered for the given varbind.

"
      end
    end

    class 523394 "SnmpMibTable"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is the base class for SNMP table metadata.
<p>
Its responsibility is to manage a sorted array of OID indexes
according to the SNMP indexing scheme over the \"real\" table.
Each object of this class can be bound to an
{@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} to which it will
forward remote entry creation requests, and invoke callbacks
when an entry has been successfully added to / removed from
the OID index array.
</p>

<p>
For each table defined in the MIB, mibgen will generate a specific
class called Table<i>TableName</i> that will implement the
SnmpTableEntryFactory interface, and a corresponding
<i>TableName</i>Meta class that will extend this class. <br>
The Table<i>TableName</i> class corresponds to the MBean view of the
table while the <i>TableName</i>Meta class corresponds to the
MIB metadata view of the same table.
</p>

<p>
Objects of this class are instantiated by the generated
whole MIB class extending {@link com.sun.jmx.snmp.agent.SnmpMib}
You should never need to instantiate this class directly.
</p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
@see com.sun.jmx.snmp.agent.SnmpMib
@see com.sun.jmx.snmp.agent.SnmpMibEntry
@see com.sun.jmx.snmp.agent.SnmpTableEntryFactory
@see com.sun.jmx.snmp.agent.SnmpTableSupport

"
      classrelation 1026946 // <generalisation>
	relation 1026946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1026946 // <generalisation>
	  b parent class_ref 523778 // SnmpMibNode
      end

      classrelation 1027074 // <realization>
	relation 1027074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1027074 // <realization>
	  b parent class_ref 497794 // NotificationBroadcaster
      end

      classrelation 1027202 // <realization>
	relation 1027202 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1027202 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 3157506 "SnmpMibTable"
	public explicit_return_type ""
	nparams 1
	  param inout name "mib" type class_ref 523650 // SnmpMib
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <CODE>SnmpMibTable</CODE> metadata node.

<p>
@param mib The SNMP MIB to which the metadata will be linked.
"
      end

      operation 3157634 "createNewEntry"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 PUBLIC METHODS
 -------------------------------------------------------------------

This method is invoked when the creation of a new entry is requested
by a remote SNMP manager.
<br>By default, remote entry creation is disabled - and this method
will not be called. You can dynamically switch the entry creation
policy by calling <code>setCreationEnabled(true)</code> and <code>
setCreationEnabled(false)</code> on this object.
<p><b><i>
This method is called internally by the SNMP runtime and you
should never need to call it directly. </b></i>However you might want
to extend it in order to implement your own specific application
behaviour, should the default behaviour not be at your convenience.
</p>
<p>
@param req   The SNMP  subrequest requesting this creation
@param rowOid  The OID indexing the conceptual row (entry) for which
               the creation was requested.
@param depth The position of the columnar object arc in the OIDs
             from the varbind list.

@exception SnmpStatusException if the entry cannot be created.
"
      end

      operation 3157762 "isRegistrationRequired"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell whether the specific version of this metadata generated
by <code>mibgen</code> requires entries to be registered with
the MBeanServer. In this case an ObjectName will have to be
passed to addEntry() in order for the table to behave correctly
(case of the generic metadata).
<p>
If that version of the metadata does not require entry to be
registered, then passing an ObjectName becomes optional (null
can be passed instead).

@return <code>true</code> if registration is required by this
        version of the metadata.
"
      end

      operation 3157890 "isCreationEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell whether a new entry should be created when a SET operation
is received for an entry that does not exist yet.

@return true if a new entry must be created, false otherwise.<br>
        [default: returns <CODE>false</CODE>]
"
      end

      operation 3158018 "setCreationEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "remoteCreationFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method lets you dynamically switch the creation policy.

<p>
@param remoteCreationFlag Tells whether remote entry creation must
       be enabled or disabled.
<ul><li>
<CODE>setCreationEnabled(true)</CODE> will enable remote entry
     creation via SET operations.</li>
<li>
<CODE>setCreationEnabled(false)</CODE> will disable remote entry
     creation via SET operations.</li>
<p> By default remote entry creation via SET operation is disabled.
</p>
</ul>
"
      end

      operation 3158146 "hasRowStatus"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return <code>true</code> if the conceptual row contains a columnar
object used to control creation/deletion of rows in this table.
<p>
This  columnar object can be either a variable with RowStatus
syntax as defined by RFC 2579, or a plain variable whose
semantics is table specific.
<p>
By default, this function returns <code>false</code>, and it is
assumed that the table has no such control variable.<br>
When <code>mibgen</code> is used over SMIv2 MIBs, it will generate
an <code>hasRowStatus()</code> method returning <code>true</code>
for each table containing an object with RowStatus syntax.
<p>
When this method returns <code>false</code> the default mechanism
for remote entry creation is used.
Otherwise, creation/deletion is performed as specified
by the control variable (see getRowAction() for more details).
<p>
This method is called internally when a SET request involving
this table is processed.
<p>
If you need to implement a control variable which do not use
the RowStatus convention as defined by RFC 2579, you should
subclass the generated table metadata class in order to redefine
this method and make it returns <code>true</code>.<br>
You will then have to redefine the isRowStatus(), mapRowStatus(),
isRowReady(), and setRowStatus() methods to suit your specific
implementation.
<p>
@return <li><code>true</code> if this table contains a control
        variable (eg: a variable with RFC 2579 RowStatus syntax),
        </li>
        <li><code>false</code> if this table does not contain
        any control variable.</li>

"
      end

      operation 3158274 "get"
	public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------

 Implements the method defined in SnmpMibNode.

 ---------------------------------------------------------------------

Generic handling of the <CODE>get</CODE> operation.
<p> The default implementation of this method is to
<ul>
<li> check whether the entry exists, and if not register an
     exception for each varbind in the list.
<li> call the generated
     <CODE>get(req,oid,depth+1)</CODE> method. </li>
</ul>
<p>
<pre>
public void get(SnmpMibSubRequest req, int depth)
   throws SnmpStatusException {
   boolean         isnew  = req.isNewEntry();

   // if the entry does not exists, then registers an error for
   // each varbind involved (nb: this should not happen, since
   // the error should already have been detected earlier)
   //
   if (isnew) {
       SnmpVarBind     var = null;
       for (Enumeration e= req.getElements(); e.hasMoreElements();) {
           var = (SnmpVarBind) e.nextElement();
           req.registerGetException(var,noSuchNameException);
       }
   }

   final SnmpOid oid = req.getEntryOid();
   get(req,oid,depth+1);
}
</pre>
<p> You should not need to override this method in any cases, because
it will eventually call
<CODE>get(SnmpMibSubRequest req, int depth)</CODE> on the generated
derivative of <CODE>SnmpMibEntry</CODE>. If you need to implement
specific policies for minimizing the accesses made to some remote
underlying resources, or if you need to implement some consistency
checks between the different values provided in the varbind list,
you should then rather override
<CODE>get(SnmpMibSubRequest req, int depth)</CODE> on the generated
derivative of <CODE>SnmpMibEntry</CODE>.
<p>

"
      end

      operation 3158402 "check"
	public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------

 Implements the method defined in SnmpMibNode.

 ---------------------------------------------------------------------

Generic handling of the <CODE>check</CODE> operation.
<p> The default implementation of this method is to
<ul>
<li> check whether a new entry must be created, and if remote
     creation of entries is enabled, create it. </li>
<li> call the generated
     <CODE>check(req,oid,depth+1)</CODE> method. </li>
</ul>
<p>
<pre>
public void check(SnmpMibSubRequest req, int depth)
   throws SnmpStatusException {
   final SnmpOid     oid    = req.getEntryOid();
   final int         action = getRowAction(req,oid,depth+1);

   beginRowAction(req,oid,depth+1,action);
   check(req,oid,depth+1);
}
</pre>
<p> You should not need to override this method in any cases, because
it will eventually call
<CODE>check(SnmpMibSubRequest req, int depth)</CODE> on the generated
derivative of <CODE>SnmpMibEntry</CODE>. If you need to implement
specific policies for minimizing the accesses made to some remote
underlying resources, or if you need to implement some consistency
checks between the different values provided in the varbind list,
you should then rather override
<CODE>check(SnmpMibSubRequest req, int depth)</CODE> on the generated
derivative of <CODE>SnmpMibEntry</CODE>.
<p>

"
      end

      operation 3158530 "set"
	public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------

 Implements the method defined in SnmpMibNode.

 ---------------------------------------------------------------------

Generic handling of the <CODE>set</CODE> operation.
<p> The default implementation of this method is to
call the generated
<CODE>set(req,oid,depth+1)</CODE> method.
<p>
<pre>
public void set(SnmpMibSubRequest req, int depth)
   throws SnmpStatusException {
   final SnmpOid oid = req.getEntryOid();
   final int  action = getRowAction(req,oid,depth+1);

   set(req,oid,depth+1);
   endRowAction(req,oid,depth+1,action);
}
</pre>
<p> You should not need to override this method in any cases, because
it will eventually call
<CODE>set(SnmpMibSubRequest req, int depth)</CODE> on the generated
derivative of <CODE>SnmpMibEntry</CODE>. If you need to implement
specific policies for minimizing the accesses made to some remote
underlying resources, or if you need to implement some consistency
checks between the different values provided in the varbind list,
you should then rather override
<CODE>set(SnmpMibSubRequest req, int depth)</CODE> on the generated
derivative of <CODE>SnmpMibEntry</CODE>.
<p>

"
      end

      operation 3158658 "addEntry"
	public explicit_return_type "void"
	nparams 2
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new entry in this <CODE>SnmpMibTable</CODE>.
Also triggers the addEntryCB() callback of the
{@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} interface
if this node is bound to a factory.

This method assumes that the given entry will not be registered.
If the entry is going to be registered, or if ObjectName's are
required, then
{@link com.sun.jmx.snmp.agent.SnmpMibTable#addEntry(SnmpOid,
ObjectName, Object)} should be preferred.
<br> This function is mainly provided for backward compatibility.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row to be added.
@param entry The entry to add.

@exception SnmpStatusException The entry couldn't be added
           at the position identified by the given
           <code>rowOid</code>, or this version of the metadata
           requires ObjectName's.

 public void addEntry(SnmpIndex index, Object entry)"
      end

      operation 3158786 "addEntry"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oid" type class_ref 514306 // SnmpOid
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new entry in this <CODE>SnmpMibTable</CODE>.
Also triggers the addEntryCB() callback of the
{@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} interface
if this node is bound to a factory.

<p>
@param oid    The <CODE>SnmpOid</CODE> identifying the table
              row to be added.

@param name  The ObjectName with which this entry is registered.
             This parameter can be omitted if isRegistrationRequired()
             return false.

@param entry The entry to add.

@exception SnmpStatusException The entry couldn't be added
           at the position identified by the given
           <code>rowOid</code>, or if this version of the metadata
           requires ObjectName's, and the given name is null.

 protected synchronized void addEntry(SnmpIndex index, ObjectName name,
                                      Object entry)"
      end

      operation 3158914 "removeEntry"
	public explicit_return_type "void"
	nparams 2
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the specified entry from the table.
Also triggers the removeEntryCB() callback of the
{@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} interface
if this node is bound to a factory.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row to remove.

@param entry The entry to be removed. This parameter is not used
             internally, it is simply passed along to the
             removeEntryCB() callback.

@exception SnmpStatusException if the specified entry couldn't
           be removed (if the given <code>rowOid</code> is not
           valid for instance).
"
      end

      operation 3159042 "removeEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the specified entry from the table.
Also triggers the removeEntryCB() callback of the
{@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} interface
if this node is bound to a factory.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row to remove.

@exception SnmpStatusException if the specified entry couldn't
           be removed (if the given <code>rowOid</code> is not
           valid for instance).
"
      end

      operation 3159170 "removeEntry"
	public explicit_return_type "void"
	nparams 2
	  param in name "pos" explicit_type "int"
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the specified entry from the table.
Also triggers the removeEntryCB() callback of the
{@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} interface
if this node is bound to a factory.

<p>
@param pos The position of the entry in the table.

@param entry The entry to be removed. This parameter is not used
             internally, it is simply passed along to the
             removeEntryCB() callback.

@exception SnmpStatusException if the specified entry couldn't
           be removed.
"
      end

      operation 3159298 "getEntry"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the entry corresponding to the specified rowOid.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the
       row to be retrieved.

@return The entry.

@exception SnmpStatusException There is no entry with the specified
     <code>rowOid</code> in the table.
"
      end

      operation 3159426 "getEntryName"
	public return_type class_ref 485506 // ObjectName
	nparams 1
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ObjectName of the entry corresponding to the
specified rowOid.
The result of this method is only meaningful if
isRegistrationRequired() yields true.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
       row whose ObjectName we want to retrieve.

@return The object name of the entry.

@exception SnmpStatusException There is no entry with the specified
     <code>rowOid</code> in the table.
"
      end

      operation 3159554 "getBasicEntries"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the entries stored in this table <CODE>SnmpMibTable</CODE>.
<p>
If the subclass generated by mibgen uses the generic way to access
the entries (i.e. if it goes through the MBeanServer) then some of
the entries may be <code>null</code>. It all depends whether a non
<code>null</code> entry was passed to addEntry().<br>
Otherwise, if it uses the standard way (access the entry directly
through their standard MBean interface) this array will contain all
the entries.
<p>
@return The entries array.
"
      end

      operation 3159682 "getSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the size of the table.

@return The number of entries currently registered in this table.
"
      end

      operation 3159810 "addNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " EVENT STUFF
------------

Enable to add an SNMP entry listener to this
<CODE>SnmpMibTable</CODE>.

<p>
@param listener The listener object which will handle the
   notifications emitted by the registered MBean.

@param filter The filter object. If filter is null, no filtering
   will be performed before handling notifications.

@param handback The context to be sent to the listener when a
   notification is emitted.

@exception IllegalArgumentException Listener parameter is null.
"
      end

      operation 3159938 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 487042 // NotificationListener
	nexceptions 1
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Enable to remove an SNMP entry listener from this
<CODE>SnmpMibTable</CODE>.

@param listener The listener object which will handle the
   notifications emitted by the registered MBean.
   This method will remove all the information related to this
   listener.

@exception ListenerNotFoundException The listener is not registered
   in the MBean.
"
      end

      operation 3160066 "getNotificationInfo"
	public return_type class_ref 497154 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Return a <CODE>NotificationInfo</CODE> object containing the
notification class and the notification type sent by the
<CODE>SnmpMibTable</CODE>.
"
      end

      operation 3160194 "registerEntryFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 524674 // SnmpTableEntryFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register the factory through which table entries should
be created when remote entry creation is enabled.

<p>
@param factory The
       {@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} through
       which entries will be created when a remote SNMP manager
       request the creation of a new entry via an SNMP SET request.
"
      end

      operation 3160322 "isRowStatus"
	protected explicit_return_type "boolean"
	nparams 3
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "var" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----------------------------------------------------------------------
 PROTECTED METHODS - RowStatus
 ----------------------------------------------------------------------

Return true if the columnar object identified by <code>var</code>
is used to control the addition/deletion of rows in this table.

<p>
By default, this method assumes that there is no control variable
and always return <code>false</code>
<p>
If this table was defined using SMIv2, and if it contains a
control variable with RowStatus syntax, <code>mibgen</code>
will generate a non default implementation for this method
that will identify the RowStatus control variable.
<p>
You will have to redefine this method if you need to implement
control variables that do not conform to RFC 2579 RowStatus
TEXTUAL-CONVENTION.
<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param var The OID arc identifying the involved columnar object.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

"
      end

      operation 3160450 "getRowAction"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the RowStatus code value specified in this request.
<p>
The RowStatus code value should be one of the values defined
by {@link com.sun.jmx.snmp.EnumRowStatus}. These codes correspond
to RowStatus codes as defined in RFC 2579, plus the <i>unspecified</i>
value which is SNMP Runtime specific.
<p>

@param req    The sub-request that must be handled by this node.

@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param depth  The depth reached in the OID tree.

@return The RowStatus code specified in this request, if any:
<ul>
<li>If the specified row does not exist and this table do
    not use any variable to control creation/deletion of
    rows, then default creation mechanism is assumed and
    <i>createAndGo</i> is returned</li>
<li>Otherwise, if the row exists and this table do not use any
    variable to control creation/deletion of rows,
    <i>unspecified</i> is returned.</li>
<li>Otherwise, if the request does not contain the control variable,
    <i>unspecified</i> is returned.</li>
<li>Otherwise, mapRowStatus() is called to extract the RowStatus
    code from the SnmpVarBind that contains the control variable.</li>
</ul>

@exception SnmpStatusException if the value of the control variable
           could not be mapped to a RowStatus code.

@see com.sun.jmx.snmp.EnumRowStatus
"
      end

      operation 3160578 "mapRowStatus"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param inout name "vbstatus" type class_ref 516738 // SnmpVarBind
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Map the value of the <code>vbstatus</code> varbind to the
corresponding RowStatus code defined in
{@link com.sun.jmx.snmp.EnumRowStatus}.
These codes correspond to RowStatus codes as defined in RFC 2579,
plus the <i>unspecified</i> value which is SNMP Runtime specific.
<p>
By default, this method assumes that the control variable is
an Integer, and it simply returns its value without further
analysis.
<p>
If this table was defined using SMIv2, and if it contains a
control variable with RowStatus syntax, <code>mibgen</code>
will generate a non default implementation for this method.
<p>
You will have to redefine this method if you need to implement
control variables that do not conform to RFC 2579 RowStatus
TEXTUAL-CONVENTION.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param vbstatus The SnmpVarBind containing the value of the control
          variable, as identified by the isRowStatus() method.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return The RowStatus code mapped from the value contained
    in <code>vbstatus</code>.

@exception SnmpStatusException if the value of the control variable
           could not be mapped to a RowStatus code.

@see com.sun.jmx.snmp.EnumRowStatus
"
      end

      operation 3160706 "setRowStatus"
	protected return_type class_ref 514050 // SnmpValue
	nparams 3
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "newStatus" explicit_type "int"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the control variable to the specified <code>newStatus</code>
value.

<p>
This method maps the given <code>newStatus</code> to the appropriate
value for the control variable, then sets the control variable in
the entry identified by <code>rowOid</code>. It returns the new
value of the control variable.
<p>
By default, it is assumed that there is no control variable so this
method does nothing and simply returns <code>null</code>.
<p>
If this table was defined using SMIv2, and if it contains a
control variable with RowStatus syntax, <code>mibgen</code>
will generate a non default implementation for this method.
<p>
You will have to redefine this method if you need to implement
control variables that do not conform to RFC 2579 RowStatus
TEXTUAL-CONVENTION.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param newStatus The new status for the row: one of the
       RowStatus code defined in
       {@link com.sun.jmx.snmp.EnumRowStatus}. These codes
       correspond to RowStatus codes as defined in RFC 2579,
       plus the <i>unspecified</i> value which is SNMP Runtime specific.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return The new value of the control variable (usually
        <code>new SnmpInt(newStatus)</code>) or <code>null</code>
        if the table do not have any control variable.

@exception SnmpStatusException If the given <code>newStatus</code>
           could not be set on the specified entry, or if the
           given <code>newStatus</code> is not valid.

@see com.sun.jmx.snmp.EnumRowStatus
"
      end

      operation 3160834 "isRowReady"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell whether the specified row is ready and can be put in the
<i>notInService</i> state.
<p>
This method is called only once, after all the varbind have been
set on a new entry for which <i>createAndWait</i> was specified.
<p>
If the entry is not yet ready, this method should return false.
It will then be the responsibility of the entry to switch its
own state to <i>notInService</i> when it becomes ready.
No further call to <code>isRowReady()</code> will be made.
<p>
By default, this method always return true. <br>
<code>mibgen</code> will not generate any specific implementation
for this method - meaning that by default, a row created using
<i>createAndWait</i> will always be placed in <i>notInService</i>
state at the end of the request.
<p>
If this table was defined using SMIv2, and if it contains a
control variable with RowStatus syntax, <code>mibgen</code>
will generate an implementation for this method that will
delegate the work to the metadata class modelling the conceptual
row, so that you can override the default behaviour by subclassing
that metadata class.
<p>
You will have to redefine this method if this default mechanism
does not suit your needs.

<p>
@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return <code>true</code> if the row can be placed in
        <i>notInService</i> state.

@exception SnmpStatusException An error occurred while trying
           to retrieve the row status, and the operation should
           be aborted.

@see com.sun.jmx.snmp.EnumRowStatus
"
      end

      operation 3160962 "checkRowStatusChange"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	  param in name "newStatus" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the control variable of the given row can be
switched to the new specified <code>newStatus</code>.
<p>
This method is called during the <i>check</i> phase of a SET
request when the control variable specifies <i>active</i> or
<i>notInService</i>.
<p>
By default it is assumed that nothing prevents putting the
row in the requested state, and this method does nothing.
It is simply provided as a hook so that specific checks can
be implemented.
<p>
Note that if the actual row deletion fails afterward, the
atomicity of the request is no longer guaranteed.

<p>
@param req    The sub-request that must be handled by this node.

@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param depth  The depth reached in the OID tree.

@param newStatus The new status for the row: one of the
       RowStatus code defined in
       {@link com.sun.jmx.snmp.EnumRowStatus}. These codes
       correspond to RowStatus codes as defined in RFC 2579,
       plus the <i>unspecified</i> value which is SNMP Runtime specific.

@exception SnmpStatusException if switching to this new state
           would fail.

"
      end

      operation 3161090 "checkRemoveTableRow"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the specified row can be removed from the table.
<p>
This method is called during the <i>check</i> phase of a SET
request when the control variable specifies <i>destroy</i>
<p>
By default it is assumed that nothing prevents row deletion
and this method does nothing. It is simply provided as a hook
so that specific checks can be implemented.
<p>
Note that if the actual row deletion fails afterward, the
atomicity of the request is no longer guaranteed.

<p>
@param req    The sub-request that must be handled by this node.

@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param depth  The depth reached in the OID tree.

@exception SnmpStatusException if the row deletion must be
           rejected.
"
      end

      operation 3161218 "removeTableRow"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a table row upon a remote manager request.

This method is called internally when <code>getRowAction()</code>
yields <i>destroy</i> - i.e.: it is only called when a remote
manager requests the removal of a table row.<br>
You should never need to call this function directly.
<p>
By default, this method simply calls <code>removeEntry(rowOid)
</code>.
<p>
You can redefine this method if you need to implement some
specific behaviour when a remote row deletion is invoked.
<p>
Note that specific checks should not be implemented in this
method, but rather in <code>checkRemoveTableRow()</code>.
If <code>checkRemoveTableRow()</code> succeeds and this method
fails afterward, the atomicity of the original SET request can no
longer be guaranteed.
<p>

@param req    The sub-request that must be handled by this node.

@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param depth  The depth reached in the OID tree.

@exception SnmpStatusException if the actual row deletion fails.
           This should not happen since it would break the
           atomicity of the SET request. Specific checks should
           be implemented in <code>checkRemoveTableRow()</code>
           if needed. If the entry does not exists, no exception
           is generated and the method simply returns.

"
      end

      operation 3161346 "beginRowAction"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	  param in name "rowAction" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method takes care of initial RowStatus handling during the
check() phase of a SET request.

In particular it will:
<ul><li>check that the given <code>rowAction</code> returned by
        <code>getRowAction()</code> is valid.</li>
<li>Then depending on the <code>rowAction</code> specified it will:
    <ul><li>either call <code>createNewEntry()</code> (<code>
        rowAction = <i>createAndGo</i> or <i>createAndWait</i>
        </code>),</li>
    <li>or call <code>checkRemoveTableRow()</code> (<code>
        rowAction = <i>destroy</i></code>),</li>
    <li>or call <code>checkRowStatusChange()</code> (<code>
        rowAction = <i>active</i> or <i>notInService</i></code>),</li>
    <li>or generate a SnmpStatusException if the passed <code>
        rowAction</code> is not correct.</li>
</ul></li></ul>
<p>
In principle, you should not need to redefine this method.
<p>
<code>beginRowAction()</code> is called during the check phase
of a SET request, before actual checking on the varbind list
is performed.

<p>
@param req    The sub-request that must be handled by this node.

@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param depth  The depth reached in the OID tree.

@param rowAction The requested action as returned by <code>
       getRowAction()</code>: one of the RowStatus codes defined in
       {@link com.sun.jmx.snmp.EnumRowStatus}. These codes
       correspond to RowStatus codes as defined in RFC 2579,
       plus the <i>unspecified</i> value which is SNMP Runtime specific.

@exception SnmpStatusException if the specified <code>rowAction</code>
           is not valid or cannot be executed.
           This should not happen since it would break the
           atomicity of the SET request. Specific checks should
           be implemented in <code>beginRowAction()</code> if needed.

@see com.sun.jmx.snmp.EnumRowStatus
"
      end

      operation 3161474 "endRowAction"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	  param in name "rowAction" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method takes care of final RowStatus handling during the
set() phase of a SET request.

In particular it will:
    <ul><li>either call <code>setRowStatus(<i>active</i>)</code>
        (<code> rowAction = <i>createAndGo</i> or <i>active</i>
        </code>),</li>
    <li>or call <code>setRowStatus(<i>notInService</i> or <i>
        notReady</i>)</code> depending on the result of <code>
        isRowReady()</code> (<code>rowAction = <i>createAndWait</i>
        </code>),</li>
    <li>or call <code>setRowStatus(<i>notInService</i>)</code>
        (<code> rowAction = <i>notInService</i></code>),
    <li>or call <code>removeTableRow()</code> (<code>
        rowAction = <i>destroy</i></code>),</li>
    <li>or generate a SnmpStatusException if the passed <code>
        rowAction</code> is not correct. This should be avoided
        since it would break SET request atomicity</li>
    </ul>
<p>
In principle, you should not need to redefine this method.
<p>
<code>endRowAction()</code> is called during the set() phase
of a SET request, after the actual set() on the varbind list
has been performed. The varbind containing the control variable
is updated with the value returned by setRowStatus() (if it is
not <code>null</code>).

<p>
@param req    The sub-request that must be handled by this node.

@param rowOid The <CODE>SnmpOid</CODE> identifying the table
              row involved in the operation.

@param depth  The depth reached in the OID tree.

@param rowAction The requested action as returned by <code>
       getRowAction()</code>: one of the RowStatus codes defined in
       {@link com.sun.jmx.snmp.EnumRowStatus}. These codes
       correspond to RowStatus codes as defined in RFC 2579,
       plus the <i>unspecified</i> value which is SNMP Runtime specific.

@exception SnmpStatusException if the specified <code>rowAction</code>
           is not valid.

@see com.sun.jmx.snmp.EnumRowStatus
"
      end

      operation 3161602 "getNextVarEntryId"
	protected explicit_return_type "long"
	nparams 4
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "var" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	  param in name "pduVersion" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 PROTECTED METHODS - get next
 -------------------------------------------------------------------

Return the next OID arc corresponding to a readable columnar
object in the underlying entry OBJECT-TYPE, possibly skipping over
those objects that must not or cannot be returned.
Calls {@link
#getNextVarEntryId(com.sun.jmx.snmp.SnmpOid,long,java.lang.Object)},
until
{@link #skipEntryVariable(com.sun.jmx.snmp.SnmpOid,long,
java.lang.Object,int)} returns false.


@param rowOid The OID index of the row involved in the operation.

@param var Id of the variable we start from, looking for the next.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@param pduVersion Protocol version of the original request PDU.

@return The next columnar object id which can be returned using
        the given PDU's protocol version.

@exception SnmpStatusException If no id is found after the given id.

"
      end

      operation 3161730 "skipEntryVariable"
	protected explicit_return_type "boolean"
	nparams 4
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "var" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	  param in name "pduVersion" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hook for subclasses.
The default implementation of this method is to always return
false. Subclasses should redefine this method so that it returns
true when:
<ul><li>the variable is a leaf that is not instantiated,</li>
<li>or the variable is a leaf whose type cannot be returned by that
    version of the protocol (e.g. an Counter64 with SNMPv1).</li>
</ul>

@param rowOid The OID index of the row involved in the operation.

@param var Id of the variable we start from, looking for the next.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@param pduVersion Protocol version of the original request PDU.

@return true if the variable must be skipped by the get-next
        algorithm.
"
      end

      operation 3161858 "getNextOid"
	protected return_type class_ref 514306 // SnmpOid
	nparams 2
	  param inout name "oid" type class_ref 514306 // SnmpOid
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <CODE>SnmpOid</CODE> index of the row that follows
the given <CODE>oid</CODE> in the table. The given <CODE>
oid</CODE> does not need to be a valid row OID index.

<p>
@param oid The OID from which the search will begin.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return The next <CODE>SnmpOid</CODE> index.

@exception SnmpStatusException There is no index following the
    specified <CODE>oid</CODE> in the table.
"
      end

      operation 3161986 "getNextOid"
	protected return_type class_ref 514306 // SnmpOid
	nparams 1
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first entry OID registered in the table.

<p>
@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return The <CODE>SnmpOid</CODE> of the first entry in the table.

@exception SnmpStatusException If the table is empty.
"
      end

      operation 3162114 "getNextVarEntryId"
	abstract protected explicit_return_type "long"
	nparams 3
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "var" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 Abstract Protected Methods
 -------------------------------------------------------------------

This method is used internally and is implemented by the
<CODE>SnmpMibTable</CODE> subclasses generated by <CODE>mibgen</CODE>.

<p> Return the next OID arc corresponding to a readable columnar
    object in the underlying entry OBJECT-TYPE.</p>

<p>
@param rowOid The OID index of the row involved in the operation.

@param var Id of the variable we start from, looking for the next.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return The next columnar object id.

@exception SnmpStatusException If no id is found after the given id.

"
      end

      operation 3162242 "validateVarEntryId"
	abstract protected explicit_return_type "void"
	nparams 3
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "var" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used internally and is implemented by the
<CODE>SnmpMibTable</CODE> subclasses generated by <CODE>mibgen</CODE>.

<p>
@param rowOid The OID index of the row involved in the operation.

@param var The var we want to validate.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@exception SnmpStatusException If this id is not valid.

"
      end

      operation 3162370 "isReadableEntryId"
	abstract protected explicit_return_type "boolean"
	nparams 3
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "var" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method is used internally and is implemented by the
<CODE>SnmpMibTable</CODE> subclasses generated by <CODE>mibgen</CODE>.

<p>
@param rowOid The OID index of the row involved in the operation.

@param var The OID arc.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@exception SnmpStatusException If this id is not valid.

"
      end

      operation 3162498 "get"
	abstract protected explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used internally and is implemented by the
<CODE>SnmpMibTable</CODE> subclasses generated by <CODE>mibgen</CODE>.
"
      end

      operation 3162626 "check"
	abstract protected explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used internally and is implemented by the
<CODE>SnmpMibTable</CODE> subclasses generated by <CODE>mibgen</CODE>.
"
      end

      operation 3162754 "set"
	abstract protected explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used internally and is implemented by the
<CODE>SnmpMibTable</CODE> subclasses generated by <CODE>mibgen</CODE>.
"
      end

      operation 3162882 "getNextOid"
	package return_type class_ref 514306 // SnmpOid
	nparams 3
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "pos" explicit_type "int"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----------------------------------------------------------------------
 PACKAGE METHODS
 ----------------------------------------------------------------------

Get the <CODE>SnmpOid</CODE> index of the row that follows the
index extracted from the specified OID array.
Builds the SnmpOid corresponding to the row OID and calls
<code>getNextOid(oid,userData)</code>;

<p>
@param oid The OID array.

@param pos The position in the OID array at which the index starts.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return The next <CODE>SnmpOid</CODE>.

@exception SnmpStatusException There is no index following the
    specified one in the table.
"
      end

      operation 3163010 "checkRowStatusFail"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "errorStatus" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------

 Register an exception when checking the RowStatus variable

 ---------------------------------------------------------------------"
      end

      operation 3163138 "setRowStatusFail"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "errorStatus" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------

 Register an exception when checking the RowStatus variable

 ---------------------------------------------------------------------"
      end

      operation 3163266 "findHandlingNode"
	package explicit_return_type "void"
	nparams 4
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------

 Implements the method defined in SnmpMibNode.

 ---------------------------------------------------------------------"
      end

      operation 3163394 "findNextHandlingNode"
	package explicit_return_type "long"
	nparams 6
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "pos" explicit_type "int"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	  param inout name "checker" type class_ref 521602 // AcmChecker
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------

 Implements the method defined in SnmpMibNode. The algorithm is very
 largely inspired from the original getNext() method.

 ---------------------------------------------------------------------"
      end

      operation 3163522 "findNextAccessibleOid"
	private explicit_return_type "long"
	nparams 8
	  param inout name "entryoid" type class_ref 514306 // SnmpOid
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	  param inout name "checker" type class_ref 521602 // AcmChecker
	  param inout name "data" type class_ref 129538 // Object
	  param in name "var" explicit_type "long"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3163650 "validateOid"
	package explicit_return_type "void"
	nparams 2
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "pos" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate the specified OID.

<p>
@param oid The OID array.

@param pos The position in the array.

@exception SnmpStatusException If the validation fails.
"
      end

      operation 3163778 "sendNotification"
	private explicit_return_type "void"
	nparams 1
	  param inout name "notification" type class_ref 488706 // Notification
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----------------------------------------------------------------------
 PRIVATE METHODS
 ----------------------------------------------------------------------

Enable this <CODE>SnmpMibTable</CODE> to send a notification.

<p>
@param notification The notification to send.
"
      end

      operation 3163906 "sendNotification"
	private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 128130 // String
	  param in name "timeStamp" explicit_type "long"
	  param inout name "entry" type class_ref 129538 // Object
	  param inout name "name" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used by the SnmpMibTable to create and send a table
entry notification to all the listeners registered for this kind of
notification.

<p>
@param type The notification type.

@param timeStamp The notification emission date.

@param entry The entry object.
"
      end

      operation 3164034 "contains"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "oid" type class_ref 514306 // SnmpOid
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the entry identified by the given OID index
is contained in this table.
<p>
<b>Do not call this method directly</b>.
<p>
This method is provided has a hook for subclasses.
It is called when a get/set request is received in order to
determine whether the specified entry is contained in the table.
You may want to override this method if you need to perform e.g.
lazy evaluation of tables (you need to update the table when a
request is received) or if your table is virtual.
<p>
Note that this method is called by the Runtime from within a
synchronized block.

@param oid The index part of the OID we're looking for.
@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return <code>true</code> if the entry is found, <code>false</code>
        otherwise.

@since 1.5
"
      end

      operation 3164162 "findObject"
	private explicit_return_type "int"
	nparams 1
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look for the given oid in the OID table (tableoids) and returns
its position.

<p>
@param oid The OID we're looking for.

@return The position of the OID in the table. -1 if the given
        OID was not found.

"
      end

      operation 3164290 "getInsertionPoint"
	private explicit_return_type "int"
	nparams 2
	  param inout name "oid" type class_ref 514306 // SnmpOid
	  param inout name "fail" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Search the position at which the given oid should be inserted
in the OID table (tableoids).

<p>
@param oid The OID we would like to insert.

@param fail Tells whether a SnmpStatusException must be generated
            if the given OID is already present in the table.

@return The position at which the OID should be inserted in
        the table. When the OID is found, it returns the next
        position. Note that it is not valid to insert twice the
        same OID. This feature is only an optimization to improve
        the getNextOid() behaviour.

@exception SnmpStatusException if the OID is already present in the
           table and <code>fail</code> is <code>true</code>.

"
      end

      operation 3164418 "removeOid"
	private explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the OID located at the given position.

<p>
@param pos The position at which the OID to be removed is located.

"
      end

      operation 3164546 "insertOid"
	private explicit_return_type "void"
	nparams 2
	  param in name "pos" explicit_type "int"
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert an OID at the given position.

<p>
@param oid The OID to be inserted in the table
@param pos The position at which the OID to be added is located.

"
      end

      attribute 666114 "nodeId"
	protected explicit_type "int"
	init_value "1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ----------------------------------------------------------------------
 PROTECTED VARIABLES
 ----------------------------------------------------------------------

The id of the contained entry object.
@serial

"
      end

      classrelation 1027330 // theMib (<unidirectional association>)
	relation 1027330 --->
	  a role_name "theMib" protected
	    comment "
The MIB to which the metadata is linked.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1027330 // theMib (<unidirectional association>)
	  b parent class_ref 523650 // SnmpMib
      end

      attribute 666242 "creationEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<CODE>true</CODE> if remote creation of entries via SET operations
is enabled.
[default value is <CODE>false</CODE>]
@serial

"
      end

      classrelation 1027458 // factory (<unidirectional association>)
	relation 1027458 --->
	  a role_name "factory" init_value " null" protected
	    comment "
The entry factory

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1027458 // factory (<unidirectional association>)
	  b parent class_ref 524674 // SnmpTableEntryFactory
      end

      attribute 666370 "size"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ----------------------------------------------------------------------
 PRIVATE VARIABLES
 ----------------------------------------------------------------------

The number of elements in the table.
@serial

"
      end

      attribute 666498 "Delta"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The list of indexes.
@serial

    private Vector indexes= new Vector();

The list of OIDs.
@serial

 private Vector oids= new Vector();
"
      end

      attribute 666626 "tablecount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 666754 "tablesize"
	private explicit_type "int"
	init_value " Delta"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1027586 // tableoids (<unidirectional association>)
	relation 1027586 --->
	  a role_name "tableoids" multiplicity "[]" init_value " new SnmpOid[tablesize]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1027586 // tableoids (<unidirectional association>)
	  b parent class_ref 514306 // SnmpOid
      end

      classrelation 1027714 // entries (<unidirectional association>)
	relation 1027714 --->
	  a role_name "entries" init_value " new Vector<>()" const_relation private
	    comment "
The list of entries.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 1027714 // entries (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1027842 // entrynames (<unidirectional association>)
	relation 1027842 --->
	  a role_name "entrynames" init_value " new Vector<>()" const_relation private
	    comment "
The list of object names.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ObjectName> ${name}${value};
"
	    classrelation_ref 1027842 // entrynames (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1027970 // handbackTable (<unidirectional association>)
	relation 1027970 --->
	  a role_name "handbackTable" init_value "
            new Hashtable<>()" private
	    comment "
Callback handlers

 final Vector callbacks = new Vector();

Listener hashtable containing the hand-back objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NotificationListener, Vector<Object>> ${name}${value};
"
	    classrelation_ref 1027970 // handbackTable (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 1028098 // filterTable (<unidirectional association>)
	relation 1028098 --->
	  a role_name "filterTable" init_value " new Hashtable<>()" private
	    comment "
Listener hashtable containing the filter objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NotificationListener, Vector<NotificationFilter>> ${name}${value};
"
	    classrelation_ref 1028098 // filterTable (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      attribute 666882 "sequenceNumber"
	package explicit_type "long"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " PACKAGE VARIABLES
------------------

SNMP table sequence number.
The default value is set to 0.

"
      end
    end

    class 523522 "SnmpIndex"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a SNMP index.
An <CODE>SnmpIndex</CODE> is represented as a <CODE>Vector</CODE> of <CODE>SnmpOid</CODE>.
<P>
This class is used internally and by the classes generated by <CODE>mibgen</CODE>.
You should not need to use this class directly.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1024002 // <realization>
	relation 1024002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1024002 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 664706 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8712159739982192146L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3141890 "SnmpIndex"
	public explicit_return_type ""
	nparams 1
	  param inout name "oidList" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes an <CODE>SnmpIndex</CODE> using a vector of object identifiers.
<P>Following the RFC recommendations, every syntax that is used as a
table index should have an object identifier representation. There are
some guidelines on how to map the different syntaxes into an object identifier.
In the different <CODE>SnmpValue</CODE> classes provided, there is a <CODE>toOid</CODE> method to get
the object identifier of the value.

@param oidList The list of Object Identifiers.
"
      end

      operation 3142018 "SnmpIndex"
	public explicit_return_type ""
	nparams 1
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes an <CODE>SnmpIndex</CODE> using the specified Object Identifier.

@param oid The Object Identifier.
"
      end

      operation 3142146 "getNbComponents"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of Object Identifiers the index is made of.

@return The number of Object Identifiers.
"
      end

      operation 3142274 "getComponents"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpOid> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index as a vector of Object Identifiers.

@return The index as a vector.
"
      end

      operation 3142402 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "index" type class_ref 523522 // SnmpIndex
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two indexes for equality.

@param index The index to compare <CODE>this</CODE> with.

@return <CODE>true</CODE> if the two indexes are equal, <CODE>false</CODE> otherwise.
"
      end

      operation 3142530 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "index" type class_ref 523522 // SnmpIndex
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two indexes.

@param index The index to compare <CODE>this</CODE> with.

@return The value 0 if the two OID vectors have the same elements, another value otherwise.
"
      end

      operation 3142658 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a <CODE>String</CODE> representation of the index.
The different elements are separated by \"//\".

@return A string representation of the index.
"
      end

      classrelation 1024130 // oids (<unidirectional association>)
	relation 1024130 --->
	  a role_name "oids" init_value " new Vector<>()" private
	    comment " PRIVATE VARIABLES
------------------

The list of OIDs.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpOid> ${name}${value};
"
	    classrelation_ref 1024130 // oids (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 664834 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of elements in the index.
@serial

"
      end
    end

    class 523650 "SnmpMib"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Abstract class for representing an SNMP MIB.
<P>
When compiling a SNMP MIB, among all the classes generated by
<CODE>mibgen</CODE>, there is one which extends <CODE>SnmpMib</CODE>
for representing a whole MIB.
<BR>The class is used by the SNMP protocol adaptor as the entry point in
the MIB.

<p>This generated class can be subclassed in your code in order to
plug in your own specific behaviour.
</p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1024258 // <generalisation>
	relation 1024258 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1024258 // <generalisation>
	  b parent class_ref 522498 // SnmpMibAgent
      end

      classrelation 1024386 // <realization>
	relation 1024386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1024386 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 3142786 "SnmpMib"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
Initializes the OID tree.
"
      end

      operation 3142914 "getGroupOid"
	protected return_type class_ref 128130 // String
	nparams 2
	  param inout name "groupName" type class_ref 128130 // String
	  param inout name "defaultOid" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------
 POLYMORHIC METHODS
 --------------------------------------------------------------------

<p>
This callback should return the OID associated to the group
identified by the given <code>groupName</code>.
</p>

<p>
This method is provided as a hook to plug-in some custom
specific behavior. Although doing so is discouraged you might
want to subclass this method in order to store & provide more metadata
information (mapping OID <-> symbolic name) within the agent,
or to \"change\" the root of the MIB OID by prefixing the
defaultOid by an application dependant OID string, for instance.
</p>

<p>
The default implementation of this method is to return the given
<code>defaultOid</code>
</p>

@param groupName   The java-ized name of the SNMP group.
@param defaultOid  The OID defined in the MIB for that group
                   (in dot notation).

@return The OID of the group identified by <code>groupName</code>,
        in dot-notation.
"
      end

      operation 3143042 "getGroupObjectName"
	protected return_type class_ref 485506 // ObjectName
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "oid" type class_ref 128130 // String
	  param inout name "defaultName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 499330 // MalformedObjectNameException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
This callback should return the ObjectName associated to the
group identified by the given <code>groupName</code>.
</p>

<p>
This method is provided as a hook to plug-in some custom
specific behavior. You might want to override this method
in order to provide a different object naming scheme than
that proposed by default by <code>mibgen</code>.
</p>

<p>
This method is only meaningful if the MIB is registered
in the MBeanServer, otherwise, it will not be called.
</p>

<p>
The default implementation of this method is to return an ObjectName
built from the given <code>defaultName</code>.
</p>

@param name  The java-ized name of the SNMP group.
@param oid   The OID returned by getGroupOid() - in dot notation.
@param defaultName The name by default generated by <code>
                   mibgen</code>

@return The ObjectName of the group identified by <code>name</code>
"
      end

      operation 3143170 "registerGroupNode"
	protected explicit_return_type "void"
	nparams 6
	  param inout name "groupName" type class_ref 128130 // String
	  param inout name "groupOid" type class_ref 128130 // String
	  param inout name "groupObjName" type class_ref 485506 // ObjectName
	  param inout name "node" type class_ref 523778 // SnmpMibNode
	  param inout name "group" type class_ref 129538 // Object
	  param inout name "server" type class_ref 485122 // MBeanServer
	nexceptions 4
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Register an SNMP group and its metadata node in the MIB.
</p>

<p>
This method is provided as a hook to plug-in some custom
specific behavior. You might want to override this method
if you want to set special links between the MBean, its metadata
node, its OID or ObjectName etc..
</p>

<p>
If the MIB is not registered in the MBeanServer, the <code>
server</code> and <code>groupObjName</code> parameters will be
<code>null</code>.<br>
If the given group MBean is not <code>null</code>, and if the
<code>server</code> and <code>groupObjName</code> parameters are
not null, then this method will also automatically register the
group MBean with the given MBeanServer <code>server</code>.
</p>

@param groupName  The java-ized name of the SNMP group.
@param groupOid   The OID as returned by getGroupOid() - in dot
                  notation.
@param groupObjName The ObjectName as returned by getGroupObjectName().
                  This parameter may be <code>null</code> if the
                  MIB is not registered in the MBeanServer.
@param node       The metadata node, as returned by the metadata
                  factory method for this group.
@param group      The MBean for this group, as returned by the
                  MBean factory method for this group.
@param server     The MBeanServer in which the groups are to be
                  registered. This parameter will be <code>null</code>
                  if the MIB is not registered, otherwise it is a
                  reference to the MBeanServer in which the MIB is
                  registered.

"
      end

      operation 3143298 "registerTableMeta"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "table" type class_ref 523394 // SnmpMibTable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Register an SNMP Table metadata node in the MIB.
</p>

<p>
<b><i>
This method is used internally and you should never need to
call it directly.</i></b><br> It is used to establish the link
between an SNMP table metadata node and its bean-like counterpart.
<br>
The group metadata nodes will create and register their
underlying table metadata nodes in the MIB using this
method. <br>
The metadata nodes will be later retrieved from the MIB by the
bean-like table objects using the getRegisterTableMeta() method.
</p>

@param name      The java-ized name of the SNMP table.
@param table     The SNMP table metadata node - usually this
                 corresponds to a <code>mibgen</code> generated
                 object.
"
      end

      operation 3143426 "getRegisteredTableMeta"
	abstract public return_type class_ref 523394 // SnmpMibTable
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a registered SNMP Table metadata node.

<p><b><i>
This method is used internally and you should never need to
call it directly.
</i></b></p>

"
      end

      operation 3143554 "get"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " --------------------------------------------------------------------
 PUBLIC METHODS
 --------------------------------------------------------------------

Processes a <CODE>get</CODE> operation.


 Implements the method defined in SnmpMibAgent. See SnmpMibAgent
 for java-doc
"
      end

      operation 3143682 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>set</CODE> operation.


 Implements the method defined in SnmpMibAgent. See SnmpMibAgent
 for java-doc
"
      end

      operation 3143810 "check"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Checks if a <CODE>set</CODE> operation can be performed.
If the operation cannot be performed, the method will raise a
<CODE>SnmpStatusException</CODE>.


 Implements the method defined in SnmpMibAgent. See SnmpMibAgent
 for java-doc
"
      end

      operation 3143938 "getNext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>getNext</CODE> operation.


 Implements the method defined in SnmpMibAgent. See SnmpMibAgent
 for java-doc
"
      end

      operation 3144066 "getBulk"
	public explicit_return_type "void"
	nparams 3
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	  param in name "nonRepeat" explicit_type "int"
	  param in name "maxRepeat" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Processes a <CODE>getBulk</CODE> operation.
The method implements the <CODE>getBulk</CODE> operation by calling
appropriately the <CODE>getNext</CODE> method.


 Implements the method defined in SnmpMibAgent. See SnmpMibAgent
 for java-doc
"
      end

      operation 3144194 "getRootOid"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the root object identifier of the MIB.
<P>In order to be accurate, the method should be called once the
MIB is fully initialized (that is, after a call to <CODE>init</CODE>
or <CODE>preRegister</CODE>).

@return The root object identifier.
"
      end

      operation 3144322 "getHandlers"
	private return_type class_ref 523906 // SnmpRequestTree
	nparams 4
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	  param inout name "createflag" explicit_type "boolean"
	  param inout name "atomic" explicit_type "boolean"
	  param in name "type" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------
 PRIVATE METHODS
---------------------------------------------------------------------

This method builds the temporary request-tree that will be used to
perform the SNMP request associated with the given vector of varbinds
`list'.

@param req The SnmpMibRequest object holding the varbind list
            concerning this MIB.
@param createflag Indicates whether the operation allow for creation
       of new instances (ie: it is a SET).
@param atomic Indicates whether the operation is atomic or not.
@param type Request type (from SnmpDefinitions).

@return The request-tree where the original varbind list has been
        dispatched to the appropriate nodes.
"
      end

      operation 3144450 "getGetNextHandlers"
	private return_type class_ref 523906 // SnmpRequestTree
	nparams 1
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method builds the temporary request-tree that will be used to
perform the SNMP GET-NEXT request associated with the given vector
of varbinds `list'.

@param req The SnmpMibRequest object holding the varbind list
            concerning this MIB.

@return The request-tree where the original varbind list has been
        dispatched to the appropriate nodes, and where the original
        OIDs have been replaced with the correct \"next\" OID.
"
      end

      classrelation 1024514 // root (<unidirectional association>)
	relation 1024514 --->
	  a role_name "root" protected
	    comment " --------------------------------------------------------------------
 PROTECTED VARIABLES
 --------------------------------------------------------------------

The top element in the Mib tree.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1024514 // root (<unidirectional association>)
	  b parent class_ref 524034 // SnmpMibOid
      end

      attribute 664962 "rootOid"
	private explicit_type "long"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " --------------------------------------------------------------------
 PRIVATE VARIABLES
 --------------------------------------------------------------------

The root object identifier of the MIB.

"
      end
    end

    class 523778 "SnmpMibNode"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <CODE>SnmpMibNode</CODE> class represents a node in an SNMP MIB.
<P>
This class is used internally and by the class generated by
<CODE>mibgen</CODE>.
You should not need to use this class directly.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1024642 // <realization>
	relation 1024642 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1024642 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 3144578 "getNextVarId"
	public explicit_return_type "long"
	nparams 2
	  param in name "id" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------
 PUBLIC METHODS
----------------------------------------------------------------------

Get the next OID arc corresponding to a readable scalar variable,
a branch leading to a subgroub, or a table.

@param id Id we start from looking for the next.
@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@return The next id in this group.

@exception SnmpStatusException If no id is found after the given id.
"
      end

      operation 3144706 "getNextVarId"
	public explicit_return_type "long"
	nparams 3
	  param in name "id" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	  param in name "pduVersion" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next OID arc corresponding to a readable scalar variable,
a branch leading to a subgroub, or a table, possibly skipping over
those arcs that must not or cannot be returned.

Calls {@link #getNextVarId(long,java.lang.Object)} until
{@link #skipVariable(long,java.lang.Object,int)} returns false.

@param id Id we start from looking for the next.
@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.
@param pduVersion Protocol version of the original request PDU.

@return The next id in this group which can be returned using
        the given PDU's protocol version.

@exception SnmpStatusException If no id is found after the given id.
"
      end

      operation 3144834 "skipVariable"
	protected explicit_return_type "boolean"
	nparams 3
	  param in name "id" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	  param in name "pduVersion" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hook for subclasses.
The default implementation of this method is to always return
false. Subclasses should redefine this method so that it returns
true when:
<ul><li>the variable is a leaf that is not instantiated,</li>
<li>or the variable is a leaf whose type cannot be returned by that
    version of the protocol (e.g. an Counter64 with SNMPv1).</li>
</ul>

@param id Id we start from looking for the next.
@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.
@param pduVersion Protocol version of the original request PDU.

@return true if the variable must be skipped by the get-next
        algorithm.
"
      end

      operation 3144962 "findHandlingNode"
	package explicit_return_type "void"
	nparams 4
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the node which handles a varbind, and register it in the
SnmpRequestTree. This method is a pure internal method. You should
never try to call it directly.

@param varbind  The varbind to be handled

@param oid      The OID array extracted from the varbind

@param depth    The depth reached in the OID at this step of the
                processing.

@param handlers The Hashtable in which the varbind will be registered
                with its handling node. This hashtable contains
                <CODE>SnmpRequestTree.Handler</CODE> items.

@exception SnmpStatusException No handling node was found.
"
      end

      operation 3145090 "findNextHandlingNode"
	package explicit_return_type "long"
	nparams 6
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "pos" explicit_type "int"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	  param inout name "checker" type class_ref 521602 // AcmChecker
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the node which handles the leaf that immediately follows the
given varbind OID, and register the it in the SnmpRequestTree.
This method is a pure internal method. You should never try to call
it directly.

@param varbind  The varbind to be handled

@param oid      The OID array extracted from the varbind

@param depth    The depth reached in the OID at this step of the
                processing.

@param handlers The Hashtable in which the varbind will be registered
                with its handling node. This hashtable contains
                SnmpRequestTree.Handler items.

@return The SnmpOid of the next leaf.

@exception SnmpStatusException No handling node was found.
"
      end

      operation 3145218 "get"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>get</CODE> operation.

<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3145346 "set"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>set</CODE> operation.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3145474 "check"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>check</CODE> operation.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources, or if you need to implement some consistency
checks between the different values provided in the varbind list.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3145602 "sort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the specified integer array.

@param array An integer array.
"
      end

      operation 3145730 "getRootOid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Integer> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the root OID of the MIB.
"
      end

      operation 3145858 "QuickSort"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "lo0" explicit_type "int"
	  param in name "hi0" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------
 PACKAGE METHODS
----------------------------------------------------------------------

This is a generic version of C.A.R Hoare's Quick Sort
algorithm.  This will handle arrays that are already
sorted, and arrays with duplicate keys.

If you think of a one dimensional array as going from
the lowest index on the left to the highest index on the right
then the parameters to this function are lowest index or
left and highest index or right.  The first time you call
this function it will be with the parameters 0, a.length - 1.

@param a An integer array.
@param lo0 Left boundary of array partition.
@param hi0 Right boundary of array partition.
"
      end

      operation 3145986 "getNextIdentifier"
	class_operation protected explicit_return_type "int"
	nparams 2
	  param inout name "table" explicit_type "int"
	multiplicity "[]"
	  param in name "value" explicit_type "long"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------
 PROTECTED METHODS
----------------------------------------------------------------------

This will give the first element greater than <CODE>value</CODE>
in a sorted array.
If there is no element of the array greater than <CODE>value</CODE>,
the method will throw a <CODE>SnmpStatusException</CODE>.

@param table A sorted integer array.

@param value The greatest value.

@exception SnmpStatusException If there is no element greater than
    <CODE>value</CODE>.
"
      end

      operation 3146114 "swap"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "a" explicit_type "int"
	multiplicity "[]"
	  param in name "i" explicit_type "int"
	  param in name "j" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------
 PRIVATE METHODS
----------------------------------------------------------------------"
      end

      attribute 665090 "varList"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "----------------------------------------------------------------------
 PROTECTED VARIABLES
----------------------------------------------------------------------

Contains the list of variable identifiers.

"
      end
    end

    class 523906 "SnmpRequestTree"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "  XXX: things to do: use SnmpOid rather than `instance' for future
       evolutions.
  XXX: Maybe use hashlists rather than vectors for entries?
       => in that case, the key should be SnmpOid.toString()


This class is used to register varbinds from a SNMP varbind list with
the SnmpMibNode responsible for handling the requests concerning that
varbind.
This class holds a hashtable of Handler nodes, whith the involved
SnmpMibNode as a key.
When the involved SnmpMibNode is a group, the sublist of varbind is
directly stored in the Handler node.
When the involved SnmpMibNode is a table, the sublist is stored in a
sorted array indexed by the OID of the entry involved.
"
      operation 3164674 "SnmpRequestTree"
	package explicit_return_type ""
	nparams 3
	  param inout name "req" type class_ref 522114 // SnmpMibRequest
	  param inout name "creationflag" explicit_type "boolean"
	  param in name "pdutype" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor:
 @param  req The SnmpMibRequest that will be segmented in this
         tree. It holds the original varbind vector passed
         by the SnmpSubRequestHandler to this MIB. This
         varbind vector is used to retrieve the \"real\"
         position of a varbind in the vector. There is no other easy
         way to do this - since as a result of the segmentation the
         original positions will be lost.
 @param  creationflag indicates whether the operation involved
         allows for entry creation (ie: it is a SET request).
 @param  pdutype indicates the type of the request PDU as defined
         in SnmpDefinitions
"
      end

      operation 3164802 "mapSetException"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "errorStatus" explicit_type "int"
	  param in name "version" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3164930 "mapGetException"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "errorStatus" explicit_type "int"
	  param in name "version" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 524802 "Enum"
	visibility package 
	nactuals 1
	actual class class_ref 185986 // Enumeration
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1028226 // <realization>
	  relation 1028226 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 1028226 // <realization>
	    b parent class_ref 185986 // Enumeration
	end

	operation 3165058 "Enum"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "hlist" type class_ref 523906 // SnmpRequestTree
	    param inout name "h" type class_ref 524930 // Handler
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1028354 // handler (<unidirectional association>)
	  relation 1028354 --->
	    a role_name "handler" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1028354 // handler (<unidirectional association>)
	    b parent class_ref 524930 // Handler
	end

	classrelation 1028482 // hlist (<unidirectional association>)
	  relation 1028482 --->
	    a role_name "hlist" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1028482 // hlist (<unidirectional association>)
	    b parent class_ref 523906 // SnmpRequestTree
	end

	attribute 667010 "entry"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 667138 "iter"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 667266 "size"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 3165186 "hasMoreElements"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3165314 "nextElement"
	  public return_type class_ref 523266 // SnmpMibSubRequest
	  nparams 0
	  nexceptions 1
	    exception class_ref 163842 // NoSuchElementException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 524930 "Handler"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1029250 // meta (<unidirectional association>)
	  relation 1029250 --->
	    a role_name "meta" package
	      comment " The meta  which handles the sublist."
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1029250 // meta (<unidirectional association>)
	    b parent class_ref 523778 // SnmpMibNode
	end

	attribute 667778 "depth"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " The depth of the meta node."
	end

	classrelation 1029378 // sublist (<unidirectional association>)
	  relation 1029378 --->
	    a role_name "sublist" package
	      comment " The sublist of varbinds to be handled."
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpVarBind> ${name}${value};
"
	      classrelation_ref 1029378 // sublist (<unidirectional association>)
	    b parent class_ref 141442 // Vector
	end

	classrelation 1029506 // entryoids (<unidirectional association>)
	  relation 1029506 --->
	    a role_name "entryoids" multiplicity "[]" init_value " null" package
	      comment " List        entryoids;  // Sorted array of entry oids
 List        entrylists; // Sorted array of entry lists
 List        isentrynew; // Sorted array of booleans
 Sorted array of entry oids"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1029506 // entryoids (<unidirectional association>)
	    b parent class_ref 514306 // SnmpOid
	end

	classrelation 1029634 // entrylists (<unidirectional association>)
	  relation 1029634 --->
	    a role_name "entrylists" multiplicity "[]" init_value " null" package
	      comment " Sorted array of entry lists"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpVarBind>${multiplicity} ${name}${value};
"
	      classrelation_ref 1029634 // entrylists (<unidirectional association>)
	    b parent class_ref 141442 // Vector
	end

	attribute 667906 "isentrynew"
	  package explicit_type "boolean"
	  multiplicity "[]"
	  init_value " null"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Sorted array of booleans"
	end

	classrelation 1029762 // rowstatus (<unidirectional association>)
	  relation 1029762 --->
	    a role_name "rowstatus" multiplicity "[]" init_value " null" package
	      comment " RowStatus varbind, if any"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1029762 // rowstatus (<unidirectional association>)
	    b parent class_ref 516738 // SnmpVarBind
	end

	attribute 668034 "entrycount"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 668162 "entrysize"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 668290 "type"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " request PDU type as defined in SnmpDefinitions"
	end

	attribute 668418 "Delta"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 3168258 "Handler"
	  public explicit_return_type ""
	  nparams 1
	    param in name "pduType" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3168386 "addVarbind"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a varbind in this node sublist.
"
	end

	operation 3168514 "add"
	  package explicit_return_type "void"
	  nparams 5
	    param in name "pos" explicit_type "int"
	    param inout name "oid" type class_ref 514306 // SnmpOid
	    param inout name "v" type class_ref 141442 // Vector
	    param inout name "isnew" explicit_type "boolean"
	    param inout name "statusvb" type class_ref 516738 // SnmpVarBind
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<SnmpVarBind> ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment "register an entry for the given oid at the given position with
the given sublist.
"
	end

	operation 3168642 "addVarbind"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "varbind" type class_ref 516738 // SnmpVarBind
	    param inout name "entryoid" type class_ref 514306 // SnmpOid
	    param inout name "isnew" explicit_type "boolean"
	    param inout name "statusvb" type class_ref 516738 // SnmpVarBind
	  nexceptions 1
	    exception class_ref 514434 // SnmpStatusException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3168770 "getSubReqCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3168898 "getSubList"
	  public return_type class_ref 141442 // Vector
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3169026 "getEntryPos"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "entryoid" type class_ref 514306 // SnmpOid
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3169154 "getEntryOid"
	  public return_type class_ref 514306 // SnmpOid
	  nparams 1
	    param in name "pos" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3169282 "isNewEntry"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "pos" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3169410 "getRowStatusVarBind"
	  public return_type class_ref 516738 // SnmpVarBind
	  nparams 1
	    param in name "pos" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3169538 "getEntrySubList"
	  public return_type class_ref 141442 // Vector
	  nparams 1
	    param in name "pos" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3169666 "getEntryOids"
	  public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpOid> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3169794 "getEntryCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 525058 "SnmpMibSubRequestImpl"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1028610 // <realization>
	  relation 1028610 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1028610 // <realization>
	    b parent class_ref 523266 // SnmpMibSubRequest
	end

	operation 3165442 "SnmpMibSubRequestImpl"
	  package explicit_return_type ""
	  nparams 6
	    param inout name "global" type class_ref 522114 // SnmpMibRequest
	    param inout name "sublist" type class_ref 141442 // Vector
	    param inout name "entryoid" type class_ref 514306 // SnmpOid
	    param inout name "isnew" explicit_type "boolean"
	    param inout name "getnextflag" explicit_type "boolean"
	    param inout name "rs" type class_ref 516738 // SnmpVarBind
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<SnmpVarBind> ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1028738 // varbinds (<unidirectional association>)
	  relation 1028738 --->
	    a role_name "varbinds" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpVarBind> ${name}${value};
"
	      classrelation_ref 1028738 // varbinds (<unidirectional association>)
	    b parent class_ref 141442 // Vector
	end

	classrelation 1028866 // global (<unidirectional association>)
	  relation 1028866 --->
	    a role_name "global" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1028866 // global (<unidirectional association>)
	    b parent class_ref 522114 // SnmpMibRequest
	end

	attribute 667394 "version"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 667522 "isnew"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1028994 // entryoid (<unidirectional association>)
	  relation 1028994 --->
	    a role_name "entryoid" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1028994 // entryoid (<unidirectional association>)
	    b parent class_ref 514306 // SnmpOid
	end

	attribute 667650 "getnextflag"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1029122 // statusvb (<unidirectional association>)
	  relation 1029122 --->
	    a role_name "statusvb" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1029122 // statusvb (<unidirectional association>)
	    b parent class_ref 516738 // SnmpVarBind
	end

	operation 3165570 "getElements"
	  public return_type class_ref 185986 // Enumeration
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3165698 "getSubList"
	  public return_type class_ref 141442 // Vector
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3165826 "getSize"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3165954 "addVarBind"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166082 "isNewEntry"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibSubRequest interface.
 See SnmpMibSubRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166210 "getEntryOid"
	  public return_type class_ref 514306 // SnmpOid
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibSubRequest interface.
 See SnmpMibSubRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166338 "getVarIndex"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166466 "getUserData"
	  public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166594 "registerGetException"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "var" type class_ref 516738 // SnmpVarBind
	    param inout name "exception" type class_ref 514434 // SnmpStatusException
	  nexceptions 1
	    exception class_ref 514434 // SnmpStatusException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibSubRequest interface.
 See SnmpMibSubRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166722 "registerSetException"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "var" type class_ref 516738 // SnmpVarBind
	    param inout name "exception" type class_ref 514434 // SnmpStatusException
	  nexceptions 1
	    exception class_ref 514434 // SnmpStatusException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibSubRequest interface.
 See SnmpMibSubRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166850 "registerCheckException"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "var" type class_ref 516738 // SnmpVarBind
	    param inout name "exception" type class_ref 514434 // SnmpStatusException
	  nexceptions 1
	    exception class_ref 514434 // SnmpStatusException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibSubRequest interface.
 See SnmpMibSubRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3166978 "getVersion"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " -------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------"
	end

	operation 3167106 "getRowStatusVarBind"
	  public return_type class_ref 516738 // SnmpVarBind
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3167234 "getPdu"
	  public return_type class_ref 513538 // SnmpPdu
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3167362 "getRequestPduVersion"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3167490 "getEngine"
	  public return_type class_ref 514818 // SnmpEngine
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3167618 "getPrincipal"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3167746 "getSecurityLevel"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3167874 "getSecurityModel"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3168002 "getContextName"
	  public explicit_return_type "byte"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3168130 "getAccessContextName"
	  public explicit_return_type "byte"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 3169922 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
-------------------------------------------------------------------
 Public interface
-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
 Returns the contextual object containing user-data allocated
 through the SnmpUserDataFactory for this request.
-------------------------------------------------------------------"
      end

      operation 3170050 "isCreationAllowed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Tells whether creation of new entries is allowed with respect
 to the operation involved (GET=>false/SET=>true)
-------------------------------------------------------------------"
      end

      operation 3170178 "isSetRequest"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Tells whether we are currently processing a SET request (check/set)
-------------------------------------------------------------------"
      end

      operation 3170306 "getVersion"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Returns the protocol version in which the original request is
 evaluated.
-------------------------------------------------------------------"
      end

      operation 3170434 "getRequestPduVersion"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Returns the actual protocol version of the request PDU.
-------------------------------------------------------------------"
      end

      operation 3170562 "getMetaNode"
	public return_type class_ref 523778 // SnmpMibNode
	nparams 1
	  param inout name "handler" type class_ref 524930 // Handler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Returns the SnmpMibNode associated with the given handler
-------------------------------------------------------------------"
      end

      operation 3170690 "getOidDepth"
	public explicit_return_type "int"
	nparams 1
	  param inout name "handler" type class_ref 524930 // Handler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Indicates the depth of the arc in the OID that identifies the
 SnmpMibNode associated with the given handler
-------------------------------------------------------------------"
      end

      operation 3170818 "getSubRequests"
	public return_type class_ref 185986 // Enumeration
	nparams 1
	  param inout name "handler" type class_ref 524930 // Handler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpMibSubRequest> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 returns an enumeration of the SnmpMibSubRequest's to be invoked on
 the SnmpMibNode associated with a given Handler node.
 If this node is a group, there will be a single subrequest.
 If it is a table, there will be one subrequest per entry involved.
-------------------------------------------------------------------"
      end

      operation 3170946 "getHandlers"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Handler> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 returns an enumeration of the Handlers stored in the Hashtable.
-------------------------------------------------------------------"
      end

      operation 3171074 "add"
	public explicit_return_type "void"
	nparams 3
	  param inout name "meta" type class_ref 523778 // SnmpMibNode
	  param in name "depth" explicit_type "int"
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 adds a varbind to a handler node sublist
-------------------------------------------------------------------"
      end

      operation 3171202 "add"
	public explicit_return_type "void"
	nparams 5
	  param inout name "meta" type class_ref 523778 // SnmpMibNode
	  param in name "depth" explicit_type "int"
	  param inout name "entryoid" type class_ref 514306 // SnmpOid
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "isnew" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 adds an entry varbind to a handler node sublist
-------------------------------------------------------------------"
      end

      operation 3171330 "add"
	public explicit_return_type "void"
	nparams 6
	  param inout name "meta" type class_ref 523778 // SnmpMibNode
	  param in name "depth" explicit_type "int"
	  param inout name "entryoid" type class_ref 514306 // SnmpOid
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "isnew" explicit_type "boolean"
	  param inout name "statusvb" type class_ref 516738 // SnmpVarBind
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 adds an entry varbind to a handler node sublist - specifying the
 varbind which holds the row status
-------------------------------------------------------------------"
      end

      operation 3171458 "setPduType"
	package explicit_return_type "void"
	nparams 1
	  param in name "pduType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
-------------------------------------------------------------------
 Protected interface
-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
 Type of the request (see SnmpDefinitions)
-------------------------------------------------------------------"
      end

      operation 3171586 "setGetNextFlag"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 We deal with a GET-NEXT request
-------------------------------------------------------------------"
      end

      operation 3171714 "switchCreationFlag"
	package explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Tell whether creation is allowed.
-------------------------------------------------------------------"
      end

      operation 3171842 "getSubRequest"
	package return_type class_ref 523266 // SnmpMibSubRequest
	nparams 1
	  param inout name "handler" type class_ref 524930 // Handler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Returns the subrequest handled by the SnmpMibNode itself
 (in principle, only for Groups)
-------------------------------------------------------------------"
      end

      operation 3171970 "getSubRequest"
	package return_type class_ref 523266 // SnmpMibSubRequest
	nparams 2
	  param inout name "handler" type class_ref 524930 // Handler
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Returns the subrequest associated with the entry identified by
 the given entry (only for tables)
-------------------------------------------------------------------"
      end

      operation 3172098 "getSubRequest"
	package return_type class_ref 523266 // SnmpMibSubRequest
	nparams 2
	  param inout name "handler" type class_ref 524930 // Handler
	  param in name "entry" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Returns the subrequest associated with the entry identified by
 the given entry (only for tables). The `entry' parameter is an
 index relative to the position of the entry in the handler sublist.
-------------------------------------------------------------------"
      end

      operation 3172226 "put"
	private explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "handler" type class_ref 524930 // Handler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
-------------------------------------------------------------------
 Private section
-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
 stores a handler node in the Hashtable
-------------------------------------------------------------------"
      end

      operation 3172354 "get"
	private return_type class_ref 524930 // Handler
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 finds a handler node in the Hashtable
-------------------------------------------------------------------"
      end

      operation 3172482 "findOid"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	  param in name "count" explicit_type "int"
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Search for the given oid in `oids'. If none is found, returns -1
 otherwise, returns the index at which the oid is located.
-------------------------------------------------------------------"
      end

      operation 3172610 "getInsertionPoint"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "oids" type class_ref 514306 // SnmpOid
	multiplicity "[]"
	  param in name "count" explicit_type "int"
	  param inout name "oid" type class_ref 514306 // SnmpOid
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 Return the index at which the given oid should be inserted in the
 `oids' array.
-------------------------------------------------------------------"
      end

      operation 3172738 "registerNode"
	private explicit_return_type "void"
	nparams 6
	  param inout name "meta" type class_ref 523778 // SnmpMibNode
	  param in name "depth" explicit_type "int"
	  param inout name "entryoid" type class_ref 514306 // SnmpOid
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "isnew" explicit_type "boolean"
	  param inout name "statusvb" type class_ref 516738 // SnmpVarBind
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------
 adds a varbind in a handler node sublist
-------------------------------------------------------------------"
      end

      classrelation 1029890 // hashtable (<unidirectional association>)
	relation 1029890 --->
	  a role_name "hashtable" init_value " null" private
	    comment "-------------------------------------------------------------------
 private variables
-------------------------------------------------------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Handler> ${name}${value};
"
	    classrelation_ref 1029890 // hashtable (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 1030018 // request (<unidirectional association>)
	relation 1030018 --->
	  a role_name "request" init_value " null" private
	    comment " Hashtable of Handler objects
 The original list of varbinds"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1030018 // request (<unidirectional association>)
	  b parent class_ref 522114 // SnmpMibRequest
      end

      attribute 668546 "version"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The protocol version"
      end

      attribute 668674 "creationflag"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Does the operation allow"
      end

      attribute 668802 "getnextflag"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " creation of entries
 Does the operation allow"
      end

      attribute 668930 "type"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " creation of entries
 Request PDU type as defined"
      end

      attribute 669058 "setreqflag"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " in SnmpDefinitions
 True if we're processing a"
      end
    end

    class 524034 "SnmpMibOid"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a node in an SNMP MIB which is neither a group nor a variable.
This class defines a list of sub-nodes and the methods that allow to
manipulate the sub-nodes.
<P>
This class is used internally and by the class generated by
<CODE>mibgen</CODE>.
You should not need to use this class directly.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1025026 // <generalisation>
	relation 1025026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1025026 // <generalisation>
	  b parent class_ref 523778 // SnmpMibNode
      end

      classrelation 1025154 // <realization>
	relation 1025154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1025154 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 665218 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5012254771107446812L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3147138 "SnmpMibOid"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.
"
      end

      operation 3147266 "get"
	public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " PUBLIC METHODS
---------------

Generic handling of the <CODE>get</CODE> operation.

<p> This method should be overridden in subclasses.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException The default implementation (if not
           overridden) is to generate a SnmpStatusException.
"
      end

      operation 3147394 "set"
	public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generic handling of the <CODE>set</CODE> operation.

<p> This method should be overridden in subclasses.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException The default implementation (if not
           overridden) is to generate a SnmpStatusException.
"
      end

      operation 3147522 "check"
	public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generic handling of the <CODE>check</CODE> operation.

<p> This method should be overridden in subclasses.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException The default implementation (if not
           overridden) is to generate a SnmpStatusException.
"
      end

      operation 3147650 "findHandlingNode"
	package explicit_return_type "void"
	nparams 4
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------

 Implements the method defined in SnmpMibNode.

 ---------------------------------------------------------------------
"
      end

      operation 3147778 "findNextHandlingNode"
	package explicit_return_type "long"
	nparams 6
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "pos" explicit_type "int"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	  param inout name "checker" type class_ref 521602 // AcmChecker
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------------------------------------

 Implements the method defined in SnmpMibNode.

 ---------------------------------------------------------------------
"
      end

      operation 3147906 "getRootOid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Integer> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Computes the root OID of the MIB.
"
      end

      operation 3148034 "registerNode"
	public explicit_return_type "void"
	nparams 2
	  param inout name "oidString" type class_ref 128130 // String
	  param inout name "node" type class_ref 523778 // SnmpMibNode
	nexceptions 1
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a specific node in the tree.
"
      end

      operation 3148162 "registerNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "cursor" explicit_type "int"
	  param inout name "node" type class_ref 523778 // SnmpMibNode
	nexceptions 1
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PROTECTED METHODS
------------------

Registers a specific node in the tree.
"
      end

      operation 3148290 "exportChildren"
	package explicit_return_type "void"
	nparams 1
	  param inout name "brother" type class_ref 524034 // SnmpMibOid
	nexceptions 1
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Export this node's children to a brother node that will replace
this node in the OID tree.
This method is a patch that fixes the problem of registering
a subnode before its father node.

"
      end

      operation 3148418 "getChild"
	package return_type class_ref 523778 // SnmpMibNode
	nparams 1
	  param in name "id" explicit_type "long"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PRIVATE METHODS
----------------"
      end

      operation 3148546 "retrieveIndex"
	private explicit_return_type "int"
	nparams 1
	  param in name "val" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3148674 "getInsertAt"
	private explicit_return_type "int"
	nparams 1
	  param in name "val" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 524418 "NonSyncVector"
	visibility package 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 141442 // Vector
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	comment " We will never serialize this"
	classrelation 1025410 // <realization>
	  relation 1025410 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 1025410 // <realization>
	    b parent class_ref 141442 // Vector
	end

	operation 3148802 "NonSyncVector"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3148930 "addNonSyncElement"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "obj" explicit_type "E"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3149058 "elementAtNonSync"
	  cpp_inline package explicit_return_type "E"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end

      classrelation 1025282 // children (<unidirectional association>)
	relation 1025282 --->
	  a role_name "children" init_value " new NonSyncVector<>(1)" private
	    comment " PRIVATE VARIABLES
------------------

Contains the list of sub nodes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpMibNode> ${name}${value};
"
	    classrelation_ref 1025282 // children (<unidirectional association>)
	  b parent class_ref 524418 // NonSyncVector
      end

      attribute 665346 "nbChildren"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of sub nodes.

"
      end
    end

    class 524162 "SnmpMibEntry"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a node in an SNMP MIB which corresponds to a table entry
meta node.
<P>
This class is used by the class generated by <CODE>mibgen</CODE>.
You should not need to use this class directly.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1024770 // <generalisation>
	relation 1024770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1024770 // <generalisation>
	  b parent class_ref 523778 // SnmpMibNode
      end

      classrelation 1024898 // <realization>
	relation 1024898 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1024898 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 3146242 "isVariable"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "arc" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether the given arc identifies a variable (scalar object) in
this entry.

@param arc An OID arc.

@return <CODE>true</CODE> if `arc' leads to a variable.
"
      end

      operation 3146370 "isReadable"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "arc" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether the given arc identifies a readable scalar object in
this entry.

@param arc An OID arc.

@return <CODE>true</CODE> if `arc' leads to a readable variable.
"
      end

      operation 3146498 "getNextVarId"
	public explicit_return_type "long"
	nparams 2
	  param in name "id" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next OID arc corresponding to a readable scalar variable.

"
      end

      operation 3146626 "validateVarId"
	public explicit_return_type "void"
	nparams 2
	  param in name "arc" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the given OID arc identifies a variable (columnar
object).

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@exception If the given `arc' does not identify any variable in this
   group, throws an SnmpStatusException.
"
      end

      operation 3146754 "get"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>get</CODE> operation.
<p>The actual implementation of this method will be generated
by mibgen. Usually, this implementation only delegates the
job to some other provided runtime class, which knows how to
access the MBean. The current toolkit thus provides two
implementations:
<ul><li>The standard implementation will directly access the
        MBean through a java reference,</li>
    <li>The generic implementation will access the MBean through
        the MBean server.</li>
</ul>
<p>Both implementations rely upon specific - and distinct, set of
mibgen generated methods.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3146882 "set"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>set</CODE> operation.
<p>The actual implementation of this method will be generated
by mibgen. Usually, this implementation only delegates the
job to some other provided runtime class, which knows how to
access the MBean. The current toolkit thus provides two
implementations:
<ul><li>The standard implementation will directly access the
        MBean through a java reference,</li>
    <li>The generic implementation will access the MBean through
        the MBean server.</li>
</ul>
<p>Both implementations rely upon specific - and distinct, set of
mibgen generated methods.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3147010 "check"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>check</CODE> operation.

<p>The actual implementation of this method will be generated
by mibgen. Usually, this implementation only delegates the
job to some other provided runtime class, which knows how to
access the MBean. The current toolkit thus provides two
implementations:
<ul><li>The standard implementation will directly access the
        MBean through a java reference,</li>
    <li>The generic implementation will access the MBean through
        the MBean server.</li>
</ul>
<p>Both implementations rely upon specific - and distinct, set of
mibgen generated methods.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources, or if you need to implement some consistency
checks between the different values provided in the varbind list.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end
    end

    class 524290 "SnmpMibGroup"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a node in an SNMP MIB which corresponds to a group.
This class allows subnodes to be registered below a group, providing
support for nested groups. The subnodes are registered at run time
when registering the nested groups in the global MIB OID tree.
<P>
This class is used by the class generated by <CODE>mibgen</CODE>.
You should not need to use this class directly.

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1025538 // <generalisation>
	relation 1025538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1025538 // <generalisation>
	  b parent class_ref 524034 // SnmpMibOid
      end

      classrelation 1025666 // <realization>
	relation 1025666 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1025666 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 1025794 // subgroups (<unidirectional association>)
	relation 1025794 --->
	  a role_name "subgroups" init_value " null" protected
	    comment " We will register the OID arcs leading to subgroups in this hashtable.
 So for each arc in varList, if the arc is also in subgroups, it leads
 to a subgroup, if it is not in subgroup, it leads either to a table
 or to a variable.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Long, Long> ${name}${value};
"
	    classrelation_ref 1025794 // subgroups (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      operation 3149186 "isTable"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "arc" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether the given arc identifies a table in this group.

@param arc An OID arc.

@return <CODE>true</CODE> if `arc' leads to a table.
"
      end

      operation 3149314 "isVariable"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "arc" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether the given arc identifies a variable (scalar object) in
this group.

@param arc An OID arc.

@return <CODE>true</CODE> if `arc' leads to a variable.
"
      end

      operation 3149442 "isReadable"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "arc" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether the given arc identifies a readable scalar object in
this group.

@param arc An OID arc.

@return <CODE>true</CODE> if `arc' leads to a readable variable.
"
      end

      operation 3149570 "getTable"
	abstract public return_type class_ref 523394 // SnmpMibTable
	nparams 1
	  param in name "arc" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the table identified by the given `arc'.

@param arc An OID arc.

@return The <CODE>SnmpMibTable</CODE> identified by `arc', or
   <CODE>null</CODE> if `arc' does not identify any table.
"
      end

      operation 3149698 "validateVarId"
	public explicit_return_type "void"
	nparams 2
	  param in name "arc" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the given OID arc identifies a variable (scalar
object).

@exception If the given `arc' does not identify any variable in this
   group, throws an SnmpStatusException.
"
      end

      operation 3149826 "isNestedArc"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "arc" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 We use a hashtable (subgroup) in order to determine whether an
 OID arc leads to a subgroup. This implementation can be changed if
 needed...
 For instance, the subclass could provide a generated isNestedArc()
 method in which the subgroup OID arcs would be hardcoded.
 However, the generic approach was preferred because at this time
 groups and subgroups are dynamically registered in the MIB.


Tell whether the given OID arc identifies a sub-tree
leading to a nested SNMP sub-group. This method is used internally.
You shouldn't need to call it directly.

@param arc An OID arc.

@return <CODE>true</CODE> if the given OID arc identifies a subtree
leading to a nested SNMP sub-group.

"
      end

      operation 3149954 "get"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generic handling of the <CODE>get</CODE> operation.
<p>The actual implementation of this method will be generated
by mibgen. Usually, this implementation only delegates the
job to some other provided runtime class, which knows how to
access the MBean. The current toolkit thus provides two
implementations:
<ul><li>The standard implementation will directly access the
        MBean through a java reference,</li>
    <li>The generic implementation will access the MBean through
        the MBean server.</li>
</ul>
<p>Both implementations rely upon specific - and distinct, set of
mibgen generated methods.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3150082 "set"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generic handling of the <CODE>set</CODE> operation.
<p>The actual implementation of this method will be generated
by mibgen. Usually, this implementation only delegates the
job to some other provided runtime class, which knows how to
access the MBean. The current toolkit thus provides two
implementations:
<ul><li>The standard implementation will directly access the
        MBean through a java reference,</li>
    <li>The generic implementation will access the MBean through
        the MBean server.</li>
</ul>
<p>Both implementations rely upon specific - and distinct, set of
mibgen generated methods.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3150210 "check"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Generic handling of the <CODE>check</CODE> operation.

<p>The actual implementation of this method will be generated
by mibgen. Usually, this implementation only delegates the
job to some other provided runtime class, which knows how to
access the MBean. The current toolkit thus provides two
implementations:
<ul><li>The standard implementation will directly access the
        MBean through a java reference,</li>
    <li>The generic implementation will access the MBean through
        the MBean server.</li>
</ul>
<p>Both implementations rely upon specific - and distinct, set of
mibgen generated methods.
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources, or if you need to implement some consistency
checks between the different values provided in the varbind list.
<p>

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3150338 "getRootOid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Integer> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " --------------------------------------------------------------------
 If we reach this node, we are below the root OID, so we just
 return.
 --------------------------------------------------------------------"
      end

      operation 3150466 "registerNestedArc"
	package explicit_return_type "void"
	nparams 1
	  param in name "arc" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 PACKAGE METHODS
 -------------------------------------------------------------------
 -------------------------------------------------------------------
 This method can also be overriden in a subclass to provide a
 different implementation of the isNestedArc() method.
 => if isNestedArc() is hardcoded, then registerSubArc() becomes
    useless and can become empty.

Register an OID arc that identifies a sub-tree
leading to a nested SNMP sub-group. This method is used internally.
You shouldn't ever call it directly.

@param arc An OID arc.

"
      end

      operation 3150594 "registerObject"
	protected explicit_return_type "void"
	nparams 1
	  param in name "arc" explicit_type "long"
	nexceptions 1
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 The SnmpMibOid algorithm relies on the fact that for every arc
 registered in varList, there is a corresponding node at the same
 position in children.
 So the trick is to register a null node in children for each variable
 in varList, so that the real subgroup nodes can be inserted at the
 correct location.
 registerObject() should be called for each scalar object and each
 table arc by the generated subclass.

Register an OID arc that identifies a scalar object or a table.
This method is used internally. You shouldn't ever call it directly.

@param arc An OID arc.

"
      end

      operation 3150722 "registerNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "cursor" explicit_type "int"
	  param inout name "node" type class_ref 523778 // SnmpMibNode
	nexceptions 1
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 registerNode() will be called at runtime when nested groups are
 registered in the MIB. So we do know that this method will only
 be called to register nested-groups.
 We trap registerNode() in order to call registerSubArc()

Register a child node of this node in the OID tree.
This method is used internally. You shouldn't ever call it directly.

@param oid The oid of the node being registered.
@param cursor The position reached in the oid.
@param node The node being registered.

"
      end

      operation 3150850 "findHandlingNode"
	package explicit_return_type "void"
	nparams 4
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 see comments in SnmpMibNode
 -------------------------------------------------------------------"
      end

      operation 3150978 "findNextHandlingNode"
	package explicit_return_type "long"
	nparams 6
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "pos" explicit_type "int"
	  param in name "depth" explicit_type "int"
	  param inout name "handlers" type class_ref 523906 // SnmpRequestTree
	  param inout name "checker" type class_ref 521602 // AcmChecker
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 See comments in SnmpMibNode.
 -------------------------------------------------------------------"
      end
    end

    class 524546 "SnmpMibRequestImpl"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements the SnmpMibRequest interface.
It represents the part of a SNMP request that involves a specific
MIB. One instance of this class will be created for every MIB
involved in a SNMP request, and will be passed to the SnmpMibAgent
in charge of handling that MIB.

Instances of this class are allocated by the SNMP engine. You will
never need to use this class directly. You will only access
instances of this class through their SnmpMibRequest interface.

"
      classrelation 1025922 // <realization>
	relation 1025922 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1025922 // <realization>
	  b parent class_ref 522114 // SnmpMibRequest
      end

      operation 3154050 "SnmpMibRequestImpl"
	public explicit_return_type ""
	nparams 10
	  param inout name "engine" type class_ref 514818 // SnmpEngine
	  param inout name "reqPdu" type class_ref 513538 // SnmpPdu
	  param inout name "vblist" type class_ref 141442 // Vector
	  param in name "protocolVersion" explicit_type "int"
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "principal" type class_ref 128130 // String
	  param in name "securityLevel" explicit_type "int"
	  param in name "securityModel" explicit_type "int"
	  param inout name "contextName" explicit_type "byte"
	multiplicity "[]"
	  param inout name "accessContextName" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<SnmpVarBind> ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}, ${t9}[] ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param engine The local engine.
@param reqPdu The received pdu.
@param vblist The vector of SnmpVarBind objects in which the
       MIB concerned by this request is involved.
@param protocolVersion  The protocol version of the SNMP request.
@param userData     User allocated contextual data. This object must
       be allocated on a per SNMP request basis through the
       SnmpUserDataFactory registered with the SnmpAdaptorServer,
       and is handed back to the user through SnmpMibRequest objects.
"
      end

      operation 3154178 "getEngine"
	public return_type class_ref 514818 // SnmpEngine
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 PUBLIC METHODS from SnmpMibRequest
 -------------------------------------------------------------------

Returns the local engine. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return the local engine.
"
      end

      operation 3154306 "getPrincipal"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the incoming request principal. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return The request principal.
"
      end

      operation 3154434 "getSecurityLevel"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the incoming request security level. This level is defined in {@link com.sun.jmx.snmp.SnmpEngine SnmpEngine}. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise -1 is returned.
@return The security level.
"
      end

      operation 3154562 "getSecurityModel"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the incoming request security model. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise -1 is returned.
@return The security model.
"
      end

      operation 3154690 "getContextName"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the incoming request context name. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return The context name.
"
      end

      operation 3154818 "getAccessContextName"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the incoming request context name used by Access Control Model in order to allow or deny the access to OIDs. This parameter is returned only if <CODE> SnmpV3AdaptorServer </CODE> is the adaptor receiving this request. Otherwise null is returned.
@return The checked context.
"
      end

      operation 3154946 "getPdu"
	public return_type class_ref 513538 // SnmpPdu
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155074 "getElements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155202 "getSubList"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155330 "getSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155458 "getVersion"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155586 "getRequestPduVersion"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155714 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155842 "getVarIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3155970 "addVarBind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "varbind" type class_ref 516738 // SnmpVarBind
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " -------------------------------------------------------------------
 Implements the method defined in SnmpMibRequest interface.
 See SnmpMibRequest for the java doc.
 -------------------------------------------------------------------"
      end

      operation 3156098 "setRequestTree"
	package explicit_return_type "void"
	nparams 1
	  param inout name "tree" type class_ref 523906 // SnmpRequestTree
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 PACKAGE METHODS
 -------------------------------------------------------------------
 -------------------------------------------------------------------
 Allow to pass the request tree built during the check() phase
 to the set() method. Note: the if the tree is `null', then the
 set() method will rebuild a new tree identical to the tree built
 in the check() method.

 Passing this tree in the SnmpMibRequestImpl object allows to
 optimize the SET requests.

 -------------------------------------------------------------------"
      end

      operation 3156226 "getRequestTree"
	package return_type class_ref 523906 // SnmpRequestTree
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 Returns the SnmpRequestTree object built in the first operation
 phase for two-phase SNMP requests (like SET).
 -------------------------------------------------------------------"
      end

      operation 3156354 "getVarbinds"
	package return_type class_ref 141442 // Vector
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SnmpVarBind> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
 Returns the underlying vector of SNMP varbinds (used for algorithm
 optimization).
 -------------------------------------------------------------------"
      end

      classrelation 1026050 // varbinds (<unidirectional association>)
	relation 1026050 --->
	  a role_name "varbinds" private
	    comment " -------------------------------------------------------------------
 Private variables
 -------------------------------------------------------------------
 Ideally these variables should be declared final but it makes
 the jdk1.1.x compiler complain (seems to be a compiler bug, jdk1.2
 is OK).
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SnmpVarBind> ${name}${value};
"
	    classrelation_ref 1026050 // varbinds (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 665474 "version"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1026178 // data (<unidirectional association>)
	relation 1026178 --->
	  a role_name "data" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1026178 // data (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1026306 // reqPdu (<unidirectional association>)
	relation 1026306 --->
	  a role_name "reqPdu" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1026306 // reqPdu (<unidirectional association>)
	  b parent class_ref 513538 // SnmpPdu
      end

      classrelation 1026434 // tree (<unidirectional association>)
	relation 1026434 --->
	  a role_name "tree" init_value " null" private
	    comment " Non final variable.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1026434 // tree (<unidirectional association>)
	  b parent class_ref 523906 // SnmpRequestTree
      end

      classrelation 1026562 // engine (<unidirectional association>)
	relation 1026562 --->
	  a role_name "engine" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1026562 // engine (<unidirectional association>)
	  b parent class_ref 514818 // SnmpEngine
      end

      classrelation 1026690 // principal (<unidirectional association>)
	relation 1026690 --->
	  a role_name "principal" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1026690 // principal (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 665602 "securityLevel"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 665730 "securityModel"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 665858 "contextName"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 665986 "accessContextName"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 524674 "SnmpTableEntryFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface is implemented by mibgen generated table objects
inheriting from {@link com.sun.jmx.snmp.agent.SnmpTableSupport}.
<p>
It is used internally by the metadata whenever a remote SNMP manager
requests the creation of a new entry through an SNMP SET.
</p>
<p>
At creation, the mibgen generated table object retrieves its
corresponding metadata from the MIB and registers with
this metadata as a SnmpTableEntryFactory.
</p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1030274 // <generalisation>
	relation 1030274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1030274 // <generalisation>
	  b parent class_ref 525442 // SnmpTableCallbackHandler
      end

      operation 3173890 "createNewEntry"
	public explicit_return_type "void"
	nparams 4
	  param inout name "request" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	  param inout name "meta" type class_ref 523394 // SnmpMibTable
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the SNMP runtime whenever a new entry
creation is requested by a remote manager.

The factory is responsible for instantiating the appropriate MBean
and for registering it with the appropriate metadata object.

Usually this method will:
<ul>
<li>Check whether the creation can be accepted
<li>Instantiate a new entry
<li>Possibly register this entry with the MBeanServer, if needed.
<li>Call <code>addEntry()</code> on the given <code>meta</code> object.
</ul>
This method is usually generated by <code>mibgen</code> on table
objects (inheriting from
{@link com.sun.jmx.snmp.agent.SnmpTableSupport}). <br>

<p><b><i>
This method is called internally by the SNMP runtime whenever a
new entry creation is requested by a remote SNMP manager.
You should never need to call this method directlty.
</i></b></p>

@param request The SNMP subrequest containing the sublist of varbinds
               for the new entry.
@param rowOid  The OID indexing the conceptual row (entry) for which
               the creation was requested.
@param depth   The depth reached in the OID tree (the position at
               which the columnar object ids start in the OIDs
               included in the varbind).
@param meta    The metadata object impacted by the subrequest

@exception SnmpStatusException The new entry cannot be created.

"
      end
    end

    class 525186 "SnmpStandardMetaServer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
This interface defines the methods that must be implemented by an
SNMP metadata object that needs to interact with an
{@link com.sun.jmx.snmp.agent.SnmpStandardObjectServer} object.
</p>
<p>
All these methods are usually generated by <code>mibgen</code> when
run in standard-metadata mode (default).
</p>
<p><b><i>
This interface is used internally between the generated Metadata and
the SNMP runtime and you shouldn't need to worry about it, because
you will never have to use it directly.
</b></i></p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      operation 3172866 "get"
	public return_type class_ref 514050 // SnmpValue
	nparams 2
	  param in name "arc" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the scalar object identified by the given
OID arc.

@param arc OID arc of the querried scalar object.

@return The <CODE>SnmpValue</CODE> of the scalar object identified
        by <CODE>arc</CODE>.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@exception SnmpStatusException If the arc is not valid, or if
   access is denied.

"
      end

      operation 3172994 "set"
	public return_type class_ref 514050 // SnmpValue
	nparams 3
	  param inout name "x" type class_ref 514050 // SnmpValue
	  param in name "arc" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the scalar object identified by the given
OID arc.

@param x New value for the scalar object identified by
   <CODE>arc</CODE>

@param arc OID arc of the scalar object whose value is set.

@return The new <CODE>SnmpValue</CODE> of the scalar object
   identified by <CODE>arc</CODE>.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@exception SnmpStatusException If the arc is not valid, or if
   access is denied.

"
      end

      operation 3173122 "check"
	public explicit_return_type "void"
	nparams 3
	  param inout name "x" type class_ref 514050 // SnmpValue
	  param in name "arc" explicit_type "long"
	  param inout name "userData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the new desired value of the scalar object identified
by the given OID arc is valid.

@param x New value for the scalar object identified by
   <CODE>arc</CODE>

@param arc OID arc of the scalar object whose value is set.

@param userData A contextual object containing user-data.
       This object is allocated through the <code>
       {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
       for each incoming SNMP request.

@exception SnmpStatusException If the arc is not valid, or if
   access is denied, or if the new desired value is not valid.

"
      end
    end

    class 525314 "SnmpStandardObjectServer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " SNMP Runtime imports


<p>
This class is a utility class that transform SNMP GET / SET requests
into series of get<i>AttributeName</i>() set<i>AttributeName</i>()
invoked on the MBean.
</p>

<p>
The transformation relies on the metadata information provided by the
{@link com.sun.jmx.snmp.agent.SnmpStandardMetaServer} object which is
passed as first parameter to every method. This SnmpStandardMetaServer
object is usually a Metadata object generated by <code>mibgen</code>.
</p>

<p>
The MBean is not invoked directly by this class but through the
metadata object which holds a reference on it.
</p>

<p><b><i>
This class is used internally by mibgen generated metadata objects and
you should never need to use it directly.
</b></i></p>
<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1030146 // <realization>
	relation 1030146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1030146 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 669186 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4641068116505308488L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3173250 "get"
	public explicit_return_type "void"
	nparams 3
	  param inout name "meta" type class_ref 525186 // SnmpStandardMetaServer
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>get</CODE> operation.
<p> The default implementation of this method is to loop over the
varbind list associated with the sub-request and to call
<CODE>get(var.oid.getOidArc(depth), data);</CODE>
<pre>
public void get(SnmpStandardMetaServer meta, SnmpMibSubRequest req,
                int depth)
   throws SnmpStatusException {

   final Object data = req.getUserData();

   for (Enumeration e= req.getElements(); e.hasMoreElements();) {

       final SnmpVarBind var= (SnmpVarBind) e.nextElement();

       try {
           // This method will generate a SnmpStatusException
           // if `depth' is out of bounds.
           //
           final long id = var.oid.getOidArc(depth);
           var.value = meta.get(id, data);
       } catch(SnmpStatusException x) {
           req.registerGetException(var,x);
       }
   }
}
</pre>
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param meta  A pointer to the generated meta-data object which
             implements the <code>SnmpStandardMetaServer</code>
             interface.

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3173378 "set"
	public explicit_return_type "void"
	nparams 3
	  param inout name "meta" type class_ref 525186 // SnmpStandardMetaServer
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>set</CODE> operation.
<p> The default implementation of this method is to loop over the
varbind list associated with the sub-request and to call
<CODE>set(var.value, var.oid.getOidArc(depth), data);</CODE>
<pre>
public void set(SnmpStandardMetaServer meta, SnmpMibSubRequest req,
                int depth)
   throws SnmpStatusException {

   final Object data = req.getUserData();

   for (Enumeration e= req.getElements(); e.hasMoreElements();) {

       final SnmpVarBind var= (SnmpVarBind) e.nextElement();

       try {
           // This method will generate a SnmpStatusException
           // if `depth' is out of bounds.
           //
           final long id = var.oid.getOidArc(depth);
           var.value = meta.set(var.value, id, data);
       } catch(SnmpStatusException x) {
           req.registerSetException(var,x);
       }
   }
}
</pre>
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources.
<p>

@param meta  A pointer to the generated meta-data object which
             implements the <code>SnmpStandardMetaServer</code>
             interface.

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end

      operation 3173506 "check"
	public explicit_return_type "void"
	nparams 3
	  param inout name "meta" type class_ref 525186 // SnmpStandardMetaServer
	  param inout name "req" type class_ref 523266 // SnmpMibSubRequest
	  param in name "depth" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generic handling of the <CODE>check</CODE> operation.
<p> The default implementation of this method is to loop over the
varbind list associated with the sub-request and to call
<CODE>check(var.value, var.oid.getOidArc(depth), data);</CODE>
<pre>
public void check(SnmpStandardMetaServer meta, SnmpMibSubRequest req,
                  int depth)
   throws SnmpStatusException {

   final Object data = req.getUserData();

   for (Enumeration e= req.getElements(); e.hasMoreElements();) {

       final SnmpVarBind var= (SnmpVarBind) e.nextElement();

       try {
           // This method will generate a SnmpStatusException
           // if `depth' is out of bounds.
           //
           final long id = var.oid.getOidArc(depth);
           meta.check(var.value, id, data);
       } catch(SnmpStatusException x) {
           req.registerCheckException(var,x);
       }
   }
}
</pre>
<p> You can override this method if you need to implement some
specific policies for minimizing the accesses made to some remote
underlying resources, or if you need to implement some consistency
checks between the different values provided in the varbind list.
<p>

@param meta  A pointer to the generated meta-data object which
             implements the <code>SnmpStandardMetaServer</code>
             interface.

@param req   The sub-request that must be handled by this node.

@param depth The depth reached in the OID tree.

@exception SnmpStatusException An error occurred while accessing
 the MIB node.
"
      end
    end

    class 525442 "SnmpTableCallbackHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface ensures the synchronization between Metadata table objects
and bean-like table objects.

It is used between mibgen generated table meta and table classes.
<p><b><i>
You should never need to use this interface directly.
</p></b></i>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      operation 3173634 "addEntryCb"
	public explicit_return_type "void"
	nparams 5
	  param in name "pos" explicit_type "int"
	  param inout name "row" type class_ref 514306 // SnmpOid
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "entry" type class_ref 129538 // Object
	  param inout name "meta" type class_ref 523394 // SnmpMibTable
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the SNMP runtime after a new entry
has been added to the table.

If an SnmpStatusException is raised, the entry will be removed
and the operation will be aborted. In this case, the removeEntryCb()
callback will not be called.

<p><b><i>
You should never need to use this method directly.
</p></b></i>

"
      end

      operation 3173762 "removeEntryCb"
	public explicit_return_type "void"
	nparams 5
	  param in name "pos" explicit_type "int"
	  param inout name "row" type class_ref 514306 // SnmpOid
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "entry" type class_ref 129538 // Object
	  param inout name "meta" type class_ref 523394 // SnmpMibTable
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the SNMP runtime after a new entry
has been removed from the table.

If raised, SnmpStatusException will be ignored.

<p><b><i>
You should never need to use this method directly.
</p></b></i>

"
      end
    end

    class 525570 "SnmpTableEntryNotification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a notification emitted when an
entry is added or deleted from an SNMP table.
<P>
The <CODE>SnmpTableEntryNotification</CODE> object contains
the reference to the entry added or removed from the table.
<P>
The list of notifications fired by the <CODE>SnmpMibTable</CODE> is
the following:
<UL>
<LI>A new entry has been added to the SNMP table.
<LI>An existing entry has been removed from the SNMP table.
</UL>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
"
      classrelation 1031682 // <generalisation>
	relation 1031682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1031682 // <generalisation>
	  b parent class_ref 488706 // Notification
      end

      operation 3176450 "SnmpTableEntryNotification"
	package explicit_return_type ""
	nparams 6
	  param inout name "type" type class_ref 128130 // String
	  param inout name "source" type class_ref 129538 // Object
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "timeStamp" explicit_type "long"
	  param inout name "entry" type class_ref 129538 // Object
	  param inout name "entryName" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and initializes a table entry notification object.

@param type The notification type.
@param source The notification producer.
@param sequenceNumber The notification sequence number within the
                 source object.
@param timeStamp The notification emission date.
@param entry     The entry object (may be null if the entry is
                 registered in the MBeanServer).
@param entryName The ObjectName entry object (may be null if the
                 entry is not registered in the MBeanServer).
@since 1.5
"
      end

      operation 3176578 "getEntry"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the entry object.
May be null if the entry is registered in the MBeanServer, and the
MIB is using the generic MetaData (see mibgen).

@return The entry.
"
      end

      operation 3176706 "getEntryName"
	public return_type class_ref 485506 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ObjectName of the entry.
May be null if the entry is not registered in the MBeanServer.

@return The ObjectName of the entry.
@since 1.5
"
      end

      classrelation 1031810 // SNMP_ENTRY_ADDED (<unidirectional association>)
	relation 1031810 --->
	  a role_name "SNMP_ENTRY_ADDED" init_value "
        \"jmx.snmp.table.entry.added\"" class_relation const_relation public
	    comment " PUBLIC VARIABLES
-----------------

Notification type denoting that a new entry has been added to the
SNMP table.
<BR>The value of this notification type is
<CODE>jmx.snmp.table.entry.added</CODE>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1031810 // SNMP_ENTRY_ADDED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1031938 // SNMP_ENTRY_REMOVED (<unidirectional association>)
	relation 1031938 --->
	  a role_name "SNMP_ENTRY_REMOVED" init_value "
        \"jmx.snmp.table.entry.removed\"" class_relation const_relation public
	    comment "
Notification type denoting that an entry has been removed from the
SNMP table.
<BR>The value of this notification type is
<CODE>jmx.snmp.table.entry.removed</CODE>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1031938 // SNMP_ENTRY_REMOVED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1032066 // entry (<unidirectional association>)
	relation 1032066 --->
	  a role_name "entry" const_relation private
	    comment " PRIVATE VARIABLES
------------------

The entry object.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1032066 // entry (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1032194 // name (<unidirectional association>)
	relation 1032194 --->
	  a role_name "name" const_relation private
	    comment "
The entry name.
@serial
@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1032194 // name (<unidirectional association>)
	  b parent class_ref 485506 // ObjectName
      end

      attribute 670210 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5832592016227890252L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Ensure compatibility

"
      end
    end

    class 525826 "SnmpTableSupport"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is an abstraction for an SNMP table.
It is the base class for implementing SNMP tables in the
MBean world.

<p>
Its responsibility is to synchronize the MBean view of the table
(Table of entries) with the MIB view (array of OID indexes). Each
object of this class will be bound to the Metadata object which
manages the same SNMP Table within the MIB.
</p>

<p>
For each table defined in a MIB, mibgen will generate a specific
class called Table<i>TableName</i> that will subclass this class, and
a corresponding <i>TableName</i>Meta class extending SnmpMibTable
and corresponding to the MIB view of the same table.
</p>

<p>
Objects of this class are instantiated by MBeans representing
the SNMP Group to which the table belong.
</p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
@see com.sun.jmx.snmp.agent.SnmpTableEntryFactory
@see com.sun.jmx.snmp.agent.SnmpMibTable

"
      classrelation 1032322 // <realization>
	relation 1032322 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1032322 // <realization>
	  b parent class_ref 524674 // SnmpTableEntryFactory
      end

      classrelation 1032450 // <realization>
	relation 1032450 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1032450 // <realization>
	  b parent class_ref 525442 // SnmpTableCallbackHandler
      end

      classrelation 1032578 // <realization>
	relation 1032578 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1032578 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 1032706 // entries (<unidirectional association>)
	relation 1032706 --->
	  a role_name "entries" protected
	    comment " NPCTE fix for bugId 4499265, esc 0, MR 04 sept 2001
  SnmpTableCallbackHandler {
 end of NPCTE fix for bugId 4499265
-----------------------------------------------------------------

  Protected Variables

-----------------------------------------------------------------

The list of entries

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 1032706 // entries (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 1032834 // meta (<unidirectional association>)
	relation 1032834 --->
	  a role_name "meta" protected
	    comment "
The associated metadata object

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1032834 // meta (<unidirectional association>)
	  b parent class_ref 523394 // SnmpMibTable
      end

      classrelation 1032962 // theMib (<unidirectional association>)
	relation 1032962 --->
	  a role_name "theMib" protected
	    comment "
The MIB to which this table belongs

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1032962 // theMib (<unidirectional association>)
	  b parent class_ref 523650 // SnmpMib
      end

      attribute 670338 "registrationRequired"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "-----------------------------------------------------------------

  Private Variables

-----------------------------------------------------------------

This variable is initialized while binding this object to its
corresponding meta object.

"
      end

      operation 3176834 "SnmpTableSupport"
	protected explicit_return_type ""
	nparams 1
	  param inout name "mib" type class_ref 523650 // SnmpMib
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------------------------------

  Constructor

-----------------------------------------------------------------

Initializes the table.
The steps are these:
<ul><li> allocate an array for storing entry object,</li>
    <li> retrieve the corresponding metadata object
         from the MIB,
    <li> bind this object to the corresponding metadata object
         from the MIB.</li>
</ul>

@param mib The MIB to which this table belong.

"
      end

      operation 3176962 "createNewEntry"
	abstract public explicit_return_type "void"
	nparams 4
	  param inout name "request" type class_ref 523266 // SnmpMibSubRequest
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	  param in name "depth" explicit_type "int"
	  param inout name "meta" type class_ref 523394 // SnmpMibTable
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------------------------------

  Implementation of the SnmpTableEntryFactory interface

-----------------------------------------------------------------

Creates a new entry in the table.

This factory method is generated by mibgen and used internally.
It is part of the
{@link com.sun.jmx.snmp.agent.SnmpTableEntryFactory} interface.
You may subclass this method to implement any specific behaviour
your application requires.

@exception SnmpStatusException if the entry cannot be created.
"
      end

      operation 3177090 "getEntry"
	public return_type class_ref 129538 // Object
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------------------------------

  Public methods

-----------------------------------------------------------------

Returns the entry located at the given position in the table.

@return The entry located at the given position, <code>null</code>
        if no entry can be found at this position.

 XXXX xxxx zzz ZZZZ => public? or protected?"
      end

      operation 3177218 "getSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of entries registered in the table.

@return The number of entries registered in the table.
"
      end

      operation 3177346 "setCreationEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "remoteCreationFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method lets you dynamically switch the creation policy.

<CODE>setCreationEnabled()</CODE> will switch the policy of
     remote entry creation via SET operations, by calling
     <code>setCreationEnabled()</code> on the metadata object
     associated with this table.
<BR> By default remote entry creation via SET operation is disabled.

@param remoteCreationFlag Tells whether remote entry creation must
       be enabled or disabled.
<li>
<CODE>setCreationEnabled(true)</CODE> will enable remote entry
     creation via SET operations.</li>
<li>
<CODE>setCreationEnabled(false)</CODE> will disable remote entry
     creation via SET operations.</li>
<p> By default remote entry creation via SET operation is disabled.
</p>

@see com.sun.jmx.snmp.agent.SnmpMibTable

"
      end

      operation 3177474 "isCreationEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether a new entry should be created when a SET operation
is received for an entry that does not exist yet.
This method calls <code>isCreationEnabled()</code> on the metadata
object associated with this table.

@return true if a new entry must be created, false otherwise.<br>
        [default: returns <CODE>false</CODE>]

@see com.sun.jmx.snmp.agent.SnmpMibTable
"
      end

      operation 3177602 "isRegistrationRequired"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether the metadata object to which this table is linked
requires entries to be registered. In this case passing an
ObjectName when registering entries will be mandatory.

@return <code>true</code> if the associated metadata requires entries
        to be registered (mibgen generated generic metadata).
"
      end

      operation 3177730 "buildSnmpIndex"
	public return_type class_ref 523522 // SnmpIndex
	nparams 1
	  param inout name "rowOid" type class_ref 514306 // SnmpOid
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds an entry SnmpIndex from its row OID.

This method is generated by mibgen and used internally.

@param rowOid The SnmpOid object identifying a table entry.

@return The SnmpIndex of the entry identified by <code>rowOid</code>.

@exception SnmpStatusException if the index cannot be built from the
           given OID.
"
      end

      operation 3177858 "buildOidFromIndex"
	abstract public return_type class_ref 514306 // SnmpOid
	nparams 1
	  param inout name "index" type class_ref 523522 // SnmpIndex
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds an SnmpOid from an SnmpIndex object.

This method is generated by mibgen and used internally.

@param index An SnmpIndex object identifying a table entry.

@return The SnmpOid form of the given entry index.

@exception SnmpStatusException if the given index is not valid.
"
      end

      operation 3177986 "buildNameFromIndex"
	abstract public return_type class_ref 485506 // ObjectName
	nparams 1
	  param inout name "index" type class_ref 523522 // SnmpIndex
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds the default ObjectName of an entry from the SnmpIndex
identifying this entry. No access is made on the entry itself.

This method is generated by mibgen and used internally.
You can subclass this method if you want to change the default
ObjectName policy. This is only meaningfull when entries
are registered MBeans.

@param index The SnmpIndex identifying the entry from which we
             want to build the default ObjectName.

@return The default ObjectName for the entry identified by
        the given index.

@exception SnmpStatusException if the given index is not valid.
"
      end

      operation 3178114 "addEntryCb"
	public explicit_return_type "void"
	nparams 5
	  param in name "pos" explicit_type "int"
	  param inout name "row" type class_ref 514306 // SnmpOid
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "entry" type class_ref 129538 // Object
	  param inout name "meta" type class_ref 523394 // SnmpMibTable
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------------------------------

  Implementation of the SnmpTableEntryFactory interface

-----------------------------------------------------------------

This callback is called by  the associated metadata object
when a new table entry has been registered in the
table metadata.

This method will update the <code>entries</code> list.

@param pos   The position at which the new entry was inserted
             in the table.
@param row   The row OID of the new entry
@param name  The ObjectName of the new entry (as specified by the
             factory)
@param entry The new entry (as returned by the factory)
@param meta  The table metadata object.

"
      end

      operation 3178242 "removeEntryCb"
	public explicit_return_type "void"
	nparams 5
	  param in name "pos" explicit_type "int"
	  param inout name "row" type class_ref 514306 // SnmpOid
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "entry" type class_ref 129538 // Object
	  param inout name "meta" type class_ref 523394 // SnmpMibTable
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This callback is called by  the associated metadata object
when a new table entry has been removed from the
table metadata.

This method will update the <code>entries</code> list.

@param pos   The position from which the entry was deleted
@param row   The row OID of the deleted entry
@param name  The ObjectName of the deleted entry (may be null if
             ObjectName's were not required)
@param entry The deleted entry (may be null if only ObjectName's
             were required)
@param meta  The table metadata object.

"
      end

      operation 3178370 "addNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables to add an SNMP entry listener to this
<CODE>SnmpMibTable</CODE>.

@param listener The listener object which will handle the
   notifications emitted by the registered MBean.

@param filter The filter object. If filter is null, no filtering
   will be performed before handling notifications.

@param handback The context to be sent to the listener when a
   notification is emitted.

@exception IllegalArgumentException Listener parameter is null.
"
      end

      operation 3178498 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 487042 // NotificationListener
	nexceptions 1
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables to remove an SNMP entry listener from this
<CODE>SnmpMibTable</CODE>.

@param listener The listener object which will handle the
   notifications emitted by the registered MBean.
   This method will remove all the information related to this
   listener.

@exception ListenerNotFoundException The listener is not registered
   in the MBean.
"
      end

      operation 3178626 "getNotificationInfo"
	public return_type class_ref 497154 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <CODE>NotificationInfo</CODE> object containing the
notification class and the notification type sent by the
<CODE>SnmpMibTable</CODE>.
"
      end

      operation 3178754 "buildSnmpIndex"
	abstract protected return_type class_ref 523522 // SnmpIndex
	nparams 2
	  param inout name "oid" explicit_type "long"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------------------------------

  Protected Abstract methods

-----------------------------------------------------------------

Builds an SnmpIndex object from the index part of an OID.

This method is generated by mibgen and used internally.

@param oid The OID from which to build the index, represented
       as an array of long.
@param start The position where to start from in the OID array.

@return The SnmpOid form of the given entry index.

@exception SnmpStatusException if the given index is not valid.
"
      end

      operation 3178882 "getRegisteredTableMeta"
	abstract protected return_type class_ref 523394 // SnmpMibTable
	nparams 1
	  param inout name "mib" type class_ref 523650 // SnmpMib
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the metadata object associated with this table.

This method is generated by mibgen and used internally.

@param mib The SnmpMib object holding the Metadata corresponding
           to this table.

@return The metadata object associated with this table.
        Returns <code>null</code> if this implementation of the
        MIB doesn't support this table.
"
      end

      operation 3179010 "allocateTable"
	protected return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------------------------------

  Protected methods

-----------------------------------------------------------------

Allocates an ArrayList for storing table entries.

This method is called within the constructor at object creation.
Any object implementing the {@link java.util.List} interface can
be used.

@return A new list in which to store entries. If <code>null</code>
        is returned then no entry will be stored in the list
        and getEntry() will always return null.
"
      end

      operation 3179138 "addEntry"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "index" type class_ref 523522 // SnmpIndex
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an entry in this table.

This method registers an entry in the table and perform
synchronization with the associated table metadata object.

This method assumes that the given entry will not be registered,
or will be registered with its default ObjectName built from the
associated  SnmpIndex.
<p>
If the entry is going to be registered, then
{@link com.sun.jmx.snmp.agent.SnmpTableSupport#addEntry(SnmpIndex, ObjectName, Object)} should be preferred.
<br> This function is mainly provided for backward compatibility.

@param index The SnmpIndex built from the given entry.
@param entry The entry that should be added in the table.

@exception SnmpStatusException if the entry cannot be registered with
           the given index.
"
      end

      operation 3179266 "addEntry"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "index" type class_ref 523522 // SnmpIndex
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an entry in this table.

This method registers an entry in the table and performs
synchronization with the associated table metadata object.

@param index The SnmpIndex built from the given entry.
@param name  The ObjectName with which this entry will be registered.
@param entry The entry that should be added in the table.

@exception SnmpStatusException if the entry cannot be registered with
           the given index.
"
      end

      operation 3179394 "removeEntry"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "index" type class_ref 523522 // SnmpIndex
	  param inout name "entry" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove an entry from this table.

This method unregisters an entry from the table and performs
synchronization with the associated table metadata object.

@param index The SnmpIndex identifying the entry.
@param entry The entry that should be removed in the table. This
             parameter is optional and can be omitted if it doesn't
             need to be passed along to the
             <code>removeEntryCb()</code> callback defined in the
             {@link com.sun.jmx.snmp.agent.SnmpTableCallbackHandler}
             interface.

@exception SnmpStatusException if the entry cannot be unregistered.
"
      end

      operation 3179522 "getBasicEntries"
	protected return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " protected void removeEntry(ObjectName name, Object entry)
  throws SnmpStatusException {
  meta.removeEntry(name,entry);
 }

Returns the entries in the table.

@return An Object[] array containing the entries registered in the
        table.
"
      end

      operation 3179650 "bindWithTableMeta"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this table with its associated metadata, registering itself
as an SnmpTableEntryFactory.
"
      end
    end

    class 525954 "SnmpUserDataFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface is provided to enable fine customization of the SNMP
agent behaviour.

<p>You will not need to implement this interface except if your agent
needs extra customization requiring some contextual information.</p>

<p>If an SnmpUserDataFactory is set on the SnmpAdaptorServer, then a new
object containing user-data will be allocated through this factory
for each incoming request. This object will be passed along to
the SnmpMibAgent within SnmpMibRequest objects. By default, no
SnmpUserDataFactory is set on the SnmpAdaptorServer, and the contextual
object passed to SnmpMibAgent is null.</p>

<p>You can use this feature to obtain on contextual information
(such as community string etc...) or to implement a caching
mechanism, or for whatever purpose might be required by your specific
agent implementation.</p>

<p>The sequence <code>allocateUserData() / releaseUserData()</code> can
also be used to implement a caching mechanism:
<ul>
<li><code>allocateUserData()</code> could be used to allocate
        some cache space,</li>
<li>and <code>releaseUserData()</code> could be used to flush it.</li>
</ul></p>

<p><b>This API is a Sun Microsystems internal API  and is subject
to change without notice.</b></p>
@see com.sun.jmx.snmp.agent.SnmpMibRequest
@see com.sun.jmx.snmp.agent.SnmpMibAgent
@see com.sun.jmx.snmp.daemon.SnmpAdaptorServer

"
      operation 3179778 "allocateUserData"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "requestPdu" type class_ref 513538 // SnmpPdu
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the <CODE>SnmpAdaptorServer</CODE> adaptor.
Allocate a contextual object containing some user data. This method
is called once for each incoming SNMP request. The scope
of this object will be the whole request. Since the request can be
handled in several threads, the user should make sure that this
object can be accessed in a thread-safe manner. The SNMP framework
will never access this object directly - it will simply pass
it to the <code>SnmpMibAgent</code> within
<code>SnmpMibRequest</code> objects - from where it can be retrieved
through the {@link com.sun.jmx.snmp.agent.SnmpMibRequest#getUserData() getUserData()} accessor.
<code>null</code> is considered to be a valid return value.

This method is called just after the SnmpPduPacket has been
decoded.

@param requestPdu The SnmpPduPacket received from the SNMP manager.
       <b>This parameter is owned by the SNMP framework and must be
       considered as transient.</b> If you wish to keep some of its
       content after this method returns (by storing it in the
       returned object for instance) you should clone that
       information.

@return A newly allocated user-data contextual object, or
        <code>null</code>
@exception SnmpStatusException If an SnmpStatusException is thrown,
           the request will be aborted.

@since 1.5
"
      end

      operation 3179906 "releaseUserData"
	public explicit_return_type "void"
	nparams 2
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "responsePdu" type class_ref 513538 // SnmpPdu
	nexceptions 1
	  exception class_ref 514434 // SnmpStatusException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the <CODE>SnmpAdaptorServer</CODE> adaptor.
Release a previously allocated contextual object containing user-data.
This method is called just before the responsePdu is sent back to the
manager. It gives the user a chance to alter the responsePdu packet
before it is encoded, and to free any resources that might have
been allocated when creating the contextual object.

@param userData The contextual object being released.
@param responsePdu The SnmpPduPacket that will be sent back to the
       SNMP manager.
       <b>This parameter is owned by the SNMP framework and must be
       considered as transient.</b> If you wish to keep some of its
       content after this method returns you should clone that
       information.

@exception SnmpStatusException If an SnmpStatusException is thrown,
           the responsePdu is dropped and nothing is returned to
           to the manager.

@since 1.5
"
      end
    end
  end

  deploymentview 147842 "agent"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 343682 "AcmChecker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.Vector;
import javax.management.ObjectName;
import javax.management.MBeanServer;
import javax.management.MalformedObjectNameException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanRegistrationException;
import javax.management.NotCompliantMBeanException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpEngine;
import com.sun.jmx.snmp.SnmpUnknownModelException;
import com.sun.jmx.snmp.internal.SnmpAccessControlModel;
import com.sun.jmx.snmp.internal.SnmpEngineImpl;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 521602 // AcmChecker
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 343810 "LongList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.Vector;
import javax.management.ObjectName;
import javax.management.MBeanServer;
import javax.management.MalformedObjectNameException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanRegistrationException;
import javax.management.NotCompliantMBeanException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpEngine;
import com.sun.jmx.snmp.SnmpUnknownModelException;
import com.sun.jmx.snmp.internal.SnmpAccessControlModel;
import com.sun.jmx.snmp.internal.SnmpEngineImpl;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 521986 // LongList
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 343938 "SnmpEntryOid"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.snmp.SnmpOid;
${definition}"
      associated_elems
	class_ref 522242 // SnmpEntryOid
      end
      comment "Copyright (c) 2000, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344066 "SnmpMibAgentMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.management.MalformedObjectNameException;
import javax.management.InstanceNotFoundException;
import javax.management.ServiceNotFoundException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 522626 // SnmpMibAgentMBean
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344194 "SnmpMibAgent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Vector;
import java.util.Enumeration;
import javax.management.MBeanServer;
import javax.management.MBeanRegistration;
import javax.management.ObjectName;
import javax.management.InstanceNotFoundException;
import javax.management.ServiceNotFoundException;
import javax.management.ReflectionException;
import javax.management.MBeanException;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpEngine;
${definition}"
      associated_elems
	class_ref 522498 // SnmpMibAgent
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344322 "SnmpErrorHandlerAgent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Enumeration;
import java.util.logging.Level;
import javax.management.ObjectName;
import javax.management.MBeanServer;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpVarBind;
${definition}"
      associated_elems
	class_ref 522370 // SnmpErrorHandlerAgent
      end
      comment "Copyright (c) 2001, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344450 "SnmpGenericMetaServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 523010 // SnmpGenericMetaServer
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344578 "SnmpGenericObjectServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Iterator;
import javax.management.AttributeList;
import javax.management.Attribute;
import javax.management.MBeanException;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.management.InstanceNotFoundException;
import javax.management.InvalidAttributeValueException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanRegistrationException;
import javax.management.NotCompliantMBeanException;
import javax.management.RuntimeOperationsException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 523138 // SnmpGenericObjectServer
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344706 "SnmpIndex"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Vector;
import java.util.Enumeration;
import com.sun.jmx.snmp.SnmpOid;
${definition}"
      associated_elems
	class_ref 523522 // SnmpIndex
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344834 "SnmpMib"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.Vector;
import javax.management.ObjectName;
import javax.management.MBeanServer;
import javax.management.MalformedObjectNameException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanRegistrationException;
import javax.management.NotCompliantMBeanException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 523650 // SnmpMib
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 344962 "SnmpMibNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Vector;
import java.util.Hashtable;
import java.util.Enumeration;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 523778 // SnmpMibNode
      end
      comment "Copyright (c) 1997, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345090 "SnmpMibEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.snmp.SnmpDefinitions;
import java.io.Serializable;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 524162 // SnmpMibEntry
      end
      comment "Copyright (c) 2000, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345218 "SnmpMibOid"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Vector;
import java.util.Enumeration;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 524034 // SnmpMibOid
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345346 "SnmpMibGroup"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Vector;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 524290 // SnmpMibGroup
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345474 "SnmpMibHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.io.IOException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 522754 // SnmpMibHandler
      end
      comment "Copyright (c) 1998, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345602 "SnmpMibRequest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Vector;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpEngine;
${definition}"
      associated_elems
	class_ref 522114 // SnmpMibRequest
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345730 "SnmpMibRequestImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Vector;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpEngine;
${definition}"
      associated_elems
	class_ref 524546 // SnmpMibRequestImpl
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345858 "SnmpMibSubRequest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Vector;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpOid;
${definition}"
      associated_elems
	class_ref 523266 // SnmpMibSubRequest
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 345986 "SnmpMibTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Date;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
import java.util.logging.Level;
import javax.management.ListenerNotFoundException;
import javax.management.MBeanNotificationInfo;
import javax.management.Notification;
import javax.management.NotificationBroadcaster;
import javax.management.NotificationFilter;
import javax.management.NotificationListener;
import javax.management.ObjectName;
import com.sun.jmx.snmp.EnumRowStatus;
import com.sun.jmx.snmp.SnmpInt;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpVarBind;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 523394 // SnmpMibTable
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 346114 "SnmpRequestTree"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Hashtable;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.Arrays;
import java.util.logging.Level;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpDefinitions;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpEngine;
import static com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER;
${definition}"
      associated_elems
	class_ref 523906 // SnmpRequestTree
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 346242 "SnmpStandardMetaServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 525186 // SnmpStandardMetaServer
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 346370 "SnmpStandardObjectServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Enumeration;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 525314 // SnmpStandardObjectServer
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 346498 "SnmpTableCallbackHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.ObjectName;
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.agent.SnmpMibTable;
${definition}"
      associated_elems
	class_ref 525442 // SnmpTableCallbackHandler
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 346626 "SnmpTableEntryFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.snmp.SnmpStatusException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.agent.SnmpMibTable;
import com.sun.jmx.snmp.agent.SnmpMibSubRequest;
${definition}"
      associated_elems
	class_ref 524674 // SnmpTableEntryFactory
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 347010 "SnmpTableEntryNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.Notification;
import javax.management.ObjectName;
${definition}"
      associated_elems
	class_ref 525570 // SnmpTableEntryNotification
      end
      comment "Copyright (c) 1998, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 347138 "SnmpTableSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Date;
import java.util.Vector;
import java.util.Enumeration;
import java.util.List;
import java.util.ArrayList;
import javax.management.Notification;
import javax.management.ObjectName;
import javax.management.NotificationFilter;
import javax.management.NotificationListener;
import javax.management.NotificationBroadcaster;
import javax.management.MBeanNotificationInfo;
import javax.management.ListenerNotFoundException;
import com.sun.jmx.snmp.SnmpOid;
import com.sun.jmx.snmp.SnmpValue;
import com.sun.jmx.snmp.SnmpVarBind;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 525826 // SnmpTableSupport
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 347266 "SnmpUserDataFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.snmp.SnmpPduPacket;
import com.sun.jmx.snmp.SnmpPdu;
import com.sun.jmx.snmp.SnmpStatusException;
${definition}"
      associated_elems
	class_ref 525954 // SnmpUserDataFactory
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
