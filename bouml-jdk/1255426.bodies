class FloatControl
!!!10310274.java!!!	FloatControl(inout type : Control::Type, in minimum : float, in maximum : float, in precision : float, in updatePeriod : int, in initialValue : float, inout units : String, inout minLabel : String, inout midLabel : String, inout maxLabel : String)

        super(type);

        if (minimum > maximum) {
            throw new IllegalArgumentException("Minimum value " + minimum
                    + " exceeds maximum value " + maximum + ".");
        }
        if (initialValue < minimum) {
            throw new IllegalArgumentException("Initial value " + initialValue
                    + " smaller than allowable minimum value " + minimum + ".");
        }
        if (initialValue > maximum) {
            throw new IllegalArgumentException("Initial value " + initialValue
                    + " exceeds allowable maximum value " + maximum + ".");
        }


        this.minimum = minimum;
        this.maximum = maximum;

        this.precision = precision;
        this.updatePeriod = updatePeriod;
        this.value = initialValue;

        this.units = units;
        this.minLabel = ( (minLabel == null) ? "" : minLabel);
        this.midLabel = ( (midLabel == null) ? "" : midLabel);
        this.maxLabel = ( (maxLabel == null) ? "" : maxLabel);
!!!10310402.java!!!	FloatControl(inout type : Control::Type, in minimum : float, in maximum : float, in precision : float, in updatePeriod : int, in initialValue : float, inout units : String)
        this(type, minimum, maximum, precision, updatePeriod,
                initialValue, units, "", "", "");
!!!10310530.java!!!	setValue(in newValue : float) : void

        if (newValue > maximum) {
            throw new IllegalArgumentException("Requested value " + newValue + " exceeds allowable maximum value " + maximum + ".");
        }

        if (newValue < minimum) {
            throw new IllegalArgumentException("Requested value " + newValue + " smaller than allowable minimum value " + minimum + ".");
        }

        value = newValue;
!!!10310658.java!!!	getValue() : float
        return value;
!!!10310786.java!!!	getMaximum() : float
        return maximum;
!!!10310914.java!!!	getMinimum() : float
        return minimum;
!!!10311042.java!!!	getUnits() : String
        return units;
!!!10311170.java!!!	getMinLabel() : String
        return minLabel;
!!!10311298.java!!!	getMidLabel() : String
        return midLabel;
!!!10311426.java!!!	getMaxLabel() : String
        return maxLabel;
!!!10311554.java!!!	getPrecision() : float
        return precision;
!!!10311682.java!!!	getUpdatePeriod() : int
        return updatePeriod;
!!!10311810.java!!!	shift(in from : float, in to : float, in microseconds : int) : void
        // test "from" value, "to" value will be tested by setValue()
        if (from < minimum) {
            throw new IllegalArgumentException("Requested value " + from
                    + " smaller than allowable minimum value " + minimum + ".");
        }
        if (from > maximum) {
            throw new IllegalArgumentException("Requested value " + from
                    + " exceeds allowable maximum value " + maximum + ".");
        }
        setValue(to);
!!!10311938.java!!!	toString() : String
        return new String(getType() + " with current value: " + getValue() + " " + units +
                          " (range: " + minimum + " - " + maximum + ")");
