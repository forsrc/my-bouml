format 222
"PortableServer" // jdk1.8::org::omg::PortableServer
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/org/omg/PortableServer/"
  java_package "org.omg.PortableServer"
  classview 137986 "PortableServer"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 220034 "Servant"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the native <code>Servant</code> type. In Java, the
<code>Servant</code> type is mapped to the Java
<code>org.omg.PortableServer.Servant</code> class.
It serves as the base class for all POA servant
implementations and provides a number of methods that may
be invoked by the application programmer, as well as methods
which are invoked by the POA itself and may be overridden by
the user to control aspects of servant behavior.
Based on IDL to Java spec. (CORBA V2.3.1) ptc/00-01-08.pdf.
"
      classrelation 276866 // _delegate (<unidirectional association>)
	relation 276866 --->
	  a role_name "_delegate" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 276866 // _delegate (<unidirectional association>)
	  b parent class_ref 220162 // Delegate
      end

      operation 1064066 "_get_delegate"
	public return_type class_ref 220162 // Delegate
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ORB vendor-specific implementation of
<code>PortableServer::Servant</code>.
@return <code>_delegate</code> the ORB vendor-specific
implementation of <code>PortableServer::Servant</code>.
"
      end

      operation 1064194 "_set_delegate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "delegate" type class_ref 220162 // Delegate
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supports the Java ORB portability
interfaces by providing a method for classes that support
ORB portability through delegation to set their delegate.
@param delegate ORB vendor-specific implementation of
                the <code>PortableServer::Servant</code>.
"
      end

      operation 1064322 "_this_object"
	public return_type class_ref 133378 // Object
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the servant to obtain the object reference for
the target CORBA object it is incarnating for that request.
@return <code>this_object</code> <code>Object</code> reference
associated with the request.
"
      end

      operation 1064450 "_this_object"
	public return_type class_ref 133378 // Object
	nparams 1
	  param inout name "orb" type class_ref 128386 // ORB
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the servant to obtain the object reference for
the target CORBA Object it is incarnating for that request.
@param orb ORB with which the servant is associated.
@return <code>_this_object</code> reference associated with the request.
"
      end

      operation 1064578 "_orb"
	public return_type class_ref 128386 // ORB
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the instance of the ORB
currently associated with the <code>Servant</code> (convenience method).
@return <code>orb</code> the instance of the ORB currently
associated with the <code>Servant</code>.
"
      end

      operation 1064706 "_poa"
	public return_type class_ref 220290 // POA
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows easy execution of common methods, equivalent to
<code>PortableServer::Current:get_POA</code>.
@return <code>poa</code> POA associated with the servant.
"
      end

      operation 1064834 "_object_id"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows easy execution of
common methods, equivalent
to calling <code>PortableServer::Current::get_object_id</code>.
@return <code>object_id</code> the <code>Object</code> ID associated
with this servant.
"
      end

      operation 1064962 "_default_POA"
	public return_type class_ref 220290 // POA
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the
root POA from the ORB instance associated with the servant.
Subclasses may override this method to return a different POA.
@return <code>default_POA</code> the POA associated with the
<code>Servant</code>.
"
      end

      operation 1065090 "_is_a"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "repository_id" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the specified <code>repository_id</code> is present
on the list returned by <code>_all_interfaces()</code> or is the
<code>repository_id</code> for the generic CORBA Object.
@param repository_id the <code>repository_id</code>
         to be checked in the repository list or against the id
         of generic CORBA objects.
@return <code>is_a</code> boolean indicating whether the specified
         <code>repository_id</code> is
        in the repository list or is same as a generic CORBA
        object.
"
      end

      operation 1065218 "_non_existent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks for the existence of an
<code>Object</code>.
The <code>Servant</code> provides a default implementation of
<code>_non_existent()</code> that can be overridden by derived servants.
@return <code>non_existent</code> <code>true</code> if that object does
          not exist,  <code>false</code> otherwise.
"
      end

      operation 1065346 "_get_interface_def"
	public return_type class_ref 133378 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Ken and Simon will ask about editorial changes
 needed in IDL to Java mapping to the following
 signature.

Returns an object in the Interface Repository
which provides type information that may be useful to a program.
<code>Servant</code> provides a default implementation of
<code>_get_interface()</code>
that can be overridden by derived servants if the default
behavior is not adequate.
@return <code>get_interface</code> type information that corresponds to this servant.


public org.omg.CORBA.Object _get_interface() {
return _get_delegate().get_interface(this);
}

 _get_interface_def() replaces the _get_interface() method

Returns an <code>InterfaceDef</code> object as a
<code>CORBA::Object</code> that defines the runtime type of the
<code>CORBA::Object</code> implemented by the <code>Servant</code>.
The invoker of <code>_get_interface_def</code>
must narrow the result to an <code>InterfaceDef</code> in order
to use it.
<P>This default implementation of <code>_get_interface_def()</code>
can be overridden
by derived servants if the default behavior is not adequate.
As defined in the CORBA 2.3.1 specification, section 11.3.1, the
default behavior of <code>_get_interface_def()</code> is to use
the most derived
interface of a static servant or the most derived interface retrieved
from a dynamic servant to obtain the <code>InterfaceDef</code>.
This behavior must
be supported by the <code>Delegate</code> that implements the
<code>Servant</code>.
@return <code>get_interface_def</code> an <code>InterfaceDef</code>
object as a
<code>CORBA::Object</code> that defines the runtime type of the
<code>CORBA::Object</code> implemented by the <code>Servant</code>.
"
      end

      operation 1065474 "_all_interfaces"
	abstract public return_type class_ref 128130 // String
	nparams 2
	  param inout name "poa" type class_ref 220290 // POA
	  param inout name "objectId" explicit_type "byte"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " methods for which the user must provide an
 implementation

Used by the ORB to obtain complete type
information from the servant.
@param poa POA with which the servant is associated.
@param objectId is the id corresponding to the object
        associated with this servant.
@return list of type information for the object.
"
      end
    end

    class 220290 "POA"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/POA.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


A POA object manages the implementation of a 
collection of objects. The POA supports a name space 
for the objects, which are identified by Object Ids. 
A POA also provides a name space for POAs. A POA is 
created as a child of an existing POA, which forms a 
hierarchy starting with the root POA. A POA object 
must not be exported to other processes, or 
externalized with ORB::object_to_string.
"
      classrelation 304898 // <generalisation>
	relation 304898 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 304898 // <generalisation>
	  b parent class_ref 233730 // POAOperations
      end

      classrelation 305026 // <generalisation>
	relation 305026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 305026 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 305154 // <generalisation>
	relation 305154 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 305154 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 226178 "ServantLocator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantLocator.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the NON_RETAIN policy it uses servant 
managers that are ServantLocators. Because the POA 
knows that the servant returned by this servant 
manager will be used only for a single request, 
it can supply extra information to the servant 
manager's operations and the servant manager's pair 
of operations may be able to cooperate to do 
something different than a ServantActivator. 
When the POA uses the ServantLocator interface, 
immediately after performing the operation invocation 
on the servant returned by preinvoke, the POA will 
invoke postinvoke on the servant manager, passing the 
ObjectId value and the Servant value as parameters 
(among others). This feature may be used to force 
every request for objects associated with a POA to 
be mediated by the servant manager.
"
      classrelation 288130 // <generalisation>
	relation 288130 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 288130 // <generalisation>
	  b parent class_ref 226306 // ServantLocatorOperations
      end

      classrelation 288642 // <generalisation>
	relation 288642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 288642 // <generalisation>
	  b parent class_ref 226818 // ServantManager
      end

      classrelation 288770 // <generalisation>
	relation 288770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 288770 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 226306 "ServantLocatorOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantLocatorOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the NON_RETAIN policy it uses servant 
managers that are ServantLocators. Because the POA 
knows that the servant returned by this servant 
manager will be used only for a single request, 
it can supply extra information to the servant 
manager's operations and the servant manager's pair 
of operations may be able to cooperate to do 
something different than a ServantActivator. 
When the POA uses the ServantLocator interface, 
immediately after performing the operation invocation 
on the servant returned by preinvoke, the POA will 
invoke postinvoke on the servant manager, passing the 
ObjectId value and the Servant value as parameters 
(among others). This feature may be used to force 
every request for objects associated with a POA to 
be mediated by the servant manager.
"
      classrelation 288002 // <generalisation>
	relation 288002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 288002 // <generalisation>
	  b parent class_ref 226434 // ServantManagerOperations
      end

      operation 1091842 "preinvoke"
	public return_type class_ref 220034 // Servant
	nparams 4
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	  param inout name "operation" type class_ref 128130 // String
	  param inout name "the_cookie" type class_ref 226562 // CookieHolder
	nexceptions 1
	  exception class_ref 226690 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operations is used to get a servant that will be
used to process the request that caused preinvoke to
be called.
@param oid the object id associated with object on
           which the request was made. 
@param adapter the reference for POA in which the
               object is being activated.
@param operation the operation name.
@param the_cookie  an opaque value that can be set
                   by the servant manager to be used
                   during postinvoke.
@return Servant used to process incoming request.
@exception ForwardRequest to indicate to the ORB 
           that it is responsible for delivering 
           the current request and subsequent 
           requests to the object denoted in the 
           forward_reference member of the exception.
"
      end

      operation 1091970 "postinvoke"
	public explicit_return_type "void"
	nparams 5
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	  param inout name "operation" type class_ref 128130 // String
	  param inout name "the_cookie" type class_ref 129538 // Object
	  param inout name "the_servant" type class_ref 220034 // Servant
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation is invoked whenener a servant completes
a request.
@param oid the object id ssociated with object on which
           the request was made.
@param adapter the reference for POA in which the
               object was active.
@param the_cookie  an opaque value that contains
                   the data set by preinvoke.
@param the_servant reference to the servant that is
                   associated with the object.
"
      end
    end

    class 226434 "ServantManagerOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantManagerOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


A servant manager supplies a POA with the ability 
to activate objects on demand when the POA receives 
a request targeted at an inactive object. A servant 
manager is registered with a POA as a callback object, 
to be invoked by the POA when necessary.
ServantManagers can either be ServantActivators or
ServantLocators. A ServantManager object must be 
local to the process containing the POA objects 
it is registered with.
"
    end

    class 226690 "ForwardRequest"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ForwardRequest.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4907266 // <generalisation>
	relation 4907266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4907266 // <generalisation>
	  b parent class_ref 178178 // UserException
      end

      classrelation 4907394 // forward_reference (<unidirectional association>)
	relation 4907394 --->
	  a role_name "forward_reference" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4907394 // forward_reference (<unidirectional association>)
	  b parent class_ref 133378 // Object
      end

      operation 12428930 "ForwardRequest"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12429058 "ForwardRequest"
	public explicit_return_type ""
	nparams 1
	  param inout name "_forward_reference" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ctor"
      end

      operation 12429186 "ForwardRequest"
	public explicit_return_type ""
	nparams 2
	  param inout name "$reason" type class_ref 128130 // String
	  param inout name "_forward_reference" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ctor"
      end
    end

    class 226818 "ServantManager"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantManager.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


A servant manager supplies a POA with the ability 
to activate objects on demand when the POA receives 
a request targeted at an inactive object. A servant 
manager is registered with a POA as a callback object, 
to be invoked by the POA when necessary.
ServantManagers can either be ServantActivators or
ServantLocators. A ServantManager object must be 
local to the process containing the POA objects 
it is registered with.
"
      classrelation 288258 // <generalisation>
	relation 288258 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 288258 // <generalisation>
	  b parent class_ref 226434 // ServantManagerOperations
      end

      classrelation 288386 // <generalisation>
	relation 288386 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 288386 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 288514 // <generalisation>
	relation 288514 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 288514 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 230530 "IdAssignmentPolicy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/IdAssignmentPolicy.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


IdAssignmentPolicy specifies whether Object Ids in 
the created POA are generated by the application or 
by the ORB. The default is SYSTEM_ID.
"
      classrelation 297602 // <generalisation>
	relation 297602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 297602 // <generalisation>
	  b parent class_ref 230658 // IdAssignmentPolicyOperations
      end

      classrelation 298114 // <generalisation>
	relation 298114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 298114 // <generalisation>
	  b parent class_ref 134274 // Policy
      end

      classrelation 298242 // <generalisation>
	relation 298242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 298242 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 230658 "IdAssignmentPolicyOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/IdAssignmentPolicyOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


IdAssignmentPolicy specifies whether Object Ids in 
the created POA are generated by the application or 
by the ORB. The default is SYSTEM_ID.
"
      classrelation 297474 // <generalisation>
	relation 297474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 297474 // <generalisation>
	  b parent class_ref 230786 // PolicyOperations
      end

      operation 1104386 "value"
	public return_type class_ref 230914 // IdAssignmentPolicyValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "specifies the policy value
"
      end
    end

    class 230914 "IdAssignmentPolicyValue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/IdAssignmentPolicyValue.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The IdAssignmentPolicyValue can have the following
values. USER_ID - Objects created with that POA are 
assigned Object Ids only by the application. 
 SYSTEM_ID - Objects created with that POA are 
assigned Object Ids only by the POA. If the POA also 
has the PERSISTENT policy, assigned Object Ids must 
be unique across all instantiations of the same POA.
"
      classrelation 4907778 // <realization>
	relation 4907778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4907778 // <realization>
	  b parent class_ref 136450 // IDLEntity
      end

      attribute 2658050 "__value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2658178 "__size"
	class_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4907906 // __array (<unidirectional association>)
	relation 4907906 --->
	  a role_name "__array" multiplicity "[]" init_value " new org.omg.PortableServer.IdAssignmentPolicyValue [__size]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4907906 // __array (<unidirectional association>)
	  b parent class_ref 230914 // IdAssignmentPolicyValue
      end

      attribute 2658306 "_USER_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4908034 // USER_ID (<unidirectional association>)
	relation 4908034 --->
	  a role_name "USER_ID" init_value " new org.omg.PortableServer.IdAssignmentPolicyValue(_USER_ID)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4908034 // USER_ID (<unidirectional association>)
	  b parent class_ref 230914 // IdAssignmentPolicyValue
      end

      attribute 2658434 "_SYSTEM_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4908162 // SYSTEM_ID (<unidirectional association>)
	relation 4908162 --->
	  a role_name "SYSTEM_ID" init_value " new org.omg.PortableServer.IdAssignmentPolicyValue(_SYSTEM_ID)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4908162 // SYSTEM_ID (<unidirectional association>)
	  b parent class_ref 230914 // IdAssignmentPolicyValue
      end

      operation 12430082 "value"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12430210 "from_int"
	class_operation public return_type class_ref 230914 // IdAssignmentPolicyValue
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12430338 "IdAssignmentPolicyValue"
	protected explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 231170 "IdUniquenessPolicy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/IdUniquenessPolicy.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The IdUniquenessPolicy specifies whether the servants 
activated in the created POA must have unique object i
identities. The default is UNIQUE_ID.
"
      classrelation 298882 // <generalisation>
	relation 298882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 298882 // <generalisation>
	  b parent class_ref 231298 // IdUniquenessPolicyOperations
      end

      classrelation 299010 // <generalisation>
	relation 299010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 299010 // <generalisation>
	  b parent class_ref 134274 // Policy
      end

      classrelation 299138 // <generalisation>
	relation 299138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 299138 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 231298 "IdUniquenessPolicyOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/IdUniquenessPolicyOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The IdUniquenessPolicy specifies whether the servants 
activated in the created POA must have unique object i
identities. The default is UNIQUE_ID.
"
      classrelation 298754 // <generalisation>
	relation 298754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 298754 // <generalisation>
	  b parent class_ref 230786 // PolicyOperations
      end

      operation 1105282 "value"
	public return_type class_ref 231426 // IdUniquenessPolicyValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "specifies the policy value
"
      end
    end

    class 231426 "IdUniquenessPolicyValue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/IdUniquenessPolicyValue.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


IdUniquenessPolicyValue can have the following values.
UNIQUE_ID - Servants activated with that POA support 
exactly one Object Id.  MULTIPLE_ID - a servant 
activated with that POA may support one or more 
Object Ids.
"
      classrelation 4908290 // <realization>
	relation 4908290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4908290 // <realization>
	  b parent class_ref 136450 // IDLEntity
      end

      attribute 2658562 "__value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2658690 "__size"
	class_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4908418 // __array (<unidirectional association>)
	relation 4908418 --->
	  a role_name "__array" multiplicity "[]" init_value " new org.omg.PortableServer.IdUniquenessPolicyValue [__size]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4908418 // __array (<unidirectional association>)
	  b parent class_ref 231426 // IdUniquenessPolicyValue
      end

      attribute 2658818 "_UNIQUE_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4908546 // UNIQUE_ID (<unidirectional association>)
	relation 4908546 --->
	  a role_name "UNIQUE_ID" init_value " new org.omg.PortableServer.IdUniquenessPolicyValue(_UNIQUE_ID)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4908546 // UNIQUE_ID (<unidirectional association>)
	  b parent class_ref 231426 // IdUniquenessPolicyValue
      end

      attribute 2658946 "_MULTIPLE_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4908674 // MULTIPLE_ID (<unidirectional association>)
	relation 4908674 --->
	  a role_name "MULTIPLE_ID" init_value " new org.omg.PortableServer.IdUniquenessPolicyValue(_MULTIPLE_ID)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4908674 // MULTIPLE_ID (<unidirectional association>)
	  b parent class_ref 231426 // IdUniquenessPolicyValue
      end

      operation 12430466 "value"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12430594 "from_int"
	class_operation public return_type class_ref 231426 // IdUniquenessPolicyValue
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12430722 "IdUniquenessPolicyValue"
	protected explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 231682 "ImplicitActivationPolicy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ImplicitActivationPolicy.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


This policy specifies whether implicit activation 
of servants is supported in the created POA.
"
      classrelation 299778 // <generalisation>
	relation 299778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 299778 // <generalisation>
	  b parent class_ref 231810 // ImplicitActivationPolicyOperations
      end

      classrelation 299906 // <generalisation>
	relation 299906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 299906 // <generalisation>
	  b parent class_ref 134274 // Policy
      end

      classrelation 300034 // <generalisation>
	relation 300034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 300034 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 231810 "ImplicitActivationPolicyOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ImplicitActivationPolicyOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


This policy specifies whether implicit activation 
of servants is supported in the created POA.
"
      classrelation 299650 // <generalisation>
	relation 299650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 299650 // <generalisation>
	  b parent class_ref 230786 // PolicyOperations
      end

      operation 1106178 "value"
	public return_type class_ref 231938 // ImplicitActivationPolicyValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "specifies the policy value
"
      end
    end

    class 231938 "ImplicitActivationPolicyValue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ImplicitActivationPolicyValue.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


ImplicitActivationPolicyValue has the following
semantics.
IMPLICIT_ACTIVATION to indicate implicit activation
of servants.  This requires SYSTEM_ID and RETAIN 
policies to be set.
NO_IMPLICIT_ACTIVATION to indicate no implicit 
servant activation.
"
      classrelation 4908802 // <realization>
	relation 4908802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4908802 // <realization>
	  b parent class_ref 136450 // IDLEntity
      end

      attribute 2659202 "__value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2659330 "__size"
	class_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4908930 // __array (<unidirectional association>)
	relation 4908930 --->
	  a role_name "__array" multiplicity "[]" init_value " new org.omg.PortableServer.ImplicitActivationPolicyValue [__size]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4908930 // __array (<unidirectional association>)
	  b parent class_ref 231938 // ImplicitActivationPolicyValue
      end

      attribute 2659458 "_IMPLICIT_ACTIVATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4909058 // IMPLICIT_ACTIVATION (<unidirectional association>)
	relation 4909058 --->
	  a role_name "IMPLICIT_ACTIVATION" init_value " new org.omg.PortableServer.ImplicitActivationPolicyValue(_IMPLICIT_ACTIVATION)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4909058 // IMPLICIT_ACTIVATION (<unidirectional association>)
	  b parent class_ref 231938 // ImplicitActivationPolicyValue
      end

      attribute 2659586 "_NO_IMPLICIT_ACTIVATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4909186 // NO_IMPLICIT_ACTIVATION (<unidirectional association>)
	relation 4909186 --->
	  a role_name "NO_IMPLICIT_ACTIVATION" init_value " new org.omg.PortableServer.ImplicitActivationPolicyValue(_NO_IMPLICIT_ACTIVATION)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4909186 // NO_IMPLICIT_ACTIVATION (<unidirectional association>)
	  b parent class_ref 231938 // ImplicitActivationPolicyValue
      end

      operation 12430850 "value"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12430978 "from_int"
	class_operation public return_type class_ref 231938 // ImplicitActivationPolicyValue
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12431106 "ImplicitActivationPolicyValue"
	protected explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 232194 "LifespanPolicy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/LifespanPolicy.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The LifespanPolicy specifies the lifespan of the 
objects implemented in the created POA. The default 
is TRANSIENT.
"
      classrelation 300674 // <generalisation>
	relation 300674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 300674 // <generalisation>
	  b parent class_ref 232322 // LifespanPolicyOperations
      end

      classrelation 300802 // <generalisation>
	relation 300802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 300802 // <generalisation>
	  b parent class_ref 134274 // Policy
      end

      classrelation 300930 // <generalisation>
	relation 300930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 300930 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 232322 "LifespanPolicyOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/LifespanPolicyOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The LifespanPolicy specifies the lifespan of the 
objects implemented in the created POA. The default 
is TRANSIENT.
"
      classrelation 300546 // <generalisation>
	relation 300546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 300546 // <generalisation>
	  b parent class_ref 230786 // PolicyOperations
      end

      operation 1107074 "value"
	public return_type class_ref 232450 // LifespanPolicyValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "specifies the policy value
"
      end
    end

    class 232450 "LifespanPolicyValue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/LifespanPolicyValue.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The LifespanPolicyValue can have the following values.
TRANSIENT - The objects implemented in the POA 
cannot outlive the POA instance in which they are 
first created. 
PERSISTENT - The objects implemented in the POA can 
outlive the process in which they are first created. 
"
      classrelation 4909314 // <realization>
	relation 4909314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4909314 // <realization>
	  b parent class_ref 136450 // IDLEntity
      end

      attribute 2659842 "__value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2659970 "__size"
	class_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4909442 // __array (<unidirectional association>)
	relation 4909442 --->
	  a role_name "__array" multiplicity "[]" init_value " new org.omg.PortableServer.LifespanPolicyValue [__size]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4909442 // __array (<unidirectional association>)
	  b parent class_ref 232450 // LifespanPolicyValue
      end

      attribute 2660098 "_TRANSIENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4909570 // TRANSIENT (<unidirectional association>)
	relation 4909570 --->
	  a role_name "TRANSIENT" init_value " new org.omg.PortableServer.LifespanPolicyValue(_TRANSIENT)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4909570 // TRANSIENT (<unidirectional association>)
	  b parent class_ref 232450 // LifespanPolicyValue
      end

      attribute 2660226 "_PERSISTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4909698 // PERSISTENT (<unidirectional association>)
	relation 4909698 --->
	  a role_name "PERSISTENT" init_value " new org.omg.PortableServer.LifespanPolicyValue(_PERSISTENT)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4909698 // PERSISTENT (<unidirectional association>)
	  b parent class_ref 232450 // LifespanPolicyValue
      end

      operation 12431234 "value"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12431362 "from_int"
	class_operation public return_type class_ref 232450 // LifespanPolicyValue
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12431490 "LifespanPolicyValue"
	protected explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 232706 "Current"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/Current.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The PortableServer::Current interface, derived from 
CORBA::Current, provides method implementations with 
access to the identity of the object on which the 
method was invoked. The Current interface is provided 
to support servants that implement multiple objects, 
but can be used within the context of POA-dispatched 
method invocations on any servant. To provide location 
transparency, ORBs are required to support use of 
Current in the context of both locally and remotely 
invoked operations. An instance of Current can be 
obtained by the application by issuing the 
CORBA::ORB::resolve_initial_references(\"POACurrent\") 
operation. Thereafter, it can be used within the 
context of a method dispatched by the POA to obtain 
the POA and ObjectId that identify the object on 
which that operation was invoked.
"
      classrelation 301570 // <generalisation>
	relation 301570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 301570 // <generalisation>
	  b parent class_ref 232834 // CurrentOperations
      end

      classrelation 301698 // <generalisation>
	relation 301698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 301698 // <generalisation>
	  b parent class_ref 183042 // Current
      end

      classrelation 301826 // <generalisation>
	relation 301826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 301826 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 232834 "CurrentOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/CurrentOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The PortableServer::Current interface, derived from 
CORBA::Current, provides method implementations with 
access to the identity of the object on which the 
method was invoked. The Current interface is provided 
to support servants that implement multiple objects, 
but can be used within the context of POA-dispatched 
method invocations on any servant. To provide location 
transparency, ORBs are required to support use of 
Current in the context of both locally and remotely 
invoked operations. An instance of Current can be 
obtained by the application by issuing the 
CORBA::ORB::resolve_initial_references(\"POACurrent\") 
operation. Thereafter, it can be used within the 
context of a method dispatched by the POA to obtain 
the POA and ObjectId that identify the object on 
which that operation was invoked.
"
      classrelation 301442 // <generalisation>
	relation 301442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 301442 // <generalisation>
	  b parent class_ref 182914 // CurrentOperations
      end

      operation 1107970 "get_POA"
	public return_type class_ref 220290 // POA
	nparams 0
	nexceptions 1
	  exception class_ref 232962 // NoContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns reference to the POA implementing the 
object in whose context it is called. 

@return The poa implementing the object

@exception NoContext is raised when the operation is
           outside the context of a POA-dispatched 
           operation
"
      end

      operation 1108098 "get_object_id"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 232962 // NoContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ObjectId identifying the object in 
whose context it is called. 

@return the ObjectId of the object

@exception NoContext is raised when the operation
is called outside the context of a POA-dispatched 
operation.
"
      end
    end

    class 233346 "POAManager"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/POAManager.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


Each POA object has an associated POAManager object. 
A POA manager may be associated with one or more 
POA objects. A POA manager encapsulates the processing 
state of the POAs it is associated with.
"
      classrelation 307330 // <generalisation>
	relation 307330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 307330 // <generalisation>
	  b parent class_ref 236290 // POAManagerOperations
      end

      classrelation 307458 // <generalisation>
	relation 307458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 307458 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 307586 // <generalisation>
	relation 307586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 307586 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 233730 "POAOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/POAOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


A POA object manages the implementation of a 
collection of objects. The POA supports a name space 
for the objects, which are identified by Object Ids. 
A POA also provides a name space for POAs. A POA is 
created as a child of an existing POA, which forms a 
hierarchy starting with the root POA. A POA object 
must not be exported to other processes, or 
externalized with ORB::object_to_string.
"
      operation 1117698 "create_POA"
	public return_type class_ref 220290 // POA
	nparams 3
	  param inout name "adapter_name" type class_ref 128130 // String
	  param inout name "a_POAManager" type class_ref 233346 // POAManager
	  param inout name "policies" type class_ref 134274 // Policy
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 233858 // AdapterAlreadyExists
	  exception class_ref 233986 // InvalidPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation creates a new POA as a child of the 
target POA.
@param adapter_name identifies the new POA with 
       respect to other POAs with the same parent POA.
@param a_POAManager specifies the POA Manager to be
       associated with the new POA.
@param policies specifies policy objects to be 
       associated with the POA to control its behavior.
@exception AdapterAlreadyExists specifies that the
           target POA already has a child POA with 
           the specified name.
@exception InvalidPolicy is raised if any of the
           policy objects are not valid for the ORB,
           or are in conflict, or require an 
           administrative action that has not been
           performed.
"
      end

      operation 1117826 "find_POA"
	public return_type class_ref 220290 // POA
	nparams 2
	  param inout name "adapter_name" type class_ref 128130 // String
	  param inout name "activate_it" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 234114 // AdapterNonExistent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the target POA is the parent of a child POA with 
the specified name (relative to the target POA), that 
child POA is returned. 
@param adapter_name POA name to be found.
@param activate_it  if a POA with the specified 
       name does not exist and the value of 
       the activate_it parameter is TRUE, the target 
       POA's AdapterActivator, if one exists, 
       is invoked.
@return POA if one exists or is activated by the
        AdapterActivator.
@return AdapterNonExistent is raised if POA with
        a specified name cannot be found or
        activated using AdapaterActivator.
"
      end

      operation 1117954 "destroy"
	public explicit_return_type "void"
	nparams 2
	  param inout name "etherealize_objects" explicit_type "boolean"
	  param inout name "wait_for_completion" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation destroys the POA and all descendant 
POAs. All descendant POAs are destroyed (recursively) 
before the destruction of the containing POA. The POA 
so destroyed (that is, the POA with its name) may be 
re-created later in the same process.
@param etherealize_objects flag to indicate whether
       etherealize operation on servant manager needs
       to be called.
@param wait_for_completion flag to indicate whether
       POA and its children need to wait for active
       requests and the etherealization to complete.

"
      end

      operation 1118082 "create_thread_policy"
	public return_type class_ref 234242 // ThreadPolicy
	nparams 1
	  param inout name "value" type class_ref 234370 // ThreadPolicyValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These operations each return a reference to a policy 
object with the specified value.
@param value policy type
@return ThreadPolcy Object
"
      end

      operation 1118210 "create_lifespan_policy"
	public return_type class_ref 232194 // LifespanPolicy
	nparams 1
	  param inout name "value" type class_ref 232450 // LifespanPolicyValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These operations each return a reference to a policy 
object with the specified value.
@param value policy type
@return LifespanPolicy Object.
"
      end

      operation 1118338 "create_id_uniqueness_policy"
	public return_type class_ref 231170 // IdUniquenessPolicy
	nparams 1
	  param inout name "value" type class_ref 231426 // IdUniquenessPolicyValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These operations each return a reference to a policy 
object with the specified value.
@param value policy type
@return IdUniquenessPolicy Object.
"
      end

      operation 1118466 "create_id_assignment_policy"
	public return_type class_ref 230530 // IdAssignmentPolicy
	nparams 1
	  param inout name "value" type class_ref 230914 // IdAssignmentPolicyValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These operations each return a reference to a policy 
object with the specified value. 
@param value policy type
@return IdAssignmentPolicy Object.
"
      end

      operation 1118594 "create_implicit_activation_policy"
	public return_type class_ref 231682 // ImplicitActivationPolicy
	nparams 1
	  param inout name "value" type class_ref 231938 // ImplicitActivationPolicyValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These operations each return a reference to a policy 
object with the specified value. 
@param value policy type
@return ImplicitActivationPolicy Object.
"
      end

      operation 1118722 "create_servant_retention_policy"
	public return_type class_ref 234498 // ServantRetentionPolicy
	nparams 1
	  param inout name "value" type class_ref 234626 // ServantRetentionPolicyValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These operations each return a reference to a policy 
object with the specified value.
@param value policy type
@return ServantRetentionPolicy Object.
"
      end

      operation 1118850 "create_request_processing_policy"
	public return_type class_ref 234754 // RequestProcessingPolicy
	nparams 1
	  param inout name "value" type class_ref 234882 // RequestProcessingPolicyValue
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These operations each return a reference to a policy 
object with the specified value. 
@param value policy type
@return RequestProcessingPolicy Object.
"
      end

      operation 1118978 "the_name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute identifies the POA relative to its 
parent. This name is assigned when the POA is created.
"
      end

      operation 1119106 "the_parent"
	public return_type class_ref 220290 // POA
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute identifies the parent of the POA. 
The parent of the root POA is null. 
"
      end

      operation 1119234 "the_children"
	public return_type class_ref 220290 // POA
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute identifies the current set of all 
child POAs of the POA. The set of child POAs 
includes only the POA's immediate children, and 
not their descendants.
"
      end

      operation 1119362 "the_POAManager"
	public return_type class_ref 233346 // POAManager
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute identifies the POA manager 
associated with the POA.
"
      end

      operation 1119490 "the_activator"
	public return_type class_ref 235010 // AdapterActivator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute identifies the adapter activator 
associated with the POA.
"
      end

      operation 1119618 "the_activator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newThe_activator" type class_ref 235010 // AdapterActivator
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute identifies the adapter activator 
associated with the POA.
"
      end

      operation 1119746 "get_servant_manager"
	public return_type class_ref 226818 // ServantManager
	nparams 0
	nexceptions 1
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
If the ServantRetentionPolicy of the POA is RETAIN, 
then the ServantManager argument (imgr) shall support 
the ServantActivator interface. For a NON_RETAIN policy,
the ServantManager shall support the ServantLocator 
interface. If the argument is nil, or does not support 
the required interface, then the OBJ_ADAPTER 
exception is raised.
@return ServantManager associated with a POA or null if
        none exists.
@exception WrongPolicy raised if the 
           USE_SERVANT_MANAGER policy is not specified.
"
      end

      operation 1119874 "set_servant_manager"
	public explicit_return_type "void"
	nparams 1
	  param inout name "imgr" type class_ref 226818 // ServantManager
	nexceptions 1
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This operation sets the default servant manager 
associated with the POA. This operation may only be 
invoked once after a POA has been created. Attempting 
to set the servant manager after one has already 
been set will result in the BAD_INV_ORDER exception 
being raised.
@param imgr servant manager to be used as a default.
@exception WrongPolicy raised if the 
           USE_SERVANT_MANAGER policy is not specified.
"
      end

      operation 1120002 "get_servant"
	public return_type class_ref 220034 // Servant
	nparams 0
	nexceptions 2
	  exception class_ref 235138 // NoServant
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation returns the default servant associated 
with the POA. 
@return p_servant default servant associated with a POA.
@exception NoServant raised if no default servant is
           associated with the POA.
@exception WrongPolicy raised if the 
           USE_DEFAULT_SERVANT policy is not specified.
"
      end

      operation 1120130 "set_servant"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_servant" type class_ref 220034 // Servant
	nexceptions 1
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This operation registers the specified servant with 
the POA as the default servant. This servant will 
be used for all requests for which no servant is 
found in the Active Object Map.
@param p_servant servant to be used as a default.
@exception WrongPolicy raised if the 
           USE_DEFAULT_SERVANT policy is not specified.
"
      end

      operation 1120258 "activate_object"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "p_servant" type class_ref 220034 // Servant
	nexceptions 2
	  exception class_ref 235266 // ServantAlreadyActive
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This operation generates an Object Id and enters 
the Object Id and the specified servant in the 
Active Object Map.
@param p_servant servant to be associated with an
           object to be activated.
@return POA generated object id.
@exception ServantAlreadyActive is raised if the
           POA has UNIQUE_ID policy and servant is
           is already in the Active Object Map.
@exception WrongPolicy raised if the SYSTEM_ID and 
           RETAIN policies are not specified.
"
      end

      operation 1120386 "activate_object_with_id"
	public explicit_return_type "void"
	nparams 2
	  param inout name "id" explicit_type "byte"
	multiplicity "[]"
	  param inout name "p_servant" type class_ref 220034 // Servant
	nexceptions 3
	  exception class_ref 235266 // ServantAlreadyActive
	  exception class_ref 230018 // ObjectAlreadyActive
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation enters an association between the 
specified Object Id and the specified servant in the 
Active Object Map.
@param id object id for the object to be activated.
@param p_servant servant to be associated with the
                 object.
@exception ServantAlreadyActive raised if the POA 
           has the UNIQUE_ID policy and the servant 
           is already in the Active Object Map.
@exception ObjectAlreadyActive raised if the object is
           already active in the POA.
@exception WrongPolicy raised if the RETAIN policy is
           is not specified.
"
      end

      operation 1120514 "deactivate_object"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 235394 // ObjectNotActive
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This operation causes the ObjectId specified in the 
oid parameter to be deactivated. An ObjectId which 
has been deactivated continues to process requests 
until there are no active requests for that ObjectId. 
A deactivated ObjectId is removed from the Active 
Object Map when all requests executing for that 
ObjectId have completed. 
@param oid Object Id for the object to be deactivated.
@exception ObjectNotActive if the object with the
           specified oid is not in the Active Object
           Map.
@exception WrongPolicy raised if the RETAIN policy is
           is not specified.
"
      end

      operation 1120642 "create_reference"
	public return_type class_ref 133378 // Object
	nparams 1
	  param inout name "intf" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation creates an object reference that 
encapsulates a POA-generated Object Id value and 
the specified interface repository id. 

@param intf rep id for creating an object reference.
@return object reference created using intf.
@exception WrongPolicy if SYSTEM_ID policy is not 
           specified.
"
      end

      operation 1120770 "create_reference_with_id"
	public return_type class_ref 133378 // Object
	nparams 2
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "intf" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation creates an object reference that 
encapsulates the specified Object Id and interface 
repository Id values. It does not cause an activation 
to take place. The resulting reference may be passed 
to clients, so that subsequent requests on those 
references will cause the object to be activated 
if necessary, or the default servant used, depending 
on the applicable policies. 
@param oid object id for creating an objref
@param intf rep id for creating an objref
@return object reference created using oid and intf
@exception BAD_PARAM is raised if the POA has the 
            SYSTEM_ID policy and it detects that the 
            Object Id value was not generated by the 
            system or for this POA.
"
      end

      operation 1120898 "servant_to_id"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "p_servant" type class_ref 220034 // Servant
	nexceptions 2
	  exception class_ref 235522 // ServantNotActive
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation has four possible behaviors. 
1. If the POA has the UNIQUE_ID policy and the 
specified servant is active, the Object Id associated 
with that servant is returned.
2. If the POA has the IMPLICIT_ACTIVATION policy and 
either the POA has the MULTIPLE_ID policy or the 
specified servant is not active, the servant is 
activated using a POA-generated Object Id and the 
Interface Id associated with the servant, and that 
Object Id is returned. 
3. If the POA has the USE_DEFAULT_SERVANT policy, 
the servant specified is the default servant, and the 
operation is being invoked in the context of executing 
a request on the default servant, then the ObjectId 
associated with the current invocation is returned. 
4. Otherwise, the ServantNotActive exception is raised.

@param p_servant servant for which the object disi returned.
@return object id associated with the servant.
@exception ServantNotActive if the above rules and
           policy combination is not met. 
@exception WrongPolicy if the USE_DEFAULT_SERVANT policy
           or a combination of the RETAIN policy and 
           either the UNIQUE_ID or IMPLICIT_ACTIVATION 
           policies are not present. 
"
      end

      operation 1121026 "servant_to_reference"
	public return_type class_ref 133378 // Object
	nparams 1
	  param inout name "p_servant" type class_ref 220034 // Servant
	nexceptions 2
	  exception class_ref 235522 // ServantNotActive
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation requires the RETAIN policy and either 
the UNIQUE_ID or IMPLICIT_ACTIVATION policies if 
invoked outside the context of an operation dispatched 
by this POA. It has four possible behaviors.
1. If the POA has both the RETAIN and the 
UNIQUE_ID policy and the specified servant is active, 
an object reference encapsulating the information used 
to activate the servant is returned. 
2. If the POA has both the RETAIN and the 
IMPLICIT_ACTIVATION policy and either the POA has the 
MULTIPLE_ID policy or the specified servant is not 
active, the servant is activated using a POA-generated 
Object Id and the Interface Id associated with the 
servant, and a corresponding object reference is 
returned. 
3. If the operation was invoked in the context of 
executing a request on the specified servant, the 
reference associated with the current invocation 
is returned. 
4. Otherwise, the ServantNotActive exception is raised.

@param p_servant servant for which the object reference
                 needs to be obtained.
@return object reference associated with the servant.
@exception WrongPolicy if the operation is not invoked 
           in the context of executing a request on 
           the specified servant and the required 
           policies are not present.
@exception ServantNotActive if the above specified
           policies and rules are not met.
"
      end

      operation 1121154 "reference_to_servant"
	public return_type class_ref 220034 // Servant
	nparams 1
	  param inout name "reference" type class_ref 133378 // Object
	nexceptions 3
	  exception class_ref 235394 // ObjectNotActive
	  exception class_ref 227842 // WrongPolicy
	  exception class_ref 235650 // WrongAdapter
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the POA has the RETAIN policy and the specified 
object is present in the Active Object Map, this 
operation returns the servant associated with that 
object in the Active Object Map. Otherwise, if the 
POA has the USE_DEFAULT_SERVANT policy and a default 
servant has been registered with the POA, this 
operation returns the default servant. If the object 
reference was not created by this POA, 
the WrongAdapter exception is raised. (OMG Issue
on inconsistency with the POA.IDL.

@param reference object reference for which the
                 servant is returned.
@return servant associated with the reference.
@exception WrongPolicy if neither the RETAIN policy or 
           the USE_DEFAULT_SERVANT policy is present. 
@exception ObjectNotActive if the servant is not
           present in the Active Object Map (for RETAIN)
           or no default servant is registered (for
           USE_DEFAULT_POLICY).
@exception WrongAdapter if reference was not created by
	      this POA instance.
"
      end

      operation 1121282 "reference_to_id"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "reference" type class_ref 133378 // Object
	nexceptions 2
	  exception class_ref 235650 // WrongAdapter
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation returns the Object Id value 
encapsulated by the specified reference. This 
operation is valid only if the reference was created 
by the POA on which the operation is being performed. 
The object denoted by the reference does not have 
to be active for this operation to succeed.

@param reference the object reference from which the
                 object id needs to be returned.
@return object id encapsulated in the reference.
@exception WrongAdapter if the reference was not 
           created by the POA specified in the 
           reference.
@exception WrongPolicy declared to allow future 
           extensions. 

"
      end

      operation 1121410 "id_to_servant"
	public return_type class_ref 220034 // Servant
	nparams 1
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 235394 // ObjectNotActive
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the POA has the RETAIN policy and the specified 
ObjectId is in the Active Object Map, this operation 
returns the servant associated with that object in 
the Active Object Map. Otherwise, if the POA has 
the USE_DEFAULT_SERVANT policy and a default servant 
has been registered with the POA, this operation 
returns the default servant. 

@param oid object id for the which the servant is
           returned.
@return servant associated with oid.
@exception ObjectNotActive is raised if ObjectId is
           is not in the Active Object Map (for RETAIN
           policy), or no default servant is registered
           (for USE_DEFAULT_SERVANT policy).

@exception WrongPolicy is raised if the RETAIN policy
                       or the USE_DEFAULT_SERVANT 
                       policy is not present. 
"
      end

      operation 1121538 "id_to_reference"
	public return_type class_ref 133378 // Object
	nparams 1
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 235394 // ObjectNotActive
	  exception class_ref 227842 // WrongPolicy
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If an object with the specified Object Id value is 
currently active, a reference encapsulating the 
information used to activate the object is returned. 

@param oid id of the object for which the
                reference is returned.
@return the object reference 

@exception ObjectNotActive if the Object Id value 
            is not active in the POA.
@exception WrongPolicy if the RETAIN policy is not 
            present.
"
      end

      operation 1121666 "id"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This returns the unique id of the POA in the process in which it 
is created.  It is for use by portable interceptors.
<p>
This id is guaranteed unique for the life span of the POA in the
process.  For persistent POAs, this means that if a POA is created 
in the same path with the same name as another POA, these POAs 
are identical and, therefore, have the same id.  For transient 
POAs, each POA is unique.
"
      end
    end

    class 234242 "ThreadPolicy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ThreadPolicy.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The ThreadPolicy specifies the threading model 
used with the created POA. The default is 
ORB_CTRL_MODEL.
"
      classrelation 313730 // <generalisation>
	relation 313730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 313730 // <generalisation>
	  b parent class_ref 238850 // ThreadPolicyOperations
      end

      classrelation 313858 // <generalisation>
	relation 313858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 313858 // <generalisation>
	  b parent class_ref 134274 // Policy
      end

      classrelation 313986 // <generalisation>
	relation 313986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 313986 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 234370 "ThreadPolicyValue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ThreadPolicyValue.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The ThreadPolicyValue can have the following values.
ORB_CTRL_MODEL - The ORB is responsible for assigning 
requests for an ORB- controlled POA to threads. 
SINGLE_THREAD_MODEL - Requests for a single-threaded 
POA are processed sequentially. 
"
      classrelation 4913026 // <realization>
	relation 4913026 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4913026 // <realization>
	  b parent class_ref 136450 // IDLEntity
      end

      attribute 2661890 "__value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2662018 "__size"
	class_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4913154 // __array (<unidirectional association>)
	relation 4913154 --->
	  a role_name "__array" multiplicity "[]" init_value " new org.omg.PortableServer.ThreadPolicyValue [__size]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4913154 // __array (<unidirectional association>)
	  b parent class_ref 234370 // ThreadPolicyValue
      end

      attribute 2662146 "_ORB_CTRL_MODEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4913282 // ORB_CTRL_MODEL (<unidirectional association>)
	relation 4913282 --->
	  a role_name "ORB_CTRL_MODEL" init_value " new org.omg.PortableServer.ThreadPolicyValue(_ORB_CTRL_MODEL)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4913282 // ORB_CTRL_MODEL (<unidirectional association>)
	  b parent class_ref 234370 // ThreadPolicyValue
      end

      attribute 2662274 "_SINGLE_THREAD_MODEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4913410 // SINGLE_THREAD_MODEL (<unidirectional association>)
	relation 4913410 --->
	  a role_name "SINGLE_THREAD_MODEL" init_value " new org.omg.PortableServer.ThreadPolicyValue(_SINGLE_THREAD_MODEL)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4913410 // SINGLE_THREAD_MODEL (<unidirectional association>)
	  b parent class_ref 234370 // ThreadPolicyValue
      end

      operation 12436354 "value"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12436482 "from_int"
	class_operation public return_type class_ref 234370 // ThreadPolicyValue
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12436610 "ThreadPolicyValue"
	protected explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 234498 "ServantRetentionPolicy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantRetentionPolicy.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


This policy specifies whether the created POA retains 
active servants in an Active Object Map. 
"
      classrelation 312834 // <generalisation>
	relation 312834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 312834 // <generalisation>
	  b parent class_ref 238594 // ServantRetentionPolicyOperations
      end

      classrelation 312962 // <generalisation>
	relation 312962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 312962 // <generalisation>
	  b parent class_ref 134274 // Policy
      end

      classrelation 313090 // <generalisation>
	relation 313090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 313090 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 234626 "ServantRetentionPolicyValue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantRetentionPolicyValue.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


ServantRetentionPolicyValue can have the following 
values. RETAIN - to indicate that the POA will retain 
active servants in its Active Object Map. 
NON_RETAIN - to indicate Servants are not retained by 
the POA. If no ServantRetentionPolicy is specified at 
POA creation, the default is RETAIN.
"
      classrelation 4912514 // <realization>
	relation 4912514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4912514 // <realization>
	  b parent class_ref 136450 // IDLEntity
      end

      attribute 2661250 "__value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2661378 "__size"
	class_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4912642 // __array (<unidirectional association>)
	relation 4912642 --->
	  a role_name "__array" multiplicity "[]" init_value " new org.omg.PortableServer.ServantRetentionPolicyValue [__size]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4912642 // __array (<unidirectional association>)
	  b parent class_ref 234626 // ServantRetentionPolicyValue
      end

      attribute 2661506 "_RETAIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4912770 // RETAIN (<unidirectional association>)
	relation 4912770 --->
	  a role_name "RETAIN" init_value " new org.omg.PortableServer.ServantRetentionPolicyValue(_RETAIN)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4912770 // RETAIN (<unidirectional association>)
	  b parent class_ref 234626 // ServantRetentionPolicyValue
      end

      attribute 2661634 "_NON_RETAIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4912898 // NON_RETAIN (<unidirectional association>)
	relation 4912898 --->
	  a role_name "NON_RETAIN" init_value " new org.omg.PortableServer.ServantRetentionPolicyValue(_NON_RETAIN)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4912898 // NON_RETAIN (<unidirectional association>)
	  b parent class_ref 234626 // ServantRetentionPolicyValue
      end

      operation 12435970 "value"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12436098 "from_int"
	class_operation public return_type class_ref 234626 // ServantRetentionPolicyValue
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12436226 "ServantRetentionPolicyValue"
	protected explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 234754 "RequestProcessingPolicy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/RequestProcessingPolicy.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


This policy specifies how requests are processed by 
the created POA.  The default is 
USE_ACTIVE_OBJECT_MAP_ONLY.
"
      classrelation 311938 // <generalisation>
	relation 311938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 311938 // <generalisation>
	  b parent class_ref 238338 // RequestProcessingPolicyOperations
      end

      classrelation 312066 // <generalisation>
	relation 312066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 312066 // <generalisation>
	  b parent class_ref 134274 // Policy
      end

      classrelation 312194 // <generalisation>
	relation 312194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 312194 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 234882 "RequestProcessingPolicyValue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/RequestProcessingPolicyValue.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The RequestProcessingPolicyValue can have the following
values.  USE_ACTIVE_OBJECT_MAP_ONLY - If the Object Id 
is not found in the Active Object Map, 
an OBJECT_NOT_EXIST exception is returned to the 
client. The RETAIN policy is also required.
USE_DEFAULT_SERVANT - If the Object Id is not found in 
the Active Object Map or the NON_RETAIN policy is 
present, and a default servant has been registered 
with the POA using the set_servant operation, 
the request is dispatched to the default servant. 
USE_SERVANT_MANAGER - If the Object Id is not found 
in the Active Object Map or the NON_RETAIN policy 
is present, and a servant manager has been registered 
with the POA using the set_servant_manager operation, 
the servant manager is given the opportunity to 
locate a servant or raise an exception. 
"
      classrelation 4910082 // <realization>
	relation 4910082 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4910082 // <realization>
	  b parent class_ref 136450 // IDLEntity
      end

      attribute 2660482 "__value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2660610 "__size"
	class_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4910210 // __array (<unidirectional association>)
	relation 4910210 --->
	  a role_name "__array" multiplicity "[]" init_value " new org.omg.PortableServer.RequestProcessingPolicyValue [__size]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4910210 // __array (<unidirectional association>)
	  b parent class_ref 234882 // RequestProcessingPolicyValue
      end

      attribute 2660738 "_USE_ACTIVE_OBJECT_MAP_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4910338 // USE_ACTIVE_OBJECT_MAP_ONLY (<unidirectional association>)
	relation 4910338 --->
	  a role_name "USE_ACTIVE_OBJECT_MAP_ONLY" init_value " new org.omg.PortableServer.RequestProcessingPolicyValue(_USE_ACTIVE_OBJECT_MAP_ONLY)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4910338 // USE_ACTIVE_OBJECT_MAP_ONLY (<unidirectional association>)
	  b parent class_ref 234882 // RequestProcessingPolicyValue
      end

      attribute 2660866 "_USE_DEFAULT_SERVANT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4910466 // USE_DEFAULT_SERVANT (<unidirectional association>)
	relation 4910466 --->
	  a role_name "USE_DEFAULT_SERVANT" init_value " new org.omg.PortableServer.RequestProcessingPolicyValue(_USE_DEFAULT_SERVANT)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4910466 // USE_DEFAULT_SERVANT (<unidirectional association>)
	  b parent class_ref 234882 // RequestProcessingPolicyValue
      end

      attribute 2660994 "_USE_SERVANT_MANAGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4910594 // USE_SERVANT_MANAGER (<unidirectional association>)
	relation 4910594 --->
	  a role_name "USE_SERVANT_MANAGER" init_value " new org.omg.PortableServer.RequestProcessingPolicyValue(_USE_SERVANT_MANAGER)" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4910594 // USE_SERVANT_MANAGER (<unidirectional association>)
	  b parent class_ref 234882 // RequestProcessingPolicyValue
      end

      operation 12432514 "value"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12432642 "from_int"
	class_operation public return_type class_ref 234882 // RequestProcessingPolicyValue
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12432770 "RequestProcessingPolicyValue"
	protected explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 235010 "AdapterActivator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/AdapterActivator.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


An adapter activator supplies a POA with the ability 
to create child POAs on demand, as a side-effect of 
receiving a request that names the child POA 
(or one of its children), or when find_POA is called 
with an activate parameter value of TRUE.
"
      classrelation 4906498 // <generalisation>
	relation 4906498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4906498 // <generalisation>
	  b parent class_ref 1475714 // AdapterActivatorOperations
      end

      classrelation 4906626 // <generalisation>
	relation 4906626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4906626 // <generalisation>
	  b parent class_ref 133378 // Object
      end

      classrelation 4906754 // <generalisation>
	relation 4906754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4906754 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 236290 "POAManagerOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/POAManagerOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


Each POA object has an associated POAManager object. 
A POA manager may be associated with one or more 
POA objects. A POA manager encapsulates the processing 
state of the POAs it is associated with.
"
      operation 1129858 "activate"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 236418 // AdapterInactive
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation changes the state of the POA manager 
to active, causing associated POAs to start processing
requests.
@exception AdapterInactive is raised if the operation is
           invoked on the POAManager in inactive state.
"
      end

      operation 1129986 "hold_requests"
	public explicit_return_type "void"
	nparams 1
	  param inout name "wait_for_completion" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 236418 // AdapterInactive
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation changes the state of the POA manager 
to holding, causing associated POAs to queue incoming
requests.
@param wait_for_completion if FALSE, the operation 
           returns immediately after changing state.  
           If TRUE, it waits for all active requests 
           to complete. 
@exception AdapterInactive is raised if the operation is
           invoked on the POAManager in inactive state.
"
      end

      operation 1130114 "discard_requests"
	public explicit_return_type "void"
	nparams 1
	  param inout name "wait_for_completion" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 236418 // AdapterInactive
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation changes the state of the POA manager 
to discarding. This causes associated POAs to discard
incoming requests.
@param wait_for_completion if FALSE, the operation 
           returns immediately after changing state.  
           If TRUE, it waits for all active requests 
           to complete. 
@exception AdapterInactive is raised if the operation is
           invoked on the POAManager in inactive state.
"
      end

      operation 1130242 "deactivate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "etherealize_objects" explicit_type "boolean"
	  param inout name "wait_for_completion" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 236418 // AdapterInactive
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation changes the state of the POA manager 
to inactive, causing associated POAs to reject the
requests that have not begun executing as well as
as any new requests.
@param etherealize_objects a flag to indicate whether
       to invoke the etherealize operation of the
       associated servant manager for all active 
       objects.
@param wait_for_completion if FALSE, the operation 
           returns immediately after changing state.  
           If TRUE, it waits for all active requests 
           to complete. 
@exception AdapterInactive is raised if the operation is
           invoked on the POAManager in inactive state.
"
      end

      operation 1130370 "get_state"
	public return_type class_ref 236546 // State
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation returns the state of the POA manager.
"
      end
    end

    class 237826 "ServantActivator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantActivator.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the RETAIN policy it uses servant 
managers that are ServantActivators. 
"
      classrelation 4905218 // <generalisation>
	relation 4905218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4905218 // <generalisation>
	  b parent class_ref 1475458 // ServantActivatorOperations
      end

      classrelation 4905346 // <generalisation>
	relation 4905346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4905346 // <generalisation>
	  b parent class_ref 226818 // ServantManager
      end

      classrelation 4905474 // <generalisation>
	relation 4905474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4905474 // <generalisation>
	  b parent class_ref 136450 // IDLEntity
      end
    end

    class 238338 "RequestProcessingPolicyOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/RequestProcessingPolicyOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


This policy specifies how requests are processed by 
the created POA.  The default is 
USE_ACTIVE_OBJECT_MAP_ONLY.
"
      classrelation 311810 // <generalisation>
	relation 311810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 311810 // <generalisation>
	  b parent class_ref 230786 // PolicyOperations
      end

      operation 1148418 "value"
	public return_type class_ref 234882 // RequestProcessingPolicyValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "specifies the policy value
"
      end
    end

    class 238594 "ServantRetentionPolicyOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantRetentionPolicyOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


This policy specifies whether the created POA retains 
active servants in an Active Object Map. 
"
      classrelation 312706 // <generalisation>
	relation 312706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 312706 // <generalisation>
	  b parent class_ref 230786 // PolicyOperations
      end

      operation 1149314 "value"
	public return_type class_ref 234626 // ServantRetentionPolicyValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "specifies the policy value
"
      end
    end

    class 238850 "ThreadPolicyOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ThreadPolicyOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


The ThreadPolicy specifies the threading model 
used with the created POA. The default is 
ORB_CTRL_MODEL.
"
      classrelation 313602 // <generalisation>
	relation 313602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 313602 // <generalisation>
	  b parent class_ref 230786 // PolicyOperations
      end

      operation 1150210 "value"
	public return_type class_ref 234370 // ThreadPolicyValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "specifies the policy value
"
      end
    end

    class 1475330 "_ServantActivatorStub"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/_ServantActivatorStub.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the RETAIN policy it uses servant 
managers that are ServantActivators. 
"
      classrelation 4904962 // <generalisation>
	relation 4904962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4904962 // <generalisation>
	  b parent class_ref 133250 // ObjectImpl
      end

      classrelation 4905602 // <realization>
	relation 4905602 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4905602 // <realization>
	  b parent class_ref 237826 // ServantActivator
      end

      classrelation 4905730 // _opsClass (<unidirectional association>)
	relation 4905730 --->
	  a role_name "_opsClass" init_value " ServantActivatorOperations.class" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4905730 // _opsClass (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 12426498 "incarnate"
	public return_type class_ref 220034 // Servant
	nparams 2
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	nexceptions 1
	  exception class_ref 226690 // ForwardRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation is invoked by the POA whenever the 
POA receives a request for an object that is not 
currently active, assuming the POA has the 
USE_SERVANT_MANAGER and RETAIN policies.
@param oid object Id associated with the object on 
           the request was made.
@param adapter object reference for the POA in which
               the object is being activated.
@return Servant corresponding to oid is created or 
        located by the user supplied servant manager.
@exception ForwardRequest to indicate to the ORB 
           that it is responsible for delivering 
           the current request and subsequent 
           requests to the object denoted in the 
           forward_reference member of the exception.
"
      end

      operation 12426626 "etherealize"
	public explicit_return_type "void"
	nparams 5
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	  param inout name "serv" type class_ref 220034 // Servant
	  param inout name "cleanup_in_progress" explicit_type "boolean"
	  param inout name "remaining_activations" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " incarnate

This operation is invoked whenever a servant for 
an object is deactivated, assuming the POA has 
the USE_SERVANT_MANAGER and RETAIN policies.
@param oid object Id associated with the object 
           being deactivated.
@param adapter object reference for the POA in which
               the object was active.
@param serv contains reference to the servant
       associated with the object being deactivated.
@param cleanup_in_progress if TRUE indicates that
       destroy or deactivate is called with 
       etherealize_objects param of TRUE.  FALSE
       indicates that etherealize was called due to
       other reasons.
@param remaining_activations indicates whether the
       Servant Manager can destroy a servant.  If
       set to TRUE, the Servant Manager should wait
       until all invocations in progress have
       completed.
"
      end

      classrelation 4905858 // __ids (<unidirectional association>)
	relation 4905858 --->
	  a role_name "__ids" multiplicity "[]" init_value " {
    \"IDL:omg.org/PortableServer/ServantActivator:2.3\", 
    \"IDL:omg.org/PortableServer/ServantManager:1.0\"}" class_relation private
	    comment " etherealize
 Type-specific CORBA::Object operations
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4905858 // __ids (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12426754 "_ids"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12426882 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12427010 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1475458 "ServantActivatorOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantActivatorOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the RETAIN policy it uses servant 
managers that are ServantActivators. 
"
      classrelation 4905090 // <generalisation>
	relation 4905090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4905090 // <generalisation>
	  b parent class_ref 226434 // ServantManagerOperations
      end

      operation 12426242 "incarnate"
	public return_type class_ref 220034 // Servant
	nparams 2
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	nexceptions 1
	  exception class_ref 226690 // ForwardRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation is invoked by the POA whenever the 
POA receives a request for an object that is not 
currently active, assuming the POA has the 
USE_SERVANT_MANAGER and RETAIN policies.
@param oid object Id associated with the object on 
           the request was made.
@param adapter object reference for the POA in which
               the object is being activated.
@return Servant corresponding to oid is created or 
        located by the user supplied servant manager.
@exception ForwardRequest to indicate to the ORB 
           that it is responsible for delivering 
           the current request and subsequent 
           requests to the object denoted in the 
           forward_reference member of the exception.
"
      end

      operation 12426370 "etherealize"
	public explicit_return_type "void"
	nparams 5
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	  param inout name "serv" type class_ref 220034 // Servant
	  param inout name "cleanup_in_progress" explicit_type "boolean"
	  param inout name "remaining_activations" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation is invoked whenever a servant for 
an object is deactivated, assuming the POA has 
the USE_SERVANT_MANAGER and RETAIN policies.
@param oid object Id associated with the object 
           being deactivated.
@param adapter object reference for the POA in which
               the object was active.
@param serv contains reference to the servant
       associated with the object being deactivated.
@param cleanup_in_progress if TRUE indicates that
       destroy or deactivate is called with 
       etherealize_objects param of TRUE.  FALSE
       indicates that etherealize was called due to
       other reasons.
@param remaining_activations indicates whether the
       Servant Manager can destroy a servant.  If
       set to TRUE, the Servant Manager should wait
       until all invocations in progress have
       completed.
"
      end
    end

    class 1475586 "_ServantLocatorStub"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/_ServantLocatorStub.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the NON_RETAIN policy it uses servant 
managers that are ServantLocators. Because the POA 
knows that the servant returned by this servant 
manager will be used only for a single request, 
it can supply extra information to the servant 
manager's operations and the servant manager's pair 
of operations may be able to cooperate to do 
something different than a ServantActivator. 
When the POA uses the ServantLocator interface, 
immediately after performing the operation invocation 
on the servant returned by preinvoke, the POA will 
invoke postinvoke on the servant manager, passing the 
ObjectId value and the Servant value as parameters 
(among others). This feature may be used to force 
every request for objects associated with a POA to 
be mediated by the servant manager.
"
      classrelation 4905986 // <generalisation>
	relation 4905986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4905986 // <generalisation>
	  b parent class_ref 133250 // ObjectImpl
      end

      classrelation 4906114 // <realization>
	relation 4906114 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4906114 // <realization>
	  b parent class_ref 226178 // ServantLocator
      end

      classrelation 4906242 // _opsClass (<unidirectional association>)
	relation 4906242 --->
	  a role_name "_opsClass" init_value " ServantLocatorOperations.class" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4906242 // _opsClass (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 12427138 "preinvoke"
	public return_type class_ref 220034 // Servant
	nparams 4
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	  param inout name "operation" type class_ref 128130 // String
	  param inout name "the_cookie" type class_ref 226562 // CookieHolder
	nexceptions 1
	  exception class_ref 226690 // ForwardRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operations is used to get a servant that will be
used to process the request that caused preinvoke to
be called.
@param oid the object id associated with object on
           which the request was made. 
@param adapter the reference for POA in which the
               object is being activated.
@param operation the operation name.
@param the_cookie  an opaque value that can be set
                   by the servant manager to be used
                   during postinvoke.
@return Servant used to process incoming request.
@exception ForwardRequest to indicate to the ORB 
           that it is responsible for delivering 
           the current request and subsequent 
           requests to the object denoted in the 
           forward_reference member of the exception.
"
      end

      operation 12427266 "postinvoke"
	public explicit_return_type "void"
	nparams 5
	  param inout name "oid" explicit_type "byte"
	multiplicity "[]"
	  param inout name "adapter" type class_ref 220290 // POA
	  param inout name "operation" type class_ref 128130 // String
	  param inout name "the_cookie" type class_ref 129538 // Object
	  param inout name "the_servant" type class_ref 220034 // Servant
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " preinvoke

This operation is invoked whenener a servant completes
a request.
@param oid the object id ssociated with object on which
           the request was made.
@param adapter the reference for POA in which the
               object was active.
@param the_cookie  an opaque value that contains
                   the data set by preinvoke.
@param the_servant reference to the servant that is
                   associated with the object.
"
      end

      classrelation 4906370 // __ids (<unidirectional association>)
	relation 4906370 --->
	  a role_name "__ids" multiplicity "[]" init_value " {
    \"IDL:omg.org/PortableServer/ServantLocator:1.0\", 
    \"IDL:omg.org/PortableServer/ServantManager:1.0\"}" class_relation private
	    comment " postinvoke
 Type-specific CORBA::Object operations
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4906370 // __ids (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12427394 "_ids"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12427522 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12427650 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1475714 "AdapterActivatorOperations"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/AdapterActivatorOperations.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


An adapter activator supplies a POA with the ability 
to create child POAs on demand, as a side-effect of 
receiving a request that names the child POA 
(or one of its children), or when find_POA is called 
with an activate parameter value of TRUE.
"
      operation 12427778 "unknown_adapter"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "parent" type class_ref 220290 // POA
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This operation is invoked when the ORB receives 
a request for an object reference that identifies 
a target POA that does not exist. The ORB invokes 
this operation once for each POA that must be 
created in order for the target POA to exist.
@param parent indicates the parent POA for the POA
              that needs to be created.
@param name identifies the name of the POA relative to
            the parent.
@return returns TRUE if the POA was created or FALSE
        otherwise.
"
      end
    end

    class 1475842 "CurrentHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/CurrentHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.1\"
from ../../../../src/share/classes/org/omg/PortableServer/poa.idl
Tuesday, October 23, 2001 1:17:01 PM PDT


The PortableServer::Current interface, derived from
CORBA::Current, provides method implementations with
access to the identity of the object on which the
method was invoked. The Current interface is provided
to support servants that implement multiple objects,
but can be used within the context of POA-dispatched
method invocations on any servant. To provide location
transparency, ORBs are required to support use of
Current in the context of both locally and remotely
invoked operations. An instance of Current can be
obtained by the application by issuing the
CORBA::ORB::resolve_initial_references(\"POACurrent\")
operation. Thereafter, it can be used within the
context of a method dispatched by the POA to obtain
the POA and ObjectId that identify the object on
which that operation was invoked.
"
      classrelation 4906882 // _id (<unidirectional association>)
	relation 4906882 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableServer/Current:2.3\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4906882 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12427906 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 232706 // Current
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12428034 "extract"
	class_operation public return_type class_ref 232706 // Current
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4907010 // __typeCode (<unidirectional association>)
	relation 4907010 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4907010 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12428162 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12428290 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12428418 "read"
	class_operation public return_type class_ref 232706 // Current
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12428546 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 232706 // Current
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12428674 "narrow"
	class_operation public return_type class_ref 232706 // Current
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1475970 "DynamicImplementation"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Allows dynamic handling of object invocations.  POA-based DSI
servants inherit from the
standard <code>DynamicImplementation</code> class, this class inherits
from the <code>Servant</code> class. Based on IDL to Java spec.
CORBA V 2.3.1 ptc/00-01-08.pdf.
"
      classrelation 4907138 // <generalisation>
	relation 4907138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4907138 // <generalisation>
	  b parent class_ref 220034 // Servant
      end

      operation 12428802 "invoke"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 154626 // ServerRequest
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives requests issued to any CORBA object
incarnated by the DSI servant and performs the processing
necessary to execute the request.
@param request the request issued to the CORBA object.
"
      end
    end

    class 1476098 "ForwardRequestHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ForwardRequestHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      classrelation 4907522 // _id (<unidirectional association>)
	relation 4907522 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableServer/ForwardRequest:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4907522 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12429314 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 226690 // ForwardRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12429442 "extract"
	class_operation public return_type class_ref 226690 // ForwardRequest
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4907650 // __typeCode (<unidirectional association>)
	relation 4907650 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4907650 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      attribute 2657666 "__active"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 12429570 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12429698 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12429826 "read"
	class_operation public return_type class_ref 226690 // ForwardRequest
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12429954 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 226690 // ForwardRequest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1476226 "ID_ASSIGNMENT_POLICY_ID"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ID_ASSIGNMENT_POLICY_ID.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2657794 "value"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)(19L)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value representing ID_ASSIGNMENT_POLICY_ID.

"
      end
    end

    class 1476354 "ID_UNIQUENESS_POLICY_ID"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ID_UNIQUENESS_POLICY_ID.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2657922 "value"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)(18L)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value representing ID_UNIQUENESS_POLICY_ID.

"
      end
    end

    class 1476482 "IMPLICIT_ACTIVATION_POLICY_ID"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/IMPLICIT_ACTIVATION_POLICY_ID.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2659074 "value"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)(20L)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value representing IMPLICIT_ACTIVATION_POLICY_ID.

"
      end
    end

    class 1476610 "LIFESPAN_POLICY_ID"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/LIFESPAN_POLICY_ID.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2659714 "value"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)(17L)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value representing LIFESPAN_POLICY_ID.

"
      end
    end

    class 1476738 "POAHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/POAHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.1\"
from ../../../../src/share/classes/org/omg/PortableServer/poa.idl
Tuesday, October 23, 2001 1:16:58 PM PDT


A POA object manages the implementation of a
collection of objects. The POA supports a name space
for the objects, which are identified by Object Ids.
A POA also provides a name space for POAs. A POA is
created as a child of an existing POA, which forms a
hierarchy starting with the root POA. A POA object
must not be exported to other processes, or
externalized with ORB::object_to_string.
"
      classrelation 4909826 // _id (<unidirectional association>)
	relation 4909826 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableServer/POA:2.3\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4909826 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12431618 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 220290 // POA
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12431746 "extract"
	class_operation public return_type class_ref 220290 // POA
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4909954 // __typeCode (<unidirectional association>)
	relation 4909954 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4909954 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12431874 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12432002 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12432130 "read"
	class_operation public return_type class_ref 220290 // POA
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12432258 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 220290 // POA
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12432386 "narrow"
	class_operation public return_type class_ref 220290 // POA
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1476866 "REQUEST_PROCESSING_POLICY_ID"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/REQUEST_PROCESSING_POLICY_ID.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2660354 "value"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)(22L)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value representing REQUEST_PROCESSING_POLICY_ID.

"
      end
    end

    class 1476994 "SERVANT_RETENTION_POLICY_ID"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/SERVANT_RETENTION_POLICY_ID.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2661122 "value"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)(21L)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value representing SERVANT_RETENTION_POLICY_ID.

"
      end
    end

    class 1477122 "ServantActivatorHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantActivatorHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the RETAIN policy it uses servant 
managers that are ServantActivators. 
"
      classrelation 4910722 // _id (<unidirectional association>)
	relation 4910722 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableServer/ServantActivator:2.3\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4910722 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12432898 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 237826 // ServantActivator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12433026 "extract"
	class_operation public return_type class_ref 237826 // ServantActivator
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4910850 // __typeCode (<unidirectional association>)
	relation 4910850 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4910850 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12433154 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12433282 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12433410 "read"
	class_operation public return_type class_ref 237826 // ServantActivator
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12433538 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 237826 // ServantActivator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12433666 "narrow"
	class_operation public return_type class_ref 237826 // ServantActivator
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12433794 "unchecked_narrow"
	class_operation public return_type class_ref 237826 // ServantActivator
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1477250 "ServantActivatorPOA"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantActivatorPOA.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the RETAIN policy it uses servant 
managers that are ServantActivators. 
"
      classrelation 4910978 // <generalisation>
	relation 4910978 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4910978 // <generalisation>
	  b parent class_ref 220034 // Servant
      end

      classrelation 4911106 // <realization>
	relation 4911106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4911106 // <realization>
	  b parent class_ref 1475458 // ServantActivatorOperations
      end

      classrelation 4911234 // <realization>
	relation 4911234 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4911234 // <realization>
	  b parent class_ref 136706 // InvokeHandler
      end

      classrelation 4911362 // _methods (<unidirectional association>)
	relation 4911362 --->
	  a role_name "_methods" init_value " new java.util.Hashtable ()" class_relation private
	    comment " Constructors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4911362 // _methods (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      extra_member 189954 "initialization"
	
	cpp "" ""
	java "  static {
    _methods.put (\"incarnate\", new java.lang.Integer (0));
    _methods.put (\"etherealize\", new java.lang.Integer (1));
  }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 12433922 "_invoke"
	public return_type class_ref 134914 // OutputStream
	nparams 3
	  param inout name "$method" type class_ref 128130 // String
	  param inout name "in" type class_ref 135042 // InputStream
	  param inout name "$rh" type class_ref 136834 // ResponseHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4911490 // __ids (<unidirectional association>)
	relation 4911490 --->
	  a role_name "__ids" multiplicity "[]" init_value " {
    \"IDL:omg.org/PortableServer/ServantActivator:2.3\", 
    \"IDL:omg.org/PortableServer/ServantManager:1.0\"}" class_relation private
	    comment " _invoke
 Type-specific CORBA::Object operations
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4911490 // __ids (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12434050 "_all_interfaces"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "poa" type class_ref 220290 // POA
	  param inout name "objectId" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12434178 "_this"
	public return_type class_ref 237826 // ServantActivator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12434306 "_this"
	public return_type class_ref 237826 // ServantActivator
	nparams 1
	  param inout name "orb" type class_ref 128386 // ORB
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1477378 "ServantLocatorHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantLocatorHelper.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the NON_RETAIN policy it uses servant 
managers that are ServantLocators. Because the POA 
knows that the servant returned by this servant 
manager will be used only for a single request, 
it can supply extra information to the servant 
manager's operations and the servant manager's pair 
of operations may be able to cooperate to do 
something different than a ServantActivator. 
When the POA uses the ServantLocator interface, 
immediately after performing the operation invocation 
on the servant returned by preinvoke, the POA will 
invoke postinvoke on the servant manager, passing the 
ObjectId value and the Servant value as parameters 
(among others). This feature may be used to force 
every request for objects associated with a POA to 
be mediated by the servant manager.
"
      classrelation 4911618 // _id (<unidirectional association>)
	relation 4911618 --->
	  a role_name "_id" init_value " \"IDL:omg.org/PortableServer/ServantLocator:1.0\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4911618 // _id (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12434434 "insert"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 144642 // Any
	  param inout name "that" type class_ref 226178 // ServantLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12434562 "extract"
	class_operation public return_type class_ref 226178 // ServantLocator
	nparams 1
	  param inout name "a" type class_ref 144642 // Any
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4911746 // __typeCode (<unidirectional association>)
	relation 4911746 --->
	  a role_name "__typeCode" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4911746 // __typeCode (<unidirectional association>)
	  b parent class_ref 144770 // TypeCode
      end

      operation 12434690 "type"
	class_operation public return_type class_ref 144770 // TypeCode
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12434818 "id"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12434946 "read"
	class_operation public return_type class_ref 226178 // ServantLocator
	nparams 1
	  param inout name "istream" type class_ref 135042 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12435074 "write"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "ostream" type class_ref 134914 // OutputStream
	  param inout name "value" type class_ref 226178 // ServantLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12435202 "narrow"
	class_operation public return_type class_ref 226178 // ServantLocator
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12435330 "unchecked_narrow"
	class_operation public return_type class_ref 226178 // ServantLocator
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1477506 "ServantLocatorPOA"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/ServantLocatorPOA.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT


When the POA has the NON_RETAIN policy it uses servant 
managers that are ServantLocators. Because the POA 
knows that the servant returned by this servant 
manager will be used only for a single request, 
it can supply extra information to the servant 
manager's operations and the servant manager's pair 
of operations may be able to cooperate to do 
something different than a ServantActivator. 
When the POA uses the ServantLocator interface, 
immediately after performing the operation invocation 
on the servant returned by preinvoke, the POA will 
invoke postinvoke on the servant manager, passing the 
ObjectId value and the Servant value as parameters 
(among others). This feature may be used to force 
every request for objects associated with a POA to 
be mediated by the servant manager.
"
      classrelation 4911874 // <generalisation>
	relation 4911874 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4911874 // <generalisation>
	  b parent class_ref 220034 // Servant
      end

      classrelation 4912002 // <realization>
	relation 4912002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4912002 // <realization>
	  b parent class_ref 226306 // ServantLocatorOperations
      end

      classrelation 4912130 // <realization>
	relation 4912130 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4912130 // <realization>
	  b parent class_ref 136706 // InvokeHandler
      end

      classrelation 4912258 // _methods (<unidirectional association>)
	relation 4912258 --->
	  a role_name "_methods" init_value " new java.util.Hashtable ()" class_relation private
	    comment " Constructors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4912258 // _methods (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      extra_member 190082 "initialization"
	
	cpp "" ""
	java "  static {
    _methods.put (\"preinvoke\", new java.lang.Integer (0));
    _methods.put (\"postinvoke\", new java.lang.Integer (1));
  }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 12435458 "_invoke"
	public return_type class_ref 134914 // OutputStream
	nparams 3
	  param inout name "$method" type class_ref 128130 // String
	  param inout name "in" type class_ref 135042 // InputStream
	  param inout name "$rh" type class_ref 136834 // ResponseHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4912386 // __ids (<unidirectional association>)
	relation 4912386 --->
	  a role_name "__ids" multiplicity "[]" init_value " {
    \"IDL:omg.org/PortableServer/ServantLocator:1.0\", 
    \"IDL:omg.org/PortableServer/ServantManager:1.0\"}" class_relation private
	    comment " _invoke
 Type-specific CORBA::Object operations
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4912386 // __ids (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12435586 "_all_interfaces"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "poa" type class_ref 220290 // POA
	  param inout name "objectId" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12435714 "_this"
	public return_type class_ref 226178 // ServantLocator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12435842 "_this"
	public return_type class_ref 226178 // ServantLocator
	nparams 1
	  param inout name "orb" type class_ref 128386 // ORB
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1477634 "THREAD_POLICY_ID"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "org/omg/PortableServer/THREAD_POLICY_ID.java .
Generated by the IDL-to-Java compiler (portable), version \"3.2\"
from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/corba/src/share/classes/org/omg/PortableServer/poa.idl
Friday, July 21, 2017 10:09:19 PM PDT
"
      attribute 2661762 "value"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)(16L)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value representing THREAD_POLICY_ID.

"
      end
    end
  end

  package_ref 140930 // portable

  deploymentview 133250 "PortableServer"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 176642 "Servant"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA.ORB;
import org.omg.PortableServer.portable.Delegate;
${definition}"
      associated_elems
	class_ref 220034 // Servant
      end
      comment "Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 180610 "ServantManagerOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 226434 // ServantManagerOperations
      end
    end

    artifact 180738 "ServantLocatorOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 226306 // ServantLocatorOperations
      end
    end

    artifact 180866 "ServantManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 226818 // ServantManager
      end
    end

    artifact 180994 "ServantLocator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 226178 // ServantLocator
      end
    end

    artifact 182786 "IdAssignmentPolicyOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 230658 // IdAssignmentPolicyOperations
      end
    end

    artifact 183042 "IdAssignmentPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 230530 // IdAssignmentPolicy
      end
    end

    artifact 183298 "IdUniquenessPolicyOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 231298 // IdUniquenessPolicyOperations
      end
    end

    artifact 183426 "IdUniquenessPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 231170 // IdUniquenessPolicy
      end
    end

    artifact 183682 "ImplicitActivationPolicyOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 231810 // ImplicitActivationPolicyOperations
      end
    end

    artifact 183810 "ImplicitActivationPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 231682 // ImplicitActivationPolicy
      end
    end

    artifact 184066 "LifespanPolicyOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 232322 // LifespanPolicyOperations
      end
    end

    artifact 184194 "LifespanPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 232194 // LifespanPolicy
      end
    end

    artifact 184450 "CurrentOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 232834 // CurrentOperations
      end
    end

    artifact 184578 "Current"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 232706 // Current
      end
    end

    artifact 185346 "POAOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 233730 // POAOperations
      end
    end

    artifact 185474 "POA"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 220290 // POA
      end
    end

    artifact 185730 "POAManagerOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 236290 // POAManagerOperations
      end
    end

    artifact 185858 "POAManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 233346 // POAManager
      end
    end

    artifact 187394 "RequestProcessingPolicyOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 238338 // RequestProcessingPolicyOperations
      end
    end

    artifact 187522 "RequestProcessingPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 234754 // RequestProcessingPolicy
      end
    end

    artifact 187778 "ServantRetentionPolicyOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 238594 // ServantRetentionPolicyOperations
      end
    end

    artifact 187906 "ServantRetentionPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 234498 // ServantRetentionPolicy
      end
    end

    artifact 188162 "ThreadPolicyOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 238850 // ThreadPolicyOperations
      end
    end

    artifact 188290 "ThreadPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 234242 // ThreadPolicy
      end
    end

    artifact 1080962 "ServantActivatorOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1475458 // ServantActivatorOperations
      end
    end

    artifact 1081090 "ServantActivator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 237826 // ServantActivator
      end
    end

    artifact 1081218 "_ServantActivatorStub"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1475330 // _ServantActivatorStub
      end
    end

    artifact 1081346 "_ServantLocatorStub"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1475586 // _ServantLocatorStub
      end
    end

    artifact 1081474 "AdapterActivatorOperations"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1475714 // AdapterActivatorOperations
      end
    end

    artifact 1081602 "AdapterActivator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 235010 // AdapterActivator
      end
    end

    artifact 1081730 "CurrentHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1475842 // CurrentHelper
      end
      comment "Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1081858 "DynamicImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1475970 // DynamicImplementation
      end
      comment "Copyright (c) 1999, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1081986 "ForwardRequest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 226690 // ForwardRequest
      end
    end

    artifact 1082114 "ForwardRequestHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476098 // ForwardRequestHelper
      end
    end

    artifact 1082242 "ID_ASSIGNMENT_POLICY_ID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476226 // ID_ASSIGNMENT_POLICY_ID
      end
    end

    artifact 1082370 "ID_UNIQUENESS_POLICY_ID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476354 // ID_UNIQUENESS_POLICY_ID
      end
    end

    artifact 1082498 "IdAssignmentPolicyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 230914 // IdAssignmentPolicyValue
      end
    end

    artifact 1082626 "IdUniquenessPolicyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 231426 // IdUniquenessPolicyValue
      end
    end

    artifact 1082754 "IMPLICIT_ACTIVATION_POLICY_ID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476482 // IMPLICIT_ACTIVATION_POLICY_ID
      end
    end

    artifact 1082882 "ImplicitActivationPolicyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 231938 // ImplicitActivationPolicyValue
      end
    end

    artifact 1083010 "LIFESPAN_POLICY_ID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476610 // LIFESPAN_POLICY_ID
      end
    end

    artifact 1083138 "LifespanPolicyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 232450 // LifespanPolicyValue
      end
    end

    artifact 1083266 "POAHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476738 // POAHelper
      end
      comment "Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1083394 "REQUEST_PROCESSING_POLICY_ID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476866 // REQUEST_PROCESSING_POLICY_ID
      end
    end

    artifact 1083522 "RequestProcessingPolicyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 234882 // RequestProcessingPolicyValue
      end
    end

    artifact 1083650 "SERVANT_RETENTION_POLICY_ID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1476994 // SERVANT_RETENTION_POLICY_ID
      end
    end

    artifact 1083778 "ServantActivatorHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1477122 // ServantActivatorHelper
      end
    end

    artifact 1083906 "ServantActivatorPOA"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1477250 // ServantActivatorPOA
      end
    end

    artifact 1084034 "ServantLocatorHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1477378 // ServantLocatorHelper
      end
    end

    artifact 1084162 "ServantLocatorPOA"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1477506 // ServantLocatorPOA
      end
    end

    artifact 1084290 "ServantRetentionPolicyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 234626 // ServantRetentionPolicyValue
      end
    end

    artifact 1084418 "THREAD_POLICY_ID"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1477634 // THREAD_POLICY_ID
      end
    end

    artifact 1084546 "ThreadPolicyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 234370 // ThreadPolicyValue
      end
    end
  end

  package_ref 141570 // ServantLocatorPackage

  package_ref 141698 // POAPackage

  package_ref 142210 // CurrentPackage

  package_ref 142338 // POAManagerPackage
end
