class Message_1_0
!!!1396354.java!!!	Message_1_0(in _magic : int, inout _byte_order : boolean, in _message_type : byte, in _message_size : int)
        magic = _magic;
        GIOP_version = GIOPVersion.V1_0;
        byte_order = _byte_order;
        message_type = _message_type;
        message_size = _message_size;
!!!1396482.java!!!	getGIOPVersion() : GIOPVersion
        return this.GIOP_version;
!!!1396610.java!!!	getType() : int
        return this.message_type;
!!!1396738.java!!!	getSize() : int
            return this.message_size;
!!!1396866.java!!!	isLittleEndian() : boolean
        return this.byte_order;
!!!1396994.java!!!	moreFragmentsToFollow() : boolean
        return false;
!!!1397122.java!!!	setSize(inout byteBuffer : ByteBuffer, in size : int) : void
            this.message_size = size;

        //
        // Patch the size field in the header.
        //
            int patch = size - GIOPMessageHeaderLength;
        if (!isLittleEndian()) {
            byteBuffer.put(8,  (byte)((patch >>> 24) & 0xFF));
            byteBuffer.put(9,  (byte)((patch >>> 16) & 0xFF));
            byteBuffer.put(10, (byte)((patch >>> 8)  & 0xFF));
            byteBuffer.put(11, (byte)((patch >>> 0)  & 0xFF));
        } else {
            byteBuffer.put(8,  (byte)((patch >>> 0)  & 0xFF));
            byteBuffer.put(9,  (byte)((patch >>> 8)  & 0xFF));
            byteBuffer.put(10, (byte)((patch >>> 16) & 0xFF));
            byteBuffer.put(11, (byte)((patch >>> 24) & 0xFF));
        }
!!!1397250.java!!!	createFragmentMessage() : FragmentMessage
        throw wrapper.fragmentationDisallowed(
            CompletionStatus.COMPLETED_MAYBE);
!!!1397378.java!!!	read(inout istream : InputStream) : void
        /*
        this.magic = istream.read_long();
        this.GIOP_version = (new GIOPVersion()).read(istream);
        this.byte_order = istream.read_boolean();
        this.message_type = istream.read_octet();
        this.message_size = istream.read_ulong();
        */
!!!1397506.java!!!	write(inout ostream : OutputStream) : void
        ostream.write_long(this.magic);
        nullCheck(this.GIOP_version);
        this.GIOP_version.write(ostream);
        ostream.write_boolean(this.byte_order);
        ostream.write_octet(this.message_type);
        ostream.write_ulong(this.message_size);
