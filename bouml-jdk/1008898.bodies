class UnicastRemoteObject
!!!7887234.java!!!	UnicastRemoteObject()
        this(0);
!!!7887362.java!!!	UnicastRemoteObject(in port : int)
        this.port = port;
        exportObject((Remote) this, port);
!!!7887490.java!!!	UnicastRemoteObject(in port : int, inout csf : RMIClientSocketFactory, inout ssf : RMIServerSocketFactory)
        this.port = port;
        this.csf = csf;
        this.ssf = ssf;
        exportObject((Remote) this, port, csf, ssf);
!!!7887618.java!!!	readObject(inout in : ObjectInputStream) : void
        in.defaultReadObject();
        reexport();
!!!7887746.java!!!	clone() : Object
        try {
            UnicastRemoteObject cloned = (UnicastRemoteObject) super.clone();
            cloned.reexport();
            return cloned;
        } catch (RemoteException e) {
            throw new ServerCloneException("Clone failed", e);
        }
!!!7887874.java!!!	reexport() : void
        if (csf == null && ssf == null) {
            exportObject((Remote) this, port);
        } else {
            exportObject((Remote) this, port, csf, ssf);
        }
!!!7888002.java!!!	exportObject(inout obj : Remote) : RemoteStub
        /*
         * Use UnicastServerRef constructor passing the boolean value true
         * to indicate that only a generated stub class should be used.  A
         * generated stub class must be used instead of a dynamic proxy
         * because the return value of this method is RemoteStub which a
         * dynamic proxy class cannot extend.
         */
        return (RemoteStub) exportObject(obj, new UnicastServerRef(true));
!!!7888130.java!!!	exportObject(inout obj : Remote, in port : int) : Remote
        return exportObject(obj, new UnicastServerRef(port));
!!!7888258.java!!!	exportObject(inout obj : Remote, in port : int, inout csf : RMIClientSocketFactory, inout ssf : RMIServerSocketFactory) : Remote

        return exportObject(obj, new UnicastServerRef2(port, csf, ssf));
!!!7888386.java!!!	unexportObject(inout obj : Remote, inout force : boolean) : boolean
        return sun.rmi.transport.ObjectTable.unexportObject(obj, force);
!!!7888514.java!!!	exportObject(inout obj : Remote, inout sref : UnicastServerRef) : Remote
        // if obj extends UnicastRemoteObject, set its ref.
        if (obj instanceof UnicastRemoteObject) {
            ((UnicastRemoteObject) obj).ref = sref;
        }
        return sref.exportObject(obj, null, false);
