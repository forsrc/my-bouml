format 222
"swing" // jdk1.8::javax::swing
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/swing/"
  java_package "javax.swing"
  classview 146178 "swing"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 338050 "Painter"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A painting delegate. The Painter interface defines exactly one method,
<code>paint</code>. It is used in situations where the developer can change
the painting routine of a component without having to resort to subclassing
the component. It is also generically useful when doing any form of painting
delegation.</p>

<p><code>Painter</code>s are simply encapsulations of Java2D code and make
it fairly trivial to reuse existing <code>Painter</code>s or to combine
them together. Implementations of this interface are also trivial to write,
such that if you can't find a <code>Painter</code> that does what you need,
you can write one with minimal effort. Writing a <code>Painter</code> requires
knowledge of Java2D.</p>

<p>A <code>Painter</code> may be created with a type parameter. This type will be
expected in the <code>paint</code> method. For example, you may wish to write a
<code>Painter</code> that only works with subclasses of {@link java.awt.Component}.
In that case, when the <code>Painter</code> is declared, you may declare that
it requires a <code>Component</code>, allowing the paint method to be type safe. Ex:
<pre>
{@code
Painter<Component> p = new Painter<Component>() {
    public void paint(Graphics2D g, Component c, int width, int height) {
        g.setColor(c.getBackground());
        //and so forth
    }
}
}
</pre>

<p>This interface makes no guarantees of threadsafety.</p>

@author rbair
"
      operation 1880962 "paint"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "g" type class_ref 338178 // Graphics2D
	  param inout name "object" explicit_type "T"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Renders to the given {@link java.awt.Graphics2D} object. Implementations
of this method <em>may</em> modify state on the <code>Graphics2D</code>, and are not
required to restore that state upon completion. In most cases, it is recommended
that the caller pass in a scratch graphics object. The <code>Graphics2D</code>
must never be null.</p>

<p>State on the graphics object may be honored by the <code>paint</code> method,
but may not be. For instance, setting the antialiasing rendering hint on the
graphics may or may not be respected by the <code>Painter</code> implementation.</p>

<p>The supplied object parameter acts as an optional configuration argument.
For example, it could be of type <code>Component</code>. A <code>Painter</code>
that expected it could then read state from that <code>Component</code> and
use the state for painting. For example, an implementation may read the
backgroundColor and use that.</p>

<p>Generally, to enhance reusability, most standard <code>Painter</code>s ignore
this parameter. They can thus be reused in any context. The <code>object</code>
may be null. Implementations must not throw a NullPointerException if the object
parameter is null.</p>

<p>Finally, the <code>width</code> and <code>height</code> arguments specify the
width and height that the <code>Painter</code> should paint into. More
specifically, the specified width and height instruct the painter that it should
paint fully within this width and height. Any specified clip on the
<code>g</code> param will further constrain the region.</p>

<p>For example, suppose I have a <code>Painter</code> implementation that draws
a gradient. The gradient goes from white to black. It \"stretches\" to fill the
painted region. Thus, if I use this <code>Painter</code> to paint a 500 x 500
region, the far left would be black, the far right would be white, and a smooth
gradient would be painted between. I could then, without modification, reuse the
<code>Painter</code> to paint a region that is 20x20 in size. This region would
also be black on the left, white on the right, and a smooth gradient painted
between.</p>

@param g The Graphics2D to render to. This must not be null.
@param object an optional configuration parameter. This may be null.
@param width width of the area to paint.
@param height height of the area to paint.
"
      end
    end

    class 338434 "JComponent"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The base class for all Swing components except top-level containers.
To use a component that inherits from <code>JComponent</code>,
you must place the component in a containment hierarchy
whose root is a top-level Swing container.
Top-level Swing containers --
such as <code>JFrame</code>, <code>JDialog</code>,
and <code>JApplet</code> --
are specialized components
that provide a place for other Swing components to paint themselves.
For an explanation of containment hierarchies, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html\">Swing Components and the Containment Hierarchy</a>,
a section in <em>The Java Tutorial</em>.

<p>
The <code>JComponent</code> class provides:
<ul>
<li>The base class for both standard and custom components
    that use the Swing architecture.
<li>A \"pluggable look and feel\" (L&amp;F) that can be specified by the
    programmer or (optionally) selected by the user at runtime.
    The look and feel for each component is provided by a
    <em>UI delegate</em> -- an object that descends from
    {@link javax.swing.plaf.ComponentUI}.
    See <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html\">How
    to Set the Look and Feel</a>
    in <em>The Java Tutorial</em>
    for more information.
<li>Comprehensive keystroke handling.
    See the document <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html\">How to Use Key Bindings</a>,
    an article in <em>The Java Tutorial</em>,
    for more information.
<li>Support for tool tips --
    short descriptions that pop up when the cursor lingers
    over a component.
    See <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/tooltip.html\">How
    to Use Tool Tips</a>
    in <em>The Java Tutorial</em>
    for more information.
<li>Support for accessibility.
    <code>JComponent</code> contains all of the methods in the
    <code>Accessible</code> interface,
    but it doesn't actually implement the interface.  That is the
    responsibility of the individual classes
    that extend <code>JComponent</code>.
<li>Support for component-specific properties.
    With the {@link #putClientProperty}
    and {@link #getClientProperty} methods,
    you can associate name-object pairs
    with any object that descends from <code>JComponent</code>.
<li>An infrastructure for painting
    that includes double buffering and support for borders.
    For more information see <a
href=\"http://www.oracle.com/technetwork/java/painting-140037.html#swing\">Painting</a> and
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/border.htmll\">How
    to Use Borders</a>,
    both of which are sections in <em>The Java Tutorial</em>.
</ul>
For more information on these subjects, see the
<a href=\"package-summary.html#package_description\">Swing package description</a>
and <em>The Java Tutorial</em> section
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html\">The JComponent Class</a>.
<p>
<code>JComponent</code> and its subclasses document default values
for certain properties.  For example, <code>JTable</code> documents the
default row height as 16.  Each <code>JComponent</code> subclass
that has a <code>ComponentUI</code> will create the
<code>ComponentUI</code> as part of its constructor.  In order
to provide a particular look and feel each
<code>ComponentUI</code> may set properties back on the
<code>JComponent</code> that created it.  For example, a custom
look and feel may require <code>JTable</code>s to have a row
height of 24. The documented defaults are the value of a property
BEFORE the <code>ComponentUI</code> has been installed.  If you
need a specific value for a particular property you should
explicitly set it.
<p>
In release 1.4, the focus subsystem was rearchitected.
For more information, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see KeyStroke
@see Action
@see #setBorder
@see #registerKeyboardAction
@see JOptionPane
@see #setDebugGraphicsOptions
@see #setToolTipText
@see #setAutoscrolls

@author Hans Muller
@author Arnaud Weber
"
      classrelation 609410 // <generalisation>
	relation 609410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 609410 // <generalisation>
	  b parent class_ref 338690 // Container
      end

      classrelation 609538 // <realization>
	relation 609538 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 609538 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 617346 // <realization>
	relation 617346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 617346 // <realization>
	  b parent class_ref 351490 // HasGetTransferHandler
      end

      classrelation 617474 // uiClassID (<unidirectional association>)
	relation 617474 --->
	  a role_name "uiClassID" init_value " \"ComponentUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #writeObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 617474 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 617602 // readObjectCallbacks (<unidirectional association>)
	relation 617602 --->
	  a role_name "readObjectCallbacks" init_value "
            new Hashtable<ObjectInputStream, ReadObjectCallback>(1)" class_relation const_relation private
	    comment "
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ObjectInputStream, ReadObjectCallback> ${name}${value};
"
	    classrelation_ref 617602 // readObjectCallbacks (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 617730 // managingFocusForwardTraversalKeys (<unidirectional association>)
	relation 617730 --->
	  a role_name "managingFocusForwardTraversalKeys" class_relation private
	    comment "
Keys to use for forward focus traversal when the JComponent is
managing focus.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KeyStroke> ${name}${value};
"
	    classrelation_ref 617730 // managingFocusForwardTraversalKeys (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 617858 // managingFocusBackwardTraversalKeys (<unidirectional association>)
	relation 617858 --->
	  a role_name "managingFocusBackwardTraversalKeys" class_relation private
	    comment "
Keys to use for backward focus traversal when the JComponent is
managing focus.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KeyStroke> ${name}${value};
"
	    classrelation_ref 617858 // managingFocusBackwardTraversalKeys (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      attribute 457090 "NOT_OBSCURED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Following are the possible return values from getObscuredState.
"
      end

      attribute 457218 "PARTIALLY_OBSCURED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 457346 "COMPLETELY_OBSCURED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 457474 "DEBUG_GRAPHICS_LOADED"
	class_attribute package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set to true when DebugGraphics has been loaded.

"
      end

      classrelation 617986 // INPUT_VERIFIER_SOURCE_KEY (<unidirectional association>)
	relation 617986 --->
	  a role_name "INPUT_VERIFIER_SOURCE_KEY" init_value "
            new StringBuilder(\"InputVerifierSourceKey\")" class_relation const_relation private
	    comment "
Key used to look up a value from the AppContext to determine the
JComponent the InputVerifier is running for. That is, if
AppContext.get(INPUT_VERIFIER_SOURCE_KEY) returns non-null, it
indicates the EDT is calling into the InputVerifier from the
returned component.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 617986 // INPUT_VERIFIER_SOURCE_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 457602 "isAlignmentXSet"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following fields support set methods for the corresponding
java.awt.Component properties.

"
      end

      attribute 457730 "alignmentX"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 457858 "isAlignmentYSet"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 457986 "alignmentY"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 618114 // ui (<unidirectional association>)
	relation 618114 --->
	  a role_name "ui" protected
	    comment "
Backing store for JComponent properties and listeners

 The look and feel delegate for this component. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 618114 // ui (<unidirectional association>)
	  b parent class_ref 356738 // ComponentUI
      end

      classrelation 618242 // listenerList (<unidirectional association>)
	relation 618242 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment " A list of event listeners for this component. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 618242 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      classrelation 618370 // clientProperties (<unidirectional association>)
	relation 618370 --->
	  a role_name "clientProperties" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 618370 // clientProperties (<unidirectional association>)
	  b parent class_ref 356866 // ArrayTable
      end

      classrelation 618498 // vetoableChangeSupport (<unidirectional association>)
	relation 618498 --->
	  a role_name "vetoableChangeSupport" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 618498 // vetoableChangeSupport (<unidirectional association>)
	  b parent class_ref 356994 // VetoableChangeSupport
      end

      attribute 458114 "autoscrolls"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not autoscroll has been enabled.

"
      end

      classrelation 618626 // border (<unidirectional association>)
	relation 618626 --->
	  a role_name "border" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 618626 // border (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      attribute 458242 "flags"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 618754 // inputVerifier (<unidirectional association>)
	relation 618754 --->
	  a role_name "inputVerifier" init_value " null" private
	    comment " Input verifier for this component 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 618754 // inputVerifier (<unidirectional association>)
	  b parent class_ref 357250 // InputVerifier
      end

      attribute 458370 "verifyInputWhenFocusTarget"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 618882 // paintingChild (<unidirectional association>)
	relation 618882 --->
	  a role_name "paintingChild" package
	    comment "
Set in <code>_paintImmediately</code>.
Will indicate the child that initiated the painting operation.
If <code>paintingChild</code> is opaque, no need to paint
any child components after <code>paintingChild</code>.
Test used in <code>paintChildren</code>.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 618882 // paintingChild (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 458498 "WHEN_FOCUSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for <code>registerKeyboardAction</code> that
means that the command should be invoked when
the component has the focus.

"
      end

      attribute 458626 "WHEN_ANCESTOR_OF_FOCUSED_COMPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for <code>registerKeyboardAction</code> that
means that the command should be invoked when the receiving
component is an ancestor of the focused component or is
itself the focused component.

"
      end

      attribute 458754 "WHEN_IN_FOCUSED_WINDOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for <code>registerKeyboardAction</code> that
means that the command should be invoked when
the receiving component is in the window that has the focus
or is itself the focused component.

"
      end

      attribute 458882 "UNDEFINED_CONDITION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used by some of the APIs to mean that no condition is defined.

"
      end

      classrelation 619010 // KEYBOARD_BINDINGS_KEY (<unidirectional association>)
	relation 619010 --->
	  a role_name "KEYBOARD_BINDINGS_KEY" init_value " \"_KeyboardBindings\"" class_relation const_relation private
	    comment "
The key used by <code>JComponent</code> to access keyboard bindings.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619010 // KEYBOARD_BINDINGS_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 619138 // WHEN_IN_FOCUSED_WINDOW_BINDINGS (<unidirectional association>)
	relation 619138 --->
	  a role_name "WHEN_IN_FOCUSED_WINDOW_BINDINGS" init_value " \"_WhenInFocusedWindow\"" class_relation const_relation private
	    comment "
An array of <code>KeyStroke</code>s used for
<code>WHEN_IN_FOCUSED_WINDOW</code> are stashed
in the client properties under this string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619138 // WHEN_IN_FOCUSED_WINDOW_BINDINGS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 619266 // TOOL_TIP_TEXT_KEY (<unidirectional association>)
	relation 619266 --->
	  a role_name "TOOL_TIP_TEXT_KEY" init_value " \"ToolTipText\"" class_relation const_relation public
	    comment "
The comment to display when the cursor is over the component,
also known as a \"value tip\", \"flyover help\", or \"flyover label\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619266 // TOOL_TIP_TEXT_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 619394 // NEXT_FOCUS (<unidirectional association>)
	relation 619394 --->
	  a role_name "NEXT_FOCUS" init_value " \"nextFocus\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619394 // NEXT_FOCUS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 619522 // popupMenu (<unidirectional association>)
	relation 619522 --->
	  a role_name "popupMenu" private
	    comment "
<code>JPopupMenu</code> assigned to this component
and all of its children

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619522 // popupMenu (<unidirectional association>)
	  b parent class_ref 357378 // JPopupMenu
      end

      attribute 459010 "IS_DOUBLE_BUFFERED"
	class_attribute const_attribute private explicit_type "int"
	init_value "  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Private flags *
"
      end

      attribute 459138 "ANCESTOR_USING_BUFFER"
	class_attribute const_attribute private explicit_type "int"
	init_value "  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 459266 "IS_PAINTING_TILE"
	class_attribute const_attribute private explicit_type "int"
	init_value "  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 459394 "IS_OPAQUE"
	class_attribute const_attribute private explicit_type "int"
	init_value "  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 459522 "KEY_EVENTS_ENABLED"
	class_attribute const_attribute private explicit_type "int"
	init_value "  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 459650 "FOCUS_INPUTMAP_CREATED"
	class_attribute const_attribute private explicit_type "int"
	init_value "  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 459778 "ANCESTOR_INPUTMAP_CREATED"
	class_attribute const_attribute private explicit_type "int"
	init_value "  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 459906 "WIF_INPUTMAP_CREATED"
	class_attribute const_attribute private explicit_type "int"
	init_value "  7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 460034 "ACTIONMAP_CREATED"
	class_attribute const_attribute private explicit_type "int"
	init_value "  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 460162 "CREATED_DOUBLE_BUFFER"
	class_attribute const_attribute private explicit_type "int"
	init_value "  9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 460290 "IS_PRINTING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " bit 10 is free
"
      end

      attribute 460418 "IS_PRINTING_ALL"
	class_attribute const_attribute private explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 460546 "IS_REPAINTING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 460674 "WRITE_OBJ_COUNTER_FIRST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bits 14-21 are used to handle nested writeObject calls. *
"
      end

      attribute 460802 "RESERVED_1"
	class_attribute const_attribute private explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 460930 "RESERVED_2"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461058 "RESERVED_3"
	class_attribute const_attribute private explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461186 "RESERVED_4"
	class_attribute const_attribute private explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461314 "RESERVED_5"
	class_attribute const_attribute private explicit_type "int"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461442 "RESERVED_6"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461570 "WRITE_OBJ_COUNTER_LAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461698 "REQUEST_FOCUS_DISABLED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461826 "INHERITS_POPUP_MENU"
	class_attribute const_attribute private explicit_type "int"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 461954 "OPAQUE_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 462082 "AUTOSCROLLS_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 462210 "FOCUS_TRAVERSAL_KEYS_FORWARD_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 462338 "FOCUS_TRAVERSAL_KEYS_BACKWARD_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 27"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 619650 // revalidateRunnableScheduled (<unidirectional association>)
	relation 619650 --->
	  a role_name "revalidateRunnableScheduled" init_value " new AtomicBoolean(false)" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619650 // revalidateRunnableScheduled (<unidirectional association>)
	  b parent class_ref 357506 // AtomicBoolean
      end

      classrelation 619778 // tempRectangles (<unidirectional association>)
	relation 619778 --->
	  a role_name "tempRectangles" init_value " new java.util.ArrayList<Rectangle>(11)" class_relation private
	    comment "
Temporary rectangles.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Rectangle> ${name}${value};
"
	    classrelation_ref 619778 // tempRectangles (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 619906 // focusInputMap (<unidirectional association>)
	relation 619906 --->
	  a role_name "focusInputMap" private
	    comment " Used for <code>WHEN_FOCUSED</code> bindings. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 619906 // focusInputMap (<unidirectional association>)
	  b parent class_ref 357634 // InputMap
      end

      classrelation 620034 // ancestorInputMap (<unidirectional association>)
	relation 620034 --->
	  a role_name "ancestorInputMap" private
	    comment " Used for <code>WHEN_ANCESTOR_OF_FOCUSED_COMPONENT</code> bindings. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620034 // ancestorInputMap (<unidirectional association>)
	  b parent class_ref 357634 // InputMap
      end

      classrelation 620162 // windowInputMap (<unidirectional association>)
	relation 620162 --->
	  a role_name "windowInputMap" private
	    comment " Used for <code>WHEN_IN_FOCUSED_KEY</code> bindings. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620162 // windowInputMap (<unidirectional association>)
	  b parent class_ref 357762 // ComponentInputMap
      end

      classrelation 620290 // actionMap (<unidirectional association>)
	relation 620290 --->
	  a role_name "actionMap" private
	    comment " ActionMap. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620290 // actionMap (<unidirectional association>)
	  b parent class_ref 357890 // ActionMap
      end

      classrelation 620418 // defaultLocale (<unidirectional association>)
	relation 620418 --->
	  a role_name "defaultLocale" init_value " \"JComponent.defaultLocale\"" class_relation const_relation private
	    comment " Key used to store the default locale in an AppContext *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620418 // defaultLocale (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 620546 // componentObtainingGraphicsFrom (<unidirectional association>)
	relation 620546 --->
	  a role_name "componentObtainingGraphicsFrom" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620546 // componentObtainingGraphicsFrom (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 620674 // componentObtainingGraphicsFromLock (<unidirectional association>)
	relation 620674 --->
	  a role_name "componentObtainingGraphicsFromLock" init_value " new
            StringBuilder(\"componentObtainingGraphicsFrom\")" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620674 // componentObtainingGraphicsFromLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 620802 // aaTextInfo (<unidirectional association>)
	relation 620802 --->
	  a role_name "aaTextInfo" private
	    comment "
AA text hints.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 620802 // aaTextInfo (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 1987586 "safelyGetGraphics"
	class_operation package return_type class_ref 343682 // Graphics
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1987714 "safelyGetGraphics"
	class_operation package return_type class_ref 343682 // Graphics
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "root" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1987842 "getGraphicsInvoked"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1987970 "isComponentObtainingGraphicsFrom"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code c} is the component the graphics is being
requested of. This is intended for use when getGraphics is invoked.
"
      end

      operation 1988098 "getManagingFocusForwardTraversalKeys"
	class_operation package return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<KeyStroke> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Set of <code>KeyStroke</code>s to use if the component
is managing focus for forward focus traversal.
"
      end

      operation 1988226 "getManagingFocusBackwardTraversalKeys"
	class_operation package return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<KeyStroke> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Set of <code>KeyStroke</code>s to use if the component
is managing focus for backward focus traversal.
"
      end

      operation 1988354 "fetchRectangle"
	class_operation private return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1988482 "recycleRectangle"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "rect" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1988610 "setInheritsPopupMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not <code>getComponentPopupMenu</code> should delegate
to the parent if this component does not have a <code>JPopupMenu</code>
assigned to it.
<p>
The default value for this is false, but some <code>JComponent</code>
subclasses that are implemented as a number of <code>JComponent</code>s
may set this to true.
<p>
This is a bound property.

@param value whether or not the JPopupMenu is inherited
@see #setComponentPopupMenu
@beaninfo
       bound: true
 description: Whether or not the JPopupMenu is inherited
@since 1.5
"
      end

      operation 1988738 "getInheritsPopupMenu"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the JPopupMenu should be inherited from the parent.

@see #setComponentPopupMenu
@since 1.5
"
      end

      operation 1988866 "setComponentPopupMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "popup" type class_ref 357378 // JPopupMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>JPopupMenu</code> for this <code>JComponent</code>.
The UI is responsible for registering bindings and adding the necessary
listeners such that the <code>JPopupMenu</code> will be shown at
the appropriate time. When the <code>JPopupMenu</code> is shown
depends upon the look and feel: some may show it on a mouse event,
some may enable a key binding.
<p>
If <code>popup</code> is null, and <code>getInheritsPopupMenu</code>
returns true, then <code>getComponentPopupMenu</code> will be delegated
to the parent. This provides for a way to make all child components
inherit the popupmenu of the parent.
<p>
This is a bound property.

@param popup - the popup that will be assigned to this component
               may be null
@see #getComponentPopupMenu
@beaninfo
       bound: true
   preferred: true
 description: Popup to show
@since 1.5
"
      end

      operation 1988994 "getComponentPopupMenu"
	public return_type class_ref 357378 // JPopupMenu
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>JPopupMenu</code> that assigned for this component.
If this component does not have a <code>JPopupMenu</code> assigned
to it and <code>getInheritsPopupMenu</code> is true, this
will return <code>getParent().getComponentPopupMenu()</code> (assuming
the parent is valid.)

@return <code>JPopupMenu</code> assigned for this component
        or <code>null</code> if no popup assigned
@see #setComponentPopupMenu
@since 1.5
"
      end

      operation 1989122 "JComponent"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default <code>JComponent</code> constructor.  This constructor does
very little initialization beyond calling the <code>Container</code>
constructor.  For example, the initial layout manager is
<code>null</code>. It does, however, set the component's locale
property to the value returned by
<code>JComponent.getDefaultLocale</code>.

@see #getDefaultLocale
"
      end

      operation 1989250 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.
<code>JComponent</code> subclasses must override this method
like this:
<pre>
  public void updateUI() {
     setUI((SliderUI)UIManager.getUI(this);
  }
 </pre>

@see #setUI
@see UIManager#getLookAndFeel
@see UIManager#getUI
"
      end

      operation 1989378 "setUI"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "newUI" type class_ref 356738 // ComponentUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the look and feel delegate for this component.
<code>JComponent</code> subclasses generally override this method
to narrow the argument type. For example, in <code>JSlider</code>:
<pre>
public void setUI(SliderUI newUI) {
    super.setUI(newUI);
}
 </pre>
<p>
Additionally <code>JComponent</code> subclasses must provide a
<code>getUI</code> method that returns the correct type.  For example:
<pre>
public SliderUI getUI() {
    return (SliderUI)ui;
}
</pre>

@param newUI the new UI delegate
@see #updateUI
@see UIManager#getLookAndFeel
@see UIManager#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The component's look and feel delegate.
"
      end

      operation 1989506 "uninstallUIAndProperties"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Uninstalls the UI, if any, and any client properties designated
as being specific to the installed UI - instances of
{@code UIClientPropertyKey}.
"
      end

      operation 1989634 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>UIDefaults</code> key used to
look up the name of the <code>swing.plaf.ComponentUI</code>
class that defines the look and feel
for this component.  Most applications will never need to
call this method.  Subclasses of <code>JComponent</code> that support
pluggable look and feel should override this method to
return a <code>UIDefaults</code> key that maps to the
<code>ComponentUI</code> subclass that defines their look and feel.

@return the <code>UIDefaults</code> key for a
         <code>ComponentUI</code> subclass
@see UIDefaults#getUI
@beaninfo
     expert: true
description: UIClassID
"
      end

      operation 1989762 "getComponentGraphics"
	protected return_type class_ref 343682 // Graphics
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the graphics object used to paint this component.
If <code>DebugGraphics</code> is turned on we create a new
<code>DebugGraphics</code> object if necessary.
Otherwise we just configure the
specified graphics object's foreground and font.

@param g the original <code>Graphics</code> object
@return a <code>Graphics</code> object configured for this component
"
      end

      operation 1989890 "paintComponent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the UI delegate's paint method, if the UI delegate
is non-<code>null</code>.  We pass the delegate a copy of the
<code>Graphics</code> object to protect the rest of the
paint code from irrevocable changes
(for example, <code>Graphics.translate</code>).
<p>
If you override this in a subclass you should not make permanent
changes to the passed in <code>Graphics</code>. For example, you
should not alter the clip <code>Rectangle</code> or modify the
transform. If you need to do these operations you may find it
easier to create a new <code>Graphics</code> from the passed in
<code>Graphics</code> and manipulate it. Further, if you do not
invoker super's implementation you must honor the opaque property,
that is
if this component is opaque, you must completely fill in the background
in a non-opaque color. If you do not honor the opaque property you
will likely see visual artifacts.
<p>
The passed in <code>Graphics</code> object might
have a transform other than the identify transform
installed on it.  In this case, you might get
unexpected results if you cumulatively apply
another transform.

@param g the <code>Graphics</code> object to protect
@see #paint
@see ComponentUI
"
      end

      operation 1990018 "paintChildren"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints this component's children.
If <code>shouldUseBuffer</code> is true,
no component ancestor has a buffer and
the component children can use a buffer if they have one.
Otherwise, one ancestor has a buffer currently in use and children
should not use a buffer to paint.
@param g  the <code>Graphics</code> context in which to paint
@see #paint
@see java.awt.Container#paint
"
      end

      operation 1990146 "paintBorder"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the component's border.
<p>
If you override this in a subclass you should not make permanent
changes to the passed in <code>Graphics</code>. For example, you
should not alter the clip <code>Rectangle</code> or modify the
transform. If you need to do these operations you may find it
easier to create a new <code>Graphics</code> from the passed in
<code>Graphics</code> and manipulate it.

@param g  the <code>Graphics</code> context in which to paint

@see #paint
@see #setBorder
"
      end

      operation 1990274 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>paint</code>.  Doesn't clear the background but see
<code>ComponentUI.update</code>, which is called by
<code>paintComponent</code>.

@param g the <code>Graphics</code> context in which to paint
@see #paint
@see #paintComponent
@see javax.swing.plaf.ComponentUI
"
      end

      operation 1990402 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked by Swing to draw components.
Applications should not invoke <code>paint</code> directly,
but should instead use the <code>repaint</code> method to
schedule the component for redrawing.
<p>
This method actually delegates the work of painting to three
protected methods: <code>paintComponent</code>,
<code>paintBorder</code>,
and <code>paintChildren</code>.  They're called in the order
listed to ensure that children appear on top of component itself.
Generally speaking, the component and its children should not
paint in the insets area allocated to the border. Subclasses can
just override this method, as always.  A subclass that just
wants to specialize the UI (look and feel) delegate's
<code>paint</code> method should just override
<code>paintComponent</code>.

@param g  the <code>Graphics</code> context in which to paint
@see #paintComponent
@see #paintBorder
@see #paintChildren
@see #getComponentGraphics
@see #repaint
"
      end

      operation 1990530 "paintForceDoubleBuffered"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " paint forcing use of the double buffer.  This is used for historical
 reasons: JViewport, when scrolling, previously directly invoked paint
 while turning off double buffering at the RepaintManager level, this
 codes simulates that."
      end

      operation 1990658 "isPainting"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this component, or any of its ancestors, are in
the processing of painting.
"
      end

      operation 1990786 "adjustPaintFlags"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1990914 "printAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoke this method to print the component. This method invokes
<code>print</code> on the component.

@param g the <code>Graphics</code> context in which to paint
@see #print
@see #printComponent
@see #printBorder
@see #printChildren
"
      end

      operation 1991042 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoke this method to print the component to the specified
<code>Graphics</code>. This method will result in invocations
of <code>printComponent</code>, <code>printBorder</code> and
<code>printChildren</code>. It is recommended that you override
one of the previously mentioned methods rather than this one if
your intention is to customize the way printing looks. However,
it can be useful to override this method should you want to prepare
state before invoking the superclass behavior. As an example,
if you wanted to change the component's background color before
printing, you could do the following:
<pre>
    public void print(Graphics g) {
        Color orig = getBackground();
        setBackground(Color.WHITE);

        // wrap in try/finally so that we always restore the state
        try {
            super.print(g);
        } finally {
            setBackground(orig);
        }
    }
</pre>
<p>
Alternatively, or for components that delegate painting to other objects,
you can query during painting whether or not the component is in the
midst of a print operation. The <code>isPaintingForPrint</code> method provides
this ability and its return value will be changed by this method: to
<code>true</code> immediately before rendering and to <code>false</code>
immediately after. With each change a property change event is fired on
this component with the name <code>\"paintingForPrint\"</code>.
<p>
This method sets the component's state such that the double buffer
will not be used: painting will be done directly on the passed in
<code>Graphics</code>.

@param g the <code>Graphics</code> context in which to paint
@see #printComponent
@see #printBorder
@see #printChildren
@see #isPaintingForPrint
"
      end

      operation 1991170 "printComponent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is invoked during a printing operation. This is implemented to
invoke <code>paintComponent</code> on the component. Override this
if you wish to add special painting behavior when printing.

@param g the <code>Graphics</code> context in which to paint
@see #print
@since 1.3
"
      end

      operation 1991298 "printChildren"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this component's children. This is implemented to invoke
<code>paintChildren</code> on the component. Override this if you
wish to print the children differently than painting.

@param g the <code>Graphics</code> context in which to paint
@see #print
@since 1.3
"
      end

      operation 1991426 "printBorder"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the component's border. This is implemented to invoke
<code>paintBorder</code> on the component. Override this if you
wish to print the border differently that it is painted.

@param g the <code>Graphics</code> context in which to paint
@see #print
@since 1.3
"
      end

      operation 1991554 "isPaintingTile"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the component is currently painting a tile.
 If this method returns true, paint will be called again for another
 tile. This method returns false if you are not painting a tile or
 if the last tile is painted.
 Use this method to keep some state you might need between tiles.

 @return  true if the component is currently painting a tile,
         false otherwise
"
      end

      operation 1991682 "isPaintingForPrint"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the current painting operation on this
component is part of a <code>print</code> operation. This method is
useful when you want to customize what you print versus what you show
on the screen.
<p>
You can detect changes in the value of this property by listening for
property change events on this component with name
<code>\"paintingForPrint\"</code>.
<p>
Note: This method provides complimentary functionality to that provided
by other high level Swing printing APIs. However, it deals strictly with
painting and should not be confused as providing information on higher
level print processes. For example, a {@link javax.swing.JTable#print()}
operation doesn't necessarily result in a continuous rendering of the
full component, and the return value of this method can change multiple
times during that operation. It is even possible for the component to be
painted to the screen while the printing process is ongoing. In such a
case, the return value of this method is <code>true</code> when, and only
when, the table is being painted as part of the printing process.

@return true if the current painting operation on this component
        is part of a print operation
@see #print
@since 1.6
"
      end

      operation 1991810 "isManagingFocus"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "In release 1.4, the focus subsystem was rearchitected.
For more information, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.
<p>
Changes this <code>JComponent</code>'s focus traversal keys to
CTRL+TAB and CTRL+SHIFT+TAB. Also prevents
<code>SortingFocusTraversalPolicy</code> from considering descendants
of this JComponent when computing a focus traversal cycle.

@see java.awt.Component#setFocusTraversalKeys
@see SortingFocusTraversalPolicy
@deprecated As of 1.4, replaced by
  <code>Component.setFocusTraversalKeys(int, Set)</code> and
  <code>Container.setFocusCycleRoot(boolean)</code>.
"
      end

      operation 1991938 "registerNextFocusableComponent"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1992066 "registerNextFocusableComponent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "nextFocusableComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1992194 "deregisterNextFocusableComponent"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1992322 "setNextFocusableComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "In release 1.4, the focus subsystem was rearchitected.
For more information, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.
<p>
Overrides the default <code>FocusTraversalPolicy</code> for this
<code>JComponent</code>'s focus traversal cycle by unconditionally
setting the specified <code>Component</code> as the next
<code>Component</code> in the cycle, and this <code>JComponent</code>
as the specified <code>Component</code>'s previous
<code>Component</code> in the cycle.

@param aComponent the <code>Component</code> that should follow this
       <code>JComponent</code> in the focus traversal cycle

@see #getNextFocusableComponent
@see java.awt.FocusTraversalPolicy
@deprecated As of 1.4, replaced by <code>FocusTraversalPolicy</code>
"
      end

      operation 1992450 "getNextFocusableComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "In release 1.4, the focus subsystem was rearchitected.
For more information, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.
<p>
Returns the <code>Component</code> set by a prior call to
<code>setNextFocusableComponent(Component)</code> on this
<code>JComponent</code>.

@return the <code>Component</code> that will follow this
       <code>JComponent</code> in the focus traversal cycle, or
       <code>null</code> if none has been explicitly specified

@see #setNextFocusableComponent
@deprecated As of 1.4, replaced by <code>FocusTraversalPolicy</code>.
"
      end

      operation 1992578 "setRequestFocusEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "requestFocusEnabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint as to whether or not this <code>JComponent</code>
should get focus. This is only a hint, and it is up to consumers that
are requesting focus to honor this property. This is typically honored
for mouse operations, but not keyboard operations. For example, look
and feels could verify this property is true before requesting focus
during a mouse operation. This would often times be used if you did
not want a mouse press on a <code>JComponent</code> to steal focus,
but did want the <code>JComponent</code> to be traversable via the
keyboard. If you do not want this <code>JComponent</code> focusable at
all, use the <code>setFocusable</code> method instead.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>,
for more information.

@param requestFocusEnabled indicates whether you want this
       <code>JComponent</code> to be focusable or not
@see <a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
@see java.awt.Component#setFocusable
"
      end

      operation 1992706 "isRequestFocusEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this <code>JComponent</code> should
get focus; otherwise returns <code>false</code>.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>,
for more information.

@return <code>true</code> if this component should get focus,
    otherwise returns <code>false</code>
@see #setRequestFocusEnabled
@see <a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus
     Specification</a>
@see java.awt.Component#isFocusable
"
      end

      operation 1992834 "requestFocus"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this <code>Component</code> gets the input focus.
Refer to {@link java.awt.Component#requestFocus()
Component.requestFocus()} for a complete description of
this method.
<p>
Note that the use of this method is discouraged because
its behavior is platform dependent. Instead we recommend the
use of {@link #requestFocusInWindow() requestFocusInWindow()}.
If you would like more information on focus, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.

@see java.awt.Component#requestFocusInWindow()
@see java.awt.Component#requestFocusInWindow(boolean)
@since 1.4
"
      end

      operation 1992962 "requestFocus"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "temporary" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this <code>Component</code> gets the input focus.
Refer to {@link java.awt.Component#requestFocus(boolean)
Component.requestFocus(boolean)} for a complete description of
this method.
<p>
Note that the use of this method is discouraged because
its behavior is platform dependent. Instead we recommend the
use of {@link #requestFocusInWindow(boolean)
requestFocusInWindow(boolean)}.
If you would like more information on focus, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.

@param temporary boolean indicating if the focus change is temporary
@return <code>false</code> if the focus change request is guaranteed to
        fail; <code>true</code> if it is likely to succeed
@see java.awt.Component#requestFocusInWindow()
@see java.awt.Component#requestFocusInWindow(boolean)
@since 1.4
"
      end

      operation 1993090 "requestFocusInWindow"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this <code>Component</code> gets the input focus.
Refer to {@link java.awt.Component#requestFocusInWindow()
Component.requestFocusInWindow()} for a complete description of
this method.
<p>
If you would like more information on focus, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.

@return <code>false</code> if the focus change request is guaranteed to
        fail; <code>true</code> if it is likely to succeed
@see java.awt.Component#requestFocusInWindow()
@see java.awt.Component#requestFocusInWindow(boolean)
@since 1.4
"
      end

      operation 1993218 "requestFocusInWindow"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "temporary" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this <code>Component</code> gets the input focus.
Refer to {@link java.awt.Component#requestFocusInWindow(boolean)
Component.requestFocusInWindow(boolean)} for a complete description of
this method.
<p>
If you would like more information on focus, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.

@param temporary boolean indicating if the focus change is temporary
@return <code>false</code> if the focus change request is guaranteed to
        fail; <code>true</code> if it is likely to succeed
@see java.awt.Component#requestFocusInWindow()
@see java.awt.Component#requestFocusInWindow(boolean)
@since 1.4
"
      end

      operation 1993346 "grabFocus"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this Component get the input focus, and that this
Component's top-level ancestor become the focused Window. This component
must be displayable, visible, and focusable for the request to be
granted.
<p>
This method is intended for use by focus implementations. Client code
should not use this method; instead, it should use
<code>requestFocusInWindow()</code>.

@see #requestFocusInWindow()
"
      end

      operation 1993474 "setVerifyInputWhenFocusTarget"
	public explicit_return_type "void"
	nparams 1
	  param inout name "verifyInputWhenFocusTarget" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value to indicate whether input verifier for the
current focus owner will be called before this component requests
focus. The default is true. Set to false on components such as a
Cancel button or a scrollbar, which should activate even if the
input in the current focus owner is not \"passed\" by the input
verifier for that component.

@param verifyInputWhenFocusTarget value for the
       <code>verifyInputWhenFocusTarget</code> property
@see InputVerifier
@see #setInputVerifier
@see #getInputVerifier
@see #getVerifyInputWhenFocusTarget

@since 1.3
@beaninfo
      bound: true
description: Whether the Component verifies input before accepting
             focus.
"
      end

      operation 1993602 "getVerifyInputWhenFocusTarget"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value that indicates whether the input verifier for the
current focus owner will be called before this component requests
focus.

@return value of the <code>verifyInputWhenFocusTarget</code> property

@see InputVerifier
@see #setInputVerifier
@see #getInputVerifier
@see #setVerifyInputWhenFocusTarget

@since 1.3
"
      end

      operation 1993730 "getFontMetrics"
	public return_type class_ref 343810 // FontMetrics
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>FontMetrics</code> for the specified <code>Font</code>.

@param font the font for which font metrics is to be
         obtained
@return the font metrics for <code>font</code>
@throws NullPointerException if <code>font</code> is null
@since 1.5
"
      end

      operation 1993858 "setPreferredSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preferredSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the preferred size of this component.
If <code>preferredSize</code> is <code>null</code>, the UI will
be asked for the preferred size.
@beaninfo
  preferred: true
      bound: true
description: The preferred size of the component.
"
      end

      operation 1993986 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "If the <code>preferredSize</code> has been set to a
non-<code>null</code> value just returns it.
If the UI delegate's <code>getPreferredSize</code>
method returns a non <code>null</code> value then return that;
otherwise defer to the component's layout manager.

@return the value of the <code>preferredSize</code> property
@see #setPreferredSize
@see ComponentUI
"
      end

      operation 1994114 "setMaximumSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "maximumSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum size of this component to a constant
value.  Subsequent calls to <code>getMaximumSize</code> will always
return this value; the component's UI will not be asked
to compute it.  Setting the maximum size to <code>null</code>
restores the default behavior.

@param maximumSize a <code>Dimension</code> containing the
         desired maximum allowable size
@see #getMaximumSize
@beaninfo
      bound: true
description: The maximum size of the component.
"
      end

      operation 1994242 "getMaximumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "If the maximum size has been set to a non-<code>null</code> value
just returns it.  If the UI delegate's <code>getMaximumSize</code>
method returns a non-<code>null</code> value then return that;
otherwise defer to the component's layout manager.

@return the value of the <code>maximumSize</code> property
@see #setMaximumSize
@see ComponentUI
"
      end

      operation 1994370 "setMinimumSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "minimumSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum size of this component to a constant
value.  Subsequent calls to <code>getMinimumSize</code> will always
return this value; the component's UI will not be asked
to compute it.  Setting the minimum size to <code>null</code>
restores the default behavior.

@param minimumSize the new minimum size of this component
@see #getMinimumSize
@beaninfo
      bound: true
description: The minimum size of the component.
"
      end

      operation 1994498 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "If the minimum size has been set to a non-<code>null</code> value
just returns it.  If the UI delegate's <code>getMinimumSize</code>
method returns a non-<code>null</code> value then return that; otherwise
defer to the component's layout manager.

@return the value of the <code>minimumSize</code> property
@see #setMinimumSize
@see ComponentUI
"
      end

      operation 1994626 "contains"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gives the UI delegate an opportunity to define the precise
shape of this component for the sake of mouse processing.

@return true if this component logically contains x,y
@see java.awt.Component#contains(int, int)
@see ComponentUI
"
      end

      operation 1994754 "setBorder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "border" type class_ref 357122 // Border
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the border of this component.  The <code>Border</code> object is
responsible for defining the insets for the component
(overriding any insets set directly on the component) and
for optionally rendering any border decorations within the
bounds of those insets.  Borders should be used (rather
than insets) for creating both decorative and non-decorative
(such as margins and padding) regions for a swing component.
Compound borders can be used to nest multiple borders within a
single component.
<p>
Although technically you can set the border on any object
that inherits from <code>JComponent</code>, the look and
feel implementation of many standard Swing components
doesn't work well with user-set borders.  In general,
when you want to set a border on a standard Swing
component other than <code>JPanel</code> or <code>JLabel</code>,
we recommend that you put the component in a <code>JPanel</code>
and set the border on the <code>JPanel</code>.
<p>
This is a bound property.

@param border the border to be rendered for this component
@see Border
@see CompoundBorder
@beaninfo
       bound: true
   preferred: true
   attribute: visualUpdate true
 description: The component's border.
"
      end

      operation 1994882 "getBorder"
	public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the border of this component or <code>null</code> if no
border is currently set.

@return the border object for this component
@see #setBorder
"
      end

      operation 1995010 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a border has been set on this component, returns the
border's insets; otherwise calls <code>super.getInsets</code>.

@return the value of the insets property
@see #setBorder
"
      end

      operation 1995138 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 1
	  param inout name "insets" type class_ref 343938 // Insets
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Insets</code> object containing this component's inset
values.  The passed-in <code>Insets</code> object will be reused
if possible.
Calling methods cannot assume that the same object will be returned,
however.  All existing values within this object are overwritten.
If <code>insets</code> is null, this will allocate a new one.

@param insets the <code>Insets</code> object, which can be reused
@return the <code>Insets</code> object
@see #getInsets
@beaninfo
  expert: true
"
      end

      operation 1995266 "getAlignmentY"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Container.getAlignmentY</code> to return
the horizontal alignment.

@return the value of the <code>alignmentY</code> property
@see #setAlignmentY
@see java.awt.Component#getAlignmentY
"
      end

      operation 1995394 "setAlignmentY"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignmentY" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the the horizontal alignment.

@param alignmentY  the new horizontal alignment
@see #getAlignmentY
@beaninfo
  description: The preferred vertical alignment of the component.
"
      end

      operation 1995522 "getAlignmentX"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Container.getAlignmentX</code> to return
the vertical alignment.

@return the value of the <code>alignmentX</code> property
@see #setAlignmentX
@see java.awt.Component#getAlignmentX
"
      end

      operation 1995650 "setAlignmentX"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignmentX" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the the vertical alignment.

@param alignmentX  the new vertical alignment
@see #getAlignmentX
@beaninfo
  description: The preferred horizontal alignment of the component.
"
      end

      operation 1995778 "setInputVerifier"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputVerifier" type class_ref 357250 // InputVerifier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the input verifier for this component.

@param inputVerifier the new input verifier
@since 1.3
@see InputVerifier
@beaninfo
      bound: true
description: The component's input verifier.
"
      end

      operation 1995906 "getInputVerifier"
	public return_type class_ref 357250 // InputVerifier
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input verifier for this component.

@return the <code>inputVerifier</code> property
@since 1.3
@see InputVerifier
"
      end

      operation 1996034 "getGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this component's graphics context, which lets you draw
on a component. Use this method to get a <code>Graphics</code> object and
then invoke operations on that object to draw on the component.
@return this components graphics context
"
      end

      operation 1996162 "setDebugGraphicsOptions"
	public explicit_return_type "void"
	nparams 1
	  param in name "debugOptions" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enables or disables diagnostic information about every graphics
operation performed within the component or one of its children.

@param debugOptions  determines how the component should display
        the information;  one of the following options:
<ul>
<li>DebugGraphics.LOG_OPTION - causes a text message to be printed.
<li>DebugGraphics.FLASH_OPTION - causes the drawing to flash several
times.
<li>DebugGraphics.BUFFERED_OPTION - creates an
        <code>ExternalWindow</code> that displays the operations
        performed on the View's offscreen buffer.
<li>DebugGraphics.NONE_OPTION disables debugging.
<li>A value of 0 causes no changes to the debugging options.
</ul>
<code>debugOptions</code> is bitwise OR'd into the current value

@beaninfo
  preferred: true
       enum: NONE_OPTION DebugGraphics.NONE_OPTION
             LOG_OPTION DebugGraphics.LOG_OPTION
             FLASH_OPTION DebugGraphics.FLASH_OPTION
             BUFFERED_OPTION DebugGraphics.BUFFERED_OPTION
description: Diagnostic options for graphics operations.
"
      end

      operation 1996290 "getDebugGraphicsOptions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the state of graphics debugging.

@return a bitwise OR'd flag of zero or more of the following options:
<ul>
<li>DebugGraphics.LOG_OPTION - causes a text message to be printed.
<li>DebugGraphics.FLASH_OPTION - causes the drawing to flash several
times.
<li>DebugGraphics.BUFFERED_OPTION - creates an
        <code>ExternalWindow</code> that displays the operations
        performed on the View's offscreen buffer.
<li>DebugGraphics.NONE_OPTION disables debugging.
<li>A value of 0 causes no changes to the debugging options.
</ul>
@see #setDebugGraphicsOptions
"
      end

      operation 1996418 "shouldDebugGraphics"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if debug information is enabled for this
<code>JComponent</code> or one of its parents.
"
      end

      operation 1996546 "registerKeyboardAction"
	public explicit_return_type "void"
	nparams 4
	  param inout name "anAction" type class_ref 354306 // ActionListener
	  param inout name "aCommand" type class_ref 128130 // String
	  param inout name "aKeyStroke" type class_ref 356610 // KeyStroke
	  param in name "aCondition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is now obsolete, please use a combination of
<code>getActionMap()</code> and <code>getInputMap()</code> for
similar behavior. For example, to bind the <code>KeyStroke</code>
<code>aKeyStroke</code> to the <code>Action</code> <code>anAction</code>
now use:
<pre>
  component.getInputMap().put(aKeyStroke, aCommand);
  component.getActionMap().put(aCommmand, anAction);
</pre>
The above assumes you want the binding to be applicable for
<code>WHEN_FOCUSED</code>. To register bindings for other focus
states use the <code>getInputMap</code> method that takes an integer.
<p>
Register a new keyboard action.
<code>anAction</code> will be invoked if a key event matching
<code>aKeyStroke</code> occurs and <code>aCondition</code> is verified.
The <code>KeyStroke</code> object defines a
particular combination of a keyboard key and one or more modifiers
(alt, shift, ctrl, meta).
<p>
The <code>aCommand</code> will be set in the delivered event if
specified.
<p>
The <code>aCondition</code> can be one of:
<blockquote>
<DL>
<DT>WHEN_FOCUSED
<DD>The action will be invoked only when the keystroke occurs
    while the component has the focus.
<DT>WHEN_IN_FOCUSED_WINDOW
<DD>The action will be invoked when the keystroke occurs while
    the component has the focus or if the component is in the
    window that has the focus. Note that the component need not
    be an immediate descendent of the window -- it can be
    anywhere in the window's containment hierarchy. In other
    words, whenever <em>any</em> component in the window has the focus,
    the action registered with this component is invoked.
<DT>WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
<DD>The action will be invoked when the keystroke occurs while the
    component has the focus or if the component is an ancestor of
    the component that has the focus.
</DL>
</blockquote>
<p>
The combination of keystrokes and conditions lets you define high
level (semantic) action events for a specified keystroke+modifier
combination (using the KeyStroke class) and direct to a parent or
child of a component that has the focus, or to the component itself.
In other words, in any hierarchical structure of components, an
arbitrary key-combination can be immediately directed to the
appropriate component in the hierarchy, and cause a specific method
to be invoked (usually by way of adapter objects).
<p>
If an action has already been registered for the receiving
container, with the same charCode and the same modifiers,
<code>anAction</code> will replace the action.

@param anAction  the <code>Action</code> to be registered
@param aCommand  the command to be set in the delivered event
@param aKeyStroke the <code>KeyStroke</code> to bind to the action
@param aCondition the condition that needs to be met, see above
@see KeyStroke
"
      end

      operation 1996674 "registerWithKeyboardManager"
	private explicit_return_type "void"
	nparams 1
	  param inout name "onlyIfNew" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers any bound <code>WHEN_IN_FOCUSED_WINDOW</code> actions with
the <code>KeyboardManager</code>. If <code>onlyIfNew</code>
is true only actions that haven't been registered are pushed
to the <code>KeyboardManager</code>;
otherwise all actions are pushed to the <code>KeyboardManager</code>.

@param onlyIfNew  if true, only actions that haven't been registered
         are pushed to the <code>KeyboardManager</code>
"
      end

      operation 1996802 "unregisterWithKeyboardManager"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters all the previously registered
<code>WHEN_IN_FOCUSED_WINDOW</code> <code>KeyStroke</code> bindings.
"
      end

      operation 1996930 "componentInputMapChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "inputMap" type class_ref 357762 // ComponentInputMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked from <code>ComponentInputMap</code> when its bindings change.
If <code>inputMap</code> is the current <code>windowInputMap</code>
(or a parent of the window <code>InputMap</code>)
the <code>KeyboardManager</code> is notified of the new bindings.

@param inputMap the map containing the new bindings
"
      end

      operation 1997058 "registerWithKeyboardManager"
	private explicit_return_type "void"
	nparams 1
	  param inout name "aKeyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1997186 "unregisterWithKeyboardManager"
	private explicit_return_type "void"
	nparams 1
	  param inout name "aKeyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1997314 "registerKeyboardAction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "anAction" type class_ref 354306 // ActionListener
	  param inout name "aKeyStroke" type class_ref 356610 // KeyStroke
	  param in name "aCondition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is now obsolete, please use a combination of
<code>getActionMap()</code> and <code>getInputMap()</code> for
similar behavior.
"
      end

      operation 1997442 "unregisterKeyboardAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aKeyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is now obsolete. To unregister an existing binding
you can either remove the binding from the
<code>ActionMap/InputMap</code>, or place a dummy binding the
<code>InputMap</code>. Removing the binding from the
<code>InputMap</code> allows bindings in parent <code>InputMap</code>s
to be active, whereas putting a dummy binding in the
<code>InputMap</code> effectively disables
the binding from ever happening.
<p>
Unregisters a keyboard action.
This will remove the binding from the <code>ActionMap</code>
(if it exists) as well as the <code>InputMap</code>s.
"
      end

      operation 1997570 "getRegisteredKeyStrokes"
	public return_type class_ref 356610 // KeyStroke
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>KeyStrokes</code> that will initiate
registered actions.

@return an array of <code>KeyStroke</code> objects
@see #registerKeyboardAction
"
      end

      operation 1997698 "getConditionForKeyStroke"
	public explicit_return_type "int"
	nparams 1
	  param inout name "aKeyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the condition that determines whether a registered action
occurs in response to the specified keystroke.
<p>
For Java 2 platform v1.3, a <code>KeyStroke</code> can be associated
with more than one condition.
For example, 'a' could be bound for the two
conditions <code>WHEN_FOCUSED</code> and
<code>WHEN_IN_FOCUSED_WINDOW</code> condition.

@return the action-keystroke condition
"
      end

      operation 1997826 "getActionForKeyStroke"
	public return_type class_ref 354306 // ActionListener
	nparams 1
	  param inout name "aKeyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object that will perform the action registered for a
given keystroke.

@return the <code>ActionListener</code>
         object invoked when the keystroke occurs
"
      end

      operation 1997954 "resetKeyboardActions"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters all the bindings in the first tier <code>InputMaps</code>
and <code>ActionMap</code>. This has the effect of removing any
local bindings, and allowing the bindings defined in parent
<code>InputMap/ActionMaps</code>
(the UI is usually defined in the second tier) to persist.
"
      end

      operation 1998082 "setInputMap"
	public explicit_return_type "void"
	nparams 2
	  param in name "condition" explicit_type "int"
	  param inout name "map" type class_ref 357634 // InputMap
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>InputMap</code> to use under the condition
<code>condition</code> to
<code>map</code>. A <code>null</code> value implies you
do not want any bindings to be used, even from the UI. This will
not reinstall the UI <code>InputMap</code> (if there was one).
<code>condition</code> has one of the following values:
<ul>
<li><code>WHEN_IN_FOCUSED_WINDOW</code>
<li><code>WHEN_FOCUSED</code>
<li><code>WHEN_ANCESTOR_OF_FOCUSED_COMPONENT</code>
</ul>
If <code>condition</code> is <code>WHEN_IN_FOCUSED_WINDOW</code>
and <code>map</code> is not a <code>ComponentInputMap</code>, an
<code>IllegalArgumentException</code> will be thrown.
Similarly, if <code>condition</code> is not one of the values
listed, an <code>IllegalArgumentException</code> will be thrown.

@param condition one of the values listed above
@param map  the <code>InputMap</code> to use for the given condition
@exception IllegalArgumentException if <code>condition</code> is
         <code>WHEN_IN_FOCUSED_WINDOW</code> and <code>map</code>
         is not an instance of <code>ComponentInputMap</code>; or
         if <code>condition</code> is not one of the legal values
         specified above
@since 1.3
"
      end

      operation 1998210 "getInputMap"
	public return_type class_ref 357634 // InputMap
	nparams 1
	  param in name "condition" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>InputMap</code> that is used during
<code>condition</code>.

@param condition one of WHEN_IN_FOCUSED_WINDOW, WHEN_FOCUSED,
       WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
@return the <code>InputMap</code> for the specified
         <code>condition</code>
@since 1.3
"
      end

      operation 1998338 "getInputMap"
	public return_type class_ref 357634 // InputMap
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>InputMap</code> that is used when the
component has focus.
This is convenience method for <code>getInputMap(WHEN_FOCUSED)</code>.

@return the <code>InputMap</code> used when the component has focus
@since 1.3
"
      end

      operation 1998466 "setActionMap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "am" type class_ref 357890 // ActionMap
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>ActionMap</code> to <code>am</code>. This does not set
the parent of the <code>am</code> to be the <code>ActionMap</code>
from the UI (if there was one), it is up to the caller to have done this.

@param am  the new <code>ActionMap</code>
@since 1.3
"
      end

      operation 1998594 "getActionMap"
	public return_type class_ref 357890 // ActionMap
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ActionMap</code> used to determine what
<code>Action</code> to fire for particular <code>KeyStroke</code>
binding. The returned <code>ActionMap</code>, unless otherwise
set, will have the <code>ActionMap</code> from the UI set as the parent.

@return the <code>ActionMap</code> containing the key/action bindings
@since 1.3
"
      end

      operation 1998722 "getInputMap"
	package return_type class_ref 357634 // InputMap
	nparams 2
	  param in name "condition" explicit_type "int"
	  param inout name "create" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>InputMap</code> to use for condition
<code>condition</code>.  If the <code>InputMap</code> hasn't
been created, and <code>create</code> is
true, it will be created.

@param condition one of the following values:
<ul>
<li>JComponent.FOCUS_INPUTMAP_CREATED
<li>JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
<li>JComponent.WHEN_IN_FOCUSED_WINDOW
</ul>
@param create if true, create the <code>InputMap</code> if it
         is not already created
@return the <code>InputMap</code> for the given <code>condition</code>;
         if <code>create</code> is false and the <code>InputMap</code>
         hasn't been created, returns <code>null</code>
@exception IllegalArgumentException if <code>condition</code>
         is not one of the legal values listed above
"
      end

      operation 1998850 "getActionMap"
	package return_type class_ref 357890 // ActionMap
	nparams 1
	  param inout name "create" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds and returns the appropriate <code>ActionMap</code>.

@param create if true, create the <code>ActionMap</code> if it
         is not already created
@return the <code>ActionMap</code> for this component; if the
         <code>create</code> flag is false and there is no
         current <code>ActionMap</code>, returns <code>null</code>
"
      end

      operation 1998978 "getBaseline"
	public explicit_return_type "int"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the baseline.  The baseline is measured from the top of
the component.  This method is primarily meant for
<code>LayoutManager</code>s to align components along their
baseline.  A return value less than 0 indicates this component
does not have a reasonable baseline and that
<code>LayoutManager</code>s should not align this component on
its baseline.
<p>
This method calls into the <code>ComponentUI</code> method of the
same name.  If this component does not have a <code>ComponentUI</code>
-1 will be returned.  If a value &gt;= 0 is
returned, then the component has a valid baseline for any
size &gt;= the minimum size and <code>getBaselineResizeBehavior</code>
can be used to determine how the baseline changes with size.

@throws IllegalArgumentException {@inheritDoc}
@see #getBaselineResizeBehavior
@see java.awt.FontMetrics
@since 1.6
"
      end

      operation 1999106 "getBaselineResizeBehavior"
	public return_type class_ref 343170 // BaselineResizeBehavior
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enum indicating how the baseline of the component
changes as the size changes.  This method is primarily meant for
layout managers and GUI builders.
<p>
This method calls into the <code>ComponentUI</code> method of
the same name.  If this component does not have a
<code>ComponentUI</code>
<code>BaselineResizeBehavior.OTHER</code> will be
returned.  Subclasses should
never return <code>null</code>; if the baseline can not be
calculated return <code>BaselineResizeBehavior.OTHER</code>.  Callers
should first ask for the baseline using
<code>getBaseline</code> and if a value &gt;= 0 is returned use
this method.  It is acceptable for this method to return a
value other than <code>BaselineResizeBehavior.OTHER</code> even if
<code>getBaseline</code> returns a value less than 0.

@see #getBaseline(int, int)
@since 1.6
"
      end

      operation 1999234 "requestDefaultFocus"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "In release 1.4, the focus subsystem was rearchitected.
For more information, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>.
<p>
Requests focus on this <code>JComponent</code>'s
<code>FocusTraversalPolicy</code>'s default <code>Component</code>.
If this <code>JComponent</code> is a focus cycle root, then its
<code>FocusTraversalPolicy</code> is used. Otherwise, the
<code>FocusTraversalPolicy</code> of this <code>JComponent</code>'s
focus-cycle-root ancestor is used.

@see java.awt.FocusTraversalPolicy#getDefaultComponent
@deprecated As of 1.4, replaced by
<code>FocusTraversalPolicy.getDefaultComponent(Container).requestFocus()</code>
"
      end

      operation 1999362 "setVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes the component visible or invisible.
Overrides <code>Component.setVisible</code>.

@param aFlag  true to make the component visible; false to
         make it invisible

@beaninfo
   attribute: visualUpdate true
"
      end

      operation 1999490 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not this component is enabled.
A component that is enabled may respond to user input,
while a component that is not enabled cannot respond to
user input.  Some components may alter their visual
representation when they are disabled in order to
provide feedback to the user that they cannot take input.
<p>Note: Disabling a component does not disable its children.

<p>Note: Disabling a lightweight component does not prevent it from
receiving MouseEvents.

@param enabled true if this component should be enabled, false otherwise
@see java.awt.Component#isEnabled
@see java.awt.Component#isLightweight

@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: The enabled state of the component.
"
      end

      operation 1999618 "setForeground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fg" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the foreground color of this component.  It is up to the
look and feel to honor this property, some may choose to ignore
it.

@param fg  the desired foreground <code>Color</code>
@see java.awt.Component#getForeground

@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: The foreground color of the component.
"
      end

      operation 1999746 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bg" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the background color of this component.  The background
color is used only if the component is opaque, and only
by subclasses of <code>JComponent</code> or
<code>ComponentUI</code> implementations.  Direct subclasses of
<code>JComponent</code> must override
<code>paintComponent</code> to honor this property.
<p>
It is up to the look and feel to honor this property, some may
choose to ignore it.

@param bg the desired background <code>Color</code>
@see java.awt.Component#getBackground
@see #setOpaque

@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: The background color of the component.
"
      end

      operation 1999874 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the font for this component.

@param font the desired <code>Font</code> for this component
@see java.awt.Component#getFont

@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: The font for the component.
"
      end

      operation 2000002 "getDefaultLocale"
	class_operation public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default locale used to initialize each JComponent's
locale property upon creation.

The default locale has \"AppContext\" scope so that applets (and
potentially multiple lightweight applications running in a single VM)
can have their own setting. An applet can safely alter its default
locale because it will have no affect on other applets (or the browser).

@return the default <code>Locale</code>.
@see #setDefaultLocale
@see java.awt.Component#getLocale
@see #setLocale
@since 1.4
"
      end

      operation 2000130 "setDefaultLocale"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default locale used to initialize each JComponent's locale
property upon creation.  The initial value is the VM's default locale.

The default locale has \"AppContext\" scope so that applets (and
potentially multiple lightweight applications running in a single VM)
can have their own setting. An applet can safely alter its default
locale because it will have no affect on other applets (or the browser).

@param l the desired default <code>Locale</code> for new components.
@see #getDefaultLocale
@see java.awt.Component#getLocale
@see #setLocale
@since 1.4
"
      end

      operation 2000258 "processComponentKeyEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes any key events that the component itself
recognizes.  This is called after the focus
manager and any interested listeners have been
given a chance to steal away the event.  This
method is called only if the event has not
yet been consumed.  This method is called prior
to the keyboard UI logic.
<p>
This method is implemented to do nothing.  Subclasses would
normally override this method if they process some
key events themselves.  If the event is processed,
it should be consumed.
"
      end

      operation 2000386 "processKeyEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Overrides <code>processKeyEvent</code> to process events. *"
      end

      operation 2000514 "processKeyBinding"
	protected explicit_return_type "boolean"
	nparams 4
	  param inout name "ks" type class_ref 356610 // KeyStroke
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param in name "condition" explicit_type "int"
	  param inout name "pressed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked to process the key bindings for <code>ks</code> as the result
of the <code>KeyEvent</code> <code>e</code>. This obtains
the appropriate <code>InputMap</code>,
gets the binding, gets the action from the <code>ActionMap</code>,
and then (if the action is found and the component
is enabled) invokes <code>notifyAction</code> to notify the action.

@param ks  the <code>KeyStroke</code> queried
@param e the <code>KeyEvent</code>
@param condition one of the following values:
<ul>
<li>JComponent.WHEN_FOCUSED
<li>JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
<li>JComponent.WHEN_IN_FOCUSED_WINDOW
</ul>
@param pressed true if the key is pressed
@return true if there was a binding to an action, and the action
        was enabled

@since 1.3
"
      end

      operation 2000642 "processKeyBindings"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "pressed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is invoked as the result of a <code>KeyEvent</code>
that was not consumed by the <code>FocusManager</code>,
<code>KeyListeners</code>, or the component. It will first try
<code>WHEN_FOCUSED</code> bindings,
then <code>WHEN_ANCESTOR_OF_FOCUSED_COMPONENT</code> bindings,
and finally <code>WHEN_IN_FOCUSED_WINDOW</code> bindings.

@param e the unconsumed <code>KeyEvent</code>
@param pressed true if the key is pressed
@return true if there is a key binding for <code>e</code>
"
      end

      operation 2000770 "processKeyBindingsForAllComponents"
	class_operation package explicit_return_type "boolean"
	nparams 3
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "container" type class_ref 338690 // Container
	  param inout name "pressed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2000898 "setToolTipText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers the text to display in a tool tip.
The text displays when the cursor lingers over the component.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/tooltip.html\">How to Use Tool Tips</a>
in <em>The Java Tutorial</em>
for further documentation.

@param text  the string to display; if the text is <code>null</code>,
             the tool tip is turned off for this component
@see #TOOL_TIP_TEXT_KEY
@beaninfo
  preferred: true
description: The text to display in a tool tip.
"
      end

      operation 2001026 "getToolTipText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tooltip string that has been set with
<code>setToolTipText</code>.

@return the text of the tool tip
@see #TOOL_TIP_TEXT_KEY
"
      end

      operation 2001154 "getToolTipText"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string to be used as the tooltip for <i>event</i>.
By default this returns any string set using
<code>setToolTipText</code>.  If a component provides
more extensive API to support differing tooltips at different locations,
this method should be overridden.
"
      end

      operation 2001282 "getToolTipLocation"
	public return_type class_ref 323714 // Point
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tooltip location in this component's coordinate system.
If <code>null</code> is returned, Swing will choose a location.
The default implementation returns <code>null</code>.

@param event  the <code>MouseEvent</code> that caused the
         <code>ToolTipManager</code> to show the tooltip
@return always returns <code>null</code>
"
      end

      operation 2001410 "getPopupLocation"
	public return_type class_ref 323714 // Point
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred location to display the popup menu in this
component's coordinate system. It is up to the look and feel to
honor this property, some may choose to ignore it.
If {@code null}, the look and feel will choose a suitable location.

@param event the {@code MouseEvent} that triggered the popup to be
       shown, or {@code null} if the popup is not being shown as the
       result of a mouse event
@return location to display the {@code JPopupMenu}, or {@code null}
@since 1.5
"
      end

      operation 2001538 "createToolTip"
	public return_type class_ref 358018 // JToolTip
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the instance of <code>JToolTip</code> that should be used
to display the tooltip.
Components typically would not override this method,
but it can be used to
cause different tooltips to be displayed differently.

@return the <code>JToolTip</code> used to display this toolTip
"
      end

      operation 2001666 "scrollRectToVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aRect" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the <code>scrollRectToVisible()</code> message to the
<code>JComponent</code>'s parent. Components that can service
the request, such as <code>JViewport</code>,
override this method and perform the scrolling.

@param aRect the visible <code>Rectangle</code>
@see JViewport
"
      end

      operation 2001794 "setAutoscrolls"
	public explicit_return_type "void"
	nparams 1
	  param inout name "autoscrolls" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>autoscrolls</code> property.
If <code>true</code> mouse dragged events will be
synthetically generated when the mouse is dragged
outside of the component's bounds and mouse motion
has paused (while the button continues to be held
down). The synthetic events make it appear that the
drag gesture has resumed in the direction established when
the component's boundary was crossed.  Components that
support autoscrolling must handle <code>mouseDragged</code>
events by calling <code>scrollRectToVisible</code> with a
rectangle that contains the mouse event's location.  All of
the Swing components that support item selection and are
typically displayed in a <code>JScrollPane</code>
(<code>JTable</code>, <code>JList</code>, <code>JTree</code>,
<code>JTextArea</code>, and <code>JEditorPane</code>)
already handle mouse dragged events in this way.  To enable
autoscrolling in any other component, add a mouse motion
listener that calls <code>scrollRectToVisible</code>.
For example, given a <code>JPanel</code>, <code>myPanel</code>:
<pre>
MouseMotionListener doScrollRectToVisible = new MouseMotionAdapter() {
    public void mouseDragged(MouseEvent e) {
       Rectangle r = new Rectangle(e.getX(), e.getY(), 1, 1);
       ((JPanel)e.getSource()).scrollRectToVisible(r);
   }
};
myPanel.addMouseMotionListener(doScrollRectToVisible);
</pre>
The default value of the <code>autoScrolls</code>
property is <code>false</code>.

@param autoscrolls if true, synthetic mouse dragged events
  are generated when the mouse is dragged outside of a component's
  bounds and the mouse button continues to be held down; otherwise
  false
@see #getAutoscrolls
@see JViewport
@see JScrollPane

@beaninfo
     expert: true
description: Determines if this component automatically scrolls its contents when dragged.
"
      end

      operation 2001922 "getAutoscrolls"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>autoscrolls</code> property.

@return the value of the <code>autoscrolls</code> property
@see JViewport
@see #setAutoscrolls
"
      end

      operation 2002050 "setTransferHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newHandler" type class_ref 351362 // TransferHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code TransferHandler}, which provides support for transfer
of data into and out of this component via cut/copy/paste and drag
and drop. This may be {@code null} if the component does not support
data transfer operations.
<p>
If the new {@code TransferHandler} is not {@code null}, this method
also installs a <b>new</b> {@code DropTarget} on the component to
activate drop handling through the {@code TransferHandler} and activate
any built-in support (such as calculating and displaying potential drop
locations). If you do not wish for this component to respond in any way
to drops, you can disable drop support entirely either by removing the
drop target ({@code setDropTarget(null)}) or by de-activating it
({@code getDropTaget().setActive(false)}).
<p>
If the new {@code TransferHandler} is {@code null}, this method removes
the drop target.
<p>
Under two circumstances, this method does not modify the drop target:
First, if the existing drop target on this component was explicitly
set by the developer to a {@code non-null} value. Second, if the
system property {@code suppressSwingDropSupport} is {@code true}. The
default value for the system property is {@code false}.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html\">
How to Use Drag and Drop and Data Transfer</a>,
a section in <em>The Java Tutorial</em>, for more information.

@param newHandler the new {@code TransferHandler}

@see TransferHandler
@see #getTransferHandler
@since 1.4
@beaninfo
       bound: true
      hidden: true
 description: Mechanism for transfer of data to and from the component
"
      end

      operation 2002178 "getTransferHandler"
	public return_type class_ref 351362 // TransferHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>transferHandler</code> property.

@return  the value of the <code>transferHandler</code> property

@see TransferHandler
@see #setTransferHandler
@since 1.4
"
      end

      operation 2002306 "dropLocationForPoint"
	package return_type class_ref 351618 // DropLocation
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates a custom drop location for this type of component,
representing where a drop at the given point should insert data.
<code>null</code> is returned if this component doesn't calculate
custom drop locations. In this case, <code>TransferHandler</code>
will provide a default <code>DropLocation</code> containing just
the point.

@param p the point to calculate a drop location for
@return the drop location, or <code>null</code>
"
      end

      operation 2002434 "setDropLocation"
	package return_type class_ref 129538 // Object
	nparams 3
	  param inout name "location" type class_ref 351618 // DropLocation
	  param inout name "state" type class_ref 129538 // Object
	  param inout name "forDrop" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to set or clear the drop location during a DnD operation.
In some cases, the component may need to use its internal selection
temporarily to indicate the drop location. To help facilitate this,
this method returns and accepts as a parameter a state object.
This state object can be used to store, and later restore, the selection
state. Whatever this method returns will be passed back to it in
future calls, as the state parameter. If it wants the DnD system to
continue storing the same state, it must pass it back every time.
Here's how this is used:
<p>
Let's say that on the first call to this method the component decides
to save some state (because it is about to use the selection to show
a drop index). It can return a state object to the caller encapsulating
any saved selection state. On a second call, let's say the drop location
is being changed to something else. The component doesn't need to
restore anything yet, so it simply passes back the same state object
to have the DnD system continue storing it. Finally, let's say this
method is messaged with <code>null</code>. This means DnD
is finished with this component for now, meaning it should restore
state. At this point, it can use the state parameter to restore
said state, and of course return <code>null</code> since there's
no longer anything to store.

@param location the drop location (as calculated by
       <code>dropLocationForPoint</code>) or <code>null</code>
       if there's no longer a valid drop location
@param state the state object saved earlier for this component,
       or <code>null</code>
@param forDrop whether or not the method is being called because an
       actual drop occurred
@return any saved state for this component, or <code>null</code> if none
"
      end

      operation 2002562 "dndDone"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to indicate to this component that DnD is done.
Needed by <code>JTree</code>.
"
      end

      operation 2002690 "processMouseEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse events occurring on this component by
dispatching them to any registered
<code>MouseListener</code> objects, refer to
{@link java.awt.Component#processMouseEvent(MouseEvent)}
for a complete description of this method.

@param       e the mouse event
@see         java.awt.Component#processMouseEvent
@since       1.5
"
      end

      operation 2002818 "processMouseMotionEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse motion events, such as MouseEvent.MOUSE_DRAGGED.

@param e the <code>MouseEvent</code>
@see MouseEvent
"
      end

      operation 2002946 "superProcessMouseMotionEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inner classes can't get at this method from a super class"
      end

      operation 2003074 "setCreatedDoubleBuffer"
	package explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is invoked by the <code>RepaintManager</code> if
<code>createImage</code> is called on the component.

@param newValue true if the double buffer image was created from this component
"
      end

      operation 2003202 "getCreatedDoubleBuffer"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the <code>RepaintManager</code>
created the double buffer image from the component.

@return true if this component had a double buffer image, false otherwise
"
      end

      class 358146 "ActionStandin"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 622466 // <realization>
	  relation 622466 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 622466 // <realization>
	    b parent class_ref 352258 // Action
	end

	classrelation 622594 // actionListener (<unidirectional association>)
	  relation 622594 --->
	    a role_name "actionListener" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 622594 // actionListener (<unidirectional association>)
	    b parent class_ref 354306 // ActionListener
	end

	classrelation 622722 // command (<unidirectional association>)
	  relation 622722 --->
	    a role_name "command" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 622722 // command (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 622850 // action (<unidirectional association>)
	  relation 622850 --->
	    a role_name "action" const_relation private
	      comment " This will be non-null if actionListener is an Action.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 622850 // action (<unidirectional association>)
	    b parent class_ref 352258 // Action
	end

	operation 2004098 "ActionStandin"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "actionListener" type class_ref 354306 // ActionListener
	    param inout name "command" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2004226 "getValue"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2004354 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2004482 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ae" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2004610 "putValue"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "key" type class_ref 128130 // String
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " We don't allow any values to be added."
	end

	operation 2004738 "setEnabled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Does nothing, our enabledness is determiend from our asociated
 action."
	end

	operation 2004866 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2004994 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 358274 "IntVector"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 462466 "array"
	  package explicit_type "int"
	  multiplicity "[]"
	  init_value " null"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 462594 "count"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 462722 "capacity"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 2005122 "size"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2005250 "elementAt"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2005378 "addElement"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2005506 "setElementAt"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "value" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 358402 "KeyboardState"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 622978 // <realization>
	  relation 622978 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 622978 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 623106 // keyCodesKey (<unidirectional association>)
	  relation 623106 --->
	    a role_name "keyCodesKey" init_value "
            JComponent.KeyboardState.class" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 623106 // keyCodesKey (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 2005634 "getKeyCodeArray"
	  class_operation package return_type class_ref 358274 // IntVector
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Get the array of key codes from the AppContext."
	end

	operation 2005762 "registerKeyPressed"
	  class_operation package explicit_return_type "void"
	  nparams 1
	    param in name "keyCode" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2005890 "registerKeyReleased"
	  class_operation package explicit_return_type "void"
	  nparams 1
	    param in name "keyCode" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2006018 "keyIsPressed"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param in name "keyCode" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2006146 "shouldProcess"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param inout name "e" type class_ref 346498 // KeyEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Updates internal state of the KeyboardState and returns true
if the event should be processed further.
"
	end
      end

      attribute 462850 "focusController"
	class_attribute const_attribute package explicit_type "sun.awt.RequestFocusController"
	init_value "
        new sun.awt.RequestFocusController() {
            public boolean acceptRequestFocus(Component from, Component to,
                                              boolean temporary, boolean focusedWindowChangeAllowed,
                                              sun.awt.CausedFocusEvent.Cause cause)
            {
                if ((to == null) || !(to instanceof JComponent)) {
                    return true;
                }

                if ((from == null) || !(from instanceof JComponent)) {
                    return true;
                }

                JComponent target = (JComponent) to;
                if (!target.getVerifyInputWhenFocusTarget()) {
                    return true;
                }

                JComponent jFocusOwner = (JComponent)from;
                InputVerifier iv = jFocusOwner.getInputVerifier();

                if (iv == null) {
                    return true;
                } else {
                    Object currentSource = SwingUtilities.appContextGet(
                            INPUT_VERIFIER_SOURCE_KEY);
                    if (currentSource == jFocusOwner) {
                        // We're currently calling into the InputVerifier
                        // for this component, so allow the focus change.
                        return true;
                    }
                    SwingUtilities.appContextPut(INPUT_VERIFIER_SOURCE_KEY,
                                                 jFocusOwner);
                    try {
                        return iv.shouldYieldFocus(jFocusOwner);
                    } finally {
                        if (currentSource != null) {
                            // We're already in the InputVerifier for
                            // currentSource. By resetting the currentSource
                            // we ensure that if the InputVerifier for
                            // currentSource does a requestFocus, we don't
                            // try and run the InputVerifier again.
                            SwingUtilities.appContextPut(
                                INPUT_VERIFIER_SOURCE_KEY, currentSource);
                        } else {
                            SwingUtilities.appContextRemove(
                                INPUT_VERIFIER_SOURCE_KEY);
                        }
                    }
                }
            }
        }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 2006274 "enable"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "--- Accessibility Support ---


@deprecated As of JDK version 1.1,
replaced by <code>java.awt.Component.setEnabled(boolean)</code>.
"
      end

      operation 2006402 "disable"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>java.awt.Component.setEnabled(boolean)</code>.
"
      end

      class 358530 "AccessibleJComponent"
	abstract visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 623234 // <generalisation>
	  relation 623234 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 623234 // <generalisation>
	    b parent class_ref 350978 // AccessibleAWTContainer
	end

	classrelation 623490 // <realization>
	  relation 623490 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 623490 // <realization>
	    b parent class_ref 358658 // AccessibleExtendedComponent
	end

	operation 2006914 "AccessibleJComponent"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Though the class is abstract, this should be called by
all sub-classes.
"
	end

	attribute 462978 "propertyListenersCount"
	  volatile private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Number of PropertyChangeListener objects registered. It's used
to add/remove ContainerListener and FocusListener to track
target JComponent's state

"
	end

	classrelation 623618 // accessibleFocusHandler (<unidirectional association>)
	  relation 623618 --->
	    a role_name "accessibleFocusHandler" init_value " null" protected
	      comment "
This field duplicates the function of the accessibleAWTFocusHandler field
in java.awt.Component.AccessibleAWTComponent, so it has been deprecated.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      java_annotation "@Deprecated
"
	      classrelation_ref 623618 // accessibleFocusHandler (<unidirectional association>)
	    b parent class_ref 342018 // FocusListener
	end
      end
    end

    class 338562 "RepaintManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class manages repaint requests, allowing the number
of repaints to be minimized, for example by collapsing multiple
requests into a single repaint for members of a component tree.
<p>
As of 1.6 <code>RepaintManager</code> handles repaint requests
for Swing's top level components (<code>JApplet</code>,
<code>JWindow</code>, <code>JFrame</code> and <code>JDialog</code>).
Any calls to <code>repaint</code> on one of these will call into the
appropriate <code>addDirtyRegion</code> method.

@author Arnaud Weber
"
      class 1264770 "PaintManager"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4066050 // repaintManager (<unidirectional association>)
	  relation 4066050 --->
	    a role_name "repaintManager" protected
	      comment "
RepaintManager the PaintManager has been installed on.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4066050 // repaintManager (<unidirectional association>)
	    b parent class_ref 338562 // RepaintManager
	end

	attribute 2380674 "isRepaintingRoot"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10433282 "paint"
	  public explicit_return_type "boolean"
	  nparams 7
	    param inout name "paintingComponent" type class_ref 338434 // JComponent
	    param inout name "bufferComponent" type class_ref 338434 // JComponent
	    param inout name "g" type class_ref 343682 // Graphics
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Paints a region of a component

@param paintingComponent Component to paint
@param bufferComponent Component to obtain buffer for
@param g Graphics to paint to
@param x X-coordinate
@param y Y-coordinate
@param w Width
@param h Height
@return true if painting was successful.
"
	end

	operation 10433410 "copyArea"
	  public explicit_return_type "void"
	  nparams 9
	    param inout name "c" type class_ref 338434 // JComponent
	    param inout name "g" type class_ref 343682 // Graphics
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	    param in name "deltaX" explicit_type "int"
	    param in name "deltaY" explicit_type "int"
	    param inout name "clip" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Does a copy area on the specified region.
"
	end

	operation 10433538 "beginPaint"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoked prior to any calls to paint or copyArea.
"
	end

	operation 10433666 "endPaint"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoked to indicate painting has been completed.
"
	end

	operation 10433794 "show"
	  public explicit_return_type "boolean"
	  nparams 5
	    param inout name "c" type class_ref 338690 // Container
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Shows a region of a previously rendered component.  This
will return true if successful, false otherwise.  The default
implementation returns false.
"
	end

	operation 10433922 "doubleBufferingChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "rootPane" type class_ref 434050 // JRootPane
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoked when the doubleBuffered or useTrueDoubleBuffering
properties of a JRootPane change.  This may come in on any thread.
"
	end

	operation 10434050 "paintDoubleBuffered"
	  protected explicit_return_type "void"
	  nparams 7
	    param inout name "c" type class_ref 338434 // JComponent
	    param inout name "image" type class_ref 340098 // Image
	    param inout name "g" type class_ref 343682 // Graphics
	    param in name "clipX" explicit_type "int"
	    param in name "clipY" explicit_type "int"
	    param in name "clipW" explicit_type "int"
	    param in name "clipH" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Paints a portion of a component to an offscreen buffer.
"
	end

	operation 10434178 "getValidImage"
	  private return_type class_ref 340098 // Image
	  nparams 1
	    param inout name "image" type class_ref 340098 // Image
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "If <code>image</code> is non-null with a positive size it
is returned, otherwise null is returned.
"
	end

	operation 10434306 "repaintRoot"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "root" type class_ref 338434 // JComponent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Schedules a repaint for the specified component.  This differs
from <code>root.repaint</code> in that if the RepaintManager is
currently processing paint requests it'll process this request
with the current set of requests.
"
	end

	operation 10434434 "isRepaintingRoot"
	  protected explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the component being painted is the root component
that was previously passed to <code>repaintRoot</code>.
"
	end

	operation 10434562 "dispose"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cleans up any state.  After invoked the PaintManager will no
longer be used anymore.
"
	end
      end

      attribute 2378754 "HANDLE_TOP_LEVEL_PAINT"
	class_attribute const_attribute package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not the RepaintManager should handle paint requests
for top levels.

"
      end

      attribute 2378882 "BUFFER_STRATEGY_NOT_SPECIFIED"
	class_attribute const_attribute private explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2379010 "BUFFER_STRATEGY_SPECIFIED_ON"
	class_attribute const_attribute private explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2379138 "BUFFER_STRATEGY_SPECIFIED_OFF"
	class_attribute const_attribute private explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2379266 "BUFFER_STRATEGY_TYPE"
	class_attribute const_attribute private explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4064130 // volatileMap (<unidirectional association>)
	relation 4064130 --->
	  a role_name "volatileMap" init_value " new
                        HashMap<GraphicsConfiguration,VolatileImage>(1)" private
	    comment "
Maps from GraphicsConfiguration to VolatileImage.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<GraphicsConfiguration,VolatileImage> ${name}${value};
"
	    classrelation_ref 4064130 // volatileMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 4064258 // hwDirtyComponents (<unidirectional association>)
	relation 4064258 --->
	  a role_name "hwDirtyComponents" private
	    comment " As of 1.6 Swing handles scheduling of paint events from native code.
 That is, SwingPaintEventDispatcher is invoked on the toolkit thread,
 which in turn invokes nativeAddDirtyRegion.  Because this is invoked
 from the native thread we can not invoke any public methods and so
 we introduce these added maps.  So, any time nativeAddDirtyRegion is
 invoked the region is added to hwDirtyComponents and a work request
 is scheduled.  When the work request is processed all entries in
 this map are pushed to the real map (dirtyComponents) and then
 painted with the rest of the components.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Container,Rectangle> ${name}${value};
"
	    classrelation_ref 4064258 // hwDirtyComponents (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 4064386 // dirtyComponents (<unidirectional association>)
	relation 4064386 --->
	  a role_name "dirtyComponents" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component,Rectangle> ${name}${value};
"
	    classrelation_ref 4064386 // dirtyComponents (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 4064514 // tmpDirtyComponents (<unidirectional association>)
	relation 4064514 --->
	  a role_name "tmpDirtyComponents" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component,Rectangle> ${name}${value};
"
	    classrelation_ref 4064514 // tmpDirtyComponents (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 4064642 // invalidComponents (<unidirectional association>)
	relation 4064642 --->
	  a role_name "invalidComponents" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 4064642 // invalidComponents (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 4064770 // runnableList (<unidirectional association>)
	relation 4064770 --->
	  a role_name "runnableList" private
	    comment " List of Runnables that need to be processed before painting from AWT.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Runnable> ${name}${value};
"
	    classrelation_ref 4064770 // runnableList (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      attribute 2379394 "doubleBufferingEnabled"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4064898 // doubleBufferMaxSize (<unidirectional association>)
	relation 4064898 --->
	  a role_name "doubleBufferMaxSize" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4064898 // doubleBufferMaxSize (<unidirectional association>)
	  b parent class_ref 316802 // Dimension
      end

      class 1264898 "DoubleBufferInfo"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4066178 // image (<unidirectional association>)
	  relation 4066178 --->
	    a role_name "image" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4066178 // image (<unidirectional association>)
	    b parent class_ref 340098 // Image
	end

	classrelation 4066306 // size (<unidirectional association>)
	  relation 4066306 --->
	    a role_name "size" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4066306 // size (<unidirectional association>)
	    b parent class_ref 316802 // Dimension
	end

	attribute 2380802 "needsReset"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 4065026 // standardDoubleBuffer (<unidirectional association>)
	relation 4065026 --->
	  a role_name "standardDoubleBuffer" package
	    comment " Support for both the standard and volatile offscreen buffers exists to
 provide backwards compatibility for the [rare] programs which may be
 calling getOffScreenBuffer() and not expecting to get a VolatileImage.
 Swing internally is migrating to use *only* the volatile image buffer.
 Support for standard offscreen buffer

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4065026 // standardDoubleBuffer (<unidirectional association>)
	  b parent class_ref 1264898 // DoubleBufferInfo
      end

      classrelation 4065154 // paintManager (<unidirectional association>)
	relation 4065154 --->
	  a role_name "paintManager" private
	    comment "
Object responsible for hanlding core paint functionality.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4065154 // paintManager (<unidirectional association>)
	  b parent class_ref 1264770 // PaintManager
      end

      classrelation 4065282 // repaintManagerKey (<unidirectional association>)
	relation 4065282 --->
	  a role_name "repaintManagerKey" init_value " RepaintManager.class" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4065282 // repaintManagerKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2379522 "volatileImageBufferEnabled"
	class_attribute package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not a VolatileImage should be used for double-buffered painting
"
      end

      attribute 2379650 "volatileBufferType"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Type of VolatileImage which should be used for double-buffered
painting.

"
      end

      attribute 2379778 "nativeDoubleBuffering"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the system property awt.nativeDoubleBuffering.

"
      end

      attribute 2379906 "VOLATILE_LOOP_MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The maximum number of times Swing will attempt to use the VolatileImage
 buffer during a paint operation.
"
      end

      attribute 2380034 "paintDepth"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of <code>beginPaint</code> that have been invoked.

"
      end

      attribute 2380162 "bufferStrategyType"
	private explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Type of buffer strategy to use.  Will be one of the BUFFER_STRATEGY_
constants.

"
      end

      attribute 2380290 "painting"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " BufferStrategyPaintManager has the unique characteristic that it
 must deal with the buffer being lost while painting to it.  For
 example, if we paint a component and show it and the buffer has
 become lost we must repaint the whole window.  To deal with that
 the PaintManager calls into repaintRoot, and if we're still in
 the process of painting the repaintRoot field is set to the JRootPane
 and after the current JComponent.paintImmediately call finishes
 paintImmediately will be invoked on the repaintRoot.  In this
 way we don't try to show garbage to the screen.


True if we're in the process of painting the dirty regions.  This is
set to true in <code>paintDirtyRegions</code>.

"
      end

      classrelation 4065410 // repaintRoot (<unidirectional association>)
	relation 4065410 --->
	  a role_name "repaintRoot" private
	    comment "
If the PaintManager calls into repaintRoot during painting this field
will be set to the root.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4065410 // repaintRoot (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4065538 // paintThread (<unidirectional association>)
	relation 4065538 --->
	  a role_name "paintThread" private
	    comment "
The Thread that has initiated painting.  If null it
indicates painting is not currently in progress.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4065538 // paintThread (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      class 1265026 "ProcessingRunnable"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4066690 // <realization>
	  relation 4066690 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4066690 // <realization>
	    b parent class_ref 128770 // Runnable
	end

	attribute 2380930 "pending"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " If true, we're wainting on the EventQueue.
"
	end

	operation 10435330 "markPending"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Marks this processing runnable as pending. If this was not
already marked as pending, true is returned.
"
	end

	operation 10435458 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4065666 // processingRunnable (<unidirectional association>)
	relation 4065666 --->
	  a role_name "processingRunnable" const_relation private
	    comment "
Runnable used to process all repaint/revalidate requests.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4065666 // processingRunnable (<unidirectional association>)
	  b parent class_ref 1265026 // ProcessingRunnable
      end

      attribute 2380418 "javaSecurityAccess"
	class_attribute const_attribute private explicit_type "JavaSecurityAccess"
	init_value "
            SharedSecrets.getJavaSecurityAccess()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2380546 "displayChangedHandler"
	class_attribute const_attribute private explicit_type "DisplayChangedListener"
	init_value "
            new DisplayChangedHandler()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Listener installed to detect display changes. When display changes,
schedules a callback to notify all RepaintManagers of the display
changes.

"
      end

      extra_member 184578 "initialization"
	
	cpp "" ""
	java "  static {
        SwingAccessor.setRepaintManagerAccessor(new SwingAccessor.RepaintManagerAccessor() {
            @Override
            public void addRepaintListener(RepaintManager rm, RepaintListener l) {
                rm.addRepaintListener(l);
            }
            @Override
            public void removeRepaintListener(RepaintManager rm, RepaintListener l) {
                rm.removeRepaintListener(l);
            }
        });

        volatileImageBufferEnabled = \"true\".equals(AccessController.
                doPrivileged(new GetPropertyAction(
                \"swing.volatileImageBufferEnabled\", \"true\")));
        boolean headless = GraphicsEnvironment.isHeadless();
        if (volatileImageBufferEnabled && headless) {
            volatileImageBufferEnabled = false;
        }
        nativeDoubleBuffering = \"true\".equals(AccessController.doPrivileged(
                    new GetPropertyAction(\"awt.nativeDoubleBuffering\")));
        String bs = AccessController.doPrivileged(
                          new GetPropertyAction(\"swing.bufferPerWindow\"));
        if (headless) {
            BUFFER_STRATEGY_TYPE = BUFFER_STRATEGY_SPECIFIED_OFF;
        }
        else if (bs == null) {
            BUFFER_STRATEGY_TYPE = BUFFER_STRATEGY_NOT_SPECIFIED;
        }
        else if (\"true\".equals(bs)) {
            BUFFER_STRATEGY_TYPE = BUFFER_STRATEGY_SPECIFIED_ON;
        }
        else {
            BUFFER_STRATEGY_TYPE = BUFFER_STRATEGY_SPECIFIED_OFF;
        }
        HANDLE_TOP_LEVEL_PAINT = \"true\".equals(AccessController.doPrivileged(
               new GetPropertyAction(\"swing.handleTopLevelPaint\", \"true\")));
        GraphicsEnvironment ge = GraphicsEnvironment.
                getLocalGraphicsEnvironment();
        if (ge instanceof SunGraphicsEnvironment) {
            ((SunGraphicsEnvironment) ge).addDisplayChangedListener(
                    displayChangedHandler);
        }
        Toolkit tk = Toolkit.getDefaultToolkit();
        if ((tk instanceof SunToolkit)
                && ((SunToolkit) tk).isSwingBackbufferTranslucencySupported()) {
            volatileBufferType = Transparency.TRANSLUCENT;
        } else {
            volatileBufferType = Transparency.OPAQUE;
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10426242 "currentManager"
	class_operation public return_type class_ref 338562 // RepaintManager
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the RepaintManager for the calling thread given a Component.

@param c a Component -- unused in the default implementation, but could
         be used by an overridden version to return a different RepaintManager
         depending on the Component
@return the RepaintManager object
"
      end

      operation 10426370 "currentManager"
	class_operation package return_type class_ref 338562 // RepaintManager
	nparams 1
	  param inout name "appContext" explicit_type "AppContext"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the RepaintManager for the specified AppContext.  If
a RepaintManager has not been created for the specified
AppContext this will return null.
"
      end

      operation 10426498 "currentManager"
	class_operation public return_type class_ref 338562 // RepaintManager
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the RepaintManager for the calling thread given a JComponent.
<p>
Note: This method exists for backward binary compatibility with earlier
versions of the Swing library. It simply returns the result returned by
{@link #currentManager(Component)}.

@param c a JComponent -- unused
@return the RepaintManager object
"
      end

      operation 10426626 "setCurrentManager"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "aRepaintManager" type class_ref 338562 // RepaintManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the RepaintManager that should be used for the calling
thread. <b>aRepaintManager</b> will become the current RepaintManager
for the calling thread's thread group.
@param aRepaintManager  the RepaintManager object to use
"
      end

      operation 10426754 "RepaintManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new RepaintManager instance. You rarely call this constructor.
directly. To get the default RepaintManager, use
RepaintManager.currentManager(JComponent) (normally \"this\").
"
      end

      operation 10426882 "RepaintManager"
	private explicit_return_type ""
	nparams 1
	  param in name "bufferStrategyType" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10427010 "displayChanged"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10427138 "addInvalidComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "invalidComponent" type class_ref 338434 // JComponent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the component as in need of layout and queue a runnable
for the event dispatching thread that will validate the components
first isValidateRoot() ancestor.

@see JComponent#isValidateRoot
@see #removeInvalidComponent
"
      end

      operation 10427266 "removeInvalidComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a component from the list of invalid components.

@see #addInvalidComponent
"
      end

      operation 10427394 "addDirtyRegion0"
	private explicit_return_type "void"
	nparams 5
	  param inout name "c" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a component in the list of components that should be refreshed.
If <i>c</i> already has a dirty region, the rectangle <i>(x,y,w,h)</i>
will be unioned with the region that should be redrawn.

@see JComponent#repaint
"
      end

      operation 10427522 "addDirtyRegion"
	public explicit_return_type "void"
	nparams 5
	  param inout name "c" type class_ref 338434 // JComponent
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a component in the list of components that should be refreshed.
If <i>c</i> already has a dirty region, the rectangle <i>(x,y,w,h)</i>
will be unioned with the region that should be redrawn.

@param c Component to repaint, null results in nothing happening.
@param x X coordinate of the region to repaint
@param y Y coordinate of the region to repaint
@param w Width of the region to repaint
@param h Height of the region to repaint
@see JComponent#repaint
"
      end

      operation 10427650 "addDirtyRegion"
	public explicit_return_type "void"
	nparams 5
	  param inout name "window" type class_ref 347394 // Window
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds <code>window</code> to the list of <code>Component</code>s that
need to be repainted.

@param window Window to repaint, null results in nothing happening.
@param x X coordinate of the region to repaint
@param y Y coordinate of the region to repaint
@param w Width of the region to repaint
@param h Height of the region to repaint
@see JFrame#repaint
@see JWindow#repaint
@see JDialog#repaint
@since 1.6
"
      end

      operation 10427778 "addDirtyRegion"
	public explicit_return_type "void"
	nparams 5
	  param inout name "applet" type class_ref 240258 // Applet
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds <code>applet</code> to the list of <code>Component</code>s that
need to be repainted.

@param applet Applet to repaint, null results in nothing happening.
@param x X coordinate of the region to repaint
@param y Y coordinate of the region to repaint
@param w Width of the region to repaint
@param h Height of the region to repaint
@see JApplet#repaint
@since 1.6
"
      end

      operation 10427906 "scheduleHeavyWeightPaints"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10428034 "nativeAddDirtyRegion"
	package explicit_return_type "void"
	nparams 6
	  param inout name "appContext" explicit_type "AppContext"
	  param inout name "c" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is called from the toolkit thread when a native expose is
 received.
"
      end

      operation 10428162 "nativeQueueSurfaceDataRunnable"
	package explicit_return_type "void"
	nparams 3
	  param inout name "appContext" explicit_type "AppContext"
	  param in name "c" type class_ref 338818 // Component
	  param in name "r" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is called from the toolkit thread when awt needs to run a
 Runnable before we paint.
"
      end

      operation 10428290 "extendDirtyRegion"
	private explicit_return_type "boolean"
	nparams 5
	  param inout name "c" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extends the dirty region for the specified component to include
the new region.

@return false if <code>c</code> is not yet marked dirty.
"
      end

      operation 10428418 "getDirtyRegion"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "aComponent" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the current dirty region for a component.
 Return an empty rectangle if the component is not
 dirty.
"
      end

      operation 10428546 "markCompletelyDirty"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark a component completely dirty. <b>aComponent</b> will be
completely painted during the next paintDirtyRegions() call.
"
      end

      operation 10428674 "markCompletelyClean"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark a component completely clean. <b>aComponent</b> will not
get painted during the next paintDirtyRegions() call.
"
      end

      operation 10428802 "isCompletelyDirty"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that returns true if <b>aComponent</b> will be completely
painted during the next paintDirtyRegions(). If computing dirty regions is
expensive for your component, use this method and avoid computing dirty region
if it return true.
"
      end

      operation 10428930 "validateInvalidComponents"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate all of the components that have been marked invalid.
@see #addInvalidComponent
"
      end

      operation 10429058 "prePaintDirtyRegions"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is invoked to process paint requests.  It's needed
for backward compatibility in so far as RepaintManager would previously
not see paint requests for top levels, so, we have to make sure
a subclass correctly paints any dirty top levels.
"
      end

      operation 10429186 "updateWindows"
	private explicit_return_type "void"
	nparams 1
	  param inout name "dirtyComponents" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Component,Rectangle> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10429314 "isPainting"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10429442 "paintDirtyRegions"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paint all of the components that have been marked dirty.

@see #addDirtyRegion
"
      end

      operation 10429570 "paintDirtyRegions"
	private explicit_return_type "void"
	nparams 1
	  param in name "tmpDirtyComponents" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}<Component,Rectangle> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10429698 "adjustRoots"
	private explicit_return_type "void"
	nparams 3
	  param inout name "root" type class_ref 338434 // JComponent
	  param inout name "roots" type class_ref 175362 // List
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Component> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes any components from roots that are children of
root.
"
      end

      classrelation 4065794 // tmp (<unidirectional association>)
	relation 4065794 --->
	  a role_name "tmp" init_value " new Rectangle()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4065794 // tmp (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      operation 10429826 "collectDirtyComponents"
	package explicit_return_type "void"
	nparams 3
	  param inout name "dirtyComponents" type class_ref 130178 // Map
	  param inout name "dirtyComponent" type class_ref 338818 // Component
	  param inout name "roots" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Component,Rectangle> ${p0}, ${t1} ${p1}, ${t2}<Component> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10429954 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a String representation of this object
"
      end

      operation 10430082 "getOffscreenBuffer"
	public return_type class_ref 340098 // Image
	nparams 3
	  param inout name "c" type class_ref 338818 // Component
	  param in name "proposedWidth" explicit_type "int"
	  param in name "proposedHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the offscreen buffer that should be used as a double buffer with
the component <code>c</code>.
By default there is a double buffer per RepaintManager.
The buffer might be smaller than <code>(proposedWidth,proposedHeight)</code>
This happens when the maximum double buffer size as been set for the receiving
repaint manager.
"
      end

      operation 10430210 "getVolatileOffscreenBuffer"
	public return_type class_ref 340098 // Image
	nparams 3
	  param inout name "c" type class_ref 338818 // Component
	  param in name "proposedWidth" explicit_type "int"
	  param in name "proposedHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a volatile offscreen buffer that should be used as a
double buffer with the specified component <code>c</code>.
The image returned will be an instance of VolatileImage, or null
if a VolatileImage object could not be instantiated.
This buffer might be smaller than <code>(proposedWidth,proposedHeight)</code>.
This happens when the maximum double buffer size has been set for this
repaint manager.

@see java.awt.image.VolatileImage
@since 1.4
"
      end

      operation 10430338 "_getOffscreenBuffer"
	private return_type class_ref 340098 // Image
	nparams 3
	  param inout name "c" type class_ref 338818 // Component
	  param in name "proposedWidth" explicit_type "int"
	  param in name "proposedHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10430466 "setDoubleBufferMaximumSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the maximum double buffer size. *"
      end

      operation 10430594 "clearImages"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10430722 "clearImages"
	private explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10430850 "getDoubleBufferMaximumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum double buffer size.

@return a Dimension object representing the maximum size
"
      end

      operation 10430978 "setDoubleBufferingEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables double buffering in this RepaintManager.
CAUTION: The default value for this property is set for optimal
paint performance on the given platform and it is not recommended
that programs modify this property directly.

@param aFlag  true to activate double buffering
@see #isDoubleBufferingEnabled
"
      end

      operation 10431106 "isDoubleBufferingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this RepaintManager is double buffered.
The default value for this property may vary from platform
to platform.  On platforms where native double buffering
is supported in the AWT, the default value will be <code>false</code>
to avoid unnecessary buffering in Swing.
On platforms where native double buffering is not supported,
the default value will be <code>true</code>.

@return true if this object is double buffered
"
      end

      operation 10431234 "resetDoubleBuffer"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This resets the double buffer. Actually, it marks the double buffer
as invalid, the double buffer will then be recreated on the next
invocation of getOffscreenBuffer.
"
      end

      operation 10431362 "resetVolatileDoubleBuffer"
	package explicit_return_type "void"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This resets the volatile double buffer.
"
      end

      operation 10431490 "useVolatileDoubleBuffer"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if we should use the <code>Image</code> returned
from <code>getVolatileOffscreenBuffer</code> to do double buffering.
"
      end

      operation 10431618 "isPaintingThread"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current thread is the thread painting.  This
will return false if no threads are painting.
"
      end

      operation 10431746 "paint"
	package explicit_return_type "void"
	nparams 7
	  param inout name "paintingComponent" type class_ref 338434 // JComponent
	  param inout name "bufferComponent" type class_ref 338434 // JComponent
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Paint methods.  You very, VERY rarely need to invoke these.
 They are invoked directly from JComponent's painting code and
 when painting happens outside the normal flow: DefaultDesktopManager
 and JViewport.  If you end up needing these methods in other places be
 careful that you don't get stuck in a paint loop.


Paints a region of a component

@param paintingComponent Component to paint
@param bufferComponent Component to obtain buffer for
@param g Graphics to paint to
@param x X-coordinate
@param y Y-coordinate
@param w Width
@param h Height
"
      end

      operation 10431874 "copyArea"
	package explicit_return_type "void"
	nparams 9
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param in name "deltaX" explicit_type "int"
	  param in name "deltaY" explicit_type "int"
	  param inout name "clip" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does a copy area on the specified region.

@param clip Whether or not the copyArea needs to be clipped to the
            Component's bounds.
"
      end

      classrelation 4065922 // repaintListeners (<unidirectional association>)
	relation 4065922 --->
	  a role_name "repaintListeners" init_value " new ArrayList<>(1)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RepaintListener> ${name}${value};
"
	    classrelation_ref 4065922 // repaintListeners (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 10432002 "addRepaintListener"
	private explicit_return_type "void"
	nparams 1
	  param inout name "l" explicit_type "RepaintListener"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10432130 "removeRepaintListener"
	private explicit_return_type "void"
	nparams 1
	  param inout name "l" explicit_type "RepaintListener"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10432258 "notifyRepaintPerformed"
	package explicit_return_type "void"
	nparams 5
	  param inout name "c" type class_ref 338434 // JComponent
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the attached repaint listeners that an area of the {@code c} component
has been immediately repainted, that is without scheduling a repaint runnable,
due to performing a \"blit\" (via calling the {@code copyArea} method).

@param c the component
@param x the x coordinate of the area
@param y the y coordinate of the area
@param w the width of the area
@param h the height of the area
"
      end

      operation 10432386 "beginPaint"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked prior to any paint/copyArea method calls.  This will
be followed by an invocation of <code>endPaint</code>.
<b>WARNING</b>: Callers of this method need to wrap the call
in a <code>try/finally</code>, otherwise if an exception is thrown
during the course of painting the RepaintManager may
be left in a state in which the screen is not updated, eg:
<pre>
repaintManager.beginPaint();
try {
  repaintManager.paint(...);
} finally {
  repaintManager.endPaint();
}
</pre>
"
      end

      operation 10432514 "endPaint"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked after <code>beginPaint</code> has been invoked.
"
      end

      operation 10432642 "show"
	package explicit_return_type "boolean"
	nparams 5
	  param inout name "c" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If possible this will show a previously rendered portion of
a Component.  If successful, this will return true, otherwise false.
<p>
WARNING: This method is invoked from the native toolkit thread, be
very careful as to what methods this invokes!
"
      end

      operation 10432770 "doubleBufferingChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "rootPane" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the doubleBuffered or useTrueDoubleBuffering
properties of a JRootPane change.  This may come in on any thread.
"
      end

      operation 10432898 "setPaintManager"
	package explicit_return_type "void"
	nparams 1
	  param inout name "paintManager" type class_ref 1264770 // PaintManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>PaintManager</code> that is used to handle all
double buffered painting.

@param paintManager The PaintManager to use.  Passing in null indicates
       the fallback PaintManager should be used.
"
      end

      operation 10433026 "getPaintManager"
	private return_type class_ref 1264770 // PaintManager
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10433154 "scheduleProcessingRunnable"
	private explicit_return_type "void"
	nparams 1
	  param inout name "context" explicit_type "AppContext"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1265154 "DisplayChangedHandler"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 10434690 "DisplayChangedHandler"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Empty non private constructor was added because access to this
 class shouldn't be generated by the compiler using synthetic
 accessor method"
	end

	operation 10434818 "displayChanged"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10434946 "paletteChanged"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10435074 "scheduleDisplayChanges"
	  class_operation private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1265410 "DisplayChangedRunnable"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4066562 // <realization>
	  relation 4066562 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4066562 // <realization>
	    b parent class_ref 128770 // Runnable
	end

	operation 10435202 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10435586 "getDelegate"
	private return_type class_ref 338562 // RepaintManager
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 339842 "JPanel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JPanel</code> is a generic lightweight container.
For examples and task-oriented documentation for JPanel, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/panel.html\">How to Use Panels</a>,
a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
description: A generic lightweight container.

@author Arnaud Weber
@author Steve Wilson
"
      classrelation 623746 // <generalisation>
	relation 623746 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 623746 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 623874 // <realization>
	relation 623874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 623874 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 624002 // uiClassID (<unidirectional association>)
	relation 624002 --->
	  a role_name "uiClassID" init_value " \"PanelUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 624002 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 2007170 "JPanel"
	public explicit_return_type ""
	nparams 2
	  param inout name "layout" type class_ref 349698 // LayoutManager
	  param inout name "isDoubleBuffered" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new JPanel with the specified layout manager and buffering
strategy.

@param layout  the LayoutManager to use
@param isDoubleBuffered  a boolean, true for double-buffering, which
       uses additional memory space to achieve fast, flicker-free
       updates
"
      end

      operation 2007298 "JPanel"
	public explicit_return_type ""
	nparams 1
	  param inout name "layout" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new buffered JPanel with the specified layout manager

@param layout  the LayoutManager to use
"
      end

      operation 2007426 "JPanel"
	public explicit_return_type ""
	nparams 1
	  param inout name "isDoubleBuffered" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JPanel</code> with <code>FlowLayout</code>
and the specified buffering strategy.
If <code>isDoubleBuffered</code> is true, the <code>JPanel</code>
will use a double buffer.

@param isDoubleBuffered  a boolean, true for double-buffering, which
       uses additional memory space to achieve fast, flicker-free
       updates
"
      end

      operation 2007554 "JPanel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JPanel</code> with a double buffer
and a flow layout.
"
      end

      operation 2007682 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property with a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 2007810 "getUI"
	public return_type class_ref 358914 // PanelUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the look and feel (L&amp;amp;F) object that renders this component.

@return the PanelUI object that renders this component
@since 1.4
"
      end

      operation 2007938 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 358914 // PanelUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the look and feel (L&amp;F) object that renders this component.

@param ui  the PanelUI L&amp;F object
@see UIDefaults#getUI
@since 1.4
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 2008066 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the L&amp;F class
that renders this component.

@return \"PanelUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
       expert: true
  description: A string that specifies the name of the L&amp;F class.
"
      end

      operation 2008194 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 2008322 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JPanel. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JPanel.
"
      end

      operation 2008450 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JPanel.
For JPanels, the AccessibleContext takes the form of an
AccessibleJPanel.
A new AccessibleJPanel instance is created if necessary.

@return an AccessibleJPanel that serves as the
        AccessibleContext of this JPanel
"
      end

      class 359042 "AccessibleJPanel"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 624130 // <generalisation>
	  relation 624130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 624130 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 2008578 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 351362 "TransferHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to handle the transfer of a <code>Transferable</code>
to and from Swing components.  The <code>Transferable</code> is used to
represent data that is exchanged via a cut, copy, or paste
to/from a clipboard.  It is also used in drag-and-drop operations
to represent a drag from a component, and a drop to a component.
Swing provides functionality that automatically supports cut, copy,
and paste keyboard bindings that use the functionality provided by
an implementation of this class.  Swing also provides functionality
that automatically supports drag and drop that uses the functionality
provided by an implementation of this class.  The Swing developer can
concentrate on specifying the semantics of a transfer primarily by setting
the <code>transferHandler</code> property on a Swing component.
<p>
This class is implemented to provide a default behavior of transferring
a component property simply by specifying the name of the property in
the constructor.  For example, to transfer the foreground color from
one component to another either via the clipboard or a drag and drop operation
a <code>TransferHandler</code> can be constructed with the string \"foreground\".  The
built in support will use the color returned by <code>getForeground</code> as the source
of the transfer, and <code>setForeground</code> for the target of a transfer.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html\">
How to Use Drag and Drop and Data Transfer</a>,
a section in <em>The Java Tutorial</em>, for more information.


@author Timothy Prinzing
@author Shannon Hickey
@since 1.4
"
      class 351490 "HasGetTransferHandler"
	visibility package stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 1968386 "getTransferHandler"
	  public return_type class_ref 351362 // TransferHandler
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the {@code TransferHandler}.

@return The {@code TransferHandler} or {@code null}
"
	end
      end

      classrelation 609666 // <realization>
	relation 609666 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 609666 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 454530 "NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " DnDConstants.ACTION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing no transfer action.

"
      end

      attribute 454658 "COPY"
	class_attribute const_attribute public explicit_type "int"
	init_value " DnDConstants.ACTION_COPY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;copy&quot; transfer action.
This value is used when data is copied to a clipboard
or copied elsewhere in a drag and drop operation.

"
      end

      attribute 454786 "MOVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " DnDConstants.ACTION_MOVE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;move&quot; transfer action.
This value is used when data is moved to a clipboard (i.e. a cut)
or moved elsewhere in a drag and drop operation.

"
      end

      attribute 454914 "COPY_OR_MOVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " DnDConstants.ACTION_COPY_OR_MOVE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a source action capability of either
&quot;copy&quot; or &quot;move&quot;.

"
      end

      attribute 455042 "LINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " DnDConstants.ACTION_LINK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;link&quot; transfer action.
This value is used to specify that data should be linked in a drag
and drop operation.

@see java.awt.dnd.DnDConstants#ACTION_LINK
@since 1.6

"
      end

      class 351618 "DropLocation"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 609794 // dropPoint (<unidirectional association>)
	  relation 609794 --->
	    a role_name "dropPoint" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 609794 // dropPoint (<unidirectional association>)
	    b parent class_ref 323714 // Point
	end

	operation 1968514 "DropLocation"
	  protected explicit_return_type ""
	  nparams 1
	    param inout name "dropPoint" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a drop location for the given point.

@param dropPoint the drop point, representing the mouse's
       current location within the component.
@throws IllegalArgumentException if the point
        is <code>null</code>
"
	end

	operation 1968642 "getDropPoint"
	  public return_type class_ref 323714 // Point
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the drop point, representing the mouse's
current location within the component.

@return the drop point.
"
	end

	operation 1968770 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a string representation of this drop location.
This method is intended to be used for debugging purposes,
and the content and format of the returned string may vary
between implementations.

@return a string representation of this drop location
"
	end
      end

      class 351746 "TransferSupport"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 455170 "isDrop"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 609922 // component (<unidirectional association>)
	  relation 609922 --->
	    a role_name "component" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 609922 // component (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	attribute 455298 "showDropLocationIsSet"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 455426 "showDropLocation"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 455554 "dropAction"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 610050 // source (<unidirectional association>)
	  relation 610050 --->
	    a role_name "source" private
	      comment "
The source is a {@code DropTargetDragEvent} or
{@code DropTargetDropEvent} for drops,
and a {@code Transferable} otherwise

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 610050 // source (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 610178 // dropLocation (<unidirectional association>)
	  relation 610178 --->
	    a role_name "dropLocation" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 610178 // dropLocation (<unidirectional association>)
	    b parent class_ref 351618 // DropLocation
	end

	operation 1968898 "TransferSupport"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "component" type class_ref 338818 // Component
	    param inout name "event" type class_ref 351874 // DropTargetEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a <code>TransferSupport</code> with <code>isDrop()</code>
<code>true</code> for the given component, event, and index.

@param component the target component
@param event a <code>DropTargetEvent</code>
"
	end

	operation 1969026 "TransferSupport"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "component" type class_ref 338818 // Component
	    param inout name "transferable" type class_ref 352002 // Transferable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a <code>TransferSupport</code> with <code>isDrop()</code>
<code>false</code> for the given component and
<code>Transferable</code>.

@param component the target component
@param transferable the transferable
@throws NullPointerException if either parameter
        is <code>null</code>
"
	end

	operation 1969154 "setDNDVariables"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "component" type class_ref 338818 // Component
	    param inout name "event" type class_ref 351874 // DropTargetEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Allows for a single instance to be reused during DnD.

@param component the target component
@param event a <code>DropTargetEvent</code>
"
	end

	operation 1969282 "isDrop"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether or not this <code>TransferSupport</code>
represents a drop operation.

@return <code>true</code> if this is a drop operation,
        <code>false</code> otherwise.
"
	end

	operation 1969410 "getComponent"
	  public return_type class_ref 338818 // Component
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the target component of this transfer.

@return the target component
"
	end

	operation 1969538 "assureIsDrop"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks that this is a drop and throws an
{@code IllegalStateException} if it isn't.

@throws IllegalStateException if {@code isDrop} is false.
"
	end

	operation 1969666 "getDropLocation"
	  public return_type class_ref 351618 // DropLocation
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the current (non-{@code null}) drop location for the component,
when this {@code TransferSupport} represents a drop.
<p>
Note: For components with built-in drop support, this location
will be a subclass of {@code DropLocation} of the same type
returned by that component's {@code getDropLocation} method.
<p>
This method is only for use with drag and drop transfers.
Calling it when {@code isDrop()} is {@code false} results
in an {@code IllegalStateException}.

@return the drop location
@throws IllegalStateException if this is not a drop
@see #isDrop()
"
	end

	operation 1969794 "setShowDropLocation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "showDropLocation" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets whether or not the drop location should be visually indicated
for the transfer - which must represent a drop. This is applicable to
those components that automatically
show the drop location when appropriate during a drag and drop
operation). By default, the drop location is shown only when the
{@code TransferHandler} has said it can accept the import represented
by this {@code TransferSupport}. With this method you can force the
drop location to always be shown, or always not be shown.
<p>
This method is only for use with drag and drop transfers.
Calling it when {@code isDrop()} is {@code false} results
in an {@code IllegalStateException}.

@param showDropLocation whether or not to indicate the drop location
@throws IllegalStateException if this is not a drop
@see #isDrop()
"
	end

	operation 1969922 "setDropAction"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "dropAction" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the drop action for the transfer - which must represent a drop
- to the given action,
instead of the default user drop action. The action must be
supported by the source's drop actions, and must be one
of {@code COPY}, {@code MOVE} or {@code LINK}.
<p>
This method is only for use with drag and drop transfers.
Calling it when {@code isDrop()} is {@code false} results
in an {@code IllegalStateException}.

@param dropAction the drop action
@throws IllegalStateException if this is not a drop
@throws IllegalArgumentException if an invalid action is specified
@see #getDropAction
@see #getUserDropAction
@see #getSourceDropActions
@see #isDrop()
"
	end

	operation 1970050 "getDropAction"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the action chosen for the drop, when this
{@code TransferSupport} represents a drop.
<p>
Unless explicitly chosen by way of {@code setDropAction},
this returns the user drop action provided by
{@code getUserDropAction}.
<p>
You may wish to query this in {@code TransferHandler}'s
{@code importData} method to customize processing based
on the action.
<p>
This method is only for use with drag and drop transfers.
Calling it when {@code isDrop()} is {@code false} results
in an {@code IllegalStateException}.

@return the action chosen for the drop
@throws IllegalStateException if this is not a drop
@see #setDropAction
@see #getUserDropAction
@see #isDrop()
"
	end

	operation 1970178 "getUserDropAction"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the user drop action for the drop, when this
{@code TransferSupport} represents a drop.
<p>
The user drop action is chosen for a drop as described in the
documentation for {@link java.awt.dnd.DropTargetDragEvent} and
{@link java.awt.dnd.DropTargetDropEvent}. A different action
may be chosen as the drop action by way of the {@code setDropAction}
method.
<p>
You may wish to query this in {@code TransferHandler}'s
{@code canImport} method when determining the suitability of a
drop or when deciding on a drop action to explicitly choose.
<p>
This method is only for use with drag and drop transfers.
Calling it when {@code isDrop()} is {@code false} results
in an {@code IllegalStateException}.

@return the user drop action
@throws IllegalStateException if this is not a drop
@see #setDropAction
@see #getDropAction
@see #isDrop()
"
	end

	operation 1970306 "getSourceDropActions"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the drag source's supported drop actions, when this
{@code TransferSupport} represents a drop.
<p>
The source actions represent the set of actions supported by the
source of this transfer, and are represented as some bitwise-OR
combination of {@code COPY}, {@code MOVE} and {@code LINK}.
You may wish to query this in {@code TransferHandler}'s
{@code canImport} method when determining the suitability of a drop
or when deciding on a drop action to explicitly choose. To determine
if a particular action is supported by the source, bitwise-AND
the action with the source drop actions, and then compare the result
against the original action. For example:
<pre>
boolean copySupported = (COPY &amp; getSourceDropActions()) == COPY;
</pre>
<p>
This method is only for use with drag and drop transfers.
Calling it when {@code isDrop()} is {@code false} results
in an {@code IllegalStateException}.

@return the drag source's supported drop actions
@throws IllegalStateException if this is not a drop
@see #isDrop()
"
	end

	operation 1970434 "getDataFlavors"
	  public return_type class_ref 352130 // DataFlavor
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the data flavors for this transfer.

@return the data flavors for this transfer
"
	end

	operation 1970562 "isDataFlavorSupported"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "df" type class_ref 352130 // DataFlavor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether or not the given data flavor is supported.

@param df the <code>DataFlavor</code> to test
@return whether or not the given flavor is supported.
"
	end

	operation 1970690 "getTransferable"
	  public return_type class_ref 352002 // Transferable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>Transferable</code> associated with this transfer.
<p>
Note: Unless it is necessary to fetch the <code>Transferable</code>
directly, use one of the other methods on this class to inquire about
the transfer. This may perform better than fetching the
<code>Transferable</code> and asking it directly.

@return the <code>Transferable</code> associated with this transfer
"
	end
      end

      operation 1970818 "getCutAction"
	class_operation public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Action} that performs cut operations to the
clipboard. When performed, this action operates on the {@code JComponent}
source of the {@code ActionEvent} by invoking {@code exportToClipboard},
with a {@code MOVE} action, on the component's {@code TransferHandler}.

@return an {@code Action} for performing cuts to the clipboard
"
      end

      operation 1970946 "getCopyAction"
	class_operation public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Action} that performs copy operations to the
clipboard. When performed, this action operates on the {@code JComponent}
source of the {@code ActionEvent} by invoking {@code exportToClipboard},
with a {@code COPY} action, on the component's {@code TransferHandler}.

@return an {@code Action} for performing copies to the clipboard
"
      end

      operation 1971074 "getPasteAction"
	class_operation public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Action} that performs paste operations from the
clipboard. When performed, this action operates on the {@code JComponent}
source of the {@code ActionEvent} by invoking {@code importData},
with the clipboard contents, on the component's {@code TransferHandler}.

@return an {@code Action} for performing pastes from the clipboard
"
      end

      operation 1971202 "TransferHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "property" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a transfer handler that can transfer a Java Bean property
from one component to another via the clipboard or a drag and drop
operation.

@param property  the name of the property to transfer; this can
 be <code>null</code> if there is no property associated with the transfer
 handler (a subclass that performs some other kind of transfer, for example)
"
      end

      operation 1971330 "TransferHandler"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience constructor for subclasses.
"
      end

      classrelation 610306 // dragImage (<unidirectional association>)
	relation 610306 --->
	  a role_name "dragImage" private
	    comment "
image for the {@code startDrag} method

@see java.awt.dnd.DragGestureEvent#startDrag(Cursor dragCursor, Image dragImage, Point imageOffset, Transferable transferable, DragSourceListener dsl)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 610306 // dragImage (<unidirectional association>)
	  b parent class_ref 340098 // Image
      end

      classrelation 610434 // dragImageOffset (<unidirectional association>)
	relation 610434 --->
	  a role_name "dragImageOffset" private
	    comment "
anchor offset for the {@code startDrag} method

@see java.awt.dnd.DragGestureEvent#startDrag(Cursor dragCursor, Image dragImage, Point imageOffset, Transferable transferable, DragSourceListener dsl)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 610434 // dragImageOffset (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      operation 1971458 "setDragImage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "img" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the drag image parameter. The image has to be prepared
for rendering by the moment of the call. The image is stored
by reference because of some performance reasons.

@param img an image to drag
"
      end

      operation 1971586 "getDragImage"
	public return_type class_ref 340098 // Image
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the drag image. If there is no image to drag,
the returned value is {@code null}.

@return the reference to the drag image
"
      end

      operation 1971714 "setDragImageOffset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an anchor offset for the image to drag.
It can not be {@code null}.

@param p a {@code Point} object that corresponds
to coordinates of an anchor offset of the image
relative to the upper left corner of the image
"
      end

      operation 1971842 "getDragImageOffset"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an anchor offset for the image to drag.

@return a {@code Point} object that corresponds
to coordinates of an anchor offset of the image
relative to the upper left corner of the image.
The point {@code (0,0)} returns by default.
"
      end

      operation 1971970 "exportAsDrag"
	public explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338434 // JComponent
	  param inout name "e" type class_ref 352386 // InputEvent
	  param in name "action" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the Swing drag support to be initiated.  This is called by
the various UI implementations in the <code>javax.swing.plaf.basic</code>
package if the dragEnabled property is set on the component.
This can be called by custom UI
implementations to use the Swing drag support.  This method can also be called
by a Swing extension written as a subclass of <code>JComponent</code>
to take advantage of the Swing drag support.
<p>
The transfer <em>will not necessarily</em> have been completed at the
return of this call (i.e. the call does not block waiting for the drop).
The transfer will take place through the Swing implementation of the
<code>java.awt.dnd</code> mechanism, requiring no further effort
from the developer. The <code>exportDone</code> method will be called
when the transfer has completed.

@param comp  the component holding the data to be transferred;
             provided to enable sharing of <code>TransferHandler</code>s
@param e     the event that triggered the transfer
@param action the transfer action initially requested;
              either {@code COPY}, {@code MOVE} or {@code LINK};
              the DnD system may change the action used during the
              course of the drag operation
"
      end

      operation 1972098 "exportToClipboard"
	public explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338434 // JComponent
	  param inout name "clip" type class_ref 352514 // Clipboard
	  param in name "action" explicit_type "int"
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes a transfer from the given component to the
given clipboard.  This method is called by the default cut and
copy actions registered in a component's action map.
<p>
The transfer will take place using the <code>java.awt.datatransfer</code>
mechanism, requiring no further effort from the developer. Any data
transfer <em>will</em> be complete and the <code>exportDone</code>
method will be called with the action that occurred, before this method
returns. Should the clipboard be unavailable when attempting to place
data on it, the <code>IllegalStateException</code> thrown by
{@link Clipboard#setContents(Transferable, ClipboardOwner)} will
be propagated through this method. However,
<code>exportDone</code> will first be called with an action
of <code>NONE</code> for consistency.

@param comp  the component holding the data to be transferred;
             provided to enable sharing of <code>TransferHandler</code>s
@param clip  the clipboard to transfer the data into
@param action the transfer action requested; this should
 be a value of either <code>COPY</code> or <code>MOVE</code>;
 the operation performed is the intersection  of the transfer
 capabilities given by getSourceActions and the requested action;
 the intersection may result in an action of <code>NONE</code>
 if the requested action isn't supported
@throws IllegalStateException if the clipboard is currently unavailable
@see Clipboard#setContents(Transferable, ClipboardOwner)
"
      end

      operation 1972226 "importData"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "support" type class_ref 351746 // TransferSupport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes a transfer to occur from a clipboard or a drag and
drop operation. The <code>Transferable</code> to be
imported and the component to transfer to are contained
within the <code>TransferSupport</code>.
<p>
While the drag and drop implementation calls {@code canImport}
to determine the suitability of a transfer before calling this
method, the implementation of paste does not. As such, it cannot
be assumed that the transfer is acceptable upon a call to
this method for paste. It is recommended that {@code canImport} be
explicitly called to cover this case.
<p>
Note: The <code>TransferSupport</code> object passed to this method
is only valid for the duration of the method call. It is undefined
what values it may contain after this method returns.

@param support the object containing the details of
       the transfer, not <code>null</code>.
@return true if the data was inserted into the component,
        false otherwise
@throws NullPointerException if <code>support</code> is {@code null}
@see #canImport(TransferHandler.TransferSupport)
@since 1.6
"
      end

      operation 1972354 "importData"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "comp" type class_ref 338434 // JComponent
	  param inout name "t" type class_ref 352002 // Transferable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes a transfer to a component from a clipboard or a
DND drop operation.  The <code>Transferable</code> represents
the data to be imported into the component.
<p>
Note: Swing now calls the newer version of <code>importData</code>
that takes a <code>TransferSupport</code>, which in turn calls this
method (if the component in the {@code TransferSupport} is a
{@code JComponent}). Developers are encouraged to call and override the
newer version as it provides more information (and is the only
version that supports use with a {@code TransferHandler} set directly
on a {@code JFrame} or other non-{@code JComponent}).

@param comp  the component to receive the transfer;
             provided to enable sharing of <code>TransferHandler</code>s
@param t     the data to import
@return  true if the data was inserted into the component, false otherwise
@see #importData(TransferHandler.TransferSupport)
"
      end

      operation 1972482 "canImport"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "support" type class_ref 351746 // TransferSupport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called repeatedly during a drag and drop operation
to allow the developer to configure properties of, and to return
the acceptability of transfers; with a return value of {@code true}
indicating that the transfer represented by the given
{@code TransferSupport} (which contains all of the details of the
transfer) is acceptable at the current time, and a value of {@code false}
rejecting the transfer.
<p>
For those components that automatically display a drop location during
drag and drop, accepting the transfer, by default, tells them to show
the drop location. This can be changed by calling
{@code setShowDropLocation} on the {@code TransferSupport}.
<p>
By default, when the transfer is accepted, the chosen drop action is that
picked by the user via their drag gesture. The developer can override
this and choose a different action, from the supported source
actions, by calling {@code setDropAction} on the {@code TransferSupport}.
<p>
On every call to {@code canImport}, the {@code TransferSupport} contains
fresh state. As such, any properties set on it must be set on every
call. Upon a drop, {@code canImport} is called one final time before
calling into {@code importData}. Any state set on the
{@code TransferSupport} during that last call will be available in
{@code importData}.
<p>
This method is not called internally in response to paste operations.
As such, it is recommended that implementations of {@code importData}
explicitly call this method for such cases and that this method
be prepared to return the suitability of paste operations as well.
<p>
Note: The <code>TransferSupport</code> object passed to this method
is only valid for the duration of the method call. It is undefined
what values it may contain after this method returns.

@param support the object containing the details of
       the transfer, not <code>null</code>.
@return <code>true</code> if the import can happen,
        <code>false</code> otherwise
@throws NullPointerException if <code>support</code> is {@code null}
@see #importData(TransferHandler.TransferSupport)
@see javax.swing.TransferHandler.TransferSupport#setShowDropLocation
@see javax.swing.TransferHandler.TransferSupport#setDropAction
@since 1.6
"
      end

      operation 1972610 "canImport"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "comp" type class_ref 338434 // JComponent
	  param inout name "transferFlavors" type class_ref 352130 // DataFlavor
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether a component will accept an import of the given
set of data flavors prior to actually attempting to import it.
<p>
Note: Swing now calls the newer version of <code>canImport</code>
that takes a <code>TransferSupport</code>, which in turn calls this
method (only if the component in the {@code TransferSupport} is a
{@code JComponent}). Developers are encouraged to call and override the
newer version as it provides more information (and is the only
version that supports use with a {@code TransferHandler} set directly
on a {@code JFrame} or other non-{@code JComponent}).

@param comp  the component to receive the transfer;
             provided to enable sharing of <code>TransferHandler</code>s
@param transferFlavors  the data formats available
@return  true if the data can be inserted into the component, false otherwise
@see #canImport(TransferHandler.TransferSupport)
"
      end

      operation 1972738 "getSourceActions"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of transfer actions supported by the source;
any bitwise-OR combination of {@code COPY}, {@code MOVE}
and {@code LINK}.
<p>
Some models are not mutable, so a transfer operation of {@code MOVE}
should not be advertised in that case. Returning {@code NONE}
disables transfers from the component.

@param c  the component holding the data to be transferred;
          provided to enable sharing of <code>TransferHandler</code>s
@return {@code COPY} if the transfer property can be found,
         otherwise returns <code>NONE</code>
"
      end

      operation 1972866 "getVisualRepresentation"
	public return_type class_ref 352642 // Icon
	nparams 1
	  param inout name "t" type class_ref 352002 // Transferable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object that establishes the look of a transfer.  This is
useful for both providing feedback while performing a drag operation and for
representing the transfer in a clipboard implementation that has a visual
appearance.  The implementation of the <code>Icon</code> interface should
not alter the graphics clip or alpha level.
The icon implementation need not be rectangular or paint all of the
bounding rectangle and logic that calls the icons paint method should
not assume the all bits are painted. <code>null</code> is a valid return value
for this method and indicates there is no visual representation provided.
In that case, the calling logic is free to represent the
transferable however it wants.
<p>
The default Swing logic will not do an alpha blended drag animation if
the return is <code>null</code>.

@param t  the data to be transferred; this value is expected to have been
 created by the <code>createTransferable</code> method
@return  <code>null</code>, indicating
   there is no default visual representation
"
      end

      operation 1972994 "createTransferable"
	protected return_type class_ref 352002 // Transferable
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Transferable</code> to use as the source for
a data transfer. Returns the representation of the data to
be transferred, or <code>null</code> if the component's
property is <code>null</code>

@param c  the component holding the data to be transferred;
             provided to enable sharing of <code>TransferHandler</code>s
@return  the representation of the data to be transferred, or
 <code>null</code> if the property associated with <code>c</code>
 is <code>null</code>

"
      end

      operation 1973122 "exportDone"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "source" type class_ref 338434 // JComponent
	  param inout name "data" type class_ref 352002 // Transferable
	  param in name "action" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked after data has been exported.  This method should remove
the data that was transferred if the action was <code>MOVE</code>.
<p>
This method is implemented to do nothing since <code>MOVE</code>
is not a supported action of this implementation
(<code>getSourceActions</code> does not include <code>MOVE</code>).

@param source the component that was the source of the data
@param data   The data that was transferred or possibly null
              if the action is <code>NONE</code>.
@param action the actual action that was performed
"
      end

      operation 1973250 "getPropertyDescriptor"
	private return_type class_ref 352770 // PropertyDescriptor
	nparams 1
	  param inout name "comp" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the property descriptor for the property assigned to this transfer
handler on the given component (transfer handler may be shared).  This
returns <code>null</code> if the property descriptor can't be found
or there is an error attempting to fetch the property descriptor.
"
      end

      operation 1973378 "getPropertyDataFlavor"
	private return_type class_ref 352130 // DataFlavor
	nparams 2
	  param inout name "k" type class_ref 130818 // Class
	  param inout name "flavors" type class_ref 352130 // DataFlavor
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the data flavor from the array of possible flavors that
has data of the type represented by property type.  Null is
returned if there is no match.
"
      end

      classrelation 610562 // propertyName (<unidirectional association>)
	relation 610562 --->
	  a role_name "propertyName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 610562 // propertyName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 352898 "SwingDragGestureRecognizer"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 616450 // <generalisation>
	  relation 616450 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 616450 // <generalisation>
	    b parent class_ref 356098 // DragGestureRecognizer
	end

	operation 1986434 "SwingDragGestureRecognizer"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "dgl" type class_ref 355330 // DragGestureListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1986562 "gestured"
	  package explicit_return_type "void"
	  nparams 4
	    param inout name "c" type class_ref 338434 // JComponent
	    param inout name "e" type class_ref 346626 // MouseEvent
	    param in name "srcActions" explicit_type "int"
	    param in name "action" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1986690 "registerListeners"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "register this DragGestureRecognizer's Listeners with the Component
"
	end

	operation 1986818 "unregisterListeners"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "unregister this DragGestureRecognizer's Listeners with the Component

subclasses must override this method
"
	end
      end

      classrelation 610690 // recognizer (<unidirectional association>)
	relation 610690 --->
	  a role_name "recognizer" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 610690 // recognizer (<unidirectional association>)
	  b parent class_ref 352898 // SwingDragGestureRecognizer
      end

      operation 1973506 "getDropTargetListener"
	class_operation private return_type class_ref 353026 // DropTargetListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 353154 "PropertyTransferable"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 610818 // <realization>
	  relation 610818 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 610818 // <realization>
	    b parent class_ref 352002 // Transferable
	end

	operation 1974018 "PropertyTransferable"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "p" type class_ref 352770 // PropertyDescriptor
	    param inout name "c" type class_ref 338434 // JComponent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1974146 "getTransferDataFlavors"
	  public return_type class_ref 352130 // DataFlavor
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " --- Transferable methods ----------------------------------------------

Returns an array of <code>DataFlavor</code> objects indicating the flavors the data
can be provided in.  The array should be ordered according to preference
for providing the data (from most richly descriptive to least descriptive).
@return an array of data flavors in which this data can be transferred
"
	end

	operation 1974274 "isDataFlavorSupported"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "flavor" type class_ref 352130 // DataFlavor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether the specified data flavor is supported for
this object.
@param flavor the requested flavor for the data
@return true if this <code>DataFlavor</code> is supported,
  otherwise false
"
	end

	operation 1974402 "getTransferData"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "flavor" type class_ref 352130 // DataFlavor
	  nexceptions 2
	    exception class_ref 353282 // UnsupportedFlavorException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an object which represents the data to be transferred.  The class
of the object returned is defined by the representation class of the flavor.

@param flavor the requested flavor for the data
@see DataFlavor#getRepresentationClass
@exception IOException                if the data is no longer available
             in the requested flavor.
@exception UnsupportedFlavorException if the requested data flavor is
             not supported.
"
	end

	classrelation 610946 // component (<unidirectional association>)
	  relation 610946 --->
	    a role_name "component" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 610946 // component (<unidirectional association>)
	    b parent class_ref 338434 // JComponent
	end

	classrelation 611074 // property (<unidirectional association>)
	  relation 611074 --->
	    a role_name "property" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 611074 // property (<unidirectional association>)
	    b parent class_ref 352770 // PropertyDescriptor
	end
      end

      class 353410 "SwingDropTarget"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 613634 // <generalisation>
	  relation 613634 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 613634 // <generalisation>
	    b parent class_ref 341250 // DropTarget
	end

	classrelation 613762 // <realization>
	  relation 613762 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 613762 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 1979906 "SwingDropTarget"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1980034 "addDropTargetListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dtl" type class_ref 353026 // DropTargetListener
	  nexceptions 1
	    exception class_ref 353922 // TooManyListenersException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1980162 "removeDropTargetListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dtl" type class_ref 353026 // DropTargetListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1980290 "dragEnter"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353538 // DropTargetDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " --- DropTargetListener methods (multicast) --------------------------"
	end

	operation 1980418 "dragOver"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353538 // DropTargetDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1980546 "dragExit"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 351874 // DropTargetEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1980674 "drop"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353666 // DropTargetDropEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1980802 "dropActionChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353538 // DropTargetDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 613890 // listenerList (<unidirectional association>)
	  relation 613890 --->
	    a role_name "listenerList" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 613890 // listenerList (<unidirectional association>)
	    b parent class_ref 354946 // EventListenerList
	end
      end

      class 355074 "DropHandler"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 614018 // <realization>
	  relation 614018 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 614018 // <realization>
	    b parent class_ref 353026 // DropTargetListener
	end

	classrelation 614146 // <realization>
	  relation 614146 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 614146 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 614274 // <realization>
	  relation 614274 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 614274 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	classrelation 614402 // timer (<unidirectional association>)
	  relation 614402 --->
	    a role_name "timer" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614402 // timer (<unidirectional association>)
	    b parent class_ref 354690 // Timer
	end

	classrelation 614530 // lastPosition (<unidirectional association>)
	  relation 614530 --->
	    a role_name "lastPosition" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614530 // lastPosition (<unidirectional association>)
	    b parent class_ref 323714 // Point
	end

	classrelation 614658 // outer (<unidirectional association>)
	  relation 614658 --->
	    a role_name "outer" init_value " new Rectangle()" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614658 // outer (<unidirectional association>)
	    b parent class_ref 314114 // Rectangle
	end

	classrelation 614786 // inner (<unidirectional association>)
	  relation 614786 --->
	    a role_name "inner" init_value " new Rectangle()" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614786 // inner (<unidirectional association>)
	    b parent class_ref 314114 // Rectangle
	end

	attribute 456322 "hysteresis"
	  private explicit_type "int"
	  init_value " 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 614914 // component (<unidirectional association>)
	  relation 614914 --->
	    a role_name "component" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614914 // component (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	classrelation 615042 // state (<unidirectional association>)
	  relation 615042 --->
	    a role_name "state" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 615042 // state (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 615170 // support (<unidirectional association>)
	  relation 615170 --->
	    a role_name "support" init_value "
            new TransferSupport(null, (DropTargetEvent)null)" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 615170 // support (<unidirectional association>)
	    b parent class_ref 351746 // TransferSupport
	end

	attribute 456450 "AUTOSCROLL_INSET"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 1980930 "updateAutoscrollRegion"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 338434 // JComponent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Update the geometry of the autoscroll region.  The geometry is
maintained as a pair of rectangles.  The region can cause
a scroll if the pointer sits inside it for the duration of the
timer.  The region that causes the timer countdown is the area
between the two rectangles.
<p>
This is implemented to use the visible area of the component
as the outer rectangle, and the insets are fixed at 10. Should
the component be smaller than a total of 20 in any direction,
autoscroll will not occur in that direction.
"
	end

	operation 1981058 "autoscroll"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "c" type class_ref 338434 // JComponent
	    param inout name "pos" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform an autoscroll operation.  This is implemented to scroll by the
unit increment of the Scrollable using scrollRectToVisible.  If the
cursor is in a corner of the autoscroll region, more than one axis will
scroll.
"
	end

	operation 1981186 "initPropertiesIfNecessary"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Initializes the internal properties if they haven't been already
inited. This is done lazily to avoid loading of desktop properties.
"
	end

	operation 1981314 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The timer fired, perform autoscroll if the pointer is within the
autoscroll region.
<P>
@param e the <code>ActionEvent</code>
"
	end

	operation 1981442 "setComponentDropLocation"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "support" type class_ref 351746 // TransferSupport
	    param inout name "forDrop" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " --- DropTargetListener methods -----------------------------------"
	end

	operation 1981570 "handleDrag"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353538 // DropTargetDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1981698 "dragEnter"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353538 // DropTargetDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1981826 "dragOver"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353538 // DropTargetDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1981954 "dragExit"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 351874 // DropTargetEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1982082 "drop"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353666 // DropTargetDropEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1982210 "dropActionChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 353538 // DropTargetDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1982338 "cleanup"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "forDrop" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 355202 "DragHandler"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 615426 // <realization>
	  relation 615426 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 615426 // <realization>
	    b parent class_ref 355330 // DragGestureListener
	end

	classrelation 615682 // <realization>
	  relation 615682 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 615682 // <realization>
	    b parent class_ref 355586 // DragSourceListener
	end

	attribute 456578 "scrolls"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 1983234 "dragGestureRecognized"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dge" type class_ref 355458 // DragGestureEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " --- DragGestureListener methods -----------------------------------

a Drag gesture has been recognized
"
	end

	operation 1983362 "dragEnter"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " --- DragSourceListener methods -----------------------------------

as the hotspot enters a platform dependent drop site
"
	end

	operation 1983490 "dragOver"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "as the hotspot moves over a platform dependent drop site
"
	end

	operation 1983618 "dragExit"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dsde" type class_ref 355842 // DragSourceEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "as the hotspot exits a platform dependent drop site
"
	end

	operation 1983746 "dragDropEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dsde" type class_ref 355970 // DragSourceDropEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "as the operation completes
"
	end

	operation 1983874 "dropActionChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 616578 // cutAction (<unidirectional association>)
	relation 616578 --->
	  a role_name "cutAction" init_value " new TransferAction(\"cut\")" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 616578 // cutAction (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      classrelation 616706 // copyAction (<unidirectional association>)
	relation 616706 --->
	  a role_name "copyAction" init_value " new TransferAction(\"copy\")" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 616706 // copyAction (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      classrelation 616834 // pasteAction (<unidirectional association>)
	relation 616834 --->
	  a role_name "pasteAction" init_value " new TransferAction(\"paste\")" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 616834 // pasteAction (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      class 356354 "TransferAction"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 617090 // <realization>
	  relation 617090 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 617090 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	operation 1986946 "TransferAction"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1987074 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "sender" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 456962 "javaSecurityAccess"
	  class_attribute const_attribute private explicit_type "JavaSecurityAccess"
	  init_value "
            SharedSecrets.getJavaSecurityAccess()"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 1987202 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1987330 "actionPerformedImpl"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1987458 "getClipboard"
	  private return_type class_ref 352514 // Clipboard
	  nparams 1
	    param inout name "c" type class_ref 338434 // JComponent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the clipboard to use for cut/copy/paste.
"
	end

	classrelation 617218 // SandboxClipboardKey (<unidirectional association>)
	  relation 617218 --->
	    a role_name "SandboxClipboardKey" init_value " new Object()" class_relation private
	      comment "
Key used in app context to lookup Clipboard to use if access to
System clipboard is denied.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 617218 // SandboxClipboardKey (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end
      end
    end

    class 352258 "Action"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Action</code> interface provides a useful extension to the
<code>ActionListener</code>
interface in cases where the same functionality may be accessed by
several controls.
<p>
In addition to the <code>actionPerformed</code> method defined by the
<code>ActionListener</code> interface, this interface allows the
application to define, in a single place:
<ul>
<li>One or more text strings that describe the function. These strings
    can be used, for example, to display the flyover text for a button
    or to set the text in a menu item.
<li>One or more icons that depict the function. These icons can be used
    for the images in a menu control, or for composite entries in a more
    sophisticated user interface.
<li>The enabled/disabled state of the functionality. Instead of having
    to separately disable the menu item and the toolbar button, the
    application can disable the function that implements this interface.
    All components which are registered as listeners for the state change
    then know to disable event generation for that item and to modify the
    display accordingly.
</ul>
<p>
This interface can be added to an existing class or used to create an
adapter (typically, by subclassing <code>AbstractAction</code>).
The <code>Action</code> object
can then be added to multiple <code>Action</code>-aware containers
and connected to <code>Action</code>-capable
components. The GUI controls can then be activated or
deactivated all at once by invoking the <code>Action</code> object's
<code>setEnabled</code> method.
<p>
Note that <code>Action</code> implementations tend to be more expensive
in terms of storage than a typical <code>ActionListener</code>,
which does not offer the benefits of centralized control of
functionality and broadcast of property changes.  For this reason,
you should take care to only use <code>Action</code>s where their benefits
are desired, and use simple <code>ActionListener</code>s elsewhere.
<br>

<h3><a name=\"buttonActions\"></a>Swing Components Supporting <code>Action</code></h3>
<p>
Many of Swing's components have an <code>Action</code> property.  When
an <code>Action</code> is set on a component, the following things
happen:
<ul>
<li>The <code>Action</code> is added as an <code>ActionListener</code> to
    the component.
<li>The component configures some of its properties to match the
     <code>Action</code>.
<li>The component installs a <code>PropertyChangeListener</code> on the
    <code>Action</code> so that the component can change its properties
    to reflect changes in the <code>Action</code>'s properties.
</ul>
<p>
The following table describes the properties used by
<code>Swing</code> components that support <code>Actions</code>.
In the table, <em>button</em> refers to any
<code>AbstractButton</code> subclass, which includes not only
<code>JButton</code> but also classes such as
<code>JMenuItem</code>. Unless otherwise stated, a
<code>null</code> property value in an <code>Action</code> (or a
<code>Action</code> that is <code>null</code>) results in the
button's corresponding property being set to <code>null</code>.

<table border=\"1\" cellpadding=\"1\" cellspacing=\"0\"
        summary=\"Supported Action properties\">
 <tr valign=\"top\"  align=\"left\">
   <th style=\"background-color:#CCCCFF\" align=\"left\">Component Property
   <th style=\"background-color:#CCCCFF\" align=\"left\">Components
   <th style=\"background-color:#CCCCFF\" align=\"left\">Action Key
   <th style=\"background-color:#CCCCFF\" align=\"left\">Notes
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>enabled</code></b>
     <td>All
     <td>The <code>isEnabled</code> method
     <td>&nbsp;
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>toolTipText</code></b>
     <td>All
     <td><code>SHORT_DESCRIPTION</code>
     <td>&nbsp;
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>actionCommand</code></b>
     <td>All
     <td><code>ACTION_COMMAND_KEY</code>
     <td>&nbsp;
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>mnemonic</code></b>
     <td>All buttons
     <td><code>MNEMONIC_KEY</code>
     <td>A <code>null</code> value or <code>Action</code> results in the
         button's <code>mnemonic</code> property being set to
         <code>'\\0'</code>.
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>text</code></b>
     <td>All buttons
     <td><code>NAME</code>
     <td>If you do not want the text of the button to mirror that
         of the <code>Action</code>, set the property
         <code>hideActionText</code> to <code>true</code>.  If
         <code>hideActionText</code> is <code>true</code>, setting the
         <code>Action</code> changes the text of the button to
         <code>null</code> and any changes to <code>NAME</code>
         are ignored.  <code>hideActionText</code> is useful for
         tool bar buttons that typically only show an <code>Icon</code>.
         <code>JToolBar.add(Action)</code> sets the property to
         <code>true</code> if the <code>Action</code> has a
         non-<code>null</code> value for <code>LARGE_ICON_KEY</code> or
         <code>SMALL_ICON</code>.
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>displayedMnemonicIndex</code></b>
     <td>All buttons
     <td><code>DISPLAYED_MNEMONIC_INDEX_KEY</code>
     <td>If the value of <code>DISPLAYED_MNEMONIC_INDEX_KEY</code> is
         beyond the bounds of the text, it is ignored.  When
         <code>setAction</code> is called, if the value from the
         <code>Action</code> is <code>null</code>, the displayed
         mnemonic index is not updated.  In any subsequent changes to
         <code>DISPLAYED_MNEMONIC_INDEX_KEY</code>, <code>null</code>
         is treated as -1.
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>icon</code></b>
     <td>All buttons except of <code>JCheckBox</code>,
     <code>JToggleButton</code> and <code>JRadioButton</code>.
     <td>either <code>LARGE_ICON_KEY</code> or
         <code>SMALL_ICON</code>
    <td>The <code>JMenuItem</code> subclasses only use
        <code>SMALL_ICON</code>.  All other buttons will use
        <code>LARGE_ICON_KEY</code>; if the value is <code>null</code> they
        use <code>SMALL_ICON</code>.
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>accelerator</code></b>
     <td>All <code>JMenuItem</code> subclasses, with the exception of
         <code>JMenu</code>.
     <td><code>ACCELERATOR_KEY</code>
     <td>&nbsp;
 <tr valign=\"top\"  align=\"left\">
     <td><b><code>selected</code></b>
     <td><code>JToggleButton</code>, <code>JCheckBox</code>,
         <code>JRadioButton</code>, <code>JCheckBoxMenuItem</code> and
         <code>JRadioButtonMenuItem</code>
     <td><code>SELECTED_KEY</code>
     <td>Components that honor this property only use
         the value if it is {@code non-null}. For example, if
         you set an {@code Action} that has a {@code null}
         value for {@code SELECTED_KEY} on a {@code JToggleButton}, the
         {@code JToggleButton} will not update it's selected state in
         any way. Similarly, any time the {@code JToggleButton}'s
         selected state changes it will only set the value back on
         the {@code Action} if the {@code Action} has a {@code non-null}
         value for {@code SELECTED_KEY}.
         <br>
         Components that honor this property keep their selected state
         in sync with this property. When the same {@code Action} is used
         with multiple components, all the components keep their selected
         state in sync with this property. Mutually exclusive
         buttons, such as {@code JToggleButton}s in a {@code ButtonGroup},
         force only one of the buttons to be selected. As such, do not
         use the same {@code Action} that defines a value for the
         {@code SELECTED_KEY} property with multiple mutually
         exclusive buttons.
</table>
<p>
<code>JPopupMenu</code>, <code>JToolBar</code> and <code>JMenu</code>
all provide convenience methods for creating a component and setting the
<code>Action</code> on the corresponding component.  Refer to each of
these classes for more information.
<p>
<code>Action</code> uses <code>PropertyChangeListener</code> to
inform listeners the <code>Action</code> has changed.  The beans
specification indicates that a <code>null</code> property name can
be used to indicate multiple values have changed.  By default Swing
components that take an <code>Action</code> do not handle such a
change.  To indicate that Swing should treat <code>null</code>
according to the beans specification set the system property
<code>swing.actions.reconfigureOnNull</code> to the <code>String</code>
value <code>true</code>.

@author Georges Saab
@see AbstractAction
"
      classrelation 620930 // <generalisation>
	relation 620930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 620930 // <generalisation>
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 621058 // DEFAULT (<unidirectional association>)
	relation 621058 --->
	  a role_name "DEFAULT" init_value " \"Default\"" class_relation const_relation public
	    comment "
Useful constants that can be used as the storage-retrieval key
when setting or getting one of this object's properties (text
or icon).


Not currently used.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621058 // DEFAULT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 621186 // NAME (<unidirectional association>)
	relation 621186 --->
	  a role_name "NAME" init_value " \"Name\"" class_relation const_relation public
	    comment "
The key used for storing the <code>String</code> name
for the action, used for a menu or button.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621186 // NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 621314 // SHORT_DESCRIPTION (<unidirectional association>)
	relation 621314 --->
	  a role_name "SHORT_DESCRIPTION" init_value " \"ShortDescription\"" class_relation const_relation public
	    comment "
The key used for storing a short <code>String</code>
description for the action, used for tooltip text.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621314 // SHORT_DESCRIPTION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 621442 // LONG_DESCRIPTION (<unidirectional association>)
	relation 621442 --->
	  a role_name "LONG_DESCRIPTION" init_value " \"LongDescription\"" class_relation const_relation public
	    comment "
The key used for storing a longer <code>String</code>
description for the action, could be used for context-sensitive help.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621442 // LONG_DESCRIPTION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 621570 // SMALL_ICON (<unidirectional association>)
	relation 621570 --->
	  a role_name "SMALL_ICON" init_value " \"SmallIcon\"" class_relation const_relation public
	    comment "
The key used for storing a small <code>Icon</code>, such
as <code>ImageIcon</code>.  This is typically used with
menus such as <code>JMenuItem</code>.
<p>
If the same <code>Action</code> is used with menus and buttons you'll
typically specify both a <code>SMALL_ICON</code> and a
<code>LARGE_ICON_KEY</code>.  The menu will use the
<code>SMALL_ICON</code> and the button will use the
<code>LARGE_ICON_KEY</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621570 // SMALL_ICON (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 621698 // ACTION_COMMAND_KEY (<unidirectional association>)
	relation 621698 --->
	  a role_name "ACTION_COMMAND_KEY" init_value " \"ActionCommandKey\"" class_relation const_relation public
	    comment "
The key used to determine the command <code>String</code> for the
<code>ActionEvent</code> that will be created when an
<code>Action</code> is going to be notified as the result of
residing in a <code>Keymap</code> associated with a
<code>JComponent</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621698 // ACTION_COMMAND_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 621826 // ACCELERATOR_KEY (<unidirectional association>)
	relation 621826 --->
	  a role_name "ACCELERATOR_KEY" init_value "\"AcceleratorKey\"" class_relation const_relation public
	    comment "
The key used for storing a <code>KeyStroke</code> to be used as the
accelerator for the action.

@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621826 // ACCELERATOR_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 621954 // MNEMONIC_KEY (<unidirectional association>)
	relation 621954 --->
	  a role_name "MNEMONIC_KEY" init_value "\"MnemonicKey\"" class_relation const_relation public
	    comment "
The key used for storing an <code>Integer</code> that corresponds to
one of the <code>KeyEvent</code> key codes.  The value is
commonly used to specify a mnemonic.  For example:
<code>myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_A)</code>
sets the mnemonic of <code>myAction</code> to 'a', while
<code>myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.getExtendedKeyCodeForChar('\\u0444'))</code>
sets the mnemonic of <code>myAction</code> to Cyrillic letter \"Ef\".

@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 621954 // MNEMONIC_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 622082 // SELECTED_KEY (<unidirectional association>)
	relation 622082 --->
	  a role_name "SELECTED_KEY" init_value " \"SwingSelectedKey\"" class_relation const_relation public
	    comment "
The key used for storing a <code>Boolean</code> that corresponds
to the selected state.  This is typically used only for components
that have a meaningful selection state.  For example,
<code>JRadioButton</code> and <code>JCheckBox</code> make use of
this but instances of <code>JMenu</code> don't.
<p>
This property differs from the others in that it is both read
by the component and set by the component.  For example,
if an <code>Action</code> is attached to a <code>JCheckBox</code>
the selected state of the <code>JCheckBox</code> will be set from
that of the <code>Action</code>.  If the user clicks on the
<code>JCheckBox</code> the selected state of the <code>JCheckBox</code>
<b>and</b> the <code>Action</code> will <b>both</b> be updated.
<p>
Note: the value of this field is prefixed with 'Swing' to
avoid possible collisions with existing <code>Actions</code>.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622082 // SELECTED_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 622210 // DISPLAYED_MNEMONIC_INDEX_KEY (<unidirectional association>)
	relation 622210 --->
	  a role_name "DISPLAYED_MNEMONIC_INDEX_KEY" init_value "
                                 \"SwingDisplayedMnemonicIndexKey\"" class_relation const_relation public
	    comment "
The key used for storing an <code>Integer</code> that corresponds
to the index in the text (identified by the <code>NAME</code>
property) that the decoration for a mnemonic should be rendered at.  If
the value of this property is greater than or equal to the length of
the text, it will treated as -1.
<p>
Note: the value of this field is prefixed with 'Swing' to
avoid possible collisions with existing <code>Actions</code>.

@see AbstractButton#setDisplayedMnemonicIndex
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622210 // DISPLAYED_MNEMONIC_INDEX_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 622338 // LARGE_ICON_KEY (<unidirectional association>)
	relation 622338 --->
	  a role_name "LARGE_ICON_KEY" init_value " \"SwingLargeIconKey\"" class_relation const_relation public
	    comment "
The key used for storing an <code>Icon</code>.  This is typically
used by buttons, such as <code>JButton</code> and
<code>JToggleButton</code>.
<p>
If the same <code>Action</code> is used with menus and buttons you'll
typically specify both a <code>SMALL_ICON</code> and a
<code>LARGE_ICON_KEY</code>.  The menu will use the
<code>SMALL_ICON</code> and the button the <code>LARGE_ICON_KEY</code>.
<p>
Note: the value of this field is prefixed with 'Swing' to
avoid possible collisions with existing <code>Actions</code>.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 622338 // LARGE_ICON_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 2003330 "getValue"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets one of this object's properties
using the associated key.
@see #putValue
"
      end

      operation 2003458 "putValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets one of this object's properties
using the associated key. If the value has
changed, a <code>PropertyChangeEvent</code> is sent
to listeners.

@param key    a <code>String</code> containing the key
@param value  an <code>Object</code> value
"
      end

      operation 2003586 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the enabled state of the <code>Action</code>.  When enabled,
any component associated with this object is active and
able to fire this object's <code>actionPerformed</code> method.
If the value has changed, a <code>PropertyChangeEvent</code> is sent
to listeners.

@param  b true to enable this <code>Action</code>, false to disable it
"
      end

      operation 2003714 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the enabled state of the <code>Action</code>. When enabled,
any component associated with this object is active and
able to fire this object's <code>actionPerformed</code> method.

@return true if this <code>Action</code> is enabled
"
      end

      operation 2003842 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>PropertyChange</code> listener. Containers and attached
components use these methods to register interest in this
<code>Action</code> object. When its enabled state or other property
changes, the registered listeners are informed of the change.

@param listener  a <code>PropertyChangeListener</code> object
"
      end

      operation 2003970 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PropertyChange</code> listener.

@param listener  a <code>PropertyChangeListener</code> object
@see #addPropertyChangeListener
"
      end
    end

    class 352642 "Icon"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A small fixed size picture, typically used to decorate components.

@see ImageIcon
"
      operation 2064514 "paintIcon"
	public explicit_return_type "void"
	nparams 4
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draw the icon at the specified location.  Icon implementations
may use the Component argument to get properties useful for
painting, e.g. the foreground or background color.
"
      end

      operation 2064642 "getIconWidth"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the icon's width.

@return an int specifying the fixed width of the icon.
"
      end

      operation 2064770 "getIconHeight"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the icon's height.

@return an int specifying the fixed height of the icon.
"
      end
    end

    class 354690 "Timer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Fires one or more {@code ActionEvent}s at specified
intervals. An example use is an animation object that uses a
<code>Timer</code> as the trigger for drawing its frames.
<p>
Setting up a timer
involves creating a <code>Timer</code> object,
registering one or more action listeners on it,
and starting the timer using
the <code>start</code> method.
For example,
the following code creates and starts a timer
that fires an action event once per second
(as specified by the first argument to the <code>Timer</code> constructor).
The second argument to the <code>Timer</code> constructor
specifies a listener to receive the timer's action events.

<pre>
 int delay = 1000; //milliseconds
 ActionListener taskPerformer = new ActionListener() {
     public void actionPerformed(ActionEvent evt) {
         <em>//...Perform a task...</em>
     }
 };
 new Timer(delay, taskPerformer).start();</pre>

<p>
{@code Timers} are constructed by specifying both a delay parameter
and an {@code ActionListener}. The delay parameter is used
to set both the initial delay and the delay between event
firing, in milliseconds. Once the timer has been started,
it waits for the initial delay before firing its
first <code>ActionEvent</code> to registered listeners.
After this first event, it continues to fire events
every time the between-event delay has elapsed, until it
is stopped.
<p>
After construction, the initial delay and the between-event
delay can be changed independently, and additional
<code>ActionListeners</code> may be added.
<p>
If you want the timer to fire only the first time and then stop,
invoke <code>setRepeats(false)</code> on the timer.
<p>
Although all <code>Timer</code>s perform their waiting
using a single, shared thread
(created by the first <code>Timer</code> object that executes),
the action event handlers for <code>Timer</code>s
execute on another thread -- the event-dispatching thread.
This means that the action handlers for <code>Timer</code>s
can safely perform operations on Swing components.
However, it also means that the handlers must execute quickly
to keep the GUI responsive.

<p>
In v 1.3, another <code>Timer</code> class was added
to the Java platform: <code>java.util.Timer</code>.
Both it and <code>javax.swing.Timer</code>
provide the same basic functionality,
but <code>java.util.Timer</code>
is more general and has more features.
The <code>javax.swing.Timer</code> has two features
that can make it a little easier to use with GUIs.
First, its event handling metaphor is familiar to GUI programmers
and can make dealing with the event-dispatching thread
a bit simpler.
Second, its
automatic thread sharing means that you don't have to
take special steps to avoid spawning
too many threads.
Instead, your timer uses the same thread
used to make cursors blink,
tool tips appear,
and so on.

<p>
You can find further documentation
and several examples of using timers by visiting
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/timer.html\"
target = \"_top\">How to Use Timers</a>,
a section in <em>The Java Tutorial.</em>
For more examples and help in choosing between
this <code>Timer</code> class and
<code>java.util.Timer</code>,
see
<a href=\"http://java.sun.com/products/jfc/tsc/articles/timer/\"
target=\"_top\">Using Timers in Swing Applications</a>,
an article in <em>The Swing Connection.</em>
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see java.util.Timer <code>java.util.Timer</code>


@author Dave Moore
"
      classrelation 4193026 // <realization>
	relation 4193026 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4193026 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4193154 // listenerList (<unidirectional association>)
	relation 4193154 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment "
NOTE: all fields need to be handled in readResolve

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4193154 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      classrelation 4193282 // notify (<unidirectional association>)
	relation 4193282 --->
	  a role_name "notify" init_value " new AtomicBoolean(false)" const_relation private
	    comment " The following field strives to maintain the following:
    If coalesce is true, only allow one Runnable to be queued on the
    EventQueue and be pending (ie in the process of notifying the
    ActionListener). If we didn't do this it would allow for a
    situation where the app is taking too long to process the
    actionPerformed, and thus we'ld end up queing a bunch of Runnables
    and the app would never return: not good. This of course implies
    you can get dropped events, but such is life.
 notify is used to indicate if the ActionListener can be notified, when
 the Runnable is processed if this is true it will notify the listeners.
 notify is set to true when the Timer fires and the Runnable is queued.
 It will be set to false after notifying the listeners (if coalesce is
 true) or if the developer invokes stop.
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4193282 // notify (<unidirectional association>)
	  b parent class_ref 357506 // AtomicBoolean
      end

      attribute 2440194 "initialDelay"
	volatile private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2440322 "delay"
	volatile private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2440450 "repeats"
	volatile private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2440578 "coalesce"
	volatile private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4193410 // doPostEvent (<unidirectional association>)
	relation 4193410 --->
	  a role_name "doPostEvent" const_relation private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4193410 // doPostEvent (<unidirectional association>)
	  b parent class_ref 128770 // Runnable
      end

      attribute 2440706 "logTimers"
	class_attribute volatile private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4193538 // lock (<unidirectional association>)
	relation 4193538 --->
	  a role_name "lock" init_value " new ReentrantLock()" const_relation private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4193538 // lock (<unidirectional association>)
	  b parent class_ref 864642 // Lock
      end

      classrelation 4193666 // delayedTimer (<unidirectional association>)
	relation 4193666 --->
	  a role_name "delayedTimer" init_value " null" package
	    comment " This field is maintained by TimerQueue.
 eventQueued can also be reset by the TimerQueue, but will only ever
 happen in applet case when TimerQueues thread is destroyed.
 access to this field is synchronized on getLock() lock.
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4193666 // delayedTimer (<unidirectional association>)
	  b parent class_ref 1300482 // DelayedTimer
      end

      classrelation 4193794 // actionCommand (<unidirectional association>)
	relation 4193794 --->
	  a role_name "actionCommand" volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4193794 // actionCommand (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10845058 "Timer"
	public explicit_return_type ""
	nparams 2
	  param in name "delay" explicit_type "int"
	  param inout name "listener" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Timer} and initializes both the initial delay and
between-event delay to {@code delay} milliseconds. If {@code delay}
is less than or equal to zero, the timer fires as soon as it
is started. If <code>listener</code> is not <code>null</code>,
it's registered as an action listener on the timer.

@param delay milliseconds for the initial and between-event delay
@param listener  an initial listener; can be <code>null</code>

@see #addActionListener
@see #setInitialDelay
@see #setRepeats
"
      end

      classrelation 4193922 // acc (<unidirectional association>)
	relation 4193922 --->
	  a role_name "acc" init_value "
            AccessController.getContext()" volatile private
	    comment "
The timer's AccessControlContext.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4193922 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      operation 10845186 "getAccessControlContext"
	package return_type class_ref 129154 // AccessControlContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the acc this timer was constructed with.
"
      end

      class 1300610 "DoPostEvent"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4194050 // <realization>
	  relation 4194050 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4194050 // <realization>
	    b parent class_ref 128770 // Runnable
	end

	operation 10845314 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10845442 "getTimer"
	  package return_type class_ref 354690 // Timer
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10845570 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an action listener to the <code>Timer</code>.

@param listener the listener to add

@see #Timer
"
      end

      operation 10845698 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified action listener from the <code>Timer</code>.

@param listener the listener to remove
"
      end

      operation 10845826 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners registered
on this timer.

@return all of the timer's <code>ActionListener</code>s or an empty
        array if no action listeners are currently registered

@see #addActionListener
@see #removeActionListener

@since 1.4
"
      end

      operation 10845954 "fireActionPerformed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param e the action event to fire
@see EventListenerList
"
      end

      operation 10846082 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered as
<code><em>Foo</em>Listener</code>s
upon this <code>Timer</code>.
<code><em>Foo</em>Listener</code>s
are registered using the <code>add<em>Foo</em>Listener</code> method.
<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as <code><em>Foo</em>Listener.class</code>.
For example, you can query a <code>Timer</code>
instance <code>t</code>
for its action listeners
with the following code:

<pre>ActionListener[] als = (ActionListener[])(t.getListeners(ActionListener.class));</pre>

If no such listeners exist,
this method returns an empty array.

@param listenerType  the type of listeners requested;
         this parameter should specify an interface
         that descends from <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s
         on this timer,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code> doesn't
         specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getActionListeners
@see #addActionListener
@see #removeActionListener

@since 1.3
"
      end

      operation 10846210 "timerQueue"
	private return_type class_ref 1300354 // TimerQueue
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the timer queue.
"
      end

      operation 10846338 "setLogTimers"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables the timer log. When enabled, a message
is posted to <code>System.out</code> whenever the timer goes off.

@param flag  <code>true</code> to enable logging
@see #getLogTimers
"
      end

      operation 10846466 "getLogTimers"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if logging is enabled.

@return <code>true</code> if logging is enabled; otherwise, false
@see #setLogTimers
"
      end

      operation 10846594 "setDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "delay" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Timer</code>'s between-event delay, the number of milliseconds
between successive action events. This does not affect the initial delay
property, which can be set by the {@code setInitialDelay} method.

@param delay the delay in milliseconds
@see #setInitialDelay
"
      end

      operation 10846722 "getDelay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the delay, in milliseconds,
between firings of action events.

@see #setDelay
@see #getInitialDelay
"
      end

      operation 10846850 "setInitialDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "initialDelay" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Timer</code>'s initial delay, the time
in milliseconds to wait after the timer is started
before firing the first event. Upon construction, this
is set to be the same as the between-event delay,
but then its value is independent and remains unaffected
by changes to the between-event delay.

@param initialDelay the initial delay, in milliseconds
@see #setDelay
"
      end

      operation 10846978 "getInitialDelay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Timer</code>'s initial delay.

@see #setInitialDelay
@see #setDelay
"
      end

      operation 10847106 "setRepeats"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If <code>flag</code> is <code>false</code>,
instructs the <code>Timer</code> to send only one
action event to its listeners.

@param flag specify <code>false</code> to make the timer
            stop after sending its first action event
"
      end

      operation 10847234 "isRepeats"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> (the default)
if the <code>Timer</code> will send
an action event
to its listeners multiple times.

@see #setRepeats
"
      end

      operation 10847362 "setCoalesce"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the <code>Timer</code> coalesces multiple pending
<code>ActionEvent</code> firings.
A busy application may not be able
to keep up with a <code>Timer</code>'s event generation,
causing multiple
action events to be queued.  When processed,
the application sends these events one after the other, causing the
<code>Timer</code>'s listeners to receive a sequence of
events with no delay between them. Coalescing avoids this situation
by reducing multiple pending events to a single event.
<code>Timer</code>s
coalesce events by default.

@param flag specify <code>false</code> to turn off coalescing
"
      end

      operation 10847490 "isCoalesce"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>Timer</code> coalesces
multiple pending action events.

@see #setCoalesce
"
      end

      operation 10847618 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "command" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the string that will be delivered as the action command
in <code>ActionEvent</code>s fired by this timer.
<code>null</code> is an acceptable value.

@param command the action command
@since 1.6
"
      end

      operation 10847746 "getActionCommand"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string that will be delivered as the action command
in <code>ActionEvent</code>s fired by this timer. May be
<code>null</code>, which is also the default.

@return the action command used in firing events
@since 1.6
"
      end

      operation 10847874 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the <code>Timer</code>,
causing it to start sending action events
to its listeners.

@see #stop
"
      end

      operation 10848002 "isRunning"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>Timer</code> is running.

@see #start
"
      end

      operation 10848130 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the <code>Timer</code>,
causing it to stop sending action events
to its listeners.

@see #start
"
      end

      operation 10848258 "restart"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restarts the <code>Timer</code>,
canceling any pending firings and causing
it to fire with its initial delay.
"
      end

      operation 10848386 "cancelEvent"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the internal state to indicate this Timer shouldn't notify
any of its listeners. This does not stop a repeatable Timer from
firing again, use <code>stop</code> for that.
"
      end

      operation 10848514 "post"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10848642 "getLock"
	package return_type class_ref 864642 // Lock
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10848770 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10848898 "readResolve"
	private return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "We have to use readResolve because we can not initialize final
fields for deserialized object otherwise
"
      end
    end

    class 356610 "KeyStroke"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A KeyStroke represents a key action on the keyboard, or equivalent input
device. KeyStrokes can correspond to only a press or release of a particular
key, just as KEY_PRESSED and KEY_RELEASED KeyEvents do; alternately, they
can correspond to typing a specific Java character, just as KEY_TYPED
KeyEvents do. In all cases, KeyStrokes can specify modifiers (alt, shift,
control, meta, altGraph, or a combination thereof) which must be present during the
action for an exact match.
<p>
KeyStrokes are used to define high-level (semantic) action events. Instead
of trapping every keystroke and throwing away the ones you are not
interested in, those keystrokes you care about automatically initiate
actions on the Components with which they are registered.
<p>
KeyStrokes are immutable, and are intended to be unique. Client code cannot
create a KeyStroke; a variant of <code>getKeyStroke</code> must be used
instead. These factory methods allow the KeyStroke implementation to cache
and share instances efficiently.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.text.Keymap
@see #getKeyStroke

@author Arnaud Weber
@author David Mendenhall
"
      classrelation 4172930 // <generalisation>
	relation 4172930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4172930 // <generalisation>
	  b parent class_ref 341506 // AWTKeyStroke
      end

      attribute 2432642 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9060180771037902530L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serial Version ID.

"
      end

      operation 10779394 "KeyStroke"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10779522 "KeyStroke"
	private explicit_return_type ""
	nparams 4
	  param in name "keyChar" explicit_type "char"
	  param in name "keyCode" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	  param inout name "onKeyRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10779650 "getKeyStroke"
	class_operation public return_type class_ref 356610 // KeyStroke
	nparams 1
	  param in name "keyChar" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of a <code>KeyStroke</code>
that represents a <code>KEY_TYPED</code> event for the
specified character.

@param keyChar the character value for a keyboard key
@return a KeyStroke object for that key
"
      end

      operation 10779778 "getKeyStroke"
	class_operation public return_type class_ref 356610 // KeyStroke
	nparams 2
	  param in name "keyChar" explicit_type "char"
	  param inout name "onKeyRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns an instance of a KeyStroke, specifying whether the key is
considered to be activated when it is pressed or released. Unlike all
other factory methods in this class, the instances returned by this
method are not necessarily cached or shared.

@param keyChar the character value for a keyboard key
@param onKeyRelease <code>true</code> if this KeyStroke corresponds to a
       key release; <code>false</code> otherwise.
@return a KeyStroke object for that key
@deprecated use getKeyStroke(char)
"
      end

      operation 10779906 "getKeyStroke"
	class_operation public return_type class_ref 356610 // KeyStroke
	nparams 2
	  param inout name "keyChar" type class_ref 577026 // Character
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of a {@code KeyStroke}
that represents a {@code KEY_TYPED} event for the
specified Character object and a
set of modifiers. Note that the first parameter is of type Character
rather than char. This is to avoid inadvertent clashes with calls to
<code>getKeyStroke(int keyCode, int modifiers)</code>.

The modifiers consist of any combination of following:<ul>
<li>java.awt.event.InputEvent.SHIFT_DOWN_MASK
<li>java.awt.event.InputEvent.CTRL_DOWN_MASK
<li>java.awt.event.InputEvent.META_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK
</ul>
The old modifiers listed below also can be used, but they are
mapped to _DOWN_ modifiers. <ul>
<li>java.awt.event.InputEvent.SHIFT_MASK
<li>java.awt.event.InputEvent.CTRL_MASK
<li>java.awt.event.InputEvent.META_MASK
<li>java.awt.event.InputEvent.ALT_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_MASK
</ul>
also can be used, but they are mapped to _DOWN_ modifiers.

Since these numbers are all different powers of two, any combination of
them is an integer in which each bit represents a different modifier
key. Use 0 to specify no modifiers.

@param keyChar the Character object for a keyboard character
@param modifiers a bitwise-ored combination of any modifiers
@return an KeyStroke object for that key
@throws IllegalArgumentException if keyChar is null

@see java.awt.event.InputEvent
@since 1.3
"
      end

      operation 10780034 "getKeyStroke"
	class_operation public return_type class_ref 356610 // KeyStroke
	nparams 3
	  param in name "keyCode" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	  param inout name "onKeyRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of a KeyStroke, given a numeric key code and a
set of modifiers, specifying whether the key is activated when it is
pressed or released.
<p>
The \"virtual key\" constants defined in java.awt.event.KeyEvent can be
used to specify the key code. For example:<ul>
<li>java.awt.event.KeyEvent.VK_ENTER
<li>java.awt.event.KeyEvent.VK_TAB
<li>java.awt.event.KeyEvent.VK_SPACE
</ul>
Alternatively, the key code may be obtained by calling
<code>java.awt.event.KeyEvent.getExtendedKeyCodeForChar</code>.

The modifiers consist of any combination of:<ul>
<li>java.awt.event.InputEvent.SHIFT_DOWN_MASK
<li>java.awt.event.InputEvent.CTRL_DOWN_MASK
<li>java.awt.event.InputEvent.META_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK
</ul>
The old modifiers <ul>
<li>java.awt.event.InputEvent.SHIFT_MASK
<li>java.awt.event.InputEvent.CTRL_MASK
<li>java.awt.event.InputEvent.META_MASK
<li>java.awt.event.InputEvent.ALT_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_MASK
</ul>
also can be used, but they are mapped to _DOWN_ modifiers.

Since these numbers are all different powers of two, any combination of
them is an integer in which each bit represents a different modifier
key. Use 0 to specify no modifiers.

@param keyCode an int specifying the numeric code for a keyboard key
@param modifiers a bitwise-ored combination of any modifiers
@param onKeyRelease <code>true</code> if the KeyStroke should represent
       a key release; <code>false</code> otherwise.
@return a KeyStroke object for that key

@see java.awt.event.KeyEvent
@see java.awt.event.InputEvent
"
      end

      operation 10780162 "getKeyStroke"
	class_operation public return_type class_ref 356610 // KeyStroke
	nparams 2
	  param in name "keyCode" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of a KeyStroke, given a numeric key code and a
set of modifiers. The returned KeyStroke will correspond to a key press.
<p>
The \"virtual key\" constants defined in java.awt.event.KeyEvent can be
used to specify the key code. For example:<ul>
<li>java.awt.event.KeyEvent.VK_ENTER
<li>java.awt.event.KeyEvent.VK_TAB
<li>java.awt.event.KeyEvent.VK_SPACE
</ul>
Alternatively, the key code may be obtained by calling
<code>java.awt.event.KeyEvent.getExtendedKeyCodeForChar</code>.

The modifiers consist of any combination of:<ul>
<li>java.awt.event.InputEvent.SHIFT_DOWN_MASK
<li>java.awt.event.InputEvent.CTRL_DOWN_MASK
<li>java.awt.event.InputEvent.META_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK
</ul>
The old modifiers <ul>
<li>java.awt.event.InputEvent.SHIFT_MASK
<li>java.awt.event.InputEvent.CTRL_MASK
<li>java.awt.event.InputEvent.META_MASK
<li>java.awt.event.InputEvent.ALT_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_MASK
</ul>
also can be used, but they are mapped to _DOWN_ modifiers.

Since these numbers are all different powers of two, any combination of
them is an integer in which each bit represents a different modifier
key. Use 0 to specify no modifiers.

@param keyCode an int specifying the numeric code for a keyboard key
@param modifiers a bitwise-ored combination of any modifiers
@return a KeyStroke object for that key

@see java.awt.event.KeyEvent
@see java.awt.event.InputEvent
"
      end

      operation 10780290 "getKeyStrokeForEvent"
	class_operation public return_type class_ref 356610 // KeyStroke
	nparams 1
	  param inout name "anEvent" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a KeyStroke which represents the stroke which generated a given
KeyEvent.
<p>
This method obtains the keyChar from a KeyTyped event, and the keyCode
from a KeyPressed or KeyReleased event. The KeyEvent modifiers are
obtained for all three types of KeyEvent.

@param anEvent the KeyEvent from which to obtain the KeyStroke
@throws NullPointerException if <code>anEvent</code> is null
@return the KeyStroke that precipitated the event
"
      end

      operation 10780418 "getKeyStroke"
	class_operation public return_type class_ref 356610 // KeyStroke
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a string and returns a <code>KeyStroke</code>.
The string must have the following syntax:
<pre>
   &lt;modifiers&gt;* (&lt;typedID&gt; | &lt;pressedReleasedID&gt;)

   modifiers := shift | control | ctrl | meta | alt | altGraph
   typedID := typed &lt;typedKey&gt;
   typedKey := string of length 1 giving Unicode character.
   pressedReleasedID := (pressed | released) key
   key := KeyEvent key code name, i.e. the name following \"VK_\".
</pre>
If typed, pressed or released is not specified, pressed is assumed. Here
are some examples:
<pre>
    \"INSERT\" =&gt; getKeyStroke(KeyEvent.VK_INSERT, 0);
    \"control DELETE\" =&gt; getKeyStroke(KeyEvent.VK_DELETE, InputEvent.CTRL_MASK);
    \"alt shift X\" =&gt; getKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK);
    \"alt shift released X\" =&gt; getKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, true);
    \"typed a\" =&gt; getKeyStroke('a');
</pre>

In order to maintain backward-compatibility, specifying a null String,
or a String which is formatted incorrectly, returns null.

@param s a String formatted as described above
@return a KeyStroke object for that String, or null if the specified
        String is null, or is formatted incorrectly

@see java.awt.event.KeyEvent
"
      end
    end

    class 356866 "ArrayTable"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Private storage mechanism for Action key-value pairs.
In most cases this will be an array of alternating
key-value pairs.  As it grows larger it is scaled
up to a Hashtable.
<p>
This does no synchronization, if you need thread safety synchronize on
another object before calling this.

@author Georges Saab
@author Scott Violet
"
      classrelation 4060418 // <realization>
	relation 4060418 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4060418 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 4060546 // table (<unidirectional association>)
	relation 4060546 --->
	  a role_name "table" init_value " null" private
	    comment " Our field for storage
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4060546 // table (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2377986 "ARRAY_BOUNDARY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10412802 "writeArrayTable"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	  param inout name "table" type class_ref 356866 // ArrayTable
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the passed in ArrayTable to the passed in ObjectOutputStream.
The data is saved as an integer indicating how many key/value
pairs are being archived, followed by the the key/value pairs. If
<code>table</code> is null, 0 will be written to <code>s</code>.
<p>
This is a convenience method that ActionMap/InputMap and
AbstractAction use to avoid having the same code in each class.
"
      end

      operation 10412930 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put the key-value pair into storage
"
      end

      operation 10413058 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value for key
"
      end

      operation 10413186 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of pairs in storage
"
      end

      operation 10413314 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if we have a value for the key
"
      end

      operation 10413442 "remove"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the key and its value
Returns the value for the pair removed
"
      end

      operation 10413570 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the mappings.
"
      end

      operation 10413698 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of the <code>ArrayTable</code>.
"
      end

      operation 10413826 "getKeys"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "keys" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the keys of the table, or <code>null</code> if there
are currently no bindings.
@param keys  array of keys
@return an array of bindings
"
      end

      operation 10413954 "isArray"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current storage mechanism is
an array of alternating key-value pairs.
"
      end

      operation 10414082 "grow"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Grows the storage from an array to a hashtable.
"
      end

      operation 10414210 "shrink"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shrinks the storage from a hashtable to an array.
"
      end
    end

    class 357250 "InputVerifier"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The purpose of this class is to help clients support smooth focus
navigation through GUIs with text fields. Such GUIs often need
to ensure that the text entered by the user is valid (for example,
that it's in
the proper format) before allowing the user to navigate out of
the text field. To do this, clients create a subclass of
<code>InputVerifier</code> and, using <code>JComponent</code>'s
<code>setInputVerifier</code> method,
attach an instance of their subclass to the <code>JComponent</code> whose input they
want to validate. Before focus is transfered to another Swing component
that requests it, the input verifier's <code>shouldYieldFocus</code> method is
called.  Focus is transfered only if that method returns <code>true</code>.
<p>
The following example has two text fields, with the first one expecting
the string \"pass\" to be entered by the user. If that string is entered in
the first text field, then the user can advance to the second text field
either by clicking in it or by pressing TAB. However, if another string
is entered in the first text field, then the user will be unable to
transfer focus to the second text field.

<pre>
import java.awt.*;
import java.util.*;
import java.awt.event.*;
import javax.swing.*;

// This program demonstrates the use of the Swing InputVerifier class.
// It creates two text fields; the first of the text fields expects the
// string \"pass\" as input, and will allow focus to advance out of it
// only after that string is typed in by the user.

public class VerifierTest extends JFrame {
    public VerifierTest() {
        JTextField tf1 = new JTextField (\"Type \\\"pass\\\" here\");
        getContentPane().add (tf1, BorderLayout.NORTH);
        tf1.setInputVerifier(new PassVerifier());

        JTextField tf2 = new JTextField (\"TextField2\");
        getContentPane().add (tf2, BorderLayout.SOUTH);

        WindowListener l = new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        };
        addWindowListener(l);
    }

    class PassVerifier extends InputVerifier {
        public boolean verify(JComponent input) {
            JTextField tf = (JTextField) input;
            return \"pass\".equals(tf.getText());
        }
    }

    public static void main(String[] args) {
        Frame f = new VerifierTest();
        f.pack();
        f.setVisible(true);
    }
}
</pre>

 @since 1.3
"
      operation 10543234 "verify"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "input" type class_ref 338434 // JComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the JComponent's input is valid. This method should
have no side effects. It returns a boolean indicating the status
of the argument's input.

@param input the JComponent to verify
@return <code>true</code> when valid, <code>false</code> when invalid
@see JComponent#setInputVerifier
@see JComponent#getInputVerifier

"
      end

      operation 10543362 "shouldYieldFocus"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "input" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>verify(input)</code> to ensure that the input is valid.
This method can have side effects. In particular, this method
is called when the user attempts to advance focus out of the
argument component into another Swing component in this window.
If this method returns <code>true</code>, then the focus is transfered
normally; if it returns <code>false</code>, then the focus remains in
the argument component.

@param input the JComponent to verify
@return <code>true</code> when valid, <code>false</code> when invalid
@see JComponent#setInputVerifier
@see JComponent#getInputVerifier

"
      end
    end

    class 357378 "JPopupMenu"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a popup menu -- a small window that pops up
and displays a series of choices. A <code>JPopupMenu</code> is used for the
menu that appears when the user selects an item on the menu bar.
It is also used for \"pull-right\" menu that appears when the
selects a menu item that activates it. Finally, a <code>JPopupMenu</code>
can also be used anywhere else you want a menu to appear.  For
example, when the user right-clicks in a specified area.
<p>
For information and examples of using popup menus, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\">How to Use Menus</a>
in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A small window that pops up and displays a series of choices.

@author Georges Saab
@author David Karlton
@author Arnaud Weber
"
      classrelation 709378 // <generalisation>
	relation 709378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 709378 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 709506 // <realization>
	relation 709506 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 709506 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 709634 // <realization>
	relation 709634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 709634 // <realization>
	  b parent class_ref 386690 // MenuElement
      end

      classrelation 709762 // uiClassID (<unidirectional association>)
	relation 709762 --->
	  a role_name "uiClassID" init_value " \"PopupMenuUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 709762 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 709890 // defaultLWPopupEnabledKey (<unidirectional association>)
	relation 709890 --->
	  a role_name "defaultLWPopupEnabledKey" init_value "
        new StringBuffer(\"JPopupMenu.defaultLWPopupEnabledKey\")" class_relation const_relation private
	    comment "
Key used in AppContext to determine if light way popups are the default.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 709890 // defaultLWPopupEnabledKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 508034 "popupPostionFixDisabled"
	class_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bug#4425878-Property javax.swing.adjustPopupLocationToFit introduced 
"
      end

      extra_member 136706 "initialization"
	
	cpp "" ""
	java "  static {
        popupPostionFixDisabled = java.security.AccessController.doPrivileged(
                new sun.security.action.GetPropertyAction(
                \"javax.swing.adjustPopupLocationToFit\",\"\")).equals(\"false\");

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 710018 // invoker (<unidirectional association>)
	relation 710018 --->
	  a role_name "invoker" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 710018 // invoker (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 710146 // popup (<unidirectional association>)
	relation 710146 --->
	  a role_name "popup" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 710146 // popup (<unidirectional association>)
	  b parent class_ref 393218 // Popup
      end

      classrelation 710274 // frame (<unidirectional association>)
	relation 710274 --->
	  a role_name "frame" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 710274 // frame (<unidirectional association>)
	  b parent class_ref 393346 // Frame
      end

      attribute 508162 "desiredLocationX"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 508290 "desiredLocationY"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 710402 // label (<unidirectional association>)
	relation 710402 --->
	  a role_name "label" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 710402 // label (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 508418 "paintBorder"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 710530 // margin (<unidirectional association>)
	relation 710530 --->
	  a role_name "margin" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 710530 // margin (<unidirectional association>)
	  b parent class_ref 343938 // Insets
      end

      attribute 508546 "lightWeightPopup"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to indicate if lightweight popups should be used.

"
      end

      classrelation 710658 // selectionModel (<unidirectional association>)
	relation 710658 --->
	  a role_name "selectionModel" private
	    comment "
Model for the selected subcontrol.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 710658 // selectionModel (<unidirectional association>)
	  b parent class_ref 393474 // SingleSelectionModel
      end

      classrelation 710786 // classLock (<unidirectional association>)
	relation 710786 --->
	  a role_name "classLock" init_value " new Object()" class_relation const_relation private
	    comment " Lock object used in place of class object for synchronization.
(4187686)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 710786 // classLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 508674 "TRACE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " diagnostic aids -- should be false for production builds. 
 trace creates and disposes"
      end

      attribute 508802 "VERBOSE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show reuse hits/misses"
      end

      attribute 508930 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show bad params, misc."
      end

      operation 2241154 "setDefaultLightWeightPopupEnabled"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the default value of the <code>lightWeightPopupEnabled</code>
 property.

 @param aFlag <code>true</code> if popups can be lightweight,
              otherwise <code>false</code>
 @see #getDefaultLightWeightPopupEnabled
 @see #setLightWeightPopupEnabled
"
      end

      operation 2241282 "getDefaultLightWeightPopupEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the <code>defaultLightWeightPopupEnabled</code> property,
 which by default is <code>true</code>.

 @return the value of the <code>defaultLightWeightPopupEnabled</code>
         property

 @see #setDefaultLightWeightPopupEnabled
"
      end

      operation 2241410 "JPopupMenu"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JPopupMenu</code> without an \"invoker\".
"
      end

      operation 2241538 "JPopupMenu"
	public explicit_return_type ""
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JPopupMenu</code> with the specified title.

@param label  the string that a UI may use to display as a title
for the popup menu.
"
      end

      operation 2241666 "getUI"
	public return_type class_ref 393602 // PopupMenuUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the look and feel (L&amp;F) object that renders this component.

@return the <code>PopupMenuUI</code> object that renders this component
"
      end

      operation 2241794 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 393602 // PopupMenuUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui the new <code>PopupMenuUI</code> L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 2241922 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 2242050 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"PopupMenuUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 2242178 "processFocusEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2242306 "processKeyEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes key stroke events such as mnemonics and accelerators.

@param evt  the key event to be processed
"
      end

      operation 2242434 "getSelectionModel"
	public return_type class_ref 393474 // SingleSelectionModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model object that handles single selections.

@return the <code>selectionModel</code> property
@see SingleSelectionModel
"
      end

      operation 2242562 "setSelectionModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "model" type class_ref 393474 // SingleSelectionModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model object to handle single selections.

@param model the new <code>SingleSelectionModel</code>
@see SingleSelectionModel
@beaninfo
description: The selection model for the popup menu
     expert: true
"
      end

      operation 2242690 "add"
	public return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "menuItem" type class_ref 386050 // JMenuItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified menu item to the end of this menu.

@param menuItem the <code>JMenuItem</code> to add
@return the <code>JMenuItem</code> added
"
      end

      operation 2242818 "add"
	public return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new menu item with the specified text and appends
it to the end of this menu.

@param s the string for the menu item to be added
"
      end

      operation 2242946 "add"
	public return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a new menu item to the end of the menu which
dispatches the specified <code>Action</code> object.

@param a the <code>Action</code> to add to the menu
@return the new menu item
@see Action
"
      end

      operation 2243074 "adjustPopupLocationToFitScreen"
	package return_type class_ref 323714 // Point
	nparams 2
	  param in name "xPosition" explicit_type "int"
	  param in name "yPosition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an point which has been adjusted to take into account of the
desktop bounds, taskbar and multi-monitor configuration.
<p>
This adustment may be cancelled by invoking the application with
-Djavax.swing.adjustPopupLocationToFit=false
"
      end

      operation 2243202 "getCurrentGraphicsConfiguration"
	private return_type class_ref 340994 // GraphicsConfiguration
	nparams 1
	  param inout name "popupLocation" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to find GraphicsConfiguration
that contains the mouse cursor position.
Can return null.
"
      end

      operation 2243330 "canPopupOverlapTaskBar"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether popup is allowed to be shown above the task bar.
"
      end

      operation 2243458 "createActionComponent"
	protected return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method which creates the <code>JMenuItem</code> for
<code>Actions</code> added to the <code>JPopupMenu</code>.

@param a the <code>Action</code> for the menu item to be added
@return the new menu item
@see Action

@since 1.3
"
      end

      operation 2243586 "createActionChangeListener"
	protected return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "b" type class_ref 386050 // JMenuItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a properly configured <code>PropertyChangeListener</code>
which updates the control as changes to the <code>Action</code> occur.
"
      end

      operation 2243714 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the component at the specified index from this popup menu.

@param       pos the position of the item to be removed
@exception   IllegalArgumentException if the value of
                         <code>pos</code> &lt; 0, or if the value of
                         <code>pos</code> is greater than the
                         number of items
"
      end

      operation 2243842 "setLightWeightPopupEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>lightWeightPopupEnabled</code> property,
which by default is <code>true</code>.
By default, when a look and feel displays a popup,
it can choose to
use a lightweight (all-Java) popup.
Lightweight popup windows are more efficient than heavyweight
(native peer) windows,
but lightweight and heavyweight components do not mix well in a GUI.
If your application mixes lightweight and heavyweight components,
you should disable lightweight popups.
Some look and feels might always use heavyweight popups,
no matter what the value of this property.

@param aFlag  <code>false</code> to disable lightweight popups
@beaninfo
description: Determines whether lightweight popups are used when possible
     expert: true

@see #isLightWeightPopupEnabled
"
      end

      operation 2243970 "isLightWeightPopupEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>lightWeightPopupEnabled</code> property.

@return the value of the <code>lightWeightPopupEnabled</code> property
@see #setLightWeightPopupEnabled
"
      end

      operation 2244098 "getLabel"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the popup menu's label

@return a string containing the popup menu's label
@see #setLabel
"
      end

      operation 2244226 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the popup menu's label.  Different look and feels may choose
to display or not display this.

@param label a string specifying the label for the popup menu

@see #setLabel
@beaninfo
description: The label for the popup menu.
      bound: true
"
      end

      operation 2244354 "addSeparator"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a new separator at the end of the menu.
"
      end

      operation 2244482 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 352258 // Action
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a menu item for the specified <code>Action</code> object at
a given position.

@param a  the <code>Action</code> object to insert
@param index      specifies the position at which to insert the
                  <code>Action</code>, where 0 is the first
@exception IllegalArgumentException if <code>index</code> &lt; 0
@see Action
"
      end

      operation 2244610 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified component into the menu at a given
position.

@param component  the <code>Component</code> to insert
@param index      specifies the position at which
                  to insert the component, where 0 is the first
@exception IllegalArgumentException if <code>index</code> &lt; 0
"
      end

      operation 2244738 "addPopupMenuListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 391426 // PopupMenuListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds a <code>PopupMenu</code> listener.

 @param l  the <code>PopupMenuListener</code> to add
"
      end

      operation 2244866 "removePopupMenuListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 391426 // PopupMenuListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PopupMenu</code> listener.

@param l  the <code>PopupMenuListener</code> to remove
"
      end

      operation 2244994 "getPopupMenuListeners"
	public return_type class_ref 391426 // PopupMenuListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>PopupMenuListener</code>s added
to this JMenuItem with addPopupMenuListener().

@return all of the <code>PopupMenuListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2245122 "addMenuKeyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 386434 // MenuKeyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>MenuKeyListener</code> to the popup menu.

@param l the <code>MenuKeyListener</code> to be added
@since 1.5
"
      end

      operation 2245250 "removeMenuKeyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 386434 // MenuKeyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>MenuKeyListener</code> from the popup menu.

@param l the <code>MenuKeyListener</code> to be removed
@since 1.5
"
      end

      operation 2245378 "getMenuKeyListeners"
	public return_type class_ref 386434 // MenuKeyListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>MenuKeyListener</code>s added
to this JPopupMenu with addMenuKeyListener().

@return all of the <code>MenuKeyListener</code>s added or an empty
        array if no listeners have been added
@since 1.5
"
      end

      operation 2245506 "firePopupMenuWillBecomeVisible"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies <code>PopupMenuListener</code>s that this popup menu will
become visible.
"
      end

      operation 2245634 "firePopupMenuWillBecomeInvisible"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies <code>PopupMenuListener</code>s that this popup menu will
become invisible.
"
      end

      operation 2245762 "firePopupMenuCanceled"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies <code>PopupMenuListeners</code> that this popup menu is
cancelled.
"
      end

      operation 2245890 "alwaysOnTop"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns true since popups, by definition, should always
be on top of all other windows.
@return true

 package private"
      end

      operation 2246018 "pack"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the container so that it uses the minimum space
needed to display its contents.
"
      end

      operation 2246146 "setVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the visibility of the popup menu.

@param b true to make the popup visible, or false to
         hide it
@beaninfo
          bound: true
    description: Makes the popup visible
"
      end

      operation 2246274 "showPopup"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves <code>Popup</code> instance from the
<code>PopupMenuUI</code> that has had <code>show</code> invoked on
it. If the current <code>popup</code> is non-null,
this will invoke <code>dispose</code> of it, and then
<code>show</code> the new one.
<p>
This does NOT fire any events, it is up the caller to dispatch
the necessary events.
"
      end

      operation 2246402 "isVisible"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the popup menu is visible (currently
being displayed).
"
      end

      operation 2246530 "setLocation"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of the upper left corner of the
popup menu using x, y coordinates.
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code JPopupMenu} object is placed and sized
in a way that corresponds closely to the desktop settings.

@param x the x coordinate of the popup's new position
         in the screen's coordinate space
@param y the y coordinate of the popup's new position
         in the screen's coordinate space
@beaninfo
description: The location of the popup menu.
"
      end

      operation 2246658 "isPopupMenu"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the popup menu is a standalone popup menu
rather than the submenu of a <code>JMenu</code>.

@return true if this menu is a standalone popup menu, otherwise false
"
      end

      operation 2246786 "getInvoker"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component which is the 'invoker' of this
popup menu.

@return the <code>Component</code> in which the popup menu is displayed
"
      end

      operation 2246914 "setInvoker"
	public explicit_return_type "void"
	nparams 1
	  param inout name "invoker" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the invoker of this popup menu -- the component in which
the popup menu menu is to be displayed.

@param invoker the <code>Component</code> in which the popup
         menu is displayed
@beaninfo
description: The invoking component for the popup menu
     expert: true
"
      end

      operation 2247042 "show"
	public explicit_return_type "void"
	nparams 3
	  param inout name "invoker" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Displays the popup menu at the position x,y in the coordinate
space of the component invoker.

@param invoker the component in whose space the popup menu is to appear
@param x the x coordinate in invoker's coordinate space at which
the popup menu is to be displayed
@param y the y coordinate in invoker's coordinate space at which
the popup menu is to be displayed
"
      end

      operation 2247170 "getRootPopupMenu"
	package return_type class_ref 357378 // JPopupMenu
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the popup menu which is at the root of the menu system
for this popup menu.

@return the topmost grandparent <code>JPopupMenu</code>
"
      end

      operation 2247298 "getComponentAtIndex"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the component at the specified index.

@param i  the index of the component, where 0 is the first
@return the <code>Component</code> at that index
@deprecated replaced by {@link java.awt.Container#getComponent(int)}
"
      end

      operation 2247426 "getComponentIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the specified component.

@param  c the <code>Component</code> to find
@return the index of the component, where 0 is the first;
        or -1 if the component is not found
"
      end

      operation 2247554 "setPopupSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the Popup window using a <code>Dimension</code> object.
This is equivalent to <code>setPreferredSize(d)</code>.

@param d   the <code>Dimension</code> specifying the new size
of this component.
@beaninfo
description: The size of the popup menu
"
      end

      operation 2247682 "setPopupSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the Popup window to the specified width and
height. This is equivalent to
 <code>setPreferredSize(new Dimension(width, height))</code>.

@param width the new width of the Popup in pixels
@param height the new height of the Popup in pixels
@beaninfo
description: The size of the popup menu
"
      end

      operation 2247810 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sel" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the currently selected component,  This will result
in a change to the selection model.

@param sel the <code>Component</code> to select
@beaninfo
description: The selected component on the popup menu
     expert: true
     hidden: true
"
      end

      operation 2247938 "isBorderPainted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the border should be painted.

@return true if the border is painted, false otherwise
@see #setBorderPainted
"
      end

      operation 2248066 "setBorderPainted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the border should be painted.

@param b if true, the border is painted.
@see #isBorderPainted
@beaninfo
description: Is the border of the popup menu painted
"
      end

      operation 2248194 "paintBorder"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the popup menu's border if the <code>borderPainted</code>
property is <code>true</code>.
@param g  the <code>Graphics</code> object

@see JComponent#paint
@see JComponent#setBorder
"
      end

      operation 2248322 "getMargin"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the margin, in pixels, between the popup menu's border and
its containers.

@return an <code>Insets</code> object containing the margin values.
"
      end

      operation 2248450 "isSubPopupMenu"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "popup" type class_ref 357378 // JPopupMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Examines the list of menu items to determine whether
<code>popup</code> is a popup menu.

@param popup  a <code>JPopupMenu</code>
@return true if <code>popup</code>
"
      end

      operation 2248578 "getFrame"
	class_operation private return_type class_ref 393346 // Frame
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2248706 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JPopupMenu</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JPopupMenu</code>.
"
      end

      operation 2248834 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JPopupMenu.
For JPopupMenus, the AccessibleContext takes the form of an
AccessibleJPopupMenu.
A new AccessibleJPopupMenu instance is created if necessary.

@return an AccessibleJPopupMenu that serves as the
        AccessibleContext of this JPopupMenu
"
      end

      class 393730 "AccessibleJPopupMenu"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 710914 // <generalisation>
	  relation 710914 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 710914 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 711042 // <realization>
	  relation 711042 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 711042 // <realization>
	    b parent class_ref 347266 // PropertyChangeListener
	end

	operation 2248962 "AccessibleJPopupMenu"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "AccessibleJPopupMenu constructor

@since 1.5
"
	end

	operation 2249090 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of
the object
"
	end

	operation 2249218 "propertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method gets called when a bound property is changed.
@param e A <code>PropertyChangeEvent</code> object describing
the event source and the property that has changed. Must not be null.

@throws NullPointerException if the parameter is null.
@since 1.5
"
	end

	operation 2249346 "handlePopupIsVisibleEvent"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "visible" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Handles popup \"visible\" PropertyChangeEvent
"
	end

	operation 2249474 "fireActiveDescendant"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Fires AccessibleActiveDescendant PropertyChangeEvent to notify listeners
on the popup menu invoker that a popup list item has been selected
"
	end
      end

      operation 2249602 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " inner class AccessibleJPopupMenu
//////////
 Serialization support.
//////////"
      end

      operation 2249730 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.MenuElement"
      end

      operation 2249858 "processMouseEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "event" type class_ref 346626 // MouseEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is required to conform to the
<code>MenuElement</code> interface, but it not implemented.
@see MenuElement#processMouseEvent(MouseEvent, MenuElement[], MenuSelectionManager)
"
      end

      operation 2249986 "processKeyEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a key event forwarded from the
<code>MenuSelectionManager</code> and changes the menu selection,
if necessary, by using <code>MenuSelectionManager</code>'s API.
<p>
Note: you do not have to forward the event to sub-components.
This is done automatically by the <code>MenuSelectionManager</code>.

@param e  a <code>KeyEvent</code>
@param path the <code>MenuElement</code> path array
@param manager   the <code>MenuSelectionManager</code>
"
      end

      operation 2250114 "processMenuKeyEvent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a keystroke in a menu.

@param e  a <code>MenuKeyEvent</code> object
@since 1.5
"
      end

      operation 2250242 "fireMenuKeyPressed"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuKeyEvent</code>
@see EventListenerList
"
      end

      operation 2250370 "fireMenuKeyReleased"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuKeyEvent</code>
@see EventListenerList
"
      end

      operation 2250498 "fireMenuKeyTyped"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuKeyEvent</code>
@see EventListenerList
"
      end

      operation 2250626 "menuSelectionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isIncluded" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Messaged when the menubar selection changes to activate or
deactivate this menu. This implements the
<code>javax.swing.MenuElement</code> interface.
Overrides <code>MenuElement.menuSelectionChanged</code>.

@param isIncluded  true if this menu is active, false if
       it is not
@see MenuElement#menuSelectionChanged(boolean)
"
      end

      operation 2250754 "getSubElements"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>MenuElement</code>s containing the submenu
for this menu component.  It will only return items conforming to
the <code>JMenuElement</code> interface.
If popup menu is <code>null</code> returns
an empty array.  This method is required to conform to the
<code>MenuElement</code> interface.

@return an array of <code>MenuElement</code> objects
@see MenuElement#getSubElements
"
      end

      operation 2250882 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this <code>JPopupMenu</code> component.
@return this <code>JPopupMenu</code> object
@see MenuElement#getComponent
"
      end

      class 393986 "Separator"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 711810 // <generalisation>
	  relation 711810 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 711810 // <generalisation>
	    b parent class_ref 394114 // JSeparator
	end

	operation 2252674 "Separator"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2252802 "getUIClassID"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"PopupMenuSeparatorUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
	end
      end

      operation 2252930 "isPopupTrigger"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the <code>MouseEvent</code> is considered a popup trigger
by the <code>JPopupMenu</code>'s currently installed UI.

@return true if the mouse event is a popup trigger
@since 1.3
"
      end
    end

    class 357634 "InputMap"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>InputMap</code> provides a binding between an input event
(currently only <code>KeyStroke</code>s are used)
and an <code>Object</code>. <code>InputMap</code>s
are usually used with an <code>ActionMap</code>,
to determine an <code>Action</code> to perform
when a key is pressed.
An <code>InputMap</code> can have a parent
that is searched for bindings not defined in the <code>InputMap</code>.
<p>As with <code>ActionMap</code> if you create a cycle, eg:
<pre>
  InputMap am = new InputMap();
  InputMap bm = new InputMap():
  am.setParent(bm);
  bm.setParent(am);
</pre>
some of the methods will cause a StackOverflowError to be thrown.

@author Scott Violet
@since 1.3
"
      classrelation 931842 // <realization>
	relation 931842 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 931842 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 931970 // arrayTable (<unidirectional association>)
	relation 931970 --->
	  a role_name "arrayTable" private
	    comment " Handles the mapping between KeyStroke and Action name. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 931970 // arrayTable (<unidirectional association>)
	  b parent class_ref 356866 // ArrayTable
      end

      classrelation 932098 // parent (<unidirectional association>)
	relation 932098 --->
	  a role_name "parent" private
	    comment " Parent that handles any bindings we don't contain. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932098 // parent (<unidirectional association>)
	  b parent class_ref 357634 // InputMap
      end

      operation 2839170 "InputMap"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>InputMap</code> with no parent and no mappings.
"
      end

      operation 2839298 "setParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 357634 // InputMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this <code>InputMap</code>'s parent.

@param map  the <code>InputMap</code> that is the parent of this one
"
      end

      operation 2839426 "getParent"
	public return_type class_ref 357634 // InputMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets this <code>InputMap</code>'s parent.

@return map  the <code>InputMap</code> that is the parent of this one,
             or null if this <code>InputMap</code> has no parent
"
      end

      operation 2839554 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "keyStroke" type class_ref 356610 // KeyStroke
	  param inout name "actionMapKey" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a binding for <code>keyStroke</code> to <code>actionMapKey</code>.
If <code>actionMapKey</code> is null, this removes the current binding
for <code>keyStroke</code>.
"
      end

      operation 2839682 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "keyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the binding for <code>keyStroke</code>, messaging the
parent <code>InputMap</code> if the binding is not locally defined.
"
      end

      operation 2839810 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the binding for <code>key</code> from this
<code>InputMap</code>.
"
      end

      operation 2839938 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the mappings from this <code>InputMap</code>.
"
      end

      operation 2840066 "keys"
	public return_type class_ref 356610 // KeyStroke
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>KeyStroke</code>s that are bound in this <code>InputMap</code>.
"
      end

      operation 2840194 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of <code>KeyStroke</code> bindings.
"
      end

      operation 2840322 "allKeys"
	public return_type class_ref 356610 // KeyStroke
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of the <code>KeyStroke</code>s defined in this
<code>InputMap</code> and its parent. This differs from <code>keys()</code> in that
this method includes the keys defined in the parent.
"
      end

      operation 2840450 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2840578 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 357762 "ComponentInputMap"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>ComponentInputMap</code> is an <code>InputMap</code>
associated with a particular <code>JComponent</code>.
The component is automatically notified whenever
the <code>ComponentInputMap</code> changes.
<code>ComponentInputMap</code>s are used for
<code>WHEN_IN_FOCUSED_WINDOW</code> bindings.

@author Scott Violet
@since 1.3
"
      classrelation 932226 // <generalisation>
	relation 932226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 932226 // <generalisation>
	  b parent class_ref 357634 // InputMap
      end

      classrelation 932354 // component (<unidirectional association>)
	relation 932354 --->
	  a role_name "component" private
	    comment " Component binding is created for. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932354 // component (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      operation 2840706 "ComponentInputMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>ComponentInputMap</code> associated with the
specified component.

@param component  a non-null <code>JComponent</code>
@throws IllegalArgumentException  if <code>component</code> is null
"
      end

      operation 2840834 "setParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 357634 // InputMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parent, which must be a <code>ComponentInputMap</code>
associated with the same component as this
<code>ComponentInputMap</code>.

@param map  a <code>ComponentInputMap</code>

@throws IllegalArgumentException  if <code>map</code>
        is not a <code>ComponentInputMap</code>
        or is not associated with the same component
"
      end

      operation 2840962 "getComponent"
	public return_type class_ref 338434 // JComponent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component the <code>InputMap</code> was created for.
"
      end

      operation 2841090 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "keyStroke" type class_ref 356610 // KeyStroke
	  param inout name "actionMapKey" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a binding for <code>keyStroke</code> to <code>actionMapKey</code>.
If <code>actionMapKey</code> is null, this removes the current binding
for <code>keyStroke</code>.
"
      end

      operation 2841218 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the binding for <code>key</code> from this object.
"
      end

      operation 2841346 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the mappings from this object.
"
      end
    end

    class 357890 "ActionMap"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>ActionMap</code> provides mappings from
<code>Object</code>s
(called <em>keys</em> or <em><code>Action</code> names</em>)
to <code>Action</code>s.
An <code>ActionMap</code> is usually used with an <code>InputMap</code>
to locate a particular action
when a key is pressed. As with <code>InputMap</code>,
an <code>ActionMap</code> can have a parent
that is searched for keys not defined in the <code>ActionMap</code>.
<p>As with <code>InputMap</code> if you create a cycle, eg:
<pre>
  ActionMap am = new ActionMap();
  ActionMap bm = new ActionMap():
  am.setParent(bm);
  bm.setParent(am);
</pre>
some of the methods will cause a StackOverflowError to be thrown.

@see InputMap

@author Scott Violet
@since 1.3
"
      classrelation 4059266 // <realization>
	relation 4059266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4059266 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4059394 // arrayTable (<unidirectional association>)
	relation 4059394 --->
	  a role_name "arrayTable" private
	    comment " Handles the mapping between Action name and Action. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4059394 // arrayTable (<unidirectional association>)
	  b parent class_ref 356866 // ArrayTable
      end

      classrelation 4059522 // parent (<unidirectional association>)
	relation 4059522 --->
	  a role_name "parent" private
	    comment " Parent that handles any bindings we don't contain. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4059522 // parent (<unidirectional association>)
	  b parent class_ref 357890 // ActionMap
      end

      operation 10409346 "ActionMap"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>ActionMap</code> with no parent and no mappings.
"
      end

      operation 10409474 "setParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 357890 // ActionMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this <code>ActionMap</code>'s parent.

@param map  the <code>ActionMap</code> that is the parent of this one
"
      end

      operation 10409602 "getParent"
	public return_type class_ref 357890 // ActionMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this <code>ActionMap</code>'s parent.

@return the <code>ActionMap</code> that is the parent of this one,
        or null if this <code>ActionMap</code> has no parent
"
      end

      operation 10409730 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "action" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a binding for <code>key</code> to <code>action</code>.
If <code>action</code> is null, this removes the current binding
for <code>key</code>.
<p>In most instances, <code>key</code> will be
<code>action.getValue(NAME)</code>.
"
      end

      operation 10409858 "get"
	public return_type class_ref 352258 // Action
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the binding for <code>key</code>, messaging the
parent <code>ActionMap</code> if the binding is not locally defined.
"
      end

      operation 10409986 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the binding for <code>key</code> from this <code>ActionMap</code>.
"
      end

      operation 10410114 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the mappings from this <code>ActionMap</code>.
"
      end

      operation 10410242 "keys"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Action</code> names that are bound in this <code>ActionMap</code>.
"
      end

      operation 10410370 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bindings in this {@code ActionMap}.

@return the number of bindings in this {@code ActionMap}
"
      end

      operation 10410498 "allKeys"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of the keys defined in this <code>ActionMap</code> and
its parent. This method differs from <code>keys()</code> in that
this method includes the keys defined in the parent.
"
      end

      operation 10410626 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10410754 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 358018 "JToolTip"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to display a \"Tip\" for a Component. Typically components provide api
to automate the process of using <code>ToolTip</code>s.
For example, any Swing component can use the <code>JComponent</code>
<code>setToolTipText</code> method to specify the text
for a standard tooltip. A component that wants to create a custom
<code>ToolTip</code>
display can override <code>JComponent</code>'s <code>createToolTip</code>
method and use a subclass of this class.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/tooltip.html\">How to Use Tool Tips</a>
in <em>The Java Tutorial</em>
for further documentation.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JComponent#setToolTipText
@see JComponent#createToolTip
@author Dave Moore
@author Rich Shiavi
"
      classrelation 4169474 // <generalisation>
	relation 4169474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4169474 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4169602 // <realization>
	relation 4169602 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4169602 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4169730 // uiClassID (<unidirectional association>)
	relation 4169730 --->
	  a role_name "uiClassID" init_value " \"ToolTipUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4169730 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4169858 // tipText (<unidirectional association>)
	relation 4169858 --->
	  a role_name "tipText" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4169858 // tipText (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4169986 // component (<unidirectional association>)
	relation 4169986 --->
	  a role_name "component" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4169986 // component (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      operation 10775938 "JToolTip"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a tool tip. "
      end

      operation 10776066 "getUI"
	public return_type class_ref 1294210 // ToolTipUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return the <code>ToolTipUI</code> object that renders this component
"
      end

      operation 10776194 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10776322 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"ToolTipUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10776450 "setTipText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tipText" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text to show when the tool tip is displayed.
The string <code>tipText</code> may be <code>null</code>.

@param tipText the <code>String</code> to display
@beaninfo
   preferred: true
       bound: true
 description: Sets the text of the tooltip
"
      end

      operation 10776578 "getTipText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text that is shown when the tool tip is displayed.
The returned value may be <code>null</code>.

@return the <code>String</code> that is displayed
"
      end

      operation 10776706 "setComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the component that the tooltip describes.
The component <code>c</code> may be <code>null</code>
and will have no effect.
<p>
This is a bound property.

@param c the <code>JComponent</code> being described
@see JComponent#createToolTip
@beaninfo
      bound: true
description: Sets the component that the tooltip describes.
"
      end

      operation 10776834 "getComponent"
	public return_type class_ref 338434 // JComponent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component the tooltip applies to.
The returned value may be <code>null</code>.

@return the component that the tooltip describes

@see JComponent#createToolTip
"
      end

      operation 10776962 "alwaysOnTop"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns true since tooltips, by definition,
should always be on top of all other windows.

 package private"
      end

      operation 10777090 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code>
in <code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10777218 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JToolTip</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JToolTip</code>
"
      end

      operation 10777346 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JToolTip.
For tool tips, the AccessibleContext takes the form of an
AccessibleJToolTip.
A new AccessibleJToolTip instance is created if necessary.

@return an AccessibleJToolTip that serves as the
        AccessibleContext of this JToolTip
"
      end

      class 1294338 "AccessibleJToolTip"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4170114 // <generalisation>
	  relation 4170114 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4170114 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10777474 "getAccessibleDescription"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible description of this object.

@return a localized String describing this object.
"
	end

	operation 10777602 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 359170 "JColorChooser"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JColorChooser</code> provides a pane of controls designed to allow
a user to manipulate and select a color.
For information about using color choosers, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html\">How to Use Color Choosers</a>,
a section in <em>The Java Tutorial</em>.

<p>

This class provides three levels of API:
<ol>
<li>A static convenience method which shows a modal color-chooser
dialog and returns the color selected by the user.
<li>A static convenience method for creating a color-chooser dialog
where <code>ActionListeners</code> can be specified to be invoked when
the user presses one of the dialog buttons.
<li>The ability to create instances of <code>JColorChooser</code> panes
directly (within any container). <code>PropertyChange</code> listeners
can be added to detect when the current \"color\" property changes.
</ol>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.


@beaninfo
     attribute: isContainer false
   description: A component that supports selecting a Color.


@author James Gosling
@author Amy Fowler
@author Steve Wilson
"
      classrelation 4093314 // <generalisation>
	relation 4093314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4093314 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4093442 // <realization>
	relation 4093442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4093442 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4093570 // uiClassID (<unidirectional association>)
	relation 4093570 --->
	  a role_name "uiClassID" init_value " \"ColorChooserUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4093570 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4093698 // selectionModel (<unidirectional association>)
	relation 4093698 --->
	  a role_name "selectionModel" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4093698 // selectionModel (<unidirectional association>)
	  b parent class_ref 359298 // ColorSelectionModel
      end

      classrelation 4093826 // previewPanel (<unidirectional association>)
	relation 4093826 --->
	  a role_name "previewPanel" init_value " ColorChooserComponentFactory.getPreviewPanel()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4093826 // previewPanel (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4093954 // chooserPanels (<unidirectional association>)
	relation 4093954 --->
	  a role_name "chooserPanels" multiplicity "[]" init_value " new AbstractColorChooserPanel[0]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4093954 // chooserPanels (<unidirectional association>)
	  b parent class_ref 339714 // AbstractColorChooserPanel
      end

      attribute 2401410 "dragEnabled"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4094082 // SELECTION_MODEL_PROPERTY (<unidirectional association>)
	relation 4094082 --->
	  a role_name "SELECTION_MODEL_PROPERTY" init_value " \"selectionModel\"" class_relation const_relation public
	    comment "
The selection model property name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4094082 // SELECTION_MODEL_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4094210 // PREVIEW_PANEL_PROPERTY (<unidirectional association>)
	relation 4094210 --->
	  a role_name "PREVIEW_PANEL_PROPERTY" init_value " \"previewPanel\"" class_relation const_relation public
	    comment "
The preview panel property name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4094210 // PREVIEW_PANEL_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4094338 // CHOOSER_PANELS_PROPERTY (<unidirectional association>)
	relation 4094338 --->
	  a role_name "CHOOSER_PANELS_PROPERTY" init_value " \"chooserPanels\"" class_relation const_relation public
	    comment "
The chooserPanel array property name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4094338 // CHOOSER_PANELS_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10560514 "showDialog"
	class_operation public return_type class_ref 323458 // Color
	nparams 3
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "title" type class_ref 128130 // String
	  param inout name "initialColor" type class_ref 323458 // Color
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows a modal color-chooser dialog and blocks until the
dialog is hidden.  If the user presses the \"OK\" button, then
this method hides/disposes the dialog and returns the selected color.
If the user presses the \"Cancel\" button or closes the dialog without
pressing \"OK\", then this method hides/disposes the dialog and returns
<code>null</code>.

@param component    the parent <code>Component</code> for the dialog
@param title        the String containing the dialog's title
@param initialColor the initial Color set when the color-chooser is shown
@return the selected color or <code>null</code> if the user opted out
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10560642 "createDialog"
	class_operation public return_type class_ref 1275650 // JDialog
	nparams 6
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	  param inout name "chooserPane" type class_ref 359170 // JColorChooser
	  param inout name "okListener" type class_ref 354306 // ActionListener
	  param inout name "cancelListener" type class_ref 354306 // ActionListener
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a new dialog containing the specified
<code>ColorChooser</code> pane along with \"OK\", \"Cancel\", and \"Reset\"
buttons. If the \"OK\" or \"Cancel\" buttons are pressed, the dialog is
automatically hidden (but not disposed).  If the \"Reset\"
button is pressed, the color-chooser's color will be reset to the
color which was set the last time <code>show</code> was invoked on the
dialog and the dialog will remain showing.

@param c              the parent component for the dialog
@param title          the title for the dialog
@param modal          a boolean. When true, the remainder of the program
                      is inactive until the dialog is closed.
@param chooserPane    the color-chooser to be placed inside the dialog
@param okListener     the ActionListener invoked when \"OK\" is pressed
@param cancelListener the ActionListener invoked when \"Cancel\" is pressed
@return a new dialog containing the color-chooser pane
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10560770 "JColorChooser"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a color chooser pane with an initial color of white.
"
      end

      operation 10560898 "JColorChooser"
	public explicit_return_type ""
	nparams 1
	  param inout name "initialColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a color chooser pane with the specified initial color.

@param initialColor the initial color set in the chooser
"
      end

      operation 10561026 "JColorChooser"
	public explicit_return_type ""
	nparams 1
	  param inout name "model" type class_ref 359298 // ColorSelectionModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a color chooser pane with the specified
<code>ColorSelectionModel</code>.

@param model the <code>ColorSelectionModel</code> to be used
"
      end

      operation 10561154 "getUI"
	public return_type class_ref 1275778 // ColorChooserUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return the <code>ColorChooserUI</code> object that renders
         this component
"
      end

      operation 10561282 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 1275778 // ColorChooserUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the <code>ColorChooserUI</code> L&amp;F object
@see UIDefaults#getUI

@beaninfo
      bound: true
     hidden: true
description: The UI object that implements the color chooser's LookAndFeel.
"
      end

      operation 10561410 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIManager</code> that the L&amp;F has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
      end

      operation 10561538 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"ColorChooserUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10561666 "getColor"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current color value from the color chooser.
By default, this delegates to the model.

@return the current color value of the color chooser
"
      end

      operation 10561794 "setColor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "color" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current color of the color chooser to the specified color.
The <code>ColorSelectionModel</code> will fire a <code>ChangeEvent</code>
@param color the color to be set in the color chooser
@see JComponent#addPropertyChangeListener

@beaninfo
      bound: false
     hidden: false
description: The current color the chooser is to display.
"
      end

      operation 10561922 "setColor"
	public explicit_return_type "void"
	nparams 3
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current color of the color chooser to the
specified RGB color.  Note that the values of red, green,
and blue should be between the numbers 0 and 255, inclusive.

@param r   an int specifying the amount of Red
@param g   an int specifying the amount of Green
@param b   an int specifying the amount of Blue
@exception IllegalArgumentException if r,g,b values are out of range
@see java.awt.Color
"
      end

      operation 10562050 "setColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current color of the color chooser to the
specified color.

@param c an integer value that sets the current color in the chooser
         where the low-order 8 bits specify the Blue value,
         the next 8 bits specify the Green value, and the 8 bits
         above that specify the Red value.
"
      end

      operation 10562178 "setDragEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>dragEnabled</code> property,
which must be <code>true</code> to enable
automatic drag handling (the first part of drag and drop)
on this component.
The <code>transferHandler</code> property needs to be set
to a non-<code>null</code> value for the drag to do
anything.  The default value of the <code>dragEnabled</code>
property
is <code>false</code>.

<p>

When automatic drag handling is enabled,
most look and feels begin a drag-and-drop operation
when the user presses the mouse button over the preview panel.
Some look and feels might not support automatic drag and drop;
they will ignore this property.  You can work around such
look and feels by modifying the component
to directly call the <code>exportAsDrag</code> method of a
<code>TransferHandler</code>.

@param b the value to set the <code>dragEnabled</code> property to
@exception HeadlessException if
           <code>b</code> is <code>true</code> and
           <code>GraphicsEnvironment.isHeadless()</code>
           returns <code>true</code>

@since 1.4

@see java.awt.GraphicsEnvironment#isHeadless
@see #getDragEnabled
@see #setTransferHandler
@see TransferHandler

@beaninfo
 description: Determines whether automatic drag handling is enabled.
       bound: false
"
      end

      operation 10562306 "getDragEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <code>dragEnabled</code> property.

@return  the value of the <code>dragEnabled</code> property
@see #setDragEnabled
@since 1.4
"
      end

      operation 10562434 "setPreviewPanel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preview" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current preview panel.
This will fire a <code>PropertyChangeEvent</code> for the property
named \"previewPanel\".

@param preview the <code>JComponent</code> which displays the current color
@see JComponent#addPropertyChangeListener

@beaninfo
      bound: true
     hidden: true
description: The UI component which displays the current color.
"
      end

      operation 10562562 "getPreviewPanel"
	public return_type class_ref 338434 // JComponent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preview panel that shows a chosen color.

@return a <code>JComponent</code> object -- the preview panel
"
      end

      operation 10562690 "addChooserPanel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "panel" type class_ref 339714 // AbstractColorChooserPanel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a color chooser panel to the color chooser.

@param panel the <code>AbstractColorChooserPanel</code> to be added
"
      end

      operation 10562818 "removeChooserPanel"
	public return_type class_ref 339714 // AbstractColorChooserPanel
	nparams 1
	  param inout name "panel" type class_ref 339714 // AbstractColorChooserPanel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the Color Panel specified.

@param panel   a string that specifies the panel to be removed
@return the color panel
@exception IllegalArgumentException if panel is not in list of
                 known chooser panels
"
      end

      operation 10562946 "setChooserPanels"
	public explicit_return_type "void"
	nparams 1
	  param inout name "panels" type class_ref 339714 // AbstractColorChooserPanel
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the Color Panels used to choose a color value.

@param panels  an array of <code>AbstractColorChooserPanel</code>
         objects

@beaninfo
      bound: true
     hidden: true
description: An array of different chooser types.
"
      end

      operation 10563074 "getChooserPanels"
	public return_type class_ref 339714 // AbstractColorChooserPanel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified color panels.

@return an array of <code>AbstractColorChooserPanel</code> objects
"
      end

      operation 10563202 "getSelectionModel"
	public return_type class_ref 359298 // ColorSelectionModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the data model that handles color selections.

@return a <code>ColorSelectionModel</code> object
"
      end

      operation 10563330 "setSelectionModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 359298 // ColorSelectionModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model containing the selected color.

@param newModel   the new <code>ColorSelectionModel</code> object

@beaninfo
      bound: true
     hidden: true
description: The model which contains the currently selected color.
"
      end

      operation 10563458 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10563586 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JColorChooser</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JColorChooser</code>
"
      end

      classrelation 4094466 // accessibleContext (<unidirectional association>)
	relation 4094466 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4094466 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 10563714 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this JColorChooser.
For color choosers, the AccessibleContext takes the form of an
AccessibleJColorChooser.
A new AccessibleJColorChooser instance is created if necessary.

@return an AccessibleJColorChooser that serves as the
        AccessibleContext of this JColorChooser
"
      end

      class 1275906 "AccessibleJColorChooser"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4094594 // <generalisation>
	  relation 4094594 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4094594 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10563842 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 359810 "JLabel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A display area for a short text string or an image,
or both.
A label does not react to input events.
As a result, it cannot get the keyboard focus.
A label can, however, display a keyboard alternative
as a convenience for a nearby component
that has a keyboard alternative but can't display it.
<p>
A <code>JLabel</code> object can display
either text, an image, or both.
You can specify where in the label's display area
the label's contents are aligned
by setting the vertical and horizontal alignment.
By default, labels are vertically centered
in their display area.
Text-only labels are leading edge aligned, by default;
image-only labels are horizontally centered, by default.
<p>
You can also specify the position of the text
relative to the image.
By default, text is on the trailing edge of the image,
with the text and image vertically aligned.
<p>
A label's leading and trailing edge are determined from the value of its
{@link java.awt.ComponentOrientation} property.  At present, the default
ComponentOrientation setting maps the leading edge to left and the trailing
edge to right.

<p>
Finally, you can use the <code>setIconTextGap</code> method
to specify how many pixels
should appear between the text and the image.
The default is 4 pixels.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/label.html\">How to Use Labels</a>
in <em>The Java Tutorial</em>
for further documentation.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A component that displays a short string and an icon.

@author Hans Muller
"
      classrelation 627586 // <generalisation>
	relation 627586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 627586 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 627714 // <realization>
	relation 627714 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 627714 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      classrelation 627842 // <realization>
	relation 627842 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 627842 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 627970 // uiClassID (<unidirectional association>)
	relation 627970 --->
	  a role_name "uiClassID" init_value " \"LabelUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627970 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 467714 "mnemonic"
	private explicit_type "int"
	init_value " '\\0'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 467842 "mnemonicIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 628098 // text (<unidirectional association>)
	relation 628098 --->
	  a role_name "text" init_value " \"\"" private
	    comment " \"\" rather than null, for BeanBox"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628098 // text (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 628226 // defaultIcon (<unidirectional association>)
	relation 628226 --->
	  a role_name "defaultIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628226 // defaultIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 628354 // disabledIcon (<unidirectional association>)
	relation 628354 --->
	  a role_name "disabledIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628354 // disabledIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      attribute 467970 "disabledIconSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 468098 "verticalAlignment"
	private explicit_type "int"
	init_value " CENTER"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 468226 "horizontalAlignment"
	private explicit_type "int"
	init_value " LEADING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 468354 "verticalTextPosition"
	private explicit_type "int"
	init_value " CENTER"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 468482 "horizontalTextPosition"
	private explicit_type "int"
	init_value " TRAILING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 468610 "iconTextGap"
	private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 628482 // labelFor (<unidirectional association>)
	relation 628482 --->
	  a role_name "labelFor" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628482 // labelFor (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 628610 // LABELED_BY_PROPERTY (<unidirectional association>)
	relation 628610 --->
	  a role_name "LABELED_BY_PROPERTY" init_value " \"labeledBy\"" class_relation const_relation package
	    comment "
Client property key used to determine what label is labeling the
component.  This is generally not used by labels, but is instead
used by components such as text areas that are being labeled by
labels.  When the labelFor property of a label is set, it will
automatically set the LABELED_BY_PROPERTY of the component being
labelled.

@see #setLabelFor

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628610 // LABELED_BY_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 2020738 "JLabel"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param in name "horizontalAlignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JLabel</code> instance with the specified
text, image, and horizontal alignment.
The label is centered vertically in its display area.
The text is on the trailing edge of the image.

@param text  The text to be displayed by the label.
@param icon  The image to be displayed by the label.
@param horizontalAlignment  One of the following constants
          defined in <code>SwingConstants</code>:
          <code>LEFT</code>,
          <code>CENTER</code>,
          <code>RIGHT</code>,
          <code>LEADING</code> or
          <code>TRAILING</code>.
"
      end

      operation 2020866 "JLabel"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "horizontalAlignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JLabel</code> instance with the specified
text and horizontal alignment.
The label is centered vertically in its display area.

@param text  The text to be displayed by the label.
@param horizontalAlignment  One of the following constants
          defined in <code>SwingConstants</code>:
          <code>LEFT</code>,
          <code>CENTER</code>,
          <code>RIGHT</code>,
          <code>LEADING</code> or
          <code>TRAILING</code>.
"
      end

      operation 2020994 "JLabel"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JLabel</code> instance with the specified text.
The label is aligned against the leading edge of its display area,
and centered vertically.

@param text  The text to be displayed by the label.
"
      end

      operation 2021122 "JLabel"
	public explicit_return_type ""
	nparams 2
	  param inout name "image" type class_ref 352642 // Icon
	  param in name "horizontalAlignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JLabel</code> instance with the specified
image and horizontal alignment.
The label is centered vertically in its display area.

@param image  The image to be displayed by the label.
@param horizontalAlignment  One of the following constants
          defined in <code>SwingConstants</code>:
          <code>LEFT</code>,
          <code>CENTER</code>,
          <code>RIGHT</code>,
          <code>LEADING</code> or
          <code>TRAILING</code>.
"
      end

      operation 2021250 "JLabel"
	public explicit_return_type ""
	nparams 1
	  param inout name "image" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JLabel</code> instance with the specified image.
The label is centered vertically and horizontally
in its display area.

@param image  The image to be displayed by the label.
"
      end

      operation 2021378 "JLabel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JLabel</code> instance with
no image and with an empty string for the title.
The label is centered vertically
in its display area.
The label's contents, once set, will be displayed on the leading edge
of the label's display area.
"
      end

      operation 2021506 "getUI"
	public return_type class_ref 360962 // LabelUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return LabelUI object
"
      end

      operation 2021634 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 360962 // LabelUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the LabelUI L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 2021762 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 2021890 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the l&amp;f class
that renders this component.

@return String \"LabelUI\"

@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 2022018 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text string that the label displays.

@return a String
@see #setText
"
      end

      operation 2022146 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines the single line of text this component will display.  If
the value of text is null or empty string, nothing is displayed.
<p>
The default value of this property is null.
<p>
This is a JavaBeans bound property.

@see #setVerticalTextPosition
@see #setHorizontalTextPosition
@see #setIcon
@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: Defines the single line of text this component will display.
"
      end

      operation 2022274 "getIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the graphic image (glyph, icon) that the label displays.

@return an Icon
@see #setIcon
"
      end

      operation 2022402 "setIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines the icon this component will display.  If
the value of icon is null, nothing is displayed.
<p>
The default value of this property is null.
<p>
This is a JavaBeans bound property.

@see #setVerticalTextPosition
@see #setHorizontalTextPosition
@see #getIcon
@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: The icon this component will display.
"
      end

      operation 2022530 "getDisabledIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the icon used by the label when it's disabled.
If no disabled icon has been set this will forward the call to
the look and feel to construct an appropriate disabled Icon.
<p>
Some look and feels might not render the disabled Icon, in which
case they will ignore this.

@return the <code>disabledIcon</code> property
@see #setDisabledIcon
@see javax.swing.LookAndFeel#getDisabledIcon
@see ImageIcon
"
      end

      operation 2022658 "setDisabledIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "disabledIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the icon to be displayed if this JLabel is \"disabled\"
(JLabel.setEnabled(false)).
<p>
The default value of this property is null.

@param disabledIcon the Icon to display when the component is disabled
@see #getDisabledIcon
@see #setEnabled
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The icon to display if the label is disabled.
"
      end

      operation 2022786 "setDisplayedMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify a keycode that indicates a mnemonic key.
This property is used when the label is part of a larger component.
If the labelFor property of the label is not null, the label will
call the requestFocus method of the component specified by the
labelFor property when the mnemonic is activated.

@see #getLabelFor
@see #setLabelFor
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The mnemonic keycode.
"
      end

      operation 2022914 "setDisplayedMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "aChar" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the displayedMnemonic as a char value.

@param aChar  a char specifying the mnemonic to display
@see #setDisplayedMnemonic(int)
"
      end

      operation 2023042 "getDisplayedMnemonic"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the keycode that indicates a mnemonic key.
This property is used when the label is part of a larger component.
If the labelFor property of the label is not null, the label will
call the requestFocus method of the component specified by the
labelFor property when the mnemonic is activated.

@return int value for the mnemonic key

@see #getLabelFor
@see #setLabelFor
"
      end

      operation 2023170 "setDisplayedMnemonicIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint to the look and feel as to which character in the
text should be decorated to represent the mnemonic. Not all look and
feels may support this. A value of -1 indicates either there is no
mnemonic, the mnemonic character is not contained in the string, or
the developer does not wish the mnemonic to be displayed.
<p>
The value of this is updated as the properties relating to the
mnemonic change (such as the mnemonic itself, the text...).
You should only ever have to call this if
you do not wish the default character to be underlined. For example, if
the text was 'Save As', with a mnemonic of 'a', and you wanted the 'A'
to be decorated, as 'Save <u>A</u>s', you would have to invoke
<code>setDisplayedMnemonicIndex(5)</code> after invoking
<code>setDisplayedMnemonic(KeyEvent.VK_A)</code>.

@since 1.4
@param index Index into the String to underline
@exception IllegalArgumentException will be thrown if <code>index</code>
           is &gt;= length of the text, or &lt; -1

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the index into the String to draw the keyboard character
              mnemonic at
"
      end

      operation 2023298 "getDisplayedMnemonicIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character, as an index, that the look and feel should
provide decoration for as representing the mnemonic character.

@since 1.4
@return index representing mnemonic character
@see #setDisplayedMnemonicIndex
"
      end

      operation 2023426 "checkHorizontalKey"
	protected explicit_return_type "int"
	nparams 2
	  param in name "key" explicit_type "int"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify that key is a legal value for the horizontalAlignment properties.

@param key the property value to check
@param message the IllegalArgumentException detail message
@exception IllegalArgumentException if key isn't LEFT, CENTER, RIGHT,
LEADING or TRAILING.
@see #setHorizontalTextPosition
@see #setHorizontalAlignment
"
      end

      operation 2023554 "checkVerticalKey"
	protected explicit_return_type "int"
	nparams 2
	  param in name "key" explicit_type "int"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify that key is a legal value for the
verticalAlignment or verticalTextPosition properties.

@param key the property value to check
@param message the IllegalArgumentException detail message
@exception IllegalArgumentException if key isn't TOP, CENTER, or BOTTOM.
@see #setVerticalAlignment
@see #setVerticalTextPosition
"
      end

      operation 2023682 "getIconTextGap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of space between the text and the icon
displayed in this label.

@return an int equal to the number of pixels between the text
        and the icon.
@see #setIconTextGap
"
      end

      operation 2023810 "setIconTextGap"
	public explicit_return_type "void"
	nparams 1
	  param in name "iconTextGap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If both the icon and text properties are set, this property
defines the space between them.
<p>
The default value of this property is 4 pixels.
<p>
This is a JavaBeans bound property.

@see #getIconTextGap
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: If both the icon and text properties are set, this
              property defines the space between them.
"
      end

      operation 2023938 "getVerticalAlignment"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment of the label's contents along the Y axis.

@return   The value of the verticalAlignment property, one of the
          following constants defined in <code>SwingConstants</code>:
          <code>TOP</code>,
          <code>CENTER</code>, or
          <code>BOTTOM</code>.

@see SwingConstants
@see #setVerticalAlignment
"
      end

      operation 2024066 "setVerticalAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the alignment of the label's contents along the Y axis.
<p>
The default value of this property is CENTER.

@param alignment One of the following constants
          defined in <code>SwingConstants</code>:
          <code>TOP</code>,
          <code>CENTER</code> (the default), or
          <code>BOTTOM</code>.

@see SwingConstants
@see #getVerticalAlignment
@beaninfo
       bound: true
        enum: TOP    SwingConstants.TOP
              CENTER SwingConstants.CENTER
              BOTTOM SwingConstants.BOTTOM
   attribute: visualUpdate true
 description: The alignment of the label's contents along the Y axis.
"
      end

      operation 2024194 "getHorizontalAlignment"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment of the label's contents along the X axis.

@return   The value of the horizontalAlignment property, one of the
          following constants defined in <code>SwingConstants</code>:
          <code>LEFT</code>,
          <code>CENTER</code>,
          <code>RIGHT</code>,
          <code>LEADING</code> or
          <code>TRAILING</code>.

@see #setHorizontalAlignment
@see SwingConstants
"
      end

      operation 2024322 "setHorizontalAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the alignment of the label's contents along the X axis.
<p>
This is a JavaBeans bound property.

@param alignment  One of the following constants
          defined in <code>SwingConstants</code>:
          <code>LEFT</code>,
          <code>CENTER</code> (the default for image-only labels),
          <code>RIGHT</code>,
          <code>LEADING</code> (the default for text-only labels) or
          <code>TRAILING</code>.

@see SwingConstants
@see #getHorizontalAlignment
@beaninfo
       bound: true
        enum: LEFT     SwingConstants.LEFT
              CENTER   SwingConstants.CENTER
              RIGHT    SwingConstants.RIGHT
              LEADING  SwingConstants.LEADING
              TRAILING SwingConstants.TRAILING
   attribute: visualUpdate true
 description: The alignment of the label's content along the X axis.
"
      end

      operation 2024450 "getVerticalTextPosition"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vertical position of the label's text,
relative to its image.

@return   One of the following constants
          defined in <code>SwingConstants</code>:
          <code>TOP</code>,
          <code>CENTER</code>, or
          <code>BOTTOM</code>.

@see #setVerticalTextPosition
@see SwingConstants
"
      end

      operation 2024578 "setVerticalTextPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "textPosition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical position of the label's text,
relative to its image.
<p>
The default value of this property is CENTER.
<p>
This is a JavaBeans bound property.

@param textPosition  One of the following constants
          defined in <code>SwingConstants</code>:
          <code>TOP</code>,
          <code>CENTER</code> (the default), or
          <code>BOTTOM</code>.

@see SwingConstants
@see #getVerticalTextPosition
@beaninfo
       bound: true
        enum: TOP    SwingConstants.TOP
              CENTER SwingConstants.CENTER
              BOTTOM SwingConstants.BOTTOM
      expert: true
   attribute: visualUpdate true
 description: The vertical position of the text relative to it's image.
"
      end

      operation 2024706 "getHorizontalTextPosition"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the horizontal position of the label's text,
relative to its image.

@return   One of the following constants
          defined in <code>SwingConstants</code>:
          <code>LEFT</code>,
          <code>CENTER</code>,
          <code>RIGHT</code>,
          <code>LEADING</code> or
          <code>TRAILING</code>.

@see SwingConstants
"
      end

      operation 2024834 "setHorizontalTextPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "textPosition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal position of the label's text,
relative to its image.

@param textPosition  One of the following constants
          defined in <code>SwingConstants</code>:
          <code>LEFT</code>,
          <code>CENTER</code>,
          <code>RIGHT</code>,
          <code>LEADING</code>, or
          <code>TRAILING</code> (the default).
@exception IllegalArgumentException

@see SwingConstants
@beaninfo
      expert: true
       bound: true
        enum: LEFT     SwingConstants.LEFT
              CENTER   SwingConstants.CENTER
              RIGHT    SwingConstants.RIGHT
              LEADING  SwingConstants.LEADING
              TRAILING SwingConstants.TRAILING
   attribute: visualUpdate true
 description: The horizontal position of the label's text,
              relative to its image.
"
      end

      operation 2024962 "imageUpdate"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "infoflags" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is overridden to return false if the current Icon's Image is
not equal to the passed in Image <code>img</code>.

@see     java.awt.image.ImageObserver
@see     java.awt.Component#imageUpdate(java.awt.Image, int, int, int, int, int)
"
      end

      operation 2025090 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 2025218 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JLabel. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JLabel.
"
      end

      operation 2025346 "getLabelFor"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--- Accessibility Support ---


Get the component this is labelling.

@return the Component this is labelling.  Can be null if this
does not label a Component.  If the displayedMnemonic
property is set and the labelFor property is also set, the label
will call the requestFocus method of the component specified by the
labelFor property when the mnemonic is activated.

@see #getDisplayedMnemonic
@see #setDisplayedMnemonic
"
      end

      operation 2025474 "setLabelFor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the component this is labelling.  Can be null if this does not
label a Component.  If the displayedMnemonic property is set
and the labelFor property is also set, the label will
call the requestFocus method of the component specified by the
labelFor property when the mnemonic is activated.

@param c  the Component this label is for, or null if the label is
          not the label for a component

@see #getDisplayedMnemonic
@see #setDisplayedMnemonic

@beaninfo
       bound: true
 description: The component this is labelling.
"
      end

      operation 2025602 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the AccessibleContext of this object

@return the AccessibleContext of this object
@beaninfo
      expert: true
 description: The AccessibleContext associated with this Label.
"
      end

      class 361090 "AccessibleJLabel"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 628738 // <generalisation>
	  relation 628738 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 628738 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 628866 // <realization>
	  relation 628866 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 628866 // <realization>
	    b parent class_ref 348802 // AccessibleText
	end

	classrelation 628994 // <realization>
	  relation 628994 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 628994 // <realization>
	    b parent class_ref 358658 // AccessibleExtendedComponent
	end

	operation 2027138 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible name of this object.

@return the localized name of the object -- can be null if this
object does not have a name
@see AccessibleContext#setAccessibleName
"
	end

	operation 2027266 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 2027394 "getAccessibleIcon"
	  public return_type class_ref 349186 // AccessibleIcon
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleIcons associated with this object if one
or more exist.  Otherwise return null.
@since 1.3
"
	end

	operation 2027522 "getAccessibleRelationSet"
	  public return_type class_ref 347906 // AccessibleRelationSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleRelationSet associated with this object if one
exists.  Otherwise return null.
@see AccessibleRelation
@since 1.3
"
	end

	operation 2027650 "getAccessibleText"
	  public return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleText ---------- "
	end

	operation 2027778 "getIndexAtPoint"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Given a point in local coordinates, return the zero-based index
of the character under that Point.  If the point is invalid,
this method returns -1.

@param p the Point in local coordinates
@return the zero-based index of the character under Point p; if
Point is invalid returns -1.
@since 1.3
"
	end

	operation 2027906 "getCharacterBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the bounding box of the character at the given
index in the string.  The bounds are returned in local
coordinates. If the index is invalid, <code>null</code> is returned.

@param i the index into the String
@return the screen coordinates of the character's bounding box.
If the index is invalid, <code>null</code> is returned.
@since 1.3
"
	end

	operation 2028034 "getCharCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the number of characters (valid indicies)

@return the number of characters
@since 1.3
"
	end

	operation 2028162 "getCaretPosition"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the zero-based offset of the caret.

Note: That to the right of the caret will have the same index
value as the offset (the caret is between two characters).
@return the zero-based offset of the caret.
@since 1.3
"
	end

	operation 2028290 "getAtIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String at a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence,
  null for an invalid index or part
@since 1.3
"
	end

	operation 2028418 "getAfterIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String after a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence, null for an invalid
 index or part
@since 1.3
"
	end

	operation 2028546 "getBeforeIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String before a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
  or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence, null for an invalid index
 or part
@since 1.3
"
	end

	operation 2028674 "getCharacterAttribute"
	  public return_type class_ref 361218 // AttributeSet
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the AttributeSet for a given character at a given index

@param i the zero-based index into the text
@return the AttributeSet of the character
@since 1.3
"
	end

	operation 2028802 "getSelectionStart"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the start offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the start of the selection
@since 1.3
"
	end

	operation 2028930 "getSelectionEnd"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the end offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the end of the selection
@since 1.3
"
	end

	operation 2029058 "getSelectedText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the portion of the text that is selected.

@return the String portion of the text that is selected
@since 1.3
"
	end

	operation 2029186 "getText"
	  private return_type class_ref 128130 // String
	  nparams 2
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 361346 // BadLocationException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the text substring starting at the specified
offset with the specified length.
"
	end

	operation 2029314 "getTextRectangle"
	  private return_type class_ref 314114 // Rectangle
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the bounding rectangle for the component text.
"
	end

	operation 2029442 "getAccessibleExtendedComponent"
	  package return_type class_ref 358658 // AccessibleExtendedComponent
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ----- AccessibleExtendedComponent

Returns the AccessibleExtendedComponent

@return the AccessibleExtendedComponent
"
	end

	operation 2029570 "getToolTipText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the tool tip text

@return the tool tip text, if supported, of the object;
otherwise, null
@since 1.4
"
	end

	operation 2029698 "getTitledBorderText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the titled border text

@return the titled border text, if supported, of the object;
otherwise, null
@since 1.4
"
	end

	operation 2029826 "getAccessibleKeyBinding"
	  public return_type class_ref 358786 // AccessibleKeyBinding
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns key bindings associated with this object

@return the key bindings, if supported, of the object;
otherwise, null
@see AccessibleKeyBinding
@since 1.4
"
	end

	class 361474 "LabelKeyBinding"
	  visibility package 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 629122 // <realization>
	    relation 629122 -_-|>
	      a public
		java "${type}"
		classrelation_ref 629122 // <realization>
	      b parent class_ref 358786 // AccessibleKeyBinding
	  end

	  attribute 469122 "mnemonic"
	    package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 2030210 "LabelKeyBinding"
	    package explicit_return_type ""
	    nparams 1
	      param in name "mnemonic" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 2030338 "getAccessibleKeyBindingCount"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of key bindings for this object

@return the zero-based number of key bindings for this object
"
	  end

	  operation 2030466 "getAccessibleKeyBinding"
	    public return_type class_ref 129538 // Object
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns a key binding for this object.  The value returned is an
java.lang.Object which must be cast to appropriate type depending
on the underlying implementation of the key.  For example, if the
Object returned is a javax.swing.KeyStroke, the user of this
method should do the following:
<nf><code>
Component c = <get the component that has the key bindings>
AccessibleContext ac = c.getAccessibleContext();
AccessibleKeyBinding akb = ac.getAccessibleKeyBinding();
for (int i = 0; i < akb.getAccessibleKeyBindingCount(); i++) {
    Object o = akb.getAccessibleKeyBinding(i);
    if (o instanceof javax.swing.KeyStroke) {
        javax.swing.KeyStroke keyStroke = (javax.swing.KeyStroke)o;
        <do something with the key binding>
    }
}
</code></nf>

@param i zero-based index of the key bindings
@return a javax.lang.Object which specifies the key binding
@exception IllegalArgumentException if the index is
out of bounds
@see #getAccessibleKeyBindingCount
"
	  end
	end
      end
    end

    class 359938 "JSpinner"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A single line input field that lets the user select a
number or an object value from an ordered sequence. Spinners typically
provide a pair of tiny arrow buttons for stepping through the elements
of the sequence. The keyboard up/down arrow keys also cycle through the
elements. The user may also be allowed to type a (legal) value directly
into the spinner. Although combo boxes provide similar functionality,
spinners are sometimes preferred because they don't require a drop down list
that can obscure important data.
<p>
A <code>JSpinner</code>'s sequence value is defined by its
<code>SpinnerModel</code>.
The <code>model</code> can be specified as a constructor argument and
changed with the <code>model</code> property.  <code>SpinnerModel</code>
classes for some common types are provided: <code>SpinnerListModel</code>,
<code>SpinnerNumberModel</code>, and <code>SpinnerDateModel</code>.
<p>
A <code>JSpinner</code> has a single child component that's
responsible for displaying
and potentially changing the current element or <i>value</i> of
the model, which is called the <code>editor</code>.  The editor is created
by the <code>JSpinner</code>'s constructor and can be changed with the
<code>editor</code> property.  The <code>JSpinner</code>'s editor stays
in sync with the model by listening for <code>ChangeEvent</code>s. If the
user has changed the value displayed by the <code>editor</code> it is
possible for the <code>model</code>'s value to differ from that of
the <code>editor</code>. To make sure the <code>model</code> has the same
value as the editor use the <code>commitEdit</code> method, eg:
<pre>
  try {
      spinner.commitEdit();
  }
  catch (ParseException pe) {
      // Edited value is invalid, spinner.getValue() will return
      // the last valid value, you could revert the spinner to show that:
      JComponent editor = spinner.getEditor();
      if (editor instanceof DefaultEditor) {
          ((DefaultEditor)editor).getTextField().setValue(spinner.getValue());
      }
      // reset the value to some known value:
      spinner.setValue(fallbackValue);
      // or treat the last valid value as the current, in which
      // case you don't need to do anything.
  }
  return spinner.getValue();
</pre>
<p>
For information and examples of using spinner see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html\">How to Use Spinners</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A single line input field that lets the user select a
    number or an object value from an ordered set.

@see SpinnerModel
@see AbstractSpinnerModel
@see SpinnerListModel
@see SpinnerNumberModel
@see SpinnerDateModel
@see JFormattedTextField

@author Hans Muller
@author Lynn Monsanto (accessibility)
@since 1.4
"
      classrelation 4149634 // <generalisation>
	relation 4149634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4149634 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4149762 // <realization>
	relation 4149762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4149762 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4149890 // uiClassID (<unidirectional association>)
	relation 4149890 --->
	  a role_name "uiClassID" init_value " \"SpinnerUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4149890 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4150018 // DISABLED_ACTION (<unidirectional association>)
	relation 4150018 --->
	  a role_name "DISABLED_ACTION" init_value " new DisabledAction()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4150018 // DISABLED_ACTION (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      classrelation 4150146 // model (<unidirectional association>)
	relation 4150146 --->
	  a role_name "model" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4150146 // model (<unidirectional association>)
	  b parent class_ref 1263106 // SpinnerModel
      end

      classrelation 4150274 // editor (<unidirectional association>)
	relation 4150274 --->
	  a role_name "editor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4150274 // editor (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4150402 // modelListener (<unidirectional association>)
	relation 4150402 --->
	  a role_name "modelListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4150402 // modelListener (<unidirectional association>)
	  b parent class_ref 359426 // ChangeListener
      end

      classrelation 4150530 // changeEvent (<unidirectional association>)
	relation 4150530 --->
	  a role_name "changeEvent" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4150530 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      attribute 2422018 "editorExplicitlySet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10707586 "JSpinner"
	public explicit_return_type ""
	nparams 1
	  param inout name "model" type class_ref 1263106 // SpinnerModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a spinner for the given model. The spinner has
a set of previous/next buttons, and an editor appropriate
for the model.

@throws NullPointerException if the model is {@code null}
"
      end

      operation 10707714 "JSpinner"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a spinner with an <code>Integer SpinnerNumberModel</code>
with initial value 0 and no minimum or maximum limits.
"
      end

      operation 10707842 "getUI"
	public return_type class_ref 472450 // SpinnerUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the look and feel (L&amp;F) object that renders this component.

@return the <code>SpinnerUI</code> object that renders this component
"
      end

      operation 10707970 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 472450 // SpinnerUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the look and feel (L&amp;F) object that renders this component.

@param ui  the <code>SpinnerUI</code> L&amp;F object
@see UIDefaults#getUI
"
      end

      operation 10708098 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the suffix used to construct the name of the look and feel
(L&amp;F) class used to render this component.

@return the string \"SpinnerUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10708226 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property with the value from the current look and feel.

@see UIManager#getUI
"
      end

      operation 10708354 "createEditor"
	protected return_type class_ref 338434 // JComponent
	nparams 1
	  param inout name "model" type class_ref 1263106 // SpinnerModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the constructors to create the
<code>JComponent</code>
that displays the current value of the sequence.  The editor may
also allow the user to enter an element of the sequence directly.
An editor must listen for <code>ChangeEvents</code> on the
<code>model</code> and keep the value it displays
in sync with the value of the model.
<p>
Subclasses may override this method to add support for new
<code>SpinnerModel</code> classes.  Alternatively one can just
replace the editor created here with the <code>setEditor</code>
method.  The default mapping from model type to editor is:
<ul>
<li> <code>SpinnerNumberModel =&gt; JSpinner.NumberEditor</code>
<li> <code>SpinnerDateModel =&gt; JSpinner.DateEditor</code>
<li> <code>SpinnerListModel =&gt; JSpinner.ListEditor</code>
<li> <i>all others</i> =&gt; <code>JSpinner.DefaultEditor</code>
</ul>

@return a component that displays the current value of the sequence
@param model the value of getModel
@see #getModel
@see #setEditor
"
      end

      operation 10708482 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "model" type class_ref 1263106 // SpinnerModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the model that represents the value of this spinner.
If the editor property has not been explicitly set,
the editor property is (implicitly) set after the <code>\"model\"</code>
<code>PropertyChangeEvent</code> has been fired.  The editor
property is set to the value returned by <code>createEditor</code>,
as in:
<pre>
setEditor(createEditor(model));
</pre>

@param model the new <code>SpinnerModel</code>
@see #getModel
@see #getEditor
@see #setEditor
@throws IllegalArgumentException if model is <code>null</code>

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Model that represents the value of this spinner.
"
      end

      operation 10708610 "getModel"
	public return_type class_ref 1263106 // SpinnerModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>SpinnerModel</code> that defines
this spinners sequence of values.

@return the value of the model property
@see #setModel
"
      end

      operation 10708738 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current value of the model, typically
this value is displayed by the <code>editor</code>. If the
user has changed the value displayed by the <code>editor</code> it is
possible for the <code>model</code>'s value to differ from that of
the <code>editor</code>, refer to the class level javadoc for examples
of how to deal with this.
<p>
This method simply delegates to the <code>model</code>.
It is equivalent to:
<pre>
getModel().getValue()
</pre>

@see #setValue
@see SpinnerModel#getValue
"
      end

      operation 10708866 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes current value of the model, typically
this value is displayed by the <code>editor</code>.
If the <code>SpinnerModel</code> implementation
doesn't support the specified value then an
<code>IllegalArgumentException</code> is thrown.
<p>
This method simply delegates to the <code>model</code>.
It is equivalent to:
<pre>
getModel().setValue(value)
</pre>

@throws IllegalArgumentException if <code>value</code> isn't allowed
@see #getValue
@see SpinnerModel#setValue
"
      end

      operation 10708994 "getNextValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object in the sequence that comes after the object returned
by <code>getValue()</code>. If the end of the sequence has been reached
then return <code>null</code>.
Calling this method does not effect <code>value</code>.
<p>
This method simply delegates to the <code>model</code>.
It is equivalent to:
<pre>
getModel().getNextValue()
</pre>

@return the next legal value or <code>null</code> if one doesn't exist
@see #getValue
@see #getPreviousValue
@see SpinnerModel#getNextValue
"
      end

      class 1288450 "ModelListener"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4150658 // <realization>
	  relation 4150658 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4150658 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4150786 // <realization>
	  relation 4150786 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4150786 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10709122 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10709250 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to the list that is notified each time a change
to the model occurs.  The source of <code>ChangeEvents</code>
delivered to <code>ChangeListeners</code> will be this
<code>JSpinner</code>.  Note also that replacing the model
will not affect listeners added directly to JSpinner.
Applications can add listeners to  the model directly.  In that
case is that the source of the event would be the
<code>SpinnerModel</code>.

@param listener the <code>ChangeListener</code> to add
@see #removeChangeListener
@see #getModel
"
      end

      operation 10709378 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code> from this spinner.

@param listener the <code>ChangeListener</code> to remove
@see #fireStateChanged
@see #addChangeListener
"
      end

      operation 10709506 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this JSpinner with addChangeListener().

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10709634 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a <code>ChangeEvent</code>, whose source is this
<code>JSpinner</code>, to each <code>ChangeListener</code>.
When a <code>ChangeListener</code> has been added
to the spinner, this method method is called each time
a <code>ChangeEvent</code> is received from the model.

@see #addChangeListener
@see #removeChangeListener
@see EventListenerList
"
      end

      operation 10709762 "getPreviousValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object in the sequence that comes
before the object returned by <code>getValue()</code>.
If the end of the sequence has been reached then
return <code>null</code>. Calling this method does
not effect <code>value</code>.
<p>
This method simply delegates to the <code>model</code>.
It is equivalent to:
<pre>
getModel().getPreviousValue()
</pre>

@return the previous legal value or <code>null</code>
  if one doesn't exist
@see #getValue
@see #getNextValue
@see SpinnerModel#getPreviousValue
"
      end

      operation 10709890 "setEditor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "editor" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the <code>JComponent</code> that displays the current value
of the <code>SpinnerModel</code>.  It is the responsibility of this
method to <i>disconnect</i> the old editor from the model and to
connect the new editor.  This may mean removing the
old editors <code>ChangeListener</code> from the model or the
spinner itself and adding one for the new editor.

@param editor the new editor
@see #getEditor
@see #createEditor
@see #getModel
@throws IllegalArgumentException if editor is <code>null</code>

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: JComponent that displays the current value of the model
"
      end

      operation 10710018 "getEditor"
	public return_type class_ref 338434 // JComponent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component that displays and potentially
changes the model's value.

@return the component that displays and potentially
   changes the model's value
@see #setEditor
@see #createEditor
"
      end

      operation 10710146 "commitEdit"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 372482 // ParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Commits the currently edited value to the <code>SpinnerModel</code>.
<p>
If the editor is an instance of <code>DefaultEditor</code>, the
call if forwarded to the editor, otherwise this does nothing.

@throws ParseException if the currently edited value couldn't
        be committed.
"
      end

      operation 10710274 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject and writeObject in JComponent for more
information about serialization in Swing.

@param s Stream to write to
"
      end

      class 1288578 "DefaultEditor"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4150914 // <generalisation>
	  relation 4150914 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4150914 // <generalisation>
	    b parent class_ref 339842 // JPanel
	end

	classrelation 4151042 // <realization>
	  relation 4151042 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4151042 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4151170 // <realization>
	  relation 4151170 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4151170 // <realization>
	    b parent class_ref 347266 // PropertyChangeListener
	end

	classrelation 4151298 // <realization>
	  relation 4151298 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4151298 // <realization>
	    b parent class_ref 349698 // LayoutManager
	end

	operation 10710402 "DefaultEditor"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "spinner" type class_ref 359938 // JSpinner
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an editor component for the specified <code>JSpinner</code>.
This <code>DefaultEditor</code> is it's own layout manager and
it is added to the spinner's <code>ChangeListener</code> list.
The constructor creates a single <code>JFormattedTextField</code> child,
initializes it's value to be the spinner model's current value
and adds it to <code>this</code> <code>DefaultEditor</code>.

@param spinner the spinner whose model <code>this</code> editor will monitor
@see #getTextField
@see JSpinner#addChangeListener
"
	end

	operation 10710530 "dismiss"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "spinner" type class_ref 359938 // JSpinner
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Disconnect <code>this</code> editor from the specified
<code>JSpinner</code>.  By default, this method removes
itself from the spinners <code>ChangeListener</code> list.

@param spinner the <code>JSpinner</code> to disconnect this
   editor from; the same spinner as was passed to the constructor.
"
	end

	operation 10710658 "getSpinner"
	  public return_type class_ref 359938 // JSpinner
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>JSpinner</code> ancestor of this editor or
<code>null</code> if none of the ancestors are a
<code>JSpinner</code>.
Typically the editor's parent is a <code>JSpinner</code> however
subclasses of <code>JSpinner</code> may override the
the <code>createEditor</code> method and insert one or more containers
between the <code>JSpinner</code> and it's editor.

@return <code>JSpinner</code> ancestor; <code>null</code>
        if none of the ancestors are a <code>JSpinner</code>

@see JSpinner#createEditor
"
	end

	operation 10710786 "getTextField"
	  public return_type class_ref 472834 // JFormattedTextField
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>JFormattedTextField</code> child of this
editor.  By default the text field is the first and only
child of editor.

@return the <code>JFormattedTextField</code> that gives the user
    access to the <code>SpinnerDateModel's</code> value.
@see #getSpinner
@see #getModel
"
	end

	operation 10710914 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method is called when the spinner's model's state changes.
It sets the <code>value</code> of the text field to the current
value of the spinners model.

@param e the <code>ChangeEvent</code> whose source is the
<code>JSpinner</code> whose model has changed.
@see #getTextField
@see JSpinner#getValue
"
	end

	operation 10711042 "propertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called by the <code>JFormattedTextField</code>
<code>PropertyChangeListener</code>.  When the <code>\"value\"</code>
property changes, which implies that the user has typed a new
number, we set the value of the spinners model.
<p>
This class ignores <code>PropertyChangeEvents</code> whose
source is not the <code>JFormattedTextField</code>, so subclasses
may safely make <code>this</code> <code>DefaultEditor</code> a
<code>PropertyChangeListener</code> on other objects.

@param e the <code>PropertyChangeEvent</code> whose source is
   the <code>JFormattedTextField</code> created by this class.
@see #getTextField
"
	end

	operation 10711170 "addLayoutComponent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "child" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This <code>LayoutManager</code> method does nothing.  We're
only managing a single child and there's no support
for layout constraints.

@param name ignored
@param child ignored
"
	end

	operation 10711298 "removeLayoutComponent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This <code>LayoutManager</code> method does nothing.  There
isn't any per-child state.

@param child ignored
"
	end

	operation 10711426 "insetSize"
	  private return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "parent" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the size of the parents insets.
"
	end

	operation 10711554 "preferredLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "parent" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the preferred size of first (and only) child plus the
size of the parents insets.

@param parent the Container that's managing the layout
@return the preferred dimensions to lay out the subcomponents
         of the specified container.
"
	end

	operation 10711682 "minimumLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "parent" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the minimum size of first (and only) child plus the
size of the parents insets.

@param parent the Container that's managing the layout
@return  the minimum dimensions needed to lay out the subcomponents
         of the specified container.
"
	end

	operation 10711810 "layoutContainer"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "parent" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resize the one (and only) child to completely fill the area
within the parents insets.
"
	end

	operation 10711938 "commitEdit"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 372482 // ParseException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pushes the currently edited value to the <code>SpinnerModel</code>.
<p>
The default implementation invokes <code>commitEdit</code> on the
<code>JFormattedTextField</code>.

@throws ParseException if the edited value is not legal
"
	end

	operation 10712066 "getBaseline"
	  public explicit_return_type "int"
	  nparams 2
	    param in name "width" explicit_type "int"
	    param in name "height" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the baseline.

@throws IllegalArgumentException {@inheritDoc}
@see javax.swing.JComponent#getBaseline(int,int)
@see javax.swing.JComponent#getBaselineResizeBehavior()
@since 1.6
"
	end

	operation 10712194 "getBaselineResizeBehavior"
	  public return_type class_ref 343170 // BaselineResizeBehavior
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an enum indicating how the baseline of the component
changes as the size changes.

@throws NullPointerException {@inheritDoc}
@see javax.swing.JComponent#getBaseline(int, int)
@since 1.6
"
	end
      end

      class 1288706 "DateEditorFormatter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4154754 // <generalisation>
	  relation 4154754 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4154754 // <generalisation>
	    b parent class_ref 1288834 // DateFormatter
	end

	classrelation 4154882 // model (<unidirectional association>)
	  relation 4154882 --->
	    a role_name "model" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4154882 // model (<unidirectional association>)
	    b parent class_ref 1289858 // SpinnerDateModel
	end

	operation 10724482 "DateEditorFormatter"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "model" type class_ref 1289858 // SpinnerDateModel
	    param inout name "format" type class_ref 473090 // DateFormat
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10724610 "setMinimum"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "min" type class_ref 194946 // Comparable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10724738 "getMinimum"
	  public return_type class_ref 194946 // Comparable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10724866 "setMaximum"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "max" type class_ref 194946 // Comparable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10724994 "getMaximum"
	  public return_type class_ref 194946 // Comparable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1289986 "DateEditor"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4155010 // <generalisation>
	  relation 4155010 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4155010 // <generalisation>
	    b parent class_ref 1288578 // DefaultEditor
	end

	operation 10725122 "getDefaultPattern"
	  class_operation private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "loc" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This is here until SimpleDateFormat gets a constructor that
 takes a Locale: 4923525"
	end

	operation 10725250 "DateEditor"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "spinner" type class_ref 359938 // JSpinner
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a <code>JSpinner</code> editor that supports displaying
and editing the value of a <code>SpinnerDateModel</code>
with a <code>JFormattedTextField</code>.  <code>This</code>
<code>DateEditor</code> becomes both a <code>ChangeListener</code>
on the spinners model and a <code>PropertyChangeListener</code>
on the new <code>JFormattedTextField</code>.

@param spinner the spinner whose model <code>this</code> editor will monitor
@exception IllegalArgumentException if the spinners model is not
    an instance of <code>SpinnerDateModel</code>

@see #getModel
@see #getFormat
@see SpinnerDateModel
"
	end

	operation 10725378 "DateEditor"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "spinner" type class_ref 359938 // JSpinner
	    param inout name "dateFormatPattern" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a <code>JSpinner</code> editor that supports displaying
and editing the value of a <code>SpinnerDateModel</code>
with a <code>JFormattedTextField</code>.  <code>This</code>
<code>DateEditor</code> becomes both a <code>ChangeListener</code>
on the spinner and a <code>PropertyChangeListener</code>
on the new <code>JFormattedTextField</code>.

@param spinner the spinner whose model <code>this</code> editor will monitor
@param dateFormatPattern the initial pattern for the
    <code>SimpleDateFormat</code> object that's used to display
    and parse the value of the text field.
@exception IllegalArgumentException if the spinners model is not
    an instance of <code>SpinnerDateModel</code>

@see #getModel
@see #getFormat
@see SpinnerDateModel
@see java.text.SimpleDateFormat
"
	end

	operation 10725506 "DateEditor"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "spinner" type class_ref 359938 // JSpinner
	    param inout name "format" type class_ref 473090 // DateFormat
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a <code>JSpinner</code> editor that supports displaying
and editing the value of a <code>SpinnerDateModel</code>
with a <code>JFormattedTextField</code>.  <code>This</code>
<code>DateEditor</code> becomes both a <code>ChangeListener</code>
on the spinner and a <code>PropertyChangeListener</code>
on the new <code>JFormattedTextField</code>.

@param spinner the spinner whose model <code>this</code> editor
       will monitor
@param format <code>DateFormat</code> object that's used to display
    and parse the value of the text field.
@exception IllegalArgumentException if the spinners model is not
    an instance of <code>SpinnerDateModel</code>

@see #getModel
@see #getFormat
@see SpinnerDateModel
@see java.text.SimpleDateFormat
"
	end

	operation 10725634 "getFormat"
	  public return_type class_ref 1048450 // SimpleDateFormat
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>java.text.SimpleDateFormat</code> object the
<code>JFormattedTextField</code> uses to parse and format
numbers.

@return the value of <code>getTextField().getFormatter().getFormat()</code>.
@see #getTextField
@see java.text.SimpleDateFormat
"
	end

	operation 10725762 "getModel"
	  public return_type class_ref 1289858 // SpinnerDateModel
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return our spinner ancestor's <code>SpinnerDateModel</code>.

@return <code>getSpinner().getModel()</code>
@see #getSpinner
@see #getTextField
"
	end
      end

      class 1290114 "NumberEditorFormatter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4155394 // <generalisation>
	  relation 4155394 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4155394 // <generalisation>
	    b parent class_ref 1290242 // NumberFormatter
	end

	classrelation 4155522 // model (<unidirectional association>)
	  relation 4155522 --->
	    a role_name "model" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4155522 // model (<unidirectional association>)
	    b parent class_ref 1290498 // SpinnerNumberModel
	end

	operation 10728066 "NumberEditorFormatter"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "model" type class_ref 1290498 // SpinnerNumberModel
	    param inout name "format" type class_ref 1045890 // NumberFormat
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10728194 "setMinimum"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "min" type class_ref 194946 // Comparable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10728322 "getMinimum"
	  public return_type class_ref 194946 // Comparable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10728450 "setMaximum"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "max" type class_ref 194946 // Comparable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10728578 "getMaximum"
	  public return_type class_ref 194946 // Comparable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1290626 "NumberEditor"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4155650 // <generalisation>
	  relation 4155650 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4155650 // <generalisation>
	    b parent class_ref 1288578 // DefaultEditor
	end

	operation 10728706 "getDefaultPattern"
	  class_operation private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "locale" type class_ref 312962 // Locale
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This is here until DecimalFormat gets a constructor that
 takes a Locale: 4923525"
	end

	operation 10728834 "NumberEditor"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "spinner" type class_ref 359938 // JSpinner
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a <code>JSpinner</code> editor that supports displaying
and editing the value of a <code>SpinnerNumberModel</code>
with a <code>JFormattedTextField</code>.  <code>This</code>
<code>NumberEditor</code> becomes both a <code>ChangeListener</code>
on the spinner and a <code>PropertyChangeListener</code>
on the new <code>JFormattedTextField</code>.

@param spinner the spinner whose model <code>this</code> editor will monitor
@exception IllegalArgumentException if the spinners model is not
    an instance of <code>SpinnerNumberModel</code>

@see #getModel
@see #getFormat
@see SpinnerNumberModel
"
	end

	operation 10728962 "NumberEditor"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "spinner" type class_ref 359938 // JSpinner
	    param inout name "decimalFormatPattern" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a <code>JSpinner</code> editor that supports displaying
and editing the value of a <code>SpinnerNumberModel</code>
with a <code>JFormattedTextField</code>.  <code>This</code>
<code>NumberEditor</code> becomes both a <code>ChangeListener</code>
on the spinner and a <code>PropertyChangeListener</code>
on the new <code>JFormattedTextField</code>.

@param spinner the spinner whose model <code>this</code> editor will monitor
@param decimalFormatPattern the initial pattern for the
    <code>DecimalFormat</code> object that's used to display
    and parse the value of the text field.
@exception IllegalArgumentException if the spinners model is not
    an instance of <code>SpinnerNumberModel</code> or if
    <code>decimalFormatPattern</code> is not a legal
    argument to <code>DecimalFormat</code>

@see #getTextField
@see SpinnerNumberModel
@see java.text.DecimalFormat
"
	end

	operation 10729090 "NumberEditor"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "spinner" type class_ref 359938 // JSpinner
	    param inout name "format" type class_ref 636546 // DecimalFormat
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a <code>JSpinner</code> editor that supports displaying
and editing the value of a <code>SpinnerNumberModel</code>
with a <code>JFormattedTextField</code>.  <code>This</code>
<code>NumberEditor</code> becomes both a <code>ChangeListener</code>
on the spinner and a <code>PropertyChangeListener</code>
on the new <code>JFormattedTextField</code>.

@param spinner the spinner whose model <code>this</code> editor will monitor
@param decimalFormatPattern the initial pattern for the
    <code>DecimalFormat</code> object that's used to display
    and parse the value of the text field.
@exception IllegalArgumentException if the spinners model is not
    an instance of <code>SpinnerNumberModel</code>

@see #getTextField
@see SpinnerNumberModel
@see java.text.DecimalFormat
"
	end

	operation 10729218 "getFormat"
	  public return_type class_ref 636546 // DecimalFormat
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>java.text.DecimalFormat</code> object the
<code>JFormattedTextField</code> uses to parse and format
numbers.

@return the value of <code>getTextField().getFormatter().getFormat()</code>.
@see #getTextField
@see java.text.DecimalFormat
"
	end

	operation 10729346 "getModel"
	  public return_type class_ref 1290498 // SpinnerNumberModel
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return our spinner ancestor's <code>SpinnerNumberModel</code>.

@return <code>getSpinner().getModel()</code>
@see #getSpinner
@see #getTextField
"
	end
      end

      class 1290754 "ListEditor"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4155778 // <generalisation>
	  relation 4155778 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4155778 // <generalisation>
	    b parent class_ref 1288578 // DefaultEditor
	end

	operation 10729474 "ListEditor"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "spinner" type class_ref 359938 // JSpinner
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a <code>JSpinner</code> editor that supports displaying
and editing the value of a <code>SpinnerListModel</code>
with a <code>JFormattedTextField</code>.  <code>This</code>
<code>ListEditor</code> becomes both a <code>ChangeListener</code>
on the spinner and a <code>PropertyChangeListener</code>
on the new <code>JFormattedTextField</code>.

@param spinner the spinner whose model <code>this</code> editor will monitor
@exception IllegalArgumentException if the spinners model is not
    an instance of <code>SpinnerListModel</code>

@see #getModel
@see SpinnerListModel
"
	end

	operation 10729602 "getModel"
	  public return_type class_ref 1290882 // SpinnerListModel
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return our spinner ancestor's <code>SpinnerNumberModel</code>.

@return <code>getSpinner().getModel()</code>
@see #getSpinner
@see #getTextField
"
	end

	class 1291010 "ListFormatter"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4155906 // <generalisation>
	    relation 4155906 ---|>
	      a public
		java "${type}"
		classrelation_ref 4155906 // <generalisation>
	      b parent class_ref 1283970 // AbstractFormatter
	  end

	  classrelation 4156034 // filter (<unidirectional association>)
	    relation 4156034 --->
	      a role_name "filter" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 4156034 // filter (<unidirectional association>)
	      b parent class_ref 408834 // DocumentFilter
	  end

	  operation 10729730 "valueToString"
	    public return_type class_ref 128130 // String
	    nparams 1
	      param inout name "value" type class_ref 129538 // Object
	    nexceptions 1
	      exception class_ref 372482 // ParseException
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10729858 "stringToValue"
	    public return_type class_ref 129538 // Object
	    nparams 1
	      param inout name "string" type class_ref 128130 // String
	    nexceptions 1
	      exception class_ref 372482 // ParseException
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10729986 "getDocumentFilter"
	    protected return_type class_ref 408834 // DocumentFilter
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  class 1291138 "Filter"
	    visibility private 
	    cpp_decl ""
	    java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    mysql_decl ""
	    
	    classrelation 4156162 // <generalisation>
	      relation 4156162 ---|>
		a public
		  java "${type}"
		  classrelation_ref 4156162 // <generalisation>
		b parent class_ref 408834 // DocumentFilter
	    end

	    operation 10730114 "replace"
	      public explicit_return_type "void"
	      nparams 5
	        param inout name "fb" type class_ref 408962 // FilterBypass
	        param in name "offset" explicit_type "int"
	        param in name "length" explicit_type "int"
	        param inout name "string" type class_ref 128130 // String
	        param inout name "attrs" type class_ref 361218 // AttributeSet
	      nexceptions 1
	        exception class_ref 361346 // BadLocationException
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end

	    operation 10730242 "insertString"
	      public explicit_return_type "void"
	      nparams 4
	        param inout name "fb" type class_ref 408962 // FilterBypass
	        param in name "offset" explicit_type "int"
	        param inout name "string" type class_ref 128130 // String
	        param inout name "attr" type class_ref 361218 // AttributeSet
	      nexceptions 1
	        exception class_ref 361346 // BadLocationException
	      
	      preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	    end
	  end
	end
      end

      class 1291266 "DisabledAction"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4156290 // <realization>
	  relation 4156290 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4156290 // <realization>
	    b parent class_ref 352258 // Action
	end

	operation 10730370 "getValue"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10730498 "putValue"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "key" type class_ref 128130 // String
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10730626 "setEnabled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10730754 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10730882 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10731010 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10731138 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ae" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10731266 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> for the <code>JSpinner</code>

@return the <code>AccessibleContext</code> for the <code>JSpinner</code>
@since 1.5
"
      end

      class 1291394 "AccessibleJSpinner"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4156418 // <generalisation>
	  relation 4156418 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4156418 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4156546 // <realization>
	  relation 4156546 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4156546 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	classrelation 4156674 // <realization>
	  relation 4156674 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4156674 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	classrelation 4156802 // <realization>
	  relation 4156802 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4156802 // <realization>
	    b parent class_ref 348802 // AccessibleText
	end

	classrelation 4156930 // <realization>
	  relation 4156930 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4156930 // <realization>
	    b parent class_ref 348930 // AccessibleEditableText
	end

	classrelation 4157058 // <realization>
	  relation 4157058 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4157058 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4157186 // oldModelValue (<unidirectional association>)
	  relation 4157186 --->
	    a role_name "oldModelValue" init_value " null" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4157186 // oldModelValue (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 10731394 "AccessibleJSpinner"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "AccessibleJSpinner constructor
"
	end

	operation 10731522 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoked when the target of the listener has changed its state.

@param e  a <code>ChangeEvent</code> object. Must not be null.
@throws NullPointerException if the parameter is null.
"
	end

	operation 10731650 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== Begin AccessibleContext methods ===== 

Gets the role of this object.  The role of the object is the generic
purpose or use of the class of this object.  For example, the role
of a push button is AccessibleRole.PUSH_BUTTON.  The roles in
AccessibleRole are provided so component developers can pick from
a set of predefined roles.  This enables assistive technologies to
provide a consistent interface to various tweaked subclasses of
components (e.g., use AccessibleRole.PUSH_BUTTON for all components
that act like a push button) as well as distinguish between subclasses
that behave differently (e.g., AccessibleRole.CHECK_BOX for check boxes
and AccessibleRole.RADIO_BUTTON for radio buttons).
<p>Note that the AccessibleRole class is also extensible, so
custom component developers can define their own AccessibleRole's
if the set of predefined roles is inadequate.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole
"
	end

	operation 10731778 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children of the object.

@return the number of accessible children of the object.
"
	end

	operation 10731906 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the specified Accessible child of the object.  The Accessible
children of an Accessible object are zero-based, so the first child
of an Accessible child is at index 0, the second child is at index 1,
and so on.

@param i zero-based index of child
@return the Accessible child of the object
@see #getAccessibleChildrenCount
"
	end

	operation 10732034 "getAccessibleAction"
	  public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== End AccessibleContext methods ===== 

Gets the AccessibleAction associated with this object that supports
one or more actions.

@return AccessibleAction if supported by object; else return null
@see AccessibleAction
"
	end

	operation 10732162 "getAccessibleText"
	  public return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the AccessibleText associated with this object presenting
text on the display.

@return AccessibleText if supported by object; else return null
@see AccessibleText
"
	end

	operation 10732290 "getEditorAccessibleContext"
	  private return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AccessibleContext for the JSpinner editor
"
	end

	operation 10732418 "getEditorAccessibleText"
	  private return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AccessibleText for the JSpinner editor
"
	end

	operation 10732546 "getEditorAccessibleEditableText"
	  private return_type class_ref 348930 // AccessibleEditableText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AccessibleEditableText for the JSpinner editor
"
	end

	operation 10732674 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the AccessibleValue associated with this object.

@return AccessibleValue if supported by object; else return null
@see AccessibleValue

"
	end

	operation 10732802 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== Begin AccessibleValue impl ===== 

Get the value of this object as a Number.  If the value has not been
set, the return value will be null.

@return value of the object
@see #setCurrentAccessibleValue
"
	end

	operation 10732930 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@param n the value to set for this object
@return true if the value was set; else False
@see #getCurrentAccessibleValue
"
	end

	operation 10733058 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum value of this object as a Number.

@return Minimum value of the object; null if this object does not
have a minimum value
@see #getMaximumAccessibleValue
"
	end

	operation 10733186 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum value of this object as a Number.

@return Maximum value of the object; null if this object does not
have a maximum value
@see #getMinimumAccessibleValue
"
	end

	operation 10733314 "getAccessibleActionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== End AccessibleValue impl ===== 
 ===== Begin AccessibleAction impl ===== 

Returns the number of accessible actions available in this object
If there are more than one, the first one is considered the \"default\"
action of the object.

Two actions are supported: AccessibleAction.INCREMENT which
increments the spinner value and AccessibleAction.DECREMENT
which decrements the spinner value

@return the zero-based number of Actions in this object
"
	end

	operation 10733442 "getAccessibleActionDescription"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a description of the specified action of the object.

@param i zero-based index of the actions
@return a String description of the action
@see #getAccessibleActionCount
"
	end

	operation 10733570 "doAccessibleAction"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Performs the specified Action on the object

@param i zero-based index of actions. The first action
(index 0) is AccessibleAction.INCREMENT and the second
action (index 1) is AccessibleAction.DECREMENT.
@return true if the action was performed; otherwise false.
@see #getAccessibleActionCount
"
	end

	operation 10733698 "sameWindowAncestor"
	  private explicit_return_type "boolean"
	  nparams 2
	    param inout name "src" type class_ref 338818 // Component
	    param inout name "dest" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== End AccessibleAction impl ===== 
 ===== Begin AccessibleText impl ===== 

Returns whether source and destination components have the
same window ancestor
"
	end

	operation 10733826 "getIndexAtPoint"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Given a point in local coordinates, return the zero-based index
of the character under that Point.  If the point is invalid,
this method returns -1.

@param p the Point in local coordinates
@return the zero-based index of the character under Point p; if
Point is invalid return -1.
"
	end

	operation 10733954 "getCharacterBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines the bounding box of the character at the given
index into the string.  The bounds are returned in local
coordinates.  If the index is invalid an empty rectangle is
returned.

@param i the index into the String
@return the screen coordinates of the character's bounding box,
if index is invalid return an empty rectangle.
"
	end

	operation 10734082 "getCharCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of characters (valid indicies)

@return the number of characters
"
	end

	operation 10734210 "getCaretPosition"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the zero-based offset of the caret.

Note: That to the right of the caret will have the same index
value as the offset (the caret is between two characters).
@return the zero-based offset of the caret.
"
	end

	operation 10734338 "getAtIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String at a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence
"
	end

	operation 10734466 "getAfterIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String after a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence
"
	end

	operation 10734594 "getBeforeIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String before a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence
"
	end

	operation 10734722 "getCharacterAttribute"
	  public return_type class_ref 361218 // AttributeSet
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AttributeSet for a given character at a given index

@param i the zero-based index into the text
@return the AttributeSet of the character
"
	end

	operation 10734850 "getSelectionStart"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the start offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the start of the selection
"
	end

	operation 10734978 "getSelectionEnd"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the end offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the end of the selection
"
	end

	operation 10735106 "getSelectedText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the portion of the text that is selected.

@return the String portion of the text that is selected
"
	end

	operation 10735234 "setTextContents"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== End AccessibleText impl ===== 
 ===== Begin AccessibleEditableText impl ===== 

Sets the text contents to the specified string.

@param s the string to set the text contents
"
	end

	operation 10735362 "insertTextAtIndex"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Inserts the specified string at the given index/

@param index the index in the text where the string will
be inserted
@param s the string to insert in the text
"
	end

	operation 10735490 "getTextRange"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "startIndex" explicit_type "int"
	    param in name "endIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the text string between two indices.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
@return the text string between the indices
"
	end

	operation 10735618 "delete"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "startIndex" explicit_type "int"
	    param in name "endIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Deletes the text between two indices

@param startIndex the starting index in the text
@param endIndex the ending index in the text
"
	end

	operation 10735746 "cut"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "startIndex" explicit_type "int"
	    param in name "endIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cuts the text between two indices into the system clipboard.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
"
	end

	operation 10735874 "paste"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "startIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pastes the text from the system clipboard into the text
starting at the specified index.

@param startIndex the starting index in the text
"
	end

	operation 10736002 "replaceText"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "startIndex" explicit_type "int"
	    param in name "endIndex" explicit_type "int"
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Replaces the text between two indices with the specified
string.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
@param s the string to replace the text between two indices
"
	end

	operation 10736130 "selectText"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "startIndex" explicit_type "int"
	    param in name "endIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Selects the text between two indices.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
"
	end

	operation 10736258 "setAttributes"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "startIndex" explicit_type "int"
	    param in name "endIndex" explicit_type "int"
	    param inout name "as" type class_ref 361218 // AttributeSet
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets attributes for the text between two indices.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
@param as the attribute set
@see AttributeSet
"
	end
      end
    end

    class 360066 "JTextField"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JTextField</code> is a lightweight component that allows the editing
of a single line of text.
For information on and examples of using text fields,
see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html\">How to Use Text Fields</a>
in <em>The Java Tutorial.</em>

<p>
<code>JTextField</code> is intended to be source-compatible
with <code>java.awt.TextField</code> where it is reasonable to do so.  This
component has capabilities not found in the <code>java.awt.TextField</code>
class.  The superclass should be consulted for additional capabilities.
<p>
<code>JTextField</code> has a method to establish the string used as the
command string for the action event that gets fired.  The
<code>java.awt.TextField</code> used the text of the field as the command
string for the <code>ActionEvent</code>.
<code>JTextField</code> will use the command
string set with the <code>setActionCommand</code> method if not <code>null</code>,
otherwise it will use the text of the field as a compatibility with
<code>java.awt.TextField</code>.
<p>
The method <code>setEchoChar</code> and <code>getEchoChar</code>
are not provided directly to avoid a new implementation of a
pluggable look-and-feel inadvertently exposing password characters.
To provide password-like services a separate class <code>JPasswordField</code>
extends <code>JTextField</code> to provide this service with an independently
pluggable look-and-feel.
<p>
The <code>java.awt.TextField</code> could be monitored for changes by adding
a <code>TextListener</code> for <code>TextEvent</code>'s.
In the <code>JTextComponent</code> based
components, changes are broadcasted from the model via a
<code>DocumentEvent</code> to <code>DocumentListeners</code>.
The <code>DocumentEvent</code> gives
the location of the change and the kind of change if desired.
The code fragment might look something like:
<pre><code>
&nbsp;   DocumentListener myListener = ??;
&nbsp;   JTextField myArea = ??;
&nbsp;   myArea.getDocument().addDocumentListener(myListener);
</code></pre>
<p>
The horizontal alignment of <code>JTextField</code> can be set to be left
justified, leading justified, centered, right justified or trailing justified.
Right/trailing justification is useful if the required size
of the field text is smaller than the size allocated to it.
This is determined by the <code>setHorizontalAlignment</code>
and <code>getHorizontalAlignment</code> methods.  The default
is to be leading justified.
<p>
How the text field consumes VK_ENTER events depends
on whether the text field has any action listeners.
If so, then VK_ENTER results in the listeners
getting an ActionEvent,
and the VK_ENTER event is consumed.
This is compatible with how AWT text fields handle VK_ENTER events.
If the text field has no action listeners, then as of v 1.3 the VK_ENTER
event is not consumed.  Instead, the bindings of ancestor components
are processed, which enables the default button feature of
JFC/Swing to work.
<p>
Customized fields can easily be created by extending the model and
changing the default model provided.  For example, the following piece
of code will create a field that holds only upper case characters.  It
will work even if text is pasted into from the clipboard or it is altered via
programmatic changes.
<pre><code>

&nbsp;public class UpperCaseField extends JTextField {
&nbsp;
&nbsp;    public UpperCaseField(int cols) {
&nbsp;        super(cols);
&nbsp;    }
&nbsp;
&nbsp;    protected Document createDefaultModel() {
&nbsp;        return new UpperCaseDocument();
&nbsp;    }
&nbsp;
&nbsp;    static class UpperCaseDocument extends PlainDocument {
&nbsp;
&nbsp;        public void insertString(int offs, String str, AttributeSet a)
&nbsp;            throws BadLocationException {
&nbsp;
&nbsp;            if (str == null) {
&nbsp;                return;
&nbsp;            }
&nbsp;            char[] upper = str.toCharArray();
&nbsp;            for (int i = 0; i &lt; upper.length; i++) {
&nbsp;                upper[i] = Character.toUpperCase(upper[i]);
&nbsp;            }
&nbsp;            super.insertString(offs, new String(upper), a);
&nbsp;        }
&nbsp;    }
&nbsp;}

</code></pre>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A component which allows for the editing of a single line of text.

@author  Timothy Prinzing
@see #setActionCommand
@see JPasswordField
@see #addActionListener
"
      classrelation 813698 // <generalisation>
	relation 813698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 813698 // <generalisation>
	  b parent class_ref 371074 // JTextComponent
      end

      classrelation 813826 // <realization>
	relation 813826 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 813826 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      operation 2548738 "JTextField"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>TextField</code>.  A default model is created,
the initial string is <code>null</code>,
and the number of columns is set to 0.
"
      end

      operation 2548866 "JTextField"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>TextField</code> initialized with the
specified text. A default model is created and the number of
columns is 0.

@param text the text to be displayed, or <code>null</code>
"
      end

      operation 2548994 "JTextField"
	public explicit_return_type ""
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty <code>TextField</code> with the specified
number of columns.
A default model is created and the initial string is set to
<code>null</code>.

@param columns  the number of columns to use to calculate
  the preferred width; if columns is set to zero, the
  preferred width will be whatever naturally results from
  the component implementation
"
      end

      operation 2549122 "JTextField"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>TextField</code> initialized with the
specified text and columns.  A default model is created.

@param text the text to be displayed, or <code>null</code>
@param columns  the number of columns to use to calculate
  the preferred width; if columns is set to zero, the
  preferred width will be whatever naturally results from
  the component implementation
"
      end

      operation 2549250 "JTextField"
	public explicit_return_type ""
	nparams 3
	  param inout name "doc" type class_ref 405378 // Document
	  param inout name "text" type class_ref 128130 // String
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JTextField</code> that uses the given text
storage model and the given number of columns.
This is the constructor through which the other constructors feed.
If the document is <code>null</code>, a default model is created.

@param doc  the text storage to use; if this is <code>null</code>,
         a default will be provided by calling the
         <code>createDefaultModel</code> method
@param text  the initial string to display, or <code>null</code>
@param columns  the number of columns to use to calculate
  the preferred width &gt;= 0; if <code>columns</code>
  is set to zero, the preferred width will be whatever
  naturally results from the component implementation
@exception IllegalArgumentException if <code>columns</code> &lt; 0
"
      end

      operation 2549378 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class ID for a UI.

@return the string \"TextFieldUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 2549506 "setDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 405378 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the editor with a text document.
The currently registered factory is used to build a view for
the document, which gets displayed by the editor after revalidation.
A PropertyChange event (\"document\") is propagated to each listener.

@param doc  the document to display/edit
@see #getDocument
@beaninfo
 description: the text document model
       bound: true
      expert: true
"
      end

      operation 2549634 "isValidateRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Calls to <code>revalidate</code> that come from within the
textfield itself will
be handled by validating the textfield, unless the textfield
is contained within a <code>JViewport</code>,
in which case this returns false.

@return if the parent of this textfield is a <code>JViewPort</code>
         return false, otherwise return true

@see JComponent#revalidate
@see JComponent#isValidateRoot
@see java.awt.Container#isValidateRoot
"
      end

      operation 2549762 "getHorizontalAlignment"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the horizontal alignment of the text.
Valid keys are:
<ul>
<li><code>JTextField.LEFT</code>
<li><code>JTextField.CENTER</code>
<li><code>JTextField.RIGHT</code>
<li><code>JTextField.LEADING</code>
<li><code>JTextField.TRAILING</code>
</ul>

@return the horizontal alignment
"
      end

      operation 2549890 "setHorizontalAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal alignment of the text.
Valid keys are:
<ul>
<li><code>JTextField.LEFT</code>
<li><code>JTextField.CENTER</code>
<li><code>JTextField.RIGHT</code>
<li><code>JTextField.LEADING</code>
<li><code>JTextField.TRAILING</code>
</ul>
<code>invalidate</code> and <code>repaint</code> are called when the
alignment is set,
and a <code>PropertyChange</code> event (\"horizontalAlignment\") is fired.

@param alignment the alignment
@exception IllegalArgumentException if <code>alignment</code>
 is not a valid key
@beaninfo
  preferred: true
      bound: true
description: Set the field alignment to LEFT, CENTER, RIGHT,
             LEADING (the default) or TRAILING
       enum: LEFT JTextField.LEFT CENTER JTextField.CENTER RIGHT JTextField.RIGHT
             LEADING JTextField.LEADING TRAILING JTextField.TRAILING
"
      end

      operation 2550018 "createDefaultModel"
	protected return_type class_ref 405378 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the default implementation of the model
to be used at construction if one isn't explicitly
given.  An instance of <code>PlainDocument</code> is returned.

@return the default model implementation
"
      end

      operation 2550146 "getColumns"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of columns in this <code>TextField</code>.

@return the number of columns &gt;= 0
"
      end

      operation 2550274 "setColumns"
	public explicit_return_type "void"
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of columns in this <code>TextField</code>,
and then invalidate the layout.

@param columns the number of columns &gt;= 0
@exception IllegalArgumentException if <code>columns</code>
         is less than 0
@beaninfo
description: the number of columns preferred for display
"
      end

      operation 2550402 "getColumnWidth"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the column width.
The meaning of what a column is can be considered a fairly weak
notion for some fonts.  This method is used to define the width
of a column.  By default this is defined to be the width of the
character <em>m</em> for the font used.  This method can be
redefined to be some alternative amount

@return the column width &gt;= 1
"
      end

      operation 2550530 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size <code>Dimensions</code> needed for this
<code>TextField</code>.  If a non-zero number of columns has been
set, the width is set to the columns multiplied by
the column width.

@return the dimension of this textfield
"
      end

      operation 2550658 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current font.  This removes cached row height and column
width so the new font will be reflected.
<code>revalidate</code> is called after setting the font.

@param f the new font
"
      end

      operation 2550786 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified action listener to receive
action events from this textfield.

@param l the action listener to be added
"
      end

      operation 2550914 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified action listener so that it no longer
receives action events from this textfield.

@param l the action listener to be removed
"
      end

      operation 2551042 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ActionListener</code>s added
to this JTextField with addActionListener().

@return all of the <code>ActionListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2551170 "fireActionPerformed"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created.
The listener list is processed in last to
first order.
@see EventListenerList
"
      end

      operation 2551298 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "command" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the command string used for action events.

@param command the command string
"
      end

      classrelation 813954 // action (<unidirectional association>)
	relation 813954 --->
	  a role_name "action" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 813954 // action (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      classrelation 814082 // actionPropertyChangeListener (<unidirectional association>)
	relation 814082 --->
	  a role_name "actionPropertyChangeListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 814082 // actionPropertyChangeListener (<unidirectional association>)
	  b parent class_ref 347266 // PropertyChangeListener
      end

      operation 2551426 "setAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Action</code> for the <code>ActionEvent</code> source.
The new <code>Action</code> replaces
any previously set <code>Action</code> but does not affect
<code>ActionListeners</code> independently
added with <code>addActionListener</code>.
If the <code>Action</code> is already a registered
<code>ActionListener</code>
for the <code>ActionEvent</code> source, it is not re-registered.
<p>
Setting the <code>Action</code> results in immediately changing
all the properties described in <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a>.
Subsequently, the textfield's properties are automatically updated
as the <code>Action</code>'s properties change.
<p>
This method uses three other methods to set
and help track the <code>Action</code>'s property values.
It uses the <code>configurePropertiesFromAction</code> method
to immediately change the textfield's properties.
To track changes in the <code>Action</code>'s property values,
this method registers the <code>PropertyChangeListener</code>
returned by <code>createActionPropertyChangeListener</code>. The
default {@code PropertyChangeListener} invokes the
{@code actionPropertyChanged} method when a property in the
{@code Action} changes.

@param a the <code>Action</code> for the <code>JTextField</code>,
         or <code>null</code>
@since 1.3
@see Action
@see #getAction
@see #configurePropertiesFromAction
@see #createActionPropertyChangeListener
@see #actionPropertyChanged
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the Action instance connected with this ActionEvent source
"
      end

      operation 2551554 "isListener"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "c" type class_ref 130818 // Class
	  param inout name "a" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2551682 "getAction"
	public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently set <code>Action</code> for this
<code>ActionEvent</code> source, or <code>null</code>
if no <code>Action</code> is set.

@return the <code>Action</code> for this <code>ActionEvent</code> source,
         or <code>null</code>
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2551810 "configurePropertiesFromAction"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the properties on this textfield to match those in the specified
<code>Action</code>.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details as to which properties this sets.

@param a the <code>Action</code> from which to get the properties,
         or <code>null</code>
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2551938 "actionPropertyChanged"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "action" type class_ref 352258 // Action
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the textfield's state in response to property changes in
associated action. This method is invoked from the
{@code PropertyChangeListener} returned from
{@code createActionPropertyChangeListener}. Subclasses do not normally
need to invoke this. Subclasses that support additional {@code Action}
properties should override this and
{@code configurePropertiesFromAction}.
<p>
Refer to the table at <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for a list of
the properties this method sets.

@param action the <code>Action</code> associated with this textfield
@param propertyName the name of the property that changed
@since 1.6
@see Action
@see #configurePropertiesFromAction
"
      end

      operation 2552066 "setActionCommandFromAction"
	private explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2552194 "createActionPropertyChangeListener"
	protected return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a <code>PropertyChangeListener</code> that is
responsible for listening for changes from the specified
<code>Action</code> and updating the appropriate properties.
<p>
<b>Warning:</b> If you subclass this do not create an anonymous
inner class.  If you do the lifetime of the textfield will be tied to
that of the <code>Action</code>.

@param a the textfield's action
@since 1.3
@see Action
@see #setAction
"
      end

      class 429826 "TextFieldActionPropertyChangeListener"
	visibility private 
	nactuals 1
	actual class class_ref 391682 // ActionPropertyChangeListener
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 814210 // <realization>
	  relation 814210 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 814210 // <realization>
	    b parent class_ref 391682 // ActionPropertyChangeListener
	end

	operation 2552322 "TextFieldActionPropertyChangeListener"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "tf" type class_ref 360066 // JTextField
	    param inout name "a" type class_ref 352258 // Action
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2552450 "actionPropertyChanged"
	  protected explicit_return_type "void"
	  nparams 3
	    param inout name "textField" type class_ref 360066 // JTextField
	    param inout name "action" type class_ref 352258 // Action
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2552578 "getActions"
	public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the command list for the editor.  This is
the list of commands supported by the plugged-in UI
augmented by the collection of commands that the
editor itself supports.  These are useful for binding
to events, such as in a keymap.

@return the command list
"
      end

      operation 2552706 "postActionEvent"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes action events occurring on this textfield by
dispatching them to any registered <code>ActionListener</code> objects.
This is normally called by the controller registered with
textfield.
"
      end

      operation 2552834 "getHorizontalVisibility"
	public return_type class_ref 429954 // BoundedRangeModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Scrolling support -----------------------------------

Gets the visibility of the text field.  This can
be adjusted to change the location of the visible
area if the size of the field is greater than
the area that was allocated to the field.

<p>
The fields look-and-feel implementation manages
the values of the minimum, maximum, and extent
properties on the <code>BoundedRangeModel</code>.

@return the visibility
@see BoundedRangeModel
"
      end

      operation 2552962 "getScrollOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the scroll offset, in pixels.

@return the offset &gt;= 0
"
      end

      operation 2553090 "setScrollOffset"
	public explicit_return_type "void"
	nparams 1
	  param in name "scrollOffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the scroll offset, in pixels.

@param scrollOffset the offset &gt;= 0
"
      end

      operation 2553218 "scrollRectToVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scrolls the field left or right.

@param r the region to scroll
"
      end

      operation 2553346 "hasActionListener"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the receiver has an <code>ActionListener</code>
installed.
"
      end

      classrelation 814338 // notifyAction (<unidirectional association>)
	relation 814338 --->
	  a role_name "notifyAction" init_value " \"notify-field-accept\"" class_relation const_relation public
	    comment " --- variables -------------------------------------------

Name of the action to send notification that the
contents of the field have been accepted.  Typically
this is bound to a carriage-return.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 814338 // notifyAction (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 814466 // visibility (<unidirectional association>)
	relation 814466 --->
	  a role_name "visibility" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 814466 // visibility (<unidirectional association>)
	  b parent class_ref 429954 // BoundedRangeModel
      end

      attribute 541442 "horizontalAlignment"
	private explicit_type "int"
	init_value " LEADING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 541570 "columns"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 541698 "columnWidth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 814594 // command (<unidirectional association>)
	relation 814594 --->
	  a role_name "command" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 814594 // command (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 814722 // defaultActions (<unidirectional association>)
	relation 814722 --->
	  a role_name "defaultActions" multiplicity "[]" init_value " {
        new NotifyAction()
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 814722 // defaultActions (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      classrelation 814850 // uiClassID (<unidirectional association>)
	relation 814850 --->
	  a role_name "uiClassID" init_value " \"TextFieldUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 814850 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 430082 "NotifyAction"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 814978 // <generalisation>
	  relation 814978 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 814978 // <generalisation>
	    b parent class_ref 406658 // TextAction
	end

	operation 2553474 "NotifyAction"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2553602 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2553730 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 430210 "ScrollRepainter"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 815106 // <realization>
	  relation 815106 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 815106 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 815234 // <realization>
	  relation 815234 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 815234 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 2553858 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2553986 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 2554114 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JTextField</code>.
This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JTextField</code>
"
      end

      operation 2554242 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>JTextField</code>. For <code>JTextFields</code>,
the <code>AccessibleContext</code> takes the form of an
<code>AccessibleJTextField</code>.
A new <code>AccessibleJTextField</code> instance is created
if necessary.

@return an <code>AccessibleJTextField</code> that serves as the
        <code>AccessibleContext</code> of this <code>JTextField</code>
"
      end

      class 430338 "AccessibleJTextField"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 815362 // <generalisation>
	  relation 815362 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 815362 // <generalisation>
	    b parent class_ref 428802 // AccessibleJTextComponent
	end

	operation 2554370 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.

@return an instance of AccessibleStateSet describing the states
of the object
@see AccessibleState
"
	end
      end
    end

    class 360322 "AbstractAction"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides default implementations for the JFC <code>Action</code>
interface. Standard behaviors like the get and set methods for
<code>Action</code> object properties (icon, text, and enabled) are defined
here. The developer need only subclass this abstract class and
define the <code>actionPerformed</code> method.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Georges Saab
@see Action
"
      classrelation 626690 // <realization>
	relation 626690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 626690 // <realization>
	  b parent class_ref 352258 // Action
      end

      classrelation 626818 // <realization>
	relation 626818 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 626818 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 626946 // <realization>
	relation 626946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 626946 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 627074 // RECONFIGURE_ON_NULL (<unidirectional association>)
	relation 627074 --->
	  a role_name "RECONFIGURE_ON_NULL" class_relation private
	    comment "
Whether or not actions should reconfigure all properties on null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627074 // RECONFIGURE_ON_NULL (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      attribute 465026 "enabled"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies whether action is enabled; the default is true.

"
      end

      classrelation 627202 // arrayTable (<unidirectional association>)
	relation 627202 --->
	  a role_name "arrayTable" private
	    comment "
Contains the array of key bindings.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627202 // arrayTable (<unidirectional association>)
	  b parent class_ref 356866 // ArrayTable
      end

      operation 2017922 "shouldReconfigure"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether or not to reconfigure all action properties from the
specified event.
"
      end

      operation 2018050 "setEnabledFromAction"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the enabled state of a component from an Action.

@param c the Component to set the enabled state on
@param a the Action to set the enabled state from, may be null
"
      end

      operation 2018178 "setToolTipTextFromAction"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the tooltip text of a component from an Action.

@param c the Component to set the tooltip text on
@param a the Action to set the tooltip text from, may be null
"
      end

      operation 2018306 "hasSelectedKey"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2018434 "isSelected"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2018562 "AbstractAction"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code Action}.
"
      end

      operation 2018690 "AbstractAction"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code Action} with the specified name.

@param name the name ({@code Action.NAME}) for the action; a
       value of {@code null} is ignored
"
      end

      operation 2018818 "AbstractAction"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code Action} with the specified name and small icon.

@param name the name ({@code Action.NAME}) for the action; a
       value of {@code null} is ignored
@param icon the small icon ({@code Action.SMALL_ICON}) for the action; a
       value of {@code null} is ignored
"
      end

      operation 2018946 "getValue"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>Object</code> associated with the specified key.

@param key a string containing the specified <code>key</code>
@return the binding <code>Object</code> stored with this key; if there
         are no keys, it will return <code>null</code>
@see Action#getValue
"
      end

      operation 2019074 "putValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Value</code> associated with the specified key.

@param key  the <code>String</code> that identifies the stored object
@param newValue the <code>Object</code> to store using this key
@see Action#putValue
"
      end

      operation 2019202 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the action is enabled.

@return true if the action is enabled, false otherwise
@see Action#isEnabled
"
      end

      operation 2019330 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the {@code Action} is enabled. The default is {@code true}.

@param newValue  {@code true} to enable the action, {@code false} to
                 disable it
@see Action#setEnabled
"
      end

      operation 2019458 "getKeys"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Object</code>s which are keys for
which values have been set for this <code>AbstractAction</code>,
or <code>null</code> if no keys have values set.
@return an array of key objects, or <code>null</code> if no
                 keys have values set
@since 1.3
"
      end

      classrelation 627330 // changeSupport (<unidirectional association>)
	relation 627330 --->
	  a role_name "changeSupport" protected
	    comment "
If any <code>PropertyChangeListeners</code> have been registered, the
<code>changeSupport</code> field describes them.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627330 // changeSupport (<unidirectional association>)
	  b parent class_ref 360578 // SwingPropertyChangeSupport
      end

      operation 2019586 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supports reporting bound property changes.  This method can be called
when a bound property has changed and it will send the appropriate
<code>PropertyChangeEvent</code> to any registered
<code>PropertyChangeListeners</code>.
"
      end

      operation 2019714 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>PropertyChangeListener</code> to the listener list.
The listener is registered for all properties.
<p>
A <code>PropertyChangeEvent</code> will get fired in response to setting
a bound property, e.g. <code>setFont</code>, <code>setBackground</code>,
or <code>setForeground</code>.
Note that if the current component is inheriting its foreground,
background, or font from its container, then no event will be
fired in response to a change in the inherited property.

@param listener  The <code>PropertyChangeListener</code> to be added

@see Action#addPropertyChangeListener
"
      end

      operation 2019842 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PropertyChangeListener</code> from the listener list.
This removes a <code>PropertyChangeListener</code> that was registered
for all properties.

@param listener  the <code>PropertyChangeListener</code> to be removed

@see Action#removePropertyChangeListener
"
      end

      operation 2019970 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>PropertyChangeListener</code>s added
to this AbstractAction with addPropertyChangeListener().

@return all of the <code>PropertyChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2020098 "clone"
	protected return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones the abstract action. This gives the clone
its own copy of the key/value list,
which is not handled for you by <code>Object.clone()</code>.
"
      end

      operation 2020226 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2020354 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 360834 "SwingConstants"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A collection of constants generally used for positioning and orienting
components on the screen.

@author Jeff Dinkins
@author Ralph Kar (orientation support)
"
      attribute 465282 "CENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The central position in an area. Used for
both compass-direction constants (NORTH, etc.)
and box-orientation constants (TOP, etc.).

"
      end

      attribute 465410 "TOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Box-orientation constant used to specify locations in a box.


Box-orientation constant used to specify the top of a box.

"
      end

      attribute 465538 "LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Box-orientation constant used to specify the left side of a box.

"
      end

      attribute 465666 "BOTTOM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Box-orientation constant used to specify the bottom of a box.

"
      end

      attribute 465794 "RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Box-orientation constant used to specify the right side of a box.

"
      end

      attribute 465922 "NORTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compass-direction constants used to specify a position.


Compass-direction North (up).

"
      end

      attribute 466050 "NORTH_EAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compass-direction north-east (upper right).

"
      end

      attribute 466178 "EAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compass-direction east (right).

"
      end

      attribute 466306 "SOUTH_EAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compass-direction south-east (lower right).

"
      end

      attribute 466434 "SOUTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compass-direction south (down).

"
      end

      attribute 466562 "SOUTH_WEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compass-direction south-west (lower left).

"
      end

      attribute 466690 "WEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compass-direction west (left).

"
      end

      attribute 466818 "NORTH_WEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Compass-direction north west (upper left).

"
      end

      attribute 466946 "HORIZONTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These constants specify a horizontal or
 vertical orientation. For example, they are
 used by scrollbars and sliders.

 Horizontal orientation. Used for scrollbars and sliders. 
"
      end

      attribute 467074 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Vertical orientation. Used for scrollbars and sliders. 
"
      end

      attribute 467202 "LEADING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants for orientation support, since some languages are
 left-to-right oriented and some are right-to-left oriented.
 This orientation is currently used by buttons and labels.


Identifies the leading edge of text for use with left-to-right
and right-to-left languages. Used by buttons and labels.

"
      end

      attribute 467330 "TRAILING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the trailing edge of text for use with left-to-right
and right-to-left languages. Used by buttons and labels.

"
      end

      attribute 467458 "NEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the next direction in a sequence.

@since 1.4

"
      end

      attribute 467586 "PREVIOUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the previous direction in a sequence.

@since 1.4

"
      end
    end

    class 363650 "UIDefaults"
      visibility public 
      nactuals 2
      actual class class_ref 137090 // Hashtable
        rank 0 explicit_value ""
      actual class class_ref 137090 // Hashtable
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A table of defaults for Swing components.  Applications can set/get
default values via the <code>UIManager</code>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see UIManager
@author Hans Muller
"
      class 374530 "LazyValue"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 2129538 "createValue"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "table" type class_ref 363650 // UIDefaults
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates the actual value retrieved from the <code>UIDefaults</code>
table. When an object that implements this interface is
retrieved from the table, this method is used to create
the real value, which is then stored in the table and
returned to the calling method.

@param table  a <code>UIDefaults</code> table
@return the created <code>Object</code>
"
	end
      end

      classrelation 667010 // <realization>
	relation 667010 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 667010 // <realization>
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 667138 // PENDING (<unidirectional association>)
	relation 667138 --->
	  a role_name "PENDING" init_value " new Object()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 667138 // PENDING (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 667266 // changeSupport (<unidirectional association>)
	relation 667266 --->
	  a role_name "changeSupport" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 667266 // changeSupport (<unidirectional association>)
	  b parent class_ref 360578 // SwingPropertyChangeSupport
      end

      classrelation 667394 // resourceBundles (<unidirectional association>)
	relation 667394 --->
	  a role_name "resourceBundles" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 667394 // resourceBundles (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 667522 // defaultLocale (<unidirectional association>)
	relation 667522 --->
	  a role_name "defaultLocale" init_value " Locale.getDefault()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 667522 // defaultLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 667650 // resourceCache (<unidirectional association>)
	relation 667650 --->
	  a role_name "resourceCache" private
	    comment "
Maps from a Locale to a cached Map of the ResourceBundle. This is done
so as to avoid an exception being thrown when a value is asked for.
Access to this should be done while holding a lock on the
UIDefaults, eg synchronized(this).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Locale, Map<String, Object>> ${name}${value};
"
	    classrelation_ref 667650 // resourceCache (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 2124418 "UIDefaults"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty defaults table.
"
      end

      operation 2124546 "UIDefaults"
	public explicit_return_type ""
	nparams 2
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty defaults table with the specified initial capacity and
load factor.

@param initialCapacity   the initial capacity of the defaults table
@param loadFactor        the load factor of the defaults table
@see java.util.Hashtable
@since 1.6
"
      end

      operation 2124674 "UIDefaults"
	public explicit_return_type ""
	nparams 1
	  param inout name "keyValueList" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a defaults table initialized with the specified
key/value pairs.  For example:
<pre>
Object[] uiDefaults = {
\"Font\", new Font(\"Dialog\", Font.BOLD, 12),
\"Color\", Color.red,
\"five\", new Integer(5)
}
UIDefaults myDefaults = new UIDefaults(uiDefaults);
</pre>
@param keyValueList  an array of objects containing the key/value
         pairs
"
      end

      operation 2124802 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for key.  If the value is a
<code>UIDefaults.LazyValue</code> then the real
value is computed with <code>LazyValue.createValue()</code>,
the table entry is replaced, and the real value is returned.
If the value is an <code>UIDefaults.ActiveValue</code>
the table entry is not replaced - the value is computed
with <code>ActiveValue.createValue()</code> for each
<code>get()</code> call.

If the key is not found in the table then it is searched for in the list
of resource bundles maintained by this object.  The resource bundles are
searched most recently added first using the locale returned by
<code>getDefaultLocale</code>.  <code>LazyValues</code> and
<code>ActiveValues</code> are not supported in the resource bundles.


@param key the desired key
@return the value for <code>key</code>
@see LazyValue
@see ActiveValue
@see java.util.Hashtable#get
@see #getDefaultLocale
@see #addResourceBundle
@since 1.4
"
      end

      operation 2124930 "getFromHashtable"
	private return_type class_ref 129538 // Object
	nparams 1
	  param in name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks up up the given key in our Hashtable and resolves LazyValues
or ActiveValues.
"
      end

      operation 2125058 "get"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for key associated with the given locale.
If the value is a <code>UIDefaults.LazyValue</code> then the real
value is computed with <code>LazyValue.createValue()</code>,
the table entry is replaced, and the real value is returned.
If the value is an <code>UIDefaults.ActiveValue</code>
the table entry is not replaced - the value is computed
with <code>ActiveValue.createValue()</code> for each
<code>get()</code> call.

If the key is not found in the table then it is searched for in the list
of resource bundles maintained by this object.  The resource bundles are
searched most recently added first using the given locale.
<code>LazyValues</code> and <code>ActiveValues</code> are not supported
in the resource bundles.

@param key the desired key
@param l the desired <code>locale</code>
@return the value for <code>key</code>
@see LazyValue
@see ActiveValue
@see java.util.Hashtable#get
@see #addResourceBundle
@since 1.4
"
      end

      operation 2125186 "getFromResourceBundle"
	private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks up given key in our resource bundles.
"
      end

      operation 2125314 "getResourceCache"
	private return_type class_ref 130178 // Map
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Map of the known resources for the given locale.
"
      end

      operation 2125442 "put"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of <code>key</code> to <code>value</code> for all locales.
If <code>key</code> is a string and the new value isn't
equal to the old one, fire a <code>PropertyChangeEvent</code>.
If value is <code>null</code>, the key is removed from the table.

@param key    the unique <code>Object</code> who's value will be used
         to retrieve the data value associated with it
@param value  the new <code>Object</code> to store as data under
         that key
@return the previous <code>Object</code> value, or <code>null</code>
@see #putDefaults
@see java.util.Hashtable#put
"
      end

      operation 2125570 "putDefaults"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keyValueList" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts all of the key/value pairs in the database and
unconditionally generates one <code>PropertyChangeEvent</code>.
The events oldValue and newValue will be <code>null</code> and its
<code>propertyName</code> will be \"UIDefaults\".  The key/value pairs are
added for all locales.

@param keyValueList  an array of key/value pairs
@see #put
@see java.util.Hashtable#put
"
      end

      operation 2125698 "getFont"
	public return_type class_ref 340354 // Font
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is a <code>Font</code> return it,
otherwise return <code>null</code>.
@param key the desired key
@return if the value for <code>key</code> is a <code>Font</code>,
         return the <code>Font</code> object; otherwise return
         <code>null</code>
"
      end

      operation 2125826 "getFont"
	public return_type class_ref 340354 // Font
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is a <code>Font</code> return it, otherwise return <code>null</code>.
@param key the desired key
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
         is a <code>Font</code>,
         return the <code>Font</code> object; otherwise return
         <code>null</code>
@since 1.4
"
      end

      operation 2125954 "getColor"
	public return_type class_ref 323458 // Color
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is a <code>Color</code> return it,
otherwise return <code>null</code>.
@param key the desired key
@return if the value for <code>key</code> is a <code>Color</code>,
         return the <code>Color</code> object; otherwise return
         <code>null</code>
"
      end

      operation 2126082 "getColor"
	public return_type class_ref 323458 // Color
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is a <code>Color</code> return it, otherwise return <code>null</code>.
@param key the desired key
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
         is a <code>Color</code>,
         return the <code>Color</code> object; otherwise return
         <code>null</code>
@since 1.4
"
      end

      operation 2126210 "getIcon"
	public return_type class_ref 352642 // Icon
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is an <code>Icon</code> return it,
otherwise return <code>null</code>.
@param key the desired key
@return if the value for <code>key</code> is an <code>Icon</code>,
         return the <code>Icon</code> object; otherwise return
         <code>null</code>
"
      end

      operation 2126338 "getIcon"
	public return_type class_ref 352642 // Icon
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is an <code>Icon</code> return it, otherwise return <code>null</code>.
@param key the desired key
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
         is an <code>Icon</code>,
         return the <code>Icon</code> object; otherwise return
         <code>null</code>
@since 1.4
"
      end

      operation 2126466 "getBorder"
	public return_type class_ref 357122 // Border
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is a <code>Border</code> return it,
otherwise return <code>null</code>.
@param key the desired key
@return if the value for <code>key</code> is a <code>Border</code>,
         return the <code>Border</code> object; otherwise return
         <code>null</code>
"
      end

      operation 2126594 "getBorder"
	public return_type class_ref 357122 // Border
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is a <code>Border</code> return it, otherwise return <code>null</code>.
@param key the desired key
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
         is a <code>Border</code>,
         return the <code>Border</code> object; otherwise return
         <code>null</code>
@since 1.4
"
      end

      operation 2126722 "getString"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is a <code>String</code> return it,
otherwise return <code>null</code>.
@param key the desired key
@return if the value for <code>key</code> is a <code>String</code>,
         return the <code>String</code> object; otherwise return
         <code>null</code>
"
      end

      operation 2126850 "getString"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is a <code>String</code> return it, otherwise return <code>null</code>.
@param key the desired key
@param l the desired <code>Locale</code>
@return if the value for <code>key</code> for the given
         <code>Locale</code> is a <code>String</code>,
         return the <code>String</code> object; otherwise return
         <code>null</code>
@since 1.4
"
      end

      operation 2126978 "getInt"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is an <code>Integer</code> return its
integer value, otherwise return 0.
@param key the desired key
@return if the value for <code>key</code> is an <code>Integer</code>,
         return its value, otherwise return 0
"
      end

      operation 2127106 "getInt"
	public explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is an <code>Integer</code> return its integer value, otherwise return 0.
@param key the desired key
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
         is an <code>Integer</code>,
         return its value, otherwise return 0
@since 1.4
"
      end

      operation 2127234 "getBoolean"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is boolean, return the
boolean value, otherwise return false.

@param key an <code>Object</code> specifying the key for the desired boolean value
@return if the value of <code>key</code> is boolean, return the
        boolean value, otherwise return false.
@since 1.4
"
      end

      operation 2127362 "getBoolean"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is boolean, return the boolean value, otherwise return false.

@param key an <code>Object</code> specifying the key for the desired boolean value
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
        is boolean, return the
        boolean value, otherwise return false.
@since 1.4
"
      end

      operation 2127490 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is an <code>Insets</code> return it,
otherwise return <code>null</code>.
@param key the desired key
@return if the value for <code>key</code> is an <code>Insets</code>,
         return the <code>Insets</code> object; otherwise return
         <code>null</code>
"
      end

      operation 2127618 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is an <code>Insets</code> return it, otherwise return <code>null</code>.
@param key the desired key
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
         is an <code>Insets</code>,
         return the <code>Insets</code> object; otherwise return
         <code>null</code>
@since 1.4
"
      end

      operation 2127746 "getDimension"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> is a <code>Dimension</code> return it,
otherwise return <code>null</code>.
@param key the desired key
@return if the value for <code>key</code> is a <code>Dimension</code>,
         return the <code>Dimension</code> object; otherwise return
         <code>null</code>
"
      end

      operation 2127874 "getDimension"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value of <code>key</code> for the given <code>Locale</code>
is a <code>Dimension</code> return it, otherwise return <code>null</code>.
@param key the desired key
@param l the desired locale
@return if the value for <code>key</code> and <code>Locale</code>
         is a <code>Dimension</code>,
         return the <code>Dimension</code> object; otherwise return
         <code>null</code>
@since 1.4
"
      end

      operation 2128002 "getUIClass"
	public return_type class_ref 130818 // Class
	nparams 2
	  param inout name "uiClassID" type class_ref 128130 // String
	  param inout name "uiClassLoader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends ComponentUI> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value of <code>get(uidClassID)</code> must be the
<code>String</code> name of a
class that implements the corresponding <code>ComponentUI</code>
class.  If the class hasn't been loaded before, this method looks
up the class with <code>uiClassLoader.loadClass()</code> if a non
<code>null</code>
class loader is provided, <code>classForName()</code> otherwise.
<p>
If a mapping for <code>uiClassID</code> exists or if the specified
class can't be found, return <code>null</code>.
<p>
This method is used by <code>getUI</code>, it's usually
not necessary to call it directly.

@param uiClassID  a string containing the class ID
@param uiClassLoader the object which will load the class
@return the value of <code>Class.forName(get(uidClassID))</code>
@see #getUI
"
      end

      operation 2128130 "getUIClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "uiClassID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends ComponentUI> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F class that renders this component.

@param uiClassID a string containing the class ID
@return the Class object returned by
         <code>getUIClass(uiClassID, null)</code>
"
      end

      operation 2128258 "getUIError"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If <code>getUI()</code> fails for any reason,
it calls this method before returning <code>null</code>.
Subclasses may choose to do more or less here.

@param msg message string to print
@see #getUI
"
      end

      operation 2128386 "getUI"
	public return_type class_ref 356738 // ComponentUI
	nparams 1
	  param inout name "target" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>ComponentUI</code> implementation for the
specified component.  In other words create the look
and feel specific delegate object for <code>target</code>.
This is done in two steps:
<ul>
<li> Look up the name of the <code>ComponentUI</code> implementation
class under the value returned by <code>target.getUIClassID()</code>.
<li> Use the implementation classes static <code>createUI()</code>
method to construct a look and feel delegate.
</ul>
@param target  the <code>JComponent</code> which needs a UI
@return the <code>ComponentUI</code> object
"
      end

      operation 2128514 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>PropertyChangeListener</code> to the listener list.
The listener is registered for all properties.
<p>
A <code>PropertyChangeEvent</code> will get fired whenever a default
is changed.

@param listener  the <code>PropertyChangeListener</code> to be added
@see java.beans.PropertyChangeSupport
"
      end

      operation 2128642 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PropertyChangeListener</code> from the listener list.
This removes a <code>PropertyChangeListener</code> that was registered
for all properties.

@param listener  the <code>PropertyChangeListener</code> to be removed
@see java.beans.PropertyChangeSupport
"
      end

      operation 2128770 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>PropertyChangeListener</code>s added
to this UIDefaults with addPropertyChangeListener().

@return all of the <code>PropertyChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2128898 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for reporting bound property changes.  If oldValue and
newValue are not equal and the <code>PropertyChangeEvent</code>x
listener list isn't empty, then fire a
<code>PropertyChange</code> event to each listener.

@param propertyName  the programmatic name of the property
         that was changed
@param oldValue  the old value of the property
@param newValue  the new value of the property
@see java.beans.PropertyChangeSupport
"
      end

      operation 2129026 "addResourceBundle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bundleName" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a resource bundle to the list of resource bundles that are
searched for localized values.  Resource bundles are searched in the
reverse order they were added.  In other words, the most recently added
bundle is searched first.

@param bundleName  the base name of the resource bundle to be added
@see java.util.ResourceBundle
@see #removeResourceBundle
@since 1.4
"
      end

      operation 2129154 "removeResourceBundle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bundleName" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a resource bundle from the list of resource bundles that are
searched for localized defaults.

@param bundleName  the base name of the resource bundle to be removed
@see java.util.ResourceBundle
@see #addResourceBundle
@since 1.4
"
      end

      operation 2129282 "setDefaultLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default locale.  The default locale is used in retrieving
localized values via <code>get</code> methods that do not take a
locale argument.  As of release 1.4, Swing UI objects should retrieve
localized values using the locale of their component rather than the
default locale.  The default locale exists to provide compatibility with
pre 1.4 behaviour.

@param l the new default locale
@see #getDefaultLocale
@see #get(Object)
@see #get(Object,Locale)
@since 1.4
"
      end

      operation 2129410 "getDefaultLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default locale.  The default locale is used in retrieving
localized values via <code>get</code> methods that do not take a
locale argument.  As of release 1.4, Swing UI objects should retrieve
localized values using the locale of their component rather than the
default locale.  The default locale exists to provide compatibility with
pre 1.4 behaviour.

@return the default locale
@see #setDefaultLocale
@see #get(Object)
@see #get(Object,Locale)
@since 1.4
"
      end

      class 374658 "ActiveValue"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 2129666 "createValue"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "table" type class_ref 363650 // UIDefaults
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates the value retrieved from the <code>UIDefaults</code> table.
The object is created each time it is accessed.

@param table  a <code>UIDefaults</code> table
@return the created <code>Object</code>
"
	end
      end

      class 374786 "ProxyLazyValue"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 667778 // <realization>
	  relation 667778 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 667778 // <realization>
	    b parent class_ref 374530 // LazyValue
	end

	classrelation 667906 // acc (<unidirectional association>)
	  relation 667906 --->
	    a role_name "acc" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 667906 // acc (<unidirectional association>)
	    b parent class_ref 129154 // AccessControlContext
	end

	classrelation 668034 // className (<unidirectional association>)
	  relation 668034 --->
	    a role_name "className" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 668034 // className (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 668162 // methodName (<unidirectional association>)
	  relation 668162 --->
	    a role_name "methodName" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 668162 // methodName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 668290 // args (<unidirectional association>)
	  relation 668290 --->
	    a role_name "args" multiplicity "[]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 668290 // args (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 2129794 "ProxyLazyValue"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>LazyValue</code> which will construct an instance
when asked.

@param c    a <code>String</code> specifying the classname
            of the instance to be created on demand
"
	end

	operation 2129922 "ProxyLazyValue"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 128130 // String
	    param inout name "m" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>LazyValue</code> which will construct an instance
when asked.

@param c    a <code>String</code> specifying the classname of
             the class
             containing a static method to be called for
             instance creation
@param m    a <code>String</code> specifying the static
             method to be called on class c
"
	end

	operation 2130050 "ProxyLazyValue"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 128130 // String
	    param inout name "o" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>LazyValue</code> which will construct an instance
when asked.

@param c    a <code>String</code> specifying the classname
             of the instance to be created on demand
@param o    an array of <code>Objects</code> to be passed as
             paramaters to the constructor in class c
"
	end

	operation 2130178 "ProxyLazyValue"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "c" type class_ref 128130 // String
	    param inout name "m" type class_ref 128130 // String
	    param inout name "o" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>LazyValue</code> which will construct an instance
when asked.

@param c    a <code>String</code> specifying the classname
             of the class
             containing a static method to be called for
             instance creation.
@param m    a <code>String</code> specifying the static method
             to be called on class c
@param o    an array of <code>Objects</code> to be passed as
             paramaters to the static method in class c
"
	end

	operation 2130306 "createValue"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param in name "table" type class_ref 363650 // UIDefaults
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates the value retrieved from the <code>UIDefaults</code> table.
The object is created each time it is accessed.

@param table  a <code>UIDefaults</code> table
@return the created <code>Object</code>
"
	end

	operation 2130434 "getClassArray"
	  private return_type class_ref 130818 // Class
	  nparams 1
	    param inout name "args" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Coerce the array of class types provided into one which
looks the way the Reflection APIs expect.  This is done
by substituting primitive types for their Object counterparts,
and superclasses for subclasses used to add the
<code>UIResource</code> tag.
"
	end

	operation 2130562 "printArgs"
	  private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "array" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 374914 "LazyInputMap"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 668418 // <realization>
	  relation 668418 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 668418 // <realization>
	    b parent class_ref 374530 // LazyValue
	end

	classrelation 668546 // bindings (<unidirectional association>)
	  relation 668546 --->
	    a role_name "bindings" multiplicity "[]" private
	      comment " Key bindings are registered under. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 668546 // bindings (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 2130690 "LazyInputMap"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "bindings" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2130818 "createValue"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "table" type class_ref 363650 // UIDefaults
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an <code>InputMap</code> with the bindings that are
passed in.

@param table a <code>UIDefaults</code> table
@return the <code>InputMap</code>
"
	end
      end

      class 375042 "TextAndMnemonicHashMap"
	visibility private 
	nactuals 2
	actual class class_ref 132866 // HashMap
	  rank 0 explicit_value ""
	actual class class_ref 132866 // HashMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 673538 // <realization>
	  relation 673538 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 673538 // <realization>
	    b parent class_ref 132866 // HashMap
	end

	classrelation 673666 // AND_MNEMONIC (<unidirectional association>)
	  relation 673666 --->
	    a role_name "AND_MNEMONIC" init_value " \"AndMnemonic\"" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 673666 // AND_MNEMONIC (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 673794 // TITLE_SUFFIX (<unidirectional association>)
	  relation 673794 --->
	    a role_name "TITLE_SUFFIX" init_value " \".titleAndMnemonic\"" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 673794 // TITLE_SUFFIX (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 673922 // TEXT_SUFFIX (<unidirectional association>)
	  relation 673922 --->
	    a role_name "TEXT_SUFFIX" init_value " \".textAndMnemonic\"" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 673922 // TEXT_SUFFIX (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 2149506 "get"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2149634 "composeKey"
	  package return_type class_ref 128130 // String
	  nparams 3
	    param inout name "key" type class_ref 128130 // String
	    param in name "reduce" explicit_type "int"
	    param inout name "sufix" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2149762 "getTextFromProperty"
	  package return_type class_ref 128130 // String
	  nparams 1
	    param inout name "text" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2149890 "getMnemonicFromProperty"
	  package return_type class_ref 128130 // String
	  nparams 1
	    param inout name "text" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2150018 "getIndexFromProperty"
	  package return_type class_ref 128130 // String
	  nparams 1
	    param inout name "text" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 364162 "JComboBox"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A component that combines a button or editable field and a drop-down list.
The user can select a value from the drop-down list, which appears at the
user's request. If you make the combo box editable, then the combo box
includes an editable field into which the user can type a value.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/combobox.html\">How to Use Combo Boxes</a>
in <a href=\"https://docs.oracle.com/javase/tutorial/\"><em>The Java Tutorial</em></a>
for further information.
<p>
@see ComboBoxModel
@see DefaultComboBoxModel

@param <E> the type of the elements of this combo box

@beaninfo
  attribute: isContainer false
description: A combination of a text field and a drop-down list.

@author Arnaud Weber
@author Mark Davidson
"
      class 389762 "KeySelectionManager"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 2231170 "selectionForKey"
	  cpp_inline public explicit_return_type "int"
	  nparams 2
	    param in name "aKey" explicit_type "char"
	    param inout name "aModel" type class_ref 368130 // ComboBoxModel
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Given <code>aKey</code> and the model, returns the row
 that should become selected. Return -1 if no match was
 found.

@param  aKey  a char value, usually indicating a keyboard key that
              was pressed
@param aModel a ComboBoxModel -- the component's data model, containing
              the list of selectable items
@return an int equal to the selected row, where 0 is the
        first item and -1 is none.
"
	end
      end

      classrelation 703106 // <generalisation>
	relation 703106 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 703106 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 703234 // <realization>
	relation 703234 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 703234 // <realization>
	  b parent class_ref 391298 // ItemSelectable
      end

      classrelation 703362 // <realization>
	relation 703362 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 703362 // <realization>
	  b parent class_ref 366722 // ListDataListener
      end

      classrelation 703490 // <realization>
	relation 703490 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 703490 // <realization>
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 703618 // <realization>
	relation 703618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 703618 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 703746 // uiClassID (<unidirectional association>)
	relation 703746 --->
	  a role_name "uiClassID" init_value " \"ComboBoxUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 703746 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 703874 // dataModel (<unidirectional association>)
	relation 703874 --->
	  a role_name "dataModel" protected
	    comment "
This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #getModel
@see #setModel

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 703874 // dataModel (<unidirectional association>)
	  b parent class_ref 368130 // ComboBoxModel
      end

      classrelation 704002 // renderer (<unidirectional association>)
	relation 704002 --->
	  a role_name "renderer" protected
	    comment "
This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #getRenderer
@see #setRenderer

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super E> ${name}${value};
"
	    classrelation_ref 704002 // renderer (<unidirectional association>)
	  b parent class_ref 367746 // ListCellRenderer
      end

      classrelation 704130 // editor (<unidirectional association>)
	relation 704130 --->
	  a role_name "editor" protected
	    comment "
This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #getEditor
@see #setEditor

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 704130 // editor (<unidirectional association>)
	  b parent class_ref 389890 // ComboBoxEditor
      end

      attribute 507138 "maximumRowCount"
	protected explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #getMaximumRowCount
@see #setMaximumRowCount

"
      end

      attribute 507266 "isEditable"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #isEditable
@see #setEditable

"
      end

      classrelation 704258 // keySelectionManager (<unidirectional association>)
	relation 704258 --->
	  a role_name "keySelectionManager" init_value " null" protected
	    comment "
This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #setKeySelectionManager
@see #getKeySelectionManager

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 704258 // keySelectionManager (<unidirectional association>)
	  b parent class_ref 389762 // KeySelectionManager
      end

      classrelation 704386 // actionCommand (<unidirectional association>)
	relation 704386 --->
	  a role_name "actionCommand" init_value " \"comboBoxChanged\"" protected
	    comment "
This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #setActionCommand
@see #getActionCommand

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 704386 // actionCommand (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 507394 "lightWeightPopupEnabled"
	protected explicit_type "boolean"
	init_value " JPopupMenu.getDefaultLightWeightPopupEnabled()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This protected field is implementation specific. Do not access directly
or override. Use the accessor methods instead.

@see #setLightWeightPopupEnabled
@see #isLightWeightPopupEnabled

"
      end

      classrelation 704514 // selectedItemReminder (<unidirectional association>)
	relation 704514 --->
	  a role_name "selectedItemReminder" init_value " null" protected
	    comment "
This protected field is implementation specific. Do not access directly
or override.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 704514 // selectedItemReminder (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 507522 "prototypeDisplayValue"
	private explicit_type "E"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 507650 "firingActionEvent"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag to ensure that infinite loops do not occur with ActionEvents.
"
      end

      attribute 507778 "selectingItem"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag to ensure the we don't get multiple ActionEvents on item selection.
"
      end

      operation 2219650 "JComboBox"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "aModel" type class_ref 368130 // ComboBoxModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JComboBox</code> that takes its items from an
existing <code>ComboBoxModel</code>.  Since the
<code>ComboBoxModel</code> is provided, a combo box created using
this constructor does not create a default combo box model and
may impact how the insert, remove and add methods behave.

@param aModel the <code>ComboBoxModel</code> that provides the
         displayed list of items
@see DefaultComboBoxModel
"
      end

      operation 2219778 "JComboBox"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "items" explicit_type "E"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JComboBox</code> that contains the elements
in the specified array.  By default the first item in the array
(and therefore the data model) becomes selected.

@param items  an array of objects to insert into the combo box
@see DefaultComboBoxModel
"
      end

      operation 2219906 "JComboBox"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "items" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JComboBox</code> that contains the elements
in the specified Vector.  By default the first item in the vector
(and therefore the data model) becomes selected.

@param items  an array of vectors to insert into the combo box
@see DefaultComboBoxModel
"
      end

      operation 2220034 "JComboBox"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JComboBox</code> with a default data model.
The default data model is an empty list of objects.
Use <code>addItem</code> to add items.  By default the first item
in the data model becomes selected.

@see DefaultComboBoxModel
"
      end

      operation 2220162 "init"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2220290 "installAncestorListener"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2220418 "setUI"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 388994 // ComboBoxUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the <code>ComboBoxUI</code> L&amp;F object
@see UIDefaults#getUI

@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 2220546 "updateUI"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 2220674 "getUIClassID"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"ComboBoxUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 2220802 "getUI"
	cpp_inline public return_type class_ref 388994 // ComboBoxUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return the ComboBoxUI object that renders this component
"
      end

      operation 2220930 "setModel"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aModel" type class_ref 368130 // ComboBoxModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the data model that the <code>JComboBox</code> uses to obtain
the list of items.

@param aModel the <code>ComboBoxModel</code> that provides the
 displayed list of items

@beaninfo
       bound: true
 description: Model that the combo box uses to get data to display.
"
      end

      operation 2221058 "getModel"
	cpp_inline public return_type class_ref 368130 // ComboBoxModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the data model currently used by the <code>JComboBox</code>.

@return the <code>ComboBoxModel</code> that provides the displayed
                 list of items
"
      end

      operation 2221186 "setLightWeightPopupEnabled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Properties


Sets the <code>lightWeightPopupEnabled</code> property, which
provides a hint as to whether or not a lightweight
<code>Component</code> should be used to contain the
<code>JComboBox</code>, versus a heavyweight
<code>Component</code> such as a <code>Panel</code>
or a <code>Window</code>.  The decision of lightweight
versus heavyweight is ultimately up to the
<code>JComboBox</code>.  Lightweight windows are more
efficient than heavyweight windows, but lightweight
and heavyweight components do not mix well in a GUI.
If your application mixes lightweight and heavyweight
components, you should disable lightweight popups.
The default value for the <code>lightWeightPopupEnabled</code>
property is <code>true</code>, unless otherwise specified
by the look and feel.  Some look and feels always use
heavyweight popups, no matter what the value of this property.
<p>
See the article <a href=\"http://www.oracle.com/technetwork/articles/java/mixing-components-433992.html\">Mixing Heavy and Light Components</a>
This method fires a property changed event.

@param aFlag if <code>true</code>, lightweight popups are desired

@beaninfo
       bound: true
      expert: true
 description: Set to <code>false</code> to require heavyweight popups.
"
      end

      operation 2221314 "isLightWeightPopupEnabled"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <code>lightWeightPopupEnabled</code>
property.

@return the value of the <code>lightWeightPopupEnabled</code>
   property
@see #setLightWeightPopupEnabled
"
      end

      operation 2221442 "setEditable"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the <code>JComboBox</code> field is editable.
An editable <code>JComboBox</code> allows the user to type into the
field or selected an item from the list to initialize the field,
after which it can be edited. (The editing affects only the field,
the list item remains intact.) A non editable <code>JComboBox</code>
displays the selected item in the field,
but the selection cannot be modified.

@param aFlag a boolean value, where true indicates that the
                 field is editable

@beaninfo
       bound: true
   preferred: true
 description: If true, the user can type a new value in the combo box.
"
      end

      operation 2221570 "isEditable"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the <code>JComboBox</code> is editable.
By default, a combo box is not editable.

@return true if the <code>JComboBox</code> is editable, else false
"
      end

      operation 2221698 "setMaximumRowCount"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum number of rows the <code>JComboBox</code> displays.
If the number of objects in the model is greater than count,
the combo box uses a scrollbar.

@param count an integer specifying the maximum number of items to
             display in the list before using a scrollbar
@beaninfo
       bound: true
   preferred: true
 description: The maximum number of rows the popup should have
"
      end

      operation 2221826 "getMaximumRowCount"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of items the combo box can display
without a scrollbar

@return an integer specifying the maximum number of items that are
        displayed in the list before using a scrollbar
"
      end

      operation 2221954 "setRenderer"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aRenderer" type class_ref 367746 // ListCellRenderer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the renderer that paints the list items and the item selected from the list in
the JComboBox field. The renderer is used if the JComboBox is not
editable. If it is editable, the editor is used to render and edit
the selected item.
<p>
The default renderer displays a string or an icon.
Other renderers can handle graphic images and composite items.
<p>
To display the selected item,
<code>aRenderer.getListCellRendererComponent</code>
is called, passing the list object and an index of -1.

@param aRenderer  the <code>ListCellRenderer</code> that
                 displays the selected item
@see #setEditor
@beaninfo
     bound: true
    expert: true
 description: The renderer that paints the item selected in the list.
"
      end

      operation 2222082 "getRenderer"
	cpp_inline public return_type class_ref 367746 // ListCellRenderer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the renderer used to display the selected item in the
<code>JComboBox</code> field.

@return  the <code>ListCellRenderer</code> that displays
                 the selected item.
"
      end

      operation 2222210 "setEditor"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anEditor" type class_ref 389890 // ComboBoxEditor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the editor used to paint and edit the selected item in the
<code>JComboBox</code> field.  The editor is used only if the
receiving <code>JComboBox</code> is editable. If not editable,
the combo box uses the renderer to paint the selected item.

@param anEditor  the <code>ComboBoxEditor</code> that
                 displays the selected item
@see #setRenderer
@beaninfo
    bound: true
   expert: true
 description: The editor that combo box uses to edit the current value
"
      end

      operation 2222338 "getEditor"
	cpp_inline public return_type class_ref 389890 // ComboBoxEditor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the editor used to paint and edit the selected item in the
<code>JComboBox</code> field.

@return the <code>ComboBoxEditor</code> that displays the selected item
"
      end

      operation 2222466 "setSelectedItem"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Selection


Sets the selected item in the combo box display area to the object in
the argument.
If <code>anObject</code> is in the list, the display area shows
<code>anObject</code> selected.
<p>
If <code>anObject</code> is <i>not</i> in the list and the combo box is
uneditable, it will not change the current selection. For editable
combo boxes, the selection will change to <code>anObject</code>.
<p>
If this constitutes a change in the selected item,
<code>ItemListener</code>s added to the combo box will be notified with
one or two <code>ItemEvent</code>s.
If there is a current selected item, an <code>ItemEvent</code> will be
fired and the state change will be <code>ItemEvent.DESELECTED</code>.
If <code>anObject</code> is in the list and is not currently selected
then an <code>ItemEvent</code> will be fired and the state change will
be <code>ItemEvent.SELECTED</code>.
<p>
<code>ActionListener</code>s added to the combo box will be notified
with an <code>ActionEvent</code> when this method is called.

@param anObject  the list object to select; use <code>null</code> to
clear the selection
@beaninfo
   preferred:   true
   description: Sets the selected item in the JComboBox.
"
      end

      operation 2222594 "getSelectedItem"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current selected item.
<p>
If the combo box is editable, then this value may not have been added
to the combo box with <code>addItem</code>, <code>insertItemAt</code>
or the data constructors.

@return the current selected Object
@see #setSelectedItem
"
      end

      operation 2222722 "setSelectedIndex"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "anIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the item at index <code>anIndex</code>.

@param anIndex an integer specifying the list item to select,
                 where 0 specifies the first item in the list and -1 indicates no selection
@exception IllegalArgumentException if <code>anIndex</code> &lt; -1 or
                 <code>anIndex</code> is greater than or equal to size
@beaninfo
  preferred: true
 description: The item at index is selected.
"
      end

      operation 2222850 "getSelectedIndex"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the first item in the list that matches the given item.
The result is not always defined if the <code>JComboBox</code>
allows selected items that are not in the list.
Returns -1 if there is no selected item or if the user specified
an item which is not in the list.

@return an integer specifying the currently selected list item,
                 where 0 specifies
                 the first item in the list;
                 or -1 if no item is selected or if
                 the currently selected item is not in the list
"
      end

      operation 2222978 "getPrototypeDisplayValue"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"prototypical display\" value - an Object used
for the calculation of the display height and width.

@return the value of the <code>prototypeDisplayValue</code> property
@see #setPrototypeDisplayValue
@since 1.4
"
      end

      operation 2223106 "setPrototypeDisplayValue"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "prototypeDisplayValue" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the prototype display value used to calculate the size of the display
for the UI portion.
<p>
If a prototype display value is specified, the preferred size of
the combo box is calculated by configuring the renderer with the
prototype display value and obtaining its preferred size. Specifying
the preferred display value is often useful when the combo box will be
displaying large amounts of data. If no prototype display value has
been specified, the renderer must be configured for each value from
the model and its preferred size obtained, which can be
relatively expensive.

@param prototypeDisplayValue
@see #getPrototypeDisplayValue
@since 1.4
@beaninfo
      bound: true
  attribute: visualUpdate true
description: The display prototype value, used to compute display width and height.
"
      end

      operation 2223234 "addItem"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "item" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an item to the item list.
This method works only if the <code>JComboBox</code> uses a
mutable data model.
<p>
<strong>Warning:</strong>
Focus and keyboard navigation problems may arise if you add duplicate
String objects. A workaround is to add new objects instead of String
objects and make sure that the toString() method is defined.
For example:
<pre>
  comboBox.addItem(makeObj(\"Item 1\"));
  comboBox.addItem(makeObj(\"Item 1\"));
  ...
  private Object makeObj(final String item)  {
    return new Object() { public String toString() { return item; } };
  }
</pre>

@param item the item to add to the list
@see MutableComboBoxModel
"
      end

      operation 2223362 "insertItemAt"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "item" explicit_type "E"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an item into the item list at a given index.
This method works only if the <code>JComboBox</code> uses a
mutable data model.

@param item the item to add to the list
@param index    an integer specifying the position at which
                 to add the item
@see MutableComboBoxModel
"
      end

      operation 2223490 "removeItem"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an item from the item list.
This method works only if the <code>JComboBox</code> uses a
mutable data model.

@param anObject  the object to remove from the item list
@see MutableComboBoxModel
"
      end

      operation 2223618 "removeItemAt"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "anIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the item at <code>anIndex</code>
This method works only if the <code>JComboBox</code> uses a
mutable data model.

@param anIndex  an int specifying the index of the item to remove,
                 where 0
                 indicates the first item in the list
@see MutableComboBoxModel
"
      end

      operation 2223746 "removeAllItems"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all items from the item list.
"
      end

      operation 2223874 "checkMutableComboBoxModel"
	cpp_inline package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the <code>dataModel</code> is an instance of
<code>MutableComboBoxModel</code>.  If not, it throws an exception.
@exception RuntimeException if <code>dataModel</code> is not an
         instance of <code>MutableComboBoxModel</code>.
"
      end

      operation 2224002 "showPopup"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the combo box to display its popup window.
@see #setPopupVisible
"
      end

      operation 2224130 "hidePopup"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the combo box to close its popup window.
@see #setPopupVisible
"
      end

      operation 2224258 "setPopupVisible"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "v" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the visibility of the popup.
"
      end

      operation 2224386 "isPopupVisible"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the visibility of the popup.

@return true if the popup is visible, otherwise returns false
"
      end

      operation 2224514 "addItemListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aListener" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Selection *

Adds an <code>ItemListener</code>.
<p>
<code>aListener</code> will receive one or two <code>ItemEvent</code>s when
the selected item changes.

@param aListener the <code>ItemListener</code> that is to be notified
@see #setSelectedItem
"
      end

      operation 2224642 "removeItemListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aListener" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Removes an <code>ItemListener</code>.

@param aListener  the <code>ItemListener</code> to remove
"
      end

      operation 2224770 "getItemListeners"
	cpp_inline public return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ItemListener</code>s added
to this JComboBox with addItemListener().

@return all of the <code>ItemListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2224898 "addActionListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>ActionListener</code>.
<p>
The <code>ActionListener</code> will receive an <code>ActionEvent</code>
when a selection has been made. If the combo box is editable, then
an <code>ActionEvent</code> will be fired when editing has stopped.

@param l  the <code>ActionListener</code> that is to be notified
@see #setSelectedItem
"
      end

      operation 2225026 "removeActionListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Removes an <code>ActionListener</code>.

@param l  the <code>ActionListener</code> to remove
"
      end

      operation 2225154 "getActionListeners"
	cpp_inline public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ActionListener</code>s added
to this JComboBox with addActionListener().

@return all of the <code>ActionListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2225282 "addPopupMenuListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 391426 // PopupMenuListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>PopupMenu</code> listener which will listen to notification
messages from the popup portion of the combo box.
<p>
For all standard look and feels shipped with Java, the popup list
portion of combo box is implemented as a <code>JPopupMenu</code>.
A custom look and feel may not implement it this way and will
therefore not receive the notification.

@param l  the <code>PopupMenuListener</code> to add
@since 1.4
"
      end

      operation 2225410 "removePopupMenuListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 391426 // PopupMenuListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PopupMenuListener</code>.

@param l  the <code>PopupMenuListener</code> to remove
@see #addPopupMenuListener
@since 1.4
"
      end

      operation 2225538 "getPopupMenuListeners"
	cpp_inline public return_type class_ref 391426 // PopupMenuListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>PopupMenuListener</code>s added
to this JComboBox with addPopupMenuListener().

@return all of the <code>PopupMenuListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2225666 "firePopupMenuWillBecomeVisible"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies <code>PopupMenuListener</code>s that the popup portion of the
combo box will become visible.
<p>
This method is public but should not be called by anything other than
the UI delegate.
@see #addPopupMenuListener
@since 1.4
"
      end

      operation 2225794 "firePopupMenuWillBecomeInvisible"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies <code>PopupMenuListener</code>s that the popup portion of the
combo box has become invisible.
<p>
This method is public but should not be called by anything other than
the UI delegate.
@see #addPopupMenuListener
@since 1.4
"
      end

      operation 2225922 "firePopupMenuCanceled"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies <code>PopupMenuListener</code>s that the popup portion of the
combo box has been canceled.
<p>
This method is public but should not be called by anything other than
the UI delegate.
@see #addPopupMenuListener
@since 1.4
"
      end

      operation 2226050 "setActionCommand"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aCommand" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the action command that should be included in the event
sent to action listeners.

@param aCommand  a string containing the \"command\" that is sent
                 to action listeners; the same listener can then
                 do different things depending on the command it
                 receives
"
      end

      operation 2226178 "getActionCommand"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the action command that is included in the event sent to
action listeners.

@return  the string containing the \"command\" that is sent
         to action listeners.
"
      end

      classrelation 704642 // action (<unidirectional association>)
	relation 704642 --->
	  a role_name "action" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 704642 // action (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      classrelation 704770 // actionPropertyChangeListener (<unidirectional association>)
	relation 704770 --->
	  a role_name "actionPropertyChangeListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 704770 // actionPropertyChangeListener (<unidirectional association>)
	  b parent class_ref 347266 // PropertyChangeListener
      end

      operation 2226306 "setAction"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Action</code> for the <code>ActionEvent</code> source.
The new <code>Action</code> replaces any previously set
<code>Action</code> but does not affect <code>ActionListeners</code>
independently added with <code>addActionListener</code>.
If the <code>Action</code> is already a registered
<code>ActionListener</code> for the <code>ActionEvent</code> source,
it is not re-registered.
<p>
Setting the <code>Action</code> results in immediately changing
all the properties described in <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a>.
Subsequently, the combobox's properties are automatically updated
as the <code>Action</code>'s properties change.
<p>
This method uses three other methods to set
and help track the <code>Action</code>'s property values.
It uses the <code>configurePropertiesFromAction</code> method
to immediately change the combobox's properties.
To track changes in the <code>Action</code>'s property values,
this method registers the <code>PropertyChangeListener</code>
returned by <code>createActionPropertyChangeListener</code>. The
default {@code PropertyChangeListener} invokes the
{@code actionPropertyChanged} method when a property in the
{@code Action} changes.

@param a the <code>Action</code> for the <code>JComboBox</code>,
                 or <code>null</code>.
@since 1.3
@see Action
@see #getAction
@see #configurePropertiesFromAction
@see #createActionPropertyChangeListener
@see #actionPropertyChanged
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the Action instance connected with this ActionEvent source
"
      end

      operation 2226434 "isListener"
	cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "c" type class_ref 130818 // Class
	  param inout name "a" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2226562 "getAction"
	cpp_inline public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently set <code>Action</code> for this
<code>ActionEvent</code> source, or <code>null</code> if no
<code>Action</code> is set.

@return the <code>Action</code> for this <code>ActionEvent</code>
         source; or <code>null</code>
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2226690 "configurePropertiesFromAction"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the properties on this combobox to match those in the specified
<code>Action</code>.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details as to which properties this sets.

@param a the <code>Action</code> from which to get the properties,
         or <code>null</code>
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2226818 "createActionPropertyChangeListener"
	cpp_inline protected return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a <code>PropertyChangeListener</code> that is
responsible for listening for changes from the specified
<code>Action</code> and updating the appropriate properties.
<p>
<b>Warning:</b> If you subclass this do not create an anonymous
inner class.  If you do the lifetime of the combobox will be tied to
that of the <code>Action</code>.

@param a the combobox's action
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2226946 "actionPropertyChanged"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param inout name "action" type class_ref 352258 // Action
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the combobox's state in response to property changes in
associated action. This method is invoked from the
{@code PropertyChangeListener} returned from
{@code createActionPropertyChangeListener}. Subclasses do not normally
need to invoke this. Subclasses that support additional {@code Action}
properties should override this and
{@code configurePropertiesFromAction}.
<p>
Refer to the table at <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for a list of
the properties this method sets.

@param action the <code>Action</code> associated with this combobox
@param propertyName the name of the property that changed
@since 1.6
@see Action
@see #configurePropertiesFromAction
"
      end

      operation 2227074 "setActionCommandFromAction"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 391554 "ComboBoxActionPropertyChangeListener"
	visibility private 
	nactuals 1
	actual class class_ref 391682 // ActionPropertyChangeListener
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 705794 // <realization>
	  relation 705794 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 705794 // <realization>
	    b parent class_ref 391682 // ActionPropertyChangeListener
	end

	operation 2228610 "ComboBoxActionPropertyChangeListener"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "b" type class_ref 364162 // JComboBox
	    param inout name "a" type class_ref 352258 // Action
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2228738 "actionPropertyChanged"
	  cpp_inline protected explicit_return_type "void"
	  nparams 3
	    param inout name "cb" type class_ref 364162 // JComboBox
	    param inout name "action" type class_ref 352258 // Action
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2228866 "fireItemStateChanged"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.
@param e  the event of interest

@see EventListenerList
"
      end

      operation 2228994 "fireActionEvent"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@see EventListenerList
"
      end

      operation 2229122 "selectedItemChanged"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This protected method is implementation specific. Do not access directly
or override.
"
      end

      operation 2229250 "getSelectedObjects"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing the selected item.
This method is implemented for compatibility with
<code>ItemSelectable</code>.

@return an array of <code>Objects</code> containing one
         element -- the selected item
"
      end

      operation 2229378 "actionPerformed"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is public as an implementation side effect.
do not call or override.
"
      end

      operation 2229506 "contentsChanged"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 366978 // ListDataEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is public as an implementation side effect.
do not call or override.
"
      end

      operation 2229634 "intervalAdded"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 366978 // ListDataEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is public as an implementation side effect.
do not call or override.
"
      end

      operation 2229762 "intervalRemoved"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 366978 // ListDataEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is public as an implementation side effect.
do not call or override.
"
      end

      operation 2229890 "selectWithKeyChar"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param in name "keyChar" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the list item that corresponds to the specified keyboard
character and returns true, if there is an item corresponding
to that character.  Otherwise, returns false.

@param keyChar a char, typically this is a keyboard key
                 typed by the user
"
      end

      operation 2230018 "setEnabled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the combo box so that items can be selected. When the
combo box is disabled, items cannot be selected and values
cannot be typed into its field (if it is editable).

@param b a boolean value, where true enables the component and
         false disables it
@beaninfo
       bound: true
   preferred: true
 description: Whether the combo box is enabled.
"
      end

      operation 2230146 "configureEditor"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "anEditor" type class_ref 389890 // ComboBoxEditor
	  param inout name "anItem" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the editor with the specified item.

@param anEditor the <code>ComboBoxEditor</code> that displays
                 the list item in the
                 combo box field and allows it to be edited
@param anItem   the object to display and edit in the field
"
      end

      operation 2230274 "processKeyEvent"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles <code>KeyEvent</code>s, looking for the Tab key.
If the Tab key is found, the popup window is closed.

@param e  the <code>KeyEvent</code> containing the keyboard
         key that was pressed
"
      end

      operation 2230402 "processKeyBinding"
	cpp_inline protected explicit_return_type "boolean"
	nparams 4
	  param inout name "ks" type class_ref 356610 // KeyStroke
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param in name "condition" explicit_type "int"
	  param inout name "pressed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 2230530 "setKeySelectionManager"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "aManager" type class_ref 389762 // KeySelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the object that translates a keyboard character into a list
selection. Typically, the first selection with a matching first
character becomes the selected item.

@beaninfo
      expert: true
 description: The objects that changes the selection when a key is pressed.
"
      end

      operation 2230658 "getKeySelectionManager"
	cpp_inline public return_type class_ref 389762 // KeySelectionManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list's key-selection manager.

@return the <code>KeySelectionManager</code> currently in use
"
      end

      operation 2230786 "getItemCount"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Accessing the model 

Returns the number of items in the list.

@return an integer equal to the number of items in the list
"
      end

      operation 2230914 "getItemAt"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list item at the specified index.  If <code>index</code>
is out of range (less than zero or greater than or equal to size)
it will return <code>null</code>.

@param index  an integer indicating the list position, where the first
              item starts at zero
@return the item at that list position; or
                 <code>null</code> if out of range
"
      end

      operation 2231042 "createDefaultKeySelectionManager"
	cpp_inline protected return_type class_ref 389762 // KeySelectionManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the default key-selection manager.

@return the <code>KeySelectionManager</code> currently used by the list
@see #setKeySelectionManager
"
      end

      class 391938 "DefaultKeySelectionManager"
	visibility package 
	nactuals 1
	actual class class_ref 364162 // JComboBox
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 705922 // <realization>
	  relation 705922 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 705922 // <realization>
	    b parent class_ref 389762 // KeySelectionManager
	end

	classrelation 706050 // <realization>
	  relation 706050 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 706050 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 2231298 "selectionForKey"
	  cpp_inline public explicit_return_type "int"
	  nparams 2
	    param in name "aKey" explicit_type "char"
	    param inout name "aModel" type class_ref 368130 // ComboBoxModel
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2231426 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 2231554 "paramString"
	cpp_inline protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JComboBox</code>.
This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JComboBox</code>
"
      end

      operation 2231682 "getAccessibleContext"
	cpp_inline public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/////////////////
 Accessibility support
/////////////////

Gets the AccessibleContext associated with this JComboBox.
For combo boxes, the AccessibleContext takes the form of an
AccessibleJComboBox.
A new AccessibleJComboBox instance is created if necessary.

@return an AccessibleJComboBox that serves as the
        AccessibleContext of this JComboBox
"
      end

      class 392066 "AccessibleJComboBox"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 706178 // <generalisation>
	  relation 706178 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 706178 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 706946 // <realization>
	  relation 706946 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 706946 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	classrelation 707074 // <realization>
	  relation 707074 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 707074 // <realization>
	    b parent class_ref 348674 // AccessibleSelection
	end

	classrelation 707202 // popupList (<unidirectional association>)
	  relation 707202 --->
	    a role_name "popupList" private
	      comment " combo box popup list"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 707202 // popupList (<unidirectional association>)
	    b parent class_ref 364418 // JList
	end

	classrelation 707330 // previousSelectedAccessible (<unidirectional association>)
	  relation 707330 --->
	    a role_name "previousSelectedAccessible" init_value " null" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 707330 // previousSelectedAccessible (<unidirectional association>)
	    b parent class_ref 347778 // Accessible
	end

	operation 2233090 "AccessibleJComboBox"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an AccessibleJComboBox instance
@since 1.4
"
	end

	class 392194 "AccessibleJComboBoxPropertyChangeListener"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 707458 // <realization>
	    relation 707458 -_-|>
	      a public
		java "${type}"
		classrelation_ref 707458 // <realization>
	      b parent class_ref 347266 // PropertyChangeListener
	  end

	  operation 2233218 "propertyChange"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 360450 // PropertyChangeEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 2233346 "setEditorNameAndDescription"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the combo box editor's accessible name and descripton
"
	end

	class 392322 "AccessibleJComboBoxPopupMenuListener"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 707714 // <realization>
	    relation 707714 -_-|>
	      a public
		java "${type}"
		classrelation_ref 707714 // <realization>
	      b parent class_ref 391426 // PopupMenuListener
	  end

	  operation 2233858 "popupMenuWillBecomeVisible"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 392450 // PopupMenuEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " This method is called before the popup menu becomes visible
"
	  end

	  operation 2233986 "popupMenuWillBecomeInvisible"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 392450 // PopupMenuEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "This method is called before the popup menu becomes invisible
Note that a JPopupMenu can become invisible any time
"
	  end

	  operation 2234114 "popupMenuCanceled"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 392450 // PopupMenuEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "This method is called when the popup menu is canceled
"
	  end
	end

	class 392578 "AccessibleJComboBoxListSelectionListener"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 707842 // <realization>
	    relation 707842 -_-|>
	      a public
		java "${type}"
		classrelation_ref 707842 // <realization>
	      b parent class_ref 365442 // ListSelectionListener
	  end

	  operation 2234242 "valueChanged"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 365954 // ListSelectionEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 2234370 "getAccessibleChildrenCount"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement Accessible, than this
method should return the number of children of this object.

@return the number of accessible children in the object.
"
	end

	operation 2234498 "getAccessibleChild"
	  cpp_inline public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the nth Accessible child of the object.
The child at index zero represents the popup.
If the combo box is editable, the child at index one
represents the editor.

@param i zero-based index of child
@return the nth Accessible child of the object
"
	end

	operation 2234626 "getAccessibleRole"
	  cpp_inline public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 2234754 "getAccessibleStateSet"
	  cpp_inline public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.  The AccessibleStateSet of
an object is composed of a set of unique AccessibleStates.
A change in the AccessibleStateSet of an object will cause a
PropertyChangeEvent to be fired for the ACCESSIBLE_STATE_PROPERTY
property.

@return an instance of AccessibleStateSet containing the
current state set of the object
@see AccessibleStateSet
@see AccessibleState
@see #addPropertyChangeListener

"
	end

	operation 2234882 "getAccessibleAction"
	  cpp_inline public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleAction associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleAction interface on behalf of itself.

@return this object
"
	end

	operation 2235010 "getAccessibleActionDescription"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a description of the specified action of the object.

@param i zero-based index of the actions
"
	end

	operation 2235138 "getAccessibleActionCount"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of Actions available in this object.  The
default behavior of a combo box is to have one action.

@return 1, the number of Actions in this object
"
	end

	operation 2235266 "doAccessibleAction"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the the action was performed; else false.
"
	end

	operation 2235394 "getAccessibleSelection"
	  cpp_inline public return_type class_ref 348674 // AccessibleSelection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleSelection associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleSelection interface on behalf of itself.

@return this object
"
	end

	operation 2235522 "getAccessibleSelectionCount"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of Accessible children currently selected.
If no children are selected, the return value will be 0.

@return the number of items currently selected.
@since 1.3
"
	end

	operation 2235650 "getAccessibleSelection"
	  cpp_inline public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an Accessible representing the specified selected child
in the popup.  If there isn't a selection, or there are
fewer children selected than the integer passed in, the return
value will be null.
<p>Note that the index represents the i-th selected child, which
is different from the i-th child.

@param i the zero-based index of selected children
@return the i-th selected child
@see #getAccessibleSelectionCount
@since 1.3
"
	end

	operation 2235778 "isAccessibleChildSelected"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the current child of this object is selected.

@return true if the current child of this object is selected;
             else false
@param i the zero-based index of the child in this Accessible
object.
@see AccessibleContext#getAccessibleChild
@since 1.3
"
	end

	operation 2235906 "addAccessibleSelection"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified Accessible child of the object to the object's
selection.  If the object supports multiple selections,
the specified child is added to any existing selection, otherwise
it replaces any existing selection in the object.  If the
specified child is already selected, this method has no effect.

@param i the zero-based index of the child
@see AccessibleContext#getAccessibleChild
@since 1.3
"
	end

	operation 2236034 "removeAccessibleSelection"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the specified child of the object from the object's
selection.  If the specified item isn't currently selected, this
method has no effect.

@param i the zero-based index of the child
@see AccessibleContext#getAccessibleChild
@since 1.3
"
	end

	operation 2236162 "clearAccessibleSelection"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clears the selection in the object, so that no children in the
object are selected.
@since 1.3
"
	end

	operation 2236290 "selectAllAccessibleSelection"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Causes every child of the object to be selected
if the object supports multiple selections.
@since 1.3
"
	end

	class 392706 "EditorAccessibleContext"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 708226 // <generalisation>
	    relation 708226 ---|>
	      a public
		java "${type}"
		classrelation_ref 708226 // <generalisation>
	      b parent class_ref 347522 // AccessibleContext
	  end

	  classrelation 708354 // ac (<unidirectional association>)
	    relation 708354 --->
	      a role_name "ac" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 708354 // ac (<unidirectional association>)
	      b parent class_ref 347522 // AccessibleContext
	  end

	  operation 2236546 "EditorAccessibleContext"
	    cpp_inline private explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 2236674 "EditorAccessibleContext"
	    cpp_inline package explicit_return_type ""
	    nparams 1
	      param inout name "a" type class_ref 347778 // Accessible
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "@param a the AccessibleContext implemented by the
combo box editor
"
	  end

	  operation 2236802 "getAccessibleName"
	    cpp_inline public return_type class_ref 128130 // String
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the accessibleName property of this object.  The accessibleName
property of an object is a localized String that designates the purpose
of the object.  For example, the accessibleName property of a label
or button might be the text of the label or button itself.  In the
case of an object that doesn't display its name, the accessibleName
should still be set.  For example, in the case of a text field used
to enter the name of a city, the accessibleName for the en_US locale
could be 'city.'

@return the localized name of the object; null if this
object does not have a name

@see #setAccessibleName
"
	  end

	  operation 2236930 "setAccessibleName"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "s" type class_ref 128130 // String
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Sets the localized accessible name of this object.  Changing the
name will cause a PropertyChangeEvent to be fired for the
ACCESSIBLE_NAME_PROPERTY property.

@param s the new localized name of the object.

@see #getAccessibleName
@see #addPropertyChangeListener

@beaninfo
   preferred:   true
   description: Sets the accessible name for the component.
"
	  end

	  operation 2237058 "getAccessibleDescription"
	    cpp_inline public return_type class_ref 128130 // String
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the accessibleDescription property of this object.  The
accessibleDescription property of this object is a short localized
phrase describing the purpose of the object.  For example, in the
case of a 'Cancel' button, the accessibleDescription could be
'Ignore changes and close dialog box.'

@return the localized description of the object; null if
this object does not have a description

@see #setAccessibleDescription
"
	  end

	  operation 2237186 "setAccessibleDescription"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "s" type class_ref 128130 // String
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Sets the accessible description of this object.  Changing the
name will cause a PropertyChangeEvent to be fired for the
ACCESSIBLE_DESCRIPTION_PROPERTY property.

@param s the new localized description of the object

@see #setAccessibleName
@see #addPropertyChangeListener

@beaninfo
   preferred:   true
   description: Sets the accessible description for the component.
"
	  end

	  operation 2237314 "getAccessibleRole"
	    cpp_inline public return_type class_ref 348034 // AccessibleRole
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the role of this object.  The role of the object is the generic
purpose or use of the class of this object.  For example, the role
of a push button is AccessibleRole.PUSH_BUTTON.  The roles in
AccessibleRole are provided so component developers can pick from
a set of predefined roles.  This enables assistive technologies to
provide a consistent interface to various tweaked subclasses of
components (e.g., use AccessibleRole.PUSH_BUTTON for all components
that act like a push button) as well as distinguish between subclasses
that behave differently (e.g., AccessibleRole.CHECK_BOX for check boxes
and AccessibleRole.RADIO_BUTTON for radio buttons).
<p>Note that the AccessibleRole class is also extensible, so
custom component developers can define their own AccessibleRole's
if the set of predefined roles is inadequate.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole
"
	  end

	  operation 2237442 "getAccessibleStateSet"
	    cpp_inline public return_type class_ref 348162 // AccessibleStateSet
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the state set of this object.  The AccessibleStateSet of an object
is composed of a set of unique AccessibleStates.  A change in the
AccessibleStateSet of an object will cause a PropertyChangeEvent to
be fired for the ACCESSIBLE_STATE_PROPERTY property.

@return an instance of AccessibleStateSet containing the
current state set of the object
@see AccessibleStateSet
@see AccessibleState
@see #addPropertyChangeListener
"
	  end

	  operation 2237570 "getAccessibleParent"
	    cpp_inline public return_type class_ref 347778 // Accessible
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the Accessible parent of this object.

@return the Accessible parent of this object; null if this
object does not have an Accessible parent
"
	  end

	  operation 2237698 "setAccessibleParent"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "a" type class_ref 347778 // Accessible
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Sets the Accessible parent of this object.  This is meant to be used
only in the situations where the actual component's parent should
not be treated as the component's accessible parent and is a method
that should only be called by the parent of the accessible child.

@param a - Accessible to be set as the parent
"
	  end

	  operation 2237826 "getAccessibleIndexInParent"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the 0-based index of this object in its accessible parent.

@return the 0-based index of this object in its parent; -1 if this
object does not have an accessible parent.

@see #getAccessibleParent
@see #getAccessibleChildrenCount
@see #getAccessibleChild
"
	  end

	  operation 2237954 "getAccessibleChildrenCount"
	    cpp_inline public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of accessible children of the object.

@return the number of accessible children of the object.
"
	  end

	  operation 2238082 "getAccessibleChild"
	    cpp_inline public return_type class_ref 347778 // Accessible
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the specified Accessible child of the object.  The Accessible
children of an Accessible object are zero-based, so the first child
of an Accessible child is at index 0, the second child is at index 1,
and so on.

@param i zero-based index of child
@return the Accessible child of the object
@see #getAccessibleChildrenCount
"
	  end

	  operation 2238210 "getLocale"
	    cpp_inline public return_type class_ref 312962 // Locale
	    nparams 0
	    nexceptions 1
	      exception class_ref 348290 // IllegalComponentStateException
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the locale of the component. If the component does not have a
locale, then the locale of its parent is returned.

@return this component's locale.  If this component does not have
a locale, the locale of its parent is returned.

@exception IllegalComponentStateException
If the Component does not have its own locale and has not yet been
added to a containment hierarchy such that the locale can be
determined from the containing parent.
"
	  end

	  operation 2238338 "addPropertyChangeListener"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "listener" type class_ref 347266 // PropertyChangeListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Adds a PropertyChangeListener to the listener list.
The listener is registered for all Accessible properties and will
be called when those properties change.

@see #ACCESSIBLE_NAME_PROPERTY
@see #ACCESSIBLE_DESCRIPTION_PROPERTY
@see #ACCESSIBLE_STATE_PROPERTY
@see #ACCESSIBLE_VALUE_PROPERTY
@see #ACCESSIBLE_SELECTION_PROPERTY
@see #ACCESSIBLE_TEXT_PROPERTY
@see #ACCESSIBLE_VISIBLE_DATA_PROPERTY

@param listener  The PropertyChangeListener to be added
"
	  end

	  operation 2238466 "removePropertyChangeListener"
	    cpp_inline public explicit_return_type "void"
	    nparams 1
	      param inout name "listener" type class_ref 347266 // PropertyChangeListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Removes a PropertyChangeListener from the listener list.
This removes a PropertyChangeListener that was registered
for all properties.

@param listener  The PropertyChangeListener to be removed
"
	  end

	  operation 2238594 "getAccessibleAction"
	    cpp_inline public return_type class_ref 348418 // AccessibleAction
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleAction associated with this object that supports
one or more actions.

@return AccessibleAction if supported by object; else return null
@see AccessibleAction
"
	  end

	  operation 2238722 "getAccessibleComponent"
	    cpp_inline public return_type class_ref 348546 // AccessibleComponent
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleComponent associated with this object that has a
graphical representation.

@return AccessibleComponent if supported by object; else return null
@see AccessibleComponent
"
	  end

	  operation 2238850 "getAccessibleSelection"
	    cpp_inline public return_type class_ref 348674 // AccessibleSelection
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleSelection associated with this object which allows its
Accessible children to be selected.

@return AccessibleSelection if supported by object; else return null
@see AccessibleSelection
"
	  end

	  operation 2238978 "getAccessibleText"
	    cpp_inline public return_type class_ref 348802 // AccessibleText
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleText associated with this object presenting
text on the display.

@return AccessibleText if supported by object; else return null
@see AccessibleText
"
	  end

	  operation 2239106 "getAccessibleEditableText"
	    cpp_inline public return_type class_ref 348930 // AccessibleEditableText
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleEditableText associated with this object
presenting editable text on the display.

@return AccessibleEditableText if supported by object; else return null
@see AccessibleEditableText
"
	  end

	  operation 2239234 "getAccessibleValue"
	    cpp_inline public return_type class_ref 349058 // AccessibleValue
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleValue associated with this object that supports a
Numerical value.

@return AccessibleValue if supported by object; else return null
@see AccessibleValue
"
	  end

	  operation 2239362 "getAccessibleIcon"
	    cpp_inline public return_type class_ref 349186 // AccessibleIcon
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleIcons associated with an object that has
one or more associated icons

@return an array of AccessibleIcon if supported by object;
otherwise return null
@see AccessibleIcon
"
	  end

	  operation 2239490 "getAccessibleRelationSet"
	    cpp_inline public return_type class_ref 347906 // AccessibleRelationSet
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleRelationSet associated with an object

@return an AccessibleRelationSet if supported by object;
otherwise return null
@see AccessibleRelationSet
"
	  end

	  operation 2239618 "getAccessibleTable"
	    cpp_inline public return_type class_ref 349314 // AccessibleTable
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleTable associated with an object

@return an AccessibleTable if supported by object;
otherwise return null
@see AccessibleTable
"
	  end

	  operation 2239746 "firePropertyChange"
	    cpp_inline public explicit_return_type "void"
	    nparams 3
	      param inout name "propertyName" type class_ref 128130 // String
	      param inout name "oldValue" type class_ref 129538 // Object
	      param inout name "newValue" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Support for reporting bound property changes.  If oldValue and
newValue are not equal and the PropertyChangeEvent listener list
is not empty, then fire a PropertyChange event to each listener.
In general, this is for use by the Accessible objects themselves
and should not be called by an application program.
@param propertyName  The programmatic name of the property that
was changed.
@param oldValue  The old value of the property.
@param newValue  The new value of the property.
@see java.beans.PropertyChangeSupport
@see #addPropertyChangeListener
@see #removePropertyChangeListener
@see #ACCESSIBLE_NAME_PROPERTY
@see #ACCESSIBLE_DESCRIPTION_PROPERTY
@see #ACCESSIBLE_STATE_PROPERTY
@see #ACCESSIBLE_VALUE_PROPERTY
@see #ACCESSIBLE_SELECTION_PROPERTY
@see #ACCESSIBLE_TEXT_PROPERTY
@see #ACCESSIBLE_VISIBLE_DATA_PROPERTY
"
	  end
	end

	classrelation 707970 // editorAccessibleContext (<unidirectional association>)
	  relation 707970 --->
	    a role_name "editorAccessibleContext" init_value " null" private
	      comment "        public Accessible getAccessibleAt(Point p) {
            Accessible a = getAccessibleChild(1);
            if ( a != null ) {
                return a; // the editor
            }
            else {
                return getAccessibleChild(0); // the list
            }
        }
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 707970 // editorAccessibleContext (<unidirectional association>)
	    b parent class_ref 392706 // EditorAccessibleContext
	end

	class 392834 "AccessibleEditor"
	  visibility private 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 708098 // <realization>
	    relation 708098 -_-|>
	      a public
		java "${type}"
		classrelation_ref 708098 // <realization>
	      b parent class_ref 347778 // Accessible
	  end

	  operation 2236418 "getAccessibleContext"
	    cpp_inline public return_type class_ref 347522 // AccessibleContext
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end
    end

    class 364418 "JList"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A component that displays a list of objects and allows the user to select
one or more items. A separate model, {@code ListModel}, maintains the
contents of the list.
<p>
It's easy to display an array or Vector of objects, using the {@code JList}
constructor that automatically builds a read-only {@code ListModel} instance
for you:
<pre>
{@code
// Create a JList that displays strings from an array

String[] data = {\"one\", \"two\", \"three\", \"four\"};
JList<String> myList = new JList<String>(data);

// Create a JList that displays the superclasses of JList.class, by
// creating it with a Vector populated with this data

Vector<Class<?>> superClasses = new Vector<Class<?>>();
Class<JList> rootClass = javax.swing.JList.class;
for(Class<?> cls = rootClass; cls != null; cls = cls.getSuperclass()) {
    superClasses.addElement(cls);
}
JList<Class<?>> myList = new JList<Class<?>>(superClasses);

// The automatically created model is stored in JList's \"model\"
// property, which you can retrieve

ListModel<Class<?>> model = myList.getModel();
for(int i = 0; i < model.getSize(); i++) {
    System.out.println(model.getElementAt(i));
}
}
</pre>
<p>
A {@code ListModel} can be supplied directly to a {@code JList} by way of a
constructor or the {@code setModel} method. The contents need not be static -
the number of items, and the values of items can change over time. A correct
{@code ListModel} implementation notifies the set of
{@code javax.swing.event.ListDataListener}s that have been added to it, each
time a change occurs. These changes are characterized by a
{@code javax.swing.event.ListDataEvent}, which identifies the range of list
indices that have been modified, added, or removed. {@code JList}'s
{@code ListUI} is responsible for keeping the visual representation up to
date with changes, by listening to the model.
<p>
Simple, dynamic-content, {@code JList} applications can use the
{@code DefaultListModel} class to maintain list elements. This class
implements the {@code ListModel} interface and also provides a
<code>java.util.Vector</code>-like API. Applications that need a more
custom <code>ListModel</code> implementation may instead wish to subclass
{@code AbstractListModel}, which provides basic support for managing and
notifying listeners. For example, a read-only implementation of
{@code AbstractListModel}:
<pre>
{@code
// This list model has about 2^16 elements.  Enjoy scrolling.

ListModel<String> bigData = new AbstractListModel<String>() {
    public int getSize() { return Short.MAX_VALUE; }
    public String getElementAt(int index) { return \"Index \" + index; }
};
}
</pre>
<p>
The selection state of a {@code JList} is managed by another separate
model, an instance of {@code ListSelectionModel}. {@code JList} is
initialized with a selection model on construction, and also contains
methods to query or set this selection model. Additionally, {@code JList}
provides convenient methods for easily managing the selection. These methods,
such as {@code setSelectedIndex} and {@code getSelectedValue}, are cover
methods that take care of the details of interacting with the selection
model. By default, {@code JList}'s selection model is configured to allow any
combination of items to be selected at a time; selection mode
{@code MULTIPLE_INTERVAL_SELECTION}. The selection mode can be changed
on the selection model directly, or via {@code JList}'s cover method.
Responsibility for updating the selection model in response to user gestures
lies with the list's {@code ListUI}.
<p>
A correct {@code ListSelectionModel} implementation notifies the set of
{@code javax.swing.event.ListSelectionListener}s that have been added to it
each time a change to the selection occurs. These changes are characterized
by a {@code javax.swing.event.ListSelectionEvent}, which identifies the range
of the selection change.
<p>
The preferred way to listen for changes in list selection is to add
{@code ListSelectionListener}s directly to the {@code JList}. {@code JList}
then takes care of listening to the the selection model and notifying your
listeners of change.
<p>
Responsibility for listening to selection changes in order to keep the list's
visual representation up to date lies with the list's {@code ListUI}.
<p>
<a name=\"renderer\"></a>
Painting of cells in a {@code JList} is handled by a delegate called a
cell renderer, installed on the list as the {@code cellRenderer} property.
The renderer provides a {@code java.awt.Component} that is used
like a \"rubber stamp\" to paint the cells. Each time a cell needs to be
painted, the list's {@code ListUI} asks the cell renderer for the component,
moves it into place, and has it paint the contents of the cell by way of its
{@code paint} method. A default cell renderer, which uses a {@code JLabel}
component to render, is installed by the lists's {@code ListUI}. You can
substitute your own renderer using code like this:
<pre>
{@code
 // Display an icon and a string for each object in the list.

class MyCellRenderer extends JLabel implements ListCellRenderer<Object> {
    final static ImageIcon longIcon = new ImageIcon(\"long.gif\");
    final static ImageIcon shortIcon = new ImageIcon(\"short.gif\");

    // This is the only method defined by ListCellRenderer.
    // We just reconfigure the JLabel each time we're called.

    public Component getListCellRendererComponent(
      JList<?> list,           // the list
      Object value,            // value to display
      int index,               // cell index
      boolean isSelected,      // is the cell selected
      boolean cellHasFocus)    // does the cell have focus
    {
        String s = value.toString();
        setText(s);
        setIcon((s.length() > 10) ? longIcon : shortIcon);
        if (isSelected) {
            setBackground(list.getSelectionBackground());
            setForeground(list.getSelectionForeground());
        } else {
            setBackground(list.getBackground());
            setForeground(list.getForeground());
        }
        setEnabled(list.isEnabled());
        setFont(list.getFont());
        setOpaque(true);
        return this;
    }
}

myList.setCellRenderer(new MyCellRenderer());
}
</pre>
<p>
Another job for the cell renderer is in helping to determine sizing
information for the list. By default, the list's {@code ListUI} determines
the size of cells by asking the cell renderer for its preferred
size for each list item. This can be expensive for large lists of items.
To avoid these calculations, you can set a {@code fixedCellWidth} and
{@code fixedCellHeight} on the list, or have these values calculated
automatically based on a single prototype value:
<a name=\"prototype_example\"></a>
<pre>
{@code
JList<String> bigDataList = new JList<String>(bigData);

// We don't want the JList implementation to compute the width
// or height of all of the list cells, so we give it a string
// that's as big as we'll need for any cell.  It uses this to
// compute values for the fixedCellWidth and fixedCellHeight
// properties.

bigDataList.setPrototypeCellValue(\"Index 1234567890\");
}
</pre>
<p>
{@code JList} doesn't implement scrolling directly. To create a list that
scrolls, make it the viewport view of a {@code JScrollPane}. For example:
<pre>
JScrollPane scrollPane = new JScrollPane(myList);

// Or in two steps:
JScrollPane scrollPane = new JScrollPane();
scrollPane.getViewport().setView(myList);
</pre>
<p>
{@code JList} doesn't provide any special handling of double or triple
(or N) mouse clicks, but it's easy to add a {@code MouseListener} if you
wish to take action on these events. Use the {@code locationToIndex}
method to determine what cell was clicked. For example:
<pre>
MouseListener mouseListener = new MouseAdapter() {
    public void mouseClicked(MouseEvent e) {
        if (e.getClickCount() == 2) {
            int index = list.locationToIndex(e.getPoint());
            System.out.println(\"Double clicked on Item \" + index);
         }
    }
};
list.addMouseListener(mouseListener);
</pre>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/list.html\">How to Use Lists</a>
in <a href=\"https://docs.oracle.com/javase/tutorial/\"><em>The Java Tutorial</em></a>
for further documentation.
<p>
@see ListModel
@see AbstractListModel
@see DefaultListModel
@see ListSelectionModel
@see DefaultListSelectionModel
@see ListCellRenderer
@see DefaultListCellRenderer

@param <E> the type of the elements of this list

@beaninfo
  attribute: isContainer false
description: A component which allows for the selection of one or more objects from a list.

@author Hans Muller
"
      classrelation 4131970 // <generalisation>
	relation 4131970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4131970 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4132098 // <realization>
	relation 4132098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4132098 // <realization>
	  b parent class_ref 427522 // Scrollable
      end

      classrelation 4132226 // <realization>
	relation 4132226 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4132226 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4132354 // uiClassID (<unidirectional association>)
	relation 4132354 --->
	  a role_name "uiClassID" init_value " \"ListUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4132354 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2412802 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a vertical layout of cells, in a single column;
the default layout.
@see #setLayoutOrientation
@since 1.4

"
      end

      attribute 2412930 "VERTICAL_WRAP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a \"newspaper style\" layout with cells flowing vertically
then horizontally.
@see #setLayoutOrientation
@since 1.4

"
      end

      attribute 2413058 "HORIZONTAL_WRAP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates a \"newspaper style\" layout with cells flowing horizontally
then vertically.
@see #setLayoutOrientation
@since 1.4

"
      end

      attribute 2413186 "fixedCellWidth"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2413314 "fixedCellHeight"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2413442 "horizontalScrollIncrement"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2413570 "prototypeCellValue"
	private explicit_type "E"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2413698 "visibleRowCount"
	private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4132482 // selectionForeground (<unidirectional association>)
	relation 4132482 --->
	  a role_name "selectionForeground" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4132482 // selectionForeground (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 4132610 // selectionBackground (<unidirectional association>)
	relation 4132610 --->
	  a role_name "selectionBackground" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4132610 // selectionBackground (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      attribute 2413826 "dragEnabled"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4132738 // selectionModel (<unidirectional association>)
	relation 4132738 --->
	  a role_name "selectionModel" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4132738 // selectionModel (<unidirectional association>)
	  b parent class_ref 1269122 // ListSelectionModel
      end

      classrelation 4132866 // dataModel (<unidirectional association>)
	relation 4132866 --->
	  a role_name "dataModel" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 4132866 // dataModel (<unidirectional association>)
	  b parent class_ref 366594 // ListModel
      end

      classrelation 4132994 // cellRenderer (<unidirectional association>)
	relation 4132994 --->
	  a role_name "cellRenderer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super E> ${name}${value};
"
	    classrelation_ref 4132994 // cellRenderer (<unidirectional association>)
	  b parent class_ref 367746 // ListCellRenderer
      end

      classrelation 4133122 // selectionListener (<unidirectional association>)
	relation 4133122 --->
	  a role_name "selectionListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4133122 // selectionListener (<unidirectional association>)
	  b parent class_ref 365442 // ListSelectionListener
      end

      attribute 2413954 "layoutOrientation"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How to lay out the cells; defaults to <code>VERTICAL</code>.

"
      end

      classrelation 4133250 // dropMode (<unidirectional association>)
	relation 4133250 --->
	  a role_name "dropMode" init_value " DropMode.USE_SELECTION" private
	    comment "
The drop mode for this component.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4133250 // dropMode (<unidirectional association>)
	  b parent class_ref 427906 // DropMode
      end

      classrelation 4133378 // dropLocation (<unidirectional association>)
	relation 4133378 --->
	  a role_name "dropLocation" private
	    comment "
The drop location.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4133378 // dropLocation (<unidirectional association>)
	  b parent class_ref 351618 // DropLocation
      end

      class 1323394 "DropLocation"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end
    end

    class 365058 "JFileChooser"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JFileChooser</code> provides a simple mechanism for the user to
choose a file.
For information about using <code>JFileChooser</code>, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html\">How to Use File Choosers</a>,
a section in <em>The Java Tutorial</em>.

<p>

The following code pops up a file chooser for the user's home directory that
sees only .jpg and .gif images:
<pre>
   JFileChooser chooser = new JFileChooser();
   FileNameExtensionFilter filter = new FileNameExtensionFilter(
       \"JPG &amp; GIF Images\", \"jpg\", \"gif\");
   chooser.setFileFilter(filter);
   int returnVal = chooser.showOpenDialog(parent);
   if(returnVal == JFileChooser.APPROVE_OPTION) {
      System.out.println(\"You chose to open this file: \" +
           chooser.getSelectedFile().getName());
   }
</pre>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.

@beaninfo
  attribute: isContainer false
description: A component which allows for the interactive selection of a file.

@author Jeff Dinkins

"
      classrelation 4117762 // <generalisation>
	relation 4117762 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4117762 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4117890 // <realization>
	relation 4117890 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4117890 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4118018 // uiClassID (<unidirectional association>)
	relation 4118018 --->
	  a role_name "uiClassID" init_value " \"FileChooserUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118018 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2406658 "OPEN_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ************************
 ***** Dialog Types *****
 ************************

Type value indicating that the <code>JFileChooser</code> supports an
\"Open\" file operation.

"
      end

      attribute 2406786 "SAVE_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Type value indicating that the <code>JFileChooser</code> supports a
\"Save\" file operation.

"
      end

      attribute 2406914 "CUSTOM_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Type value indicating that the <code>JFileChooser</code> supports a
developer-specified file operation.

"
      end

      attribute 2407042 "CANCEL_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ********************************
 ***** Dialog Return Values *****
 ********************************

Return value if cancel is chosen.

"
      end

      attribute 2407170 "APPROVE_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Return value if approve (yes, ok) is chosen.

"
      end

      attribute 2407298 "ERROR_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Return value if an error occurred.

"
      end

      attribute 2407426 "FILES_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " **********************************
 ***** JFileChooser properties *****
 **********************************
 Instruction to display only files. 
"
      end

      attribute 2407554 "DIRECTORIES_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Instruction to display only directories. 
"
      end

      attribute 2407682 "FILES_AND_DIRECTORIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Instruction to display both files and directories. 
"
      end

      classrelation 4118146 // CANCEL_SELECTION (<unidirectional association>)
	relation 4118146 --->
	  a role_name "CANCEL_SELECTION" init_value " \"CancelSelection\"" class_relation const_relation public
	    comment " Instruction to cancel the current selection. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118146 // CANCEL_SELECTION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4118274 // APPROVE_SELECTION (<unidirectional association>)
	relation 4118274 --->
	  a role_name "APPROVE_SELECTION" init_value " \"ApproveSelection\"" class_relation const_relation public
	    comment "
Instruction to approve the current selection
(same as pressing yes or ok).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118274 // APPROVE_SELECTION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4118402 // APPROVE_BUTTON_TEXT_CHANGED_PROPERTY (<unidirectional association>)
	relation 4118402 --->
	  a role_name "APPROVE_BUTTON_TEXT_CHANGED_PROPERTY" init_value " \"ApproveButtonTextChangedProperty\"" class_relation const_relation public
	    comment " Identifies change in the text on the approve (yes, ok) button. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118402 // APPROVE_BUTTON_TEXT_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4118530 // APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY (<unidirectional association>)
	relation 4118530 --->
	  a role_name "APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY" init_value " \"ApproveButtonToolTipTextChangedProperty\"" class_relation const_relation public
	    comment "
Identifies change in the tooltip text for the approve (yes, ok)
button.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118530 // APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4118658 // APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY (<unidirectional association>)
	relation 4118658 --->
	  a role_name "APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY" init_value " \"ApproveButtonMnemonicChangedProperty\"" class_relation const_relation public
	    comment " Identifies change in the mnemonic for the approve (yes, ok) button. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118658 // APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4118786 // CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY (<unidirectional association>)
	relation 4118786 --->
	  a role_name "CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY" init_value " \"ControlButtonsAreShownChangedProperty\"" class_relation const_relation public
	    comment " Instruction to display the control buttons. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118786 // CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4118914 // DIRECTORY_CHANGED_PROPERTY (<unidirectional association>)
	relation 4118914 --->
	  a role_name "DIRECTORY_CHANGED_PROPERTY" init_value " \"directoryChanged\"" class_relation const_relation public
	    comment " Identifies user's directory change. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4118914 // DIRECTORY_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119042 // SELECTED_FILE_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119042 --->
	  a role_name "SELECTED_FILE_CHANGED_PROPERTY" init_value " \"SelectedFileChangedProperty\"" class_relation const_relation public
	    comment " Identifies change in user's single-file selection. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119042 // SELECTED_FILE_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119170 // SELECTED_FILES_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119170 --->
	  a role_name "SELECTED_FILES_CHANGED_PROPERTY" init_value " \"SelectedFilesChangedProperty\"" class_relation const_relation public
	    comment " Identifies change in user's multiple-file selection. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119170 // SELECTED_FILES_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119298 // MULTI_SELECTION_ENABLED_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119298 --->
	  a role_name "MULTI_SELECTION_ENABLED_CHANGED_PROPERTY" init_value " \"MultiSelectionEnabledChangedProperty\"" class_relation const_relation public
	    comment " Enables multiple-file selections. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119298 // MULTI_SELECTION_ENABLED_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119426 // FILE_SYSTEM_VIEW_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119426 --->
	  a role_name "FILE_SYSTEM_VIEW_CHANGED_PROPERTY" init_value " \"FileSystemViewChanged\"" class_relation const_relation public
	    comment "
Says that a different object is being used to find available drives
on the system.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119426 // FILE_SYSTEM_VIEW_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119554 // FILE_VIEW_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119554 --->
	  a role_name "FILE_VIEW_CHANGED_PROPERTY" init_value " \"fileViewChanged\"" class_relation const_relation public
	    comment "
Says that a different object is being used to retrieve file
information.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119554 // FILE_VIEW_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119682 // FILE_HIDING_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119682 --->
	  a role_name "FILE_HIDING_CHANGED_PROPERTY" init_value " \"FileHidingChanged\"" class_relation const_relation public
	    comment " Identifies a change in the display-hidden-files property. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119682 // FILE_HIDING_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119810 // FILE_FILTER_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119810 --->
	  a role_name "FILE_FILTER_CHANGED_PROPERTY" init_value " \"fileFilterChanged\"" class_relation const_relation public
	    comment " User changed the kind of files to display. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119810 // FILE_FILTER_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4119938 // FILE_SELECTION_MODE_CHANGED_PROPERTY (<unidirectional association>)
	relation 4119938 --->
	  a role_name "FILE_SELECTION_MODE_CHANGED_PROPERTY" init_value " \"fileSelectionChanged\"" class_relation const_relation public
	    comment "
Identifies a change in the kind of selection (single,
multiple, etc.).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4119938 // FILE_SELECTION_MODE_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120066 // ACCESSORY_CHANGED_PROPERTY (<unidirectional association>)
	relation 4120066 --->
	  a role_name "ACCESSORY_CHANGED_PROPERTY" init_value " \"AccessoryChangedProperty\"" class_relation const_relation public
	    comment "
Says that a different accessory component is in use
(for example, to preview files).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120066 // ACCESSORY_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120194 // ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY (<unidirectional association>)
	relation 4120194 --->
	  a role_name "ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY" init_value " \"acceptAllFileFilterUsedChanged\"" class_relation const_relation public
	    comment "
Identifies whether a the AcceptAllFileFilter is used or not.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120194 // ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120322 // DIALOG_TITLE_CHANGED_PROPERTY (<unidirectional association>)
	relation 4120322 --->
	  a role_name "DIALOG_TITLE_CHANGED_PROPERTY" init_value " \"DialogTitleChangedProperty\"" class_relation const_relation public
	    comment " Identifies a change in the dialog title. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120322 // DIALOG_TITLE_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120450 // DIALOG_TYPE_CHANGED_PROPERTY (<unidirectional association>)
	relation 4120450 --->
	  a role_name "DIALOG_TYPE_CHANGED_PROPERTY" init_value " \"DialogTypeChangedProperty\"" class_relation const_relation public
	    comment "
Identifies a change in the type of files displayed (files only,
directories only, or both files and directories).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120450 // DIALOG_TYPE_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120578 // CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY (<unidirectional association>)
	relation 4120578 --->
	  a role_name "CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY" init_value " \"ChoosableFileFilterChangedProperty\"" class_relation const_relation public
	    comment "
Identifies a change in the list of predefined file filters
the user can choose from.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120578 // CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120706 // dialogTitle (<unidirectional association>)
	relation 4120706 --->
	  a role_name "dialogTitle" init_value " null" private
	    comment " ******************************
 ***** instance variables *****
 ******************************
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120706 // dialogTitle (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120834 // approveButtonText (<unidirectional association>)
	relation 4120834 --->
	  a role_name "approveButtonText" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120834 // approveButtonText (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4120962 // approveButtonToolTipText (<unidirectional association>)
	relation 4120962 --->
	  a role_name "approveButtonToolTipText" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4120962 // approveButtonToolTipText (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2407810 "approveButtonMnemonic"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4121090 // filters (<unidirectional association>)
	relation 4121090 --->
	  a role_name "filters" init_value " new Vector<FileFilter>(5)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<FileFilter> ${name}${value};
"
	    classrelation_ref 4121090 // filters (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 4121218 // dialog (<unidirectional association>)
	relation 4121218 --->
	  a role_name "dialog" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4121218 // dialog (<unidirectional association>)
	  b parent class_ref 1275650 // JDialog
      end

      attribute 2407938 "dialogType"
	private explicit_type "int"
	init_value " OPEN_DIALOG"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2408066 "returnValue"
	private explicit_type "int"
	init_value " ERROR_OPTION"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4121346 // accessory (<unidirectional association>)
	relation 4121346 --->
	  a role_name "accessory" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4121346 // accessory (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4121474 // fileView (<unidirectional association>)
	relation 4121474 --->
	  a role_name "fileView" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4121474 // fileView (<unidirectional association>)
	  b parent class_ref 365186 // FileView
      end

      attribute 2408194 "controlsShown"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2408322 "useFileHiding"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4121602 // SHOW_HIDDEN_PROP (<unidirectional association>)
	relation 4121602 --->
	  a role_name "SHOW_HIDDEN_PROP" init_value " \"awt.file.showHiddenFiles\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4121602 // SHOW_HIDDEN_PROP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4121730 // showFilesListener (<unidirectional association>)
	relation 4121730 --->
	  a role_name "showFilesListener" init_value " null" private
	    comment " Listens to changes in the native setting for showing hidden files.
 The Listener is removed and the native setting is ignored if
 setFileHidingEnabled() is ever called.
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4121730 // showFilesListener (<unidirectional association>)
	  b parent class_ref 347266 // PropertyChangeListener
      end

      attribute 2408450 "fileSelectionMode"
	private explicit_type "int"
	init_value " FILES_ONLY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2408578 "multiSelectionEnabled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2408706 "useAcceptAllFileFilter"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2408834 "dragEnabled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4121858 // fileFilter (<unidirectional association>)
	relation 4121858 --->
	  a role_name "fileFilter" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4121858 // fileFilter (<unidirectional association>)
	  b parent class_ref 369026 // FileFilter
      end

      classrelation 4121986 // fileSystemView (<unidirectional association>)
	relation 4121986 --->
	  a role_name "fileSystemView" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4121986 // fileSystemView (<unidirectional association>)
	  b parent class_ref 367234 // FileSystemView
      end

      classrelation 4122114 // currentDirectory (<unidirectional association>)
	relation 4122114 --->
	  a role_name "currentDirectory" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4122114 // currentDirectory (<unidirectional association>)
	  b parent class_ref 131970 // File
      end

      classrelation 4122242 // selectedFile (<unidirectional association>)
	relation 4122242 --->
	  a role_name "selectedFile" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4122242 // selectedFile (<unidirectional association>)
	  b parent class_ref 131970 // File
      end

      classrelation 4122370 // selectedFiles (<unidirectional association>)
	relation 4122370 --->
	  a role_name "selectedFiles" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4122370 // selectedFiles (<unidirectional association>)
	  b parent class_ref 131970 // File
      end

      operation 10604802 "JFileChooser"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *************************************
 ***** JFileChooser Constructors *****
 *************************************

Constructs a <code>JFileChooser</code> pointing to the user's
default directory. This default depends on the operating system.
It is typically the \"My Documents\" folder on Windows, and the
user's home directory on Unix.
"
      end

      operation 10604930 "JFileChooser"
	public explicit_return_type ""
	nparams 1
	  param inout name "currentDirectoryPath" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JFileChooser</code> using the given path.
Passing in a <code>null</code>
string causes the file chooser to point to the user's default directory.
This default depends on the operating system. It is
typically the \"My Documents\" folder on Windows, and the user's
home directory on Unix.

@param currentDirectoryPath  a <code>String</code> giving the path
                         to a file or directory
"
      end

      operation 10605058 "JFileChooser"
	public explicit_return_type ""
	nparams 1
	  param inout name "currentDirectory" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JFileChooser</code> using the given <code>File</code>
as the path. Passing in a <code>null</code> file
causes the file chooser to point to the user's default directory.
This default depends on the operating system. It is
typically the \"My Documents\" folder on Windows, and the user's
home directory on Unix.

@param currentDirectory  a <code>File</code> object specifying
                         the path to a file or directory
"
      end

      operation 10605186 "JFileChooser"
	public explicit_return_type ""
	nparams 1
	  param inout name "fsv" type class_ref 367234 // FileSystemView
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JFileChooser</code> using the given
<code>FileSystemView</code>.
"
      end

      operation 10605314 "JFileChooser"
	public explicit_return_type ""
	nparams 2
	  param inout name "currentDirectory" type class_ref 131970 // File
	  param inout name "fsv" type class_ref 367234 // FileSystemView
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JFileChooser</code> using the given current directory
and <code>FileSystemView</code>.
"
      end

      operation 10605442 "JFileChooser"
	public explicit_return_type ""
	nparams 2
	  param inout name "currentDirectoryPath" type class_ref 128130 // String
	  param inout name "fsv" type class_ref 367234 // FileSystemView
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JFileChooser</code> using the given current directory
path and <code>FileSystemView</code>.
"
      end

      operation 10605570 "setup"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 367234 // FileSystemView
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs common constructor initialization and setup.
"
      end

      operation 10605698 "installHierarchyListener"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10605826 "installShowFilesListener"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10605954 "setDragEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>dragEnabled</code> property,
which must be <code>true</code> to enable
automatic drag handling (the first part of drag and drop)
on this component.
The <code>transferHandler</code> property needs to be set
to a non-<code>null</code> value for the drag to do
anything.  The default value of the <code>dragEnabled</code>
property
is <code>false</code>.

<p>

When automatic drag handling is enabled,
most look and feels begin a drag-and-drop operation
whenever the user presses the mouse button over an item
and then moves the mouse a few pixels.
Setting this property to <code>true</code>
can therefore have a subtle effect on
how selections behave.

<p>

Some look and feels might not support automatic drag and drop;
they will ignore this property.  You can work around such
look and feels by modifying the component
to directly call the <code>exportAsDrag</code> method of a
<code>TransferHandler</code>.

@param b the value to set the <code>dragEnabled</code> property to
@exception HeadlessException if
           <code>b</code> is <code>true</code> and
           <code>GraphicsEnvironment.isHeadless()</code>
           returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@see #getDragEnabled
@see #setTransferHandler
@see TransferHandler
@since 1.4

@beaninfo
 description: determines whether automatic drag handling is enabled
       bound: false
"
      end

      operation 10606082 "getDragEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <code>dragEnabled</code> property.

@return  the value of the <code>dragEnabled</code> property
@see #setDragEnabled
@since 1.4
"
      end

      operation 10606210 "getSelectedFile"
	public return_type class_ref 131970 // File
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *****************************
 ****** File Operations ******
 *****************************

Returns the selected file. This can be set either by the
programmer via <code>setSelectedFile</code> or by a user action, such as
either typing the filename into the UI or selecting the
file from a list in the UI.

@see #setSelectedFile
@return the selected file
"
      end

      operation 10606338 "setSelectedFile"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected file. If the file's parent directory is
not the current directory, changes the current directory
to be the file's parent directory.

@beaninfo
  preferred: true
      bound: true

@see #getSelectedFile

@param file the selected file
"
      end

      operation 10606466 "getSelectedFiles"
	public return_type class_ref 131970 // File
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of selected files if the file chooser is
set to allow multiple selection.
"
      end

      operation 10606594 "setSelectedFiles"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selectedFiles" type class_ref 131970 // File
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the list of selected files if the file chooser is
set to allow multiple selection.

@beaninfo
      bound: true
description: The list of selected files if the chooser is in multiple selection mode.
"
      end

      operation 10606722 "getCurrentDirectory"
	public return_type class_ref 131970 // File
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current directory.

@return the current directory
@see #setCurrentDirectory
"
      end

      operation 10606850 "setCurrentDirectory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dir" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current directory. Passing in <code>null</code> sets the
file chooser to point to the user's default directory.
This default depends on the operating system. It is
typically the \"My Documents\" folder on Windows, and the user's
home directory on Unix.

If the file passed in as <code>currentDirectory</code> is not a
directory, the parent of the file will be used as the currentDirectory.
If the parent is not traversable, then it will walk up the parent tree
until it finds a traversable directory, or hits the root of the
file system.

@beaninfo
  preferred: true
      bound: true
description: The directory that the JFileChooser is showing files of.

@param dir the current directory to point to
@see #getCurrentDirectory
"
      end

      operation 10606978 "changeToParentDirectory"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the directory to be set to the parent of the
current directory.

@see #getCurrentDirectory
"
      end

      operation 10607106 "rescanCurrentDirectory"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the UI to rescan its files list from the current directory.
"
      end

      operation 10607234 "ensureFileIsVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes sure that the specified file is viewable, and
not hidden.

@param f  a File object
"
      end

      operation 10607362 "showOpenDialog"
	public explicit_return_type "int"
	nparams 1
	  param inout name "parent" type class_ref 338818 // Component
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " **************************************
 ***** JFileChooser Dialog methods *****
 **************************************

Pops up an \"Open File\" file chooser dialog. Note that the
text that appears in the approve button is determined by
the L&amp;F.

@param    parent  the parent component of the dialog,
                 can be <code>null</code>;
                 see <code>showDialog</code> for details
@return   the return state of the file chooser on popdown:
<ul>
<li>JFileChooser.CANCEL_OPTION
<li>JFileChooser.APPROVE_OPTION
<li>JFileChooser.ERROR_OPTION if an error occurs or the
                 dialog is dismissed
</ul>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see #showDialog
"
      end

      operation 10607490 "showSaveDialog"
	public explicit_return_type "int"
	nparams 1
	  param inout name "parent" type class_ref 338818 // Component
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops up a \"Save File\" file chooser dialog. Note that the
text that appears in the approve button is determined by
the L&amp;F.

@param    parent  the parent component of the dialog,
                 can be <code>null</code>;
                 see <code>showDialog</code> for details
@return   the return state of the file chooser on popdown:
<ul>
<li>JFileChooser.CANCEL_OPTION
<li>JFileChooser.APPROVE_OPTION
<li>JFileChooser.ERROR_OPTION if an error occurs or the
                 dialog is dismissed
</ul>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see #showDialog
"
      end

      operation 10607618 "showDialog"
	public explicit_return_type "int"
	nparams 2
	  param inout name "parent" type class_ref 338818 // Component
	  param inout name "approveButtonText" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops a custom file chooser dialog with a custom approve button.
For example, the following code
pops up a file chooser with a \"Run Application\" button
(instead of the normal \"Save\" or \"Open\" button):
<pre>
filechooser.showDialog(parentFrame, \"Run Application\");
</pre>

Alternatively, the following code does the same thing:
<pre>
   JFileChooser chooser = new JFileChooser(null);
   chooser.setApproveButtonText(\"Run Application\");
   chooser.showDialog(parentFrame, null);
</pre>

<!--PENDING(jeff) - the following method should be added to the api:
     showDialog(Component parent);-->
<!--PENDING(kwalrath) - should specify modality and what
     \"depends\" means.-->

<p>

The <code>parent</code> argument determines two things:
the frame on which the open dialog depends and
the component whose position the look and feel
should consider when placing the dialog.  If the parent
is a <code>Frame</code> object (such as a <code>JFrame</code>)
then the dialog depends on the frame and
the look and feel positions the dialog
relative to the frame (for example, centered over the frame).
If the parent is a component, then the dialog
depends on the frame containing the component,
and is positioned relative to the component
(for example, centered over the component).
If the parent is <code>null</code>, then the dialog depends on
no visible window, and it's placed in a
look-and-feel-dependent position
such as the center of the screen.

@param   parent  the parent component of the dialog;
                 can be <code>null</code>
@param   approveButtonText the text of the <code>ApproveButton</code>
@return  the return state of the file chooser on popdown:
<ul>
<li>JFileChooser.CANCEL_OPTION
<li>JFileChooser.APPROVE_OPTION
<li>JFileChooser.ERROR_OPTION if an error occurs or the
                 dialog is dismissed
</ul>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10607746 "createDialog"
	protected return_type class_ref 1275650 // JDialog
	nparams 1
	  param inout name "parent" type class_ref 338818 // Component
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a new <code>JDialog</code> wrapping
<code>this</code> centered on the <code>parent</code>
in the <code>parent</code>'s frame.
This method can be overriden to further manipulate the dialog,
to disable resizing, set the location, etc. Example:
<pre>
    class MyFileChooser extends JFileChooser {
        protected JDialog createDialog(Component parent) throws HeadlessException {
            JDialog dialog = super.createDialog(parent);
            dialog.setLocation(300, 200);
            dialog.setResizable(false);
            return dialog;
        }
    }
</pre>

@param   parent  the parent component of the dialog;
                 can be <code>null</code>
@return a new <code>JDialog</code> containing this instance
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since 1.4
"
      end

      operation 10607874 "getControlButtonsAreShown"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " **************************
 ***** Dialog Options *****
 **************************

Returns the value of the <code>controlButtonsAreShown</code>
property.

@return   the value of the <code>controlButtonsAreShown</code>
    property

@see #setControlButtonsAreShown
@since 1.3
"
      end

      operation 10608002 "setControlButtonsAreShown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the property
that indicates whether the <i>approve</i> and <i>cancel</i>
buttons are shown in the file chooser.  This property
is <code>true</code> by default.  Look and feels
that always show these buttons will ignore the value
of this property.
This method fires a property-changed event,
using the string value of
<code>CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY</code>
as the name of the property.

@param b <code>false</code> if control buttons should not be
   shown; otherwise, <code>true</code>

@beaninfo
  preferred: true
      bound: true
description: Sets whether the approve &amp; cancel buttons are shown.

@see #getControlButtonsAreShown
@see #CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY
@since 1.3
"
      end

      operation 10608130 "getDialogType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of this dialog.  The default is
<code>JFileChooser.OPEN_DIALOG</code>.

@return   the type of dialog to be displayed:
<ul>
<li>JFileChooser.OPEN_DIALOG
<li>JFileChooser.SAVE_DIALOG
<li>JFileChooser.CUSTOM_DIALOG
</ul>

@see #setDialogType
"
      end

      operation 10608258 "setDialogType"
	public explicit_return_type "void"
	nparams 1
	  param in name "dialogType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of this dialog. Use <code>OPEN_DIALOG</code> when you
want to bring up a file chooser that the user can use to open a file.
Likewise, use <code>SAVE_DIALOG</code> for letting the user choose
a file for saving.
Use <code>CUSTOM_DIALOG</code> when you want to use the file
chooser in a context other than \"Open\" or \"Save\".
For instance, you might want to bring up a file chooser that allows
the user to choose a file to execute. Note that you normally would not
need to set the <code>JFileChooser</code> to use
<code>CUSTOM_DIALOG</code>
since a call to <code>setApproveButtonText</code> does this for you.
The default dialog type is <code>JFileChooser.OPEN_DIALOG</code>.

@param dialogType the type of dialog to be displayed:
<ul>
<li>JFileChooser.OPEN_DIALOG
<li>JFileChooser.SAVE_DIALOG
<li>JFileChooser.CUSTOM_DIALOG
</ul>

@exception IllegalArgumentException if <code>dialogType</code> is
                         not legal
@beaninfo
  preferred: true
      bound: true
description: The type (open, save, custom) of the JFileChooser.
       enum:
             OPEN_DIALOG JFileChooser.OPEN_DIALOG
             SAVE_DIALOG JFileChooser.SAVE_DIALOG
             CUSTOM_DIALOG JFileChooser.CUSTOM_DIALOG

@see #getDialogType
@see #setApproveButtonText

 PENDING(jeff) - fire button text change property"
      end

      operation 10608386 "setDialogTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dialogTitle" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the string that goes in the <code>JFileChooser</code> window's
title bar.

@param dialogTitle the new <code>String</code> for the title bar

@beaninfo
  preferred: true
      bound: true
description: The title of the JFileChooser dialog window.

@see #getDialogTitle

"
      end

      operation 10608514 "getDialogTitle"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string that goes in the <code>JFileChooser</code>'s titlebar.

@see #setDialogTitle
"
      end

      operation 10608642 "setApproveButtonToolTipText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "toolTipText" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************************************
 ***** JFileChooser View Options *****
 ************************************

Sets the tooltip text used in the <code>ApproveButton</code>.
If <code>null</code>, the UI object will determine the button's text.

@beaninfo
  preferred: true
      bound: true
description: The tooltip text for the ApproveButton.

@param toolTipText the tooltip text for the approve button
@see #setApproveButtonText
@see #setDialogType
@see #showDialog
"
      end

      operation 10608770 "getApproveButtonToolTipText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tooltip text used in the <code>ApproveButton</code>.
If <code>null</code>, the UI object will determine the button's text.

@return the tooltip text used for the approve button

@see #setApproveButtonText
@see #setDialogType
@see #showDialog
"
      end

      operation 10608898 "getApproveButtonMnemonic"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the approve button's mnemonic.
@return an integer value for the mnemonic key

@see #setApproveButtonMnemonic
"
      end

      operation 10609026 "setApproveButtonMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "mnemonic" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the approve button's mnemonic using a numeric keycode.

@param mnemonic  an integer value for the mnemonic key

@beaninfo
  preferred: true
      bound: true
description: The mnemonic key accelerator for the ApproveButton.

@see #getApproveButtonMnemonic
"
      end

      operation 10609154 "setApproveButtonMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "mnemonic" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the approve button's mnemonic using a character.
@param mnemonic  a character value for the mnemonic key

@see #getApproveButtonMnemonic
"
      end

      operation 10609282 "setApproveButtonText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "approveButtonText" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text used in the <code>ApproveButton</code> in the
<code>FileChooserUI</code>.

@beaninfo
  preferred: true
      bound: true
description: The text that goes in the ApproveButton.

@param approveButtonText the text used in the <code>ApproveButton</code>

@see #getApproveButtonText
@see #setDialogType
@see #showDialog

 PENDING(jeff) - have ui set this on dialog type change"
      end

      operation 10609410 "getApproveButtonText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text used in the <code>ApproveButton</code> in the
<code>FileChooserUI</code>.
If <code>null</code>, the UI object will determine the button's text.

Typically, this would be \"Open\" or \"Save\".

@return the text used in the <code>ApproveButton</code>

@see #setApproveButtonText
@see #setDialogType
@see #showDialog
"
      end

      operation 10609538 "getChoosableFileFilters"
	public return_type class_ref 369026 // FileFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of user choosable file filters.

@return a <code>FileFilter</code> array containing all the choosable
        file filters

@see #addChoosableFileFilter
@see #removeChoosableFileFilter
@see #resetChoosableFileFilters
"
      end

      operation 10609666 "addChoosableFileFilter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 369026 // FileFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a filter to the list of user choosable file filters.
For information on setting the file selection mode, see
{@link #setFileSelectionMode setFileSelectionMode}.

@param filter the <code>FileFilter</code> to add to the choosable file
              filter list

@beaninfo
  preferred: true
      bound: true
description: Adds a filter to the list of user choosable file filters.

@see #getChoosableFileFilters
@see #removeChoosableFileFilter
@see #resetChoosableFileFilters
@see #setFileSelectionMode
"
      end

      operation 10609794 "removeChoosableFileFilter"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "f" type class_ref 369026 // FileFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a filter from the list of user choosable file filters. Returns
true if the file filter was removed.

@see #addChoosableFileFilter
@see #getChoosableFileFilters
@see #resetChoosableFileFilters
"
      end

      operation 10609922 "resetChoosableFileFilters"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the choosable file filter list to its starting state. Normally,
this removes all added file filters while leaving the
<code>AcceptAll</code> file filter.

@see #addChoosableFileFilter
@see #getChoosableFileFilters
@see #removeChoosableFileFilter
"
      end

      operation 10610050 "getAcceptAllFileFilter"
	public return_type class_ref 369026 // FileFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>AcceptAll</code> file filter.
For example, on Microsoft Windows this would be All Files (*.*).
"
      end

      operation 10610178 "isAcceptAllFileFilterUsed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the <code>AcceptAll FileFilter</code> is used.
@return true if the <code>AcceptAll FileFilter</code> is used
@see #setAcceptAllFileFilterUsed
@since 1.3
"
      end

      operation 10610306 "setAcceptAllFileFilterUsed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the <code>AcceptAll FileFilter</code> is used
as an available choice in the choosable filter list.
If false, the <code>AcceptAll</code> file filter is removed from
the list of available file filters.
If true, the <code>AcceptAll</code> file filter will become the
the actively used file filter.

@beaninfo
  preferred: true
      bound: true
description: Sets whether the AcceptAll FileFilter is used as an available choice in the choosable filter list.

@see #isAcceptAllFileFilterUsed
@see #getAcceptAllFileFilter
@see #setFileFilter
@since 1.3
"
      end

      operation 10610434 "getAccessory"
	public return_type class_ref 338434 // JComponent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the accessory component.

@return this JFileChooser's accessory component, or null
@see #setAccessory
"
      end

      operation 10610562 "setAccessory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newAccessory" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the accessory component. An accessory is often used to show a
preview image of the selected file; however, it can be used for anything
that the programmer wishes, such as extra custom file chooser controls.

<p>
Note: if there was a previous accessory, you should unregister
any listeners that the accessory might have registered with the
file chooser.

@beaninfo
  preferred: true
      bound: true
description: Sets the accessory component on the JFileChooser.
"
      end

      operation 10610690 "setFileSelectionMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>JFileChooser</code> to allow the user to just
select files, just select
directories, or select both files and directories.  The default is
<code>JFilesChooser.FILES_ONLY</code>.

@param mode the type of files to be displayed:
<ul>
<li>JFileChooser.FILES_ONLY
<li>JFileChooser.DIRECTORIES_ONLY
<li>JFileChooser.FILES_AND_DIRECTORIES
</ul>

@exception IllegalArgumentException  if <code>mode</code> is an
                         illegal file selection mode
@beaninfo
  preferred: true
      bound: true
description: Sets the types of files that the JFileChooser can choose.
       enum: FILES_ONLY JFileChooser.FILES_ONLY
             DIRECTORIES_ONLY JFileChooser.DIRECTORIES_ONLY
             FILES_AND_DIRECTORIES JFileChooser.FILES_AND_DIRECTORIES


@see #getFileSelectionMode
"
      end

      operation 10610818 "getFileSelectionMode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current file-selection mode.  The default is
<code>JFilesChooser.FILES_ONLY</code>.

@return the type of files to be displayed, one of the following:
<ul>
<li>JFileChooser.FILES_ONLY
<li>JFileChooser.DIRECTORIES_ONLY
<li>JFileChooser.FILES_AND_DIRECTORIES
</ul>
@see #setFileSelectionMode
"
      end

      operation 10610946 "isFileSelectionEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience call that determines if files are selectable based on the
current file selection mode.

@see #setFileSelectionMode
@see #getFileSelectionMode
"
      end

      operation 10611074 "isDirectorySelectionEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience call that determines if directories are selectable based
on the current file selection mode.

@see #setFileSelectionMode
@see #getFileSelectionMode
"
      end

      operation 10611202 "setMultiSelectionEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the file chooser to allow multiple file selections.

@param b true if multiple files may be selected
@beaninfo
      bound: true
description: Sets multiple file selection mode.

@see #isMultiSelectionEnabled
"
      end

      operation 10611330 "isMultiSelectionEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if multiple files can be selected.
@return true if multiple files can be selected
@see #setMultiSelectionEnabled
"
      end

      operation 10611458 "isFileHidingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if hidden files are not shown in the file chooser;
otherwise, returns false.

@return the status of the file hiding property
@see #setFileHidingEnabled
"
      end

      operation 10611586 "setFileHidingEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets file hiding on or off. If true, hidden files are not shown
in the file chooser. The job of determining which files are
shown is done by the <code>FileView</code>.

@beaninfo
  preferred: true
      bound: true
description: Sets file hiding on or off.

@param b the boolean value that determines whether file hiding is
         turned on
@see #isFileHidingEnabled
"
      end

      operation 10611714 "setFileFilter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 369026 // FileFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current file filter. The file filter is used by the
file chooser to filter out files from the user's view.

@beaninfo
  preferred: true
      bound: true
description: Sets the File Filter used to filter out files of type.

@param filter the new current file filter to use
@see #getFileFilter
"
      end

      operation 10611842 "getFileFilter"
	public return_type class_ref 369026 // FileFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently selected file filter.

@return the current file filter
@see #setFileFilter
@see #addChoosableFileFilter
"
      end

      operation 10611970 "setFileView"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fileView" type class_ref 365186 // FileView
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the file view to used to retrieve UI information, such as
the icon that represents a file or the type description of a file.

@beaninfo
  preferred: true
      bound: true
description: Sets the File View used to get file type information.

@see #getFileView
"
      end

      operation 10612098 "getFileView"
	public return_type class_ref 365186 // FileView
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current file view.

@see #setFileView
"
      end

      operation 10612226 "getName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ******************************
 *****FileView delegation *****
 ******************************
 NOTE: all of the following methods attempt to delegate
 first to the client set fileView, and if <code>null</code> is returned
 (or there is now client defined fileView) then calls the
 UI's default fileView.

Returns the filename.
@param f the <code>File</code>
@return the <code>String</code> containing the filename for
         <code>f</code>
@see FileView#getName
"
      end

      operation 10612354 "getDescription"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the file description.
@param f the <code>File</code>
@return the <code>String</code> containing the file description for
         <code>f</code>
@see FileView#getDescription
"
      end

      operation 10612482 "getTypeDescription"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the file type.
@param f the <code>File</code>
@return the <code>String</code> containing the file type description for
         <code>f</code>
@see FileView#getTypeDescription
"
      end

      operation 10612610 "getIcon"
	public return_type class_ref 352642 // Icon
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the icon for this file or type of file, depending
on the system.
@param f the <code>File</code>
@return the <code>Icon</code> for this file, or type of file
@see FileView#getIcon
"
      end

      operation 10612738 "isTraversable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the file (directory) can be visited.
Returns false if the directory cannot be traversed.
@param f the <code>File</code>
@return true if the file/directory can be traversed, otherwise false
@see FileView#isTraversable
"
      end

      operation 10612866 "accept"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the file should be displayed.
@param f the <code>File</code>
@return true if the file should be displayed, otherwise false
@see FileFilter#accept
"
      end

      operation 10612994 "setFileSystemView"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fsv" type class_ref 367234 // FileSystemView
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the file system view that the <code>JFileChooser</code> uses for
accessing and creating file system resources, such as finding
the floppy drive and getting a list of root drives.
@param fsv  the new <code>FileSystemView</code>

@beaninfo
     expert: true
      bound: true
description: Sets the FileSytemView used to get filesystem information.

@see FileSystemView
"
      end

      operation 10613122 "getFileSystemView"
	public return_type class_ref 367234 // FileSystemView
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the file system view.
@return the <code>FileSystemView</code> object
@see #setFileSystemView
"
      end

      operation 10613250 "approveSelection"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " **************************
 ***** Event Handling *****
 **************************

Called by the UI when the user hits the Approve button
(labeled \"Open\" or \"Save\", by default). This can also be
called by the programmer.
This method causes an action event to fire
with the command string equal to
<code>APPROVE_SELECTION</code>.

@see #APPROVE_SELECTION
"
      end

      operation 10613378 "cancelSelection"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the UI when the user chooses the Cancel button.
This can also be called by the programmer.
This method causes an action event to fire
with the command string equal to
<code>CANCEL_SELECTION</code>.

@see #CANCEL_SELECTION
"
      end

      operation 10613506 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>ActionListener</code> to the file chooser.

@param l  the listener to be added

@see #approveSelection
@see #cancelSelection
"
      end

      operation 10613634 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an <code>ActionListener</code> from the file chooser.

@param l  the listener to be removed

@see #addActionListener
"
      end

      operation 10613762 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners
registered on this file chooser.

@return all of this file chooser's <code>ActionListener</code>s
        or an empty
        array if no action listeners are currently registered

@see #addActionListener
@see #removeActionListener

@since 1.4
"
      end

      operation 10613890 "fireActionPerformed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "command" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type. The event instance
is lazily created using the <code>command</code> parameter.

@see EventListenerList
"
      end

      class 1283586 "WeakPCL"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4122498 // <realization>
	  relation 4122498 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4122498 // <realization>
	    b parent class_ref 347266 // PropertyChangeListener
	end

	classrelation 4122626 // jfcRef (<unidirectional association>)
	  relation 4122626 --->
	    a role_name "jfcRef" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<JFileChooser> ${name}${value};
"
	      classrelation_ref 4122626 // jfcRef (<unidirectional association>)
	    b parent class_ref 131330 // WeakReference
	end

	operation 10614018 "WeakPCL"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "jfc" type class_ref 365058 // JFileChooser
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10614146 "propertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ev" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10614274 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *********************************
 ***** Pluggable L&F methods *****
 *********************************

Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10614402 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the L&amp;F class
that renders this component.

@return the string \"FileChooserUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
       expert: true
  description: A string that specifies the name of the L&amp;F class.
"
      end

      operation 10614530 "getUI"
	public return_type class_ref 415746 // FileChooserUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the UI object which implements the L&amp;F for this component.

@return the FileChooserUI object that implements the FileChooserUI L&amp;F
"
      end

      operation 10614658 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10614786 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10614914 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JFileChooser</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JFileChooser</code>
"
      end

      classrelation 4122754 // accessibleContext (<unidirectional association>)
	relation 4122754 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4122754 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 10615042 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this JFileChooser.
For file choosers, the AccessibleContext takes the form of an
AccessibleJFileChooser.
A new AccessibleJFileChooser instance is created if necessary.

@return an AccessibleJFileChooser that serves as the
        AccessibleContext of this JFileChooser
"
      end

      class 1283714 "AccessibleJFileChooser"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4122882 // <generalisation>
	  relation 4122882 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4122882 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10615170 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 366210 "JScrollPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides a scrollable view of a lightweight component.
A <code>JScrollPane</code> manages a viewport, optional
vertical and horizontal scroll bars, and optional row and
column heading viewports.
You can find task-oriented documentation of <code>JScrollPane</code> in
 <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/scrollpane.html\">How to Use Scroll Panes</a>,
a section in <em>The Java Tutorial</em>.  Note that
<code>JScrollPane</code> does not support heavyweight components.

<TABLE STYLE=\"FLOAT:RIGHT\" BORDER=\"0\" SUMMARY=\"layout\">
   <TR>
   <TD ALIGN=\"CENTER\">
     <P STYLE=\"TEXT-ALIGN:CENTER\"><IMG SRC=\"doc-files/JScrollPane-1.gif\"
     alt=\"The following text describes this image.\"
     WIDTH=\"256\" HEIGHT=\"248\" STYLE=\"FLOAT:BOTTOM; BORDER:0px\">
   </TD>
   </TR>
</TABLE>
The <code>JViewport</code> provides a window,
or &quot;viewport&quot; onto a data
source -- for example, a text file. That data source is the
&quot;scrollable client&quot; (aka data model) displayed by the
<code>JViewport</code> view.
A <code>JScrollPane</code> basically consists of <code>JScrollBar</code>s,
a <code>JViewport</code>, and the wiring between them,
as shown in the diagram at right.
<p>
In addition to the scroll bars and viewport,
a <code>JScrollPane</code> can have a
column header and a row header. Each of these is a
<code>JViewport</code> object that
you specify with <code>setRowHeaderView</code>,
and <code>setColumnHeaderView</code>.
The column header viewport automatically scrolls left and right, tracking
the left-right scrolling of the main viewport.
(It never scrolls vertically, however.)
The row header acts in a similar fashion.
<p>
Where two scroll bars meet, the row header meets the column header,
or a scroll bar meets one of the headers, both components stop short
of the corner, leaving a rectangular space which is, by default, empty.
These spaces can potentially exist in any number of the four corners.
In the previous diagram, the top right space is present and identified
by the label \"corner component\".
<p>
Any number of these empty spaces can be replaced by using the
<code>setCorner</code> method to add a component to a particular corner.
(Note: The same component cannot be added to multiple corners.)
This is useful if there's
some extra decoration or function you'd like to add to the scroll pane.
The size of each corner component is entirely determined by the size of the
headers and/or scroll bars that surround it.
<p>
A corner component will only be visible if there is an empty space in that
corner for it to exist in. For example, consider a component set into the
top right corner of a scroll pane with a column header. If the scroll pane's
vertical scrollbar is not present, perhaps because the view component hasn't
grown large enough to require it, then the corner component will not be
shown (since there is no empty space in that corner created by the meeting
of the header and vertical scroll bar). Forcing the scroll bar to always be
shown, using
<code>setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS)</code>,
will ensure that the space for the corner component always exists.
<p>
To add a border around the main viewport,
you can use <code>setViewportBorder</code>.
(Of course, you can also add a border around the whole scroll pane using
<code>setBorder</code>.)
<p>
A common operation to want to do is to set the background color that will
be used if the main viewport view is smaller than the viewport, or is
not opaque. This can be accomplished by setting the background color
of the viewport, via <code>scrollPane.getViewport().setBackground()</code>.
The reason for setting the color of the viewport and not the scrollpane
is that by default <code>JViewport</code> is opaque
which, among other things, means it will completely fill
in its background using its background color.  Therefore when
<code>JScrollPane</code> draws its background the viewport will
usually draw over it.
<p>
By default <code>JScrollPane</code> uses <code>ScrollPaneLayout</code>
to handle the layout of its child Components. <code>ScrollPaneLayout</code>
determines the size to make the viewport view in one of two ways:
<ol>
  <li>If the view implements <code>Scrollable</code>
      a combination of <code>getPreferredScrollableViewportSize</code>,
      <code>getScrollableTracksViewportWidth</code> and
      <code>getScrollableTracksViewportHeight</code>is used, otherwise
  <li><code>getPreferredSize</code> is used.
</ol>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JScrollBar
@see JViewport
@see ScrollPaneLayout
@see Scrollable
@see Component#getPreferredSize
@see #setViewportView
@see #setRowHeaderView
@see #setColumnHeaderView
@see #setCorner
@see #setViewportBorder

@beaninfo
    attribute: isContainer true
    attribute: containerDelegate getViewport
  description: A specialized container that manages a viewport, optional scrollbars and headers

@author Hans Muller
"
      classrelation 4145538 // <generalisation>
	relation 4145538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4145538 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4145666 // <realization>
	relation 4145666 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4145666 // <realization>
	  b parent class_ref 437506 // ScrollPaneConstants
      end

      classrelation 4145794 // <realization>
	relation 4145794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4145794 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4145922 // viewportBorder (<unidirectional association>)
	relation 4145922 --->
	  a role_name "viewportBorder" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4145922 // viewportBorder (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4146050 // uiClassID (<unidirectional association>)
	relation 4146050 --->
	  a role_name "uiClassID" init_value " \"ScrollPaneUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146050 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2420226 "verticalScrollBarPolicy"
	protected explicit_type "int"
	init_value " VERTICAL_SCROLLBAR_AS_NEEDED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The display policy for the vertical scrollbar.
The default is
<code>ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED</code>.
@see #setVerticalScrollBarPolicy

"
      end

      attribute 2420354 "horizontalScrollBarPolicy"
	protected explicit_type "int"
	init_value " HORIZONTAL_SCROLLBAR_AS_NEEDED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The display policy for the horizontal scrollbar.
The default is
<code>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED</code>.
@see #setHorizontalScrollBarPolicy

"
      end

      classrelation 4146178 // viewport (<unidirectional association>)
	relation 4146178 --->
	  a role_name "viewport" protected
	    comment "
The scrollpane's viewport child.  Default is an empty
<code>JViewport</code>.
@see #setViewport

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146178 // viewport (<unidirectional association>)
	  b parent class_ref 438530 // JViewport
      end

      classrelation 4146306 // verticalScrollBar (<unidirectional association>)
	relation 4146306 --->
	  a role_name "verticalScrollBar" protected
	    comment "
The scrollpane's vertical scrollbar child.
Default is a <code>JScrollBar</code>.
@see #setVerticalScrollBar

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146306 // verticalScrollBar (<unidirectional association>)
	  b parent class_ref 436098 // JScrollBar
      end

      classrelation 4146434 // horizontalScrollBar (<unidirectional association>)
	relation 4146434 --->
	  a role_name "horizontalScrollBar" protected
	    comment "
The scrollpane's horizontal scrollbar child.
Default is a <code>JScrollBar</code>.
@see #setHorizontalScrollBar

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146434 // horizontalScrollBar (<unidirectional association>)
	  b parent class_ref 436098 // JScrollBar
      end

      classrelation 4146562 // rowHeader (<unidirectional association>)
	relation 4146562 --->
	  a role_name "rowHeader" protected
	    comment "
The row header child.  Default is <code>null</code>.
@see #setRowHeader

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146562 // rowHeader (<unidirectional association>)
	  b parent class_ref 438530 // JViewport
      end

      classrelation 4146690 // columnHeader (<unidirectional association>)
	relation 4146690 --->
	  a role_name "columnHeader" protected
	    comment "
The column header child.  Default is <code>null</code>.
@see #setColumnHeader

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146690 // columnHeader (<unidirectional association>)
	  b parent class_ref 438530 // JViewport
      end

      classrelation 4146818 // lowerLeft (<unidirectional association>)
	relation 4146818 --->
	  a role_name "lowerLeft" protected
	    comment "
The component to display in the lower left corner.
Default is <code>null</code>.
@see #setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146818 // lowerLeft (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4146946 // lowerRight (<unidirectional association>)
	relation 4146946 --->
	  a role_name "lowerRight" protected
	    comment "
The component to display in the lower right corner.
Default is <code>null</code>.
@see #setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4146946 // lowerRight (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4147074 // upperLeft (<unidirectional association>)
	relation 4147074 --->
	  a role_name "upperLeft" protected
	    comment "
The component to display in the upper left corner.
Default is <code>null</code>.
@see #setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4147074 // upperLeft (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4147202 // upperRight (<unidirectional association>)
	relation 4147202 --->
	  a role_name "upperRight" protected
	    comment "
The component to display in the upper right corner.
Default is <code>null</code>.
@see #setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4147202 // upperRight (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 2420482 "wheelScrollState"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "State flag for mouse wheel scrolling

"
      end

      operation 10692610 "JScrollPane"
	public explicit_return_type ""
	nparams 3
	  param inout name "view" type class_ref 338818 // Component
	  param in name "vsbPolicy" explicit_type "int"
	  param in name "hsbPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JScrollPane</code> that displays the view
component in a viewport
whose view position can be controlled with a pair of scrollbars.
The scrollbar policies specify when the scrollbars are displayed,
For example, if <code>vsbPolicy</code> is
<code>VERTICAL_SCROLLBAR_AS_NEEDED</code>
then the vertical scrollbar only appears if the view doesn't fit
vertically. The available policy settings are listed at
{@link #setVerticalScrollBarPolicy} and
{@link #setHorizontalScrollBarPolicy}.

@see #setViewportView

@param view the component to display in the scrollpanes viewport
@param vsbPolicy an integer that specifies the vertical
         scrollbar policy
@param hsbPolicy an integer that specifies the horizontal
         scrollbar policy
"
      end

      operation 10692738 "JScrollPane"
	public explicit_return_type ""
	nparams 1
	  param inout name "view" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JScrollPane</code> that displays the
contents of the specified
component, where both horizontal and vertical scrollbars appear
whenever the component's contents are larger than the view.

@see #setViewportView
@param view the component to display in the scrollpane's viewport
"
      end

      operation 10692866 "JScrollPane"
	public explicit_return_type ""
	nparams 2
	  param in name "vsbPolicy" explicit_type "int"
	  param in name "hsbPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty (no viewport view) <code>JScrollPane</code>
with specified
scrollbar policies. The available policy settings are listed at
{@link #setVerticalScrollBarPolicy} and
{@link #setHorizontalScrollBarPolicy}.

@see #setViewportView

@param vsbPolicy an integer that specifies the vertical
         scrollbar policy
@param hsbPolicy an integer that specifies the horizontal
         scrollbar policy
"
      end

      operation 10692994 "JScrollPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty (no viewport view) <code>JScrollPane</code>
where both horizontal and vertical scrollbars appear when needed.
"
      end

      operation 10693122 "getUI"
	public return_type class_ref 437378 // ScrollPaneUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the look and feel (L&amp;F) object that renders this component.

@return the <code>ScrollPaneUI</code> object that renders this
                         component
@see #setUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 10693250 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 437378 // ScrollPaneUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>ScrollPaneUI</code> object that provides the
look and feel (L&amp;F) for this component.

@param ui the <code>ScrollPaneUI</code> L&amp;F object
@see #getUI
"
      end

      operation 10693378 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the current <code>ScrollPaneUI</code> object with a version
from the current default look and feel.
To be called when the default look and feel changes.

@see JComponent#updateUI
@see UIManager#getUI
"
      end

      operation 10693506 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the suffix used to construct the name of the L&amp;F class used to
render this component.

@return the string \"ScrollPaneUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI

@beaninfo
   hidden: true
"
      end

      operation 10693634 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layout" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the layout manager for this <code>JScrollPane</code>.
This method overrides <code>setLayout</code> in
<code>java.awt.Container</code> to ensure that only
<code>LayoutManager</code>s which
are subclasses of <code>ScrollPaneLayout</code> can be used in a
<code>JScrollPane</code>. If <code>layout</code> is non-null, this
will invoke <code>syncWithScrollPane</code> on it.

@param layout the specified layout manager
@exception ClassCastException if layout is not a
                 <code>ScrollPaneLayout</code>
@see java.awt.Container#getLayout
@see java.awt.Container#setLayout

@beaninfo
   hidden: true
"
      end

      operation 10693762 "isValidateRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden to return true so that any calls to <code>revalidate</code>
on any descendants of this <code>JScrollPane</code> will cause the
entire tree beginning with this <code>JScrollPane</code> to be
validated.

@return true
@see java.awt.Container#validate
@see JComponent#revalidate
@see JComponent#isValidateRoot
@see java.awt.Container#isValidateRoot

@beaninfo
   hidden: true
"
      end

      operation 10693890 "getVerticalScrollBarPolicy"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vertical scroll bar policy value.
@return the <code>verticalScrollBarPolicy</code> property
@see #setVerticalScrollBarPolicy
"
      end

      operation 10694018 "setVerticalScrollBarPolicy"
	public explicit_return_type "void"
	nparams 1
	  param in name "policy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines when the vertical scrollbar appears in the scrollpane.
Legal values are:
<ul>
<li><code>ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED</code>
<li><code>ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER</code>
<li><code>ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS</code>
</ul>

@param policy one of the three values listed above
@exception IllegalArgumentException if <code>policy</code>
                         is not one of the legal values shown above
@see #getVerticalScrollBarPolicy

@beaninfo
  preferred: true
      bound: true
description: The scrollpane vertical scrollbar policy
       enum: VERTICAL_SCROLLBAR_AS_NEEDED ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED
             VERTICAL_SCROLLBAR_NEVER ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER
             VERTICAL_SCROLLBAR_ALWAYS ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS
"
      end

      operation 10694146 "getHorizontalScrollBarPolicy"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the horizontal scroll bar policy value.
@return the <code>horizontalScrollBarPolicy</code> property
@see #setHorizontalScrollBarPolicy
"
      end

      operation 10694274 "setHorizontalScrollBarPolicy"
	public explicit_return_type "void"
	nparams 1
	  param in name "policy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines when the horizontal scrollbar appears in the scrollpane.
The options are:<ul>
<li><code>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED</code>
<li><code>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER</code>
<li><code>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS</code>
</ul>

@param policy one of the three values listed above
@exception IllegalArgumentException if <code>policy</code>
                         is not one of the legal values shown above
@see #getHorizontalScrollBarPolicy

@beaninfo
  preferred: true
      bound: true
description: The scrollpane scrollbar policy
       enum: HORIZONTAL_SCROLLBAR_AS_NEEDED ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED
             HORIZONTAL_SCROLLBAR_NEVER ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER
             HORIZONTAL_SCROLLBAR_ALWAYS ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS
"
      end

      operation 10694402 "getViewportBorder"
	public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Border</code> object that surrounds the viewport.

@return the <code>viewportBorder</code> property
@see #setViewportBorder
"
      end

      operation 10694530 "setViewportBorder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "viewportBorder" type class_ref 357122 // Border
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a border around the viewport.  Note that the border isn't
set on the viewport directly, <code>JViewport</code> doesn't support
the <code>JComponent</code> border property.
Similarly setting the <code>JScrollPane</code>s
viewport doesn't affect the <code>viewportBorder</code> property.
<p>
The default value of this property is computed by the look
and feel implementation.

@param viewportBorder the border to be added
@see #getViewportBorder
@see #setViewport

@beaninfo
  preferred: true
      bound: true
description: The border around the viewport.
"
      end

      operation 10694658 "getViewportBorderBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds of the viewport's border.

@return a <code>Rectangle</code> object specifying the viewport border
"
      end

      class 1287938 "ScrollBar"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4147330 // <generalisation>
	  relation 4147330 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4147330 // <generalisation>
	    b parent class_ref 436098 // JScrollBar
	end

	classrelation 4147458 // <realization>
	  relation 4147458 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4147458 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	attribute 2420610 "unitIncrementSet"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Set to true when the unit increment has been explicitly set.
If this is false the viewport's view is obtained and if it
is an instance of <code>Scrollable</code> the unit increment
from it is used.

"
	end

	attribute 2420738 "blockIncrementSet"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Set to true when the block increment has been explicitly set.
If this is false the viewport's view is obtained and if it
is an instance of <code>Scrollable</code> the block increment
from it is used.

"
	end

	operation 10694786 "ScrollBar"
	  public explicit_return_type ""
	  nparams 1
	    param in name "orientation" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a scrollbar with the specified orientation.
The options are:
<ul>
<li><code>ScrollPaneConstants.VERTICAL</code>
<li><code>ScrollPaneConstants.HORIZONTAL</code>
</ul>

@param orientation  an integer specifying one of the legal
     orientation values shown above
@since 1.4
"
	end

	operation 10694914 "setUnitIncrement"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "unitIncrement" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Messages super to set the value, and resets the
<code>unitIncrementSet</code> instance variable to true.

@param unitIncrement the new unit increment value, in pixels
"
	end

	operation 10695042 "getUnitIncrement"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "direction" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Computes the unit increment for scrolling if the viewport's
view is a <code>Scrollable</code> object.
Otherwise return <code>super.getUnitIncrement</code>.

@param direction less than zero to scroll up/left,
     greater than zero for down/right
@return an integer, in pixels, containing the unit increment
@see Scrollable#getScrollableUnitIncrement
"
	end

	operation 10695170 "setBlockIncrement"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "blockIncrement" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Messages super to set the value, and resets the
<code>blockIncrementSet</code> instance variable to true.

@param blockIncrement the new block increment value, in pixels
"
	end

	operation 10695298 "getBlockIncrement"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "direction" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Computes the block increment for scrolling if the viewport's
view is a <code>Scrollable</code> object.  Otherwise
the <code>blockIncrement</code> equals the viewport's width
or height.  If there's no viewport return
<code>super.getBlockIncrement</code>.

@param direction less than zero to scroll up/left,
     greater than zero for down/right
@return an integer, in pixels, containing the block increment
@see Scrollable#getScrollableBlockIncrement
"
	end
      end

      operation 10695426 "createHorizontalScrollBar"
	public return_type class_ref 436098 // JScrollBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>JScrollPane.ScrollBar</code> by default.
Subclasses may override this method to force <code>ScrollPaneUI</code>
implementations to use a <code>JScrollBar</code> subclass.
Used by <code>ScrollPaneUI</code> implementations to
create the horizontal scrollbar.

@return a <code>JScrollBar</code> with a horizontal orientation
@see JScrollBar
"
      end

      operation 10695554 "getHorizontalScrollBar"
	public return_type class_ref 436098 // JScrollBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the horizontal scroll bar that controls the viewport's
horizontal view position.

@return the <code>horizontalScrollBar</code> property
@see #setHorizontalScrollBar
"
      end

      operation 10695682 "setHorizontalScrollBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "horizontalScrollBar" type class_ref 436098 // JScrollBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the scrollbar that controls the viewport's horizontal view
position to the scrollpane.
This is usually unnecessary, as <code>JScrollPane</code> creates
horizontal and vertical scrollbars by default.

@param horizontalScrollBar the horizontal scrollbar to be added
@see #createHorizontalScrollBar
@see #getHorizontalScrollBar

@beaninfo
       expert: true
        bound: true
  description: The horizontal scrollbar.
"
      end

      operation 10695810 "createVerticalScrollBar"
	public return_type class_ref 436098 // JScrollBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>JScrollPane.ScrollBar</code> by default.  Subclasses
may override this method to force <code>ScrollPaneUI</code>
implementations to use a <code>JScrollBar</code> subclass.
Used by <code>ScrollPaneUI</code> implementations to create the
vertical scrollbar.

@return a <code>JScrollBar</code> with a vertical orientation
@see JScrollBar
"
      end

      operation 10695938 "getVerticalScrollBar"
	public return_type class_ref 436098 // JScrollBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the vertical scroll bar that controls the viewports
vertical view position.

@return the <code>verticalScrollBar</code> property
@see #setVerticalScrollBar
"
      end

      operation 10696066 "setVerticalScrollBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "verticalScrollBar" type class_ref 436098 // JScrollBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the scrollbar that controls the viewports vertical view position
to the scrollpane.  This is usually unnecessary,
as <code>JScrollPane</code> creates vertical and
horizontal scrollbars by default.

@param verticalScrollBar the new vertical scrollbar to be added
@see #createVerticalScrollBar
@see #getVerticalScrollBar

@beaninfo
       expert: true
        bound: true
  description: The vertical scrollbar.
"
      end

      operation 10696194 "createViewport"
	protected return_type class_ref 438530 // JViewport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>JViewport</code> by default.
Used to create the
viewport (as needed) in <code>setViewportView</code>,
<code>setRowHeaderView</code>, and <code>setColumnHeaderView</code>.
Subclasses may override this method to return a subclass of
<code>JViewport</code>.

@return a new <code>JViewport</code>
"
      end

      operation 10696322 "getViewport"
	public return_type class_ref 438530 // JViewport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <code>JViewport</code>.

@see #setViewport
@return the <code>viewport</code> property
"
      end

      operation 10696450 "setViewport"
	public explicit_return_type "void"
	nparams 1
	  param inout name "viewport" type class_ref 438530 // JViewport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old viewport (if there is one); forces the
viewPosition of the new viewport to be in the +x,+y quadrant;
syncs up the row and column headers (if there are any) with the
new viewport; and finally syncs the scrollbars and
headers with the new viewport.
<p>
Most applications will find it more convenient to use
<code>setViewportView</code>
to add a viewport and a view to the scrollpane.

@param viewport the new viewport to be used; if viewport is
         <code>null</code>, the old viewport is still removed
         and the new viewport is set to <code>null</code>
@see #createViewport
@see #getViewport
@see #setViewportView

@beaninfo
      expert: true
       bound: true
   attribute: visualUpdate true
 description: The viewport child for this scrollpane

"
      end

      operation 10696578 "setViewportView"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a viewport if necessary and then sets its view.  Applications
that don't provide the view directly to the <code>JScrollPane</code>
constructor
should use this method to specify the scrollable child that's going
to be displayed in the scrollpane. For example:
<pre>
JScrollPane scrollpane = new JScrollPane();
scrollpane.setViewportView(myBigComponentToScroll);
</pre>
Applications should not add children directly to the scrollpane.

@param view the component to add to the viewport
@see #setViewport
@see JViewport#setView
"
      end

      operation 10696706 "getRowHeader"
	public return_type class_ref 438530 // JViewport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the row header.
@return the <code>rowHeader</code> property
@see #setRowHeader
"
      end

      operation 10696834 "setRowHeader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rowHeader" type class_ref 438530 // JViewport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old rowHeader, if it exists; if the new rowHeader
isn't <code>null</code>, syncs the y coordinate of its
viewPosition with
the viewport (if there is one) and then adds it to the scroll pane.
<p>
Most applications will find it more convenient to use
<code>setRowHeaderView</code>
to add a row header component and its viewport to the scroll pane.

@param rowHeader the new row header to be used; if <code>null</code>
         the old row header is still removed and the new rowHeader
         is set to <code>null</code>
@see #getRowHeader
@see #setRowHeaderView

@beaninfo
       bound: true
      expert: true
 description: The row header child for this scrollpane
"
      end

      operation 10696962 "setRowHeaderView"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a row-header viewport if necessary, sets
its view and then adds the row-header viewport
to the scrollpane.  For example:
<pre>
JScrollPane scrollpane = new JScrollPane();
scrollpane.setViewportView(myBigComponentToScroll);
scrollpane.setRowHeaderView(myBigComponentsRowHeader);
</pre>

@see #setRowHeader
@see JViewport#setView
@param view the component to display as the row header
"
      end

      operation 10697090 "getColumnHeader"
	public return_type class_ref 438530 // JViewport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the column header.
@return the <code>columnHeader</code> property
@see #setColumnHeader
"
      end

      operation 10697218 "setColumnHeader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "columnHeader" type class_ref 438530 // JViewport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old columnHeader, if it exists; if the new columnHeader
isn't <code>null</code>, syncs the x coordinate of its viewPosition
with the viewport (if there is one) and then adds it to the scroll pane.
<p>
Most applications will find it more convenient to use
<code>setColumnHeaderView</code>
to add a column header component and its viewport to the scroll pane.

@see #getColumnHeader
@see #setColumnHeaderView

@beaninfo
       bound: true
 description: The column header child for this scrollpane
   attribute: visualUpdate true
"
      end

      operation 10697346 "setColumnHeaderView"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a column-header viewport if necessary, sets
its view, and then adds the column-header viewport
to the scrollpane.  For example:
<pre>
JScrollPane scrollpane = new JScrollPane();
scrollpane.setViewportView(myBigComponentToScroll);
scrollpane.setColumnHeaderView(myBigComponentsColumnHeader);
</pre>

@see #setColumnHeader
@see JViewport#setView

@param view the component to display as the column header
"
      end

      operation 10697474 "getCorner"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component at the specified corner. The
<code>key</code> value specifying the corner is one of:
<ul>
<li>ScrollPaneConstants.LOWER_LEFT_CORNER
<li>ScrollPaneConstants.LOWER_RIGHT_CORNER
<li>ScrollPaneConstants.UPPER_LEFT_CORNER
<li>ScrollPaneConstants.UPPER_RIGHT_CORNER
<li>ScrollPaneConstants.LOWER_LEADING_CORNER
<li>ScrollPaneConstants.LOWER_TRAILING_CORNER
<li>ScrollPaneConstants.UPPER_LEADING_CORNER
<li>ScrollPaneConstants.UPPER_TRAILING_CORNER
</ul>

@param key one of the values as shown above
@return the corner component (which may be <code>null</code>)
        identified by the given key, or <code>null</code>
        if the key is invalid
@see #setCorner
"
      end

      operation 10697602 "setCorner"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "corner" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a child that will appear in one of the scroll panes
corners, if there's room.   For example with both scrollbars
showing (on the right and bottom edges of the scrollpane)
the lower left corner component will be shown in the space
between ends of the two scrollbars. Legal values for
the <b>key</b> are:
<ul>
<li>ScrollPaneConstants.LOWER_LEFT_CORNER
<li>ScrollPaneConstants.LOWER_RIGHT_CORNER
<li>ScrollPaneConstants.UPPER_LEFT_CORNER
<li>ScrollPaneConstants.UPPER_RIGHT_CORNER
<li>ScrollPaneConstants.LOWER_LEADING_CORNER
<li>ScrollPaneConstants.LOWER_TRAILING_CORNER
<li>ScrollPaneConstants.UPPER_LEADING_CORNER
<li>ScrollPaneConstants.UPPER_TRAILING_CORNER
</ul>
<p>
Although \"corner\" doesn't match any beans property
signature, <code>PropertyChange</code> events are generated with the
property name set to the corner key.

@param key identifies which corner the component will appear in
@param corner one of the following components:
<ul>
<li>lowerLeft
<li>lowerRight
<li>upperLeft
<li>upperRight
</ul>
@exception IllegalArgumentException if corner key is invalid
"
      end

      operation 10697730 "setComponentOrientation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "co" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the orientation for the vertical and horizontal
scrollbars as determined by the
<code>ComponentOrientation</code> argument.

@param  co one of the following values:
<ul>
<li>java.awt.ComponentOrientation.LEFT_TO_RIGHT
<li>java.awt.ComponentOrientation.RIGHT_TO_LEFT
<li>java.awt.ComponentOrientation.UNKNOWN
</ul>
@see java.awt.ComponentOrientation
"
      end

      operation 10697858 "isWheelScrollingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not scrolling will take place in response to the
mouse wheel.  Wheel scrolling is enabled by default.

@see #setWheelScrollingEnabled
@since 1.4
@beaninfo
      bound: true
description: Flag for enabling/disabling mouse wheel scrolling
"
      end

      operation 10697986 "setWheelScrollingEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handleWheel" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables/disables scrolling in response to movement of the mouse wheel.
Wheel scrolling is enabled by default.

@param handleWheel   <code>true</code> if scrolling should be done
                     automatically for a MouseWheelEvent,
                     <code>false</code> otherwise.
@see #isWheelScrollingEnabled
@see java.awt.event.MouseWheelEvent
@see java.awt.event.MouseWheelListener
@since 1.4
@beaninfo
      bound: true
description: Flag for enabling/disabling mouse wheel scrolling
"
      end

      operation 10698114 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10698242 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JScrollPane</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JScrollPane</code>.
"
      end

      operation 10698370 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JScrollPane.
For scroll panes, the AccessibleContext takes the form of an
AccessibleJScrollPane.
A new AccessibleJScrollPane instance is created if necessary.

@return an AccessibleJScrollPane that serves as the
        AccessibleContext of this JScrollPane
"
      end

      class 1288066 "AccessibleJScrollPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4147586 // <generalisation>
	  relation 4147586 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4147586 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4147714 // <realization>
	  relation 4147714 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4147714 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4147842 // <realization>
	  relation 4147842 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4147842 // <realization>
	    b parent class_ref 347266 // PropertyChangeListener
	end

	classrelation 4147970 // viewPort (<unidirectional association>)
	  relation 4147970 --->
	    a role_name "viewPort" init_value " null" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4147970 // viewPort (<unidirectional association>)
	    b parent class_ref 438530 // JViewport
	end

	operation 10698498 "resetViewPort"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets the viewport ChangeListener and PropertyChangeListener
"
	end

	operation 10698626 "AccessibleJScrollPane"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "AccessibleJScrollPane constructor
"
	end

	operation 10698754 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 10698882 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoked when the target of the listener has changed its state.

@param e  a <code>ChangeEvent</code> object. Must not be null.

@throws NullPointerException if the parameter is null.
"
	end

	operation 10699010 "propertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method gets called when a bound property is changed.
@param e A <code>PropertyChangeEvent</code> object describing
the event source and the property that has changed. Must not be null.

@throws NullPointerException if the parameter is null.
@since 1.5
"
	end

	operation 10699138 "setScrollBarRelations"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "scrollBar" type class_ref 436098 // JScrollBar
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the CONTROLLER_FOR and CONTROLLED_BY AccessibleRelations for
the JScrollPane and JScrollBar. JScrollBar must not be null.
"
	end
      end
    end

    class 366466 "AbstractListModel"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 366594 // ListModel
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The abstract definition for the data model that provides
a <code>List</code> with its contents.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@param <E> the type of the elements of this model

@author Hans Muller
"
      classrelation 646914 // <realization>
	relation 646914 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 646914 // <realization>
	  b parent class_ref 366594 // ListModel
      end

      classrelation 647042 // <realization>
	relation 647042 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 647042 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 647170 // listenerList (<unidirectional association>)
	relation 647170 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647170 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      operation 2047362 "addListDataListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 366722 // ListDataListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to the list that's notified each time a change
to the data model occurs.

@param l the <code>ListDataListener</code> to be added
"
      end

      operation 2047490 "removeListDataListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 366722 // ListDataListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from the list that's notified each time a
change to the data model occurs.

@param l the <code>ListDataListener</code> to be removed
"
      end

      operation 2047618 "getListDataListeners"
	cpp_inline public return_type class_ref 366722 // ListDataListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the list data listeners
registered on this <code>AbstractListModel</code>.

@return all of this model's <code>ListDataListener</code>s,
        or an empty array if no list data listeners
        are currently registered

@see #addListDataListener
@see #removeListDataListener

@since 1.4
"
      end

      operation 2047746 "fireContentsChanged"
	cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "source" type class_ref 129538 // Object
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>AbstractListModel</code> subclasses must call this method
<b>after</b>
one or more elements of the list change.  The changed elements
are specified by the closed interval index0, index1 -- the endpoints
are included.  Note that
index0 need not be less than or equal to index1.

@param source the <code>ListModel</code> that changed, typically \"this\"
@param index0 one end of the new interval
@param index1 the other end of the new interval
@see EventListenerList
@see DefaultListModel
"
      end

      operation 2047874 "fireIntervalAdded"
	cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "source" type class_ref 129538 // Object
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>AbstractListModel</code> subclasses must call this method
<b>after</b>
one or more elements are added to the model.  The new elements
are specified by a closed interval index0, index1 -- the enpoints
are included.  Note that
index0 need not be less than or equal to index1.

@param source the <code>ListModel</code> that changed, typically \"this\"
@param index0 one end of the new interval
@param index1 the other end of the new interval
@see EventListenerList
@see DefaultListModel
"
      end

      operation 2048002 "fireIntervalRemoved"
	cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "source" type class_ref 129538 // Object
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>AbstractListModel</code> subclasses must call this method
<b>after</b> one or more elements are removed from the model.
<code>index0</code> and <code>index1</code> are the end points
of the interval that's been removed.  Note that <code>index0</code>
need not be less than or equal to <code>index1</code>.

@param source the <code>ListModel</code> that changed, typically \"this\"
@param index0 one end of the removed interval,
              including <code>index0</code>
@param index1 the other end of the removed interval,
              including <code>index1</code>
@see EventListenerList
@see DefaultListModel
"
      end

      operation 2048130 "getListeners"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered as
<code><em>Foo</em>Listener</code>s
upon this model.
<code><em>Foo</em>Listener</code>s
are registered using the <code>add<em>Foo</em>Listener</code> method.
<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as <code><em>Foo</em>Listener.class</code>.
For example, you can query a list model
<code>m</code>
for its list data listeners
with the following code:

<pre>ListDataListener[] ldls = (ListDataListener[])(m.getListeners(ListDataListener.class));</pre>

If no such listeners exist,
this method returns an empty array.

@param listenerType  the type of listeners requested;
         this parameter should specify an interface
         that descends from <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s
         on this model,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code> doesn't
         specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getListDataListeners

@since 1.3
"
      end
    end

    class 366594 "ListModel"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface defines the methods components like JList use
to get the value of each cell in a list and the length of the list.
Logically the model is a vector, indices vary from 0 to
ListDataModel.getSize() - 1.  Any change to the contents or
length of the data model must be reported to all of the
ListDataListeners.

@param <E> the type of the elements of this model

@author Hans Muller
@see JList
"
      operation 2046850 "getSize"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the list.
@return the length of the list
"
      end

      operation 2046978 "getElementAt"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value at the specified index.
@param index the requested index
@return the value at <code>index</code>
"
      end

      operation 2047106 "addListDataListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 366722 // ListDataListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to the list that's notified each time a change
to the data model occurs.
@param l the <code>ListDataListener</code> to be added
"
      end

      operation 2047234 "removeListDataListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 366722 // ListDataListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from the list that's notified each time a
change to the data model occurs.
@param l the <code>ListDataListener</code> to be removed
"
      end
    end

    class 367618 "DefaultListCellRenderer"
      visibility public 
      nactuals 1
      actual class class_ref 367746 // ListCellRenderer
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Renders an item in a list.
<p>
<strong><a name=\"override\">Implementation Note:</a></strong>
This class overrides
<code>invalidate</code>,
<code>validate</code>,
<code>revalidate</code>,
<code>repaint</code>,
<code>isOpaque</code>,
and
<code>firePropertyChange</code>
solely to improve performance.
If not overridden, these frequently called methods would execute code paths
that are unnecessary for the default list cell renderer.
If you write your own renderer,
take care to weigh the benefits and
drawbacks of overriding these methods.

<p>

<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Philip Milne
@author Hans Muller
"
      classrelation 650242 // <generalisation>
	relation 650242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 650242 // <generalisation>
	  b parent class_ref 359810 // JLabel
      end

      classrelation 650370 // <realization>
	relation 650370 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 650370 // <realization>
	  b parent class_ref 367746 // ListCellRenderer
      end

      classrelation 650498 // <realization>
	relation 650498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 650498 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 650626 // SAFE_NO_FOCUS_BORDER (<unidirectional association>)
	relation 650626 --->
	  a role_name "SAFE_NO_FOCUS_BORDER" init_value " new EmptyBorder(1, 1, 1, 1)" class_relation const_relation private
	    comment "
An empty <code>Border</code>. This field might not be used. To change the
<code>Border</code> used by this renderer override the
<code>getListCellRendererComponent</code> method and set the border
of the returned component directly.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 650626 // SAFE_NO_FOCUS_BORDER (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 650754 // DEFAULT_NO_FOCUS_BORDER (<unidirectional association>)
	relation 650754 --->
	  a role_name "DEFAULT_NO_FOCUS_BORDER" init_value " new EmptyBorder(1, 1, 1, 1)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 650754 // DEFAULT_NO_FOCUS_BORDER (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 650882 // noFocusBorder (<unidirectional association>)
	relation 650882 --->
	  a role_name "noFocusBorder" init_value " DEFAULT_NO_FOCUS_BORDER" class_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 650882 // noFocusBorder (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 2054914 "DefaultListCellRenderer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a default renderer object for an item
in a list.
"
      end

      operation 2055042 "getNoFocusBorder"
	private return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2055170 "getListCellRendererComponent"
	public return_type class_ref 338818 // Component
	nparams 5
	  param inout name "list" type class_ref 364418 // JList
	  param inout name "value" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	  param inout name "isSelected" explicit_type "boolean"
	  param inout name "cellHasFocus" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2055298 "isOpaque"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.

@since 1.5
@return <code>true</code> if the background is completely opaque
        and differs from the JList's background;
        <code>false</code> otherwise
"
      end

      operation 2055426 "validate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2055554 "invalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.

@since 1.5
"
      end

      operation 2055682 "repaint"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.

@since 1.5
"
      end

      operation 2055810 "revalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2055938 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "tm" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056066 "repaint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056194 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056322 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "byte"
	  param in name "newValue" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056450 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "char"
	  param in name "newValue" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056578 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "short"
	  param in name "newValue" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056706 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056834 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "long"
	  param in name "newValue" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2056962 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "float"
	  param in name "newValue" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2057090 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "double"
	  param in name "newValue" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 2057218 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      class 367874 "UIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 651010 // <generalisation>
	  relation 651010 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 651010 // <generalisation>
	    b parent class_ref 367618 // DefaultListCellRenderer
	end

	classrelation 651138 // <realization>
	  relation 651138 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 651138 // <realization>
	    b parent class_ref 354818 // UIResource
	end
      end
    end

    class 367746 "ListCellRenderer"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Identifies components that can be used as \"rubber stamps\" to paint
the cells in a JList.  For example, to use a JLabel as a
ListCellRenderer, you would write something like this:
<pre>
{@code
class MyCellRenderer extends JLabel implements ListCellRenderer<Object> {
    public MyCellRenderer() {
        setOpaque(true);
    }

    public Component getListCellRendererComponent(JList<?> list,
                                                  Object value,
                                                  int index,
                                                  boolean isSelected,
                                                  boolean cellHasFocus) {

        setText(value.toString());

        Color background;
        Color foreground;

        // check if this cell represents the current DnD drop location
        JList.DropLocation dropLocation = list.getDropLocation();
        if (dropLocation != null
                && !dropLocation.isInsert()
                && dropLocation.getIndex() == index) {

            background = Color.BLUE;
            foreground = Color.WHITE;

        // check if this cell is selected
        } else if (isSelected) {
            background = Color.RED;
            foreground = Color.WHITE;

        // unselected, and not the DnD drop location
        } else {
            background = Color.WHITE;
            foreground = Color.BLACK;
        };

        setBackground(background);
        setForeground(foreground);

        return this;
    }
}
}
</pre>

@param <E> the type of values this renderer can be used for

@see JList
@see DefaultListCellRenderer

@author Hans Muller
"
      operation 2054786 "getListCellRendererComponent"
	cpp_inline public return_type class_ref 338818 // Component
	nparams 5
	  param inout name "list" type class_ref 364418 // JList
	  param inout name "value" explicit_type "E"
	  param in name "index" explicit_type "int"
	  param inout name "isSelected" explicit_type "boolean"
	  param inout name "cellHasFocus" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends E> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a component that has been configured to display the specified
value. That component's <code>paint</code> method is then called to
\"render\" the cell.  If it is necessary to compute the dimensions
of a list because the list cells do not have a fixed size, this method
is called to generate a component on which <code>getPreferredSize</code>
can be invoked.

@param list The JList we're painting.
@param value The value returned by list.getModel().getElementAt(index).
@param index The cells index.
@param isSelected True if the specified cell was selected.
@param cellHasFocus True if the specified cell has the focus.
@return A component whose paint() method will render the specified value.

@see JList
@see ListSelectionModel
@see ListModel
"
      end
    end

    class 368130 "ComboBoxModel"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 366594 // ListModel
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A data model for a combo box. This interface extends <code>ListDataModel</code>
and adds the concept of a <i>selected item</i>. The selected item is generally
the item which is visible in the combo box display area.
<p>
The selected item may not necessarily be managed by the underlying
<code>ListModel</code>. This disjoint behavior allows for the temporary
storage and retrieval of a selected item in the model.

@param <E> the type of the elements of this model

@author Arnaud Weber
"
      classrelation 651650 // <realization>
	relation 651650 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 651650 // <realization>
	  b parent class_ref 366594 // ListModel
      end

      operation 2058370 "setSelectedItem"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anItem" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the selected item. The implementation of this  method should notify
all registered <code>ListDataListener</code>s that the contents
have changed.

@param anItem the list object to select or <code>null</code>
       to clear the selection
"
      end

      operation 2058498 "getSelectedItem"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected item
@return The selected item or <code>null</code> if there is no selection
"
      end
    end

    class 370946 "LookAndFeel"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code LookAndFeel}, as the name implies, encapsulates a look and
feel. Beyond installing a look and feel most developers never need to
interact directly with {@code LookAndFeel}. In general only developers
creating a custom look and feel need to concern themselves with this class.
<p>
Swing is built upon the foundation that each {@code JComponent}
subclass has an implementation of a specific {@code ComponentUI}
subclass. The {@code ComponentUI} is often referred to as \"the ui\",
\"component ui\", or \"look and feel delegate\". The {@code ComponentUI}
subclass is responsible for providing the look and feel specific
functionality of the component. For example, {@code JTree} requires
an implementation of the {@code ComponentUI} subclass {@code
TreeUI}. The implementation of the specific {@code
ComponentUI} subclass is provided by the {@code LookAndFeel}. Each
{@code JComponent} subclass identifies the {@code ComponentUI}
subclass it requires by way of the {@code JComponent} method {@code
getUIClassID}.
<p>
Each {@code LookAndFeel} implementation must provide
an implementation of the appropriate {@code ComponentUI} subclass by
specifying a value for each of Swing's ui class ids in the {@code
UIDefaults} object returned from {@code getDefaults}. For example,
{@code BasicLookAndFeel} uses {@code BasicTreeUI} as the concrete
implementation for {@code TreeUI}. This is accomplished by {@code
BasicLookAndFeel} providing the key-value pair {@code
\"TreeUI\"-\"javax.swing.plaf.basic.BasicTreeUI\"}, in the
{@code UIDefaults} returned from {@code getDefaults}. Refer to
{@link UIDefaults#getUI(JComponent)} for details on how the implementation
of the {@code ComponentUI} subclass is obtained.
<p>
When a {@code LookAndFeel} is installed the {@code UIManager} does
not check that an entry exists for all ui class ids. As such,
random exceptions will occur if the current look and feel has not
provided a value for a particular ui class id and an instance of
the {@code JComponent} subclass is created.

<h2>Recommendations for Look and Feels</h2>

As noted in {@code UIManager} each {@code LookAndFeel} has the opportunity
to provide a set of defaults that are layered in with developer and
system defaults. Some of Swing's components require the look and feel
to provide a specific set of defaults. These are documented in the
classes that require the specific default.

<h3><a name=\"defaultRecommendation\">ComponentUIs and defaults</a></h3>

All {@code ComponentUIs} typically need to set various properties
on the {@code JComponent} the {@code ComponentUI} is providing the
look and feel for. This is typically done when the {@code
ComponentUI} is installed on the {@code JComponent}. Setting a
property should only be done if the developer has not set the
property. For non-primitive values it is recommended that the
{@code ComponentUI} only change the property on the {@code
JComponent} if the current value is {@code null} or implements
{@code UIResource}. If the current value is {@code null} or
implements {@code UIResource} it indicates the property has not
been set by the developer, and the ui is free to change it.  For
example, {@code BasicButtonUI.installDefaults} only changes the
font on the {@code JButton} if the return value from {@code
button.getFont()} is {@code null} or implements {@code
UIResource}. On the other hand if {@code button.getFont()} returned
a {@code non-null} value that did not implement {@code UIResource}
then {@code BasicButtonUI.installDefaults} would not change the
{@code JButton}'s font.
<p>
For primitive values, such as {@code opaque}, the method {@code
installProperty} should be invoked.  {@code installProperty} only changes
the corresponding property if the value has not been changed by the
developer.
<p>
{@code ComponentUI} implementations should use the various install methods
provided by this class as they handle the necessary checking and install
the property using the recommended guidelines.

<h3><a name=\"exceptions\"></a>Exceptions</h3>

All of the install methods provided by {@code LookAndFeel} need to
access the defaults if the value of the property being changed is
{@code null} or a {@code UIResource}. For example, installing the
font does the following:
<pre>
  JComponent c;
  Font font = c.getFont();
  if (font == null || (font instanceof UIResource)) {
      c.setFont(UIManager.getFont(\"fontKey\"));
  }
</pre>
If the font is {@code null} or a {@code UIResource}, the
defaults table is queried with the key {@code fontKey}. All of
{@code UIDefault's} get methods throw a {@code
NullPointerException} if passed in {@code null}. As such, unless
otherwise noted each of the various install methods of {@code
LookAndFeel} throw a {@code NullPointerException} if the current
value is {@code null} or a {@code UIResource} and the supplied
defaults key is {@code null}. In addition, unless otherwise specified
all of the {@code install} methods throw a {@code NullPointerException} if
a {@code null} component is passed in.

@author Tom Ball
@author Hans Muller
"
      operation 2070402 "installColors"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "defaultBgName" type class_ref 128130 // String
	  param inout name "defaultFgName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for setting a component's foreground
and background color properties with values from the
defaults.  The properties are only set if the current
value is either {@code null} or a {@code UIResource}.

@param c component to set the colors on
@param defaultBgName key for the background
@param defaultFgName key for the foreground

@see #installColorsAndFont
@see UIManager#getColor
@throws NullPointerException as described in
        <a href=\"#exceptions\">exceptions</a>
"
      end

      operation 2070530 "installColorsAndFont"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "defaultBgName" type class_ref 128130 // String
	  param inout name "defaultFgName" type class_ref 128130 // String
	  param inout name "defaultFontName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for setting a component's foreground,
background and font properties with values from the
defaults.  The properties are only set if the current
value is either {@code null} or a {@code UIResource}.

@param c component set to the colors and font on
@param defaultBgName key for the background
@param defaultFgName key for the foreground
@param defaultFontName key for the font
@throws NullPointerException as described in
        <a href=\"#exceptions\">exceptions</a>

@see #installColors
@see UIManager#getColor
@see UIManager#getFont
"
      end

      operation 2070658 "installBorder"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "defaultBorderName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for setting a component's border property with
a value from the defaults. The border is only set if the border is
{@code null} or an instance of {@code UIResource}.

@param c component to set the border on
@param defaultBorderName key specifying the border
@throws NullPointerException as described in
        <a href=\"#exceptions\">exceptions</a>
"
      end

      operation 2070786 "uninstallBorder"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for uninstalling a border. If the border of
the component is a {@code UIResource}, it is set to {@code
null}.

@param c component to uninstall the border on
@throws NullPointerException if {@code c} is {@code null}
"
      end

      operation 2070914 "installProperty"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "propertyValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for installing a property with the specified name
and value on a component if that property has not already been set
by the developer.  This method is intended to be used by
ui delegate instances that need to specify a default value for a
property of primitive type (boolean, int, ..), but do not wish
to override a value set by the client.  Since primitive property
values cannot be wrapped with the {@code UIResource} marker, this method
uses private state to determine whether the property has been set
by the client.

@throws IllegalArgumentException if the specified property is not
        one which can be set using this method
@throws ClassCastException if the property value has not been set
        by the developer and the type does not match the property's type
@throws NullPointerException if {@code c} is {@code null}, or the
        named property has not been set by the developer and
        {@code propertyValue} is {@code null}
@param c target component to set the property on
@param propertyName name of the property to set
@param propertyValue value of the property
@since 1.5
"
      end

      operation 2071042 "makeKeyBindings"
	class_operation public return_type class_ref 371202 // KeyBinding
	nparams 1
	  param inout name "keyBindingList" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for building an array of {@code
KeyBindings}. While this method is not deprecated, developers
should instead use {@code ActionMap} and {@code InputMap} for
supplying key bindings.
<p>
This method returns an array of {@code KeyBindings}, one for each
alternating {@code key-action} pair in {@code keyBindingList}.
A {@code key} can either be a {@code String} in the format
specified by the <code>KeyStroke.getKeyStroke</code> method, or
a {@code KeyStroke}. The {@code action} part of the pair is a
{@code String} that corresponds to the name of the {@code
Action}.
<p>
The following example illustrates creating a {@code KeyBinding} array
from six alternating {@code key-action} pairs:
<pre>
 JTextComponent.KeyBinding[] multilineBindings = makeKeyBindings( new Object[] {
         \"UP\", DefaultEditorKit.upAction,
       \"DOWN\", DefaultEditorKit.downAction,
    \"PAGE_UP\", DefaultEditorKit.pageUpAction,
  \"PAGE_DOWN\", DefaultEditorKit.pageDownAction,
      \"ENTER\", DefaultEditorKit.insertBreakAction,
        \"TAB\", DefaultEditorKit.insertTabAction
 });
</pre>
If {@code keyBindingList's} length is odd, the last element is
ignored.
<p>
Supplying a {@code null} value for either the {@code key} or
{@code action} part of the {@code key-action} pair results in
creating a {@code KeyBinding} with the corresponding value
{@code null}. As other parts of Swing's expect {@code non-null} values
in a {@code KeyBinding}, you should avoid supplying {@code null} as
either the {@code key} or {@code action} part of the {@code key-action}
pair.

@param keyBindingList an array of {@code key-action} pairs
@return an array of {@code KeyBindings}
@throws NullPointerException if {@code keyBindingList} is {@code null}
@throws ClassCastException if the {@code key} part of the pair is
        not a {@code KeyStroke} or {@code String}, or the
        {@code action} part of the pair is not a {@code String}
@see ActionMap
@see InputMap
@see KeyStroke#getKeyStroke
"
      end

      operation 2071170 "makeInputMap"
	class_operation public return_type class_ref 357634 // InputMap
	nparams 1
	  param inout name "keys" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code InputMapUIResource} from <code>keys</code>. This is
a convenience method for creating a new {@code InputMapUIResource},
invoking {@code loadKeyBindings(map, keys)}, and returning the
{@code InputMapUIResource}.

@param keys alternating pairs of {@code keystroke-action key}
       pairs as described in {@link #loadKeyBindings}
@return newly created and populated {@code InputMapUIResource}
@see #loadKeyBindings

@since 1.3
"
      end

      operation 2071298 "makeComponentInputMap"
	class_operation public return_type class_ref 357762 // ComponentInputMap
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "keys" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code ComponentInputMapUIResource} from
<code>keys</code>. This is a convenience method for creating a
new {@code ComponentInputMapUIResource}, invoking {@code
loadKeyBindings(map, keys)}, and returning the {@code
ComponentInputMapUIResource}.

@param c component to create the {@code ComponentInputMapUIResource}
         with
@param keys alternating pairs of {@code keystroke-action key}
       pairs as described in {@link #loadKeyBindings}
@return newly created and populated {@code InputMapUIResource}
@throws IllegalArgumentException if {@code c} is {@code null}

@see #loadKeyBindings
@see ComponentInputMapUIResource

@since 1.3
"
      end

      operation 2071426 "loadKeyBindings"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "retMap" type class_ref 357634 // InputMap
	  param inout name "keys" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Populates an {@code InputMap} with the specified bindings.
The bindings are supplied as a list of alternating
{@code keystroke-action key} pairs. The {@code keystroke} is either
an instance of {@code KeyStroke}, or a {@code String}
that identifies the {@code KeyStroke} for the binding. Refer
to {@code KeyStroke.getKeyStroke(String)} for the specific
format. The {@code action key} part of the pair is the key
registered in the {@code InputMap} for the {@code KeyStroke}.
<p>
The following illustrates loading an {@code InputMap} with two
{@code key-action} pairs:
<pre>
  LookAndFeel.loadKeyBindings(inputMap, new Object[] {
    \"control X\", \"cut\",
    \"control V\", \"paste\"
  });
</pre>
<p>
Supplying a {@code null} list of bindings ({@code keys}) does not
change {@code retMap} in any way.
<p>
Specifying a {@code null} {@code action key} results in
removing the {@code keystroke's} entry from the {@code InputMap}.
A {@code null} {@code keystroke} is ignored.

@param retMap {@code InputMap} to add the {@code key-action}
              pairs to
@param keys bindings to add to {@code retMap}
@throws NullPointerException if {@code keys} is
        {@code non-null}, not empty, and {@code retMap} is
        {@code null}

@see KeyStroke#getKeyStroke(String)
@see InputMap

@since 1.3
"
      end

      operation 2071554 "makeIcon"
	class_operation public return_type class_ref 129538 // Object
	nparams 2
	  param in name "baseClass" type class_ref 130818 // Class
	  param in name "gifFile" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}<?> ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@code UIDefault.LazyValue} that loads an
image. The returned value is an implementation of {@code
UIDefaults.LazyValue}. When {@code createValue} is invoked on
the returned object, the image is loaded. If the image is {@code
non-null}, it is then wrapped in an {@code Icon} that implements {@code
UIResource}. The image is loaded using {@code
Class.getResourceAsStream(gifFile)}.
<p>
This method does not check the arguments in any way. It is
strongly recommended that {@code non-null} values are supplied else
exceptions may occur when {@code createValue} is invoked on the
returned object.

@param baseClass {@code Class} used to load the resource
@param gifFile path to the image to load
@return a {@code UIDefaults.LazyValue}; when resolved the
        {@code LazyValue} loads the specified image
@see UIDefaults.LazyValue
@see Icon
@see Class#getResourceAsStream(String)
"
      end

      operation 2071682 "getLayoutStyle"
	public return_type class_ref 371330 // LayoutStyle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>LayoutStyle</code> for this look
and feel.  This never returns {@code null}.
<p>
You generally don't use the <code>LayoutStyle</code> from
the look and feel, instead use the <code>LayoutStyle</code>
method <code>getInstance</code>.

@see LayoutStyle#getInstance
@return the <code>LayoutStyle</code> for this look and feel
@since 1.6
"
      end

      operation 2071810 "provideErrorFeedback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the user attempts an invalid operation,
such as pasting into an uneditable <code>JTextField</code>
that has focus. The default implementation beeps. Subclasses
that wish different behavior should override this and provide
the additional feedback.

@param component the <code>Component</code> the error occurred in,
                 may be <code>null</code>
                 indicating the error condition is not directly
                 associated with a <code>Component</code>
@since 1.4
"
      end

      operation 2071938 "getDesktopPropertyValue"
	class_operation public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "systemPropertyName" type class_ref 128130 // String
	  param inout name "fallbackValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " provideErrorFeedback()

Returns the value of the specified system desktop property by
invoking <code>Toolkit.getDefaultToolkit().getDesktopProperty()</code>.
If the value of the specified property is {@code null},
{@code fallbackValue} is returned.

@param systemPropertyName the name of the system desktop property being queried
@param fallbackValue the object to be returned as the value if the system value is null
@return the current value of the desktop property

@see java.awt.Toolkit#getDesktopProperty

@since 1.4
"
      end

      operation 2072066 "getDisabledIcon"
	public return_type class_ref 352642 // Icon
	nparams 2
	  param inout name "component" type class_ref 338434 // JComponent
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Icon</code> with a disabled appearance.
This method is used to generate a disabled <code>Icon</code> when
one has not been specified.  For example, if you create a
<code>JButton</code> and only specify an <code>Icon</code> via
<code>setIcon</code> this method will be called to generate the
disabled <code>Icon</code>. If {@code null} is passed as
<code>icon</code> this method returns {@code null}.
<p>
Some look and feels might not render the disabled {@code Icon}, in which
case they will ignore this.

@param component {@code JComponent} that will display the {@code Icon},
        may be {@code null}
@param icon {@code Icon} to generate the disabled icon from
@return disabled {@code Icon}, or {@code null} if a suitable
        {@code Icon} can not be generated
@since 1.5
"
      end

      operation 2072194 "getDisabledSelectedIcon"
	public return_type class_ref 352642 // Icon
	nparams 2
	  param inout name "component" type class_ref 338434 // JComponent
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Icon</code> for use by disabled
components that are also selected. This method is used to generate an
<code>Icon</code> for components that are in both the disabled and
selected states but do not have a specific <code>Icon</code> for this
state.  For example, if you create a <code>JButton</code> and only
specify an <code>Icon</code> via <code>setIcon</code> this method
will be called to generate the disabled and selected
<code>Icon</code>. If {@code null} is passed as <code>icon</code> this
methods returns {@code null}.
<p>
Some look and feels might not render the disabled and selected
{@code Icon}, in which case they will ignore this.

@param component {@code JComponent} that will display the {@code Icon},
       may be {@code null}
@param icon {@code Icon} to generate disabled and selected icon from
@return disabled and selected icon, or {@code null} if a suitable
        {@code Icon} can not be generated.
@since 1.5
"
      end

      operation 2072322 "getName"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a short string that identifies this look and feel, e.g.
\"CDE/Motif\".  This string should be appropriate for a menu item.
Distinct look and feels should have different names, e.g.
a subclass of MotifLookAndFeel that changes the way a few components
are rendered should be called \"CDE/Motif My Way\"; something
that would be useful to a user trying to select a L&amp;F from a list
of names.

@return short identifier for the look and feel
"
      end

      operation 2072450 "getID"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string that identifies this look and feel.  This string
will be used by applications/services that want to recognize
well known look and feel implementations.  Presently
the well known names are \"Motif\", \"Windows\", \"Mac\", \"Metal\".  Note
that a LookAndFeel derived from a well known superclass
that doesn't make any fundamental changes to the look or feel
shouldn't override this method.

@return identifier for the look and feel
"
      end

      operation 2072578 "getDescription"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a one line description of this look and feel implementation,
e.g. \"The CDE/Motif Look and Feel\".   This string is intended for
the user, e.g. in the title of a window or in a ToolTip message.

@return short description for the look and feel
"
      end

      operation 2072706 "getSupportsWindowDecorations"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the <code>LookAndFeel</code> returned
<code>RootPaneUI</code> instances support providing {@code Window}
decorations in a <code>JRootPane</code>.
<p>
The default implementation returns {@code false}, subclasses that
support {@code Window} decorations should override this and return
{@code true}.

@return {@code true} if the {@code RootPaneUI} instances created by
        this look and feel support client side decorations
@see JDialog#setDefaultLookAndFeelDecorated
@see JFrame#setDefaultLookAndFeelDecorated
@see JRootPane#setWindowDecorationStyle
@since 1.4
"
      end

      operation 2072834 "isNativeLookAndFeel"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the underlying platform has a \"native\" look and feel, and
this is an implementation of it, return {@code true}.  For
example, when the underlying platform is Solaris running CDE
a CDE/Motif look and feel implementation would return {@code
true}.

@return {@code true} if this look and feel represents the underlying
        platform look and feel
"
      end

      operation 2072962 "isSupportedLookAndFeel"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return {@code true} if the underlying platform supports and or permits
this look and feel.  This method returns {@code false} if the look
and feel depends on special resources or legal agreements that
aren't defined for the current platform.


@return {@code true} if this is a supported look and feel
@see UIManager#setLookAndFeel
"
      end

      operation 2073090 "initialize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the look and feel. While this method is public,
it should only be invoked by the {@code UIManager} when a
look and feel is installed as the current look and feel. This
method is invoked before the {@code UIManager} invokes
{@code getDefaults}. This method is intended to perform any
initialization for the look and feel. Subclasses
should do any one-time setup they need here, rather than
in a static initializer, because look and feel class objects
may be loaded just to discover that {@code isSupportedLookAndFeel()}
returns {@code false}.

@see #uninitialize
@see UIManager#setLookAndFeel
"
      end

      operation 2073218 "uninitialize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Uninitializes the look and feel. While this method is public,
it should only be invoked by the {@code UIManager} when
the look and feel is uninstalled. For example,
{@code UIManager.setLookAndFeel} invokes this when the look and
feel is changed.
<p>
Subclasses may choose to free up some resources here.

@see #initialize
@see UIManager#setLookAndFeel
"
      end

      operation 2073346 "getDefaults"
	public return_type class_ref 363650 // UIDefaults
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the look and feel defaults. While this method is public,
it should only be invoked by the {@code UIManager} when the
look and feel is set as the current look and feel and after
{@code initialize} has been invoked.

@return the look and feel defaults
@see #initialize
@see #uninitialize
@see UIManager#setLookAndFeel
"
      end

      operation 2073474 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a String representation of this object
"
      end
    end

    class 371330 "LayoutStyle"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>LayoutStyle</code> provides information about how to position
components.  This class is primarily useful for visual tools and
layout managers.  Most developers will not need to use this class.
<p>
You typically don't set or create a
<code>LayoutStyle</code>.  Instead use the static method
<code>getInstance</code> to obtain the current instance.

@since 1.6
"
      operation 10780802 "setInstance"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "style" type class_ref 371330 // LayoutStyle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the shared instance of <code>LayoutStyle</code>.  Specifying
<code>null</code> results in using the <code>LayoutStyle</code> from
the current <code>LookAndFeel</code>.

@param style the <code>LayoutStyle</code>, or <code>null</code>
@see #getInstance
"
      end

      operation 10780930 "getInstance"
	class_operation public return_type class_ref 371330 // LayoutStyle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the shared instance of <code>LayoutStyle</code>.  If an instance
has not been specified in <code>setInstance</code>, this will return
the <code>LayoutStyle</code> from the current <code>LookAndFeel</code>.

@see LookAndFeel#getLayoutStyle
@return the shared instance of <code>LayoutStyle</code>
"
      end

      class 1294850 "ComponentPlacement"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2433154 "RELATED"
	  public type class_ref 1294850 // ComponentPlacement
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Enumeration value indicating the two components are
visually related and will be placed in the same parent.
For example, a <code>JLabel</code> providing a label for a
<code>JTextField</code> is typically visually associated
with the <code>JTextField</code>; the constant <code>RELATED</code>
is used for this.

"
	end

	attribute 2433282 "UNRELATED"
	  public type class_ref 1294850 // ComponentPlacement
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Enumeration value indicating the two components are
visually unrelated and will be placed in the same parent.
For example, groupings of components are usually visually
separated; the constant <code>UNRELATED</code> is used for this.

"
	end

	attribute 2433410 "INDENT"
	  public type class_ref 1294850 // ComponentPlacement
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Enumeration value indicating the distance to indent a component
is being requested.  For example, often times the children of
a label will be horizontally indented from the label.  To determine
the preferred distance for such a gap use the
<code>INDENT</code> type.
<p>
This value is typically only useful with a direction of
<code>EAST</code> or <code>WEST</code>.
"
	end
      end

      operation 10781058 "LayoutStyle"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>LayoutStyle</code>.  You generally don't
create a <code>LayoutStyle</code>.  Instead use the method
<code>getInstance</code> to obtain the current
<code>LayoutStyle</code>.
"
      end

      operation 10781186 "getPreferredGap"
	abstract public explicit_return_type "int"
	nparams 5
	  param inout name "component1" type class_ref 338434 // JComponent
	  param inout name "component2" type class_ref 338434 // JComponent
	  param inout name "type" type class_ref 1294850 // ComponentPlacement
	  param in name "position" explicit_type "int"
	  param inout name "parent" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of space to use between two components.
The return value indicates the distance to place
<code>component2</code> relative to <code>component1</code>.
For example, the following returns the amount of space to place
between <code>component2</code> and <code>component1</code>
when <code>component2</code> is placed vertically above
<code>component1</code>:
<pre>
  int gap = getPreferredGap(component1, component2,
                            ComponentPlacement.RELATED,
                            SwingConstants.NORTH, parent);
</pre>
The <code>type</code> parameter indicates the relation between
the two components.  If the two components will be contained in
the same parent and are showing similar logically related
items, use <code>RELATED</code>.  If the two components will be
contained in the same parent but show logically unrelated items
use <code>UNRELATED</code>.  Some look and feels may not
distinguish between the <code>RELATED</code> and
<code>UNRELATED</code> types.
<p>
The return value is not intended to take into account the
current size and position of <code>component2</code> or
<code>component1</code>.  The return value may take into
consideration various properties of the components.  For
example, the space may vary based on font size, or the preferred
size of the component.

@param component1 the <code>JComponent</code>
              <code>component2</code> is being placed relative to
@param component2 the <code>JComponent</code> being placed
@param position the position <code>component2</code> is being placed
       relative to <code>component1</code>; one of
       <code>SwingConstants.NORTH</code>,
       <code>SwingConstants.SOUTH</code>,
       <code>SwingConstants.EAST</code> or
       <code>SwingConstants.WEST</code>
@param type how the two components are being placed
@param parent the parent of <code>component2</code>; this may differ
       from the actual parent and it may be <code>null</code>
@return the amount of space to place between the two components
@throws NullPointerException if <code>component1</code>,
        <code>component2</code> or <code>type</code> is
        <code>null</code>
@throws IllegalArgumentException if <code>position</code> is not
        one of <code>SwingConstants.NORTH</code>,
        <code>SwingConstants.SOUTH</code>,
        <code>SwingConstants.EAST</code> or
        <code>SwingConstants.WEST</code>
@see LookAndFeel#getLayoutStyle
@since 1.6
"
      end

      operation 10781314 "getContainerGap"
	abstract public explicit_return_type "int"
	nparams 3
	  param inout name "component" type class_ref 338434 // JComponent
	  param in name "position" explicit_type "int"
	  param inout name "parent" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of space to place between the component and specified
edge of its parent.

@param component the <code>JComponent</code> being positioned
@param position the position <code>component</code> is being placed
       relative to its parent; one of
       <code>SwingConstants.NORTH</code>,
       <code>SwingConstants.SOUTH</code>,
       <code>SwingConstants.EAST</code> or
       <code>SwingConstants.WEST</code>
@param parent the parent of <code>component</code>; this may differ
       from the actual parent and may be <code>null</code>
@return the amount of space to place between the component and specified
        edge
@throws IllegalArgumentException if <code>position</code> is not
        one of <code>SwingConstants.NORTH</code>,
        <code>SwingConstants.SOUTH</code>,
        <code>SwingConstants.EAST</code> or
        <code>SwingConstants.WEST</code>
"
      end
    end

    class 379522 "JInternalFrame"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A lightweight object that provides many of the features of
a native frame, including dragging, closing, becoming an icon,
resizing, title display, and support for a menu bar.
For task-oriented documentation and examples of using internal frames,
see <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html\" target=\"_top\">How to Use Internal Frames</a>,
a section in <em>The Java Tutorial</em>.

<p>

Generally,
you add <code>JInternalFrame</code>s to a <code>JDesktopPane</code>. The UI
delegates the look-and-feel-specific actions to the
<code>DesktopManager</code>
object maintained by the <code>JDesktopPane</code>.
<p>
The <code>JInternalFrame</code> content pane
is where you add child components.
As a convenience, the {@code add}, {@code remove}, and {@code setLayout}
methods of this class are overridden, so that they delegate calls
to the corresponding methods of the {@code ContentPane}.
For example, you can add a child component to an internal frame as follows:
<pre>
      internalFrame.add(child);
</pre>
And the child will be added to the contentPane.
The content pane is actually managed by an instance of
<code>JRootPane</code>,
which also manages a layout pane, glass pane, and
optional menu bar for the internal frame. Please see the
<code>JRootPane</code>
documentation for a complete description of these components.
Refer to {@link javax.swing.RootPaneContainer}
for details on adding, removing and setting the <code>LayoutManager</code>
of a <code>JInternalFrame</code>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see InternalFrameEvent
@see JDesktopPane
@see DesktopManager
@see JInternalFrame.JDesktopIcon
@see JRootPane
@see javax.swing.RootPaneContainer

@author David Kloba
@author Rich Schiavi
@beaninfo
     attribute: isContainer true
     attribute: containerDelegate getContentPane
     description: A frame container which is contained within
                  another window.
"
      class 396546 "JDesktopIcon"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4130050 // <generalisation>
	  relation 4130050 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4130050 // <generalisation>
	    b parent class_ref 338434 // JComponent
	end

	classrelation 4130178 // <realization>
	  relation 4130178 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4130178 // <realization>
	    b parent class_ref 347778 // Accessible
	end

	classrelation 4130306 // internalFrame (<unidirectional association>)
	  relation 4130306 --->
	    a role_name "internalFrame" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4130306 // internalFrame (<unidirectional association>)
	    b parent class_ref 379522 // JInternalFrame
	end

	operation 10638978 "JDesktopIcon"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "f" type class_ref 379522 // JInternalFrame
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an icon for an internal frame.

@param f  the <code>JInternalFrame</code>
             for which the icon is created
"
	end

	operation 10639106 "getUI"
	  public return_type class_ref 396418 // DesktopIconUI
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the look-and-feel object that renders this component.

@return the <code>DesktopIconUI</code> object that renders
             this component
"
	end

	operation 10639234 "setUI"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ui" type class_ref 396418 // DesktopIconUI
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the look-and-feel object that renders this component.

@param ui  the <code>DesktopIconUI</code> look-and-feel object
@see UIDefaults#getUI
"
	end

	operation 10639362 "getInternalFrame"
	  public return_type class_ref 379522 // JInternalFrame
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>JInternalFrame</code> that this
<code>DesktopIcon</code> is associated with.

@return the <code>JInternalFrame</code> with which this icon
             is associated
"
	end

	operation 10639490 "setInternalFrame"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "f" type class_ref 379522 // JInternalFrame
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>JInternalFrame</code> with which this
<code>DesktopIcon</code> is associated.

@param f  the <code>JInternalFrame</code> with which this icon
             is associated
"
	end

	operation 10639618 "getDesktopPane"
	  public return_type class_ref 399234 // JDesktopPane
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience method to ask the icon for the <code>Desktop</code>
object it belongs to.

@return the <code>JDesktopPane</code> that contains this
          icon's internal frame, or <code>null</code> if none found
"
	end

	operation 10639746 "updateUI"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notification from the <code>UIManager</code> that the look and feel
has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
	end

	operation 10639874 "updateUIWhenHidden"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This method is called if updateUI was called on the associated
JInternalFrame.  It's necessary to avoid infinite recursion.
"
	end

	operation 10640002 "getUIClassID"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of the look-and-feel
class that renders this component.

@return the string \"DesktopIconUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
	end

	operation 10640130 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 173442 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "//////////////
 Serialization support
//////////////"
	end

	operation 10640258 "getAccessibleContext"
	  public return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JDesktopIcon.
For desktop icons, the AccessibleContext takes the form of an
AccessibleJDesktopIcon.
A new AccessibleJDesktopIcon instance is created if necessary.

@return an AccessibleJDesktopIcon that serves as the
        AccessibleContext of this JDesktopIcon
"
	end

	class 1284994 "AccessibleJDesktopIcon"
	  visibility protected 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4130434 // <generalisation>
	    relation 4130434 ---|>
	      a public
		java "${type}"
		classrelation_ref 4130434 // <generalisation>
	      b parent class_ref 358530 // AccessibleJComponent
	  end

	  classrelation 4130562 // <realization>
	    relation 4130562 -_-|>
	      a public
		java "${type}"
		classrelation_ref 4130562 // <realization>
	      b parent class_ref 349058 // AccessibleValue
	  end

	  operation 10640386 "getAccessibleRole"
	    public return_type class_ref 348034 // AccessibleRole
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	  end

	  operation 10640514 "getAccessibleValue"
	    public return_type class_ref 349058 // AccessibleValue
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
returns this object, which is responsible for implementing the
<code>AccessibleValue</code> interface on behalf of itself.

@return this object
"
	  end

	  operation 10640642 "getCurrentAccessibleValue"
	    public return_type class_ref 398210 // Number
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " AccessibleValue methods


Gets the value of this object as a <code>Number</code>.

@return value of the object -- can be <code>null</code> if this object does not
have a value
"
	  end

	  operation 10640770 "setCurrentAccessibleValue"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "n" type class_ref 398210 // Number
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Sets the value of this object as a <code>Number</code>.

@return <code>true</code> if the value was set
"
	  end

	  operation 10640898 "getMinimumAccessibleValue"
	    public return_type class_ref 398210 // Number
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the minimum value of this object as a <code>Number</code>.

@return minimum value of the object; <code>null</code> if this object does not
have a minimum value
"
	  end

	  operation 10641026 "getMaximumAccessibleValue"
	    public return_type class_ref 398210 // Number
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the maximum value of this object as a <code>Number</code>.

@return maximum value of the object; <code>null</code> if this object does not
have a maximum value
"
	  end
	end
      end

      classrelation 4126594 // <generalisation>
	relation 4126594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4126594 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4126722 // <realization>
	relation 4126722 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4126722 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4126850 // <realization>
	relation 4126850 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4126850 // <realization>
	  b parent class_ref 1276162 // WindowConstants
      end

      classrelation 4126978 // <realization>
	relation 4126978 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4126978 // <realization>
	  b parent class_ref 469762 // RootPaneContainer
      end

      classrelation 4127106 // uiClassID (<unidirectional association>)
	relation 4127106 --->
	  a role_name "uiClassID" init_value " \"InternalFrameUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4127106 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4127234 // rootPane (<unidirectional association>)
	relation 4127234 --->
	  a role_name "rootPane" protected
	    comment "
The <code>JRootPane</code> instance that manages the
content pane
and optional menu bar for this internal frame, as well as the
glass pane.

@see JRootPane
@see RootPaneContainer

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4127234 // rootPane (<unidirectional association>)
	  b parent class_ref 434050 // JRootPane
      end

      attribute 2410370 "rootPaneCheckingEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then calls to <code>add</code> and <code>setLayout</code>
will be forwarded to the <code>contentPane</code>. This is initially
false, but is set to true when the <code>JInternalFrame</code> is
constructed.

@see #isRootPaneCheckingEnabled
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer

"
      end

      attribute 2410498 "closable"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The frame can be closed. 
"
      end

      attribute 2410626 "isClosed"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The frame has been closed. 
"
      end

      attribute 2410754 "maximizable"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The frame can be expanded to the size of the desktop pane. 
"
      end

      attribute 2410882 "isMaximum"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The frame has been expanded to its maximum size.
@see #maximizable

"
      end

      attribute 2411010 "iconable"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The frame can \"iconified\" (shrunk down and displayed as
an icon-image).
@see JInternalFrame.JDesktopIcon
@see #setIconifiable

"
      end

      attribute 2411138 "isIcon"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The frame has been iconified.
@see #isIcon()

"
      end

      attribute 2411266 "resizable"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The frame's size can be changed. 
"
      end

      attribute 2411394 "isSelected"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The frame is currently selected. 
"
      end

      classrelation 4127362 // frameIcon (<unidirectional association>)
	relation 4127362 --->
	  a role_name "frameIcon" protected
	    comment " The icon shown in the top-left corner of this internal frame. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4127362 // frameIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 4127490 // title (<unidirectional association>)
	relation 4127490 --->
	  a role_name "title" protected
	    comment " The title displayed in this internal frame's title bar. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4127490 // title (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4127618 // desktopIcon (<unidirectional association>)
	relation 4127618 --->
	  a role_name "desktopIcon" protected
	    comment "
The icon that is displayed when this internal frame is iconified.
@see #iconable

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4127618 // desktopIcon (<unidirectional association>)
	  b parent class_ref 396546 // JDesktopIcon
      end

      classrelation 4127746 // lastCursor (<unidirectional association>)
	relation 4127746 --->
	  a role_name "lastCursor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4127746 // lastCursor (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      attribute 2411522 "opened"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4127874 // normalBounds (<unidirectional association>)
	relation 4127874 --->
	  a role_name "normalBounds" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4127874 // normalBounds (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      attribute 2411650 "defaultCloseOperation"
	private explicit_type "int"
	init_value " DISPOSE_ON_CLOSE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4128002 // lastFocusOwner (<unidirectional association>)
	relation 4128002 --->
	  a role_name "lastFocusOwner" private
	    comment "
Contains the Component that focus is to go when
<code>restoreSubcomponentFocus</code> is invoked, that is,
<code>restoreSubcomponentFocus</code> sets this to the value returned
from <code>getMostRecentFocusOwner</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128002 // lastFocusOwner (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4128130 // CONTENT_PANE_PROPERTY (<unidirectional association>)
	relation 4128130 --->
	  a role_name "CONTENT_PANE_PROPERTY" init_value " \"contentPane\"" class_relation const_relation public
	    comment " Bound property name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128130 // CONTENT_PANE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4128258 // MENU_BAR_PROPERTY (<unidirectional association>)
	relation 4128258 --->
	  a role_name "MENU_BAR_PROPERTY" init_value " \"JMenuBar\"" class_relation const_relation public
	    comment " Bound property name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128258 // MENU_BAR_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4128386 // TITLE_PROPERTY (<unidirectional association>)
	relation 4128386 --->
	  a role_name "TITLE_PROPERTY" init_value " \"title\"" class_relation const_relation public
	    comment " Bound property name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128386 // TITLE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4128514 // LAYERED_PANE_PROPERTY (<unidirectional association>)
	relation 4128514 --->
	  a role_name "LAYERED_PANE_PROPERTY" init_value " \"layeredPane\"" class_relation const_relation public
	    comment " Bound property name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128514 // LAYERED_PANE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4128642 // ROOT_PANE_PROPERTY (<unidirectional association>)
	relation 4128642 --->
	  a role_name "ROOT_PANE_PROPERTY" init_value " \"rootPane\"" class_relation const_relation public
	    comment " Bound property name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128642 // ROOT_PANE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4128770 // GLASS_PANE_PROPERTY (<unidirectional association>)
	relation 4128770 --->
	  a role_name "GLASS_PANE_PROPERTY" init_value " \"glassPane\"" class_relation const_relation public
	    comment " Bound property name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128770 // GLASS_PANE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4128898 // FRAME_ICON_PROPERTY (<unidirectional association>)
	relation 4128898 --->
	  a role_name "FRAME_ICON_PROPERTY" init_value " \"frameIcon\"" class_relation const_relation public
	    comment " Bound property name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4128898 // FRAME_ICON_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4129026 // IS_SELECTED_PROPERTY (<unidirectional association>)
	relation 4129026 --->
	  a role_name "IS_SELECTED_PROPERTY" init_value " \"selected\"" class_relation const_relation public
	    comment "
Constrained property name indicated that this frame has
selected status.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4129026 // IS_SELECTED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4129154 // IS_CLOSED_PROPERTY (<unidirectional association>)
	relation 4129154 --->
	  a role_name "IS_CLOSED_PROPERTY" init_value " \"closed\"" class_relation const_relation public
	    comment " Constrained property name indicating that the internal frame is closed. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4129154 // IS_CLOSED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4129282 // IS_MAXIMUM_PROPERTY (<unidirectional association>)
	relation 4129282 --->
	  a role_name "IS_MAXIMUM_PROPERTY" init_value " \"maximum\"" class_relation const_relation public
	    comment " Constrained property name indicating that the internal frame is maximized. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4129282 // IS_MAXIMUM_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4129410 // IS_ICON_PROPERTY (<unidirectional association>)
	relation 4129410 --->
	  a role_name "IS_ICON_PROPERTY" init_value " \"icon\"" class_relation const_relation public
	    comment " Constrained property name indicating that the internal frame is iconified. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4129410 // IS_ICON_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4129538 // PROPERTY_CHANGE_LISTENER_KEY (<unidirectional association>)
	relation 4129538 --->
	  a role_name "PROPERTY_CHANGE_LISTENER_KEY" init_value "
        new StringBuilder(\"InternalFramePropertyChangeListener\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4129538 // PROPERTY_CHANGE_LISTENER_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10626434 "addPropertyChangeListenerIfNecessary"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1284738 "FocusPropertyChangeListener"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4129666 // <realization>
	  relation 4129666 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4129666 // <realization>
	    b parent class_ref 347266 // PropertyChangeListener
	end

	operation 10626562 "propertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10626690 "updateLastFocusOwner"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10626818 "JInternalFrame"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a non-resizable, non-closable, non-maximizable,
non-iconifiable <code>JInternalFrame</code> with no title.
"
      end

      operation 10626946 "JInternalFrame"
	public explicit_return_type ""
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a non-resizable, non-closable, non-maximizable,
non-iconifiable <code>JInternalFrame</code> with the specified title.
Note that passing in a <code>null</code> <code>title</code> results in
unspecified behavior and possibly an exception.

@param title  the non-<code>null</code> <code>String</code>
    to display in the title bar
"
      end

      operation 10627074 "JInternalFrame"
	public explicit_return_type ""
	nparams 2
	  param inout name "title" type class_ref 128130 // String
	  param inout name "resizable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a non-closable, non-maximizable, non-iconifiable
<code>JInternalFrame</code> with the specified title
and resizability.

@param title      the <code>String</code> to display in the title bar
@param resizable  if <code>true</code>, the internal frame can be resized
"
      end

      operation 10627202 "JInternalFrame"
	public explicit_return_type ""
	nparams 3
	  param inout name "title" type class_ref 128130 // String
	  param inout name "resizable" explicit_type "boolean"
	  param inout name "closable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a non-maximizable, non-iconifiable <code>JInternalFrame</code>
with the specified title, resizability, and
closability.

@param title      the <code>String</code> to display in the title bar
@param resizable  if <code>true</code>, the internal frame can be resized
@param closable   if <code>true</code>, the internal frame can be closed
"
      end

      operation 10627330 "JInternalFrame"
	public explicit_return_type ""
	nparams 4
	  param inout name "title" type class_ref 128130 // String
	  param inout name "resizable" explicit_type "boolean"
	  param inout name "closable" explicit_type "boolean"
	  param inout name "maximizable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a non-iconifiable <code>JInternalFrame</code>
with the specified title,
resizability, closability, and maximizability.

@param title       the <code>String</code> to display in the title bar
@param resizable   if <code>true</code>, the internal frame can be resized
@param closable    if <code>true</code>, the internal frame can be closed
@param maximizable if <code>true</code>, the internal frame can be maximized
"
      end

      operation 10627458 "JInternalFrame"
	public explicit_return_type ""
	nparams 5
	  param inout name "title" type class_ref 128130 // String
	  param inout name "resizable" explicit_type "boolean"
	  param inout name "closable" explicit_type "boolean"
	  param inout name "maximizable" explicit_type "boolean"
	  param inout name "iconifiable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JInternalFrame</code> with the specified title,
resizability, closability, maximizability, and iconifiability.
All <code>JInternalFrame</code> constructors use this one.

@param title       the <code>String</code> to display in the title bar
@param resizable   if <code>true</code>, the internal frame can be resized
@param closable    if <code>true</code>, the internal frame can be closed
@param maximizable if <code>true</code>, the internal frame can be maximized
@param iconifiable if <code>true</code>, the internal frame can be iconified
"
      end

      operation 10627586 "createRootPane"
	protected return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor to set up the <code>JRootPane</code>.
@return  a new <code>JRootPane</code>
@see JRootPane
"
      end

      operation 10627714 "getUI"
	public return_type class_ref 422530 // InternalFrameUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the look-and-feel object that renders this component.

@return the <code>InternalFrameUI</code> object that renders
         this component
"
      end

      operation 10627842 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 422530 // InternalFrameUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the UI delegate for this <code>JInternalFrame</code>.
@param ui  the UI delegate
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 10627970 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIManager</code> that the look and feel
has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
      end

      operation 10628098 "updateUIWhenHidden"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is called if <code>updateUI</code> was called
on the associated
JDesktopIcon.  It's necessary to avoid infinite recursion.
"
      end

      operation 10628226 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the look-and-feel
class that renders this component.

@return the string \"InternalFrameUI\"

@see JComponent#getUIClassID
@see UIDefaults#getUI

@beaninfo
    description: UIClassID
"
      end

      operation 10628354 "isRootPaneCheckingEnabled"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@return true if <code>add</code> and <code>setLayout</code>
        are forwarded; false otherwise

@see #addImpl
@see #setLayout
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10628482 "setRootPaneCheckingEnabled"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@param enabled  true if <code>add</code> and <code>setLayout</code>
       are forwarded, false if they should operate directly on the
       <code>JInternalFrame</code>.

@see #addImpl
@see #setLayout
@see #isRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
@beaninfo
     hidden: true
description: Whether the add and setLayout methods are forwarded
"
      end

      operation 10628610 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified child <code>Component</code>.
This method is overridden to conditionally forward calls to the
<code>contentPane</code>.
By default, children are added to the <code>contentPane</code> instead
of the frame, refer to {@link javax.swing.RootPaneContainer} for
details.

@param comp the component to be enhanced
@param constraints the constraints to be respected
@param index the index
@exception IllegalArgumentException if <code>index</code> is invalid
@exception IllegalArgumentException if adding the container's parent
                 to itself
@exception IllegalArgumentException if adding a window to a container

@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10628738 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the container. If
<code>comp</code> is not a child of the <code>JInternalFrame</code>
this will forward the call to the <code>contentPane</code>.

@param comp the component to be removed
@throws NullPointerException if <code>comp</code> is null
@see #add
@see javax.swing.RootPaneContainer
"
      end

      operation 10628866 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "manager" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that, by default, the layout of this component cannot be set.
Overridden to conditionally forward the call to the
<code>contentPane</code>.
Refer to {@link javax.swing.RootPaneContainer} for
more information.

@param manager the <code>LayoutManager</code>
@see #setRootPaneCheckingEnabled
"
      end

      operation 10628994 "getMenuBar"
	public return_type class_ref 419586 // JMenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "////////////////////////////////////////////////////////////////////////
/ Property Methods
////////////////////////////////////////////////////////////////////////

Returns the current <code>JMenuBar</code> for this
<code>JInternalFrame</code>, or <code>null</code>
if no menu bar has been set.
@return the current menu bar, or <code>null</code> if none has been set

@deprecated As of Swing version 1.0.3,
replaced by <code>getJMenuBar()</code>.
"
      end

      operation 10629122 "getJMenuBar"
	public return_type class_ref 419586 // JMenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <code>JMenuBar</code> for this
<code>JInternalFrame</code>, or <code>null</code>
if no menu bar has been set.

@return  the <code>JMenuBar</code> used by this internal frame
@see #setJMenuBar
"
      end

      operation 10629250 "setMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the <code>menuBar</code> property for this <code>JInternalFrame</code>.

@param m  the <code>JMenuBar</code> to use in this internal frame
@see #getJMenuBar
@deprecated As of Swing version 1.0.3
 replaced by <code>setJMenuBar(JMenuBar m)</code>.
"
      end

      operation 10629378 "setJMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>menuBar</code> property for this <code>JInternalFrame</code>.

@param m  the <code>JMenuBar</code> to use in this internal frame
@see #getJMenuBar
@beaninfo
    bound: true
    preferred: true
    description: The menu bar for accessing pulldown menus
                 from this internal frame.
"
      end

      operation 10629506 "getContentPane"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.RootPaneContainer

Returns the content pane for this internal frame.
@return the content pane
"
      end

      operation 10629634 "setContentPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this <code>JInternalFrame</code>'s <code>contentPane</code>
property.

@param c  the content pane for this internal frame

@exception java.awt.IllegalComponentStateException (a runtime
          exception) if the content pane parameter is <code>null</code>
@see RootPaneContainer#getContentPane
@beaninfo
    bound: true
    hidden: true
    description: The client area of the internal frame where child
                 components are normally inserted.
"
      end

      operation 10629762 "getLayeredPane"
	public return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the layered pane for this internal frame.

@return a <code>JLayeredPane</code> object
@see RootPaneContainer#setLayeredPane
@see RootPaneContainer#getLayeredPane
"
      end

      operation 10629890 "setLayeredPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layered" type class_ref 400642 // JLayeredPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this <code>JInternalFrame</code>'s
<code>layeredPane</code> property.

@param layered the <code>JLayeredPane</code> for this internal frame

@exception java.awt.IllegalComponentStateException (a runtime
          exception) if the layered pane parameter is <code>null</code>
@see RootPaneContainer#setLayeredPane
@beaninfo
    hidden: true
    bound: true
    description: The pane which holds the various desktop layers.
"
      end

      operation 10630018 "getGlassPane"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the glass pane for this internal frame.

@return the glass pane
@see RootPaneContainer#setGlassPane
"
      end

      operation 10630146 "setGlassPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "glass" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this <code>JInternalFrame</code>'s
<code>glassPane</code> property.

@param glass the glass pane for this internal frame
@see RootPaneContainer#getGlassPane
@beaninfo
    bound: true
    hidden: true
    description: A transparent pane used for menu rendering.
"
      end

      operation 10630274 "getRootPane"
	public return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>rootPane</code> object for this internal frame.

@return the <code>rootPane</code> property
@see RootPaneContainer#getRootPane
"
      end

      operation 10630402 "setRootPane"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>rootPane</code> property
for this <code>JInternalFrame</code>.
This method is called by the constructor.

@param root  the new <code>JRootPane</code> object
@beaninfo
    bound: true
    hidden: true
    description: The root pane used by this internal frame.
"
      end

      operation 10630530 "setClosable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this <code>JInternalFrame</code> can be closed by
some user action.
@param b a boolean value, where <code>true</code> means this internal frame can be closed
@beaninfo
    preferred: true
          bound: true
    description: Indicates whether this internal frame can be closed.
"
      end

      operation 10630658 "isClosable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this <code>JInternalFrame</code> can be closed by
some user action.
@return <code>true</code> if this internal frame can be closed
"
      end

      operation 10630786 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this <code>JInternalFrame</code> is currently closed.
@return <code>true</code> if this internal frame is closed, <code>false</code> otherwise
"
      end

      operation 10630914 "setClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this internal frame if the argument is <code>true</code>.
Do not invoke this method with a <code>false</code> argument;
the result of invoking <code>setClosed(false)</code>
is unspecified.

<p>

If the internal frame is already closed,
this method does nothing and returns immediately.
Otherwise,
this method begins by firing
an <code>INTERNAL_FRAME_CLOSING</code> event.
Then this method sets the <code>closed</code> property to <code>true</code>
unless a listener vetoes the property change.
This method finishes by making the internal frame
invisible and unselected,
and then firing an <code>INTERNAL_FRAME_CLOSED</code> event.

<p>

<b>Note:</b>
To reuse an internal frame that has been closed,
you must add it to a container
(even if you never removed it from its previous container).
Typically, this container will be the <code>JDesktopPane</code>
that previously contained the internal frame.

@param b must be <code>true</code>

@exception PropertyVetoException when the attempt to set the
           property is vetoed by the <code>JInternalFrame</code>

@see #isClosed()
@see #setDefaultCloseOperation
@see #dispose
@see javax.swing.event.InternalFrameEvent#INTERNAL_FRAME_CLOSING

@beaninfo
          bound: true
    constrained: true
    description: Indicates whether this internal frame has been closed.
"
      end

      operation 10631042 "setResizable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the <code>JInternalFrame</code> can be resized by some
user action.

@param b  a boolean, where <code>true</code> means this internal frame can be resized
@beaninfo
    preferred: true
          bound: true
    description: Determines whether this internal frame can be resized
                 by the user.
"
      end

      operation 10631170 "isResizable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the <code>JInternalFrame</code> can be resized
by some user action.

@return <code>true</code> if this internal frame can be resized, <code>false</code> otherwise
"
      end

      operation 10631298 "setIconifiable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>iconable</code> property,
which must be <code>true</code>
for the user to be able to
make the <code>JInternalFrame</code> an icon.
Some look and feels might not implement iconification;
they will ignore this property.

@param b  a boolean, where <code>true</code> means this internal frame can be iconified
@beaninfo
    preferred: true
bound: true
    description: Determines whether this internal frame can be iconified.
"
      end

      operation 10631426 "isIconifiable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>iconable</code> property,
which by default is <code>false</code>.

@return the value of the <code>iconable</code> property.

@see #setIconifiable
"
      end

      operation 10631554 "isIcon"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the <code>JInternalFrame</code> is currently iconified.

@return <code>true</code> if this internal frame is iconified
"
      end

      operation 10631682 "setIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iconifies or de-iconifies this internal frame,
if the look and feel supports iconification.
If the internal frame's state changes to iconified,
this method fires an <code>INTERNAL_FRAME_ICONIFIED</code> event.
If the state changes to de-iconified,
an <code>INTERNAL_FRAME_DEICONIFIED</code> event is fired.

@param b a boolean, where <code>true</code> means to iconify this internal frame and
         <code>false</code> means to de-iconify it
@exception PropertyVetoException when the attempt to set the
           property is vetoed by the <code>JInternalFrame</code>

@see InternalFrameEvent#INTERNAL_FRAME_ICONIFIED
@see InternalFrameEvent#INTERNAL_FRAME_DEICONIFIED

@beaninfo
          bound: true
    constrained: true
    description: The image displayed when this internal frame is minimized.
"
      end

      operation 10631810 "setMaximizable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>maximizable</code> property,
which determines whether the <code>JInternalFrame</code>
can be maximized by
some user action.
Some look and feels might not support maximizing internal frames;
they will ignore this property.

@param b <code>true</code> to specify that this internal frame should be maximizable; <code>false</code> to specify that it should not be
@beaninfo
        bound: true
    preferred: true
    description: Determines whether this internal frame can be maximized.
"
      end

      operation 10631938 "isMaximizable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <code>maximizable</code> property.

@return the value of the <code>maximizable</code> property
@see #setMaximizable
"
      end

      operation 10632066 "isMaximum"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the <code>JInternalFrame</code> is currently maximized.

@return <code>true</code> if this internal frame is maximized, <code>false</code> otherwise
"
      end

      operation 10632194 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maximizes and restores this internal frame.  A maximized frame is resized to
fully fit the <code>JDesktopPane</code> area associated with the
<code>JInternalFrame</code>.
A restored frame's size is set to the <code>JInternalFrame</code>'s
actual size.

@param b  a boolean, where <code>true</code> maximizes this internal frame and <code>false</code>
          restores it
@exception PropertyVetoException when the attempt to set the
           property is vetoed by the <code>JInternalFrame</code>
@beaninfo
    bound: true
    constrained: true
    description: Indicates whether this internal frame is maximized.
"
      end

      operation 10632322 "getTitle"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the title of the <code>JInternalFrame</code>.

@return a <code>String</code> containing this internal frame's title
@see #setTitle
"
      end

      operation 10632450 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>JInternalFrame</code> title. <code>title</code>
may have a <code>null</code> value.
@see #getTitle

@param title  the <code>String</code> to display in the title bar
@beaninfo
    preferred: true
    bound: true
    description: The text displayed in the title bar.
"
      end

      operation 10632578 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selected" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects or deselects the internal frame
if it's showing.
A <code>JInternalFrame</code> normally draws its title bar
differently if it is
the selected frame, which indicates to the user that this
internal frame has the focus.
When this method changes the state of the internal frame
from deselected to selected, it fires an
<code>InternalFrameEvent.INTERNAL_FRAME_ACTIVATED</code> event.
If the change is from selected to deselected,
an <code>InternalFrameEvent.INTERNAL_FRAME_DEACTIVATED</code> event
is fired.

@param selected  a boolean, where <code>true</code> means this internal frame
                 should become selected (currently active)
                 and <code>false</code> means it should become deselected
@exception PropertyVetoException when the attempt to set the
           property is vetoed by the <code>JInternalFrame</code>

@see #isShowing
@see InternalFrameEvent#INTERNAL_FRAME_ACTIVATED
@see InternalFrameEvent#INTERNAL_FRAME_DEACTIVATED

@beaninfo
    constrained: true
          bound: true
    description: Indicates whether this internal frame is currently
                 the active frame.
"
      end

      operation 10632706 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the <code>JInternalFrame</code> is the
currently \"selected\" or active frame.

@return <code>true</code> if this internal frame is currently selected (active)
@see #setSelected
"
      end

      operation 10632834 "setFrameIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an image to be displayed in the titlebar of this internal frame (usually
in the top-left corner).
This image is not the <code>desktopIcon</code> object, which
is the image displayed in the <code>JDesktop</code> when
this internal frame is iconified.

Passing <code>null</code> to this function is valid,
but the look and feel
can choose the
appropriate behavior for that situation, such as displaying no icon
or a default icon for the look and feel.

@param icon the <code>Icon</code> to display in the title bar
@see #getFrameIcon
@beaninfo
          bound: true
    description: The icon shown in the top-left corner of this internal frame.
"
      end

      operation 10632962 "getFrameIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the image displayed in the title bar of this internal frame (usually
in the top-left corner).

@return the <code>Icon</code> displayed in the title bar
@see #setFrameIcon
"
      end

      operation 10633090 "moveToFront"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that moves this component to position 0 if its
parent is a <code>JLayeredPane</code>.
"
      end

      operation 10633218 "moveToBack"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that moves this component to position -1 if its
parent is a <code>JLayeredPane</code>.
"
      end

      operation 10633346 "getLastCursor"
	public return_type class_ref 340866 // Cursor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last <code>Cursor</code> that was set by the
<code>setCursor</code> method that is not a resizable
<code>Cursor</code>.

@return the last non-resizable <code>Cursor</code>
@since 1.6
"
      end

      operation 10633474 "setCursor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" type class_ref 340866 // Cursor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10633602 "setLayer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layer" type class_ref 137602 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for setting the layer attribute of this component.

@param layer  an <code>Integer</code> object specifying this
         frame's desktop layer
@see JLayeredPane
@beaninfo
    expert: true
    description: Specifies what desktop layer is used.
"
      end

      operation 10633730 "setLayer"
	public explicit_return_type "void"
	nparams 1
	  param in name "layer" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for setting the layer attribute of this component.
The method <code>setLayer(Integer)</code> should be used for
layer values predefined in <code>JLayeredPane</code>.
When using <code>setLayer(int)</code>, care must be taken not to
accidentally clash with those values.

@param layer  an integer specifying this internal frame's desktop layer

@since 1.3

@see #setLayer(Integer)
@see JLayeredPane
@beaninfo
    expert: true
    description: Specifies what desktop layer is used.
"
      end

      operation 10633858 "getLayer"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for getting the layer attribute of this component.

@return  an <code>Integer</code> object specifying this
         frame's desktop layer
@see JLayeredPane
"
      end

      operation 10633986 "getDesktopPane"
	public return_type class_ref 399234 // JDesktopPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that searches the ancestor hierarchy for a
<code>JDesktop</code> instance. If <code>JInternalFrame</code>
finds none, the <code>desktopIcon</code> tree is searched.

@return the <code>JDesktopPane</code> this internal frame belongs to,
        or <code>null</code> if none is found
"
      end

      operation 10634114 "setDesktopIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 396546 // JDesktopIcon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>JDesktopIcon</code> associated with this
<code>JInternalFrame</code>.

@param d the <code>JDesktopIcon</code> to display on the desktop
@see #getDesktopIcon
@beaninfo
          bound: true
    description: The icon shown when this internal frame is minimized.
"
      end

      operation 10634242 "getDesktopIcon"
	public return_type class_ref 396546 // JDesktopIcon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JDesktopIcon</code> used when this
<code>JInternalFrame</code> is iconified.

@return the <code>JDesktopIcon</code> displayed on the desktop
@see #setDesktopIcon
"
      end

      operation 10634370 "getNormalBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the <code>JInternalFrame</code> is not in maximized state, returns
<code>getBounds()</code>; otherwise, returns the bounds that the
<code>JInternalFrame</code> would be restored to.

@return a <code>Rectangle</code> containing the bounds of this
         frame when in the normal state
@since 1.3
"
      end

      operation 10634498 "setNormalBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the normal bounds for this internal frame, the bounds that
this internal frame would be restored to from its maximized state.
This method is intended for use only by desktop managers.

@param r the bounds that this internal frame should be restored to
@since 1.3
"
      end

      operation 10634626 "getFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this <code>JInternalFrame</code> is active,
returns the child that has focus.
Otherwise, returns <code>null</code>.

@return the component with focus, or <code>null</code> if no children have focus
@since 1.3
"
      end

      operation 10634754 "getMostRecentFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the child component of this <code>JInternalFrame</code>
that will receive the
focus when this <code>JInternalFrame</code> is selected.
If this <code>JInternalFrame</code> is
currently selected, this method returns the same component as
the <code>getFocusOwner</code> method.
If this <code>JInternalFrame</code> is not selected,
then the child component that most recently requested focus will be
returned. If no child component has ever requested focus, then this
<code>JInternalFrame</code>'s initial focusable component is returned.
If no such
child exists, then this <code>JInternalFrame</code>'s default component
to focus is returned.

@return the child component that will receive focus when this
        <code>JInternalFrame</code> is selected
@see #getFocusOwner
@see #isSelected
@since 1.4
"
      end

      operation 10634882 "restoreSubcomponentFocus"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests the internal frame to restore focus to the
last subcomponent that had focus. This is used by the UI when
the user selected this internal frame --
for example, by clicking on the title bar.

@since 1.3
"
      end

      operation 10635010 "setLastFocusOwner"
	private explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10635138 "reshape"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves and resizes this component.  Unlike other components,
this implementation also forces re-layout, so that frame
decorations such as the title bar are always redisplayed.

@param x  an integer giving the component's new horizontal position
          measured in pixels from the left of its container
@param y  an integer giving the component's new vertical position,
          measured in pixels from the bottom of its container
@param width  an integer giving the component's new width in pixels
@param height an integer giving the component's new height in pixels
"
      end

      operation 10635266 "addInternalFrameListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 422786 // InternalFrameListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/////////////////////////
 Frame/Window equivalents
/////////////////////////

Adds the specified listener to receive internal
frame events from this internal frame.

@param l the internal frame listener
"
      end

      operation 10635394 "removeInternalFrameListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 422786 // InternalFrameListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified internal frame listener so that it no longer
receives internal frame events from this internal frame.

@param l the internal frame listener
"
      end

      operation 10635522 "getInternalFrameListeners"
	public return_type class_ref 422786 // InternalFrameListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>InternalFrameListener</code>s added
to this <code>JInternalFrame</code> with
<code>addInternalFrameListener</code>.

@return all of the <code>InternalFrameListener</code>s added or an empty
        array if no listeners have been added
@since 1.4

@see #addInternalFrameListener
"
      end

      operation 10635650 "fireInternalFrameEvent"
	protected explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " remind: name ok? all one method ok? need to be synchronized?

Fires an internal frame event.

@param id  the type of the event being fired; one of the following:
<ul>
<li><code>InternalFrameEvent.INTERNAL_FRAME_OPENED</code>
<li><code>InternalFrameEvent.INTERNAL_FRAME_CLOSING</code>
<li><code>InternalFrameEvent.INTERNAL_FRAME_CLOSED</code>
<li><code>InternalFrameEvent.INTERNAL_FRAME_ICONIFIED</code>
<li><code>InternalFrameEvent.INTERNAL_FRAME_DEICONIFIED</code>
<li><code>InternalFrameEvent.INTERNAL_FRAME_ACTIVATED</code>
<li><code>InternalFrameEvent.INTERNAL_FRAME_DEACTIVATED</code>
</ul>
If the event type is not one of the above, nothing happens.
"
      end

      operation 10635778 "doDefaultCloseAction"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires an
<code>INTERNAL_FRAME_CLOSING</code> event
and then performs the action specified by
the internal frame's default close operation.
This method is typically invoked by the
look-and-feel-implemented action handler
for the internal frame's close button.

@since 1.3
@see #setDefaultCloseOperation
@see javax.swing.event.InternalFrameEvent#INTERNAL_FRAME_CLOSING
"
      end

      operation 10635906 "setDefaultCloseOperation"
	public explicit_return_type "void"
	nparams 1
	  param in name "operation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the operation that will happen by default when
the user initiates a \"close\" on this internal frame.
The possible choices are:
<br><br>
<dl>
<dt><code>DO_NOTHING_ON_CLOSE</code>
<dd> Do nothing.
     This requires the program to handle the operation
     in the <code>internalFrameClosing</code> method
     of a registered <code>InternalFrameListener</code> object.
<dt><code>HIDE_ON_CLOSE</code>
<dd> Automatically make the internal frame invisible.
<dt><code>DISPOSE_ON_CLOSE</code>
<dd> Automatically dispose of the internal frame.
</dl>
<p>
The default value is <code>DISPOSE_ON_CLOSE</code>.
Before performing the specified close operation,
the internal frame fires
an <code>INTERNAL_FRAME_CLOSING</code> event.

@param operation one of the following constants defined in
                 <code>javax.swing.WindowConstants</code>
                 (an interface implemented by
                 <code>JInternalFrame</code>):
                 <code>DO_NOTHING_ON_CLOSE</code>,
                 <code>HIDE_ON_CLOSE</code>, or
                 <code>DISPOSE_ON_CLOSE</code>

@see #addInternalFrameListener
@see #getDefaultCloseOperation
@see #setVisible
@see #dispose
@see InternalFrameEvent#INTERNAL_FRAME_CLOSING
"
      end

      operation 10636034 "getDefaultCloseOperation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default operation that occurs when the user
initiates a \"close\" on this internal frame.
@return the operation that will occur when the user closes the internal
        frame
@see #setDefaultCloseOperation
"
      end

      operation 10636162 "pack"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes subcomponents of this <code>JInternalFrame</code>
to be laid out at their preferred size.  Internal frames that are
iconized or maximized are first restored and then packed.  If the
internal frame is unable to be restored its state is not changed
and will not be packed.

@see       java.awt.Window#pack
"
      end

      operation 10636290 "show"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the internal frame is not visible,
brings the internal frame to the front,
makes it visible,
and attempts to select it.
The first time the internal frame is made visible,
this method also fires an <code>INTERNAL_FRAME_OPENED</code> event.
This method does nothing if the internal frame is already visible.
Invoking this method
has the same result as invoking
<code>setVisible(true)</code>.

@see #moveToFront
@see #setSelected
@see InternalFrameEvent#INTERNAL_FRAME_OPENED
@see #setVisible
"
      end

      operation 10636418 "hide"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10636546 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this internal frame
invisible, unselected, and closed.
If the frame is not already closed,
this method fires an
<code>INTERNAL_FRAME_CLOSED</code> event.
The results of invoking this method are similar to
<code>setClosed(true)</code>,
but <code>dispose</code> always succeeds in closing
the internal frame and does not fire
an <code>INTERNAL_FRAME_CLOSING</code> event.

@see javax.swing.event.InternalFrameEvent#INTERNAL_FRAME_CLOSED
@see #setVisible
@see #setSelected
@see #setClosed
"
      end

      operation 10636674 "toFront"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings this internal frame to the front.
Places this internal frame  at the top of the stacking order
and makes the corresponding adjustment to other visible internal
frames.

@see       java.awt.Window#toFront
@see       #moveToFront
"
      end

      operation 10636802 "toBack"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends this internal frame to the back.
Places this internal frame at the bottom of the stacking order
and makes the corresponding adjustment to other visible
internal frames.

@see       java.awt.Window#toBack
@see       #moveToBack
"
      end

      operation 10636930 "setFocusCycleRoot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusCycleRoot" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing because <code>JInternalFrame</code>s must always be roots of a focus
traversal cycle.

@param focusCycleRoot this value is ignored
@see #isFocusCycleRoot
@see java.awt.Container#setFocusTraversalPolicy
@see java.awt.Container#getFocusTraversalPolicy
@since 1.4
"
      end

      operation 10637058 "isFocusCycleRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns <code>true</code> because all <code>JInternalFrame</code>s must be
roots of a focus traversal cycle.

@return <code>true</code>
@see #setFocusCycleRoot
@see java.awt.Container#setFocusTraversalPolicy
@see java.awt.Container#getFocusTraversalPolicy
@since 1.4
"
      end

      operation 10637186 "getFocusCycleRootAncestor"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns <code>null</code> because <code>JInternalFrame</code>s
must always be roots of a focus
traversal cycle.

@return <code>null</code>
@see java.awt.Container#isFocusCycleRoot()
@since 1.4
"
      end

      operation 10637314 "getWarningString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the warning string that is displayed with this internal frame.
Since an internal frame is always secure (since it's fully
contained within a window that might need a warning string)
this method always returns <code>null</code>.
@return    <code>null</code>
@see       java.awt.Window#getWarningString
"
      end

      operation 10637442 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code>
in <code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10637570 "compWriteObjectNotify"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called from the JComponent's EnableSerializationFocusListener to
do any Swing-specific pre-serialization configuration.
"
      end

      operation 10637698 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JInternalFrame</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JInternalFrame</code>
"
      end

      attribute 2411778 "isDragging"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ======= begin optimized frame dragging defence code ==============
"
      end

      attribute 2411906 "danger"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10637826 "paintComponent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden to allow optimized painting when the
internal frame is being dragged.
"
      end

      operation 10637954 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ======= end optimized frame dragging defence code ==============
///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>JInternalFrame</code>.
For internal frames, the <code>AccessibleContext</code>
takes the form of an
<code>AccessibleJInternalFrame</code> object.
A new <code>AccessibleJInternalFrame</code> instance is created if necessary.

@return an <code>AccessibleJInternalFrame</code> that serves as the
        <code>AccessibleContext</code> of this
        <code>JInternalFrame</code>
@see AccessibleJInternalFrame
"
      end

      class 1284866 "AccessibleJInternalFrame"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4129794 // <generalisation>
	  relation 4129794 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4129794 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4129922 // <realization>
	  relation 4129922 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4129922 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	operation 10638082 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible name of this object.

@return the localized name of the object -- can be <code>null</code> if this
object does not have a name
@see #setAccessibleName
"
	end

	operation 10638210 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 10638338 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
returns this object, which is responsible for implementing the
<code>AccessibleValue</code> interface on behalf of itself.

@return this object
"
	end

	operation 10638466 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleValue methods


Get the value of this object as a Number.

@return value of the object -- can be <code>null</code> if this object does not
have a value
"
	end

	operation 10638594 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return <code>true</code> if the value was set
"
	end

	operation 10638722 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum value of this object as a Number.

@return Minimum value of the object; <code>null</code> if this object does not
have a minimum value
"
	end

	operation 10638850 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum value of this object as a Number.

@return Maximum value of the object; <code>null</code> if this object does not
have a maximum value
"
	end
      end
    end

    class 384898 "AbstractButton"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines common behaviors for buttons and menu items.
<p>
Buttons can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a button has many benefits beyond directly
configuring a button.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
For further information see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/button.html\">How to Use Buttons, Check Boxes, and Radio Buttons</a>,
a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Jeff Dinkins
"
      classrelation 719746 // <generalisation>
	relation 719746 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 719746 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 719874 // <realization>
	relation 719874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 719874 // <realization>
	  b parent class_ref 391298 // ItemSelectable
      end

      classrelation 720002 // <realization>
	relation 720002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 720002 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      classrelation 720130 // MODEL_CHANGED_PROPERTY (<unidirectional association>)
	relation 720130 --->
	  a role_name "MODEL_CHANGED_PROPERTY" init_value " \"model\"" class_relation const_relation public
	    comment " *********************************
 ******* Button properties *******
 *********************************
 Identifies a change in the button model. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 720130 // MODEL_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 720258 // TEXT_CHANGED_PROPERTY (<unidirectional association>)
	relation 720258 --->
	  a role_name "TEXT_CHANGED_PROPERTY" init_value " \"text\"" class_relation const_relation public
	    comment " Identifies a change in the button's text. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 720258 // TEXT_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 720386 // MNEMONIC_CHANGED_PROPERTY (<unidirectional association>)
	relation 720386 --->
	  a role_name "MNEMONIC_CHANGED_PROPERTY" init_value " \"mnemonic\"" class_relation const_relation public
	    comment " Identifies a change to the button's mnemonic. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 720386 // MNEMONIC_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 720514 // MARGIN_CHANGED_PROPERTY (<unidirectional association>)
	relation 720514 --->
	  a role_name "MARGIN_CHANGED_PROPERTY" init_value " \"margin\"" class_relation const_relation public
	    comment " Text positioning and alignment
 Identifies a change in the button's margins. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 720514 // MARGIN_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 720642 // VERTICAL_ALIGNMENT_CHANGED_PROPERTY (<unidirectional association>)
	relation 720642 --->
	  a role_name "VERTICAL_ALIGNMENT_CHANGED_PROPERTY" init_value " \"verticalAlignment\"" class_relation const_relation public
	    comment " Identifies a change in the button's vertical alignment. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 720642 // VERTICAL_ALIGNMENT_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 720770 // HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY (<unidirectional association>)
	relation 720770 --->
	  a role_name "HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY" init_value " \"horizontalAlignment\"" class_relation const_relation public
	    comment " Identifies a change in the button's horizontal alignment. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 720770 // HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 720898 // VERTICAL_TEXT_POSITION_CHANGED_PROPERTY (<unidirectional association>)
	relation 720898 --->
	  a role_name "VERTICAL_TEXT_POSITION_CHANGED_PROPERTY" init_value " \"verticalTextPosition\"" class_relation const_relation public
	    comment " Identifies a change in the button's vertical text position. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 720898 // VERTICAL_TEXT_POSITION_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721026 // HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY (<unidirectional association>)
	relation 721026 --->
	  a role_name "HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY" init_value " \"horizontalTextPosition\"" class_relation const_relation public
	    comment " Identifies a change in the button's horizontal text position. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721026 // HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721154 // BORDER_PAINTED_CHANGED_PROPERTY (<unidirectional association>)
	relation 721154 --->
	  a role_name "BORDER_PAINTED_CHANGED_PROPERTY" init_value " \"borderPainted\"" class_relation const_relation public
	    comment " Paint options

Identifies a change to having the border drawn,
or having it not drawn.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721154 // BORDER_PAINTED_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721282 // FOCUS_PAINTED_CHANGED_PROPERTY (<unidirectional association>)
	relation 721282 --->
	  a role_name "FOCUS_PAINTED_CHANGED_PROPERTY" init_value " \"focusPainted\"" class_relation const_relation public
	    comment "
Identifies a change to having the border highlighted when focused,
or not.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721282 // FOCUS_PAINTED_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721410 // ROLLOVER_ENABLED_CHANGED_PROPERTY (<unidirectional association>)
	relation 721410 --->
	  a role_name "ROLLOVER_ENABLED_CHANGED_PROPERTY" init_value " \"rolloverEnabled\"" class_relation const_relation public
	    comment "
Identifies a change from rollover enabled to disabled or back
to enabled.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721410 // ROLLOVER_ENABLED_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721538 // CONTENT_AREA_FILLED_CHANGED_PROPERTY (<unidirectional association>)
	relation 721538 --->
	  a role_name "CONTENT_AREA_FILLED_CHANGED_PROPERTY" init_value " \"contentAreaFilled\"" class_relation const_relation public
	    comment "
Identifies a change to having the button paint the content area.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721538 // CONTENT_AREA_FILLED_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721666 // ICON_CHANGED_PROPERTY (<unidirectional association>)
	relation 721666 --->
	  a role_name "ICON_CHANGED_PROPERTY" init_value " \"icon\"" class_relation const_relation public
	    comment " Icons
 Identifies a change to the icon that represents the button. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721666 // ICON_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721794 // PRESSED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	relation 721794 --->
	  a role_name "PRESSED_ICON_CHANGED_PROPERTY" init_value " \"pressedIcon\"" class_relation const_relation public
	    comment "
Identifies a change to the icon used when the button has been
pressed.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721794 // PRESSED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 721922 // SELECTED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	relation 721922 --->
	  a role_name "SELECTED_ICON_CHANGED_PROPERTY" init_value " \"selectedIcon\"" class_relation const_relation public
	    comment "
Identifies a change to the icon used when the button has
been selected.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 721922 // SELECTED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 722050 // ROLLOVER_ICON_CHANGED_PROPERTY (<unidirectional association>)
	relation 722050 --->
	  a role_name "ROLLOVER_ICON_CHANGED_PROPERTY" init_value " \"rolloverIcon\"" class_relation const_relation public
	    comment "
Identifies a change to the icon used when the cursor is over
the button.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722050 // ROLLOVER_ICON_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 722178 // ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	relation 722178 --->
	  a role_name "ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY" init_value " \"rolloverSelectedIcon\"" class_relation const_relation public
	    comment "
Identifies a change to the icon used when the cursor is
over the button and it has been selected.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722178 // ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 722306 // DISABLED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	relation 722306 --->
	  a role_name "DISABLED_ICON_CHANGED_PROPERTY" init_value " \"disabledIcon\"" class_relation const_relation public
	    comment "
Identifies a change to the icon used when the button has
been disabled.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722306 // DISABLED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 722434 // DISABLED_SELECTED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	relation 722434 --->
	  a role_name "DISABLED_SELECTED_ICON_CHANGED_PROPERTY" init_value " \"disabledSelectedIcon\"" class_relation const_relation public
	    comment "
Identifies a change to the icon used when the button has been
disabled and selected.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722434 // DISABLED_SELECTED_ICON_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 722562 // model (<unidirectional association>)
	relation 722562 --->
	  a role_name "model" init_value " null" protected
	    comment " The data model that determines the button's state. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722562 // model (<unidirectional association>)
	  b parent class_ref 397570 // ButtonModel
      end

      classrelation 722690 // text (<unidirectional association>)
	relation 722690 --->
	  a role_name "text" init_value " \"\"" private
	    comment " for BeanBox"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722690 // text (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 722818 // margin (<unidirectional association>)
	relation 722818 --->
	  a role_name "margin" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722818 // margin (<unidirectional association>)
	  b parent class_ref 343938 // Insets
      end

      classrelation 722946 // defaultMargin (<unidirectional association>)
	relation 722946 --->
	  a role_name "defaultMargin" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 722946 // defaultMargin (<unidirectional association>)
	  b parent class_ref 343938 // Insets
      end

      classrelation 723074 // defaultIcon (<unidirectional association>)
	relation 723074 --->
	  a role_name "defaultIcon" init_value " null" private
	    comment " Button icons
 PENDING(jeff) - hold icons in an array
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723074 // defaultIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 723202 // pressedIcon (<unidirectional association>)
	relation 723202 --->
	  a role_name "pressedIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723202 // pressedIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 723330 // disabledIcon (<unidirectional association>)
	relation 723330 --->
	  a role_name "disabledIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723330 // disabledIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 723458 // selectedIcon (<unidirectional association>)
	relation 723458 --->
	  a role_name "selectedIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723458 // selectedIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 723586 // disabledSelectedIcon (<unidirectional association>)
	relation 723586 --->
	  a role_name "disabledSelectedIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723586 // disabledSelectedIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 723714 // rolloverIcon (<unidirectional association>)
	relation 723714 --->
	  a role_name "rolloverIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723714 // rolloverIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 723842 // rolloverSelectedIcon (<unidirectional association>)
	relation 723842 --->
	  a role_name "rolloverSelectedIcon" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723842 // rolloverSelectedIcon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      attribute 510850 "paintBorder"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Display properties
"
      end

      attribute 510978 "paintFocus"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 511106 "rolloverEnabled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 511234 "contentAreaFilled"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 511362 "verticalAlignment"
	private explicit_type "int"
	init_value " CENTER"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Icon/Label Alignment
"
      end

      attribute 511490 "horizontalAlignment"
	private explicit_type "int"
	init_value " CENTER"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 511618 "verticalTextPosition"
	private explicit_type "int"
	init_value " CENTER"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 511746 "horizontalTextPosition"
	private explicit_type "int"
	init_value " TRAILING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 511874 "iconTextGap"
	private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512002 "mnemonic"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512130 "mnemonicIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512258 "multiClickThreshhold"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512386 "borderPaintedSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512514 "rolloverEnabledSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512642 "iconTextGapSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512770 "contentAreaFilledSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 512898 "setLayout"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not we've set the LayoutManager.
"
      end

      attribute 513026 "defaultCapable"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This is only used by JButton, promoted to avoid an extra
 boolean field in JButton
"
      end

      class 397698 "Handler"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 725250 // <realization>
	  relation 725250 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 725250 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	classrelation 725378 // <realization>
	  relation 725378 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 725378 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 725506 // <realization>
	  relation 725506 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 725506 // <realization>
	    b parent class_ref 389506 // ItemListener
	end

	classrelation 725634 // <realization>
	  relation 725634 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 725634 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 2285058 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ChangeListener
"
	end

	operation 2285186 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ActionListener
"
	end

	operation 2285314 "itemStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 390658 // ItemEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ItemListener
"
	end
      end

      classrelation 723970 // handler (<unidirectional association>)
	relation 723970 --->
	  a role_name "handler" private
	    comment "
Combined listeners: ActionListener, ChangeListener, ItemListener.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 723970 // handler (<unidirectional association>)
	  b parent class_ref 397698 // Handler
      end

      classrelation 724098 // changeListener (<unidirectional association>)
	relation 724098 --->
	  a role_name "changeListener" init_value " null" protected
	    comment "
The button model's <code>changeListener</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 724098 // changeListener (<unidirectional association>)
	  b parent class_ref 359426 // ChangeListener
      end

      classrelation 724226 // actionListener (<unidirectional association>)
	relation 724226 --->
	  a role_name "actionListener" init_value " null" protected
	    comment "
The button model's <code>ActionListener</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 724226 // actionListener (<unidirectional association>)
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 724354 // itemListener (<unidirectional association>)
	relation 724354 --->
	  a role_name "itemListener" init_value " null" protected
	    comment "
The button model's <code>ItemListener</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 724354 // itemListener (<unidirectional association>)
	  b parent class_ref 389506 // ItemListener
      end

      classrelation 724482 // changeEvent (<unidirectional association>)
	relation 724482 --->
	  a role_name "changeEvent" protected
	    comment "
Only one <code>ChangeEvent</code> is needed per button
instance since the
event's only state is the source property.  The source of events
generated is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 724482 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      attribute 513154 "hideActionText"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 2271106 "setHideActionText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hideActionText" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>hideActionText</code> property, which determines
whether the button displays text from the <code>Action</code>.
This is useful only if an <code>Action</code> has been
installed on the button.

@param hideActionText <code>true</code> if the button's
                      <code>text</code> property should not reflect
                      that of the <code>Action</code>; the default is
                      <code>false</code>
@see <a href=\"Action.html#buttonActions\">Swing Components Supporting
     <code>Action</code></a>
@since 1.6
@beaninfo
       bound: true
   expert: true
 description: Whether the text of the button should come from
              the <code>Action</code>.
"
      end

      operation 2271234 "getHideActionText"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>hideActionText</code> property, which
determines whether the button displays text from the
<code>Action</code>.  This is useful only if an <code>Action</code>
has been installed on the button.

@return <code>true</code> if the button's <code>text</code>
        property should not reflect that of the
        <code>Action</code>; the default is <code>false</code>
@since 1.6
"
      end

      operation 2271362 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the button's text.
@return the buttons text
@see #setText
"
      end

      operation 2271490 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the button's text.
@param text the string used to set the text
@see #getText
@beaninfo
       bound: true
   preferred: true
   attribute: visualUpdate true
 description: The button's text.
"
      end

      operation 2271618 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the state of the button. True if the
toggle button is selected, false if it's not.
@return true if the toggle button is selected, otherwise false
"
      end

      operation 2271746 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of the button. Note that this method does not
trigger an <code>actionEvent</code>.
Call <code>doClick</code> to perform a programmatic action change.

@param b  true if the button is selected, otherwise false
"
      end

      operation 2271874 "doClick"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Programmatically perform a \"click\". This does the same
thing as if the user had pressed and released the button.
"
      end

      operation 2272002 "doClick"
	public explicit_return_type "void"
	nparams 1
	  param in name "pressTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Programmatically perform a \"click\". This does the same
thing as if the user had pressed and released the button.
The button stays visually \"pressed\" for <code>pressTime</code>
 milliseconds.

@param pressTime the time to \"hold down\" the button, in milliseconds
"
      end

      operation 2272130 "setMargin"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 343938 // Insets
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets space for margin between the button's border and
the label. Setting to <code>null</code> will cause the button to
use the default margin.  The button's default <code>Border</code>
object will use this value to create the proper margin.
However, if a non-default border is set on the button,
it is that <code>Border</code> object's responsibility to create the
appropriate margin space (else this property will
effectively be ignored).

@param m the space between the border and the label

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The space between the button's border and the label.
"
      end

      operation 2272258 "getMargin"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the margin between the button's border and
the label.

@return an <code>Insets</code> object specifying the margin
         between the botton's border and the label
@see #setMargin
"
      end

      operation 2272386 "getIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default icon.
@return the default <code>Icon</code>
@see #setIcon
"
      end

      operation 2272514 "setIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the button's default icon. This icon is
also used as the \"pressed\" and \"disabled\" icon if
there is no explicitly set pressed icon.

@param defaultIcon the icon used as the default image
@see #getIcon
@see #setPressedIcon
@beaninfo
          bound: true
      attribute: visualUpdate true
    description: The button's default icon
"
      end

      operation 2272642 "getPressedIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the pressed icon for the button.
@return the <code>pressedIcon</code> property
@see #setPressedIcon
"
      end

      operation 2272770 "setPressedIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pressedIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the pressed icon for the button.
@param pressedIcon the icon used as the \"pressed\" image
@see #getPressedIcon
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The pressed icon for the button.
"
      end

      operation 2272898 "getSelectedIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected icon for the button.
@return the <code>selectedIcon</code> property
@see #setSelectedIcon
"
      end

      operation 2273026 "setSelectedIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selectedIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected icon for the button.
@param selectedIcon the icon used as the \"selected\" image
@see #getSelectedIcon
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The selected icon for the button.
"
      end

      operation 2273154 "getRolloverIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the rollover icon for the button.
@return the <code>rolloverIcon</code> property
@see #setRolloverIcon
"
      end

      operation 2273282 "setRolloverIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rolloverIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rollover icon for the button.
@param rolloverIcon the icon used as the \"rollover\" image
@see #getRolloverIcon
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The rollover icon for the button.
"
      end

      operation 2273410 "getRolloverSelectedIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the rollover selection icon for the button.
@return the <code>rolloverSelectedIcon</code> property
@see #setRolloverSelectedIcon
"
      end

      operation 2273538 "setRolloverSelectedIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rolloverSelectedIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rollover selected icon for the button.
@param rolloverSelectedIcon the icon used as the
         \"selected rollover\" image
@see #getRolloverSelectedIcon
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The rollover selected icon for the button.
"
      end

      operation 2273666 "getDisabledIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the icon used by the button when it's disabled.
If no disabled icon has been set this will forward the call to
the look and feel to construct an appropriate disabled Icon.
<p>
Some look and feels might not render the disabled Icon, in which
case they will ignore this.

@return the <code>disabledIcon</code> property
@see #getPressedIcon
@see #setDisabledIcon
@see javax.swing.LookAndFeel#getDisabledIcon
"
      end

      operation 2273794 "setDisabledIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "disabledIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the disabled icon for the button.
@param disabledIcon the icon used as the disabled image
@see #getDisabledIcon
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The disabled icon for the button.
"
      end

      operation 2273922 "getDisabledSelectedIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the icon used by the button when it's disabled and selected.
If no disabled selection icon has been set, this will forward
the call to the LookAndFeel to construct an appropriate disabled
Icon from the selection icon if it has been set and to
<code>getDisabledIcon()</code> otherwise.
<p>
Some look and feels might not render the disabled selected Icon, in
which case they will ignore this.

@return the <code>disabledSelectedIcon</code> property
@see #getDisabledIcon
@see #setDisabledSelectedIcon
@see javax.swing.LookAndFeel#getDisabledSelectedIcon
"
      end

      operation 2274050 "setDisabledSelectedIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "disabledSelectedIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the disabled selection icon for the button.
@param disabledSelectedIcon the icon used as the disabled
         selection image
@see #getDisabledSelectedIcon
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The disabled selection icon for the button.
"
      end

      operation 2274178 "getVerticalAlignment"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vertical alignment of the text and icon.

@return the <code>verticalAlignment</code> property, one of the
         following values:
<ul>
<li>{@code SwingConstants.CENTER} (the default)
<li>{@code SwingConstants.TOP}
<li>{@code SwingConstants.BOTTOM}
</ul>
"
      end

      operation 2274306 "setVerticalAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical alignment of the icon and text.
@param alignment one of the following values:
<ul>
<li>{@code SwingConstants.CENTER} (the default)
<li>{@code SwingConstants.TOP}
<li>{@code SwingConstants.BOTTOM}
</ul>
@throws IllegalArgumentException if the alignment is not one of the legal
        values listed above
@beaninfo
       bound: true
        enum: TOP    SwingConstants.TOP
              CENTER SwingConstants.CENTER
              BOTTOM  SwingConstants.BOTTOM
   attribute: visualUpdate true
 description: The vertical alignment of the icon and text.
"
      end

      operation 2274434 "getHorizontalAlignment"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the horizontal alignment of the icon and text.
{@code AbstractButton}'s default is {@code SwingConstants.CENTER},
but subclasses such as {@code JCheckBox} may use a different default.

@return the <code>horizontalAlignment</code> property,
            one of the following values:
<ul>
  <li>{@code SwingConstants.RIGHT}
  <li>{@code SwingConstants.LEFT}
  <li>{@code SwingConstants.CENTER}
  <li>{@code SwingConstants.LEADING}
  <li>{@code SwingConstants.TRAILING}
</ul>
"
      end

      operation 2274562 "setHorizontalAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal alignment of the icon and text.
{@code AbstractButton}'s default is {@code SwingConstants.CENTER},
but subclasses such as {@code JCheckBox} may use a different default.

@param alignment the alignment value, one of the following values:
<ul>
  <li>{@code SwingConstants.RIGHT}
  <li>{@code SwingConstants.LEFT}
  <li>{@code SwingConstants.CENTER}
  <li>{@code SwingConstants.LEADING}
  <li>{@code SwingConstants.TRAILING}
</ul>
@throws IllegalArgumentException if the alignment is not one of the
        valid values
@beaninfo
       bound: true
        enum: LEFT     SwingConstants.LEFT
              CENTER   SwingConstants.CENTER
              RIGHT    SwingConstants.RIGHT
              LEADING  SwingConstants.LEADING
              TRAILING SwingConstants.TRAILING
   attribute: visualUpdate true
 description: The horizontal alignment of the icon and text.
"
      end

      operation 2274690 "getVerticalTextPosition"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vertical position of the text relative to the icon.
@return the <code>verticalTextPosition</code> property,
         one of the following values:
<ul>
<li>{@code SwingConstants.CENTER} (the default)
<li>{@code SwingConstants.TOP}
<li>{@code SwingConstants.BOTTOM}
</ul>
"
      end

      operation 2274818 "setVerticalTextPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "textPosition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical position of the text relative to the icon.
@param textPosition  one of the following values:
<ul>
<li>{@code SwingConstants.CENTER} (the default)
<li>{@code SwingConstants.TOP}
<li>{@code SwingConstants.BOTTOM}
</ul>
@beaninfo
       bound: true
        enum: TOP    SwingConstants.TOP
              CENTER SwingConstants.CENTER
              BOTTOM SwingConstants.BOTTOM
   attribute: visualUpdate true
 description: The vertical position of the text relative to the icon.
"
      end

      operation 2274946 "getHorizontalTextPosition"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the horizontal position of the text relative to the icon.
@return the <code>horizontalTextPosition</code> property,
         one of the following values:
<ul>
<li>{@code SwingConstants.RIGHT}
<li>{@code SwingConstants.LEFT}
<li>{@code SwingConstants.CENTER}
<li>{@code SwingConstants.LEADING}
<li>{@code SwingConstants.TRAILING} (the default)
</ul>
"
      end

      operation 2275074 "setHorizontalTextPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "textPosition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal position of the text relative to the icon.
@param textPosition one of the following values:
<ul>
<li>{@code SwingConstants.RIGHT}
<li>{@code SwingConstants.LEFT}
<li>{@code SwingConstants.CENTER}
<li>{@code SwingConstants.LEADING}
<li>{@code SwingConstants.TRAILING} (the default)
</ul>
@exception IllegalArgumentException if <code>textPosition</code>
         is not one of the legal values listed above
@beaninfo
       bound: true
        enum: LEFT     SwingConstants.LEFT
              CENTER   SwingConstants.CENTER
              RIGHT    SwingConstants.RIGHT
              LEADING  SwingConstants.LEADING
              TRAILING SwingConstants.TRAILING
   attribute: visualUpdate true
 description: The horizontal position of the text relative to the icon.
"
      end

      operation 2275202 "getIconTextGap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of space between the text and the icon
displayed in this button.

@return an int equal to the number of pixels between the text
        and the icon.
@since 1.4
@see #setIconTextGap
"
      end

      operation 2275330 "setIconTextGap"
	public explicit_return_type "void"
	nparams 1
	  param in name "iconTextGap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If both the icon and text properties are set, this property
defines the space between them.
<p>
The default value of this property is 4 pixels.
<p>
This is a JavaBeans bound property.

@since 1.4
@see #getIconTextGap
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: If both the icon and text properties are set, this
              property defines the space between them.
"
      end

      operation 2275458 "checkHorizontalKey"
	protected explicit_return_type "int"
	nparams 2
	  param in name "key" explicit_type "int"
	  param inout name "exception" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify that the {@code key} argument is a legal value for the
{@code horizontalAlignment} and {@code horizontalTextPosition}
properties. Valid values are:
<ul>
  <li>{@code SwingConstants.RIGHT}
  <li>{@code SwingConstants.LEFT}
  <li>{@code SwingConstants.CENTER}
  <li>{@code SwingConstants.LEADING}
  <li>{@code SwingConstants.TRAILING}
</ul>

@param key the property value to check
@param exception the message to use in the
       {@code IllegalArgumentException} that is thrown for an invalid
       value
@return the {@code key} argument
@exception IllegalArgumentException if key is not one of the legal
           values listed above
@see #setHorizontalTextPosition
@see #setHorizontalAlignment
"
      end

      operation 2275586 "checkVerticalKey"
	protected explicit_return_type "int"
	nparams 2
	  param in name "key" explicit_type "int"
	  param inout name "exception" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify that the {@code key} argument is a legal value for the
vertical properties. Valid values are:
<ul>
  <li>{@code SwingConstants.CENTER}
  <li>{@code SwingConstants.TOP}
  <li>{@code SwingConstants.BOTTOM}
</ul>

@param key the property value to check
@param exception the message to use in the
       {@code IllegalArgumentException} that is thrown for an invalid
       value
@return the {@code key} argument
@exception IllegalArgumentException if key is not one of the legal
           values listed above
"
      end

      operation 2275714 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@since 1.6
"
      end

      operation 2275842 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "actionCommand" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the action command for this button.
@param actionCommand the action command for this button
"
      end

      operation 2275970 "getActionCommand"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the action command for this button.
@return the action command for this button
"
      end

      classrelation 724610 // action (<unidirectional association>)
	relation 724610 --->
	  a role_name "action" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 724610 // action (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      classrelation 724738 // actionPropertyChangeListener (<unidirectional association>)
	relation 724738 --->
	  a role_name "actionPropertyChangeListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 724738 // actionPropertyChangeListener (<unidirectional association>)
	  b parent class_ref 347266 // PropertyChangeListener
      end

      operation 2276098 "setAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Action</code>.
The new <code>Action</code> replaces any previously set
<code>Action</code> but does not affect <code>ActionListeners</code>
independently added with <code>addActionListener</code>.
If the <code>Action</code> is already a registered
<code>ActionListener</code> for the button, it is not re-registered.
<p>
Setting the <code>Action</code> results in immediately changing
all the properties described in <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a>.
Subsequently, the button's properties are automatically updated
as the <code>Action</code>'s properties change.
<p>
This method uses three other methods to set
and help track the <code>Action</code>'s property values.
It uses the <code>configurePropertiesFromAction</code> method
to immediately change the button's properties.
To track changes in the <code>Action</code>'s property values,
this method registers the <code>PropertyChangeListener</code>
returned by <code>createActionPropertyChangeListener</code>. The
default {@code PropertyChangeListener} invokes the
{@code actionPropertyChanged} method when a property in the
{@code Action} changes.

@param a the <code>Action</code> for the <code>AbstractButton</code>,
         or <code>null</code>
@since 1.3
@see Action
@see #getAction
@see #configurePropertiesFromAction
@see #createActionPropertyChangeListener
@see #actionPropertyChanged
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the Action instance connected with this ActionEvent source
"
      end

      operation 2276226 "isListener"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "c" type class_ref 130818 // Class
	  param inout name "a" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2276354 "getAction"
	public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently set <code>Action</code> for this
<code>ActionEvent</code> source, or <code>null</code>
if no <code>Action</code> is set.

@return the <code>Action</code> for this <code>ActionEvent</code>
         source, or <code>null</code>
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2276482 "configurePropertiesFromAction"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the properties on this button to match those in the specified
<code>Action</code>.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details as to which properties this sets.

@param a the <code>Action</code> from which to get the properties,
         or <code>null</code>
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2276610 "clientPropertyChanged"
	package explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2276738 "shouldUpdateSelectedStateFromAction"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Button subclasses that support mirroring the selected state from
the action should override this to return true.  AbstractButton's
implementation returns false.
"
      end

      operation 2276866 "actionPropertyChanged"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "action" type class_ref 352258 // Action
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the button's state in response to property changes in the
associated action. This method is invoked from the
{@code PropertyChangeListener} returned from
{@code createActionPropertyChangeListener}. Subclasses do not normally
need to invoke this. Subclasses that support additional {@code Action}
properties should override this and
{@code configurePropertiesFromAction}.
<p>
Refer to the table at <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for a list of
the properties this method sets.

@param action the <code>Action</code> associated with this button
@param propertyName the name of the property that changed
@since 1.6
@see Action
@see #configurePropertiesFromAction
"
      end

      operation 2276994 "setDisplayedMnemonicIndexFromAction"
	private explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 352258 // Action
	  param inout name "fromPropertyChange" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2277122 "setMnemonicFromAction"
	private explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2277250 "setTextFromAction"
	private explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 352258 // Action
	  param inout name "propertyChange" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2277378 "setIconFromAction"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2277506 "smallIconChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2277634 "largeIconChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2277762 "setActionCommandFromAction"
	private explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2277890 "setSelectedFromAction"
	private explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the seleted state of the button from the action.  This is defined
here, but not wired up.  Subclasses like JToggleButton and
JCheckBoxMenuItem make use of it.

@param a the Action
"
      end

      operation 2278018 "createActionPropertyChangeListener"
	protected return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a <code>PropertyChangeListener</code> that is
responsible for listening for changes from the specified
<code>Action</code> and updating the appropriate properties.
<p>
<b>Warning:</b> If you subclass this do not create an anonymous
inner class.  If you do the lifetime of the button will be tied to
that of the <code>Action</code>.

@param a the button's action
@since 1.3
@see Action
@see #setAction
"
      end

      operation 2278146 "createActionPropertyChangeListener0"
	package return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 397826 "ButtonActionPropertyChangeListener"
	visibility private 
	nactuals 1
	actual class class_ref 391682 // ActionPropertyChangeListener
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 724866 // <realization>
	  relation 724866 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 724866 // <realization>
	    b parent class_ref 391682 // ActionPropertyChangeListener
	end

	operation 2278274 "ButtonActionPropertyChangeListener"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "b" type class_ref 384898 // AbstractButton
	    param inout name "a" type class_ref 352258 // Action
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2278402 "actionPropertyChanged"
	  protected explicit_return_type "void"
	  nparams 3
	    param inout name "button" type class_ref 384898 // AbstractButton
	    param inout name "action" type class_ref 352258 // Action
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2278530 "isBorderPainted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>borderPainted</code> property.

@return the value of the <code>borderPainted</code> property
@see #setBorderPainted
"
      end

      operation 2278658 "setBorderPainted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>borderPainted</code> property.
If <code>true</code> and the button has a border,
the border is painted. The default value for the
<code>borderPainted</code> property is <code>true</code>.
<p>
Some look and feels might not support
the <code>borderPainted</code> property,
in which case they ignore this.

@param b if true and border property is not <code>null</code>,
         the border is painted
@see #isBorderPainted
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether the border should be painted.
"
      end

      operation 2278786 "paintBorder"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paint the button's border if <code>BorderPainted</code>
property is true and the button has a border.
@param g the <code>Graphics</code> context in which to paint

@see #paint
@see #setBorder
"
      end

      operation 2278914 "isFocusPainted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>paintFocus</code> property.

@return the <code>paintFocus</code> property
@see #setFocusPainted
"
      end

      operation 2279042 "setFocusPainted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>paintFocus</code> property, which must
be <code>true</code> for the focus state to be painted.
The default value for the <code>paintFocus</code> property
is <code>true</code>.
Some look and feels might not paint focus state;
they will ignore this property.

@param b if <code>true</code>, the focus state should be painted
@see #isFocusPainted
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether focus should be painted
"
      end

      operation 2279170 "isContentAreaFilled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>contentAreaFilled</code> property.

@return the <code>contentAreaFilled</code> property
@see #setContentAreaFilled
"
      end

      operation 2279298 "setContentAreaFilled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>contentAreaFilled</code> property.
If <code>true</code> the button will paint the content
area.  If you wish to have a transparent button, such as
an icon only button, for example, then you should set
this to <code>false</code>. Do not call <code>setOpaque(false)</code>.
The default value for the the <code>contentAreaFilled</code>
property is <code>true</code>.
<p>
This function may cause the component's opaque property to change.
<p>
The exact behavior of calling this function varies on a
component-by-component and L&amp;F-by-L&amp;F basis.

@param b if true, the content should be filled; if false
         the content area is not filled
@see #isContentAreaFilled
@see #setOpaque
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether the button should paint the content area
              or leave it transparent.
"
      end

      operation 2279426 "isRolloverEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>rolloverEnabled</code> property.

@return the value of the <code>rolloverEnabled</code> property
@see #setRolloverEnabled
"
      end

      operation 2279554 "setRolloverEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>rolloverEnabled</code> property, which
must be <code>true</code> for rollover effects to occur.
The default value for the <code>rolloverEnabled</code>
property is <code>false</code>.
Some look and feels might not implement rollover effects;
they will ignore this property.

@param b if <code>true</code>, rollover effects should be painted
@see #isRolloverEnabled
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether rollover effects should be enabled.
"
      end

      operation 2279682 "getMnemonic"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the keyboard mnemonic from the the current model.
@return the keyboard mnemonic from the model
"
      end

      operation 2279810 "setMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "mnemonic" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the keyboard mnemonic on the current model.
The mnemonic is the key which when combined with the look and feel's
mouseless modifier (usually Alt) will activate this button
if focus is contained somewhere within this button's ancestor
window.
<p>
A mnemonic must correspond to a single key on the keyboard
and should be specified using one of the <code>VK_XXX</code>
keycodes defined in <code>java.awt.event.KeyEvent</code>.
These codes and the wider array of codes for international
keyboards may be obtained through
<code>java.awt.event.KeyEvent.getExtendedKeyCodeForChar</code>.
Mnemonics are case-insensitive, therefore a key event
with the corresponding keycode would cause the button to be
activated whether or not the Shift modifier was pressed.
<p>
If the character defined by the mnemonic is found within
the button's label string, the first occurrence of it
will be underlined to indicate the mnemonic to the user.

@param mnemonic the key code which represents the mnemonic
@see     java.awt.event.KeyEvent
@see     #setDisplayedMnemonicIndex

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the keyboard character mnemonic
"
      end

      operation 2279938 "setMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "mnemonic" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is now obsolete, please use <code>setMnemonic(int)</code>
to set the mnemonic for a button.  This method is only designed
to handle character values which fall between 'a' and 'z' or
'A' and 'Z'.

@param mnemonic  a char specifying the mnemonic value
@see #setMnemonic(int)
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the keyboard character mnemonic
"
      end

      operation 2280066 "setDisplayedMnemonicIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint to the look and feel as to which character in the
text should be decorated to represent the mnemonic. Not all look and
feels may support this. A value of -1 indicates either there is no
mnemonic, the mnemonic character is not contained in the string, or
the developer does not wish the mnemonic to be displayed.
<p>
The value of this is updated as the properties relating to the
mnemonic change (such as the mnemonic itself, the text...).
You should only ever have to call this if
you do not wish the default character to be underlined. For example, if
the text was 'Save As', with a mnemonic of 'a', and you wanted the 'A'
to be decorated, as 'Save <u>A</u>s', you would have to invoke
<code>setDisplayedMnemonicIndex(5)</code> after invoking
<code>setMnemonic(KeyEvent.VK_A)</code>.

@since 1.4
@param index Index into the String to underline
@exception IllegalArgumentException will be thrown if <code>index</code>
           is &gt;= length of the text, or &lt; -1
@see #getDisplayedMnemonicIndex

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the index into the String to draw the keyboard character
              mnemonic at
"
      end

      operation 2280194 "getDisplayedMnemonicIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character, as an index, that the look and feel should
provide decoration for as representing the mnemonic character.

@since 1.4
@return index representing mnemonic character
@see #setDisplayedMnemonicIndex
"
      end

      operation 2280322 "updateDisplayedMnemonicIndex"
	private explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "mnemonic" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the displayedMnemonicIndex property. This method
is called when either text or mnemonic changes. The new
value of the displayedMnemonicIndex property is the index
of the first occurrence of mnemonic in text.
"
      end

      operation 2280450 "updateMnemonicProperties"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings the mnemonic property in accordance with model's mnemonic.
This is called when model's mnemonic changes. Also updates the
displayedMnemonicIndex property.
"
      end

      operation 2280578 "setMultiClickThreshhold"
	public explicit_return_type "void"
	nparams 1
	  param in name "threshhold" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the amount of time (in milliseconds) required between
mouse press events for the button to generate the corresponding
action events.  After the initial mouse press occurs (and action
event generated) any subsequent mouse press events which occur
on intervals less than the threshhold will be ignored and no
corresponding action event generated.  By default the threshhold is 0,
which means that for each mouse press, an action event will be
fired, no matter how quickly the mouse clicks occur.  In buttons
where this behavior is not desirable (for example, the \"OK\" button
in a dialog), this threshhold should be set to an appropriate
positive value.

@see #getMultiClickThreshhold
@param threshhold the amount of time required between mouse
       press events to generate corresponding action events
@exception   IllegalArgumentException if threshhold &lt; 0
@since 1.4
"
      end

      operation 2280706 "getMultiClickThreshhold"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the amount of time (in milliseconds) required between
mouse press events for the button to generate the corresponding
action events.

@see #setMultiClickThreshhold
@return the amount of time required between mouse press events
        to generate corresponding action events
@since 1.4
"
      end

      operation 2280834 "getModel"
	public return_type class_ref 397570 // ButtonModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model that this button represents.
@return the <code>model</code> property
@see #setModel
"
      end

      operation 2280962 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 397570 // ButtonModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model that this button represents.
@param newModel the new <code>ButtonModel</code>
@see #getModel
@beaninfo
       bound: true
 description: Model that the Button uses.
"
      end

      operation 2281090 "getUI"
	public return_type class_ref 385410 // ButtonUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.
@return the ButtonUI object
@see #setUI
"
      end

      operation 2281218 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 385410 // ButtonUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.
@param ui the <code>ButtonUI</code> L&amp;F object
@see #getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the LookAndFeel.
"
      end

      operation 2281346 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look
and feel.  Subtypes of <code>AbstractButton</code>
should override this to update the UI. For
example, <code>JButton</code> might do the following:
<pre>
     setUI((ButtonUI)UIManager.getUI(
         \"ButtonUI\", \"javax.swing.plaf.basic.BasicButtonUI\", this));
</pre>
"
      end

      operation 2281474 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this container at the specified
index, refer to
{@link java.awt.Container#addImpl(Component, Object, int)}
for a complete description of this method.

@param     comp the component to be added
@param     constraints an object expressing layout constraints
                for this component
@param     index the position in the container's list at which to
                insert the component, where <code>-1</code>
                means append to the end
@exception IllegalArgumentException if <code>index</code> is invalid
@exception IllegalArgumentException if adding the container's parent
                 to itself
@exception IllegalArgumentException if adding a window to a container
@since 1.5
"
      end

      operation 2281602 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mgr" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the layout manager for this container, refer to
{@link java.awt.Container#setLayout(LayoutManager)}
for a complete description of this method.

@param mgr the specified layout manager
@since 1.5
"
      end

      operation 2281730 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>ChangeListener</code> to the button.
@param l the listener to be added
"
      end

      operation 2281858 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a ChangeListener from the button.
@param l the listener to be removed
"
      end

      operation 2281986 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this AbstractButton with addChangeListener().

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2282114 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created.
@see EventListenerList
"
      end

      operation 2282242 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>ActionListener</code> to the button.
@param l the <code>ActionListener</code> to be added
"
      end

      operation 2282370 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an <code>ActionListener</code> from the button.
If the listener is the currently set <code>Action</code>
for the button, then the <code>Action</code>
is set to <code>null</code>.

@param l the listener to be removed
"
      end

      operation 2282498 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ActionListener</code>s added
to this AbstractButton with addActionListener().

@return all of the <code>ActionListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2282626 "createChangeListener"
	protected return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses that want to handle <code>ChangeEvents</code> differently
can override this to return another <code>ChangeListener</code>
implementation.

@return the new <code>ChangeListener</code>
"
      end

      class 397954 "ButtonChangeListener"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 724994 // <realization>
	  relation 724994 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 724994 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 725122 // <realization>
	  relation 725122 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 725122 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 2282754 "ButtonChangeListener"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " NOTE: This class is NOT used, instead the functionality has
 been moved to Handler."
	end

	operation 2282882 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2283010 "fireActionPerformed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the <code>event</code>
parameter.

@param event  the <code>ActionEvent</code> object
@see EventListenerList
"
      end

      operation 2283138 "fireItemStateChanged"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the <code>event</code> parameter.

@param event  the <code>ItemEvent</code> object
@see EventListenerList
"
      end

      operation 2283266 "createActionListener"
	protected return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2283394 "createItemListener"
	protected return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2283522 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables (or disables) the button.
@param b  true to enable the button, otherwise false
"
      end

      operation 2283650 "getLabel"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " *** Deprecated java.awt.Button APIs below *** //

Returns the label text.

@return a <code>String</code> containing the label
@deprecated - Replaced by <code>getText</code>
"
      end

      operation 2283778 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the label text.

@param label  a <code>String</code> containing the text
@deprecated - Replaced by <code>setText(text)</code>
@beaninfo
       bound: true
 description: Replace by setText(text)
"
      end

      operation 2283906 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>ItemListener</code> to the <code>checkbox</code>.
@param l  the <code>ItemListener</code> to be added
"
      end

      operation 2284034 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an <code>ItemListener</code> from the button.
@param l the <code>ItemListener</code> to be removed
"
      end

      operation 2284162 "getItemListeners"
	public return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ItemListener</code>s added
to this AbstractButton with addItemListener().

@return all of the <code>ItemListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2284290 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array (length 1) containing the label or
<code>null</code> if the button is not selected.

@return an array containing 1 Object: the text of the button,
        if the item is selected; otherwise <code>null</code>
"
      end

      operation 2284418 "init"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2284546 "imageUpdate"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "infoflags" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is overridden to return false if the current <code>Icon</code>'s
<code>Image</code> is not equal to the
passed in <code>Image</code> <code>img</code>.

@param img  the <code>Image</code> to be compared
@param infoflags flags used to repaint the button when the image
         is updated and which determine how much is to be painted
@param x  the x coordinate
@param y  the y coordinate
@param w  the width
@param h  the height
@see     java.awt.image.ImageObserver
@see     java.awt.Component#imageUpdate(java.awt.Image, int, int, int, int, int)
"
      end

      operation 2284674 "setUIProperty"
	package explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2284802 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>AbstractButton</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.
<P>
Overriding <code>paramString</code> to provide information about the
specific new aspects of the JFC components.

@return  a string representation of this <code>AbstractButton</code>
"
      end

      operation 2284930 "getHandler"
	private return_type class_ref 397698 // Handler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 398082 "AccessibleAbstractButton"
	abstract visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 725762 // <generalisation>
	  relation 725762 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 725762 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 725890 // <realization>
	  relation 725890 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 725890 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	classrelation 726018 // <realization>
	  relation 726018 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 726018 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	classrelation 726146 // <realization>
	  relation 726146 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 726146 // <realization>
	    b parent class_ref 348802 // AccessibleText
	end

	classrelation 726274 // <realization>
	  relation 726274 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 726274 // <realization>
	    b parent class_ref 358658 // AccessibleExtendedComponent
	end

	operation 2285954 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the accessible name of this object.

@return the localized name of the object -- can be
             <code>null</code> if this
             object does not have a name
"
	end

	operation 2286082 "getAccessibleIcon"
	  public return_type class_ref 349186 // AccessibleIcon
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleIcons associated with this object if one
or more exist.  Otherwise return null.
@since 1.3
"
	end

	operation 2286210 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state set of this object.

@return an instance of AccessibleState containing the current state
of the object
@see AccessibleState
"
	end

	operation 2286338 "getAccessibleRelationSet"
	  public return_type class_ref 347906 // AccessibleRelationSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleRelationSet associated with this object if one
exists.  Otherwise return null.
@see AccessibleRelation
@since 1.3
"
	end

	operation 2286466 "getAccessibleAction"
	  public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleAction associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleAction interface on behalf of itself.

@return this object
"
	end

	operation 2286594 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 2286722 "getAccessibleActionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of Actions available in this object.  The
default behavior of a button is to have one action - toggle
the button.

@return 1, the number of Actions in this object
"
	end

	operation 2286850 "getAccessibleActionDescription"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a description of the specified action of the object.

@param i zero-based index of the actions
"
	end

	operation 2286978 "doAccessibleAction"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the the action was performed; else false.
"
	end

	operation 2287106 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the value of this object as a Number.

@return An Integer of 0 if this isn't selected or an Integer of 1 if
this is selected.
@see AbstractButton#isSelected
"
	end

	operation 2287234 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return True if the value was set.
"
	end

	operation 2287362 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum value of this object as a Number.

@return an Integer of 0.
"
	end

	operation 2287490 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum value of this object as a Number.

@return An Integer of 1.
"
	end

	operation 2287618 "getAccessibleText"
	  public return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleText ---------- "
	end

	operation 2287746 "getIndexAtPoint"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Given a point in local coordinates, return the zero-based index
of the character under that Point.  If the point is invalid,
this method returns -1.

Note: the AbstractButton must have a valid size (e.g. have
been added to a parent container whose ancestor container
is a valid top-level window) for this method to be able
to return a meaningful value.

@param p the Point in local coordinates
@return the zero-based index of the character under Point p; if
Point is invalid returns -1.
@since 1.3
"
	end

	operation 2287874 "getCharacterBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determine the bounding box of the character at the given
index into the string.  The bounds are returned in local
coordinates.  If the index is invalid an empty rectangle is
returned.

Note: the AbstractButton must have a valid size (e.g. have
been added to a parent container whose ancestor container
is a valid top-level window) for this method to be able
to return a meaningful value.

@param i the index into the String
@return the screen coordinates of the character's the bounding box,
if index is invalid returns an empty rectangle.
@since 1.3
"
	end

	operation 2288002 "getCharCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the number of characters (valid indicies)

@return the number of characters
@since 1.3
"
	end

	operation 2288130 "getCaretPosition"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the zero-based offset of the caret.

Note: That to the right of the caret will have the same index
value as the offset (the caret is between two characters).
@return the zero-based offset of the caret.
@since 1.3
"
	end

	operation 2288258 "getAtIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String at a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence,
  null for an invalid index or part
@since 1.3
"
	end

	operation 2288386 "getAfterIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String after a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence, null for an invalid
 index or part
@since 1.3
"
	end

	operation 2288514 "getBeforeIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String before a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
  or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence, null for an invalid index
 or part
@since 1.3
"
	end

	operation 2288642 "getCharacterAttribute"
	  public return_type class_ref 361218 // AttributeSet
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the AttributeSet for a given character at a given index

@param i the zero-based index into the text
@return the AttributeSet of the character
@since 1.3
"
	end

	operation 2288770 "getSelectionStart"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the start offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the start of the selection
@since 1.3
"
	end

	operation 2288898 "getSelectionEnd"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the end offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the end of the selection
@since 1.3
"
	end

	operation 2289026 "getSelectedText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the portion of the text that is selected.

@return the String portion of the text that is selected
@since 1.3
"
	end

	operation 2289154 "getText"
	  private return_type class_ref 128130 // String
	  nparams 2
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 361346 // BadLocationException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the text substring starting at the specified
offset with the specified length.
"
	end

	operation 2289282 "getTextRectangle"
	  private return_type class_ref 314114 // Rectangle
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the bounding rectangle for the component text.
"
	end

	operation 2289410 "getAccessibleExtendedComponent"
	  package return_type class_ref 358658 // AccessibleExtendedComponent
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ----- AccessibleExtendedComponent

Returns the AccessibleExtendedComponent

@return the AccessibleExtendedComponent
"
	end

	operation 2289538 "getToolTipText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the tool tip text

@return the tool tip text, if supported, of the object;
otherwise, null
@since 1.4
"
	end

	operation 2289666 "getTitledBorderText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the titled border text

@return the titled border text, if supported, of the object;
otherwise, null
@since 1.4
"
	end

	operation 2289794 "getAccessibleKeyBinding"
	  public return_type class_ref 358786 // AccessibleKeyBinding
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns key bindings associated with this object

@return the key bindings, if supported, of the object;
otherwise, null
@see AccessibleKeyBinding
@since 1.4
"
	end

	class 398338 "ButtonKeyBinding"
	  visibility package 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 726402 // <realization>
	    relation 726402 -_-|>
	      a public
		java "${type}"
		classrelation_ref 726402 // <realization>
	      b parent class_ref 358786 // AccessibleKeyBinding
	  end

	  attribute 513282 "mnemonic"
	    package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 2289922 "ButtonKeyBinding"
	    package explicit_return_type ""
	    nparams 1
	      param in name "mnemonic" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 2290050 "getAccessibleKeyBindingCount"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of key bindings for this object

@return the zero-based number of key bindings for this object
"
	  end

	  operation 2290178 "getAccessibleKeyBinding"
	    public return_type class_ref 129538 // Object
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns a key binding for this object.  The value returned is an
java.lang.Object which must be cast to appropriate type depending
on the underlying implementation of the key.  For example, if the
Object returned is a javax.swing.KeyStroke, the user of this
method should do the following:
<nf><code>
Component c = <get the component that has the key bindings>
AccessibleContext ac = c.getAccessibleContext();
AccessibleKeyBinding akb = ac.getAccessibleKeyBinding();
for (int i = 0; i < akb.getAccessibleKeyBindingCount(); i++) {
    Object o = akb.getAccessibleKeyBinding(i);
    if (o instanceof javax.swing.KeyStroke) {
        javax.swing.KeyStroke keyStroke = (javax.swing.KeyStroke)o;
        <do something with the key binding>
    }
}
</code></nf>

@param i zero-based index of the key bindings
@return a javax.lang.Object which specifies the key binding
@exception IllegalArgumentException if the index is
out of bounds
@see #getAccessibleKeyBindingCount
"
	  end
	end
      end
    end

    class 386050 "JMenuItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of an item in a menu. A menu item is essentially a button
sitting in a list. When the user selects the \"button\", the action
associated with the menu item is performed. A <code>JMenuItem</code>
contained in a <code>JPopupMenu</code> performs exactly that function.
<p>
Menu items can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a menu item has many benefits beyond directly
configuring a menu item.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
For further documentation and for examples, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\">How to Use Menus</a>
in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: An item which can be selected in a menu.

@author Georges Saab
@author David Karlton
@see JPopupMenu
@see JMenu
@see JCheckBoxMenuItem
@see JRadioButtonMenuItem
"
      classrelation 4091522 // <generalisation>
	relation 4091522 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4091522 // <generalisation>
	  b parent class_ref 384898 // AbstractButton
      end

      classrelation 4091650 // <realization>
	relation 4091650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4091650 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4091778 // <realization>
	relation 4091778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4091778 // <realization>
	  b parent class_ref 386690 // MenuElement
      end

      classrelation 4091906 // uiClassID (<unidirectional association>)
	relation 4091906 --->
	  a role_name "uiClassID" init_value " \"MenuItemUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4091906 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2400386 "TRACE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " diagnostic aids -- should be false for production builds. 
 trace creates and disposes"
      end

      attribute 2400514 "VERBOSE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show reuse hits/misses"
      end

      attribute 2400642 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show bad params, misc."
      end

      attribute 2400770 "isMouseDragged"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10551554 "JMenuItem"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JMenuItem</code> with no set text or icon.
"
      end

      operation 10551682 "JMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JMenuItem</code> with the specified icon.

@param icon the icon of the <code>JMenuItem</code>
"
      end

      operation 10551810 "JMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JMenuItem</code> with the specified text.

@param text the text of the <code>JMenuItem</code>
"
      end

      operation 10551938 "JMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a menu item whose properties are taken from the
specified <code>Action</code>.

@param a the action of the <code>JMenuItem</code>
@since 1.3
"
      end

      operation 10552066 "JMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JMenuItem</code> with the specified text and icon.

@param text the text of the <code>JMenuItem</code>
@param icon the icon of the <code>JMenuItem</code>
"
      end

      operation 10552194 "JMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "mnemonic" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JMenuItem</code> with the specified text and
keyboard mnemonic.

@param text the text of the <code>JMenuItem</code>
@param mnemonic the keyboard mnemonic for the <code>JMenuItem</code>
"
      end

      operation 10552322 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 397570 // ButtonModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10552450 "initFocusability"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inititalizes the focusability of the the <code>JMenuItem</code>.
<code>JMenuItem</code>'s are focusable, but subclasses may
want to be, this provides them the opportunity to override this
and invoke something else, or nothing at all. Refer to
{@link javax.swing.JMenu#initFocusability} for the motivation of
this.
"
      end

      operation 10552578 "init"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the menu item with the specified text and icon.

@param text the text of the <code>JMenuItem</code>
@param icon the icon of the <code>JMenuItem</code>
"
      end

      class 1275266 "MenuItemFocusListener"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4092034 // <realization>
	  relation 4092034 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4092034 // <realization>
	    b parent class_ref 342018 // FocusListener
	end

	classrelation 4092162 // <realization>
	  relation 4092162 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4092162 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10552706 "focusGained"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 346370 // FocusEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10552834 "focusLost"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 346370 // FocusEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10552962 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 385922 // MenuItemUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the look and feel object that renders this component.

@param ui  the <code>JMenuItemUI</code> L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 10553090 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property with a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10553218 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the suffix used to construct the name of the L&amp;F class used to
render this component.

@return the string \"MenuItemUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10553346 "setArmed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identifies the menu item as \"armed\". If the mouse button is
released while it is over this item, the menu's action event
will fire. If the mouse button is released elsewhere, the
event will not fire and the menu item will be disarmed.

@param b true to arm the menu item so it can be selected
@beaninfo
   description: Mouse release will fire an action event
        hidden: true
"
      end

      operation 10553474 "isArmed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the menu item is \"armed\".

@return true if the menu item is armed, and it can be selected
@see #setArmed
"
      end

      operation 10553602 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables the menu item.

@param b  true to enable the item
@beaninfo
   description: Does the component react to user interaction
         bound: true
     preferred: true
"
      end

      operation 10553730 "alwaysOnTop"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true since <code>Menu</code>s, by definition,
should always be on top of all other windows.  If the menu is
in an internal frame false is returned due to the rollover effect
for windows laf where the menu is not always on top.

 package private"
      end

      classrelation 4092290 // accelerator (<unidirectional association>)
	relation 4092290 --->
	  a role_name "accelerator" private
	    comment " The keystroke which acts as the menu item's accelerator

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4092290 // accelerator (<unidirectional association>)
	  b parent class_ref 356610 // KeyStroke
      end

      operation 10553858 "setAccelerator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the key combination which invokes the menu item's
action listeners without navigating the menu hierarchy. It is the
UI's responsibility to install the correct action.  Note that
when the keyboard accelerator is typed, it will work whether or
not the menu is currently displayed.

@param keyStroke the <code>KeyStroke</code> which will
         serve as an accelerator
@beaninfo
    description: The keystroke combination which will invoke the
                 JMenuItem's actionlisteners without navigating the
                 menu hierarchy
          bound: true
      preferred: true
"
      end

      operation 10553986 "getAccelerator"
	public return_type class_ref 356610 // KeyStroke
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>KeyStroke</code> which serves as an accelerator
for the menu item.
@return a <code>KeyStroke</code> object identifying the
         accelerator key
"
      end

      operation 10554114 "configurePropertiesFromAction"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@since 1.3
"
      end

      operation 10554242 "setIconFromAction"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10554370 "largeIconChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10554498 "smallIconChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10554626 "configureAcceleratorFromAction"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10554754 "actionPropertyChanged"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "action" type class_ref 352258 // Action
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10554882 "processMouseEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "e" type class_ref 346626 // MouseEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a mouse event forwarded from the
<code>MenuSelectionManager</code> and changes the menu
selection, if necessary, by using the
<code>MenuSelectionManager</code>'s API.
<p>
Note: you do not have to forward the event to sub-components.
This is done automatically by the <code>MenuSelectionManager</code>.

@param e   a <code>MouseEvent</code>
@param path  the <code>MenuElement</code> path array
@param manager   the <code>MenuSelectionManager</code>
"
      end

      operation 10555010 "processKeyEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a key event forwarded from the
<code>MenuSelectionManager</code> and changes the menu selection,
if necessary, by using <code>MenuSelectionManager</code>'s API.
<p>
Note: you do not have to forward the event to sub-components.
This is done automatically by the <code>MenuSelectionManager</code>.

@param e  a <code>KeyEvent</code>
@param path the <code>MenuElement</code> path array
@param manager   the <code>MenuSelectionManager</code>
"
      end

      operation 10555138 "processMenuDragMouseEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 387202 // MenuDragMouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles mouse drag in a menu.

@param e  a <code>MenuDragMouseEvent</code> object
"
      end

      operation 10555266 "processMenuKeyEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a keystroke in a menu.

@param e  a <code>MenuKeyEvent</code> object
"
      end

      operation 10555394 "fireMenuDragMouseEntered"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 387202 // MenuDragMouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuMouseDragEvent</code>
@see EventListenerList
"
      end

      operation 10555522 "fireMenuDragMouseExited"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 387202 // MenuDragMouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuDragMouseEvent</code>
@see EventListenerList
"
      end

      operation 10555650 "fireMenuDragMouseDragged"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 387202 // MenuDragMouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuDragMouseEvent</code>
@see EventListenerList
"
      end

      operation 10555778 "fireMenuDragMouseReleased"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 387202 // MenuDragMouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuDragMouseEvent</code>
@see EventListenerList
"
      end

      operation 10555906 "fireMenuKeyPressed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuKeyEvent</code>
@see EventListenerList
"
      end

      operation 10556034 "fireMenuKeyReleased"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuKeyEvent</code>
@see EventListenerList
"
      end

      operation 10556162 "fireMenuKeyTyped"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 393858 // MenuKeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param event a <code>MenuKeyEvent</code>
@see EventListenerList
"
      end

      operation 10556290 "menuSelectionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isIncluded" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the <code>MenuSelectionManager</code> when the
<code>MenuElement</code> is selected or unselected.

@param isIncluded  true if this menu item is on the part of the menu
                   path that changed, false if this menu is part of the
                   a menu path that changed, but this particular part of
                   that path is still the same
@see MenuSelectionManager#setSelectedPath(MenuElement[])
"
      end

      operation 10556418 "getSubElements"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an array containing the sub-menu
components for this menu component.

@return an array of <code>MenuElement</code>s
"
      end

      operation 10556546 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>java.awt.Component</code> used to paint
this object. The returned component will be used to convert
events and detect if an event is inside a menu component.

@return the <code>Component</code> that paints this menu item
"
      end

      operation 10556674 "addMenuDragMouseListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 386306 // MenuDragMouseListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>MenuDragMouseListener</code> to the menu item.

@param l the <code>MenuDragMouseListener</code> to be added
"
      end

      operation 10556802 "removeMenuDragMouseListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 386306 // MenuDragMouseListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>MenuDragMouseListener</code> from the menu item.

@param l the <code>MenuDragMouseListener</code> to be removed
"
      end

      operation 10556930 "getMenuDragMouseListeners"
	public return_type class_ref 386306 // MenuDragMouseListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>MenuDragMouseListener</code>s added
to this JMenuItem with addMenuDragMouseListener().

@return all of the <code>MenuDragMouseListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10557058 "addMenuKeyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 386434 // MenuKeyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>MenuKeyListener</code> to the menu item.

@param l the <code>MenuKeyListener</code> to be added
"
      end

      operation 10557186 "removeMenuKeyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 386434 // MenuKeyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>MenuKeyListener</code> from the menu item.

@param l the <code>MenuKeyListener</code> to be removed
"
      end

      operation 10557314 "getMenuKeyListeners"
	public return_type class_ref 386434 // MenuKeyListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>MenuKeyListener</code>s added
to this JMenuItem with addMenuKeyListener().

@return all of the <code>MenuKeyListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10557442 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See JComponent.readObject() for information about serialization
in Swing.
"
      end

      operation 10557570 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10557698 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JMenuItem</code>.
This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JMenuItem</code>
"
      end

      operation 10557826 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Returns the <code>AccessibleContext</code> associated with this
<code>JMenuItem</code>. For <code>JMenuItem</code>s,
the <code>AccessibleContext</code> takes the form of an
<code>AccessibleJMenuItem</code>.
A new AccessibleJMenuItme instance is created if necessary.

@return an <code>AccessibleJMenuItem</code> that serves as the
        <code>AccessibleContext</code> of this <code>JMenuItem</code>
"
      end

      class 1275394 "AccessibleJMenuItem"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4092418 // <generalisation>
	  relation 4092418 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4092418 // <generalisation>
	    b parent class_ref 398082 // AccessibleAbstractButton
	end

	classrelation 4092546 // <realization>
	  relation 4092546 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4092546 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	attribute 2400898 "isArmed"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2401026 "hasFocus"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2401154 "isPressed"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2401282 "isSelected"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10557954 "AccessibleJMenuItem"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10558082 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end

	operation 10558210 "fireAccessibilityFocusedEvent"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "toCheck" type class_ref 386050 // JMenuItem
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10558338 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Supports the change listener interface and fires property changes.
"
	end
      end
    end

    class 386690 "MenuElement"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Any component that can be placed into a menu should implement this interface.
This interface is used by <code>MenuSelectionManager</code>
to handle selection and navigation in menu hierarchies.

@author Arnaud Weber
"
      operation 2240514 "processMouseEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "event" type class_ref 346626 // MouseEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a mouse event. <code>event</code> is a <code>MouseEvent</code>
with source being the receiving element's component.
<code>path</code> is the path of the receiving element in the menu
hierarchy including the receiving element itself.
<code>manager</code> is the <code>MenuSelectionManager</code>
for the menu hierarchy.
This method should process the <code>MouseEvent</code> and change
the menu selection if necessary
by using <code>MenuSelectionManager</code>'s API
Note: you do not have to forward the event to sub-components.
This is done automatically by the <code>MenuSelectionManager</code>.
"
      end

      operation 2240642 "processKeyEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "event" type class_ref 346498 // KeyEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Process a key event.
"
      end

      operation 2240770 "menuSelectionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isIncluded" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call by the <code>MenuSelectionManager</code> when the
<code>MenuElement</code> is added or remove from
the menu selection.
"
      end

      operation 2240898 "getSubElements"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should return an array containing the sub-elements for the receiving menu element

@return an array of MenuElements
"
      end

      operation 2241026 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should return the java.awt.Component used to paint the receiving element.
The returned component will be used to convert events and detect if an event is inside
a MenuElement's component.

@return the Component value
"
      end
    end

    class 387074 "MenuSelectionManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A MenuSelectionManager owns the selection in menu hierarchy.

@author Arnaud Weber
"
      classrelation 4174082 // selection (<unidirectional association>)
	relation 4174082 --->
	  a role_name "selection" init_value " new Vector<MenuElement>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<MenuElement> ${name}${value};
"
	    classrelation_ref 4174082 // selection (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 2433538 "TRACE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " diagnostic aids -- should be false for production builds. 
 trace creates and disposes"
      end

      attribute 2433666 "VERBOSE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show reuse hits/misses"
      end

      attribute 2433794 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show bad params, misc."
      end

      classrelation 4174210 // MENU_SELECTION_MANAGER_KEY (<unidirectional association>)
	relation 4174210 --->
	  a role_name "MENU_SELECTION_MANAGER_KEY" init_value "
                       new StringBuilder(\"javax.swing.MenuSelectionManager\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4174210 // MENU_SELECTION_MANAGER_KEY (<unidirectional association>)
	  b parent class_ref 173058 // StringBuilder
      end

      operation 10782978 "defaultManager"
	class_operation public return_type class_ref 387074 // MenuSelectionManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default menu selection manager.

@return a MenuSelectionManager object
"
      end

      classrelation 4174338 // changeEvent (<unidirectional association>)
	relation 4174338 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment "
Only one ChangeEvent is needed per button model instance since the
event's only state is the source property.  The source of events
generated is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4174338 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      classrelation 4174466 // listenerList (<unidirectional association>)
	relation 4174466 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4174466 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      operation 10783106 "setSelectedPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the selection in the menu hierarchy.  The elements
in the array are sorted in order from the root menu
element to the currently selected menu element.
<p>
Note that this method is public but is used by the look and
feel engine and should not be called by client applications.

@param path  an array of <code>MenuElement</code> objects specifying
       the selected path
"
      end

      operation 10783234 "getSelectedPath"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path to the currently selected menu item

@return an array of MenuElement objects representing the selected path
"
      end

      operation 10783362 "clearSelectedPath"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the menu selection to close and unselect all the menu components. Call this method
when a choice has been made
"
      end

      operation 10783490 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a ChangeListener to the button.

@param l the listener to add
"
      end

      operation 10783618 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a ChangeListener from the button.

@param l the listener to remove
"
      end

      operation 10783746 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this MenuSelectionManager with addChangeListener().

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10783874 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.

@see EventListenerList
"
      end

      operation 10784002 "processMouseEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When a MenuElement receives an event from a MouseListener, it should never process the event
directly. Instead all MenuElements should call this method with the event.

@param event  a MouseEvent object
"
      end

      operation 10784130 "printMenuElementArray"
	private explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10784258 "printMenuElementArray"
	private explicit_return_type "void"
	nparams 2
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "dumpStack" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10784386 "componentForPoint"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "source" type class_ref 338818 // Component
	  param inout name "sourcePoint" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component in the currently selected path
which contains sourcePoint.

@param source The component in whose coordinate space sourcePoint
       is given
@param sourcePoint The point which is being tested
@return The component in the currently selected path which
        contains sourcePoint (relative to the source component's
        coordinate space.  If sourcePoint is not inside a component
        on the currently selected path, null is returned.
"
      end

      operation 10784514 "processKeyEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When a MenuElement receives an event from a KeyListener, it should never process the event
directly. Instead all MenuElements should call this method with the event.

@param e  a KeyEvent object
"
      end

      operation 10784642 "isComponentPartOfCurrentMenu"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if c is part of the currently used menu
"
      end

      operation 10784770 "isComponentPartOfCurrentMenu"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "root" type class_ref 386690 // MenuElement
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 388354 "JRadioButton"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a radio button -- an item that can be selected or
deselected, and which displays its state to the user.
Used with a {@link ButtonGroup} object to create a group of buttons
in which only one button at a time can be selected. (Create a ButtonGroup
object and use its <code>add</code> method to include the JRadioButton objects
in the group.)
<blockquote>
<strong>Note:</strong>
The ButtonGroup object is a logical grouping -- not a physical grouping.
To create a button panel, you should still create a {@link JPanel} or similar
container-object and add a {@link javax.swing.border.Border} to it to set it off from surrounding
components.
</blockquote>
<p>
Buttons can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a button has many benefits beyond directly
configuring a button.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/button.html\">How to Use Buttons, Check Boxes, and Radio Buttons</a>
in <em>The Java Tutorial</em>
for further documentation.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A component which can display it's state as selected or deselected.

@see ButtonGroup
@see JCheckBox
@author Jeff Dinkins
"
      classrelation 4141186 // <generalisation>
	relation 4141186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4141186 // <generalisation>
	  b parent class_ref 1274626 // JToggleButton
      end

      classrelation 4141314 // <realization>
	relation 4141314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4141314 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4141442 // uiClassID (<unidirectional association>)
	relation 4141442 --->
	  a role_name "uiClassID" init_value " \"RadioButtonUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4141442 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10676226 "JRadioButton"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected radio button
with no set text.
"
      end

      operation 10676354 "JRadioButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected radio button
with the specified image but no text.

@param icon  the image that the button should display
"
      end

      operation 10676482 "JRadioButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radiobutton where properties are taken from the
Action supplied.

@since 1.3
"
      end

      operation 10676610 "JRadioButton"
	public explicit_return_type ""
	nparams 2
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button with the specified image
and selection state, but no text.

@param icon  the image that the button should display
@param selected  if true, the button is initially selected;
                 otherwise, the button is initially unselected
"
      end

      operation 10676738 "JRadioButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unselected radio button with the specified text.

@param text  the string displayed on the radio button
"
      end

      operation 10676866 "JRadioButton"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button with the specified text
and selection state.

@param text  the string displayed on the radio button
@param selected  if true, the button is initially selected;
                 otherwise, the button is initially unselected
"
      end

      operation 10676994 "JRadioButton"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button that has the specified text and image,
and that is initially unselected.

@param text  the string displayed on the radio button
@param icon  the image that the button should display
"
      end

      operation 10677122 "JRadioButton"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button that has the specified text, image,
and selection state.

@param text  the string displayed on the radio button
@param icon  the image that the button should display
"
      end

      operation 10677250 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10677378 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class
that renders this component.

@return String \"RadioButtonUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
       expert: true
  description: A string that specifies the name of the L&amp;F class.
"
      end

      operation 10677506 "setIconFromAction"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The icon for radio buttons comes from the look and feel,
not the Action.
"
      end

      operation 10677634 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10677762 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JRadioButton. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JRadioButton.
"
      end

      operation 10677890 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JRadioButton.
For JRadioButtons, the AccessibleContext takes the form of an
AccessibleJRadioButton.
A new AccessibleJRadioButton instance is created if necessary.

@return an AccessibleJRadioButton that serves as the
        AccessibleContext of this JRadioButton
@beaninfo
      expert: true
 description: The AccessibleContext associated with this Button
"
      end

      class 1286914 "AccessibleJRadioButton"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4141570 // <generalisation>
	  relation 4141570 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4141570 // <generalisation>
	    b parent class_ref 1274882 // AccessibleJToggleButton
	end

	operation 10678018 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole
"
	end
      end
    end

    class 389122 "CellRendererPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is inserted in between cell renderers and the components that
use them.  It just exists to thwart the repaint() and invalidate() methods
which would otherwise propagate up the tree when the renderer was configured.
It's used by the implementations of JTable, JTree, and JList.  For example,
here's how CellRendererPane is used in the code the paints each row
in a JList:
<pre>
  cellRendererPane = new CellRendererPane();
  ...
  Component rendererComponent = renderer.getListCellRendererComponent();
  renderer.configureListCellRenderer(dataModel.getElementAt(row), row);
  cellRendererPane.paintComponent(g, rendererComponent, this, x, y, w, h);
</pre>
<p>
A renderer component must override isShowing() and unconditionally return
true to work correctly because the Swing paint does nothing for components
with isShowing false.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Hans Muller
"
      classrelation 4068866 // <generalisation>
	relation 4068866 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4068866 // <generalisation>
	  b parent class_ref 338690 // Container
      end

      classrelation 4068994 // <realization>
	relation 4068994 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4068994 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      operation 10444802 "CellRendererPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a CellRendererPane object.
"
      end

      operation 10444930 "invalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden to avoid propagating a invalidate up the tree when the
cell renderer child is configured.
"
      end

      operation 10445058 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shouldn't be called.
"
      end

      operation 10445186 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shouldn't be called.
"
      end

      operation 10445314 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "x" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the specified component is already a child of this then we don't
bother doing anything - stacking order doesn't matter for cell
renderer components (CellRendererPane doesn't paint anyway).
"
      end

      operation 10445442 "paintComponent"
	public explicit_return_type "void"
	nparams 8
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param inout name "shouldValidate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paint a cell renderer component c on graphics object g.  Before the component
is drawn it's reparented to this (if that's necessary), it's bounds
are set to w,h and the graphics object is (effectively) translated to x,y.
If it's a JComponent, double buffering is temporarily turned off. After
the component is painted it's bounds are reset to -w, -h, 0, 0 so that, if
it's the last renderer component painted, it will not start consuming input.
The Container p is the component we're actually drawing on, typically it's
equal to this.getParent(). If shouldValidate is true the component c will be
validated before painted.
"
      end

      operation 10445570 "paintComponent"
	public explicit_return_type "void"
	nparams 7
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls this.paintComponent(g, c, p, x, y, w, h, false).
"
      end

      operation 10445698 "paintComponent"
	public explicit_return_type "void"
	nparams 4
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 338690 // Container
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls this.paintComponent() with the rectangles x,y,width,height fields.
"
      end

      operation 10445826 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4069122 // accessibleContext (<unidirectional association>)
	relation 4069122 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4069122 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 10445954 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this CellRendererPane.
For CellRendererPanes, the AccessibleContext takes the form of an
AccessibleCellRendererPane.
A new AccessibleCellRendererPane instance is created if necessary.

@return an AccessibleCellRendererPane that serves as the
        AccessibleContext of this CellRendererPane
"
      end

      class 1265794 "AccessibleCellRendererPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4069250 // <generalisation>
	  relation 4069250 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4069250 // <generalisation>
	    b parent class_ref 350978 // AccessibleAWTContainer
	end

	operation 10446082 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleContext methods


Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 389378 "JButton"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a \"push\" button.
<p>
Buttons can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a button has many benefits beyond directly
configuring a button.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/button.html\">How to Use Buttons, Check Boxes, and Radio Buttons</a>
in <em>The Java Tutorial</em>
for information and examples of using buttons.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: An implementation of a \\\"push\\\" button.

@author Jeff Dinkins
"
      classrelation 726530 // <generalisation>
	relation 726530 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 726530 // <generalisation>
	  b parent class_ref 384898 // AbstractButton
      end

      classrelation 726658 // <realization>
	relation 726658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 726658 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 726786 // uiClassID (<unidirectional association>)
	relation 726786 --->
	  a role_name "uiClassID" init_value " \"ButtonUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 726786 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 2290306 "JButton"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a button with no set text or icon.
"
      end

      operation 2290434 "JButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a button with an icon.

@param icon  the Icon image to display on the button
"
      end

      operation 2290562 "JButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"text\"})
"
	
	
	
	comment "Creates a button with text.

@param text  the text of the button
"
      end

      operation 2290690 "JButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a button where properties are taken from the
<code>Action</code> supplied.

@param a the <code>Action</code> used to specify the new button

@since 1.3
"
      end

      operation 2290818 "JButton"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a button with initial text and an icon.

@param text  the text of the button
@param icon  the Icon image to display on the button
"
      end

      operation 2290946 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and
feel.

@see JComponent#updateUI
"
      end

      operation 2291074 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the L&amp;F class
that renders this component.

@return the string \"ButtonUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
       expert: true
  description: A string that specifies the name of the L&amp;F class.
"
      end

      operation 2291202 "isDefaultButton"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <code>defaultButton</code> property,
which if <code>true</code> means that this button is the current
default button for its <code>JRootPane</code>.
Most look and feels render the default button
differently, and may potentially provide bindings
to access the default button.

@return the value of the <code>defaultButton</code> property
@see JRootPane#setDefaultButton
@see #isDefaultCapable
@beaninfo
 description: Whether or not this button is the default button
"
      end

      operation 2291330 "isDefaultCapable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <code>defaultCapable</code> property.

@return the value of the <code>defaultCapable</code> property
@see #setDefaultCapable
@see #isDefaultButton
@see JRootPane#setDefaultButton
"
      end

      operation 2291458 "setDefaultCapable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultCapable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>defaultCapable</code> property,
which determines whether this button can be
made the default button for its root pane.
The default value of the <code>defaultCapable</code>
property is <code>true</code> unless otherwise
specified by the look and feel.

@param defaultCapable <code>true</code> if this button will be
       capable of being the default button on the
       <code>RootPane</code>; otherwise <code>false</code>
@see #isDefaultCapable
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether or not this button can be the default button
"
      end

      operation 2291586 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>JComponent.removeNotify</code> to check if
this button is currently set as the default button on the
<code>RootPane</code>, and if so, sets the <code>RootPane</code>'s
default button to <code>null</code> to ensure the
<code>RootPane</code> doesn't hold onto an invalid button reference.
"
      end

      operation 2291714 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 2291842 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JButton</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JButton</code>
"
      end

      operation 2291970 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>JButton</code>. For <code>JButton</code>s,
the <code>AccessibleContext</code> takes the form of an
<code>AccessibleJButton</code>.
A new <code>AccessibleJButton</code> instance is created if necessary.

@return an <code>AccessibleJButton</code> that serves as the
        <code>AccessibleContext</code> of this <code>JButton</code>
@beaninfo
      expert: true
 description: The AccessibleContext associated with this Button.
"
      end

      class 398466 "AccessibleJButton"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 726914 // <generalisation>
	  relation 726914 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 726914 // <generalisation>
	    b parent class_ref 398082 // AccessibleAbstractButton
	end

	operation 2292098 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 389890 "ComboBoxEditor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The editor component used for JComboBox components.

@author Arnaud Weber
"
      operation 10446594 "getEditorComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the component that should be added to the tree hierarchy for
this editor
"
      end

      operation 10446722 "setItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the item that should be edited. Cancel any editing if necessary *"
      end

      operation 10446850 "getItem"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the edited item *"
      end

      operation 10446978 "selectAll"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Ask the editor to start editing and to select everything *"
      end

      operation 10447106 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Add an ActionListener. An action event is generated when the edited item changes *"
      end

      operation 10447234 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove an ActionListener *"
      end
    end

    class 391682 "ActionPropertyChangeListener"
      abstract visibility package 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        extends class_ref 338434 // JComponent
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A package-private PropertyChangeListener which listens for
property changes on an Action and updates the properties
of an ActionEvent source.
<p>
Subclasses must override the actionPropertyChanged method,
which is invoked from the propertyChange method as long as
the target is still valid.
</p>
<p>
WARNING WARNING WARNING WARNING WARNING WARNING:<br>
Do NOT create an annonymous inner class that extends this!  If you do
a strong reference will be held to the containing class, which in most
cases defeats the purpose of this class.

@param T the type of JComponent the underlying Action is attached to

@author Georges Saab
@see AbstractButton
"
      classrelation 704898 // <realization>
	relation 704898 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 704898 // <realization>
	  b parent class_ref 347266 // PropertyChangeListener
      end

      classrelation 705026 // <realization>
	relation 705026 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 705026 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 705154 // queue (<unidirectional association>)
	relation 705154 --->
	  a role_name "queue" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<JComponent> ${name}${value};
"
	    classrelation_ref 705154 // queue (<unidirectional association>)
	  b parent class_ref 130946 // ReferenceQueue
      end

      class 391810 "OwnedWeakReference"
	visibility private 
	nformals 1
	formal name "U" type "" explicit_default_value ""
	  extends class_ref 338434 // JComponent
	nactuals 1
	actual class class_ref 131330 // WeakReference
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 705538 // <realization>
	  relation 705538 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 705538 // <realization>
	    b parent class_ref 131330 // WeakReference
	end

	classrelation 705666 // owner (<unidirectional association>)
	  relation 705666 --->
	    a role_name "owner" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 705666 // owner (<unidirectional association>)
	    b parent class_ref 391682 // ActionPropertyChangeListener
	end

	operation 2228354 "OwnedWeakReference"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "target" explicit_type "U"
	    param inout name "queue" type class_ref 130946 // ReferenceQueue
	    param inout name "owner" type class_ref 391682 // ActionPropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<? super U> ${p1}, ${t2}<?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2228482 "getOwner"
	  cpp_inline public return_type class_ref 391682 // ActionPropertyChangeListener
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 705282 // target (<unidirectional association>)
	relation 705282 --->
	  a role_name "target" private
	    comment " WeakReference's aren't serializable.
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	    classrelation_ref 705282 // target (<unidirectional association>)
	  b parent class_ref 391810 // OwnedWeakReference
      end

      classrelation 705410 // action (<unidirectional association>)
	relation 705410 --->
	  a role_name "action" private
	    comment " The Component's that reference an Action do so through a strong
 reference, so that there is no need to check for serialized.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 705410 // action (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      operation 2227202 "getQueue"
	class_operation cpp_inline private return_type class_ref 130946 // ReferenceQueue
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<JComponent> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2227330 "ActionPropertyChangeListener"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "c" explicit_type "T"
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2227458 "propertyChange"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "PropertyChangeListener method.  If the target has been gc'ed this
will remove the <code>PropertyChangeListener</code> from the Action,
otherwise this will invoke actionPropertyChanged.
"
      end

      operation 2227586 "actionPropertyChanged"
	abstract cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "target" explicit_type "T"
	  param inout name "action" type class_ref 352258 // Action
	  param inout name "e" type class_ref 360450 // PropertyChangeEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a property changes on the Action and the target
still exists.
"
      end

      operation 2227714 "setTarget"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "c" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2227842 "getTarget"
	cpp_inline public explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2227970 "getAction"
	cpp_inline public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2228098 "writeObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2228226 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end
    end

    class 393218 "Popup"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Popups are used to display a <code>Component</code> to the user, typically
on top of all the other <code>Component</code>s in a particular containment
hierarchy. <code>Popup</code>s have a very small life cycle. Once you
have obtained a <code>Popup</code>, and hidden it (invoked the
<code>hide</code> method), you should no longer
invoke any methods on it. This allows the <code>PopupFactory</code> to cache
<code>Popup</code>s for later use.
<p>
The general contract is that if you need to change the size of the
<code>Component</code>, or location of the <code>Popup</code>, you should
obtain a new <code>Popup</code>.
<p>
<code>Popup</code> does not descend from <code>Component</code>, rather
implementations of <code>Popup</code> are responsible for creating
and maintaining their own <code>Component</code>s to render the
requested <code>Component</code> to the user.
<p>
You typically do not explicitly create an instance of <code>Popup</code>,
instead obtain one from a <code>PopupFactory</code>.

@see PopupFactory

@since 1.4
"
      classrelation 4176130 // component (<unidirectional association>)
	relation 4176130 --->
	  a role_name "component" private
	    comment "
The Component representing the Popup.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4176130 // component (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      operation 10788738 "Popup"
	protected explicit_return_type ""
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Popup</code> for the Component <code>owner</code>
containing the Component <code>contents</code>. <code>owner</code>
is used to determine which <code>Window</code> the new
<code>Popup</code> will parent the <code>Component</code> the
<code>Popup</code> creates to.
A null <code>owner</code> implies there is no valid parent.
<code>x</code> and
<code>y</code> specify the preferred initial location to place
the <code>Popup</code> at. Based on screen size, or other paramaters,
the <code>Popup</code> may not display at <code>x</code> and
<code>y</code>.

@param owner    Component mouse coordinates are relative to, may be null
@param contents Contents of the Popup
@param x        Initial x screen coordinate
@param y        Initial y screen coordinate
@exception IllegalArgumentException if contents is null
"
      end

      operation 10788866 "Popup"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Popup</code>. This is provided for subclasses.
"
      end

      operation 10788994 "show"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Makes the <code>Popup</code> visible. If the <code>Popup</code> is
currently visible, this has no effect.
"
      end

      operation 10789122 "hide"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Hides and disposes of the <code>Popup</code>. Once a <code>Popup</code>
has been disposed you should no longer invoke methods on it. A
<code>dispose</code>d <code>Popup</code> may be reclaimed and later used
based on the <code>PopupFactory</code>. As such, if you invoke methods
on a <code>disposed</code> <code>Popup</code>, indeterminate
behavior will result.
"
      end

      operation 10789250 "dispose"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Frees any resources the <code>Popup</code> may be holding onto.
"
      end

      operation 10789378 "reset"
	package explicit_return_type "void"
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "ownerX" explicit_type "int"
	  param in name "ownerY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the <code>Popup</code> to an initial state.
"
      end

      operation 10789506 "pack"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the <code>Popup</code> to be sized to fit the preferred size
of the <code>Component</code> it contains.
"
      end

      operation 10789634 "getParentWindow"
	private return_type class_ref 347394 // Window
	nparams 1
	  param inout name "owner" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Window</code> to use as the parent of the
<code>Window</code> created for the <code>Popup</code>. This creates
a new <code>DefaultFrame</code>, if necessary.
"
      end

      operation 10789762 "createComponent"
	package return_type class_ref 338818 // Component
	nparams 1
	  param inout name "owner" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the Component to use as the parent of the <code>Popup</code>.
The default implementation creates a <code>Window</code>, subclasses
should override.
"
      end

      operation 10789890 "getComponent"
	package return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Component</code> returned from
<code>createComponent</code> that will hold the <code>Popup</code>.
"
      end

      class 1295618 "HeavyWeightWindow"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4176258 // <generalisation>
	  relation 4176258 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4176258 // <generalisation>
	    b parent class_ref 468738 // JWindow
	end

	operation 10790018 "HeavyWeightWindow"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "parent" type class_ref 347394 // Window
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10790146 "update"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "g" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10790274 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1295874 "DefaultFrame"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4176514 // <generalisation>
	  relation 4176514 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4176514 // <generalisation>
	    b parent class_ref 393346 // Frame
	end
      end
    end

    class 393474 "SingleSelectionModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A model that supports at most one indexed selection.

@author Dave Moore
"
      operation 10502146 "getSelectedIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's selection.

@return  the model's selection, or -1 if there is no selection
@see     #setSelectedIndex
"
      end

      operation 10502274 "setSelectedIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's selected index to <I>index</I>.

Notifies any listeners if the model changes

@param index an int specifying the model selection
@see   #getSelectedIndex
@see   #addChangeListener
"
      end

      operation 10502402 "clearSelection"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the selection (to -1).
"
      end

      operation 10502530 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the selection model currently has a selected value.
@return true if a value is currently selected
"
      end

      operation 10502658 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds <I>listener</I> as a listener to changes in the model.
@param listener the ChangeListener to add
"
      end

      operation 10502786 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes <I>listener</I> as a listener to changes in the model.
@param listener the ChangeListener to remove
"
      end
    end

    class 394114 "JSeparator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JSeparator</code> provides a general purpose component for
implementing divider lines - most commonly used as a divider
between menu items that breaks them up into logical groupings.
Instead of using <code>JSeparator</code> directly,
you can use the <code>JMenu</code> or <code>JPopupMenu</code>
<code>addSeparator</code> method to create and add a separator.
<code>JSeparator</code>s may also be used elsewhere in a GUI
wherever a visual divider is useful.

<p>

For more information and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\">How to Use Menus</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
     attribute: isContainer false
   description: A divider between menu items.

@author Georges Saab
@author Jeff Shapiro
"
      classrelation 711170 // <generalisation>
	relation 711170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 711170 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 711298 // <realization>
	relation 711298 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 711298 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      classrelation 711426 // <realization>
	relation 711426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 711426 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 711554 // uiClassID (<unidirectional association>)
	relation 711554 --->
	  a role_name "uiClassID" init_value " \"SeparatorUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 711554 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 509058 "orientation"
	private explicit_type "int"
	init_value " HORIZONTAL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 2251010 "JSeparator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new horizontal separator. "
      end

      operation 2251138 "JSeparator"
	public explicit_return_type ""
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new separator with the specified horizontal or
vertical orientation.

@param orientation an integer specifying
         <code>SwingConstants.HORIZONTAL</code> or
         <code>SwingConstants.VERTICAL</code>
@exception IllegalArgumentException if <code>orientation</code>
         is neither <code>SwingConstants.HORIZONTAL</code> nor
         <code>SwingConstants.VERTICAL</code>
"
      end

      operation 2251266 "getUI"
	public return_type class_ref 394242 // SeparatorUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return the SeparatorUI object that renders this component
"
      end

      operation 2251394 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 394242 // SeparatorUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the SeparatorUI L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 2251522 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 2251650 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"SeparatorUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 2251778 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 2251906 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the orientation of this separator.

@return   The value of the orientation property, one of the
          following constants defined in <code>SwingConstants</code>:
          <code>VERTICAL</code>, or
          <code>HORIZONTAL</code>.

@see SwingConstants
@see #setOrientation
"
      end

      operation 2252034 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the orientation of the separator.
The default value of this property is HORIZONTAL.
@param orientation  either <code>SwingConstants.HORIZONTAL</code>
                 or <code>SwingConstants.VERTICAL</code>
@exception IllegalArgumentException  if <code>orientation</code>
         is neither <code>SwingConstants.HORIZONTAL</code>
         nor <code>SwingConstants.VERTICAL</code>

@see SwingConstants
@see #getOrientation
@beaninfo
       bound: true
   preferred: true
        enum: HORIZONTAL SwingConstants.HORIZONTAL
              VERTICAL   SwingConstants.VERTICAL
   attribute: visualUpdate true
 description: The orientation of the separator.
"
      end

      operation 2252162 "checkOrientation"
	private explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2252290 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JSeparator</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JSeparator</code>
"
      end

      operation 2252418 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JSeparator.
For separators, the AccessibleContext takes the form of an
AccessibleJSeparator.
A new AccessibleJSeparator instance is created if necessary.

@return an AccessibleJSeparator that serves as the
        AccessibleContext of this JSeparator
"
      end

      class 394370 "AccessibleJSeparator"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 711682 // <generalisation>
	  relation 711682 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 711682 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 2252546 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 397570 "ButtonModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "State model for buttons.
<p>
This model is used for regular buttons, as well as check boxes
and radio buttons, which are special kinds of buttons. In practice,
a button's UI takes the responsibility of calling methods on its
model to manage the state, as detailed below:
<p>
In simple terms, pressing and releasing the mouse over a regular
button triggers the button and causes and <code>ActionEvent</code>
to be fired. The same behavior can be produced via a keyboard key
defined by the look and feel of the button (typically the SPACE BAR).
Pressing and releasing this key while the button has
focus will give the same results. For check boxes and radio buttons, the
mouse or keyboard equivalent sequence just described causes the button
to become selected.
<p>
In details, the state model for buttons works as follows
when used with the mouse:
<br>
Pressing the mouse on top of a button makes the model both
armed and pressed. As long as the mouse remains down,
the model remains pressed, even if the mouse moves
outside the button. On the contrary, the model is only
armed while the mouse remains pressed within the bounds of
the button (it can move in or out of the button, but the model
is only armed during the portion of time spent within the button).
A button is triggered, and an <code>ActionEvent</code> is fired,
when the mouse is released while the model is armed
- meaning when it is released over top of the button after the mouse
has previously been pressed on that button (and not already released).
Upon mouse release, the model becomes unarmed and unpressed.
<p>
In details, the state model for buttons works as follows
when used with the keyboard:
<br>
Pressing the look and feel defined keyboard key while the button
has focus makes the model both armed and pressed. As long as this key
remains down, the model remains in this state. Releasing the key sets
the model to unarmed and unpressed, triggers the button, and causes an
<code>ActionEvent</code> to be fired.

@author Jeff Dinkins
"
      classrelation 4068738 // <generalisation>
	relation 4068738 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4068738 // <generalisation>
	  b parent class_ref 391298 // ItemSelectable
      end

      operation 10442114 "isArmed"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates partial commitment towards triggering the
button.

@return <code>true</code> if the button is armed,
        and ready to be triggered
@see #setArmed
"
      end

      operation 10442242 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if the button has been selected. Only needed for
certain types of buttons - such as radio buttons and check boxes.

@return <code>true</code> if the button is selected
"
      end

      operation 10442370 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if the button can be selected or triggered by
an input device, such as a mouse pointer.

@return <code>true</code> if the button is enabled
"
      end

      operation 10442498 "isPressed"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if the button is pressed.

@return <code>true</code> if the button is pressed
"
      end

      operation 10442626 "isRollover"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that the mouse is over the button.

@return <code>true</code> if the mouse is over the button
"
      end

      operation 10442754 "setArmed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks the button as armed or unarmed.

@param b whether or not the button should be armed
"
      end

      operation 10442882 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects or deselects the button.

@param b <code>true</code> selects the button,
         <code>false</code> deselects the button
"
      end

      operation 10443010 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables the button.

@param b whether or not the button should be enabled
@see #isEnabled
"
      end

      operation 10443138 "setPressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the button to pressed or unpressed.

@param b whether or not the button should be pressed
@see #isPressed
"
      end

      operation 10443266 "setRollover"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets or clears the button's rollover state

@param b whether or not the button is in the rollover state
@see #isRollover
"
      end

      operation 10443394 "setMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the keyboard mnemonic (shortcut key or
accelerator key) for the button.

@param key an int specifying the accelerator key
"
      end

      operation 10443522 "getMnemonic"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the keyboard mnemonic for the button.

@return an int specifying the accelerator key
@see #setMnemonic
"
      end

      operation 10443650 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the action command string that gets sent as part of the
<code>ActionEvent</code> when the button is triggered.

@param s the <code>String</code> that identifies the generated event
@see #getActionCommand
@see java.awt.event.ActionEvent#getActionCommand
"
      end

      operation 10443778 "getActionCommand"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the action command string for the button.

@return the <code>String</code> that identifies the generated event
@see #setActionCommand
"
      end

      operation 10443906 "setGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "group" type class_ref 1265666 // ButtonGroup
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identifies the group the button belongs to --
needed for radio buttons, which are mutually
exclusive within their group.

@param group the <code>ButtonGroup</code> the button belongs to
"
      end

      operation 10444034 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>ActionListener</code> to the model.

@param l the listener to add
"
      end

      operation 10444162 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an <code>ActionListener</code> from the model.

@param l the listener to remove
"
      end

      operation 10444290 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>ItemListener</code> to the model.

@param l the listener to add
"
      end

      operation 10444418 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an <code>ItemListener</code> from the model.

@param l the listener to remove
"
      end

      operation 10444546 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>ChangeListener</code> to the model.

@param l the listener to add
"
      end

      operation 10444674 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code> from the model.

@param l the listener to remove
"
      end
    end

    class 399234 "JDesktopPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A container used to create a multiple-document interface or a virtual desktop.
You create <code>JInternalFrame</code> objects and add them to the
<code>JDesktopPane</code>. <code>JDesktopPane</code> extends
<code>JLayeredPane</code> to manage the potentially overlapping internal
frames. It also maintains a reference to an instance of
<code>DesktopManager</code> that is set by the UI
class for the current look and feel (L&amp;F).  Note that <code>JDesktopPane</code>
does not support borders.
<p>
This class is normally used as the parent of <code>JInternalFrames</code>
to provide a pluggable <code>DesktopManager</code> object to the
<code>JInternalFrames</code>. The <code>installUI</code> of the
L&amp;F specific implementation is responsible for setting the
<code>desktopManager</code> variable appropriately.
When the parent of a <code>JInternalFrame</code> is a <code>JDesktopPane</code>,
it should delegate most of its behavior to the <code>desktopManager</code>
(closing, resizing, etc).
<p>
For further documentation and examples see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html\">How to Use Internal Frames</a>,
a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JInternalFrame
@see JInternalFrame.JDesktopIcon
@see DesktopManager

@author David Kloba
"
      classrelation 4098946 // <generalisation>
	relation 4098946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4098946 // <generalisation>
	  b parent class_ref 400642 // JLayeredPane
      end

      classrelation 4099074 // <realization>
	relation 4099074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4099074 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4099202 // uiClassID (<unidirectional association>)
	relation 4099202 --->
	  a role_name "uiClassID" init_value " \"DesktopPaneUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4099202 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4099330 // desktopManager (<unidirectional association>)
	relation 4099330 --->
	  a role_name "desktopManager" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4099330 // desktopManager (<unidirectional association>)
	  b parent class_ref 399362 // DesktopManager
      end

      classrelation 4099458 // selectedFrame (<unidirectional association>)
	relation 4099458 --->
	  a role_name "selectedFrame" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4099458 // selectedFrame (<unidirectional association>)
	  b parent class_ref 379522 // JInternalFrame
      end

      attribute 2402434 "LIVE_DRAG_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the entire contents of the item being dragged
should appear inside the desktop pane.

@see #OUTLINE_DRAG_MODE
@see #setDragMode

"
      end

      attribute 2402562 "OUTLINE_DRAG_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that an outline only of the item being dragged
should appear inside the desktop pane.

@see #LIVE_DRAG_MODE
@see #setDragMode

"
      end

      attribute 2402690 "dragMode"
	private explicit_type "int"
	init_value " LIVE_DRAG_MODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2402818 "dragModeSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4099586 // framesCache (<unidirectional association>)
	relation 4099586 --->
	  a role_name "framesCache" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<JInternalFrame> ${name}${value};
"
	    classrelation_ref 4099586 // framesCache (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      attribute 2402946 "componentOrderCheckingEnabled"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2403074 "componentOrderChanged"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10574978 "JDesktopPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JDesktopPane</code>.
"
      end

      operation 10575106 "getUI"
	public return_type class_ref 398850 // DesktopPaneUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return the <code>DesktopPaneUI</code> object that
  renders this component
"
      end

      operation 10575234 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 398850 // DesktopPaneUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the DesktopPaneUI L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 10575362 "setDragMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "dragMode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the \"dragging style\" used by the desktop pane.
You may want to change to one mode or another for
performance or aesthetic reasons.

@param dragMode the style of drag to use for items in the Desktop

@see #LIVE_DRAG_MODE
@see #OUTLINE_DRAG_MODE

@beaninfo
       bound: true
 description: Dragging style for internal frame children.
        enum: LIVE_DRAG_MODE JDesktopPane.LIVE_DRAG_MODE
              OUTLINE_DRAG_MODE JDesktopPane.OUTLINE_DRAG_MODE
@since 1.3
"
      end

      operation 10575490 "getDragMode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current \"dragging style\" used by the desktop pane.
@return either <code>Live_DRAG_MODE</code> or
  <code>OUTLINE_DRAG_MODE</code>
@see #setDragMode
@since 1.3
"
      end

      operation 10575618 "getDesktopManager"
	public return_type class_ref 399362 // DesktopManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>DesktopManger</code> that handles
desktop-specific UI actions.
"
      end

      operation 10575746 "setDesktopManager"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 399362 // DesktopManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>DesktopManger</code> that will handle
desktop-specific UI actions. This may be overridden by
{@code LookAndFeel}.

@param d the <code>DesktopManager</code> to use

@beaninfo
       bound: true
 description: Desktop manager to handle the internal frames in the
              desktop pane.
"
      end

      operation 10575874 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIManager</code> that the L&amp;F has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
      end

      operation 10576002 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"DesktopPaneUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10576130 "getAllFrames"
	public return_type class_ref 379522 // JInternalFrame
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all <code>JInternalFrames</code> currently displayed in the
desktop. Returns iconified frames as well as expanded frames.

@return an array of <code>JInternalFrame</code> objects
"
      end

      operation 10576258 "getAllFrames"
	class_operation private return_type class_ref 184194 // Collection
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<JInternalFrame> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10576386 "getSelectedFrame"
	public return_type class_ref 379522 // JInternalFrame
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the currently active <code>JInternalFrame</code>
in this <code>JDesktopPane</code>, or <code>null</code>
if no <code>JInternalFrame</code> is currently active.

@return the currently active <code>JInternalFrame</code> or
  <code>null</code>
@since 1.3
"
      end

      operation 10576514 "setSelectedFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the currently active <code>JInternalFrame</code>
 in this <code>JDesktopPane</code>. This method is used to bridge
 the package gap between JDesktopPane and the platform implementation
 code and should not be called directly. To visually select the frame
 the client must call JInternalFrame.setSelected(true) to activate
 the frame.
 @see JInternalFrame#setSelected(boolean)

@param f the internal frame that's currently selected
@since 1.3
"
      end

      operation 10576642 "getAllFramesInLayer"
	public return_type class_ref 379522 // JInternalFrame
	nparams 1
	  param in name "layer" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all <code>JInternalFrames</code> currently displayed in the
specified layer of the desktop. Returns iconified frames as well
expanded frames.

@param layer  an int specifying the desktop layer
@return an array of <code>JInternalFrame</code> objects
@see JLayeredPane
"
      end

      operation 10576770 "getFrames"
	private return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<JInternalFrame> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1276930 "ComponentPosition"
	visibility private 
	nactuals 1
	actual class class_ref 194946 // Comparable
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4099714 // <realization>
	  relation 4099714 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4099714 // <realization>
	    b parent class_ref 194946 // Comparable
	end

	classrelation 4099842 // component (<unidirectional association>)
	  relation 4099842 --->
	    a role_name "component" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4099842 // component (<unidirectional association>)
	    b parent class_ref 379522 // JInternalFrame
	end

	attribute 2403202 "layer"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2403330 "zOrder"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10576898 "ComponentPosition"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "component" type class_ref 379522 // JInternalFrame
	    param in name "layer" explicit_type "int"
	    param in name "zOrder" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10577026 "compareTo"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 1276930 // ComponentPosition
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10577154 "getNextFrame"
	private return_type class_ref 379522 // JInternalFrame
	nparams 2
	  param inout name "f" type class_ref 379522 // JInternalFrame
	  param inout name "forward" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10577282 "getNextFrame"
	package return_type class_ref 379522 // JInternalFrame
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10577410 "getTopInternalFrame"
	private return_type class_ref 379522 // JInternalFrame
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10577538 "updateFramesCache"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10577666 "verifyFramesCache"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10577794 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10577922 "selectFrame"
	public return_type class_ref 379522 // JInternalFrame
	nparams 1
	  param inout name "forward" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the next <code>JInternalFrame</code> in this desktop pane.

@param forward a boolean indicating which direction to select in;
       <code>true</code> for forward, <code>false</code> for
       backward
@return the JInternalFrame that was selected or <code>null</code>
        if nothing was selected
@since 1.6
"
      end

      operation 10578050 "setComponentOrderCheckingEnabled"
	package explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether component order checking is enabled.
@param enable a boolean value, where <code>true</code> means
a change in component order will cause a change in the keyboard
navigation order.
@since 1.6
"
      end

      operation 10578178 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10578306 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10578434 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10578562 "setComponentZOrder"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10578690 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10578818 "setUIProperty"
	package explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10578946 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JDesktopPane</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JDesktopPane</code>
"
      end

      operation 10579074 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>JDesktopPane</code>. For desktop panes, the
<code>AccessibleContext</code> takes the form of an
<code>AccessibleJDesktopPane</code>.
A new <code>AccessibleJDesktopPane</code> instance is created if necessary.

@return an <code>AccessibleJDesktopPane</code> that serves as the
        <code>AccessibleContext</code> of this <code>JDesktopPane</code>
"
      end

      class 1277058 "AccessibleJDesktopPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4099970 // <generalisation>
	  relation 4099970 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4099970 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10579202 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 399362 "DesktopManager"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " DesktopManager objects are owned by a JDesktopPane object. They are responsible
for implementing L&amp;F specific behaviors for the JDesktopPane. JInternalFrame
implementations should delegate specific behaviors to the DesktopManager. For
instance, if a JInternalFrame was asked to iconify, it should try:
<PRE>
   getDesktopPane().getDesktopManager().iconifyFrame(frame);
</PRE>
This delegation allows each L&amp;F to provide custom behaviors for desktop-specific
actions. (For example, how and where the internal frame's icon would appear.)
<p>This class provides a policy for the various JInternalFrame methods, it is not
meant to be called directly rather the various JInternalFrame methods will call
into the DesktopManager.</p>

@see JDesktopPane
@see JInternalFrame
@see JInternalFrame.JDesktopIcon

@author David Kloba
"
      operation 2295938 "openFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If possible, display this frame in an appropriate location.
Normally, this is not called, as the creator of the JInternalFrame
will add the frame to the appropriate parent.
"
      end

      operation 2296066 "closeFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generally, this call should remove the frame from it's parent. "
      end

      operation 2296194 "maximizeFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generally, the frame should be resized to match it's parents bounds. "
      end

      operation 2296322 "minimizeFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generally, this indicates that the frame should be restored to it's
size and position prior to a maximizeFrame() call.
"
      end

      operation 2296450 "iconifyFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generally, remove this frame from it's parent and add an iconic representation. "
      end

      operation 2296578 "deiconifyFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Generally, remove any iconic representation that is present and restore the
frame to it's original size and location.
"
      end

      operation 2296706 "activateFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generally, indicate that this frame has focus. This is usually called after
the JInternalFrame's IS_SELECTED_PROPERTY has been set to true.
"
      end

      operation 2296834 "deactivateFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generally, indicate that this frame has lost focus. This is usually called
after the JInternalFrame's IS_SELECTED_PROPERTY has been set to false.
"
      end

      operation 2296962 "beginDraggingFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is normally called when the user has indicated that
they will begin dragging a component around. This method should be called
prior to any dragFrame() calls to allow the DesktopManager to prepare any
necessary state. Normally <b>f</b> will be a JInternalFrame.
"
      end

      operation 2297090 "dragFrame"
	public explicit_return_type "void"
	nparams 3
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "newX" explicit_type "int"
	  param in name "newY" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The user has moved the frame. Calls to this method will be preceded by calls
to beginDraggingFrame().
 Normally <b>f</b> will be a JInternalFrame.
"
      end

      operation 2297218 "endDraggingFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method signals the end of the dragging session. Any state maintained by
the DesktopManager can be removed here.  Normally <b>f</b> will be a JInternalFrame.
"
      end

      operation 2297346 "beginResizingFrame"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "direction" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This methods is normally called when the user has indicated that
they will begin resizing the frame. This method should be called
prior to any resizeFrame() calls to allow the DesktopManager to prepare any
necessary state.  Normally <b>f</b> will be a JInternalFrame.
"
      end

      operation 2297474 "resizeFrame"
	public explicit_return_type "void"
	nparams 5
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "newX" explicit_type "int"
	  param in name "newY" explicit_type "int"
	  param in name "newWidth" explicit_type "int"
	  param in name "newHeight" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The user has resized the component. Calls to this method will be preceded by calls
to beginResizingFrame().
 Normally <b>f</b> will be a JInternalFrame.
"
      end

      operation 2297602 "endResizingFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method signals the end of the resize session. Any state maintained by
the DesktopManager can be removed here.  Normally <b>f</b> will be a JInternalFrame.
"
      end

      operation 2297730 "setBoundsForFrame"
	public explicit_return_type "void"
	nparams 5
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "newX" explicit_type "int"
	  param in name "newY" explicit_type "int"
	  param in name "newWidth" explicit_type "int"
	  param in name "newHeight" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is a primitive reshape method."
      end
    end

    class 399618 "DefaultDesktopManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This is an implementation of the <code>DesktopManager</code>.
It currently implements the basic behaviors for managing
<code>JInternalFrame</code>s in an arbitrary parent.
<code>JInternalFrame</code>s that are not children of a
<code>JDesktop</code> will use this component
to handle their desktop-like actions.
<p>This class provides a policy for the various JInternalFrame methods,
it is not meant to be called directly rather the various JInternalFrame
methods will call into the DesktopManager.</p>
@see JDesktopPane
@see JInternalFrame
@author David Kloba
@author Steve Wilson
"
      classrelation 729218 // <realization>
	relation 729218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 729218 // <realization>
	  b parent class_ref 399362 // DesktopManager
      end

      classrelation 729346 // <realization>
	relation 729346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 729346 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 729474 // HAS_BEEN_ICONIFIED_PROPERTY (<unidirectional association>)
	relation 729474 --->
	  a role_name "HAS_BEEN_ICONIFIED_PROPERTY" init_value " \"wasIconOnce\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 729474 // HAS_BEEN_ICONIFIED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 513410 "DEFAULT_DRAG_MODE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 513538 "OUTLINE_DRAG_MODE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 513666 "FASTER_DRAG_MODE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 513794 "dragMode"
	package explicit_type "int"
	init_value " DEFAULT_DRAG_MODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 729602 // currentBounds (<unidirectional association>)
	relation 729602 --->
	  a role_name "currentBounds" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 729602 // currentBounds (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      classrelation 729730 // desktopGraphics (<unidirectional association>)
	relation 729730 --->
	  a role_name "desktopGraphics" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 729730 // desktopGraphics (<unidirectional association>)
	  b parent class_ref 343682 // Graphics
      end

      classrelation 729858 // desktopBounds (<unidirectional association>)
	relation 729858 --->
	  a role_name "desktopBounds" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 729858 // desktopBounds (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      classrelation 729986 // floatingItems (<unidirectional association>)
	relation 729986 --->
	  a role_name "floatingItems" multiplicity "[]" init_value " {}" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 729986 // floatingItems (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      attribute 513922 "didDrag"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set to true when the user actually drags a frame vs clicks on it
to start the drag operation.  This is only used when dragging with
FASTER_DRAG_MODE.

"
      end

      operation 2297858 "openFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Normally this method will not be called. If it is, it
try to determine the appropriate parent from the desktopIcon of the frame.
Will remove the desktopIcon from its parent if it successfully adds the frame.
"
      end

      operation 2297986 "closeFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the frame, and, if necessary, the
<code>desktopIcon</code>, from its parent.
@param f the <code>JInternalFrame</code> to be removed
"
      end

      operation 2298114 "maximizeFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes the frame to fill its parents bounds.
@param f the frame to be resized
"
      end

      operation 2298242 "minimizeFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores the frame back to its size and position prior
to a <code>maximizeFrame</code> call.
@param f the <code>JInternalFrame</code> to be restored
"
      end

      operation 2298370 "iconifyFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the frame from its parent and adds its
<code>desktopIcon</code> to the parent.
@param f the <code>JInternalFrame</code> to be iconified
"
      end

      operation 2298498 "deiconifyFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the desktopIcon from its parent and adds its frame
to the parent.
@param f the <code>JInternalFrame</code> to be de-iconified
"
      end

      operation 2298626 "activateFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This will activate <b>f</b> moving it to the front. It will
set the current active frame's (if any)
<code>IS_SELECTED_PROPERTY</code> to <code>false</code>.
There can be only one active frame across all Layers.
@param f the <code>JInternalFrame</code> to be activated
"
      end

      operation 2298754 "deactivateFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.DesktopManager"
      end

      operation 2298882 "beginDraggingFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.DesktopManager"
      end

      operation 2299010 "setupDragMode"
	private explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 730114 // currentLoc (<unidirectional association>)
	relation 730114 --->
	  a role_name "currentLoc" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 730114 // currentLoc (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      operation 2299138 "dragFrame"
	public explicit_return_type "void"
	nparams 3
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "newX" explicit_type "int"
	  param in name "newY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the visible location of the frame being dragged
to the location specified.  The means by which this occurs can vary depending
on the dragging algorithm being used.  The actual logical location of the frame
might not change until <code>endDraggingFrame</code> is called.
"
      end

      operation 2299266 "endDraggingFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.DesktopManager"
      end

      operation 2299394 "beginResizingFrame"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "direction" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.DesktopManager"
      end

      operation 2299522 "resizeFrame"
	public explicit_return_type "void"
	nparams 5
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "newX" explicit_type "int"
	  param in name "newY" explicit_type "int"
	  param in name "newWidth" explicit_type "int"
	  param in name "newHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>setBoundsForFrame</code> with the new values.
@param f the component to be resized
@param newX the new x-coordinate
@param newY the new y-coordinate
@param newWidth the new width
@param newHeight the new height
"
      end

      operation 2299650 "endResizingFrame"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.DesktopManager"
      end

      operation 2299778 "setBoundsForFrame"
	public explicit_return_type "void"
	nparams 5
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "newX" explicit_type "int"
	  param in name "newY" explicit_type "int"
	  param in name "newWidth" explicit_type "int"
	  param in name "newHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This moves the <code>JComponent</code> and repaints the damaged areas. "
      end

      operation 2299906 "removeIconFor"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience method to remove the desktopIcon of <b>f</b> is necessary. "
      end

      operation 2300034 "getBoundsForIconOf"
	protected return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The iconifyFrame() code calls this to determine the proper bounds
for the desktopIcon.
"
      end

      operation 2300162 "setPreviousBounds"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 379522 // JInternalFrame
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the bounds of the component just before a maximize call.
@param f the component about to be resized
@param r the normal bounds to be saved away
"
      end

      operation 2300290 "getPreviousBounds"
	protected return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the normal bounds of the component prior to the component
being maximized.
@param f the <code>JInternalFrame</code> of interest
@return the normal bounds of the component
"
      end

      operation 2300418 "setWasIcon"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 379522 // JInternalFrame
	  param inout name "value" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets that the component has been iconized and the bounds of the
<code>desktopIcon</code> are valid.
"
      end

      operation 2300546 "wasIcon"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "f" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the component has been iconized
and the bounds of the <code>desktopIcon</code> are valid,
otherwise returns <code>false</code>.

@param f the <code>JInternalFrame</code> of interest
@return <code>true</code> if the component has been iconized;
   otherwise returns <code>false</code>
"
      end

      operation 2300674 "getDesktopPane"
	package return_type class_ref 399234 // JDesktopPane
	nparams 1
	  param inout name "frame" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2300802 "dragFrameFaster"
	private explicit_return_type "void"
	nparams 3
	  param inout name "f" type class_ref 338434 // JComponent
	  param in name "newX" explicit_type "int"
	  param in name "newY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " =========== stuff for faster frame dragging ==================="
      end

      operation 2300930 "isFloaterCollision"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "moveFrom" type class_ref 314114 // Rectangle
	  param inout name "moveTo" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2301058 "findFloatingItems"
	private return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "f" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2301186 "emergencyCleanup"
	private explicit_return_type "void"
	nparams 1
	  param in name "f" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is here to clean up problems associated
with a race condition which can occur when the full contents
of a copyArea's source argument is not available onscreen.
This uses brute force to clean up in case of possible damage
"
      end
    end

    class 400642 "JLayeredPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JLayeredPane</code> adds depth to a JFC/Swing container,
allowing components to overlap each other when needed.
An <code>Integer</code> object specifies each component's depth in the
container, where higher-numbered components sit &quot;on top&quot; of other
components.
For task-oriented documentation and examples of using layered panes see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html\">How to Use a Layered Pane</a>,
a section in <em>The Java Tutorial</em>.

<TABLE STYLE=\"FLOAT:RIGHT\" BORDER=\"0\" SUMMARY=\"layout\">
<TR>
  <TD ALIGN=\"CENTER\">
    <P STYLE=\"TEXT-ALIGN:CENTER\"><IMG SRC=\"doc-files/JLayeredPane-1.gif\"
    alt=\"The following text describes this image.\"
    WIDTH=\"269\" HEIGHT=\"264\" STYLE=\"FLOAT:BOTTOM; BORDER=0\">
  </TD>
</TR>
</TABLE>
For convenience, <code>JLayeredPane</code> divides the depth-range
into several different layers. Putting a component into one of those
layers makes it easy to ensure that components overlap properly,
without having to worry about specifying numbers for specific depths:
<DL>
   <DT><FONT SIZE=\"2\">DEFAULT_LAYER</FONT></DT>
        <DD>The standard layer, where most components go. This the bottommost
        layer.
   <DT><FONT SIZE=\"2\">PALETTE_LAYER</FONT></DT>
        <DD>The palette layer sits over the default layer. Useful for floating
        toolbars and palettes, so they can be positioned above other components.
   <DT><FONT SIZE=\"2\">MODAL_LAYER</FONT></DT>
        <DD>The layer used for modal dialogs. They will appear on top of any
        toolbars, palettes, or standard components in the container.
   <DT><FONT SIZE=\"2\">POPUP_LAYER</FONT></DT>
        <DD>The popup layer displays above dialogs. That way, the popup windows
        associated with combo boxes, tooltips, and other help text will appear
        above the component, palette, or dialog that generated them.
   <DT><FONT SIZE=\"2\">DRAG_LAYER</FONT></DT>
        <DD>When dragging a component, reassigning it to the drag layer ensures
        that it is positioned over every other component in the container. When
        finished dragging, it can be reassigned to its normal layer.
</DL>
The <code>JLayeredPane</code> methods <code>moveToFront(Component)</code>,
<code>moveToBack(Component)</code> and <code>setPosition</code> can be used
to reposition a component within its layer. The <code>setLayer</code> method
can also be used to change the component's current layer.

<h2>Details</h2>
<code>JLayeredPane</code> manages its list of children like
<code>Container</code>, but allows for the definition of a several
layers within itself. Children in the same layer are managed exactly
like the normal <code>Container</code> object,
with the added feature that when children components overlap, children
in higher layers display above the children in lower layers.
<p>
Each layer is a distinct integer number. The layer attribute can be set
on a <code>Component</code> by passing an <code>Integer</code>
object during the add call.<br> For example:
<PRE>
    layeredPane.add(child, JLayeredPane.DEFAULT_LAYER);
or
    layeredPane.add(child, new Integer(10));
</PRE>
The layer attribute can also be set on a Component by calling<PRE>
    layeredPaneParent.setLayer(child, 10)</PRE>
on the <code>JLayeredPane</code> that is the parent of component. The layer
should be set <i>before</i> adding the child to the parent.
<p>
Higher number layers display above lower number layers. So, using
numbers for the layers and letters for individual components, a
representative list order would look like this:<PRE>
      5a, 5b, 5c, 2a, 2b, 2c, 1a </PRE>
where the leftmost components are closest to the top of the display.
<p>
A component can be moved to the top or bottom position within its
layer by calling <code>moveToFront</code> or <code>moveToBack</code>.
<p>
The position of a component within a layer can also be specified directly.
Valid positions range from 0 up to one less than the number of
components in that layer. A value of -1 indicates the bottommost
position. A value of 0 indicates the topmost position. Unlike layer
numbers, higher position values are <i>lower</i> in the display.
<blockquote>
<b>Note:</b> This sequence (defined by java.awt.Container) is the reverse
of the layer numbering sequence. Usually though, you will use <code>moveToFront</code>,
<code>moveToBack</code>, and <code>setLayer</code>.
</blockquote>
Here are some examples using the method add(Component, layer, position):
Calling add(5x, 5, -1) results in:<PRE>
      5a, 5b, 5c, 5x, 2a, 2b, 2c, 1a </PRE>

Calling add(5z, 5, 2) results in:<PRE>
      5a, 5b, 5z, 5c, 5x, 2a, 2b, 2c, 1a </PRE>

Calling add(3a, 3, 7) results in:<PRE>
      5a, 5b, 5z, 5c, 5x, 3a, 2a, 2b, 2c, 1a </PRE>

Using normal paint/event mechanics results in 1a appearing at the bottom
and 5a being above all other components.
<p>
<b>Note:</b> that these layers are simply a logical construct and LayoutManagers
will affect all child components of this container without regard for
layer settings.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author David Kloba
"
      classrelation 4097538 // <generalisation>
	relation 4097538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4097538 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4097666 // <realization>
	relation 4097666 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4097666 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4097794 // DEFAULT_LAYER (<unidirectional association>)
	relation 4097794 --->
	  a role_name "DEFAULT_LAYER" init_value " new Integer(0)" class_relation const_relation public
	    comment "/ Watch the values in getObjectForLayer()
 Convenience object defining the Default layer. Equivalent to new Integer(0).
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4097794 // DEFAULT_LAYER (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 4097922 // PALETTE_LAYER (<unidirectional association>)
	relation 4097922 --->
	  a role_name "PALETTE_LAYER" init_value " new Integer(100)" class_relation const_relation public
	    comment " Convenience object defining the Palette layer. Equivalent to new Integer(100).
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4097922 // PALETTE_LAYER (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 4098050 // MODAL_LAYER (<unidirectional association>)
	relation 4098050 --->
	  a role_name "MODAL_LAYER" init_value " new Integer(200)" class_relation const_relation public
	    comment " Convenience object defining the Modal layer. Equivalent to new Integer(200).
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4098050 // MODAL_LAYER (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 4098178 // POPUP_LAYER (<unidirectional association>)
	relation 4098178 --->
	  a role_name "POPUP_LAYER" init_value " new Integer(300)" class_relation const_relation public
	    comment " Convenience object defining the Popup layer. Equivalent to new Integer(300).
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4098178 // POPUP_LAYER (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 4098306 // DRAG_LAYER (<unidirectional association>)
	relation 4098306 --->
	  a role_name "DRAG_LAYER" init_value " new Integer(400)" class_relation const_relation public
	    comment " Convenience object defining the Drag layer. Equivalent to new Integer(400).
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4098306 // DRAG_LAYER (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 4098434 // FRAME_CONTENT_LAYER (<unidirectional association>)
	relation 4098434 --->
	  a role_name "FRAME_CONTENT_LAYER" init_value " new Integer(-30000)" class_relation const_relation public
	    comment " Convenience object defining the Frame Content layer.
This layer is normally only use to position the contentPane and menuBar
components of JFrame.
Equivalent to new Integer(-30000).
@see JFrame

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4098434 // FRAME_CONTENT_LAYER (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 4098562 // LAYER_PROPERTY (<unidirectional association>)
	relation 4098562 --->
	  a role_name "LAYER_PROPERTY" init_value " \"layeredContainerLayer\"" class_relation const_relation public
	    comment " Bound property 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4098562 // LAYER_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4098690 // componentToLayer (<unidirectional association>)
	relation 4098690 --->
	  a role_name "componentToLayer" private
	    comment " Hashtable to store layer values for non-JComponent components
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component,Integer> ${name}${value};
"
	    classrelation_ref 4098690 // componentToLayer (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      attribute 2402306 "optimizedDrawingPossible"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10571266 "JLayeredPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "////////////////////////////////////////////////////////////////////////////
// Container Override methods
////////////////////////////////////////////////////////////////////////////
 Create a new JLayeredPane "
      end

      operation 10571394 "validateOptimizedDrawing"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10571522 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10571650 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the indexed component from this pane.
This is the absolute index, ignoring layers.

@param index  an int specifying the component to remove
@see #getIndexOf
"
      end

      operation 10571778 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the components from this container.

@since 1.5
"
      end

      operation 10571906 "isOptimizedDrawingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns false if components in the pane can overlap, which makes
optimized drawing impossible. Otherwise, returns true.

@return false if components can overlap, else true
@see JComponent#isOptimizedDrawingEnabled
"
      end

      operation 10572034 "putLayer"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param in name "layer" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "////////////////////////////////////////////////////////////////////////////
// New methods for managing layers
////////////////////////////////////////////////////////////////////////////
 Sets the layer property on a JComponent. This method does not cause
any side effects like setLayer() (painting, add/remove, etc).
Normally you should use the instance method setLayer(), in order to
get the desired side-effects (like repainting).

@param c      the JComponent to move
@param layer  an int specifying the layer to move it to
@see #setLayer
"
      end

      operation 10572162 "getLayer"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the layer property for a JComponent, it
does not cause any side effects like setLayer(). (painting, add/remove, etc)
Normally you should use the instance method getLayer().

@param c  the JComponent to check
@return   an int specifying the component's layer
"
      end

      operation 10572290 "getLayeredPaneAbove"
	class_operation public return_type class_ref 400642 // JLayeredPane
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience method that returns the first JLayeredPane which
contains the specified component. Note that all JFrames have a
JLayeredPane at their root, so any component in a JFrame will
have a JLayeredPane parent.

@param c the Component to check
@return the JLayeredPane that contains the component, or
        null if no JLayeredPane is found in the component
        hierarchy
@see JFrame
@see JRootPane
"
      end

      operation 10572418 "setLayer"
	public explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param in name "layer" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the layer attribute on the specified component,
making it the bottommost component in that layer.
Should be called before adding to parent.

@param c     the Component to set the layer for
@param layer an int specifying the layer to set, where
             lower numbers are closer to the bottom
"
      end

      operation 10572546 "setLayer"
	public explicit_return_type "void"
	nparams 3
	  param inout name "c" type class_ref 338818 // Component
	  param in name "layer" explicit_type "int"
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the layer attribute for the specified component and
also sets its position within that layer.

@param c         the Component to set the layer for
@param layer     an int specifying the layer to set, where
                 lower numbers are closer to the bottom
@param position  an int specifying the position within the
                 layer, where 0 is the topmost position and -1
                 is the bottommost position
"
      end

      operation 10572674 "getLayer"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the layer attribute for the specified Component.

@param c  the Component to check
@return an int specifying the component's current layer
"
      end

      operation 10572802 "getIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the specified Component.
This is the absolute index, ignoring layers.
Index numbers, like position numbers, have the topmost component
at index zero. Larger numbers are closer to the bottom.

@param c  the Component to check
@return an int specifying the component's index
"
      end

      operation 10572930 "moveToFront"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the component to the top of the components in its current layer
(position 0).

@param c the Component to move
@see #setPosition(Component, int)
"
      end

      operation 10573058 "moveToBack"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the component to the bottom of the components in its current layer
(position -1).

@param c the Component to move
@see #setPosition(Component, int)
"
      end

      operation 10573186 "setPosition"
	public explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the component to <code>position</code> within its current layer,
where 0 is the topmost position within the layer and -1 is the bottommost
position.
<p>
<b>Note:</b> Position numbering is defined by java.awt.Container, and
is the opposite of layer numbering. Lower position numbers are closer
to the top (0 is topmost), and higher position numbers are closer to
the bottom.

@param c         the Component to move
@param position  an int in the range -1..N-1, where N is the number of
                 components in the component's current layer
"
      end

      operation 10573314 "getPosition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the relative position of the component within its layer.

@param c  the Component to check
@return an int giving the component's position, where 0 is the
        topmost position and the highest index value = the count
        count of components at that layer, minus 1

@see #getComponentCountInLayer
"
      end

      operation 10573442 "highestLayer"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the highest layer value from all current children.
Returns 0 if there are no children.

@return an int indicating the layer of the topmost component in the
        pane, or zero if there are no children
"
      end

      operation 10573570 "lowestLayer"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the lowest layer value from all current children.
Returns 0 if there are no children.

@return an int indicating the layer of the bottommost component in the
        pane, or zero if there are no children
"
      end

      operation 10573698 "getComponentCountInLayer"
	public explicit_return_type "int"
	nparams 1
	  param in name "layer" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of children currently in the specified layer.

@param layer  an int specifying the layer to check
@return an int specifying the number of components in that layer
"
      end

      operation 10573826 "getComponentsInLayer"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "layer" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of the components in the specified layer.

@param layer  an int specifying the layer to check
@return an array of Components contained in that layer
"
      end

      operation 10573954 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints this JLayeredPane within the specified graphics context.

@param g  the Graphics context within which to paint
"
      end

      operation 10574082 "getComponentToLayer"
	protected return_type class_ref 137090 // Hashtable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Component,Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "////////////////////////////////////////////////////////////////////////////
// Implementation Details
////////////////////////////////////////////////////////////////////////////

Returns the hashtable that maps components to layers.

@return the Hashtable used to map components to their layers
"
      end

      operation 10574210 "getObjectForLayer"
	protected return_type class_ref 137602 // Integer
	nparams 1
	  param in name "layer" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Integer object associated with a specified layer.

@param layer an int specifying the layer
@return an Integer object for that layer
"
      end

      operation 10574338 "insertIndexForLayer"
	protected explicit_return_type "int"
	nparams 2
	  param in name "layer" explicit_type "int"
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive method that determines the proper location to
insert a new child based on layer and position requests.

@param layer     an int specifying the layer
@param position  an int specifying the position within the layer
@return an int giving the (absolute) insertion-index

@see #getIndexOf
"
      end

      operation 10574466 "insertIndexForLayer"
	private explicit_return_type "int"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "layer" explicit_type "int"
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is an extended version of insertIndexForLayer()
to support setLayer which uses Container.setZOrder which does
not remove the component from the containment hierarchy though
we need to ignore it when calculating the insertion index.

@param comp      component to ignore when determining index
@param layer     an int specifying the layer
@param position  an int specifying the position within the layer
@return an int giving the (absolute) insertion-index

@see #getIndexOf
"
      end

      operation 10574594 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JLayeredPane. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JLayeredPane.
"
      end

      operation 10574722 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JLayeredPane.
For layered panes, the AccessibleContext takes the form of an
AccessibleJLayeredPane.
A new AccessibleJLayeredPane instance is created if necessary.

@return an AccessibleJLayeredPane that serves as the
        AccessibleContext of this JLayeredPane
"
      end

      class 1276802 "AccessibleJLayeredPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4098818 // <generalisation>
	  relation 4098818 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4098818 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10574850 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 413826 "ImageIcon"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of the Icon interface that paints Icons
from Images. Images that are created from a URL, filename or byte array
are preloaded using MediaTracker to monitor the loaded state
of the image.

<p>
For further information and examples of using image icons, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/icon.html\">How to Use Icons</a>
in <em>The Java Tutorial.</em>

<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Jeff Dinkins
@author Lynn Monsanto
"
      classrelation 4087170 // <realization>
	relation 4087170 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4087170 // <realization>
	  b parent class_ref 352642 // Icon
      end

      classrelation 4087298 // <realization>
	relation 4087298 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4087298 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4087426 // <realization>
	relation 4087426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4087426 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4087554 // filename (<unidirectional association>)
	relation 4087554 --->
	  a role_name "filename" private
	    comment " Keep references to the filename and location so that
alternate persistence schemes have the option to archive
images symbolically rather than including the image data
in the archive.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4087554 // filename (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4087682 // location (<unidirectional association>)
	relation 4087682 --->
	  a role_name "location" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4087682 // location (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 4087810 // image (<unidirectional association>)
	relation 4087810 --->
	  a role_name "image" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4087810 // image (<unidirectional association>)
	  b parent class_ref 340098 // Image
      end

      attribute 2399618 "loadStatus"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4087938 // imageObserver (<unidirectional association>)
	relation 4087938 --->
	  a role_name "imageObserver" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4087938 // imageObserver (<unidirectional association>)
	  b parent class_ref 339970 // ImageObserver
      end

      classrelation 4088066 // description (<unidirectional association>)
	relation 4088066 --->
	  a role_name "description" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4088066 // description (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4088194 // component (<unidirectional association>)
	relation 4088194 --->
	  a role_name "component" class_relation const_relation protected
	    comment "
Do not use this shared component, which is used to track image loading.
It is left for backward compatibility only.
@deprecated since 1.8

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 4088194 // component (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4088322 // tracker (<unidirectional association>)
	relation 4088322 --->
	  a role_name "tracker" class_relation const_relation protected
	    comment "
Do not use this shared media tracker, which is used to load images.
It is left for backward compatibility only.
@deprecated since 1.8

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 4088322 // tracker (<unidirectional association>)
	  b parent class_ref 871810 // MediaTracker
      end

      extra_member 185090 "initialization"
	
	cpp "" ""
	java "  static {
        component = AccessController.doPrivileged(new PrivilegedAction<Component>() {
            public Component run() {
                try {
                    final Component component = createNoPermsComponent();

                    // 6482575 - clear the appContext field so as not to leak it
                    Field appContextField =

                            Component.class.getDeclaredField(\"appContext\");
                    appContextField.setAccessible(true);
                    appContextField.set(component, null);

                    return component;
                } catch (Throwable e) {
                    // We don't care about component.
                    // So don't prevent class initialisation.
                    e.printStackTrace();
                    return null;
                }
            }
        });
        tracker = new MediaTracker(component);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10538114 "createNoPermsComponent"
	class_operation private return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2399746 "mediaTrackerID"
	class_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Id used in loading images from MediaTracker.

"
      end

      classrelation 4088450 // TRACKER_KEY (<unidirectional association>)
	relation 4088450 --->
	  a role_name "TRACKER_KEY" init_value " new StringBuilder(\"TRACKER_KEY\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4088450 // TRACKER_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2399874 "width"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2400002 "height"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10538242 "ImageIcon"
	public explicit_return_type ""
	nparams 2
	  param inout name "filename" type class_ref 128130 // String
	  param inout name "description" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ImageIcon from the specified file. The image will
be preloaded by using MediaTracker to monitor the loading state
of the image.
@param filename the name of the file containing the image
@param description a brief textual description of the image
@see #ImageIcon(String)
"
      end

      operation 10538370 "ImageIcon"
	public explicit_return_type ""
	nparams 1
	  param inout name "filename" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"description\"})
"
	
	
	
	comment "Creates an ImageIcon from the specified file. The image will
be preloaded by using MediaTracker to monitor the loading state
of the image. The specified String can be a file name or a
file path. When specifying a path, use the Internet-standard
forward-slash (\"/\") as a separator.
(The string is converted to an URL, so the forward-slash works
on all systems.)
For example, specify:
<pre>
   new ImageIcon(\"images/myImage.gif\") </pre>
The description is initialized to the <code>filename</code> string.

@param filename a String specifying a filename or path
@see #getDescription
"
      end

      operation 10538498 "ImageIcon"
	public explicit_return_type ""
	nparams 2
	  param inout name "location" type class_ref 243458 // URL
	  param inout name "description" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ImageIcon from the specified URL. The image will
be preloaded by using MediaTracker to monitor the loaded state
of the image.
@param location the URL for the image
@param description a brief textual description of the image
@see #ImageIcon(String)
"
      end

      operation 10538626 "ImageIcon"
	public explicit_return_type ""
	nparams 1
	  param inout name "location" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ImageIcon from the specified URL. The image will
be preloaded by using MediaTracker to monitor the loaded state
of the image.
The icon's description is initialized to be
a string representation of the URL.
@param location the URL for the image
@see #getDescription
"
      end

      operation 10538754 "ImageIcon"
	public explicit_return_type ""
	nparams 2
	  param inout name "image" type class_ref 340098 // Image
	  param inout name "description" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ImageIcon from the image.
@param image the image
@param description a brief textual description of the image
"
      end

      operation 10538882 "ImageIcon"
	public explicit_return_type ""
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ImageIcon from an image object.
If the image has a \"comment\" property that is a string,
then the string is used as the description of this icon.
@param image the image
@see #getDescription
@see java.awt.Image#getProperty
"
      end

      operation 10539010 "ImageIcon"
	public explicit_return_type ""
	nparams 2
	  param inout name "imageData" explicit_type "byte"
	multiplicity "[]"
	  param inout name "description" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ImageIcon from an array of bytes which were
read from an image file containing a supported image format,
such as GIF, JPEG, or (as of 1.3) PNG.
Normally this array is created
by reading an image using Class.getResourceAsStream(), but
the byte array may also be statically stored in a class.

@param  imageData an array of pixels in an image format supported
        by the AWT Toolkit, such as GIF, JPEG, or (as of 1.3) PNG
@param  description a brief textual description of the image
@see    java.awt.Toolkit#createImage
"
      end

      operation 10539138 "ImageIcon"
	public explicit_return_type ""
	nparams 1
	  param inout name "imageData" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ImageIcon from an array of bytes which were
read from an image file containing a supported image format,
such as GIF, JPEG, or (as of 1.3) PNG.
Normally this array is created
by reading an image using Class.getResourceAsStream(), but
the byte array may also be statically stored in a class.
If the resulting image has a \"comment\" property that is a string,
then the string is used as the description of this icon.

@param  imageData an array of pixels in an image format supported by
            the AWT Toolkit, such as GIF, JPEG, or (as of 1.3) PNG
@see    java.awt.Toolkit#createImage
@see #getDescription
@see java.awt.Image#getProperty
"
      end

      operation 10539266 "ImageIcon"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an uninitialized image icon.
"
      end

      operation 10539394 "loadImage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the image, returning only when the image is loaded.
@param image the image
"
      end

      operation 10539522 "getNextID"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an ID to use with the MediaTracker in loading an image.
"
      end

      operation 10539650 "getTracker"
	private return_type class_ref 871810 // MediaTracker
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the MediaTracker for the current AppContext, creating a new
MediaTracker if necessary.
"
      end

      operation 10539778 "getImageLoadStatus"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status of the image loading operation.
@return the loading status as defined by java.awt.MediaTracker
@see java.awt.MediaTracker#ABORTED
@see java.awt.MediaTracker#ERRORED
@see java.awt.MediaTracker#COMPLETE
"
      end

      operation 10539906 "getImage"
	public return_type class_ref 340098 // Image
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns this icon's <code>Image</code>.
@return the <code>Image</code> object for this <code>ImageIcon</code>
"
      end

      operation 10540034 "setImage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the image displayed by this icon.
@param image the image
"
      end

      operation 10540162 "getDescription"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the description of the image.  This is meant to be a brief
textual description of the object.  For example, it might be
presented to a blind user to give an indication of the purpose
of the image.
The description may be null.

@return a brief textual description of the image
"
      end

      operation 10540290 "setDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "description" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the description of the image.  This is meant to be a brief
textual description of the object.  For example, it might be
presented to a blind user to give an indication of the purpose
of the image.
@param description a brief textual description of the image
"
      end

      operation 10540418 "paintIcon"
	public explicit_return_type "void"
	nparams 4
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the icon.
The top-left corner of the icon is drawn at
the point (<code>x</code>, <code>y</code>)
in the coordinate space of the graphics context <code>g</code>.
If this icon has no image observer,
this method uses the <code>c</code> component
as the observer.

@param c the component to be used as the observer
         if this icon has no image observer
@param g the graphics context
@param x the X coordinate of the icon's top-left corner
@param y the Y coordinate of the icon's top-left corner
"
      end

      operation 10540546 "getIconWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the width of the icon.

@return the width in pixels of this icon
"
      end

      operation 10540674 "getIconHeight"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the height of the icon.

@return the height in pixels of this icon
"
      end

      operation 10540802 "setImageObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the image observer for the image.  Set this
property if the ImageIcon contains an animated GIF, so
the observer is notified to update its display.
For example:
<pre>
    icon = new ImageIcon(...)
    button.setIcon(icon);
    icon.setImageObserver(button);
</pre>

@param observer the image observer
"
      end

      operation 10540930 "getImageObserver"
	public return_type class_ref 339970 // ImageObserver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the image observer for the image.

@return the image observer, which may be null
"
      end

      operation 10541058 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this image.

@return a string representing this image
"
      end

      operation 10541186 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10541314 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1274242 "AccessibleImageIcon"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4088706 // <generalisation>
	  relation 4088706 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4088706 // <generalisation>
	    b parent class_ref 347522 // AccessibleContext
	end

	classrelation 4088834 // <realization>
	  relation 4088834 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4088834 // <realization>
	    b parent class_ref 349186 // AccessibleIcon
	end

	classrelation 4088962 // <realization>
	  relation 4088962 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4088962 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10541570 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "AccessibleContest implementation -----------------


Gets the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 10541698 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see AccessibleState
"
	end

	operation 10541826 "getAccessibleParent"
	  public return_type class_ref 347778 // Accessible
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the Accessible parent of this object.  If the parent of this
object implements Accessible, this method should simply return
getParent().

@return the Accessible parent of this object -- can be null if this
object does not have an Accessible parent
"
	end

	operation 10541954 "getAccessibleIndexInParent"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the index of this object in its accessible parent.

@return the index of this object in its parent; -1 if this
object does not have an accessible parent.
@see #getAccessibleParent
"
	end

	operation 10542082 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement Accessible, than this
method should return the number of children of this object.

@return the number of accessible children in the object.
"
	end

	operation 10542210 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the nth Accessible child of the object.

@param i zero-based index of child
@return the nth Accessible child of the object
"
	end

	operation 10542338 "getLocale"
	  public return_type class_ref 312962 // Locale
	  nparams 0
	  nexceptions 1
	    exception class_ref 348290 // IllegalComponentStateException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the locale of this object.

@return the locale of this object
"
	end

	operation 10542466 "getAccessibleIconDescription"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "AccessibleIcon implementation -----------------


Gets the description of the icon.  This is meant to be a brief
textual description of the object.  For example, it might be
presented to a blind user to give an indication of the purpose
of the icon.

@return the description of the icon
"
	end

	operation 10542594 "setAccessibleIconDescription"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "description" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the description of the icon.  This is meant to be a brief
textual description of the object.  For example, it might be
presented to a blind user to give an indication of the purpose
of the icon.

@param description the description of the icon
"
	end

	operation 10542722 "getAccessibleIconHeight"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the height of the icon.

@return the height of the icon
"
	end

	operation 10542850 "getAccessibleIconWidth"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the width of the icon.

@return the width of the icon
"
	end

	operation 10542978 "readObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 168962 // ObjectInputStream
	  nexceptions 2
	    exception class_ref 169730 // ClassNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10543106 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "s" type class_ref 173442 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4088578 // accessibleContext (<unidirectional association>)
	relation 4088578 --->
	  a role_name "accessibleContext" init_value " null" private
	    comment "
--- Accessibility Support ---

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4088578 // accessibleContext (<unidirectional association>)
	  b parent class_ref 1274242 // AccessibleImageIcon
      end

      operation 10541442 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this ImageIcon.
For image icons, the AccessibleContext takes the form of an
AccessibleImageIcon.
A new AccessibleImageIcon instance is created if necessary.

@return an AccessibleImageIcon that serves as the
        AccessibleContext of this ImageIcon
@beaninfo
      expert: true
 description: The AccessibleContext associated with this ImageIcon.
@since 1.3
"
      end
    end

    class 419586 "JMenuBar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a menu bar. You add <code>JMenu</code> objects to the
menu bar to construct a menu. When the user selects a <code>JMenu</code>
object, its associated <code>JPopupMenu</code> is displayed, allowing the
user to select one of the <code>JMenuItems</code> on it.
<p>
For information and examples of using menu bars see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\">How to Use Menus</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.
<p>
<strong>Warning:</strong>
By default, pressing the Tab key does not transfer focus from a <code>
JMenuBar</code> which is added to a container together with other Swing
components, because the <code>focusTraversalKeysEnabled</code> property
of <code>JMenuBar</code> is set to <code>false</code>. To resolve this,
you should call the <code>JMenuBar.setFocusTraversalKeysEnabled(true)</code>
method.
@beaninfo
  attribute: isContainer true
description: A container for holding and displaying menus.

@author Georges Saab
@author David Karlton
@author Arnaud Weber
@see JMenu
@see JPopupMenu
@see JMenuItem
"
      classrelation 793986 // <generalisation>
	relation 793986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 793986 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 794114 // <realization>
	relation 794114 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 794114 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 794242 // <realization>
	relation 794242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 794242 // <realization>
	  b parent class_ref 386690 // MenuElement
      end

      classrelation 794370 // uiClassID (<unidirectional association>)
	relation 794370 --->
	  a role_name "uiClassID" init_value " \"MenuBarUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 794370 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 794498 // selectionModel (<unidirectional association>)
	relation 794498 --->
	  a role_name "selectionModel" private
	    comment "
Model for the selected subcontrol.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 794498 // selectionModel (<unidirectional association>)
	  b parent class_ref 393474 // SingleSelectionModel
      end

      attribute 535554 "paintBorder"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 794626 // margin (<unidirectional association>)
	relation 794626 --->
	  a role_name "margin" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 794626 // margin (<unidirectional association>)
	  b parent class_ref 343938 // Insets
      end

      attribute 535682 "TRACE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " diagnostic aids -- should be false for production builds. 
 trace creates and disposes"
      end

      attribute 535810 "VERBOSE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show reuse hits/misses"
      end

      attribute 535938 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show bad params, misc."
      end

      operation 2475522 "JMenuBar"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new menu bar.
"
      end

      operation 2475650 "getUI"
	public return_type class_ref 421250 // MenuBarUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the menubar's current UI.
@see #setUI
"
      end

      operation 2475778 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 421250 // MenuBarUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui the new MenuBarUI L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 2475906 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property with a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 2476034 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"MenuBarUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 2476162 "getSelectionModel"
	public return_type class_ref 393474 // SingleSelectionModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model object that handles single selections.

@return the <code>SingleSelectionModel</code> property
@see SingleSelectionModel
"
      end

      operation 2476290 "setSelectionModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "model" type class_ref 393474 // SingleSelectionModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model object to handle single selections.

@param model the <code>SingleSelectionModel</code> to use
@see SingleSelectionModel
@beaninfo
      bound: true
description: The selection model, recording which child is selected.
"
      end

      operation 2476418 "add"
	public return_type class_ref 419714 // JMenu
	nparams 1
	  param inout name "c" type class_ref 419714 // JMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified menu to the end of the menu bar.

@param c the <code>JMenu</code> component to add
@return the menu component
"
      end

      operation 2476546 "getMenu"
	public return_type class_ref 419714 // JMenu
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the menu at the specified position in the menu bar.

@param index  an integer giving the position in the menu bar, where
              0 is the first position
@return the <code>JMenu</code> at that position, or <code>null</code> if
         if there is no <code>JMenu</code> at that position (ie. if
         it is a <code>JMenuItem</code>)
"
      end

      operation 2476674 "getMenuCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of items in the menu bar.

@return the number of items in the menu bar
"
      end

      operation 2476802 "setHelpMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menu" type class_ref 419714 // JMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the help menu that appears when the user selects the
\"help\" option in the menu bar. This method is not yet implemented
and will throw an exception.

@param menu the JMenu that delivers help to the user
"
      end

      operation 2476930 "getHelpMenu"
	public return_type class_ref 419714 // JMenu
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Gets the help menu for the menu bar.  This method is not yet
implemented and will throw an exception.

@return the <code>JMenu</code> that delivers help to the user
"
      end

      operation 2477058 "getComponentAtIndex"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the component at the specified index.

@param i an integer specifying the position, where 0 is first
@return the <code>Component</code> at the position,
         or <code>null</code> for an invalid index
@deprecated replaced by <code>getComponent(int i)</code>
"
      end

      operation 2477186 "getComponentIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the specified component.

@param c  the <code>Component</code> to find
@return an integer giving the component's position, where 0 is first;
         or -1 if it can't be found
"
      end

      operation 2477314 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sel" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the currently selected component, producing a
a change to the selection model.

@param sel the <code>Component</code> to select
"
      end

      operation 2477442 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the menu bar currently has a component selected.

@return true if a selection has been made, else false
"
      end

      operation 2477570 "isBorderPainted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the menu bars border should be painted.

@return  true if the border should be painted, else false
"
      end

      operation 2477698 "setBorderPainted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the border should be painted.

@param b if true and border property is not <code>null</code>,
         the border is painted.
@see #isBorderPainted
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether the border should be painted.
"
      end

      operation 2477826 "paintBorder"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the menubar's border if <code>BorderPainted</code>
property is true.

@param g the <code>Graphics</code> context to use for painting
@see JComponent#paint
@see JComponent#setBorder
"
      end

      operation 2477954 "setMargin"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 343938 // Insets
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the margin between the menubar's border and
its menus. Setting to <code>null</code> will cause the menubar to
use the default margins.

@param m an Insets object containing the margin values
@see Insets
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The space between the menubar's border and its contents
"
      end

      operation 2478082 "getMargin"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the margin between the menubar's border and
its menus.  If there is no previous margin, it will create
a default margin with zero size.

@return an <code>Insets</code> object containing the margin values
@see Insets
"
      end

      operation 2478210 "processMouseEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "event" type class_ref 346626 // MouseEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implemented to be a <code>MenuElement</code> -- does nothing.

@see #getSubElements
"
      end

      operation 2478338 "processKeyEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "path" type class_ref 386690 // MenuElement
	multiplicity "[]"
	  param inout name "manager" type class_ref 387074 // MenuSelectionManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implemented to be a <code>MenuElement</code> -- does nothing.

@see #getSubElements
"
      end

      operation 2478466 "menuSelectionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isIncluded" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implemented to be a <code>MenuElement</code> -- does nothing.

@see #getSubElements
"
      end

      operation 2478594 "getSubElements"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implemented to be a <code>MenuElement</code> -- returns the
menus in this menu bar.
This is the reason for implementing the <code>MenuElement</code>
interface -- so that the menu bar can be treated the same as
other menu elements.
@return an array of menu items in the menu bar.
"
      end

      operation 2478722 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implemented to be a <code>MenuElement</code>. Returns this object.

@return the current <code>Component</code> (this)
@see #getSubElements
"
      end

      operation 2478850 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JMenuBar</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JMenuBar</code>
"
      end

      operation 2478978 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JMenuBar.
For JMenuBars, the AccessibleContext takes the form of an
AccessibleJMenuBar.
A new AccessibleJMenuBar instance is created if necessary.

@return an AccessibleJMenuBar that serves as the
        AccessibleContext of this JMenuBar
"
      end

      class 421378 "AccessibleJMenuBar"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 794754 // <generalisation>
	  relation 794754 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 794754 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 794882 // <realization>
	  relation 794882 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 794882 // <realization>
	    b parent class_ref 348674 // AccessibleSelection
	end

	operation 2479106 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible state set of this object.

@return an instance of AccessibleState containing the current state
        of the object
"
	end

	operation 2479234 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end

	operation 2479362 "getAccessibleSelection"
	  public return_type class_ref 348674 // AccessibleSelection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleSelection associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleSelection interface on behalf of itself.

@return this object
"
	end

	operation 2479490 "getAccessibleSelectionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns 1 if a menu is currently selected in this menu bar.

@return 1 if a menu is currently selected, else 0
"
	end

	operation 2479618 "getAccessibleSelection"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the currently selected menu if one is selected,
otherwise null.
"
	end

	operation 2479746 "isAccessibleChildSelected"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the current child of this object is selected.

@param i the zero-based index of the child in this Accessible
object.
@see AccessibleContext#getAccessibleChild
"
	end

	operation 2479874 "addAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Selects the nth menu in the menu bar, forcing it to
pop up.  If another menu is popped up, this will force
it to close.  If the nth menu is already selected, this
method has no effect.

@param i the zero-based index of selectable items
@see #getAccessibleStateSet
"
	end

	operation 2480002 "removeAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the nth selected item in the object from the object's
selection.  If the nth item isn't currently selected, this
method has no effect.  Otherwise, it closes the popup menu.

@param i the zero-based index of selectable items
"
	end

	operation 2480130 "clearAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clears the selection in the object, so that nothing in the
object is selected.  This will close any open menu.
"
	end

	operation 2480258 "selectAllAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Normally causes every selected item in the object to be selected
if the object supports multiple selections.  This method
makes no sense in a menu bar, and so does nothing.
"
	end
      end

      operation 2480386 "processKeyBinding"
	protected explicit_return_type "boolean"
	nparams 4
	  param inout name "ks" type class_ref 356610 // KeyStroke
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param in name "condition" explicit_type "int"
	  param inout name "pressed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internal class AccessibleJMenuBar

Subclassed to check all the child menus.
@since 1.3
"
      end

      operation 2480514 "processBindingForKeyStrokeRecursive"
	class_operation package explicit_return_type "boolean"
	nparams 5
	  param inout name "elem" type class_ref 386690 // MenuElement
	  param inout name "ks" type class_ref 356610 // KeyStroke
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param in name "condition" explicit_type "int"
	  param inout name "pressed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2480642 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>JComponent.addNotify</code> to register this
menu bar with the current keyboard manager.
"
      end

      operation 2480770 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>JComponent.removeNotify</code> to unregister this
menu bar with the current keyboard manager.
"
      end

      operation 2480898 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2481026 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See JComponent.readObject() for information about serialization
in Swing.
"
      end
    end

    class 419714 "JMenu"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a menu -- a popup window containing
<code>JMenuItem</code>s that
is displayed when the user selects an item on the <code>JMenuBar</code>.
In addition to <code>JMenuItem</code>s, a <code>JMenu</code> can
also contain <code>JSeparator</code>s.
<p>
In essence, a menu is a button with an associated <code>JPopupMenu</code>.
When the \"button\" is pressed, the <code>JPopupMenu</code> appears. If the
\"button\" is on the <code>JMenuBar</code>, the menu is a top-level window.
If the \"button\" is another menu item, then the <code>JPopupMenu</code> is
\"pull-right\" menu.
<p>
Menus can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a menu has many benefits beyond directly
configuring a menu.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
For information and examples of using menus see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\">How to Use Menus</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer true
description: A popup window containing menu items displayed in a menu bar.

@author Georges Saab
@author David Karlton
@author Arnaud Weber
@see JMenuItem
@see JSeparator
@see JMenuBar
@see JPopupMenu
"
      classrelation 4133506 // <generalisation>
	relation 4133506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4133506 // <generalisation>
	  b parent class_ref 386050 // JMenuItem
      end

      classrelation 4133634 // <realization>
	relation 4133634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4133634 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4133762 // <realization>
	relation 4133762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4133762 // <realization>
	  b parent class_ref 386690 // MenuElement
      end

      classrelation 4133890 // uiClassID (<unidirectional association>)
	relation 4133890 --->
	  a role_name "uiClassID" init_value " \"MenuUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4133890 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4134018 // popupMenu (<unidirectional association>)
	relation 4134018 --->
	  a role_name "popupMenu" private
	    comment "
The popup menu portion of the menu.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4134018 // popupMenu (<unidirectional association>)
	  b parent class_ref 357378 // JPopupMenu
      end

      classrelation 4134146 // menuChangeListener (<unidirectional association>)
	relation 4134146 --->
	  a role_name "menuChangeListener" init_value " null" private
	    comment "
The button's model listeners.  Default is <code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4134146 // menuChangeListener (<unidirectional association>)
	  b parent class_ref 359426 // ChangeListener
      end

      classrelation 4134274 // menuEvent (<unidirectional association>)
	relation 4134274 --->
	  a role_name "menuEvent" init_value " null" private
	    comment "
Only one <code>MenuEvent</code> is needed for each menu since the
event's only state is the source property.  The source of events
generated is always \"this\".  Default is <code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4134274 // menuEvent (<unidirectional association>)
	  b parent class_ref 1285634 // MenuEvent
      end

      attribute 2414082 "delay"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used by the look and feel (L&F) code to handle
implementation specific menu behaviors.

"
      end

      classrelation 4134402 // customMenuLocation (<unidirectional association>)
	relation 4134402 --->
	  a role_name "customMenuLocation" init_value " null" private
	    comment "
Location of the popup component. Location is <code>null</code>
if it was not customized by <code>setMenuLocation</code>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4134402 // customMenuLocation (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      attribute 2414210 "TRACE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Diagnostic aids -- should be false for production builds. 
 trace creates and disposes"
      end

      attribute 2414338 "VERBOSE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show reuse hits/misses"
      end

      attribute 2414466 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "   false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " show bad params, misc."
      end

      operation 10646530 "JMenu"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JMenu</code> with no text.
"
      end

      operation 10646658 "JMenu"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JMenu</code> with the supplied string
as its text.

@param s  the text for the menu label
"
      end

      operation 10646786 "JMenu"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a menu whose properties are taken from the
<code>Action</code> supplied.
@param a an <code>Action</code>

@since 1.3
"
      end

      operation 10646914 "JMenu"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JMenu</code> with the supplied string as
its text and specified as a tear-off menu or not.

@param s the text for the menu label
@param b can the menu be torn off (not yet implemented)
"
      end

      operation 10647042 "initFocusability"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overriden to do nothing. We want JMenu to be focusable, but
<code>JMenuItem</code> doesn't want to be, thus we override this
do nothing. We don't invoke <code>setFocusable(true)</code> after
super's constructor has completed as this has the side effect that
<code>JMenu</code> will be considered traversable via the
keyboard, which we don't want. Making a Component traversable by
the keyboard after invoking <code>setFocusable(true)</code> is OK,
as <code>setFocusable</code> is new API
and is speced as such, but internally we don't want to use it like
this else we change the keyboard traversability.
"
      end

      operation 10647170 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property with a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10647298 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"MenuUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10647426 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 397570 // ButtonModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "    public void repaint(long tm, int x, int y, int width, int height) {
        Thread.currentThread().dumpStack();
        super.repaint(tm,x,y,width,height);
    }

Sets the data model for the \"menu button\" -- the label
that the user clicks to open or close the menu.

@param newModel the <code>ButtonModel</code>
@see #getModel
@beaninfo
description: The menu's model
      bound: true
     expert: true
     hidden: true
"
      end

      operation 10647554 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the menu is currently selected (highlighted).

@return true if the menu is selected, else false
"
      end

      operation 10647682 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selection status of the menu.

@param b  true to select (highlight) the menu; false to de-select
         the menu
@beaninfo
     description: When the menu is selected, its popup child is shown.
          expert: true
          hidden: true
"
      end

      operation 10647810 "isPopupMenuVisible"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the menu's popup window is visible.

@return true if the menu is visible, else false
"
      end

      operation 10647938 "setPopupMenuVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the visibility of the menu's popup.  If the menu is
not enabled, this method will have no effect.

@param b  a boolean value -- true to make the menu visible,
          false to hide it
@beaninfo
     description: The popup menu's visibility
          expert: true
          hidden: true
"
      end

      operation 10648066 "getPopupMenuOrigin"
	protected return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the origin for the <code>JMenu</code>'s popup menu.
This method uses Look and Feel properties named
<code>Menu.menuPopupOffsetX</code>,
<code>Menu.menuPopupOffsetY</code>,
<code>Menu.submenuPopupOffsetX</code>, and
<code>Menu.submenuPopupOffsetY</code>
to adjust the exact location of popup.

@return a <code>Point</code> in the coordinate space of the
         menu which should be used as the origin
         of the <code>JMenu</code>'s popup menu

@since 1.3
"
      end

      operation 10648194 "getDelay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the suggested delay, in milliseconds, before submenus
are popped up or down.
Each look and feel (L&amp;F) may determine its own policy for
observing the <code>delay</code> property.
In most cases, the delay is not observed for top level menus
or while dragging.  The default for <code>delay</code> is 0.
This method is a property of the look and feel code and is used
to manage the idiosyncrasies of the various UI implementations.


@return the <code>delay</code> property
"
      end

      operation 10648322 "setDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "d" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the suggested delay before the menu's <code>PopupMenu</code>
is popped up or down.  Each look and feel (L&amp;F) may determine
it's own policy for observing the delay property.  In most cases,
the delay is not observed for top level menus or while dragging.
This method is a property of the look and feel code and is used
to manage the idiosyncrasies of the various UI implementations.

@param       d the number of milliseconds to delay
@exception   IllegalArgumentException if <code>d</code>
                      is less than 0
@beaninfo
     description: The delay between menu selection and making the popup menu visible
          expert: true
"
      end

      class 1285762 "WinListener"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4134914 // <generalisation>
	  relation 4134914 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4134914 // <generalisation>
	    b parent class_ref 477570 // WindowAdapter
	end

	classrelation 4135042 // <realization>
	  relation 4135042 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4135042 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 4135170 // popupMenu (<unidirectional association>)
	  relation 4135170 --->
	    a role_name "popupMenu" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4135170 // popupMenu (<unidirectional association>)
	    b parent class_ref 357378 // JPopupMenu
	end

	operation 10653570 "WinListener"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "p" type class_ref 357378 // JPopupMenu
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create the window listener for the specified popup.
@since 1.4
"
	end

	operation 10653698 "windowClosing"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Deselect the menu when the popup is closed from outside.
"
	end
      end

      classrelation 4134530 // popupListener (<unidirectional association>)
	relation 4134530 --->
	  a role_name "popupListener" protected
	    comment "
The window-closing listener for the popup.

@see WinListener

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4134530 // popupListener (<unidirectional association>)
	  b parent class_ref 1285762 // WinListener
      end

      operation 10648450 "ensurePopupMenuCreated"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10648578 "getCustomMenuLocation"
	private return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the customized location of the popup component.
"
      end

      operation 10648706 "setMenuLocation"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of the popup component.

@param x the x coordinate of the popup's new position
@param y the y coordinate of the popup's new position
"
      end

      operation 10648834 "add"
	public return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "menuItem" type class_ref 386050 // JMenuItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a menu item to the end of this menu.
Returns the menu item added.

@param menuItem the <code>JMenuitem</code> to be added
@return the <code>JMenuItem</code> added
"
      end

      operation 10648962 "add"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a component to the end of this menu.
Returns the component added.

@param c the <code>Component</code> to add
@return the <code>Component</code> added
"
      end

      operation 10649090 "add"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this container at the given
position. If <code>index</code> equals -1, the component will
be appended to the end.
@param     c   the <code>Component</code> to add
@param     index    the position at which to insert the component
@return    the <code>Component</code> added
@see       #remove
@see java.awt.Container#add(Component, int)
"
      end

      operation 10649218 "add"
	public return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new menu item with the specified text and appends
it to the end of this menu.

@param s the string for the menu item to be added
"
      end

      operation 10649346 "add"
	public return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new menu item attached to the specified
<code>Action</code> object and appends it to the end of this menu.

@param a the <code>Action</code> for the menu item to be added
@see Action
"
      end

      operation 10649474 "createActionComponent"
	protected return_type class_ref 386050 // JMenuItem
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method which creates the <code>JMenuItem</code> for
<code>Action</code>s added to the <code>JMenu</code>.

@param a the <code>Action</code> for the menu item to be added
@return the new menu item
@see Action

@since 1.3
"
      end

      operation 10649602 "createActionChangeListener"
	protected return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "b" type class_ref 386050 // JMenuItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a properly configured <code>PropertyChangeListener</code>
which updates the control as changes to the <code>Action</code> occur.
"
      end

      operation 10649730 "addSeparator"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a new separator to the end of the menu.
"
      end

      operation 10649858 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a new menu item with the specified text at a
given position.

@param s the text for the menu item to add
@param pos an integer specifying the position at which to add the
              new menu item
@exception IllegalArgumentException when the value of
                 <code>pos</code> &lt; 0
"
      end

      operation 10649986 "insert"
	public return_type class_ref 386050 // JMenuItem
	nparams 2
	  param inout name "mi" type class_ref 386050 // JMenuItem
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified <code>JMenuitem</code> at a given position.

@param mi the <code>JMenuitem</code> to add
@param pos an integer specifying the position at which to add the
              new <code>JMenuitem</code>
@return the new menu item
@exception IllegalArgumentException if the value of
                 <code>pos</code> &lt; 0
"
      end

      operation 10650114 "insert"
	public return_type class_ref 386050 // JMenuItem
	nparams 2
	  param inout name "a" type class_ref 352258 // Action
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a new menu item attached to the specified <code>Action</code>
object at a given position.

@param a the <code>Action</code> object for the menu item to add
@param pos an integer specifying the position at which to add the
              new menu item
@exception IllegalArgumentException if the value of
                 <code>pos</code> &lt; 0
"
      end

      operation 10650242 "insertSeparator"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a separator at the specified position.

@param       index an integer specifying the position at which to
                   insert the menu separator
@exception   IllegalArgumentException if the value of
                      <code>index</code> &lt; 0
"
      end

      operation 10650370 "getItem"
	public return_type class_ref 386050 // JMenuItem
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JMenuItem</code> at the specified position.
If the component at <code>pos</code> is not a menu item,
<code>null</code> is returned.
This method is included for AWT compatibility.

@param pos    an integer specifying the position
@exception   IllegalArgumentException if the value of
                      <code>pos</code> &lt; 0
@return  the menu item at the specified position; or <code>null</code>
         if the item as the specified position is not a menu item
"
      end

      operation 10650498 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of items on the menu, including separators.
This method is included for AWT compatibility.

@return an integer equal to the number of items on the menu
@see #getMenuComponentCount
"
      end

      operation 10650626 "isTearOff"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the menu can be torn off.  This method is not
yet implemented.

@return true if the menu can be torn off, else false
@exception  Error  if invoked -- this method is not yet implemented
"
      end

      operation 10650754 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 386050 // JMenuItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified menu item from this menu.  If there is no
popup menu, this method will have no effect.

@param    item the <code>JMenuItem</code> to be removed from the menu
"
      end

      operation 10650882 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the menu item at the specified index from this menu.

@param       pos the position of the item to be removed
@exception   IllegalArgumentException if the value of
                      <code>pos</code> &lt; 0, or if <code>pos</code>
                      is greater than the number of menu items
"
      end

      operation 10651010 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the component <code>c</code> from this menu.

@param       c the component to be removed
"
      end

      operation 10651138 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all menu items from this menu.
"
      end

      operation 10651266 "getMenuComponentCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of components on the menu.

@return an integer containing the number of components on the menu
"
      end

      operation 10651394 "getMenuComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component at position <code>n</code>.

@param n the position of the component to be returned
@return the component requested, or <code>null</code>
                 if there is no popup menu

"
      end

      operation 10651522 "getMenuComponents"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Component</code>s of the menu's
subcomponents.  Note that this returns all <code>Component</code>s
in the popup menu, including separators.

@return an array of <code>Component</code>s or an empty array
         if there is no popup menu
"
      end

      operation 10651650 "isTopLevelMenu"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the menu is a 'top-level menu', that is, if it is
the direct child of a menubar.

@return true if the menu is activated from the menu bar;
        false if the menu is activated from a menu item
        on another menu
"
      end

      operation 10651778 "isMenuComponent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified component exists in the
submenu hierarchy.

@param c the <code>Component</code> to be tested
@return true if the <code>Component</code> exists, false otherwise
"
      end

      operation 10651906 "translateToPopupMenu"
	private return_type class_ref 323714 // Point
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a point in the coordinate space of this menu's popupmenu
which corresponds to the point <code>p</code> in the menu's
coordinate space.

@param p the point to be translated
@return the point in the coordinate space of this menu's popupmenu
"
      end

      operation 10652034 "translateToPopupMenu"
	private return_type class_ref 323714 // Point
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a point in the coordinate space of this menu's popupmenu
which corresponds to the point (x,y) in the menu's coordinate space.

@param x the x coordinate of the point to be translated
@param y the y coordinate of the point to be translated
@return the point in the coordinate space of this menu's popupmenu
"
      end

      operation 10652162 "getPopupMenu"
	public return_type class_ref 357378 // JPopupMenu
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the popupmenu associated with this menu.  If there is
no popupmenu, it will create one.
"
      end

      operation 10652290 "addMenuListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 425858 // MenuListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener for menu events.

@param l the listener to be added
"
      end

      operation 10652418 "removeMenuListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 425858 // MenuListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener for menu events.

@param l the listener to be removed
"
      end

      operation 10652546 "getMenuListeners"
	public return_type class_ref 425858 // MenuListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>MenuListener</code>s added
to this JMenu with addMenuListener().

@return all of the <code>MenuListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10652674 "fireMenuSelected"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.

@exception Error  if there is a <code>null</code> listener
@see EventListenerList
"
      end

      operation 10652802 "fireMenuDeselected"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.

@exception Error if there is a <code>null</code> listener
@see EventListenerList
"
      end

      operation 10652930 "fireMenuCanceled"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.

@exception Error if there is a <code>null</code> listener
@see EventListenerList
"
      end

      operation 10653058 "configureAcceleratorFromAction"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Overriden to do nothing, JMenu doesn't support an accelerator"
      end

      class 1285890 "MenuChangeListener"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4134658 // <realization>
	  relation 4134658 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4134658 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4134786 // <realization>
	  relation 4134786 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4134786 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2414594 "isSelected"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10653186 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10653314 "createMenuChangeListener"
	private return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10653442 "createWinListener"
	protected return_type class_ref 1285762 // WinListener
	nparams 1
	  param inout name "p" type class_ref 357378 // JPopupMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a window-closing listener for the popup.

@param p the <code>JPopupMenu</code>
@return the new window-closing listener

@see WinListener
"
      end

      operation 10653826 "menuSelectionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isIncluded" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Messaged when the menubar selection changes to activate or
deactivate this menu.
Overrides <code>JMenuItem.menuSelectionChanged</code>.

@param isIncluded  true if this menu is active, false if
       it is not
"
      end

      operation 10653954 "getSubElements"
	public return_type class_ref 386690 // MenuElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>MenuElement</code>s containing the submenu
for this menu component.  If popup menu is <code>null</code> returns
an empty array.  This method is required to conform to the
<code>MenuElement</code> interface.  Note that since
<code>JSeparator</code>s do not conform to the <code>MenuElement</code>
interface, this array will only contain <code>JMenuItem</code>s.

@return an array of <code>MenuElement</code> objects
"
      end

      operation 10654082 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.MenuElement

Returns the <code>java.awt.Component</code> used to
paint this <code>MenuElement</code>.
The returned component is used to convert events and detect if
an event is inside a menu component.
"
      end

      operation 10654210 "applyComponentOrientation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>ComponentOrientation</code> property of this menu
and all components contained within it. This includes all
components returned by {@link #getMenuComponents getMenuComponents}.

@param o the new component orientation of this menu and
       the components contained within it.
@exception NullPointerException if <code>orientation</code> is null.
@see java.awt.Component#setComponentOrientation
@see java.awt.Component#getComponentOrientation
@since 1.4
"
      end

      operation 10654338 "setComponentOrientation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10654466 "setAccelerator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keyStroke" type class_ref 356610 // KeyStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>setAccelerator</code> is not defined for <code>JMenu</code>.
Use <code>setMnemonic</code> instead.
@param keyStroke  the keystroke combination which will invoke
                 the <code>JMenuItem</code>'s actionlisteners
                 without navigating the menu hierarchy
@exception Error  if invoked -- this method is not defined for JMenu.
                 Use <code>setMnemonic</code> instead

@beaninfo
    description: The keystroke combination which will invoke the JMenuItem's
                 actionlisteners without navigating the menu hierarchy
         hidden: true
"
      end

      operation 10654594 "processKeyEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes key stroke events such as mnemonics and accelerators.

@param evt  the key event to be processed
"
      end

      operation 10654722 "doClick"
	public explicit_return_type "void"
	nparams 1
	  param in name "pressTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Programmatically performs a \"click\".  This overrides the method
<code>AbstractButton.doClick</code> in order to make the menu pop up.
@param pressTime  indicates the number of milliseconds the
         button was pressed for
"
      end

      operation 10654850 "buildMenuElementArray"
	private return_type class_ref 386690 // MenuElement
	nparams 1
	  param inout name "leaf" type class_ref 419714 // JMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Build an array of menu elements - from <code>PopupMenu</code> to
the root <code>JMenuBar</code>.
@param  leaf  the leaf node from which to start building up the array
@return the array of menu items
"
      end

      operation 10654978 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10655106 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JMenu</code>. This
method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JMenu.
"
      end

      operation 10655234 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JMenu.
For JMenus, the AccessibleContext takes the form of an
AccessibleJMenu.
A new AccessibleJMenu instance is created if necessary.

@return an AccessibleJMenu that serves as the
        AccessibleContext of this JMenu
"
      end

      class 1286018 "AccessibleJMenu"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4135298 // <generalisation>
	  relation 4135298 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4135298 // <generalisation>
	    b parent class_ref 1275394 // AccessibleJMenuItem
	end

	classrelation 4135426 // <realization>
	  relation 4135426 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4135426 // <realization>
	    b parent class_ref 348674 // AccessibleSelection
	end

	operation 10655362 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement Accessible, than this
method should return the number of children of this object.

@return the number of accessible children in the object.
"
	end

	operation 10655490 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the nth Accessible child of the object.

@param i zero-based index of child
@return the nth Accessible child of the object
"
	end

	operation 10655618 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 10655746 "getAccessibleSelection"
	  public return_type class_ref 348674 // AccessibleSelection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleSelection associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleSelection interface on behalf of itself.

@return this object
"
	end

	operation 10655874 "getAccessibleSelectionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns 1 if a sub-menu is currently selected in this menu.

@return 1 if a menu is currently selected, else 0
"
	end

	operation 10656002 "getAccessibleSelection"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the currently selected sub-menu if one is selected,
otherwise null (there can only be one selection, and it can
only be a sub-menu, as otherwise menu items don't remain
selected).
"
	end

	operation 10656130 "isAccessibleChildSelected"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the current child of this object is selected
(that is, if this child is a popped-up submenu).

@param i the zero-based index of the child in this Accessible
object.
@see AccessibleContext#getAccessibleChild
"
	end

	operation 10656258 "addAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Selects the <code>i</code>th menu in the menu.
If that item is a submenu,
it will pop up in response.  If a different item is already
popped up, this will force it to close.  If this is a sub-menu
that is already popped up (selected), this method has no
effect.

@param i the index of the item to be selected
@see #getAccessibleStateSet
"
	end

	operation 10656386 "removeAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the nth item from the selection.  In general, menus
can only have one item within them selected at a time
(e.g. one sub-menu popped open).

@param i the zero-based index of the selected item
"
	end

	operation 10656514 "clearAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clears the selection in the object, so that nothing in the
object is selected.  This will close any open sub-menu.
"
	end

	operation 10656642 "selectAllAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Normally causes every selected item in the object to be selected
if the object supports multiple selections.  This method
makes no sense in a menu bar, and so does nothing.
"
	end
      end
    end

    class 426626 "JOptionPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JOptionPane</code> makes it easy to pop up a standard dialog box that
prompts users for a value or informs them of something.
For information about using <code>JOptionPane</code>, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html\">How to Make Dialogs</a>,
a section in <em>The Java Tutorial</em>.

<p>

While the <code>JOptionPane</code>
class may appear complex because of the large number of methods, almost
all uses of this class are one-line calls to one of the static
<code>showXxxDialog</code> methods shown below:
<blockquote>


<table border=1 summary=\"Common JOptionPane method names and their descriptions\">
<tr>
   <th>Method Name</th>
   <th>Description</th>
</tr>
<tr>
   <td>showConfirmDialog</td>
   <td>Asks a confirming question, like yes/no/cancel.</td>
</tr>
<tr>
   <td>showInputDialog</td>
   <td>Prompt for some input.</td>
</tr>
<tr>
  <td>showMessageDialog</td>
  <td>Tell the user about something that has happened.</td>
</tr>
<tr>
  <td>showOptionDialog</td>
  <td>The Grand Unification of the above three.</td>
</tr>
</table>

</blockquote>
Each of these methods also comes in a <code>showInternalXXX</code>
flavor, which uses an internal frame to hold the dialog box (see
{@link JInternalFrame}).
Multiple convenience methods have also been defined -- overloaded
versions of the basic methods that use different parameter lists.
<p>
All dialogs are modal. Each <code>showXxxDialog</code> method blocks
the caller until the user's interaction is complete.

<table cellspacing=6 cellpadding=4 border=0 style=\"float:right\" summary=\"layout\">
<tr>
 <td style=\"background-color:#FFe0d0\" rowspan=2>icon</td>
 <td style=\"background-color:#FFe0d0\">message</td>
</tr>
<tr>
 <td style=\"background-color:#FFe0d0\">input value</td>
</tr>
<tr>
  <td style=\"background-color:#FFe0d0\" colspan=2>option buttons</td>
</tr>
</table>

The basic appearance of one of these dialog boxes is generally
similar to the picture at the right, although the various
look-and-feels are
ultimately responsible for the final result.  In particular, the
look-and-feels will adjust the layout to accommodate the option pane's
<code>ComponentOrientation</code> property.
<br style=\"clear:all\">
<p>
<b>Parameters:</b><br>
The parameters to these methods follow consistent patterns:
<blockquote>
<dl compact>
<dt>parentComponent<dd>
Defines the <code>Component</code> that is to be the parent of this
dialog box.
It is used in two ways: the <code>Frame</code> that contains
it is used as the <code>Frame</code>
parent for the dialog box, and its screen coordinates are used in
the placement of the dialog box. In general, the dialog box is placed
just below the component. This parameter may be <code>null</code>,
in which case a default <code>Frame</code> is used as the parent,
and the dialog will be
centered on the screen (depending on the {@literal L&F}).
<dt><a name=message>message</a><dd>
A descriptive message to be placed in the dialog box.
In the most common usage, message is just a <code>String</code> or
<code>String</code> constant.
However, the type of this parameter is actually <code>Object</code>. Its
interpretation depends on its type:
<dl compact>
<dt>Object[]<dd>An array of objects is interpreted as a series of
                messages (one per object) arranged in a vertical stack.
                The interpretation is recursive -- each object in the
                array is interpreted according to its type.
<dt>Component<dd>The <code>Component</code> is displayed in the dialog.
<dt>Icon<dd>The <code>Icon</code> is wrapped in a <code>JLabel</code>
              and displayed in the dialog.
<dt>others<dd>The object is converted to a <code>String</code> by calling
              its <code>toString</code> method. The result is wrapped in a
              <code>JLabel</code> and displayed.
</dl>
<dt>messageType<dd>Defines the style of the message. The Look and Feel
manager may lay out the dialog differently depending on this value, and
will often provide a default icon. The possible values are:
<ul>
<li><code>ERROR_MESSAGE</code>
<li><code>INFORMATION_MESSAGE</code>
<li><code>WARNING_MESSAGE</code>
<li><code>QUESTION_MESSAGE</code>
<li><code>PLAIN_MESSAGE</code>
</ul>
<dt>optionType<dd>Defines the set of option buttons that appear at
the bottom of the dialog box:
<ul>
<li><code>DEFAULT_OPTION</code>
<li><code>YES_NO_OPTION</code>
<li><code>YES_NO_CANCEL_OPTION</code>
<li><code>OK_CANCEL_OPTION</code>
</ul>
You aren't limited to this set of option buttons.  You can provide any
buttons you want using the options parameter.
<dt>options<dd>A more detailed description of the set of option buttons
that will appear at the bottom of the dialog box.
The usual value for the options parameter is an array of
<code>String</code>s. But
the parameter type is an array of <code>Objects</code>.
A button is created for each object depending on its type:
<dl compact>
<dt>Component<dd>The component is added to the button row directly.
<dt>Icon<dd>A <code>JButton</code> is created with this as its label.
<dt>other<dd>The <code>Object</code> is converted to a string using its
             <code>toString</code> method and the result is used to
             label a <code>JButton</code>.
</dl>
<dt>icon<dd>A decorative icon to be placed in the dialog box. A default
value for this is determined by the <code>messageType</code> parameter.
<dt>title<dd>The title for the dialog box.
<dt>initialValue<dd>The default selection (input value).
</dl>
</blockquote>
<p>
When the selection is changed, <code>setValue</code> is invoked,
which generates a <code>PropertyChangeEvent</code>.
<p>
If a <code>JOptionPane</code> has configured to all input
<code>setWantsInput</code>
the bound property <code>JOptionPane.INPUT_VALUE_PROPERTY</code>
 can also be listened
to, to determine when the user has input or selected a value.
<p>
When one of the <code>showXxxDialog</code> methods returns an integer,
the possible values are:
<ul>
<li><code>YES_OPTION</code>
<li><code>NO_OPTION</code>
<li><code>CANCEL_OPTION</code>
<li><code>OK_OPTION</code>
<li><code>CLOSED_OPTION</code>
</ul>
<b>Examples:</b>
<dl>
<dt>Show an error dialog that displays the message, 'alert':
<dd><code>
JOptionPane.showMessageDialog(null, \"alert\", \"alert\", JOptionPane.ERROR_MESSAGE);
</code>
<dt>Show an internal information dialog with the message, 'information':
<dd><pre>
JOptionPane.showInternalMessageDialog(frame, \"information\",
            \"information\", JOptionPane.INFORMATION_MESSAGE);
</pre>
<dt>Show an information panel with the options yes/no and message 'choose one':
<dd><pre>JOptionPane.showConfirmDialog(null,
            \"choose one\", \"choose one\", JOptionPane.YES_NO_OPTION);
</pre>
<dt>Show an internal information dialog with the options yes/no/cancel and
message 'please choose one' and title information:
<dd><pre>JOptionPane.showInternalConfirmDialog(frame,
            \"please choose one\", \"information\",
            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
</pre>
<dt>Show a warning dialog with the options OK, CANCEL, title 'Warning', and
message 'Click OK to continue':
<dd><pre>
Object[] options = { \"OK\", \"CANCEL\" };
JOptionPane.showOptionDialog(null, \"Click OK to continue\", \"Warning\",
            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
            null, options, options[0]);
</pre>
<dt>Show a dialog asking the user to type in a String:
<dd><code>
String inputValue = JOptionPane.showInputDialog(\"Please input a value\");
</code>
<dt>Show a dialog asking the user to select a String:
<dd><pre>
Object[] possibleValues = { \"First\", \"Second\", \"Third\" };<br>
Object selectedValue = JOptionPane.showInputDialog(null,
            \"Choose one\", \"Input\",
            JOptionPane.INFORMATION_MESSAGE, null,
            possibleValues, possibleValues[0]);
</pre><p>
</dl>
<b>Direct Use:</b><br>
To create and use an <code>JOptionPane</code> directly, the
standard pattern is roughly as follows:
<pre>
    JOptionPane pane = new JOptionPane(<i>arguments</i>);
    pane.set<i>.Xxxx(...); // Configure</i>
    JDialog dialog = pane.createDialog(<i>parentComponent, title</i>);
    dialog.show();
    Object selectedValue = pane.getValue();
    if(selectedValue == null)
      return CLOSED_OPTION;
    <i>//If there is <b>not</b> an array of option buttons:</i>
    if(options == null) {
      if(selectedValue instanceof Integer)
         return ((Integer)selectedValue).intValue();
      return CLOSED_OPTION;
    }
    <i>//If there is an array of option buttons:</i>
    for(int counter = 0, maxCounter = options.length;
       counter &lt; maxCounter; counter++) {
       if(options[counter].equals(selectedValue))
       return counter;
    }
    return CLOSED_OPTION;
</pre>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JInternalFrame

@beaninfo
     attribute: isContainer true
   description: A component which implements standard dialog box controls.

@author James Gosling
@author Scott Violet
"
      classrelation 4135554 // <generalisation>
	relation 4135554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4135554 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4135682 // <realization>
	relation 4135682 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4135682 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4135810 // uiClassID (<unidirectional association>)
	relation 4135810 --->
	  a role_name "uiClassID" init_value " \"OptionPaneUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4135810 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4135938 // UNINITIALIZED_VALUE (<unidirectional association>)
	relation 4135938 --->
	  a role_name "UNINITIALIZED_VALUE" init_value " \"uninitializedValue\"" class_relation const_relation public
	    comment "
Indicates that the user has not yet selected a value.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4135938 // UNINITIALIZED_VALUE (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2414722 "DEFAULT_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Option types


Type meaning Look and Feel should not supply any options -- only
use the options from the <code>JOptionPane</code>.

"
      end

      attribute 2414850 "YES_NO_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Type used for <code>showConfirmDialog</code>. 
"
      end

      attribute 2414978 "YES_NO_CANCEL_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Type used for <code>showConfirmDialog</code>. 
"
      end

      attribute 2415106 "OK_CANCEL_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Type used for <code>showConfirmDialog</code>. 
"
      end

      attribute 2415234 "YES_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Return values.

 Return value from class method if YES is chosen. 
"
      end

      attribute 2415362 "NO_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Return value from class method if NO is chosen. 
"
      end

      attribute 2415490 "CANCEL_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Return value from class method if CANCEL is chosen. 
"
      end

      attribute 2415618 "OK_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Return value form class method if OK is chosen. 
"
      end

      attribute 2415746 "CLOSED_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Return value from class method if user closes window without selecting
anything, more than likely this should be treated as either a
<code>CANCEL_OPTION</code> or <code>NO_OPTION</code>. 
"
      end

      attribute 2415874 "ERROR_MESSAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Message types. Used by the UI to determine what icon to display,
 and possibly what behavior to give based on the type.

 Used for error messages. 
"
      end

      attribute 2416002 "INFORMATION_MESSAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used for information messages. 
"
      end

      attribute 2416130 "WARNING_MESSAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used for warning messages. 
"
      end

      attribute 2416258 "QUESTION_MESSAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used for questions. 
"
      end

      attribute 2416386 "PLAIN_MESSAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " No icon is used. 
"
      end

      classrelation 4136066 // ICON_PROPERTY (<unidirectional association>)
	relation 4136066 --->
	  a role_name "ICON_PROPERTY" init_value " \"icon\"" class_relation const_relation public
	    comment " Bound property name for <code>icon</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136066 // ICON_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4136194 // MESSAGE_PROPERTY (<unidirectional association>)
	relation 4136194 --->
	  a role_name "MESSAGE_PROPERTY" init_value " \"message\"" class_relation const_relation public
	    comment " Bound property name for <code>message</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136194 // MESSAGE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4136322 // VALUE_PROPERTY (<unidirectional association>)
	relation 4136322 --->
	  a role_name "VALUE_PROPERTY" init_value " \"value\"" class_relation const_relation public
	    comment " Bound property name for <code>value</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136322 // VALUE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4136450 // OPTIONS_PROPERTY (<unidirectional association>)
	relation 4136450 --->
	  a role_name "OPTIONS_PROPERTY" init_value " \"options\"" class_relation const_relation public
	    comment " Bound property name for <code>option</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136450 // OPTIONS_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4136578 // INITIAL_VALUE_PROPERTY (<unidirectional association>)
	relation 4136578 --->
	  a role_name "INITIAL_VALUE_PROPERTY" init_value " \"initialValue\"" class_relation const_relation public
	    comment " Bound property name for <code>initialValue</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136578 // INITIAL_VALUE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4136706 // MESSAGE_TYPE_PROPERTY (<unidirectional association>)
	relation 4136706 --->
	  a role_name "MESSAGE_TYPE_PROPERTY" init_value " \"messageType\"" class_relation const_relation public
	    comment " Bound property name for <code>type</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136706 // MESSAGE_TYPE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4136834 // OPTION_TYPE_PROPERTY (<unidirectional association>)
	relation 4136834 --->
	  a role_name "OPTION_TYPE_PROPERTY" init_value " \"optionType\"" class_relation const_relation public
	    comment " Bound property name for <code>optionType</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136834 // OPTION_TYPE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4136962 // SELECTION_VALUES_PROPERTY (<unidirectional association>)
	relation 4136962 --->
	  a role_name "SELECTION_VALUES_PROPERTY" init_value " \"selectionValues\"" class_relation const_relation public
	    comment " Bound property name for <code>selectionValues</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4136962 // SELECTION_VALUES_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4137090 // INITIAL_SELECTION_VALUE_PROPERTY (<unidirectional association>)
	relation 4137090 --->
	  a role_name "INITIAL_SELECTION_VALUE_PROPERTY" init_value " \"initialSelectionValue\"" class_relation const_relation public
	    comment " Bound property name for <code>initialSelectionValue</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4137090 // INITIAL_SELECTION_VALUE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4137218 // INPUT_VALUE_PROPERTY (<unidirectional association>)
	relation 4137218 --->
	  a role_name "INPUT_VALUE_PROPERTY" init_value " \"inputValue\"" class_relation const_relation public
	    comment " Bound property name for <code>inputValue</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4137218 // INPUT_VALUE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4137346 // WANTS_INPUT_PROPERTY (<unidirectional association>)
	relation 4137346 --->
	  a role_name "WANTS_INPUT_PROPERTY" init_value " \"wantsInput\"" class_relation const_relation public
	    comment " Bound property name for <code>wantsInput</code>. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4137346 // WANTS_INPUT_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4137474 // icon (<unidirectional association>)
	relation 4137474 --->
	  a role_name "icon" protected
	    comment " Icon used in pane. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4137474 // icon (<unidirectional association>)
	  b parent class_ref 352642 // Icon
      end

      classrelation 4137602 // message (<unidirectional association>)
	relation 4137602 --->
	  a role_name "message" protected
	    comment " Message to display. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4137602 // message (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4137730 // options (<unidirectional association>)
	relation 4137730 --->
	  a role_name "options" multiplicity "[]" protected
	    comment " Options to display to the user. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4137730 // options (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4137858 // initialValue (<unidirectional association>)
	relation 4137858 --->
	  a role_name "initialValue" protected
	    comment " Value that should be initially selected in <code>options</code>. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4137858 // initialValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2416514 "messageType"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Message type. 
"
      end

      attribute 2416642 "optionType"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Option type, one of <code>DEFAULT_OPTION</code>,
<code>YES_NO_OPTION</code>,
<code>YES_NO_CANCEL_OPTION</code> or
<code>OK_CANCEL_OPTION</code>.

"
      end

      classrelation 4137986 // value (<unidirectional association>)
	relation 4137986 --->
	  a role_name "value" protected
	    comment " Currently selected value, will be a valid option, or
<code>UNINITIALIZED_VALUE</code> or <code>null</code>. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4137986 // value (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4138114 // selectionValues (<unidirectional association>)
	relation 4138114 --->
	  a role_name "selectionValues" multiplicity "[]" protected
	    comment " Array of values the user can choose from. Look and feel will
provide the UI component to choose this from. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4138114 // selectionValues (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4138242 // inputValue (<unidirectional association>)
	relation 4138242 --->
	  a role_name "inputValue" protected
	    comment " Value the user has input. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4138242 // inputValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4138370 // initialSelectionValue (<unidirectional association>)
	relation 4138370 --->
	  a role_name "initialSelectionValue" protected
	    comment " Initial value to select in <code>selectionValues</code>. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4138370 // initialSelectionValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2416770 "wantsInput"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, a UI widget will be provided to the user to get input. 
"
      end

      operation 10656770 "showInputDialog"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "message" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows a question-message dialog requesting input from the user. The
dialog uses the default frame, which usually means it is centered on
the screen.

@param message the <code>Object</code> to display
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10656898 "showInputDialog"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "initialSelectionValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows a question-message dialog requesting input from the user, with
the input value initialized to <code>initialSelectionValue</code>. The
dialog uses the default frame, which usually means it is centered on
the screen.

@param message the <code>Object</code> to display
@param initialSelectionValue the value used to initialize the input
                field
@since 1.4
"
      end

      operation 10657026 "showInputDialog"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows a question-message dialog requesting input from the user
parented to <code>parentComponent</code>.
The dialog is displayed on top of the <code>Component</code>'s
frame, and is usually positioned below the <code>Component</code>.

@param parentComponent  the parent <code>Component</code> for the
         dialog
@param message  the <code>Object</code> to display
@exception HeadlessException if
   <code>GraphicsEnvironment.isHeadless</code> returns
   <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10657154 "showInputDialog"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "initialSelectionValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows a question-message dialog requesting input from the user and
parented to <code>parentComponent</code>. The input value will be
initialized to <code>initialSelectionValue</code>.
The dialog is displayed on top of the <code>Component</code>'s
frame, and is usually positioned below the <code>Component</code>.

@param parentComponent  the parent <code>Component</code> for the
         dialog
@param message the <code>Object</code> to display
@param initialSelectionValue the value used to initialize the input
                field
@since 1.4
"
      end

      operation 10657282 "showInputDialog"
	class_operation public return_type class_ref 128130 // String
	nparams 4
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows a dialog requesting input from the user parented to
<code>parentComponent</code> with the dialog having the title
<code>title</code> and message type <code>messageType</code>.

@param parentComponent  the parent <code>Component</code> for the
                 dialog
@param message  the <code>Object</code> to display
@param title    the <code>String</code> to display in the dialog
                 title bar
@param messageType the type of message that is to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10657410 "showInputDialog"
	class_operation public return_type class_ref 129538 // Object
	nparams 7
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selectionValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "initialSelectionValue" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prompts the user for input in a blocking dialog where the
initial selection, possible selections, and all other options can
be specified. The user will able to choose from
<code>selectionValues</code>, where <code>null</code> implies the
user can input
whatever they wish, usually by means of a <code>JTextField</code>.
<code>initialSelectionValue</code> is the initial value to prompt
the user with. It is up to the UI to decide how best to represent
the <code>selectionValues</code>, but usually a
<code>JComboBox</code>, <code>JList</code>, or
<code>JTextField</code> will be used.

@param parentComponent  the parent <code>Component</code> for the
                 dialog
@param message  the <code>Object</code> to display
@param title    the <code>String</code> to display in the
                 dialog title bar
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param icon     the <code>Icon</code> image to display
@param selectionValues an array of <code>Object</code>s that
                 gives the possible selections
@param initialSelectionValue the value used to initialize the input
                field
@return user's input, or <code>null</code> meaning the user
                 canceled the input
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10657538 "showMessageDialog"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an information-message dialog titled \"Message\".

@param parentComponent determines the <code>Frame</code> in
         which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10657666 "showMessageDialog"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a dialog that displays a message using a default
icon determined by the <code>messageType</code> parameter.

@param parentComponent determines the <code>Frame</code>
         in which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@param title     the title string for the dialog
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10657794 "showMessageDialog"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a dialog displaying a message, specifying all parameters.

@param parentComponent determines the <code>Frame</code> in which the
                 dialog is displayed; if <code>null</code>,
                 or if the <code>parentComponent</code> has no
                 <code>Frame</code>, a
                 default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@param title     the title string for the dialog
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param icon      an icon to display in the dialog that helps the user
                 identify the kind of message that is being displayed
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10657922 "showConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a dialog with the options <i>Yes</i>,
<i>No</i> and <i>Cancel</i>; with the
title, <b>Select an Option</b>.

@param parentComponent determines the <code>Frame</code> in which the
                 dialog is displayed; if <code>null</code>,
                 or if the <code>parentComponent</code> has no
                 <code>Frame</code>, a
                 default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@return an integer indicating the option selected by the user
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10658050 "showConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a dialog where the number of choices is determined
by the <code>optionType</code> parameter.

@param parentComponent determines the <code>Frame</code> in which the
                 dialog is displayed; if <code>null</code>,
                 or if the <code>parentComponent</code> has no
                 <code>Frame</code>, a
                 default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@param title     the title string for the dialog
@param optionType an int designating the options available on the dialog:
                 <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 or <code>OK_CANCEL_OPTION</code>
@return an int indicating the option selected by the user
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10658178 "showConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 5
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	  param in name "messageType" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a dialog where the number of choices is determined
by the <code>optionType</code> parameter, where the
<code>messageType</code>
parameter determines the icon to display.
The <code>messageType</code> parameter is primarily used to supply
a default icon from the Look and Feel.

@param parentComponent determines the <code>Frame</code> in
                 which the dialog is displayed; if <code>null</code>,
                 or if the <code>parentComponent</code> has no
                 <code>Frame</code>, a
                 default <code>Frame</code> is used.
@param message   the <code>Object</code> to display
@param title     the title string for the dialog
@param optionType an integer designating the options available
                  on the dialog: <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 or <code>OK_CANCEL_OPTION</code>
@param messageType an integer designating the kind of message this is;
                 primarily used to determine the icon from the pluggable
                 Look and Feel: <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@return an integer indicating the option selected by the user
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10658306 "showConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 6
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a dialog with a specified icon, where the number of
choices is determined by the <code>optionType</code> parameter.
The <code>messageType</code> parameter is primarily used to supply
a default icon from the look and feel.

@param parentComponent determines the <code>Frame</code> in which the
                 dialog is displayed; if <code>null</code>,
                 or if the <code>parentComponent</code> has no
                 <code>Frame</code>, a
                 default <code>Frame</code> is used
@param message   the Object to display
@param title     the title string for the dialog
@param optionType an int designating the options available on the dialog:
                 <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 or <code>OK_CANCEL_OPTION</code>
@param messageType an int designating the kind of message this is,
                 primarily used to determine the icon from the pluggable
                 Look and Feel: <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param icon      the icon to display in the dialog
@return an int indicating the option selected by the user
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10658434 "showOptionDialog"
	class_operation public explicit_return_type "int"
	nparams 8
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "options" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "initialValue" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a dialog with a specified icon, where the initial
choice is determined by the <code>initialValue</code> parameter and
the number of choices is determined by the <code>optionType</code>
parameter.
<p>
If <code>optionType</code> is <code>YES_NO_OPTION</code>,
or <code>YES_NO_CANCEL_OPTION</code>
and the <code>options</code> parameter is <code>null</code>,
then the options are
supplied by the look and feel.
<p>
The <code>messageType</code> parameter is primarily used to supply
a default icon from the look and feel.

@param parentComponent determines the <code>Frame</code>
                 in which the dialog is displayed;  if
                 <code>null</code>, or if the
                 <code>parentComponent</code> has no
                 <code>Frame</code>, a
                 default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@param title     the title string for the dialog
@param optionType an integer designating the options available on the
                 dialog: <code>DEFAULT_OPTION</code>,
                 <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 or <code>OK_CANCEL_OPTION</code>
@param messageType an integer designating the kind of message this is,
                 primarily used to determine the icon from the
                 pluggable Look and Feel: <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param icon      the icon to display in the dialog
@param options   an array of objects indicating the possible choices
                 the user can make; if the objects are components, they
                 are rendered properly; non-<code>String</code>
                 objects are
                 rendered using their <code>toString</code> methods;
                 if this parameter is <code>null</code>,
                 the options are determined by the Look and Feel
@param initialValue the object that represents the default selection
                 for the dialog; only meaningful if <code>options</code>
                 is used; can be <code>null</code>
@return an integer indicating the option chosen by the user,
                 or <code>CLOSED_OPTION</code> if the user closed
                 the dialog
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10658562 "createDialog"
	public return_type class_ref 1275650 // JDialog
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "title" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a new <code>JDialog</code> wrapping
<code>this</code> centered on the <code>parentComponent</code>
in the <code>parentComponent</code>'s frame.
<code>title</code> is the title of the returned dialog.
The returned <code>JDialog</code> will not be resizable by the
user, however programs can invoke <code>setResizable</code> on
the <code>JDialog</code> instance to change this property.
The returned <code>JDialog</code> will be set up such that
once it is closed, or the user clicks on one of the buttons,
the optionpane's value property will be set accordingly and
the dialog will be closed.  Each time the dialog is made visible,
it will reset the option pane's value property to
<code>JOptionPane.UNINITIALIZED_VALUE</code> to ensure the
user's subsequent action closes the dialog properly.

@param parentComponent determines the frame in which the dialog
         is displayed; if the <code>parentComponent</code> has
         no <code>Frame</code>, a default <code>Frame</code> is used
@param title     the title string for the dialog
@return a new <code>JDialog</code> containing this instance
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10658690 "createDialog"
	public return_type class_ref 1275650 // JDialog
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a new parentless <code>JDialog</code>
with the specified title.
The returned <code>JDialog</code> will not be resizable by the
user, however programs can invoke <code>setResizable</code> on
the <code>JDialog</code> instance to change this property.
The returned <code>JDialog</code> will be set up such that
once it is closed, or the user clicks on one of the buttons,
the optionpane's value property will be set accordingly and
the dialog will be closed.  Each time the dialog is made visible,
it will reset the option pane's value property to
<code>JOptionPane.UNINITIALIZED_VALUE</code> to ensure the
user's subsequent action closes the dialog properly.

@param title     the title string for the dialog
@return a new <code>JDialog</code> containing this instance
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@since 1.6
"
      end

      operation 10658818 "createDialog"
	private return_type class_ref 1275650 // JDialog
	nparams 3
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "title" type class_ref 128130 // String
	  param in name "style" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10658946 "initDialog"
	private explicit_return_type "void"
	nparams 3
	  param in name "dialog" type class_ref 1275650 // JDialog
	  param in name "style" explicit_type "int"
	  param inout name "parentComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10659074 "showInternalMessageDialog"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an internal confirmation dialog panel. The dialog
is a information-message dialog titled \"Message\".

@param parentComponent determines the <code>Frame</code>
         in which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the object to display
"
      end

      operation 10659202 "showInternalMessageDialog"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an internal dialog panel that displays a message
using a default icon determined by the <code>messageType</code>
parameter.

@param parentComponent determines the <code>Frame</code>
         in which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@param title     the title string for the dialog
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
"
      end

      operation 10659330 "showInternalMessageDialog"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an internal dialog panel displaying a message,
specifying all parameters.

@param parentComponent determines the <code>Frame</code>
         in which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@param title     the title string for the dialog
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param icon      an icon to display in the dialog that helps the user
                 identify the kind of message that is being displayed
"
      end

      operation 10659458 "showInternalConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an internal dialog panel with the options <i>Yes</i>, <i>No</i>
and <i>Cancel</i>; with the title, <b>Select an Option</b>.

@param parentComponent determines the <code>Frame</code> in
         which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the <code>Object</code> to display
@return an integer indicating the option selected by the user
"
      end

      operation 10659586 "showInternalConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up a internal dialog panel where the number of choices
is determined by the <code>optionType</code> parameter.

@param parentComponent determines the <code>Frame</code>
         in which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the object to display in the dialog; a
         <code>Component</code> object is rendered as a
         <code>Component</code>; a <code>String</code>
         object is rendered as a string; other objects
         are converted to a <code>String</code> using the
         <code>toString</code> method
@param title     the title string for the dialog
@param optionType an integer designating the options
         available on the dialog: <code>YES_NO_OPTION</code>,
         or <code>YES_NO_CANCEL_OPTION</code>
@return an integer indicating the option selected by the user
"
      end

      operation 10659714 "showInternalConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 5
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	  param in name "messageType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an internal dialog panel where the number of choices
is determined by the <code>optionType</code> parameter, where
the <code>messageType</code> parameter determines the icon to display.
The <code>messageType</code> parameter is primarily used to supply
a default icon from the Look and Feel.

@param parentComponent determines the <code>Frame</code> in
         which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the object to display in the dialog; a
         <code>Component</code> object is rendered as a
         <code>Component</code>; a <code>String</code>
         object is rendered as a string; other objects are
         converted to a <code>String</code> using the
         <code>toString</code> method
@param title     the title string for the dialog
@param optionType an integer designating the options
         available on the dialog:
         <code>YES_NO_OPTION</code>, or <code>YES_NO_CANCEL_OPTION</code>
@param messageType an integer designating the kind of message this is,
         primarily used to determine the icon from the
         pluggable Look and Feel: <code>ERROR_MESSAGE</code>,
         <code>INFORMATION_MESSAGE</code>,
         <code>WARNING_MESSAGE</code>, <code>QUESTION_MESSAGE</code>,
         or <code>PLAIN_MESSAGE</code>
@return an integer indicating the option selected by the user
"
      end

      operation 10659842 "showInternalConfirmDialog"
	class_operation public explicit_return_type "int"
	nparams 6
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an internal dialog panel with a specified icon, where
the number of choices is determined by the <code>optionType</code>
parameter.
The <code>messageType</code> parameter is primarily used to supply
a default icon from the look and feel.

@param parentComponent determines the <code>Frame</code>
         in which the dialog is displayed; if <code>null</code>,
         or if the parentComponent has no Frame, a
         default <code>Frame</code> is used
@param message   the object to display in the dialog; a
         <code>Component</code> object is rendered as a
         <code>Component</code>; a <code>String</code>
         object is rendered as a string; other objects are
         converted to a <code>String</code> using the
         <code>toString</code> method
@param title     the title string for the dialog
@param optionType an integer designating the options available
         on the dialog:
         <code>YES_NO_OPTION</code>, or
         <code>YES_NO_CANCEL_OPTION</code>.
@param messageType an integer designating the kind of message this is,
         primarily used to determine the icon from the pluggable
         Look and Feel: <code>ERROR_MESSAGE</code>,
         <code>INFORMATION_MESSAGE</code>,
         <code>WARNING_MESSAGE</code>, <code>QUESTION_MESSAGE</code>,
         or <code>PLAIN_MESSAGE</code>
@param icon      the icon to display in the dialog
@return an integer indicating the option selected by the user
"
      end

      operation 10659970 "showInternalOptionDialog"
	class_operation public explicit_return_type "int"
	nparams 8
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "optionType" explicit_type "int"
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "options" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "initialValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Brings up an internal dialog panel with a specified icon, where
the initial choice is determined by the <code>initialValue</code>
parameter and the number of choices is determined by the
<code>optionType</code> parameter.
<p>
If <code>optionType</code> is <code>YES_NO_OPTION</code>, or
<code>YES_NO_CANCEL_OPTION</code>
and the <code>options</code> parameter is <code>null</code>,
then the options are supplied by the Look and Feel.
<p>
The <code>messageType</code> parameter is primarily used to supply
a default icon from the look and feel.

@param parentComponent determines the <code>Frame</code>
         in which the dialog is displayed; if <code>null</code>,
         or if the <code>parentComponent</code> has no
         <code>Frame</code>, a default <code>Frame</code> is used
@param message   the object to display in the dialog; a
         <code>Component</code> object is rendered as a
         <code>Component</code>; a <code>String</code>
         object is rendered as a string. Other objects are
         converted to a <code>String</code> using the
         <code>toString</code> method
@param title     the title string for the dialog
@param optionType an integer designating the options available
         on the dialog: <code>YES_NO_OPTION</code>,
         or <code>YES_NO_CANCEL_OPTION</code>
@param messageType an integer designating the kind of message this is;
         primarily used to determine the icon from the
         pluggable Look and Feel: <code>ERROR_MESSAGE</code>,
         <code>INFORMATION_MESSAGE</code>,
         <code>WARNING_MESSAGE</code>, <code>QUESTION_MESSAGE</code>,
         or <code>PLAIN_MESSAGE</code>
@param icon      the icon to display in the dialog
@param options   an array of objects indicating the possible choices
         the user can make; if the objects are components, they
         are rendered properly; non-<code>String</code>
         objects are rendered using their <code>toString</code>
         methods; if this parameter is <code>null</code>,
         the options are determined by the Look and Feel
@param initialValue the object that represents the default selection
         for the dialog; only meaningful if <code>options</code>
         is used; can be <code>null</code>
@return an integer indicating the option chosen by the user,
         or <code>CLOSED_OPTION</code> if the user closed the Dialog
"
      end

      operation 10660098 "showInternalInputDialog"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows an internal question-message dialog requesting input from
the user parented to <code>parentComponent</code>. The dialog
is displayed in the <code>Component</code>'s frame,
and is usually positioned below the <code>Component</code>.

@param parentComponent  the parent <code>Component</code>
         for the dialog
@param message  the <code>Object</code> to display
"
      end

      operation 10660226 "showInternalInputDialog"
	class_operation public return_type class_ref 128130 // String
	nparams 4
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows an internal dialog requesting input from the user parented
to <code>parentComponent</code> with the dialog having the title
<code>title</code> and message type <code>messageType</code>.

@param parentComponent the parent <code>Component</code> for the dialog
@param message  the <code>Object</code> to display
@param title    the <code>String</code> to display in the
         dialog title bar
@param messageType the type of message that is to be displayed:
                   ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE,
                   QUESTION_MESSAGE, or PLAIN_MESSAGE
"
      end

      operation 10660354 "showInternalInputDialog"
	class_operation public return_type class_ref 129538 // Object
	nparams 7
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "title" type class_ref 128130 // String
	  param in name "messageType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selectionValues" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "initialSelectionValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prompts the user for input in a blocking internal dialog where
the initial selection, possible selections, and all other
options can be specified. The user will able to choose from
<code>selectionValues</code>, where <code>null</code>
implies the user can input
whatever they wish, usually by means of a <code>JTextField</code>.
<code>initialSelectionValue</code> is the initial value to prompt
the user with. It is up to the UI to decide how best to represent
the <code>selectionValues</code>, but usually a
<code>JComboBox</code>, <code>JList</code>, or
<code>JTextField</code> will be used.

@param parentComponent the parent <code>Component</code> for the dialog
@param message  the <code>Object</code> to display
@param title    the <code>String</code> to display in the dialog
         title bar
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>, <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>, or <code>PLAIN_MESSAGE</code>
@param icon     the <code>Icon</code> image to display
@param selectionValues an array of <code>Objects</code> that
                 gives the possible selections
@param initialSelectionValue the value used to initialize the input
                 field
@return user's input, or <code>null</code> meaning the user
         canceled the input
"
      end

      operation 10660482 "createInternalFrame"
	public return_type class_ref 379522 // JInternalFrame
	nparams 2
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns an instance of <code>JInternalFrame</code>.
The internal frame is created with the specified title,
and wrapping the <code>JOptionPane</code>.
The returned <code>JInternalFrame</code> is
added to the <code>JDesktopPane</code> ancestor of
<code>parentComponent</code>, or components
parent if one its ancestors isn't a <code>JDesktopPane</code>,
or if <code>parentComponent</code>
doesn't have a parent then a <code>RuntimeException</code> is thrown.

@param parentComponent  the parent <code>Component</code> for
         the internal frame
@param title    the <code>String</code> to display in the
         frame's title bar
@return a <code>JInternalFrame</code> containing a
         <code>JOptionPane</code>
@exception RuntimeException if <code>parentComponent</code> does
         not have a valid parent
"
      end

      operation 10660610 "getFrameForComponent"
	class_operation public return_type class_ref 393346 // Frame
	nparams 1
	  param inout name "parentComponent" type class_ref 338818 // Component
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified component's <code>Frame</code>.

@param parentComponent the <code>Component</code> to check for a
         <code>Frame</code>
@return the <code>Frame</code> that contains the component,
         or <code>getRootFrame</code>
         if the component is <code>null</code>,
         or does not have a valid <code>Frame</code> parent
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see #getRootFrame
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10660738 "getWindowForComponent"
	class_operation package return_type class_ref 347394 // Window
	nparams 1
	  param inout name "parentComponent" type class_ref 338818 // Component
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified component's toplevel <code>Frame</code> or
<code>Dialog</code>.

@param parentComponent the <code>Component</code> to check for a
         <code>Frame</code> or <code>Dialog</code>
@return the <code>Frame</code> or <code>Dialog</code> that
         contains the component, or the default
         frame if the component is <code>null</code>,
         or does not have a valid
         <code>Frame</code> or <code>Dialog</code> parent
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10660866 "getDesktopPaneForComponent"
	class_operation public return_type class_ref 399234 // JDesktopPane
	nparams 1
	  param inout name "parentComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified component's desktop pane.

@param parentComponent the <code>Component</code> to check for a
         desktop
@return the <code>JDesktopPane</code> that contains the component,
         or <code>null</code> if the component is <code>null</code>
         or does not have an ancestor that is a
         <code>JInternalFrame</code>
"
      end

      classrelation 4138498 // sharedFrameKey (<unidirectional association>)
	relation 4138498 --->
	  a role_name "sharedFrameKey" init_value " JOptionPane.class" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4138498 // sharedFrameKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10660994 "setRootFrame"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "newRootFrame" type class_ref 393346 // Frame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the frame to use for class methods in which a frame is
not provided.
<p>
<strong>Note:</strong>
It is recommended that rather than using this method you supply a valid parent.

@param newRootFrame the default <code>Frame</code> to use
"
      end

      operation 10661122 "getRootFrame"
	class_operation public return_type class_ref 393346 // Frame
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Frame</code> to use for the class methods in
which a frame is not provided.

@return the default <code>Frame</code> to use
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see #setRootFrame
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10661250 "JOptionPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JOptionPane</code> with a test message.
"
      end

      operation 10661378 "JOptionPane"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a instance of <code>JOptionPane</code> to display a
message using the
plain-message message type and the default options delivered by
the UI.

@param message the <code>Object</code> to display
"
      end

      operation 10661506 "JOptionPane"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 129538 // Object
	  param in name "messageType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>JOptionPane</code> to display a message
with the specified message type and the default options,

@param message the <code>Object</code> to display
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
"
      end

      operation 10661634 "JOptionPane"
	public explicit_return_type ""
	nparams 3
	  param inout name "message" type class_ref 129538 // Object
	  param in name "messageType" explicit_type "int"
	  param in name "optionType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>JOptionPane</code> to display a message
with the specified message type and options.

@param message the <code>Object</code> to display
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param optionType the options to display in the pane:
                 <code>DEFAULT_OPTION</code>, <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 <code>OK_CANCEL_OPTION</code>
"
      end

      operation 10661762 "JOptionPane"
	public explicit_return_type ""
	nparams 4
	  param inout name "message" type class_ref 129538 // Object
	  param in name "messageType" explicit_type "int"
	  param in name "optionType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>JOptionPane</code> to display a message
with the specified message type, options, and icon.

@param message the <code>Object</code> to display
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param optionType the options to display in the pane:
                 <code>DEFAULT_OPTION</code>, <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 <code>OK_CANCEL_OPTION</code>
@param icon the <code>Icon</code> image to display
"
      end

      operation 10661890 "JOptionPane"
	public explicit_return_type ""
	nparams 5
	  param inout name "message" type class_ref 129538 // Object
	  param in name "messageType" explicit_type "int"
	  param in name "optionType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "options" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>JOptionPane</code> to display a message
with the specified message type, icon, and options.
None of the options is initially selected.
<p>
The options objects should contain either instances of
<code>Component</code>s, (which are added directly) or
<code>Strings</code> (which are wrapped in a <code>JButton</code>).
If you provide <code>Component</code>s, you must ensure that when the
<code>Component</code> is clicked it messages <code>setValue</code>
in the created <code>JOptionPane</code>.

@param message the <code>Object</code> to display
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param optionType the options to display in the pane:
                 <code>DEFAULT_OPTION</code>,
                 <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 <code>OK_CANCEL_OPTION</code>
@param icon the <code>Icon</code> image to display
@param options  the choices the user can select
"
      end

      operation 10662018 "JOptionPane"
	public explicit_return_type ""
	nparams 6
	  param inout name "message" type class_ref 129538 // Object
	  param in name "messageType" explicit_type "int"
	  param in name "optionType" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "options" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "initialValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>JOptionPane</code> to display a message
with the specified message type, icon, and options, with the
initially-selected option specified.

@param message the <code>Object</code> to display
@param messageType the type of message to be displayed:
                 <code>ERROR_MESSAGE</code>,
                 <code>INFORMATION_MESSAGE</code>,
                 <code>WARNING_MESSAGE</code>,
                 <code>QUESTION_MESSAGE</code>,
                 or <code>PLAIN_MESSAGE</code>
@param optionType the options to display in the pane:
                 <code>DEFAULT_OPTION</code>,
                 <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 <code>OK_CANCEL_OPTION</code>
@param icon the Icon image to display
@param options  the choices the user can select
@param initialValue the choice that is initially selected; if
                 <code>null</code>, then nothing will be initially selected;
                 only meaningful if <code>options</code> is used
"
      end

      operation 10662146 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 426498 // OptionPaneUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the UI object which implements the {@literal L&F} for this component.

@param ui  the <code>OptionPaneUI</code> {@literal L&F} object
@see UIDefaults#getUI
@beaninfo
      bound: true
     hidden: true
description: The UI object that implements the optionpane's LookAndFeel
"
      end

      operation 10662274 "getUI"
	public return_type class_ref 426498 // OptionPaneUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the UI object which implements the {@literal L&F} for this component.

@return the <code>OptionPaneUI</code> object
"
      end

      operation 10662402 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIManager</code> that the {@literal L&F} has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
      end

      operation 10662530 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the UI class that implements the
{@literal L&F} for this component.

@return the string \"OptionPaneUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10662658 "setMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newMessage" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the option pane's message-object.
@param newMessage the <code>Object</code> to display
@see #getMessage

@beaninfo
  preferred: true
  bound: true
description: The optionpane's message object.
"
      end

      operation 10662786 "getMessage"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message-object this pane displays.
@see #setMessage

@return the <code>Object</code> that is displayed
"
      end

      operation 10662914 "setIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the icon to display. If non-<code>null</code>, the look and feel
does not provide an icon.
@param newIcon the <code>Icon</code> to display

@see #getIcon
@beaninfo
  preferred: true
      bound: true
description: The option pane's type icon.
"
      end

      operation 10663042 "getIcon"
	public return_type class_ref 352642 // Icon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the icon this pane displays.
@return the <code>Icon</code> that is displayed

@see #setIcon
"
      end

      operation 10663170 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value the user has chosen.
@param newValue  the chosen value

@see #getValue
@beaninfo
  preferred: true
      bound: true
description: The option pane's value object.
"
      end

      operation 10663298 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value the user has selected. <code>UNINITIALIZED_VALUE</code>
implies the user has not yet made a choice, <code>null</code> means the
user closed the window with out choosing anything. Otherwise
the returned value will be one of the options defined in this
object.

@return the <code>Object</code> chosen by the user,
        <code>UNINITIALIZED_VALUE</code>
        if the user has not yet made a choice, or <code>null</code> if
        the user closed the window without making a choice

@see #setValue
"
      end

      operation 10663426 "setOptions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newOptions" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the options this pane displays. If an element in
<code>newOptions</code> is a <code>Component</code>
it is added directly to the pane,
otherwise a button is created for the element.

@param newOptions an array of <code>Objects</code> that create the
         buttons the user can click on, or arbitrary
         <code>Components</code> to add to the pane

@see #getOptions
@beaninfo
      bound: true
description: The option pane's options objects.
"
      end

      operation 10663554 "getOptions"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the choices the user can make.
@return the array of <code>Objects</code> that give the user's choices

@see #setOptions
"
      end

      operation 10663682 "setInitialValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newInitialValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the initial value that is to be enabled -- the
<code>Component</code>
that has the focus when the pane is initially displayed.

@param newInitialValue the <code>Object</code> that gets the initial
                        keyboard focus

@see #getInitialValue
@beaninfo
  preferred: true
      bound: true
description: The option pane's initial value object.
"
      end

      operation 10663810 "getInitialValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the initial value.

@return the <code>Object</code> that gets the initial keyboard focus

@see #setInitialValue
"
      end

      operation 10663938 "setMessageType"
	public explicit_return_type "void"
	nparams 1
	  param in name "newType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the option pane's message type.
The message type is used by the Look and Feel to determine the
icon to display (if not supplied) as well as potentially how to
lay out the <code>parentComponent</code>.
@param newType an integer specifying the kind of message to display:
               <code>ERROR_MESSAGE</code>, <code>INFORMATION_MESSAGE</code>,
               <code>WARNING_MESSAGE</code>,
               <code>QUESTION_MESSAGE</code>, or <code>PLAIN_MESSAGE</code>
@exception RuntimeException if <code>newType</code> is not one of the
         legal values listed above

@see #getMessageType
@beaninfo
  preferred: true
      bound: true
description: The option pane's message type.
"
      end

      operation 10664066 "getMessageType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message type.

@return an integer specifying the message type

@see #setMessageType
"
      end

      operation 10664194 "setOptionType"
	public explicit_return_type "void"
	nparams 1
	  param in name "newType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the options to display.
The option type is used by the Look and Feel to
determine what buttons to show (unless options are supplied).
@param newType an integer specifying the options the {@literal L&F} is to display:
                 <code>DEFAULT_OPTION</code>,
                 <code>YES_NO_OPTION</code>,
                 <code>YES_NO_CANCEL_OPTION</code>,
                 or <code>OK_CANCEL_OPTION</code>
@exception RuntimeException if <code>newType</code> is not one of
         the legal values listed above

@see #getOptionType
@see #setOptions
@beaninfo
  preferred: true
      bound: true
description: The option pane's option type.
"
      end

      operation 10664322 "getOptionType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of options that are displayed.

@return an integer specifying the user-selectable options

@see #setOptionType
"
      end

      operation 10664450 "setSelectionValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValues" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the input selection values for a pane that provides the user
with a list of items to choose from. (The UI provides a widget
for choosing one of the values.)  A <code>null</code> value
implies the user can input whatever they wish, usually by means
of a <code>JTextField</code>.
<p>
Sets <code>wantsInput</code> to true. Use
<code>setInitialSelectionValue</code> to specify the initially-chosen
value. After the pane as been enabled, <code>inputValue</code> is
set to the value the user has selected.
@param newValues an array of <code>Objects</code> the user to be
                 displayed
                 (usually in a list or combo-box) from which
                 the user can make a selection
@see #setWantsInput
@see #setInitialSelectionValue
@see #getSelectionValues
@beaninfo
      bound: true
description: The option pane's selection values.
"
      end

      operation 10664578 "getSelectionValues"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input selection values.

@return the array of <code>Objects</code> the user can select
@see #setSelectionValues
"
      end

      operation 10664706 "setInitialSelectionValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the input value that is initially displayed as selected to the user.
Only used if <code>wantsInput</code> is true.
@param newValue the initially selected value
@see #setSelectionValues
@see #getInitialSelectionValue
@beaninfo
      bound: true
description: The option pane's initial selection value object.
"
      end

      operation 10664834 "getInitialSelectionValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input value that is displayed as initially selected to the user.

@return the initially selected value
@see #setInitialSelectionValue
@see #setSelectionValues
"
      end

      operation 10664962 "setInputValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the input value that was selected or input by the user.
Only used if <code>wantsInput</code> is true.  Note that this method
is invoked internally by the option pane (in response to user action)
and should generally not be called by client programs.  To set the
input value initially displayed as selected to the user, use
<code>setInitialSelectionValue</code>.

@param newValue the <code>Object</code> used to set the
         value that the user specified (usually in a text field)
@see #setSelectionValues
@see #setInitialSelectionValue
@see #setWantsInput
@see #getInputValue
@beaninfo
  preferred: true
      bound: true
description: The option pane's input value object.
"
      end

      operation 10665090 "getInputValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value the user has input, if <code>wantsInput</code>
is true.

@return the <code>Object</code> the user specified,
         if it was one of the objects, or a
         <code>String</code> if it was a value typed into a
         field
@see #setSelectionValues
@see #setWantsInput
@see #setInputValue
"
      end

      operation 10665218 "getMaxCharactersPerLineCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of characters to place on a line in a
message. Default is to return <code>Integer.MAX_VALUE</code>.
The value can be
changed by overriding this method in a subclass.

@return an integer giving the maximum number of characters on a line
"
      end

      operation 10665346 "setWantsInput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>wantsInput</code> property.
If <code>newValue</code> is true, an input component
(such as a text field or combo box) whose parent is
<code>parentComponent</code> is provided to
allow the user to input a value. If <code>getSelectionValues</code>
returns a non-<code>null</code> array, the input value is one of the
objects in that array. Otherwise the input value is whatever
the user inputs.
<p>
This is a bound property.

@see #setSelectionValues
@see #setInputValue
@beaninfo
  preferred: true
      bound: true
description: Flag which allows the user to input a value.
"
      end

      operation 10665474 "getWantsInput"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>wantsInput</code> property.

@return true if an input component will be provided
@see #setWantsInput
"
      end

      operation 10665602 "selectInitialValue"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that the initial value be selected, which will set
focus to the initial value. This method
should be invoked after the window containing the option pane
is made visible.
"
      end

      operation 10665730 "styleFromMessageType"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "messageType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10665858 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Serialization support."
      end

      operation 10665986 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10666114 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JOptionPane</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JOptionPane</code>
"
      end

      class 1286146 "ModalPrivilegedAction"
	visibility private 
	nactuals 1
	actual class class_ref 250114 // PrivilegedAction
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4138626 // <realization>
	  relation 4138626 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4138626 // <realization>
	    b parent class_ref 250114 // PrivilegedAction
	end

	classrelation 4138754 // clazz (<unidirectional association>)
	  relation 4138754 --->
	    a role_name "clazz" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 4138754 // clazz (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 4138882 // methodName (<unidirectional association>)
	  relation 4138882 --->
	    a role_name "methodName" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4138882 // methodName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 10666242 "ModalPrivilegedAction"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "clazz" type class_ref 130818 // Class
	    param inout name "methodName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10666370 "run"
	  public return_type class_ref 137858 // Method
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10666498 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/////////////////
 Accessibility support
/////////////////

Returns the <code>AccessibleContext</code> associated with this JOptionPane.
For option panes, the <code>AccessibleContext</code> takes the form of an
<code>AccessibleJOptionPane</code>.
A new <code>AccessibleJOptionPane</code> instance is created if necessary.

@return an AccessibleJOptionPane that serves as the
        AccessibleContext of this AccessibleJOptionPane
@beaninfo
      expert: true
 description: The AccessibleContext associated with this option pane
"
      end

      class 1286274 "AccessibleJOptionPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4139010 // <generalisation>
	  relation 4139010 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4139010 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10666626 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole
"
	end
      end
    end

    class 427522 "Scrollable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface that provides information to a scrolling container
like JScrollPane.  A complex component that's likely to be used
as a viewing a JScrollPane viewport (or other scrolling container)
should implement this interface.

@see JViewport
@see JScrollPane
@see JScrollBar
@author Hans Muller
"
      operation 2525442 "getPreferredScrollableViewportSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size of the viewport for a view component.
For example, the preferred size of a <code>JList</code> component
is the size required to accommodate all of the cells in its list.
However, the value of <code>preferredScrollableViewportSize</code>
is the size required for <code>JList.getVisibleRowCount</code> rows.
A component without any properties that would affect the viewport
size should just return <code>getPreferredSize</code> here.

@return the preferredSize of a <code>JViewport</code> whose view
   is this <code>Scrollable</code>
@see JViewport#getPreferredSize
"
      end

      operation 2525570 "getScrollableUnitIncrement"
	public explicit_return_type "int"
	nparams 3
	  param inout name "visibleRect" type class_ref 314114 // Rectangle
	  param in name "orientation" explicit_type "int"
	  param in name "direction" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Components that display logical rows or columns should compute
the scroll increment that will completely expose one new row
or column, depending on the value of orientation.  Ideally,
components should handle a partially exposed row or column by
returning the distance required to completely expose the item.
<p>
Scrolling containers, like JScrollPane, will use this method
each time the user requests a unit scroll.

@param visibleRect The view area visible within the viewport
@param orientation Either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.
@param direction Less than zero to scroll up/left, greater than zero for down/right.
@return The \"unit\" increment for scrolling in the specified direction.
        This value should always be positive.
@see JScrollBar#setUnitIncrement
"
      end

      operation 2525698 "getScrollableBlockIncrement"
	public explicit_return_type "int"
	nparams 3
	  param inout name "visibleRect" type class_ref 314114 // Rectangle
	  param in name "orientation" explicit_type "int"
	  param in name "direction" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Components that display logical rows or columns should compute
the scroll increment that will completely expose one block
of rows or columns, depending on the value of orientation.
<p>
Scrolling containers, like JScrollPane, will use this method
each time the user requests a block scroll.

@param visibleRect The view area visible within the viewport
@param orientation Either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.
@param direction Less than zero to scroll up/left, greater than zero for down/right.
@return The \"block\" increment for scrolling in the specified direction.
        This value should always be positive.
@see JScrollBar#setBlockIncrement
"
      end

      operation 2525826 "getScrollableTracksViewportWidth"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if a viewport should always force the width of this
<code>Scrollable</code> to match the width of the viewport.
For example a normal
text view that supported line wrapping would return true here, since it
would be undesirable for wrapped lines to disappear beyond the right
edge of the viewport.  Note that returning true for a Scrollable
whose ancestor is a JScrollPane effectively disables horizontal
scrolling.
<p>
Scrolling containers, like JViewport, will use this method each
time they are validated.

@return True if a viewport should force the Scrollables width to match its own.
"
      end

      operation 2525954 "getScrollableTracksViewportHeight"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if a viewport should always force the height of this
Scrollable to match the height of the viewport.  For example a
columnar text view that flowed text in left to right columns
could effectively disable vertical scrolling by returning
true here.
<p>
Scrolling containers, like JViewport, will use this method each
time they are validated.

@return True if a viewport should force the Scrollables height to match its own.
"
      end
    end

    class 427906 "DropMode"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Drop modes, used to determine the method by which a component
tracks and indicates a drop location during drag and drop.

@author Shannon Hickey
@see JTable#setDropMode
@see JList#setDropMode
@see JTree#setDropMode
@see javax.swing.text.JTextComponent#setDropMode
@since 1.6
"
      attribute 2391810 "USE_SELECTION"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A component's own internal selection mechanism (or caret for text
components) should be used to track the drop location.

"
      end

      attribute 2391938 "ON"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The drop location should be tracked in terms of the index of
existing items. Useful for dropping on items in tables, lists,
and trees.

"
      end

      attribute 2392066 "INSERT"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The drop location should be tracked in terms of the position
where new data should be inserted. For components that manage
a list of items (list and tree for example), the drop location
should indicate the index where new data should be inserted.
For text components the location should represent a position
between characters. For components that manage tabular data
(table for example), the drop location should indicate
where to insert new rows, columns, or both, to accommodate
the dropped data.

"
      end

      attribute 2392194 "INSERT_ROWS"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The drop location should be tracked in terms of the row index
where new rows should be inserted to accommodate the dropped
data. This is useful for components that manage tabular data.

"
      end

      attribute 2392322 "INSERT_COLS"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The drop location should be tracked in terms of the column index
where new columns should be inserted to accommodate the dropped
data. This is useful for components that manage tabular data.

"
      end

      attribute 2392450 "ON_OR_INSERT"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This mode is a combination of <code>ON</code>
and <code>INSERT</code>, specifying that data can be
dropped on existing items, or in insert locations
as specified by <code>INSERT</code>.

"
      end

      attribute 2392578 "ON_OR_INSERT_ROWS"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This mode is a combination of <code>ON</code>
and <code>INSERT_ROWS</code>, specifying that data can be
dropped on existing items, or as insert rows
as specified by <code>INSERT_ROWS</code>.

"
      end

      attribute 2392706 "ON_OR_INSERT_COLS"
	public type class_ref 427906 // DropMode
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This mode is a combination of <code>ON</code>
and <code>INSERT_COLS</code>, specifying that data can be
dropped on existing items, or as insert columns
as specified by <code>INSERT_COLS</code>.
"
      end
    end

    class 429954 "BoundedRangeModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the data model used by components like <code>Slider</code>s
and <code>ProgressBar</code>s.
Defines four interrelated integer properties: minimum, maximum, extent
and value.  These four integers define two nested ranges like this:
<pre>
minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
The outer range is <code>minimum,maximum</code> and the inner
range is <code>value,value+extent</code>.  The inner range
must lie within the outer one, i.e. <code>value</code> must be
less than or equal to <code>maximum</code> and <code>value+extent</code>
must greater than or equal to <code>minimum</code>, and <code>maximum</code>
must be greater than or equal to <code>minimum</code>.
There are a few features of this model that one might find a little
surprising.  These quirks exist for the convenience of the
Swing BoundedRangeModel clients, such as <code>Slider</code> and
<code>ScrollBar</code>.
<ul>
<li>
  The minimum and maximum set methods \"correct\" the other
  three properties to accommodate their new value argument.  For
  example setting the model's minimum may change its maximum, value,
  and extent properties (in that order), to maintain the constraints
  specified above.

<li>
  The value and extent set methods \"correct\" their argument to
  fit within the limits defined by the other three properties.
  For example if <code>value == maximum</code>, <code>setExtent(10)</code>
  would change the extent (back) to zero.

<li>
  The four BoundedRangeModel values are defined as Java Beans properties
  however Swing ChangeEvents are used to notify clients of changes rather
  than PropertyChangeEvents. This was done to keep the overhead of monitoring
  a BoundedRangeModel low. Changes are often reported at MouseDragged rates.
</ul>

<p>

For an example of specifying custom bounded range models used by sliders,
see <a
href=\"http://www.oracle.com/technetwork/java/architecture-142923.html#separable\">Separable model architecture</a>
in <em>A Swing Architecture Overview.</em>

@author Hans Muller
@see DefaultBoundedRangeModel
"
      operation 10420098 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum acceptable value.

@return the value of the minimum property
@see #setMinimum
"
      end

      operation 10420226 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMinimum" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's minimum to <I>newMinimum</I>.   The
other three properties may be changed as well, to ensure
that:
<pre>
minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
<p>
Notifies any listeners if the model changes.

@param newMinimum the model's new minimum
@see #getMinimum
@see #addChangeListener
"
      end

      operation 10420354 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's maximum.  Note that the upper
limit on the model's value is (maximum - extent).

@return the value of the maximum property.
@see #setMaximum
@see #setExtent
"
      end

      operation 10420482 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMaximum" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's maximum to <I>newMaximum</I>. The other
three properties may be changed as well, to ensure that
<pre>
minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
<p>
Notifies any listeners if the model changes.

@param newMaximum the model's new maximum
@see #getMaximum
@see #addChangeListener
"
      end

      operation 10420610 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's current value.  Note that the upper
limit on the model's value is <code>maximum - extent</code>
and the lower limit is <code>minimum</code>.

@return  the model's value
@see     #setValue
"
      end

      operation 10420738 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "newValue" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's current value to <code>newValue</code> if <code>newValue</code>
satisfies the model's constraints. Those constraints are:
<pre>
minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
Otherwise, if <code>newValue</code> is less than <code>minimum</code>
it's set to <code>minimum</code>, if its greater than
<code>maximum</code> then it's set to <code>maximum</code>, and
if it's greater than <code>value+extent</code> then it's set to
<code>value+extent</code>.
<p>
When a BoundedRange model is used with a scrollbar the value
specifies the origin of the scrollbar knob (aka the \"thumb\" or
\"elevator\").  The value usually represents the origin of the
visible part of the object being scrolled.
<p>
Notifies any listeners if the model changes.

@param newValue the model's new value
@see #getValue
"
      end

      operation 10420866 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute indicates that any upcoming changes to the value
of the model should be considered a single event. This attribute
will be set to true at the start of a series of changes to the value,
and will be set to false when the value has finished changing.  Normally
this allows a listener to only take action when the final value change in
committed, instead of having to do updates for all intermediate values.
<p>
Sliders and scrollbars use this property when a drag is underway.

@param b true if the upcoming changes to the value property are part of a series
"
      end

      operation 10420994 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current changes to the value property are part
of a series of changes.

@return the valueIsAdjustingProperty.
@see #setValueIsAdjusting
"
      end

      operation 10421122 "getExtent"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's extent, the length of the inner range that
begins at the model's value.

@return  the value of the model's extent property
@see     #setExtent
@see     #setValue
"
      end

      operation 10421250 "setExtent"
	public explicit_return_type "void"
	nparams 1
	  param in name "newExtent" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's extent.  The <I>newExtent</I> is forced to
be greater than or equal to zero and less than or equal to
maximum - value.
<p>
When a BoundedRange model is used with a scrollbar the extent
defines the length of the scrollbar knob (aka the \"thumb\" or
\"elevator\").  The extent usually represents how much of the
object being scrolled is visible. When used with a slider,
the extent determines how much the value can \"jump\", for
example when the user presses PgUp or PgDn.
<p>
Notifies any listeners if the model changes.

@param  newExtent the model's new extent
@see #getExtent
@see #setValue
"
      end

      operation 10421378 "setRangeProperties"
	public explicit_return_type "void"
	nparams 5
	  param in name "value" explicit_type "int"
	  param in name "extent" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	  param inout name "adjusting" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method sets all of the model's data with a single method call.
The method results in a single change event being generated. This is
convenient when you need to adjust all the model data simultaneously and
do not want individual change events to occur.

@param value  an int giving the current value
@param extent an int giving the amount by which the value can \"jump\"
@param min    an int giving the minimum value
@param max    an int giving the maximum value
@param adjusting a boolean, true if a series of changes are in
                   progress

@see #setValue
@see #setExtent
@see #setMinimum
@see #setMaximum
@see #setValueIsAdjusting
"
      end

      operation 10421506 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a ChangeListener to the model's listener list.

@param x the ChangeListener to add
@see #removeChangeListener
"
      end

      operation 10421634 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a ChangeListener from the model's listener list.

@param x the ChangeListener to remove
@see #addChangeListener
"
      end
    end

    class 431874 "SizeRequirements"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "For the convenience of layout managers,
calculates information about the size and position of components.
All size and position calculation methods are class methods
that take arrays of SizeRequirements as arguments.
The SizeRequirements class supports two types of layout:

<blockquote>
<dl>
<dt> tiled
<dd> The components are placed end-to-end,
     starting either at coordinate 0 (the leftmost or topmost position)
     or at the coordinate representing the end of the allocated span
     (the rightmost or bottommost position).

<dt> aligned
<dd> The components are aligned as specified
     by each component's X or Y alignment value.
</dl>
</blockquote>

<p>

Each SizeRequirements object contains information
about either the width (and X alignment)
or height (and Y alignment)
of a single component or a group of components:

<blockquote>
<dl>
<dt> <code>minimum</code>
<dd> The smallest reasonable width/height of the component
     or component group, in pixels.

<dt> <code>preferred</code>
<dd> The natural width/height of the component
     or component group, in pixels.

<dt> <code>maximum</code>
<dd> The largest reasonable width/height of the component
     or component group, in pixels.

<dt> <code>alignment</code>
<dd> The X/Y alignment of the component
     or component group.
</dl>
</blockquote>
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see Component#getMinimumSize
@see Component#getPreferredSize
@see Component#getMaximumSize
@see Component#getAlignmentX
@see Component#getAlignmentY

@author Timothy Prinzing
"
      classrelation 4182658 // <realization>
	relation 4182658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4182658 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2436354 "minimum"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum size required.
For a component <code>comp</code>, this should be equal to either
<code>comp.getMinimumSize().width</code> or
<code>comp.getMinimumSize().height</code>.

"
      end

      attribute 2436482 "preferred"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The preferred (natural) size.
For a component <code>comp</code>, this should be equal to either
<code>comp.getPreferredSize().width</code> or
<code>comp.getPreferredSize().height</code>.

"
      end

      attribute 2436610 "maximum"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum size allowed.
For a component <code>comp</code>, this should be equal to either
<code>comp.getMaximumSize().width</code> or
<code>comp.getMaximumSize().height</code>.

"
      end

      attribute 2436738 "alignment"
	public explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The alignment, specified as a value between 0.0 and 1.0,
inclusive.
To specify centering, the alignment should be 0.5.

"
      end

      operation 10806914 "SizeRequirements"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a SizeRequirements object with the minimum, preferred,
and maximum sizes set to zero and an alignment value of 0.5
(centered).
"
      end

      operation 10807042 "SizeRequirements"
	public explicit_return_type ""
	nparams 4
	  param in name "min" explicit_type "int"
	  param in name "pref" explicit_type "int"
	  param in name "max" explicit_type "int"
	  param in name "a" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a SizeRequirements object with the specified minimum, preferred,
and maximum sizes and the specified alignment.

@param min the minimum size &gt;= 0
@param pref the preferred size &gt;= 0
@param max the maximum size &gt;= 0
@param a the alignment &gt;= 0.0f &amp;&amp; &lt;= 1.0f
"
      end

      operation 10807170 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing the minimum, preferred, and maximum
size requirements, along with the alignment.

@return the string
"
      end

      operation 10807298 "getTiledSizeRequirements"
	class_operation public return_type class_ref 431874 // SizeRequirements
	nparams 1
	  param inout name "children" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the total space necessary to
place a set of components end-to-end.  The needs
of each component in the set are represented by an entry in the
passed-in SizeRequirements array.
The returned SizeRequirements object has an alignment of 0.5
(centered).  The space requirement is never more than
Integer.MAX_VALUE.

@param children  the space requirements for a set of components.
  The vector may be of zero length, which will result in a
  default SizeRequirements object instance being passed back.
@return  the total space requirements.
"
      end

      operation 10807426 "getAlignedSizeRequirements"
	class_operation public return_type class_ref 431874 // SizeRequirements
	nparams 1
	  param inout name "children" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the total space necessary to
align a set of components.  The needs
of each component in the set are represented by an entry in the
passed-in SizeRequirements array.  The total space required will
never be more than Integer.MAX_VALUE.

@param children  the set of child requirements.  If of zero length,
 the returns result will be a default instance of SizeRequirements.
@return  the total space requirements.
"
      end

      operation 10807554 "calculateTiledPositions"
	class_operation public explicit_return_type "void"
	nparams 5
	  param in name "allocated" explicit_type "int"
	  param inout name "total" type class_ref 431874 // SizeRequirements
	  param inout name "children" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	  param inout name "spans" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a set of offset/span pairs representing how to
lay out a set of components end-to-end.
This method requires that you specify
the total amount of space to be allocated,
the size requirements for each component to be placed
(specified as an array of SizeRequirements), and
the total size requirement of the set of components.
You can get the total size requirement
by invoking the getTiledSizeRequirements method.  The components
will be tiled in the forward direction with offsets increasing from 0.

@param allocated the total span to be allocated &gt;= 0.
@param total     the total of the children requests.  This argument
 is optional and may be null.
@param children  the size requirements for each component.
@param offsets   the offset from 0 for each child where
  the spans were allocated (determines placement of the span).
@param spans     the span allocated for each child to make the
  total target span.
"
      end

      operation 10807682 "calculateTiledPositions"
	class_operation public explicit_return_type "void"
	nparams 6
	  param in name "allocated" explicit_type "int"
	  param inout name "total" type class_ref 431874 // SizeRequirements
	  param inout name "children" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	  param inout name "spans" explicit_type "int"
	multiplicity "[]"
	  param inout name "forward" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a set of offset/span pairs representing how to
lay out a set of components end-to-end.
This method requires that you specify
the total amount of space to be allocated,
the size requirements for each component to be placed
(specified as an array of SizeRequirements), and
the total size requirement of the set of components.
You can get the total size requirement
by invoking the getTiledSizeRequirements method.

This method also requires a flag indicating whether components
should be tiled in the forward direction (offsets increasing
from 0) or reverse direction (offsets decreasing from the end
of the allocated space).  The forward direction represents
components tiled from left to right or top to bottom.  The
reverse direction represents components tiled from right to left
or bottom to top.

@param allocated the total span to be allocated &gt;= 0.
@param total     the total of the children requests.  This argument
 is optional and may be null.
@param children  the size requirements for each component.
@param offsets   the offset from 0 for each child where
  the spans were allocated (determines placement of the span).
@param spans     the span allocated for each child to make the
  total target span.
@param forward   tile with offsets increasing from 0 if true
  and with offsets decreasing from the end of the allocated space
  if false.
@since 1.4
"
      end

      operation 10807810 "compressedTile"
	class_operation private explicit_return_type "void"
	nparams 8
	  param in name "allocated" explicit_type "int"
	  param in name "min" explicit_type "long"
	  param in name "pref" explicit_type "long"
	  param in name "max" explicit_type "long"
	  param inout name "request" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	  param inout name "spans" explicit_type "int"
	multiplicity "[]"
	  param inout name "forward" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10807938 "expandedTile"
	class_operation private explicit_return_type "void"
	nparams 8
	  param in name "allocated" explicit_type "int"
	  param in name "min" explicit_type "long"
	  param in name "pref" explicit_type "long"
	  param in name "max" explicit_type "long"
	  param inout name "request" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	  param inout name "spans" explicit_type "int"
	multiplicity "[]"
	  param inout name "forward" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10808066 "calculateAlignedPositions"
	class_operation public explicit_return_type "void"
	nparams 5
	  param in name "allocated" explicit_type "int"
	  param inout name "total" type class_ref 431874 // SizeRequirements
	  param inout name "children" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	  param inout name "spans" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a bunch of offset/span pairs specifying how to
lay out a set of components with the specified alignments.
The resulting span allocations will overlap, with each one
fitting as well as possible into the given total allocation.
This method requires that you specify
the total amount of space to be allocated,
the size requirements for each component to be placed
(specified as an array of SizeRequirements), and
the total size requirements of the set of components
(only the alignment field of which is actually used).
You can get the total size requirement by invoking
getAlignedSizeRequirements.

Normal alignment will be done with an alignment value of 0.0f
representing the left/top edge of a component.

@param allocated the total span to be allocated &gt;= 0.
@param total     the total of the children requests.
@param children  the size requirements for each component.
@param offsets   the offset from 0 for each child where
  the spans were allocated (determines placement of the span).
@param spans     the span allocated for each child to make the
  total target span.
"
      end

      operation 10808194 "calculateAlignedPositions"
	class_operation public explicit_return_type "void"
	nparams 6
	  param in name "allocated" explicit_type "int"
	  param inout name "total" type class_ref 431874 // SizeRequirements
	  param inout name "children" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	  param inout name "offsets" explicit_type "int"
	multiplicity "[]"
	  param inout name "spans" explicit_type "int"
	multiplicity "[]"
	  param inout name "normal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a set of offset/span pairs specifying how to
lay out a set of components with the specified alignments.
The resulting span allocations will overlap, with each one
fitting as well as possible into the given total allocation.
This method requires that you specify
the total amount of space to be allocated,
the size requirements for each component to be placed
(specified as an array of SizeRequirements), and
the total size requirements of the set of components
(only the alignment field of which is actually used)
You can get the total size requirement by invoking
getAlignedSizeRequirements.

This method also requires a flag indicating whether normal or
reverse alignment should be performed.  With normal alignment
the value 0.0f represents the left/top edge of the component
to be aligned.  With reverse alignment, 0.0f represents the
right/bottom edge.

@param allocated the total span to be allocated &gt;= 0.
@param total     the total of the children requests.
@param children  the size requirements for each component.
@param offsets   the offset from 0 for each child where
  the spans were allocated (determines placement of the span).
@param spans     the span allocated for each child to make the
  total target span.
@param normal    when true, the alignment value 0.0f means
  left/top; when false, it means right/bottom.
@since 1.4
"
      end

      operation 10808322 "adjustSizes"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "delta" explicit_type "int"
	  param inout name "children" type class_ref 431874 // SizeRequirements
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method was used by the JTable - which now uses a different technique.

Adjust a specified array of sizes by a given amount.

@param delta     an int specifying the size difference
@param children  an array of SizeRequirements objects
@return an array of ints containing the final size for each item
"
      end
    end

    class 434050 "JRootPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A lightweight container used behind the scenes by
<code>JFrame</code>, <code>JDialog</code>, <code>JWindow</code>,
<code>JApplet</code>, and <code>JInternalFrame</code>.
For task-oriented information on functionality provided by root panes
see <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html\">How to Use Root Panes</a>,
a section in <em>The Java Tutorial</em>.

<p>
The following image shows the relationships between
the classes that use root panes.
<p style=\"text-align:center\"><img src=\"doc-files/JRootPane-1.gif\"
alt=\"The following text describes this graphic.\"
HEIGHT=484 WIDTH=629></p>
The &quot;heavyweight&quot; components (those that delegate to a peer, or native
component on the host system) are shown with a darker, heavier box. The four
heavyweight JFC/Swing containers (<code>JFrame</code>, <code>JDialog</code>,
<code>JWindow</code>, and <code>JApplet</code>) are
shown in relation to the AWT classes they extend.
These four components are the
only heavyweight containers in the Swing library. The lightweight container
<code>JInternalFrame</code> is also shown.
All five of these JFC/Swing containers implement the
<code>RootPaneContainer</code> interface,
and they all delegate their operations to a
<code>JRootPane</code> (shown with a little \"handle\" on top).
<blockquote>
<b>Note:</b> The <code>JComponent</code> method <code>getRootPane</code>
can be used to obtain the <code>JRootPane</code> that contains
a given component.
</blockquote>
<table style=\"float:right\" border=\"0\" summary=\"layout\">
<tr>
<td align=\"center\">
<img src=\"doc-files/JRootPane-2.gif\"
alt=\"The following text describes this graphic.\" HEIGHT=386 WIDTH=349>
</td>
</tr>
</table>
The diagram at right shows the structure of a <code>JRootPane</code>.
A <code>JRootpane</code> is made up of a <code>glassPane</code>,
an optional <code>menuBar</code>, and a <code>contentPane</code>.
(The <code>JLayeredPane</code> manages the <code>menuBar</code>
and the <code>contentPane</code>.)
The <code>glassPane</code> sits over the top of everything,
where it is in a position to intercept mouse movements.
Since the <code>glassPane</code> (like the <code>contentPane</code>)
can be an arbitrary component, it is also possible to set up the
<code>glassPane</code> for drawing. Lines and images on the
<code>glassPane</code> can then range
over the frames underneath without being limited by their boundaries.
<p>
Although the <code>menuBar</code> component is optional,
the <code>layeredPane</code>, <code>contentPane</code>,
and <code>glassPane</code> always exist.
Attempting to set them to <code>null</code> generates an exception.
<p>
To add components to the <code>JRootPane</code> (other than the
optional menu bar), you add the object to the <code>contentPane</code>
of the <code>JRootPane</code>, like this:
<pre>
      rootPane.getContentPane().add(child);
</pre>
The same principle holds true for setting layout managers, removing
components, listing children, etc. All these methods are invoked on
the <code>contentPane</code> instead of on the <code>JRootPane</code>.
<blockquote>
<b>Note:</b> The default layout manager for the <code>contentPane</code> is
 a <code>BorderLayout</code> manager. However, the <code>JRootPane</code>
 uses a custom <code>LayoutManager</code>.
 So, when you want to change the layout manager for the components you added
 to a <code>JRootPane</code>, be sure to use code like this:
<pre>
   rootPane.getContentPane().setLayout(new BoxLayout());
</pre></blockquote>
If a <code>JMenuBar</code> component is set on the <code>JRootPane</code>,
it is positioned along the upper edge of the frame.
The <code>contentPane</code> is adjusted in location and size to
fill the remaining area.
(The <code>JMenuBar</code> and the <code>contentPane</code> are added to the
<code>layeredPane</code> component at the
<code>JLayeredPane.FRAME_CONTENT_LAYER</code> layer.)
<p>
The <code>layeredPane</code> is the parent of all children in the
<code>JRootPane</code> -- both as the direct parent of the menu and
the grandparent of all components added to the <code>contentPane</code>.
It is an instance of <code>JLayeredPane</code>,
which provides the ability to add components at several layers.
This capability is very useful when working with menu popups,
dialog boxes, and dragging -- situations in which you need to place
a component on top of all other components in the pane.
<p>
The <code>glassPane</code> sits on top of all other components in the
<code>JRootPane</code>.
That provides a convenient place to draw above all other components,
and makes it possible to intercept mouse events,
which is useful both for dragging and for drawing.
Developers can use <code>setVisible</code> on the <code>glassPane</code>
to control when the <code>glassPane</code> displays over the other children.
By default the <code>glassPane</code> is not visible.
<p>
The custom <code>LayoutManager</code> used by <code>JRootPane</code>
ensures that:
<OL>
<LI>The <code>glassPane</code> fills the entire viewable
    area of the <code>JRootPane</code> (bounds - insets).
<LI>The <code>layeredPane</code> fills the entire viewable area of the
    <code>JRootPane</code>. (bounds - insets)
<LI>The <code>menuBar</code> is positioned at the upper edge of the
    <code>layeredPane</code>.
<LI>The <code>contentPane</code> fills the entire viewable area,
    minus the <code>menuBar</code>, if present.
</OL>
Any other views in the <code>JRootPane</code> view hierarchy are ignored.
<p>
If you replace the <code>LayoutManager</code> of the <code>JRootPane</code>,
you are responsible for managing all of these views.
So ordinarily you will want to be sure that you
change the layout manager for the <code>contentPane</code> rather than
for the <code>JRootPane</code> itself!
<p>
The painting architecture of Swing requires an opaque
<code>JComponent</code>
to exist in the containment hierarchy above all other components. This is
typically provided by way of the content pane. If you replace the content
pane, it is recommended that you make the content pane opaque
by way of <code>setOpaque(true)</code>. Additionally, if the content pane
overrides <code>paintComponent</code>, it
will need to completely fill in the background in an opaque color in
<code>paintComponent</code>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JLayeredPane
@see JMenuBar
@see JWindow
@see JFrame
@see JDialog
@see JApplet
@see JInternalFrame
@see JComponent
@see BoxLayout

@see <a href=\"http://java.sun.com/products/jfc/tsc/articles/mixing/\">
Mixing Heavy and Light Components</a>

@author David Kloba

/ PENDING(klobad) Who should be opaque in this component?"
      classrelation 4142210 // <generalisation>
	relation 4142210 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4142210 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4142338 // <realization>
	relation 4142338 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4142338 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4142466 // uiClassID (<unidirectional association>)
	relation 4142466 --->
	  a role_name "uiClassID" init_value " \"RootPaneUI\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4142466 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2418050 "LOG_DISABLE_TRUE_DOUBLE_BUFFERING"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not we should dump the stack when true double buffering
is disabled. Default is false.

"
      end

      attribute 2418178 "IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not we should ignore requests to disable true double
buffering. Default is false.

"
      end

      attribute 2418306 "NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should not provide any sort of
Window decorations.

@since 1.4

"
      end

      attribute 2418434 "FRAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Frame.

@since 1.4

"
      end

      attribute 2418562 "PLAIN_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Dialog.

@since 1.4

"
      end

      attribute 2418690 "INFORMATION_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Dialog used to display an informational message.

@since 1.4

"
      end

      attribute 2418818 "ERROR_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Dialog used to display an error message.

@since 1.4

"
      end

      attribute 2418946 "COLOR_CHOOSER_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Dialog used to display a <code>JColorChooser</code>.

@since 1.4

"
      end

      attribute 2419074 "FILE_CHOOSER_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Dialog used to display a <code>JFileChooser</code>.

@since 1.4

"
      end

      attribute 2419202 "QUESTION_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Dialog used to present a question to the user.

@since 1.4

"
      end

      attribute 2419330 "WARNING_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant used for the windowDecorationStyle property. Indicates that
the <code>JRootPane</code> should provide decorations appropriate for
a Dialog used to display a warning message.

@since 1.4

"
      end

      attribute 2419458 "windowDecorationStyle"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4142594 // menuBar (<unidirectional association>)
	relation 4142594 --->
	  a role_name "menuBar" protected
	    comment " The menu bar. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4142594 // menuBar (<unidirectional association>)
	  b parent class_ref 419586 // JMenuBar
      end

      classrelation 4142722 // contentPane (<unidirectional association>)
	relation 4142722 --->
	  a role_name "contentPane" protected
	    comment " The content pane. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4142722 // contentPane (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 4142850 // layeredPane (<unidirectional association>)
	relation 4142850 --->
	  a role_name "layeredPane" protected
	    comment " The layered pane that manages the menu bar and content pane. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4142850 // layeredPane (<unidirectional association>)
	  b parent class_ref 400642 // JLayeredPane
      end

      classrelation 4142978 // glassPane (<unidirectional association>)
	relation 4142978 --->
	  a role_name "glassPane" protected
	    comment "
The glass pane that overlays the menu bar and content pane,
 so it can intercept mouse movements and such.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4142978 // glassPane (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4143106 // defaultButton (<unidirectional association>)
	relation 4143106 --->
	  a role_name "defaultButton" protected
	    comment "
The button that gets activated when the pane has the focus and
a UI-specific action like pressing the <b>Enter</b> key occurs.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4143106 // defaultButton (<unidirectional association>)
	  b parent class_ref 389378 // JButton
      end

      class 1287298 "DefaultAction"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4143490 // <generalisation>
	  relation 4143490 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4143490 // <generalisation>
	    b parent class_ref 360322 // AbstractAction
	end

	classrelation 4143618 // owner (<unidirectional association>)
	  relation 4143618 --->
	    a role_name "owner" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4143618 // owner (<unidirectional association>)
	    b parent class_ref 389378 // JButton
	end

	classrelation 4143746 // root (<unidirectional association>)
	  relation 4143746 --->
	    a role_name "root" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4143746 // root (<unidirectional association>)
	    b parent class_ref 434050 // JRootPane
	end

	attribute 2419714 "press"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10683906 "DefaultAction"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "root" type class_ref 434050 // JRootPane
	    param inout name "press" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10684034 "setOwner"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "owner" type class_ref 389378 // JButton
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10684162 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10684290 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4143234 // defaultPressAction (<unidirectional association>)
	relation 4143234 --->
	  a role_name "defaultPressAction" protected
	    comment "
As of Java 2 platform v1.3 this unusable field is no longer used.
To override the default button you should replace the <code>Action</code>
in the <code>JRootPane</code>'s <code>ActionMap</code>. Please refer to
the key bindings specification for further details.

@deprecated As of Java 2 platform v1.3.
 @see #defaultButton

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 4143234 // defaultPressAction (<unidirectional association>)
	  b parent class_ref 1287298 // DefaultAction
      end

      classrelation 4143362 // defaultReleaseAction (<unidirectional association>)
	relation 4143362 --->
	  a role_name "defaultReleaseAction" protected
	    comment "
As of Java 2 platform v1.3 this unusable field is no longer used.
To override the default button you should replace the <code>Action</code>
in the <code>JRootPane</code>'s <code>ActionMap</code>. Please refer to
the key bindings specification for further details.

@deprecated As of Java 2 platform v1.3.
 @see #defaultButton

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 4143362 // defaultReleaseAction (<unidirectional association>)
	  b parent class_ref 1287298 // DefaultAction
      end

      attribute 2419586 "useTrueDoubleBuffering"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not true double buffering should be used.  This is typically
true, but may be set to false in special situations.  For example,
heavy weight popups (backed by a window) set this to false.

"
      end

      extra_member 185218 "initialization"
	
	cpp "" ""
	java "  static {
        LOG_DISABLE_TRUE_DOUBLE_BUFFERING =
            AccessController.doPrivileged(new GetBooleanAction(
                                   \"swing.logDoubleBufferingDisable\"));
        IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING =
            AccessController.doPrivileged(new GetBooleanAction(
                                   \"swing.ignoreDoubleBufferingDisable\"));
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10679938 "JRootPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JRootPane</code>, setting up its
<code>glassPane</code>, <code>layeredPane</code>,
and <code>contentPane</code>.
"
      end

      operation 10680066 "setDoubleBuffered"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10680194 "getWindowDecorationStyle"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a constant identifying the type of Window decorations the
<code>JRootPane</code> is providing.

@return One of <code>NONE</code>, <code>FRAME</code>,
       <code>PLAIN_DIALOG</code>, <code>INFORMATION_DIALOG</code>,
       <code>ERROR_DIALOG</code>, <code>COLOR_CHOOSER_DIALOG</code>,
       <code>FILE_CHOOSER_DIALOG</code>, <code>QUESTION_DIALOG</code> or
       <code>WARNING_DIALOG</code>.
@see #setWindowDecorationStyle
@since 1.4
"
      end

      operation 10680322 "setWindowDecorationStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "windowDecorationStyle" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of Window decorations (such as borders, widgets for
closing a Window, title ...) the <code>JRootPane</code> should
provide. The default is to provide no Window decorations
(<code>NONE</code>).
<p>
This is only a hint, and some look and feels may not support
this.
This is a bound property.

@param windowDecorationStyle Constant identifying Window decorations
       to provide.
@see JDialog#setDefaultLookAndFeelDecorated
@see JFrame#setDefaultLookAndFeelDecorated
@see LookAndFeel#getSupportsWindowDecorations
@throws IllegalArgumentException if <code>style</code> is
       not one of: <code>NONE</code>, <code>FRAME</code>,
       <code>PLAIN_DIALOG</code>, <code>INFORMATION_DIALOG</code>,
       <code>ERROR_DIALOG</code>, <code>COLOR_CHOOSER_DIALOG</code>,
       <code>FILE_CHOOSER_DIALOG</code>, <code>QUESTION_DIALOG</code>, or
       <code>WARNING_DIALOG</code>.
@since 1.4
@beaninfo
       bound: true
        enum: NONE                   JRootPane.NONE
              FRAME                  JRootPane.FRAME
              PLAIN_DIALOG           JRootPane.PLAIN_DIALOG
              INFORMATION_DIALOG     JRootPane.INFORMATION_DIALOG
              ERROR_DIALOG           JRootPane.ERROR_DIALOG
              COLOR_CHOOSER_DIALOG   JRootPane.COLOR_CHOOSER_DIALOG
              FILE_CHOOSER_DIALOG    JRootPane.FILE_CHOOSER_DIALOG
              QUESTION_DIALOG        JRootPane.QUESTION_DIALOG
              WARNING_DIALOG         JRootPane.WARNING_DIALOG
      expert: true
   attribute: visualUpdate true
 description: Identifies the type of Window decorations to provide
"
      end

      operation 10680450 "getUI"
	public return_type class_ref 470530 // RootPaneUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return <code>LabelUI</code> object
@since 1.3
"
      end

      operation 10680578 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 470530 // RootPaneUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the <code>LabelUI</code> L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
     expert: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
@since 1.3
"
      end

      operation 10680706 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10680834 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the L&amp;F class
that renders this component.

@return the string \"RootPaneUI\"

@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10680962 "createLayeredPane"
	protected return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create the default
<code>layeredPane</code>.
Bt default it creates a new <code>JLayeredPane</code>.
@return the default <code>layeredPane</code>
"
      end

      operation 10681090 "createContentPane"
	protected return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create the default
<code>contentPane</code>.
By default this method creates a new <code>JComponent</code> add sets a
<code>BorderLayout</code> as its <code>LayoutManager</code>.
@return the default <code>contentPane</code>
"
      end

      operation 10681218 "createGlassPane"
	protected return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create the default
<code>glassPane</code>.
By default this method creates a new <code>JComponent</code>
with visibility set to false.
@return the default <code>glassPane</code>
"
      end

      operation 10681346 "createRootLayout"
	protected return_type class_ref 349698 // LayoutManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create the default
<code>layoutManager</code>.
@return the default <code>layoutManager</code>.
"
      end

      operation 10681474 "setJMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menu" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds or changes the menu bar used in the layered pane.
@param menu the <code>JMenuBar</code> to add
"
      end

      operation 10681602 "setMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menu" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Specifies the menu bar value.
@deprecated As of Swing version 1.0.3
 replaced by <code>setJMenuBar(JMenuBar menu)</code>.
@param menu the <code>JMenuBar</code> to add.
"
      end

      operation 10681730 "getJMenuBar"
	public return_type class_ref 419586 // JMenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the menu bar from the layered pane.
@return the <code>JMenuBar</code> used in the pane
"
      end

      operation 10681858 "getMenuBar"
	public return_type class_ref 419586 // JMenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the menu bar value.
@deprecated As of Swing version 1.0.3
 replaced by <code>getJMenuBar()</code>.
@return the <code>JMenuBar</code> used in the pane
"
      end

      operation 10681986 "setContentPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "content" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the content pane -- the container that holds the components
parented by the root pane.
<p>
Swing's painting architecture requires an opaque <code>JComponent</code>
in the containment hierarchy. This is typically provided by the
content pane. If you replace the content pane it is recommended you
replace it with an opaque <code>JComponent</code>.

@param content the <code>Container</code> to use for component-contents
@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the content pane parameter is <code>null</code>
"
      end

      operation 10682114 "getContentPane"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content pane -- the container that holds the components
parented by the root pane.

@return the <code>Container</code> that holds the component-contents
"
      end

      operation 10682242 "setLayeredPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layered" type class_ref 400642 // JLayeredPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PENDING(klobad) Should this reparent the contentPane and MenuBar?

Sets the layered pane for the root pane. The layered pane
typically holds a content pane and an optional <code>JMenuBar</code>.

@param layered  the <code>JLayeredPane</code> to use
@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the layered pane parameter is <code>null</code>
"
      end

      operation 10682370 "getLayeredPane"
	public return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the layered pane used by the root pane. The layered pane
typically holds a content pane and an optional <code>JMenuBar</code>.

@return the <code>JLayeredPane</code> currently in use
"
      end

      operation 10682498 "setGlassPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "glass" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a specified <code>Component</code> to be the glass pane for this
root pane.  The glass pane should normally be a lightweight,
transparent component, because it will be made visible when
ever the root pane needs to grab input events.
<p>
The new glass pane's visibility is changed to match that of
the current glass pane.  An implication of this is that care
must be taken when you want to replace the glass pane and
make it visible.  Either of the following will work:
<pre>
  root.setGlassPane(newGlassPane);
  newGlassPane.setVisible(true);
</pre>
or:
<pre>
  root.getGlassPane().setVisible(true);
  root.setGlassPane(newGlassPane);
</pre>

@param glass the <code>Component</code> to use as the glass pane
             for this <code>JRootPane</code>
@exception NullPointerException if the <code>glass</code> parameter is
         <code>null</code>
"
      end

      operation 10682626 "getGlassPane"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current glass pane for this <code>JRootPane</code>.
@return the current glass pane
@see #setGlassPane
"
      end

      operation 10682754 "isValidateRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "If a descendant of this <code>JRootPane</code> calls
<code>revalidate</code>, validate from here on down.
<p>
Deferred requests to layout a component and its descendents again.
For example, calls to <code>revalidate</code>, are pushed upwards to
either a <code>JRootPane</code> or a <code>JScrollPane</code>
because both classes override <code>isValidateRoot</code> to return true.

@see JComponent#isValidateRoot
@see java.awt.Container#isValidateRoot
@return true
"
      end

      operation 10682882 "isOptimizedDrawingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>glassPane</code> and <code>contentPane</code>
have the same bounds, which means <code>JRootPane</code>
does not tiles its children and this should return false.
On the other hand, the <code>glassPane</code>
is normally not visible, and so this can return true if the
<code>glassPane</code> isn't visible. Therefore, the
return value here depends upon the visibility of the
<code>glassPane</code>.

@return true if this component's children don't overlap
"
      end

      operation 10683010 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10683138 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10683266 "setDefaultButton"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultButton" type class_ref 389378 // JButton
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>defaultButton</code> property,
which determines the current default button for this <code>JRootPane</code>.
The default button is the button which will be activated
when a UI-defined activation event (typically the <b>Enter</b> key)
occurs in the root pane regardless of whether or not the button
has keyboard focus (unless there is another component within
the root pane which consumes the activation event,
such as a <code>JTextPane</code>).
For default activation to work, the button must be an enabled
descendent of the root pane when activation occurs.
To remove a default button from this root pane, set this
property to <code>null</code>.

@see JButton#isDefaultButton
@param defaultButton the <code>JButton</code> which is to be the default button

@beaninfo
 description: The button activated by default in this root pane
"
      end

      operation 10683394 "getDefaultButton"
	public return_type class_ref 389378 // JButton
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>defaultButton</code> property.
@return the <code>JButton</code> which is currently the default button
@see #setDefaultButton
"
      end

      operation 10683522 "setUseTrueDoubleBuffering"
	package explicit_return_type "void"
	nparams 1
	  param inout name "useTrueDoubleBuffering" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10683650 "getUseTrueDoubleBuffering"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10683778 "disableTrueDoubleBuffering"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10684418 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden to enforce the position of the glass component as
the zero child.

@param comp the component to be enhanced
@param constraints the constraints to be respected
@param index the index
"
      end

      class 1287426 "RootLayout"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4143874 // <realization>
	  relation 4143874 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4143874 // <realization>
	    b parent class_ref 406402 // LayoutManager2
	end

	classrelation 4144002 // <realization>
	  relation 4144002 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4144002 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10684546 "preferredLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "parent" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the amount of space the layout would like to have.

@param parent the Container for which this layout manager
is being used
@return a Dimension object containing the layout's preferred size
"
	end

	operation 10684674 "minimumLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "parent" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the minimum amount of space the layout needs.

@param parent the Container for which this layout manager
is being used
@return a Dimension object containing the layout's minimum size
"
	end

	operation 10684802 "maximumLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the maximum amount of space the layout can use.

@param target the Container for which this layout manager
is being used
@return a Dimension object containing the layout's maximum size
"
	end

	operation 10684930 "layoutContainer"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "parent" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Instructs the layout manager to perform the layout for the specified
container.

@param parent the Container for which this layout manager
is being used
"
	end

	operation 10685058 "addLayoutComponent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "comp" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10685186 "removeLayoutComponent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "comp" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10685314 "addLayoutComponent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "constraints" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10685442 "getLayoutAlignmentX"
	  public explicit_return_type "float"
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10685570 "getLayoutAlignmentY"
	  public explicit_return_type "float"
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10685698 "invalidateLayout"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10685826 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JRootPane</code>.
This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JRootPane</code>.
"
      end

      operation 10685954 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>JRootPane</code>. For root panes, the
<code>AccessibleContext</code> takes the form of an
<code>AccessibleJRootPane</code>.
A new <code>AccessibleJRootPane</code> instance is created if necessary.

@return an <code>AccessibleJRootPane</code> that serves as the
        <code>AccessibleContext</code> of this <code>JRootPane</code>
"
      end

      class 1287554 "AccessibleJRootPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4144130 // <generalisation>
	  relation 4144130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4144130 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10686082 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of
the object
"
	end

	operation 10686210 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children of the object.

@return the number of accessible children of the object.
"
	end

	operation 10686338 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the specified Accessible child of the object.  The Accessible
children of an Accessible object are zero-based, so the first child
of an Accessible child is at index 0, the second child is at index 1,
and so on.

@param i zero-based index of child
@return the Accessible child of the object
@see #getAccessibleChildrenCount
"
	end
      end
    end

    class 434690 "JProgressBar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A component that visually displays the progress of some task.  As the task
progresses towards completion, the progress bar displays the
task's percentage of completion.
This percentage is typically represented visually by a rectangle which
starts out empty and gradually becomes filled in as the task progresses.
In addition, the progress bar can display a textual representation of this
percentage.
<p>
{@code JProgressBar} uses a {@code BoundedRangeModel} as its data model,
with the {@code value} property representing the \"current\" state of the task,
and the {@code minimum} and {@code maximum} properties representing the
beginning and end points, respectively.
<p>
To indicate that a task of unknown length is executing,
you can put a progress bar into indeterminate mode.
While the bar is in indeterminate mode,
it animates constantly to show that work is occurring.
As soon as you can determine the task's length and amount of progress,
you should update the progress bar's value
and switch it back to determinate mode.

<p>

Here is an example of creating a progress bar,
where <code>task</code> is an object (representing some piece of work)
which returns information about the progress of the task:

<pre>
progressBar = new JProgressBar(0, task.getLengthOfTask());
progressBar.setValue(0);
progressBar.setStringPainted(true);
</pre>

Here is an example of querying the current state of the task, and using
the returned value to update the progress bar:

<pre>
progressBar.setValue(task.getCurrent());
</pre>

Here is an example of putting a progress bar into
indeterminate mode,
and then switching back to determinate mode
once the length of the task is known:

<pre>
progressBar = new JProgressBar();
<em>...//when the task of (initially) unknown length begins:</em>
progressBar.setIndeterminate(true);
<em>...//do some work; get length of task...</em>
progressBar.setMaximum(newLength);
progressBar.setValue(newValue);
progressBar.setIndeterminate(false);
</pre>

<p>

For complete examples and further documentation see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html\" target=\"_top\">How to Monitor Progress</a>,
a section in <em>The Java Tutorial.</em>

<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.plaf.basic.BasicProgressBarUI
@see javax.swing.BoundedRangeModel
@see javax.swing.SwingWorker

@beaninfo
     attribute: isContainer false
   description: A component that displays an integer value.

@author Michael C. Albers
@author Kathy Walrath
"
      classrelation 4139522 // <generalisation>
	relation 4139522 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4139522 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4139650 // <realization>
	relation 4139650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4139650 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      classrelation 4139778 // <realization>
	relation 4139778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4139778 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4139906 // uiClassID (<unidirectional association>)
	relation 4139906 --->
	  a role_name "uiClassID" init_value " \"ProgressBarUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4139906 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2417154 "orientation"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether the progress bar is horizontal or vertical.
The default is <code>HORIZONTAL</code>.

@see #setOrientation

"
      end

      attribute 2417282 "paintBorder"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether to display a border around the progress bar.
The default is <code>true</code>.

@see #setBorderPainted

"
      end

      classrelation 4140034 // model (<unidirectional association>)
	relation 4140034 --->
	  a role_name "model" protected
	    comment "
The object that holds the data for the progress bar.

@see #setModel

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4140034 // model (<unidirectional association>)
	  b parent class_ref 429954 // BoundedRangeModel
      end

      classrelation 4140162 // progressString (<unidirectional association>)
	relation 4140162 --->
	  a role_name "progressString" protected
	    comment "
An optional string that can be displayed on the progress bar.
The default is <code>null</code>. Setting this to a non-<code>null</code>
value does not imply that the string will be displayed.
To display the string, {@code paintString} must be {@code true}.

@see #setString
@see #setStringPainted

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4140162 // progressString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2417410 "paintString"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether to display a string of text on the progress bar.
The default is <code>false</code>.
Setting this to <code>true</code> causes a textual
display of the progress to be rendered on the progress bar. If
the <code>progressString</code> is <code>null</code>,
the percentage of completion is displayed on the progress bar.
Otherwise, the <code>progressString</code> is
rendered on the progress bar.

@see #setStringPainted
@see #setString

"
      end

      attribute 2417538 "defaultMinimum"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default minimum for a progress bar is 0.

"
      end

      attribute 2417666 "defaultMaximum"
	class_attribute const_attribute private explicit_type "int"
	init_value " 100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default maximum for a progress bar is 100.

"
      end

      attribute 2417794 "defaultOrientation"
	class_attribute const_attribute private explicit_type "int"
	init_value " HORIZONTAL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default orientation for a progress bar is <code>HORIZONTAL</code>.

"
      end

      classrelation 4140290 // changeEvent (<unidirectional association>)
	relation 4140290 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment "
Only one <code>ChangeEvent</code> is needed per instance since the
event's only interesting property is the immutable source, which
is the progress bar.
The event is lazily created the first time that an
event notification is fired.

@see #fireStateChanged

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4140290 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      classrelation 4140418 // changeListener (<unidirectional association>)
	relation 4140418 --->
	  a role_name "changeListener" init_value " null" protected
	    comment "
Listens for change events sent by the progress bar's model,
redispatching them
to change-event listeners registered upon
this progress bar.

@see #createChangeListener

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4140418 // changeListener (<unidirectional association>)
	  b parent class_ref 359426 // ChangeListener
      end

      classrelation 4140546 // format (<unidirectional association>)
	relation 4140546 --->
	  a role_name "format" private
	    comment "
Format used when displaying percent complete.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4140546 // format (<unidirectional association>)
	  b parent class_ref 1045250 // Format
      end

      attribute 2417922 "indeterminate"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether the progress bar is indeterminate (<code>true</code>) or
normal (<code>false</code>); the default is <code>false</code>.

@see #setIndeterminate
@since 1.4

"
      end

      operation 10670466 "JProgressBar"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal progress bar
that displays a border but no progress string.
The initial and minimum values are 0,
and the maximum is 100.

@see #setOrientation
@see #setBorderPainted
@see #setStringPainted
@see #setString
@see #setIndeterminate
"
      end

      operation 10670594 "JProgressBar"
	public explicit_return_type ""
	nparams 1
	  param in name "orient" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a progress bar with the specified orientation,
which can be
either {@code SwingConstants.VERTICAL} or
{@code SwingConstants.HORIZONTAL}.
By default, a border is painted but a progress string is not.
The initial and minimum values are 0,
and the maximum is 100.

@param orient  the desired orientation of the progress bar
@throws IllegalArgumentException if {@code orient} is an illegal value

@see #setOrientation
@see #setBorderPainted
@see #setStringPainted
@see #setString
@see #setIndeterminate
"
      end

      operation 10670722 "JProgressBar"
	public explicit_return_type ""
	nparams 2
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal progress bar
with the specified minimum and maximum.
Sets the initial value of the progress bar to the specified minimum.
By default, a border is painted but a progress string is not.
<p>
The <code>BoundedRangeModel</code> that holds the progress bar's data
handles any issues that may arise from improperly setting the
minimum, initial, and maximum values on the progress bar.
See the {@code BoundedRangeModel} documentation for details.

@param min  the minimum value of the progress bar
@param max  the maximum value of the progress bar

@see BoundedRangeModel
@see #setOrientation
@see #setBorderPainted
@see #setStringPainted
@see #setString
@see #setIndeterminate
"
      end

      operation 10670850 "JProgressBar"
	public explicit_return_type ""
	nparams 3
	  param in name "orient" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a progress bar using the specified orientation,
minimum, and maximum.
By default, a border is painted but a progress string is not.
Sets the initial value of the progress bar to the specified minimum.
<p>
The <code>BoundedRangeModel</code> that holds the progress bar's data
handles any issues that may arise from improperly setting the
minimum, initial, and maximum values on the progress bar.
See the {@code BoundedRangeModel} documentation for details.

@param orient  the desired orientation of the progress bar
@param min  the minimum value of the progress bar
@param max  the maximum value of the progress bar
@throws IllegalArgumentException if {@code orient} is an illegal value

@see BoundedRangeModel
@see #setOrientation
@see #setBorderPainted
@see #setStringPainted
@see #setString
@see #setIndeterminate
"
      end

      operation 10670978 "JProgressBar"
	public explicit_return_type ""
	nparams 1
	  param inout name "newModel" type class_ref 429954 // BoundedRangeModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal progress bar
that uses the specified model
to hold the progress bar's data.
By default, a border is painted but a progress string is not.

@param newModel  the data model for the progress bar

@see #setOrientation
@see #setBorderPainted
@see #setStringPainted
@see #setString
@see #setIndeterminate
"
      end

      operation 10671106 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code SwingConstants.VERTICAL} or
{@code SwingConstants.HORIZONTAL}, depending on the orientation
of the progress bar. The default orientation is
{@code SwingConstants.HORIZONTAL}.

@return <code>HORIZONTAL</code> or <code>VERTICAL</code>
@see #setOrientation
"
      end

      operation 10671234 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "newOrientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the progress bar's orientation to <code>newOrientation</code>,
which must be {@code SwingConstants.VERTICAL} or
{@code SwingConstants.HORIZONTAL}. The default orientation
is {@code SwingConstants.HORIZONTAL}.

@param  newOrientation  <code>HORIZONTAL</code> or <code>VERTICAL</code>
@exception      IllegalArgumentException    if <code>newOrientation</code>
                                             is an illegal value
@see #getOrientation

@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: Set the progress bar's orientation.
"
      end

      operation 10671362 "isStringPainted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>stringPainted</code> property.

@return the value of the <code>stringPainted</code> property
@see    #setStringPainted
@see    #setString
"
      end

      operation 10671490 "setStringPainted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>stringPainted</code> property,
which determines whether the progress bar
should render a progress string.
The default is <code>false</code>, meaning
no string is painted.
Some look and feels might not support progress strings
or might support them only when the progress bar is in determinate mode.

@param   b       <code>true</code> if the progress bar should render a string
@see     #isStringPainted
@see     #setString
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether the progress bar should render a string.
"
      end

      operation 10671618 "getString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} representation of the current progress.
By default, this returns a simple percentage {@code String} based on
the value returned from {@code getPercentComplete}.  An example
would be the \"42%\".  You can change this by calling {@code setString}.

@return the value of the progress string, or a simple percentage string
        if the progress string is {@code null}
@see    #setString
"
      end

      operation 10671746 "setString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the progress string. By default,
this string is <code>null</code>, implying the built-in behavior of
using a simple percent string.
If you have provided a custom progress string and want to revert to
the built-in behavior, set the string back to <code>null</code>.
<p>
The progress string is painted only if
the <code>isStringPainted</code> method returns <code>true</code>.

@param  s       the value of the progress string
@see    #getString
@see    #setStringPainted
@see    #isStringPainted
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Specifies the progress string to paint
"
      end

      operation 10671874 "getPercentComplete"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the percent complete for the progress bar.
Note that this number is between 0.0 and 1.0.

@return the percent complete for this progress bar
"
      end

      operation 10672002 "isBorderPainted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>borderPainted</code> property.

@return the value of the <code>borderPainted</code> property
@see    #setBorderPainted
@beaninfo
 description: Does the progress bar paint its border
"
      end

      operation 10672130 "setBorderPainted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>borderPainted</code> property, which is
<code>true</code> if the progress bar should paint its border.
The default value for this property is <code>true</code>.
Some look and feels might not implement painted borders;
they will ignore this property.

@param   b       <code>true</code> if the progress bar
                 should paint its border;
                 otherwise, <code>false</code>
@see     #isBorderPainted
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether the progress bar should paint its border.
"
      end

      operation 10672258 "paintBorder"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the progress bar's border if the <code>borderPainted</code>
property is <code>true</code>.

@param g  the <code>Graphics</code> context within which to paint the border
@see #paint
@see #setBorder
@see #isBorderPainted
@see #setBorderPainted
"
      end

      operation 10672386 "getUI"
	public return_type class_ref 434434 // ProgressBarUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the look-and-feel object that renders this component.

@return the <code>ProgressBarUI</code> object that renders this component
"
      end

      operation 10672514 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 434434 // ProgressBarUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the look-and-feel object that renders this component.

@param ui  a <code>ProgressBarUI</code> object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 10672642 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10672770 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the look-and-feel class that renders this component.

@return the string \"ProgressBarUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
       expert: true
  description: A string that specifies the name of the look-and-feel class.
"
      end

      class 1286658 "ModelListener"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4140674 // <realization>
	  relation 4140674 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4140674 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4140802 // <realization>
	  relation 4140802 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4140802 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10672898 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10673026 "createChangeListener"
	protected return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses that want to handle change events
from the model differently
can override this to return
an instance of a custom <code>ChangeListener</code> implementation.
The default {@code ChangeListener} simply calls the
{@code fireStateChanged} method to forward {@code ChangeEvent}s
to the {@code ChangeListener}s that have been added directly to the
progress bar.

@see #changeListener
@see #fireStateChanged
@see javax.swing.event.ChangeListener
@see javax.swing.BoundedRangeModel
"
      end

      operation 10673154 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified <code>ChangeListener</code> to the progress bar.

@param l the <code>ChangeListener</code> to add
"
      end

      operation 10673282 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code> from the progress bar.

@param l the <code>ChangeListener</code> to remove
"
      end

      operation 10673410 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this progress bar with <code>addChangeListener</code>.

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10673538 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a {@code ChangeEvent}, whose source is this {@code JProgressBar}, to
all {@code ChangeListener}s that have registered interest in
{@code ChangeEvent}s.
This method is called each time a {@code ChangeEvent} is received from
the model.
<p>

The event instance is created if necessary, and stored in
{@code changeEvent}.

@see #addChangeListener
@see EventListenerList
"
      end

      operation 10673666 "getModel"
	public return_type class_ref 429954 // BoundedRangeModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the data model used by this progress bar.

@return the <code>BoundedRangeModel</code> currently in use
@see #setModel
@see    BoundedRangeModel
"
      end

      operation 10673794 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 429954 // BoundedRangeModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the data model used by the <code>JProgressBar</code>.
Note that the {@code BoundedRangeModel}'s {@code extent} is not used,
and is set to {@code 0}.

@param  newModel the <code>BoundedRangeModel</code> to use

@beaninfo
   expert: true
description: The data model used by the JProgressBar.
"
      end

      operation 10673922 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " All of the model methods are implemented by delegation. 

Returns the progress bar's current {@code value}
from the <code>BoundedRangeModel</code>.
The value is always between the
minimum and maximum values, inclusive.

@return  the current value of the progress bar
@see     #setValue
@see     BoundedRangeModel#getValue
"
      end

      operation 10674050 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the progress bar's {@code minimum} value
from the <code>BoundedRangeModel</code>.

@return  the progress bar's minimum value
@see     #setMinimum
@see     BoundedRangeModel#getMinimum
"
      end

      operation 10674178 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the progress bar's {@code maximum} value
from the <code>BoundedRangeModel</code>.

@return  the progress bar's maximum value
@see     #setMaximum
@see     BoundedRangeModel#getMaximum
"
      end

      operation 10674306 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the progress bar's current value to {@code n}.  This method
forwards the new value to the model.
<p>
The data model (an instance of {@code BoundedRangeModel})
handles any mathematical
issues arising from assigning faulty values.  See the
{@code BoundedRangeModel} documentation for details.
<p>
If the new value is different from the previous value,
all change listeners are notified.

@param   n       the new value
@see     #getValue
@see     #addChangeListener
@see     BoundedRangeModel#setValue
@beaninfo
   preferred: true
 description: The progress bar's current value.
"
      end

      operation 10674434 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the progress bar's minimum value
(stored in the progress bar's data model) to <code>n</code>.
<p>
The data model (a <code>BoundedRangeModel</code> instance)
handles any mathematical
issues arising from assigning faulty values.
See the {@code BoundedRangeModel} documentation for details.
<p>
If the minimum value is different from the previous minimum,
all change listeners are notified.

@param  n       the new minimum
@see    #getMinimum
@see    #addChangeListener
@see    BoundedRangeModel#setMinimum
@beaninfo
 preferred: true
description: The progress bar's minimum value.
"
      end

      operation 10674562 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the progress bar's maximum value
(stored in the progress bar's data model) to <code>n</code>.
<p>
The underlying <code>BoundedRangeModel</code> handles any mathematical
issues arising from assigning faulty values.
See the {@code BoundedRangeModel} documentation for details.
<p>
If the maximum value is different from the previous maximum,
all change listeners are notified.

@param  n       the new maximum
@see    #getMaximum
@see    #addChangeListener
@see    BoundedRangeModel#setMaximum
@beaninfo
   preferred: true
 description: The progress bar's maximum value.
"
      end

      operation 10674690 "setIndeterminate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>indeterminate</code> property of the progress bar,
which determines whether the progress bar is in determinate
or indeterminate mode.
An indeterminate progress bar continuously displays animation
indicating that an operation of unknown length is occurring.
By default, this property is <code>false</code>.
Some look and feels might not support indeterminate progress bars;
they will ignore this property.

<p>

See
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html\" target=\"_top\">How to Monitor Progress</a>
for examples of using indeterminate progress bars.

@param newValue  <code>true</code> if the progress bar
                 should change to indeterminate mode;
                 <code>false</code> if it should revert to normal.

@see #isIndeterminate
@see javax.swing.plaf.basic.BasicProgressBarUI

@since 1.4

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Set whether the progress bar is indeterminate (true)
              or normal (false).
"
      end

      operation 10674818 "isIndeterminate"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>indeterminate</code> property.

@return the value of the <code>indeterminate</code> property
@see    #setIndeterminate

@since 1.4

@beaninfo
 description: Is the progress bar indeterminate (true)
              or normal (false)?
"
      end

      operation 10674946 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10675074 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JProgressBar</code>.
This method is intended to be used only for debugging purposes. The
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JProgressBar</code>
"
      end

      operation 10675202 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>JProgressBar</code>. For progress bars, the
<code>AccessibleContext</code> takes the form of an
<code>AccessibleJProgressBar</code>.
A new <code>AccessibleJProgressBar</code> instance is created if necessary.

@return an <code>AccessibleJProgressBar</code> that serves as the
        <code>AccessibleContext</code> of this <code>JProgressBar</code>
@beaninfo
      expert: true
 description: The AccessibleContext associated with this ProgressBar.
"
      end

      class 1286786 "AccessibleJProgressBar"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4140930 // <generalisation>
	  relation 4140930 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4140930 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4141058 // <realization>
	  relation 4141058 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4141058 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	operation 10675330 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.

@return an instance of AccessibleState containing the current state
of the object
@see AccessibleState
"
	end

	operation 10675458 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end

	operation 10675586 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>AccessibleValue</code> associated with this object.  In the
implementation of the Java Accessibility API for this class,
returns this object, which is responsible for implementing the
<code>AccessibleValue</code> interface on behalf of itself.

@return this object
"
	end

	operation 10675714 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the accessible value of this object.

@return the current value of this object
"
	end

	operation 10675842 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the value of this object as a <code>Number</code>.

@return <code>true</code> if the value was set
"
	end

	operation 10675970 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the minimum accessible value of this object.

@return the minimum value of this object
"
	end

	operation 10676098 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the maximum accessible value of this object.

@return the maximum value of this object
"
	end
      end
    end

    class 436098 "JScrollBar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a scrollbar. The user positions the knob in the
scrollbar to determine the contents of the viewing area. The
program typically adjusts the display so that the end of the
scrollbar represents the end of the displayable contents, or 100%
of the contents. The start of the scrollbar is the beginning of the
displayable contents, or 0%. The position of the knob within
those bounds then translates to the corresponding percentage of
the displayable contents.
<p>
Typically, as the position of the knob in the scrollbar changes
a corresponding change is made to the position of the JViewport on
the underlying view, changing the contents of the JViewport.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JScrollPane
@beaninfo
     attribute: isContainer false
   description: A component that helps determine the visible content range of an area.

@author David Kloba
"
      classrelation 4144258 // <generalisation>
	relation 4144258 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4144258 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4144386 // <realization>
	relation 4144386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4144386 // <realization>
	  b parent class_ref 855938 // Adjustable
      end

      classrelation 4144514 // <realization>
	relation 4144514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4144514 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4144642 // uiClassID (<unidirectional association>)
	relation 4144642 --->
	  a role_name "uiClassID" init_value " \"ScrollBarUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4144642 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4144770 // fwdAdjustmentEvents (<unidirectional association>)
	relation 4144770 --->
	  a role_name "fwdAdjustmentEvents" init_value " new ModelListener()" private
	    comment "
All changes from the model are treated as though the user moved
the scrollbar knob.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4144770 // fwdAdjustmentEvents (<unidirectional association>)
	  b parent class_ref 359426 // ChangeListener
      end

      classrelation 4144898 // model (<unidirectional association>)
	relation 4144898 --->
	  a role_name "model" protected
	    comment "
The model that represents the scrollbar's minimum, maximum, extent
(aka \"visibleAmount\") and current value.
@see #setModel

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4144898 // model (<unidirectional association>)
	  b parent class_ref 429954 // BoundedRangeModel
      end

      attribute 2419842 "orientation"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@see #setOrientation

"
      end

      attribute 2419970 "unitIncrement"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@see #setUnitIncrement

"
      end

      attribute 2420098 "blockIncrement"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@see #setBlockIncrement

"
      end

      operation 10686466 "checkOrientation"
	private explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10686594 "JScrollBar"
	public explicit_return_type ""
	nparams 5
	  param in name "orientation" explicit_type "int"
	  param in name "value" explicit_type "int"
	  param in name "extent" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a scrollbar with the specified orientation,
value, extent, minimum, and maximum.
The \"extent\" is the size of the viewable area. It is also known
as the \"visible amount\".
<p>
Note: Use <code>setBlockIncrement</code> to set the block
increment to a size slightly smaller than the view's extent.
That way, when the user jumps the knob to an adjacent position,
one or two lines of the original contents remain in view.

@exception IllegalArgumentException if orientation is not one of VERTICAL, HORIZONTAL

@see #setOrientation
@see #setValue
@see #setVisibleAmount
@see #setMinimum
@see #setMaximum
"
      end

      operation 10686722 "JScrollBar"
	public explicit_return_type ""
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a scrollbar with the specified orientation
and the following initial values:
<pre>
minimum = 0
maximum = 100
value = 0
extent = 10
</pre>
"
      end

      operation 10686850 "JScrollBar"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a vertical scrollbar with the following initial values:
<pre>
minimum = 0
maximum = 100
value = 0
extent = 10
</pre>
"
      end

      operation 10686978 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 435970 // ScrollBarUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@literal L&F} object that renders this component.

@param ui  the <code>ScrollBarUI</code> {@literal L&F} object
@see UIDefaults#getUI
@since 1.4
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel
"
      end

      operation 10687106 "getUI"
	public return_type class_ref 435970 // ScrollBarUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the delegate that implements the look and feel for
this component.

@see JComponent#setUI
"
      end

      operation 10687234 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>JComponent.updateUI</code>.
@see JComponent#updateUI
"
      end

      operation 10687362 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the LookAndFeel class for this component.

@return \"ScrollBarUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10687490 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component's orientation (horizontal or vertical).

@return VERTICAL or HORIZONTAL
@see #setOrientation
@see java.awt.Adjustable#getOrientation
"
      end

      operation 10687618 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the scrollbar's orientation to either VERTICAL or
HORIZONTAL.

@exception IllegalArgumentException if orientation is not one of VERTICAL, HORIZONTAL
@see #getOrientation
@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: The scrollbar's orientation.
        enum: VERTICAL JScrollBar.VERTICAL
              HORIZONTAL JScrollBar.HORIZONTAL
"
      end

      operation 10687746 "getModel"
	public return_type class_ref 429954 // BoundedRangeModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns data model that handles the scrollbar's four
fundamental properties: minimum, maximum, value, extent.

@see #setModel
"
      end

      operation 10687874 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 429954 // BoundedRangeModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model that handles the scrollbar's four
fundamental properties: minimum, maximum, value, extent.

@see #getModel
@beaninfo
      bound: true
      expert: true
description: The scrollbar's BoundedRangeModel.
"
      end

      operation 10688002 "getUnitIncrement"
	public explicit_return_type "int"
	nparams 1
	  param in name "direction" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount to change the scrollbar's value by,
given a unit up/down request.  A ScrollBarUI implementation
typically calls this method when the user clicks on a scrollbar
up/down arrow and uses the result to update the scrollbar's
value.   Subclasses my override this method to compute
a value, e.g. the change required to scroll up or down one
(variable height) line text or one row in a table.
<p>
The JScrollPane component creates scrollbars (by default)
that override this method and delegate to the viewports
Scrollable view, if it has one.  The Scrollable interface
provides a more specialized version of this method.
<p>
Some look and feels implement custom scrolling behavior
and ignore this property.

@param direction is -1 or 1 for up/down respectively
@return the value of the unitIncrement property
@see #setUnitIncrement
@see #setValue
@see Scrollable#getScrollableUnitIncrement
"
      end

      operation 10688130 "setUnitIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "unitIncrement" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unitIncrement property.
<p>
Note, that if the argument is equal to the value of Integer.MIN_VALUE,
the most look and feels will not provide the scrolling to the right/down.
<p>
Some look and feels implement custom scrolling behavior
and ignore this property.

@see #getUnitIncrement
@beaninfo
  preferred: true
      bound: true
description: The scrollbar's unit increment.
"
      end

      operation 10688258 "getBlockIncrement"
	public explicit_return_type "int"
	nparams 1
	  param in name "direction" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount to change the scrollbar's value by,
given a block (usually \"page\") up/down request.  A ScrollBarUI
implementation typically calls this method when the user clicks
above or below the scrollbar \"knob\" to change the value
up or down by large amount.  Subclasses my override this
method to compute a value, e.g. the change required to scroll
up or down one paragraph in a text document.
<p>
The JScrollPane component creates scrollbars (by default)
that override this method and delegate to the viewports
Scrollable view, if it has one.  The Scrollable interface
provides a more specialized version of this method.
<p>
Some look and feels implement custom scrolling behavior
and ignore this property.

@param direction is -1 or 1 for up/down respectively
@return the value of the blockIncrement property
@see #setBlockIncrement
@see #setValue
@see Scrollable#getScrollableBlockIncrement
"
      end

      operation 10688386 "setBlockIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "blockIncrement" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the blockIncrement property.
<p>
Note, that if the argument is equal to the value of Integer.MIN_VALUE,
the most look and feels will not provide the scrolling to the right/down.
<p>
Some look and feels implement custom scrolling behavior
and ignore this property.

@see #getBlockIncrement()
@beaninfo
  preferred: true
      bound: true
description: The scrollbar's block increment.
"
      end

      operation 10688514 "getUnitIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For backwards compatibility with java.awt.Scrollbar.
@see Adjustable#getUnitIncrement
@see #getUnitIncrement(int)
"
      end

      operation 10688642 "getBlockIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For backwards compatibility with java.awt.Scrollbar.
@see Adjustable#getBlockIncrement
@see #getBlockIncrement(int)
"
      end

      operation 10688770 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the scrollbar's value.
@return the model's value property
@see #setValue
"
      end

      operation 10688898 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the scrollbar's value.  This method just forwards the value
to the model.

@see #getValue
@see BoundedRangeModel#setValue
@beaninfo
  preferred: true
description: The scrollbar's current value.
"
      end

      operation 10689026 "getVisibleAmount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the scrollbar's extent, aka its \"visibleAmount\".  In many
scrollbar look and feel implementations the size of the
scrollbar \"knob\" or \"thumb\" is proportional to the extent.

@return the value of the model's extent property
@see #setVisibleAmount
"
      end

      operation 10689154 "setVisibleAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "extent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the model's extent property.

@see #getVisibleAmount
@see BoundedRangeModel#setExtent
@beaninfo
  preferred: true
description: The amount of the view that is currently visible.
"
      end

      operation 10689282 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value supported by the scrollbar
(usually zero).

@return the value of the model's minimum property
@see #setMinimum
"
      end

      operation 10689410 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "minimum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's minimum property.

@see #getMinimum
@see BoundedRangeModel#setMinimum
@beaninfo
  preferred: true
description: The scrollbar's minimum value.
"
      end

      operation 10689538 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The maximum value of the scrollbar is maximum - extent.

@return the value of the model's maximum property
@see #setMaximum
"
      end

      operation 10689666 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "maximum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's maximum property.  Note that the scrollbar's value
can only be set to maximum - extent.

@see #getMaximum
@see BoundedRangeModel#setMaximum
@beaninfo
  preferred: true
description: The scrollbar's maximum value.
"
      end

      operation 10689794 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "True if the scrollbar knob is being dragged.

@return the value of the model's valueIsAdjusting property
@see #setValueIsAdjusting
"
      end

      operation 10689922 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's valueIsAdjusting property.  Scrollbar look and
feel implementations should set this property to true when
a knob drag begins, and to false when the drag ends.  The
scrollbar model will not generate ChangeEvents while
valueIsAdjusting is true.

@see #getValueIsAdjusting
@see BoundedRangeModel#setValueIsAdjusting
@beaninfo
     expert: true
description: True if the scrollbar thumb is being dragged.
"
      end

      operation 10690050 "setValues"
	public explicit_return_type "void"
	nparams 4
	  param in name "newValue" explicit_type "int"
	  param in name "newExtent" explicit_type "int"
	  param in name "newMin" explicit_type "int"
	  param in name "newMax" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the four BoundedRangeModel properties after forcing
the arguments to obey the usual constraints:
<pre>
minimum &le; value &le; value+extent &le; maximum
</pre>


@see BoundedRangeModel#setRangeProperties
@see #setValue
@see #setVisibleAmount
@see #setMinimum
@see #setMaximum
"
      end

      operation 10690178 "addAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an AdjustmentListener.  Adjustment listeners are notified
each time the scrollbar's model changes.  Adjustment events are
provided for backwards compatibility with java.awt.Scrollbar.
<p>
Note that the AdjustmentEvents type property will always have a
placeholder value of AdjustmentEvent.TRACK because all changes
to a BoundedRangeModels value are considered equivalent.  To change
the value of a BoundedRangeModel one just sets its value property,
i.e. model.setValue(123).  No information about the origin of the
change, e.g. it's a block decrement, is provided.  We don't try
fabricate the origin of the change here.

@param l the AdjustmentLister to add
@see #removeAdjustmentListener
@see BoundedRangeModel#addChangeListener
"
      end

      operation 10690306 "removeAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an AdjustmentEvent listener.

@param l the AdjustmentLister to remove
@see #addAdjustmentListener
"
      end

      operation 10690434 "getAdjustmentListeners"
	public return_type class_ref 856066 // AdjustmentListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>AdjustmentListener</code>s added
to this JScrollBar with addAdjustmentListener().

@return all of the <code>AdjustmentListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10690562 "fireAdjustmentValueChanged"
	protected explicit_return_type "void"
	nparams 3
	  param in name "id" explicit_type "int"
	  param in name "type" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify listeners that the scrollbar's model has changed.

@see #addAdjustmentListener
@see EventListenerList
"
      end

      operation 10690690 "fireAdjustmentValueChanged"
	private explicit_return_type "void"
	nparams 4
	  param in name "id" explicit_type "int"
	  param in name "type" explicit_type "int"
	  param in name "value" explicit_type "int"
	  param inout name "isAdjusting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify listeners that the scrollbar's model has changed.

@see #addAdjustmentListener
@see EventListenerList
"
      end

      class 1287682 "ModelListener"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4145026 // <realization>
	  relation 4145026 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4145026 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4145154 // <realization>
	  relation 4145154 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4145154 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10690818 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10690946 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PENDING(hmuller) - the next three methods should be removed

The scrollbar is flexible along it's scrolling axis and
rigid along the other axis.
"
      end

      operation 10691074 "getMaximumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The scrollbar is flexible along it's scrolling axis and
rigid along the other axis.
"
      end

      operation 10691202 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the component so that the knob position can be changed.
When the disabled, the knob position cannot be changed.

@param x a boolean value, where true enables the component and
         false disables it
"
      end

      operation 10691330 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10691458 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JScrollBar. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JScrollBar.
"
      end

      operation 10691586 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JScrollBar.
For JScrollBar, the AccessibleContext takes the form of an
AccessibleJScrollBar.
A new AccessibleJScrollBar instance is created if necessary.

@return an AccessibleJScrollBar that serves as the
        AccessibleContext of this JScrollBar
"
      end

      class 1287810 "AccessibleJScrollBar"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4145282 // <generalisation>
	  relation 4145282 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4145282 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4145410 // <realization>
	  relation 4145410 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4145410 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	operation 10691714 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state set of this object.

@return an instance of AccessibleState containing the current state
of the object
@see AccessibleState
"
	end

	operation 10691842 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end

	operation 10691970 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 10692098 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible value of this object.

@return The current value of this object.
"
	end

	operation 10692226 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return True if the value was set.
"
	end

	operation 10692354 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum accessible value of this object.

@return The minimum value of this object.
"
	end

	operation 10692482 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum accessible value of this object.

@return The maximum value of this object.
"
	end
      end
    end

    class 437506 "ScrollPaneConstants"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Constants used with the JScrollPane component.

@author Hans Muller
"
      classrelation 834434 // VIEWPORT (<unidirectional association>)
	relation 834434 --->
	  a role_name "VIEWPORT" init_value " \"VIEWPORT\"" public
	    comment "
Identifies a \"viewport\" or display area, within which
scrolled contents are visible.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 834434 // VIEWPORT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 834562 // VERTICAL_SCROLLBAR (<unidirectional association>)
	relation 834562 --->
	  a role_name "VERTICAL_SCROLLBAR" init_value " \"VERTICAL_SCROLLBAR\"" public
	    comment " Identifies a vertical scrollbar. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 834562 // VERTICAL_SCROLLBAR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 834690 // HORIZONTAL_SCROLLBAR (<unidirectional association>)
	relation 834690 --->
	  a role_name "HORIZONTAL_SCROLLBAR" init_value " \"HORIZONTAL_SCROLLBAR\"" public
	    comment " Identifies a horizontal scrollbar. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 834690 // HORIZONTAL_SCROLLBAR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 834818 // ROW_HEADER (<unidirectional association>)
	relation 834818 --->
	  a role_name "ROW_HEADER" init_value " \"ROW_HEADER\"" public
	    comment "
Identifies the area along the left side of the viewport between the
upper left corner and the lower left corner.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 834818 // ROW_HEADER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 834946 // COLUMN_HEADER (<unidirectional association>)
	relation 834946 --->
	  a role_name "COLUMN_HEADER" init_value " \"COLUMN_HEADER\"" public
	    comment "
Identifies the area at the top the viewport between the
upper left corner and the upper right corner.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 834946 // COLUMN_HEADER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835074 // LOWER_LEFT_CORNER (<unidirectional association>)
	relation 835074 --->
	  a role_name "LOWER_LEFT_CORNER" init_value " \"LOWER_LEFT_CORNER\"" public
	    comment " Identifies the lower left corner of the viewport. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835074 // LOWER_LEFT_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835202 // LOWER_RIGHT_CORNER (<unidirectional association>)
	relation 835202 --->
	  a role_name "LOWER_RIGHT_CORNER" init_value " \"LOWER_RIGHT_CORNER\"" public
	    comment " Identifies the lower right corner of the viewport. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835202 // LOWER_RIGHT_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835330 // UPPER_LEFT_CORNER (<unidirectional association>)
	relation 835330 --->
	  a role_name "UPPER_LEFT_CORNER" init_value " \"UPPER_LEFT_CORNER\"" public
	    comment " Identifies the upper left corner of the viewport. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835330 // UPPER_LEFT_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835458 // UPPER_RIGHT_CORNER (<unidirectional association>)
	relation 835458 --->
	  a role_name "UPPER_RIGHT_CORNER" init_value " \"UPPER_RIGHT_CORNER\"" public
	    comment " Identifies the upper right corner of the viewport. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835458 // UPPER_RIGHT_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835586 // LOWER_LEADING_CORNER (<unidirectional association>)
	relation 835586 --->
	  a role_name "LOWER_LEADING_CORNER" init_value " \"LOWER_LEADING_CORNER\"" public
	    comment " Identifies the lower leading edge corner of the viewport. The leading edge
is determined relative to the Scroll Pane's ComponentOrientation property.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835586 // LOWER_LEADING_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835714 // LOWER_TRAILING_CORNER (<unidirectional association>)
	relation 835714 --->
	  a role_name "LOWER_TRAILING_CORNER" init_value " \"LOWER_TRAILING_CORNER\"" public
	    comment " Identifies the lower trailing edge corner of the viewport. The trailing edge
is determined relative to the Scroll Pane's ComponentOrientation property.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835714 // LOWER_TRAILING_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835842 // UPPER_LEADING_CORNER (<unidirectional association>)
	relation 835842 --->
	  a role_name "UPPER_LEADING_CORNER" init_value " \"UPPER_LEADING_CORNER\"" public
	    comment " Identifies the upper leading edge corner of the viewport.  The leading edge
is determined relative to the Scroll Pane's ComponentOrientation property.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835842 // UPPER_LEADING_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 835970 // UPPER_TRAILING_CORNER (<unidirectional association>)
	relation 835970 --->
	  a role_name "UPPER_TRAILING_CORNER" init_value " \"UPPER_TRAILING_CORNER\"" public
	    comment " Identifies the upper trailing edge corner of the viewport. The trailing edge
is determined relative to the Scroll Pane's ComponentOrientation property.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 835970 // UPPER_TRAILING_CORNER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 836098 // VERTICAL_SCROLLBAR_POLICY (<unidirectional association>)
	relation 836098 --->
	  a role_name "VERTICAL_SCROLLBAR_POLICY" init_value " \"VERTICAL_SCROLLBAR_POLICY\"" public
	    comment " Identifies the vertical scroll bar policy property. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 836098 // VERTICAL_SCROLLBAR_POLICY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 836226 // HORIZONTAL_SCROLLBAR_POLICY (<unidirectional association>)
	relation 836226 --->
	  a role_name "HORIZONTAL_SCROLLBAR_POLICY" init_value " \"HORIZONTAL_SCROLLBAR_POLICY\"" public
	    comment " Identifies the horizontal scroll bar policy property. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 836226 // HORIZONTAL_SCROLLBAR_POLICY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 551810 "VERTICAL_SCROLLBAR_AS_NEEDED"
	public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to set the vertical scroll bar policy so that
vertical scrollbars are displayed only when needed.

"
      end

      attribute 551938 "VERTICAL_SCROLLBAR_NEVER"
	public explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to set the vertical scroll bar policy so that
vertical scrollbars are never displayed.

"
      end

      attribute 552066 "VERTICAL_SCROLLBAR_ALWAYS"
	public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to set the vertical scroll bar policy so that
vertical scrollbars are always displayed.

"
      end

      attribute 552194 "HORIZONTAL_SCROLLBAR_AS_NEEDED"
	public explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to set the horizontal scroll bar policy so that
horizontal scrollbars are displayed only when needed.

"
      end

      attribute 552322 "HORIZONTAL_SCROLLBAR_NEVER"
	public explicit_type "int"
	init_value " 31"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to set the horizontal scroll bar policy so that
horizontal scrollbars are never displayed.

"
      end

      attribute 552450 "HORIZONTAL_SCROLLBAR_ALWAYS"
	public explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to set the horizontal scroll bar policy so that
horizontal scrollbars are always displayed.

"
      end
    end

    class 438530 "JViewport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The \"viewport\" or \"porthole\" through which you see the underlying
information. When you scroll, what moves is the viewport. It is like
peering through a camera's viewfinder. Moving the viewfinder upwards
brings new things into view at the top of the picture and loses
things that were at the bottom.
<p>
By default, <code>JViewport</code> is opaque. To change this, use the
<code>setOpaque</code> method.
<p>
<b>NOTE:</b>We have implemented a faster scrolling algorithm that
does not require a buffer to draw in. The algorithm works as follows:
<ol><li>The view and parent view and checked to see if they are
<code>JComponents</code>,
if they aren't, stop and repaint the whole viewport.
<li>If the viewport is obscured by an ancestor, stop and repaint the whole
viewport.
<li>Compute the region that will become visible, if it is as big as
the viewport, stop and repaint the whole view region.
<li>Obtain the ancestor <code>Window</code>'s graphics and
do a <code>copyArea</code> on the scrolled region.
<li>Message the view to repaint the newly visible region.
<li>The next time paint is invoked on the viewport, if the clip region
is smaller than the viewport size a timer is kicked off to repaint the
whole region.
</ol>
In general this approach is much faster. Compared to the backing store
approach this avoids the overhead of maintaining an offscreen buffer and
having to do two <code>copyArea</code>s.
Compared to the non backing store case this
approach will greatly reduce the painted region.
<p>
This approach can cause slower times than the backing store approach
when the viewport is obscured by another window, or partially offscreen.
When another window
obscures the viewport the copyArea will copy garbage and a
paint event will be generated by the system to inform us we need to
paint the newly exposed region. The only way to handle this is to
repaint the whole viewport, which can cause slower performance than the
backing store case. In most applications very rarely will the user be
scrolling while the viewport is obscured by another window or offscreen,
so this optimization is usually worth the performance hit when obscured.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Hans Muller
@author Philip Milne
@see JScrollPane
"
      classrelation 863618 // <generalisation>
	relation 863618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 863618 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 863746 // <realization>
	relation 863746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 863746 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 863874 // uiClassID (<unidirectional association>)
	relation 863874 --->
	  a role_name "uiClassID" init_value " \"ViewportUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 863874 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 864002 // EnableWindowBlit (<unidirectional association>)
	relation 864002 --->
	  a role_name "EnableWindowBlit" init_value " \"EnableWindowBlit\"" class_relation const_relation package
	    comment " Property used to indicate window blitting should not be done.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 864002 // EnableWindowBlit (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 562690 "isViewSizeSet"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True when the viewport dimensions have been determined.
The default is false.

"
      end

      classrelation 864130 // lastPaintPosition (<unidirectional association>)
	relation 864130 --->
	  a role_name "lastPaintPosition" init_value " null" protected
	    comment "
The last <code>viewPosition</code> that we've painted, so we know how
much of the backing store image is valid.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 864130 // lastPaintPosition (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      attribute 562818 "backingStore"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True when this viewport is maintaining an offscreen image of its
contents, so that some scrolling can take place using fast \"bit-blit\"
operations instead of by accessing the view object to construct the
display.  The default is <code>false</code>.

@deprecated As of Java 2 platform v1.3
@see #setScrollMode

"
      end

      classrelation 864258 // backingStoreImage (<unidirectional association>)
	relation 864258 --->
	  a role_name "backingStoreImage" init_value " null" protected
	    comment " The view image used for a backing store. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 864258 // backingStoreImage (<unidirectional association>)
	  b parent class_ref 340098 // Image
      end

      attribute 562946 "scrollUnderway"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <code>scrollUnderway</code> flag is used for components like
<code>JList</code>.  When the downarrow key is pressed on a
<code>JList</code> and the selected
cell is the last in the list, the <code>scrollpane</code> autoscrolls.
Here, the old selected cell needs repainting and so we need
a flag to make the viewport do the optimized painting
only when there is an explicit call to
<code>setViewPosition(Point)</code>.
When <code>setBounds</code> is called through other routes,
the flag is off and the view repaints normally.  Another approach
would be to remove this from the <code>JViewport</code>
class and have the <code>JList</code> manage this case by using
<code>setBackingStoreEnabled</code>.  The default is
<code>false</code>.

"
      end

      classrelation 864386 // viewListener (<unidirectional association>)
	relation 864386 --->
	  a role_name "viewListener" init_value " null" private
	    comment "
Listener that is notified each time the view changes size.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 864386 // viewListener (<unidirectional association>)
	  b parent class_ref 341890 // ComponentListener
      end

      classrelation 864514 // changeEvent (<unidirectional association>)
	relation 864514 --->
	  a role_name "changeEvent" init_value " null" private
	    comment " Only one <code>ChangeEvent</code> is needed per
<code>JViewport</code> instance since the
event's only (read-only) state is the source property.  The source
of events generated here is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 864514 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      attribute 563074 "BLIT_SCROLL_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use <code>graphics.copyArea</code> to implement scrolling.
This is the fastest for most applications.

@see #setScrollMode
@since 1.3

"
      end

      attribute 563202 "BACKINGSTORE_SCROLL_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Draws viewport contents into an offscreen image.
This was previously the default mode for <code>JTable</code>.
This mode may offer advantages over \"blit mode\"
in some cases, but it requires a large chunk of extra RAM.

@see #setScrollMode
@since 1.3

"
      end

      attribute 563330 "SIMPLE_SCROLL_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This mode uses the very simple method of redrawing the entire
contents of the scrollpane each time it is scrolled.
This was the default behavior in Swing 1.0 and Swing 1.1.
Either of the other two options will provide better performance
in most cases.

@see #setScrollMode
@since 1.3

"
      end

      attribute 563458 "scrollMode"
	private explicit_type "int"
	init_value " BLIT_SCROLL_MODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@see #setScrollMode
@since 1.3

"
      end

      attribute 563586 "repaintAll"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Window blitting:

 As mentioned in the javadoc when using windowBlit a paint event
 will be generated by the system if copyArea copies a non-visible
 portion of the view (in other words, it copies garbage). We are
 not guaranteed to receive the paint event before other mouse events,
 so we can not be sure we haven't already copied garbage a bunch of
 times to different parts of the view. For that reason when a blit
 happens and the Component is obscured (the check for obscurity
 is not supported on all platforms and is checked via ComponentPeer
 methods) the ivar repaintAll is set to true. When paint is received
 if repaintAll is true (we previously did a blit) it is set to
 false, and if the clip region is smaller than the viewport
 waitingForRepaint is set to true and a timer is started. When
 the timer fires if waitingForRepaint is true, repaint is invoked.
 In the mean time, if the view is asked to scroll and waitingForRepaint
 is true, a blit will not happen, instead the non-backing store case
 of scrolling will happen, which will reset waitingForRepaint.
 waitingForRepaint is set to false in paint when the clip rect is
 bigger (or equal) to the size of the viewport.
 A Timer is used instead of just a repaint as it appeared to offer
 better performance.

This is set to true in <code>setViewPosition</code>
if doing a window blit and the viewport is obscured.

"
      end

      attribute 563714 "waitingForRepaint"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is set to true in paint, if <code>repaintAll</code>
is true and the clip rectangle does not match the bounds.
If true, and scrolling happens the
repaint manager is not cleared which then allows for the repaint
previously invoked to succeed.

"
      end

      classrelation 864642 // repaintTimer (<unidirectional association>)
	relation 864642 --->
	  a role_name "repaintTimer" private
	    comment "
Instead of directly invoking repaint, a <code>Timer</code>
is started and when it fires, repaint is invoked.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 864642 // repaintTimer (<unidirectional association>)
	  b parent class_ref 354690 // Timer
      end

      attribute 563842 "inBlitPaint"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set to true in paintView when paint is invoked.

"
      end

      attribute 563970 "hasHadValidView"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not a valid view has been installed.

"
      end

      attribute 564098 "viewChanged"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When view is changed we have to synchronize scrollbar values
with viewport (see the BasicScrollPaneUI#syncScrollPaneWithViewport method).
This flag allows to invoke that method while ScrollPaneLayout#layoutContainer
is running.

"
      end

      operation 2675714 "JViewport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a <code>JViewport</code>. "
      end

      operation 2675842 "getUI"
	public return_type class_ref 445570 // ViewportUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the L&amp;F object that renders this component.

@return a <code>ViewportUI</code> object
@since 1.3
"
      end

      operation 2675970 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 445570 // ViewportUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the <code>ViewportUI</code> L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
@since 1.3
"
      end

      operation 2676098 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 2676226 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the L&amp;F class
that renders this component.

@return the string \"ViewportUI\"

@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 2676354 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "child" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>JViewport</code>'s one lightweight child,
which can be <code>null</code>.
(Since there is only one child which occupies the entire viewport,
the <code>constraints</code> and <code>index</code>
arguments are ignored.)

@param child       the lightweight <code>child</code> of the viewport
@param constraints the <code>constraints</code> to be respected
@param index       the index
@see #setView
"
      end

      operation 2676482 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "child" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the <code>Viewport</code>s one lightweight child.

@see #setView
"
      end

      operation 2676610 "scrollRectToVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentRect" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scrolls the view so that <code>Rectangle</code>
within the view becomes visible.
<p>
This attempts to validate the view before scrolling if the
view is currently not valid - <code>isValid</code> returns false.
To avoid excessive validation when the containment hierarchy is
being created this will not validate if one of the ancestors does not
have a peer, or there is no validate root ancestor, or one of the
ancestors is not a <code>Window</code> or <code>Applet</code>.
<p>
Note that this method will not scroll outside of the
valid viewport; for example, if <code>contentRect</code> is larger
than the viewport, scrolling will be confined to the viewport's
bounds.

@param contentRect the <code>Rectangle</code> to display
@see JComponent#isValidateRoot
@see java.awt.Component#isValid
@see java.awt.Component#getPeer
"
      end

      operation 2676738 "validateView"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ascends the <code>Viewport</code>'s parents stopping when
a component is found that returns
<code>true</code> to <code>isValidateRoot</code>.
If all the <code>Component</code>'s  parents are visible,
<code>validate</code> will then be invoked on it. The
<code>RepaintManager</code> is then invoked with
<code>removeInvalidComponent</code>. This
is the synchronous version of a <code>revalidate</code>.
"
      end

      operation 2676866 "positionAdjustment"
	private explicit_return_type "int"
	nparams 3
	  param in name "parentWidth" explicit_type "int"
	  param in name "childWidth" explicit_type "int"
	  param in name "childAt" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Used by the scrollRectToVisible method to determine the
 proper direction and amount to move by. The integer variables are named
 width, but this method is applicable to height also. The code assumes that
 parentWidth/childWidth are positive and childAt can be negative.
"
      end

      operation 2676994 "setBorder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "border" type class_ref 357122 // Border
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The viewport \"scrolls\" its child (called the \"view\") by the
normal parent/child clipping (typically the view is moved in
the opposite direction of the scroll).  A non-<code>null</code> border,
or non-zero insets, isn't supported, to prevent the geometry
of this component from becoming complex enough to inhibit
subclassing.  To create a <code>JViewport</code> with a border,
add it to a <code>JPanel</code> that has a border.
<p>Note:  If <code>border</code> is non-<code>null</code>, this
method will throw an exception as borders are not supported on
a <code>JViewPort</code>.

@param border the <code>Border</code> to set
@exception IllegalArgumentException this method is not implemented
"
      end

      operation 2677122 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the insets (border) dimensions as (0,0,0,0), since borders
are not supported on a <code>JViewport</code>.

@return a <code>Rectangle</code> of zero dimension and zero origin
@see #setBorder
"
      end

      operation 2677250 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 1
	  param inout name "insets" type class_ref 343938 // Insets
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Insets</code> object containing this
<code>JViewport</code>s inset values.  The passed-in
<code>Insets</code> object will be reinitialized, and
all existing values within this object are overwritten.

@param insets the <code>Insets</code> object which can be reused
@return this viewports inset values
@see #getInsets
@beaninfo
  expert: true
"
      end

      operation 2677378 "getBackingStoreGraphics"
	private return_type class_ref 343682 // Graphics
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2677506 "paintViaBackingStore"
	private explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2677634 "paintViaBackingStore"
	private explicit_return_type "void"
	nparams 2
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "oClip" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2677762 "isOptimizedDrawingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>JViewport</code> overrides the default implementation of
this method (in <code>JComponent</code>) to return false.
This ensures
that the drawing machinery will call the <code>Viewport</code>'s
<code>paint</code>
implementation rather than messaging the <code>JViewport</code>'s
children directly.

@return false
"
      end

      operation 2677890 "isPaintingOrigin"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if scroll mode is a {@code BACKINGSTORE_SCROLL_MODE} to cause
painting to originate from {@code JViewport}, or one of its
ancestors. Otherwise returns {@code false}.

@return true if if scroll mode is a {@code BACKINGSTORE_SCROLL_MODE}.
@see JComponent#isPaintingOrigin()
"
      end

      operation 2678018 "getViewLocation"
	private return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only used by the paint method below.
"
      end

      operation 2678146 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Depending on whether the <code>backingStore</code> is enabled,
either paint the image through the backing store or paint
just the recently exposed part, using the backing store
to \"blit\" the remainder.
<blockquote>
The term \"blit\" is the pronounced version of the PDP-10
BLT (BLock Transfer) instruction, which copied a block of
bits. (In case you were curious.)
</blockquote>

@param g the <code>Graphics</code> context within which to paint
"
      end

      operation 2678274 "reshape"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bounds of this viewport.  If the viewport's width
or height has changed, fire a <code>StateChanged</code> event.

@param x left edge of the origin
@param y top edge of the origin
@param w width in pixels
@param h height in pixels

@see JComponent#reshape(int, int, int, int)
"
      end

      operation 2678402 "setScrollMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to control the method of scrolling the viewport contents.
You may want to change this mode to get maximum performance for your
use case.

@param mode one of the following values:
<ul>
<li> JViewport.BLIT_SCROLL_MODE
<li> JViewport.BACKINGSTORE_SCROLL_MODE
<li> JViewport.SIMPLE_SCROLL_MODE
</ul>

@see #BLIT_SCROLL_MODE
@see #BACKINGSTORE_SCROLL_MODE
@see #SIMPLE_SCROLL_MODE

@beaninfo
       bound: false
 description: Method of moving contents for incremental scrolls.
        enum: BLIT_SCROLL_MODE JViewport.BLIT_SCROLL_MODE
              BACKINGSTORE_SCROLL_MODE JViewport.BACKINGSTORE_SCROLL_MODE
              SIMPLE_SCROLL_MODE JViewport.SIMPLE_SCROLL_MODE

@since 1.3
"
      end

      operation 2678530 "getScrollMode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current scrolling mode.

@return the <code>scrollMode</code> property
@see #setScrollMode
@since 1.3
"
      end

      operation 2678658 "isBackingStoreEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns <code>true</code> if this viewport is maintaining
an offscreen image of its contents.

@return <code>true</code> if <code>scrollMode</code> is
   <code>BACKINGSTORE_SCROLL_MODE</code>

@deprecated As of Java 2 platform v1.3, replaced by
            <code>getScrollMode()</code>.
"
      end

      operation 2678786 "setBackingStoreEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "If true if this viewport will maintain an offscreen
image of its contents.  The image is used to reduce the cost
of small one dimensional changes to the <code>viewPosition</code>.
Rather than repainting the entire viewport we use
<code>Graphics.copyArea</code> to effect some of the scroll.

@param enabled if true, maintain an offscreen backing store

@deprecated As of Java 2 platform v1.3, replaced by
            <code>setScrollMode()</code>.
"
      end

      operation 2678914 "isBlitting"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2679042 "getView"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JViewport</code>'s one child or <code>null</code>.

@return the viewports child, or <code>null</code> if none exists

@see #setView
"
      end

      operation 2679170 "setView"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>JViewport</code>'s one lightweight child
(<code>view</code>), which can be <code>null</code>.

@param view the viewport's new lightweight child

@see #getView
"
      end

      operation 2679298 "getViewSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the view's size hasn't been explicitly set, return the
preferred size, otherwise return the view's current size.
If there is no view, return 0,0.

@return a <code>Dimension</code> object specifying the size of the view
"
      end

      operation 2679426 "setViewSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the view.  A state changed event will be fired.

@param newSize a <code>Dimension</code> object specifying the new
         size of the view
"
      end

      operation 2679554 "getViewPosition"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the view coordinates that appear in the upper left
hand corner of the viewport, or 0,0 if there's no view.

@return a <code>Point</code> object giving the upper left coordinates
"
      end

      operation 2679682 "setViewPosition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the view coordinates that appear in the upper left
hand corner of the viewport, does nothing if there's no view.

@param p  a <code>Point</code> object giving the upper left coordinates
"
      end

      operation 2679810 "getViewRect"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a rectangle whose origin is <code>getViewPosition</code>
and size is <code>getExtentSize</code>.
This is the visible part of the view, in view coordinates.

@return a <code>Rectangle</code> giving the visible part of
         the view using view coordinates.
"
      end

      operation 2679938 "computeBlit"
	protected explicit_return_type "boolean"
	nparams 6
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	  param inout name "blitFrom" type class_ref 323714 // Point
	  param inout name "blitTo" type class_ref 323714 // Point
	  param inout name "blitSize" type class_ref 316802 // Dimension
	  param inout name "blitPaint" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the parameters for a blit where the backing store image
currently contains <code>oldLoc</code> in the upper left hand corner
and we're scrolling to <code>newLoc</code>.
The parameters are modified
to return the values required for the blit.

@param dx  the horizontal delta
@param dy  the vertical delta
@param blitFrom the <code>Point</code> we're blitting from
@param blitTo the <code>Point</code> we're blitting to
@param blitSize the <code>Dimension</code> of the area to blit
@param blitPaint the area to blit
@return  true if the parameters are modified and we're ready to blit;
         false otherwise
"
      end

      operation 2680066 "getExtentSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the size of the visible part of the view in view coordinates.

@return a <code>Dimension</code> object giving the size of the view
"
      end

      operation 2680194 "toViewCoordinates"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "size" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a size in pixel coordinates to view coordinates.
Subclasses of viewport that support \"logical coordinates\"
will override this method.

@param size  a <code>Dimension</code> object using pixel coordinates
@return a <code>Dimension</code> object converted to view coordinates
"
      end

      operation 2680322 "toViewCoordinates"
	public return_type class_ref 323714 // Point
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a point in pixel coordinates to view coordinates.
Subclasses of viewport that support \"logical coordinates\"
will override this method.

@param p  a <code>Point</code> object using pixel coordinates
@return a <code>Point</code> object converted to view coordinates
"
      end

      operation 2680450 "setExtentSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newExtent" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the visible part of the view using view coordinates.

@param newExtent  a <code>Dimension</code> object specifying
         the size of the view
"
      end

      class 445698 "ViewListener"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 864770 // <generalisation>
	  relation 864770 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 864770 // <generalisation>
	    b parent class_ref 440194 // ComponentAdapter
	end

	classrelation 864898 // <realization>
	  relation 864898 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 864898 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 2680578 "componentResized"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 346242 // ComponentEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2680706 "createViewListener"
	protected return_type class_ref 445698 // ViewListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a listener for the view.
@return a <code>ViewListener</code>
"
      end

      operation 2680834 "createLayoutManager"
	protected return_type class_ref 349698 // LayoutManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclassers can override this to install a different
layout manager (or <code>null</code>) in the constructor.  Returns
the <code>LayoutManager</code> to install on the <code>JViewport</code>.

@return a <code>LayoutManager</code>
"
      end

      operation 2680962 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>ChangeListener</code> to the list that is
notified each time the view's
size, position, or the viewport's extent size has changed.

@param l the <code>ChangeListener</code> to add
@see #removeChangeListener
@see #setViewPosition
@see #setViewSize
@see #setExtentSize
"
      end

      operation 2681090 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code> from the list that's notified each
time the views size, position, or the viewports extent size
has changed.

@param l the <code>ChangeListener</code> to remove
@see #addChangeListener
"
      end

      operation 2681218 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this JViewport with addChangeListener().

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 2681346 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all <code>ChangeListeners</code> when the views
size, position, or the viewports extent size has changed.

@see #addChangeListener
@see #removeChangeListener
@see EventListenerList
"
      end

      operation 2681474 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "tm" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always repaint in the parents coordinate system to make sure
only one paint is performed by the <code>RepaintManager</code>.

@param     tm   maximum time in milliseconds before update
@param     x    the <code>x</code> coordinate (pixels over from left)
@param     y    the <code>y</code> coordinate (pixels down from top)
@param     w    the width
@param     h   the height
@see       java.awt.Component#update(java.awt.Graphics)
"
      end

      operation 2681602 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JViewport</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JViewport</code>
"
      end

      operation 2681730 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Following is used when doBlit is true.


Notifies listeners of a property change. This is subclassed to update
the <code>windowBlit</code> property.
(The <code>putClientProperty</code> property is final).

@param propertyName a string containing the property name
@param oldValue the old value of the property
@param newValue  the new value of the property
"
      end

      operation 2681858 "needsRepaintAfterBlit"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the component needs to be completely repainted after
a blit and a paint is received.
"
      end

      operation 2681986 "createRepaintTimer"
	private return_type class_ref 354690 // Timer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2682114 "flushViewDirtyRegion"
	private explicit_return_type "void"
	nparams 2
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "dirty" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the repaint manager has a dirty region for the view, the view is
asked to paint.

@param g  the <code>Graphics</code> context within which to paint
"
      end

      operation 2682242 "windowBlitPaint"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used when blitting.

@param g  the <code>Graphics</code> context within which to paint
@return true if blitting succeeded; otherwise false
"
      end

      operation 2682370 "blitDoubleBuffered"
	private explicit_return_type "void"
	nparams 12
	  param inout name "view" type class_ref 338434 // JComponent
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "clipX" explicit_type "int"
	  param in name "clipY" explicit_type "int"
	  param in name "clipW" explicit_type "int"
	  param in name "clipH" explicit_type "int"
	  param in name "blitFromX" explicit_type "int"
	  param in name "blitFromY" explicit_type "int"
	  param in name "blitToX" explicit_type "int"
	  param in name "blitToY" explicit_type "int"
	  param in name "blitW" explicit_type "int"
	  param in name "blitH" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: the code below uses paintForceDoubleBuffered for historical
 reasons.  If we're going to allow a blit we've already accounted for
 everything that paintImmediately and _paintImmediately does, for that
 reason we call into paintForceDoubleBuffered to diregard whether or
 not setDoubleBuffered(true) was invoked on the view.
"
      end

      operation 2682498 "paintView"
	private explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to paint the view, usually when <code>blitPaint</code>
can not blit.

@param g the <code>Graphics</code> context within which to paint
"
      end

      operation 2682626 "canUseWindowBlitter"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the viewport is not obscured by one of its ancestors,
or its ancestors children and if the viewport is showing. Blitting
when the view isn't showing will work,
or rather <code>copyArea</code> will work,
but will not produce the expected behavior.
"
      end

      operation 2682754 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JViewport.
For viewports, the AccessibleContext takes the form of an
AccessibleJViewport.
A new AccessibleJViewport instance is created if necessary.

@return an AccessibleJViewport that serves as the
        AccessibleContext of this JViewport
"
      end

      class 445826 "AccessibleJViewport"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 865026 // <generalisation>
	  relation 865026 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 865026 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 2682882 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of
the object
"
	end
      end
    end

    class 439298 "JSlider"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A component that lets the user graphically select a value by sliding
a knob within a bounded interval. The knob is always positioned
at the points that match integer values within the specified interval.
<p>
The slider can show both
major tick marks, and minor tick marks between the major ones.  The number of
values between the tick marks is controlled with
<code>setMajorTickSpacing</code> and <code>setMinorTickSpacing</code>.
Painting of tick marks is controlled by {@code setPaintTicks}.
<p>
Sliders can also print text labels at regular intervals (or at
arbitrary locations) along the slider track.  Painting of labels is
controlled by {@code setLabelTable} and {@code setPaintLabels}.
<p>
For further information and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/slider.html\">How to Use Sliders</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
     attribute: isContainer false
   description: A component that supports selecting a integer value from a range.

@author David Kloba
"
      classrelation 4148098 // <generalisation>
	relation 4148098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4148098 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4148226 // <realization>
	relation 4148226 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4148226 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      classrelation 4148354 // <realization>
	relation 4148354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4148354 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4148482 // uiClassID (<unidirectional association>)
	relation 4148482 --->
	  a role_name "uiClassID" init_value " \"SliderUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4148482 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2420866 "paintTicks"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2420994 "paintTrack"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2421122 "paintLabels"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2421250 "isInverted"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4148610 // sliderModel (<unidirectional association>)
	relation 4148610 --->
	  a role_name "sliderModel" protected
	    comment "
The data model that handles the numeric maximum value,
minimum value, and current-position value for the slider.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4148610 // sliderModel (<unidirectional association>)
	  b parent class_ref 429954 // BoundedRangeModel
      end

      attribute 2421378 "majorTickSpacing"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of values between the major tick marks -- the
larger marks that break up the minor tick marks.

"
      end

      attribute 2421506 "minorTickSpacing"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of values between the minor tick marks -- the
smaller marks that occur between the major tick marks.
@see #setMinorTickSpacing

"
      end

      attribute 2421634 "snapToTicks"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, the knob (and the data value it represents)
resolve to the closest tick mark next to where the user
positioned the knob.  The default is false.
@see #setSnapToTicks

"
      end

      attribute 2421762 "snapToValue"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, the knob (and the data value it represents)
resolve to the closest slider value next to where the user
positioned the knob.

"
      end

      attribute 2421890 "orientation"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether the slider is horizontal or vertical
The default is horizontal.

@see #setOrientation

"
      end

      classrelation 4148738 // labelTable (<unidirectional association>)
	relation 4148738 --->
	  a role_name "labelTable" private
	    comment "
{@code Dictionary} of what labels to draw at which values

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4148738 // labelTable (<unidirectional association>)
	  b parent class_ref 275970 // Dictionary
      end

      classrelation 4148866 // changeListener (<unidirectional association>)
	relation 4148866 --->
	  a role_name "changeListener" init_value " createChangeListener()" protected
	    comment "
The changeListener (no suffix) is the listener we add to the
slider's model.  This listener is initialized to the
{@code ChangeListener} returned from {@code createChangeListener},
which by default just forwards events
to {@code ChangeListener}s (if any) added directly to the slider.

@see #addChangeListener
@see #createChangeListener

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4148866 // changeListener (<unidirectional association>)
	  b parent class_ref 359426 // ChangeListener
      end

      classrelation 4148994 // changeEvent (<unidirectional association>)
	relation 4148994 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment "
Only one <code>ChangeEvent</code> is needed per slider instance since the
event's only (read-only) state is the source property.  The source
of events generated here is always \"this\". The event is lazily
created the first time that an event notification is fired.

@see #fireStateChanged

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4148994 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      operation 10699266 "checkOrientation"
	private explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10699394 "JSlider"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal slider with the range 0 to 100 and
an initial value of 50.
"
      end

      operation 10699522 "JSlider"
	public explicit_return_type ""
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a slider using the specified orientation with the
range {@code 0} to {@code 100} and an initial value of {@code 50}.
The orientation can be
either <code>SwingConstants.VERTICAL</code> or
<code>SwingConstants.HORIZONTAL</code>.

@param  orientation  the orientation of the slider
@throws IllegalArgumentException if orientation is not one of {@code VERTICAL}, {@code HORIZONTAL}
@see #setOrientation
"
      end

      operation 10699650 "JSlider"
	public explicit_return_type ""
	nparams 2
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal slider using the specified min and max
with an initial value equal to the average of the min plus max.
<p>
The <code>BoundedRangeModel</code> that holds the slider's data
handles any issues that may arise from improperly setting the
minimum and maximum values on the slider.  See the
{@code BoundedRangeModel} documentation for details.

@param min  the minimum value of the slider
@param max  the maximum value of the slider

@see BoundedRangeModel
@see #setMinimum
@see #setMaximum
"
      end

      operation 10699778 "JSlider"
	public explicit_return_type ""
	nparams 3
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal slider using the specified min, max and value.
<p>
The <code>BoundedRangeModel</code> that holds the slider's data
handles any issues that may arise from improperly setting the
minimum, initial, and maximum values on the slider.  See the
{@code BoundedRangeModel} documentation for details.

@param min  the minimum value of the slider
@param max  the maximum value of the slider
@param value  the initial value of the slider

@see BoundedRangeModel
@see #setMinimum
@see #setMaximum
@see #setValue
"
      end

      operation 10699906 "JSlider"
	public explicit_return_type ""
	nparams 4
	  param in name "orientation" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a slider with the specified orientation and the
specified minimum, maximum, and initial values.
The orientation can be
either <code>SwingConstants.VERTICAL</code> or
<code>SwingConstants.HORIZONTAL</code>.
<p>
The <code>BoundedRangeModel</code> that holds the slider's data
handles any issues that may arise from improperly setting the
minimum, initial, and maximum values on the slider.  See the
{@code BoundedRangeModel} documentation for details.

@param orientation  the orientation of the slider
@param min  the minimum value of the slider
@param max  the maximum value of the slider
@param value  the initial value of the slider

@throws IllegalArgumentException if orientation is not one of {@code VERTICAL}, {@code HORIZONTAL}

@see BoundedRangeModel
@see #setOrientation
@see #setMinimum
@see #setMaximum
@see #setValue
"
      end

      operation 10700034 "JSlider"
	public explicit_return_type ""
	nparams 1
	  param inout name "brm" type class_ref 429954 // BoundedRangeModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal slider using the specified
BoundedRangeModel.
"
      end

      operation 10700162 "getUI"
	public return_type class_ref 439042 // SliderUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the UI object which implements the L&amp;F for this component.

@return the SliderUI object that implements the Slider L&amp;F
"
      end

      operation 10700290 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 439042 // SliderUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the UI object which implements the L&amp;F for this component.

@param ui the SliderUI L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the slider's LookAndFeel.
"
      end

      operation 10700418 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10700546 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return \"SliderUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      class 1288194 "ModelListener"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4149122 // <realization>
	  relation 4149122 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4149122 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4149250 // <realization>
	  relation 4149250 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4149250 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10700674 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10700802 "createChangeListener"
	protected return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses that want to handle {@code ChangeEvent}s
from the model differently
can override this to return
an instance of a custom <code>ChangeListener</code> implementation.
The default {@code ChangeListener} simply calls the
{@code fireStateChanged} method to forward {@code ChangeEvent}s
to the {@code ChangeListener}s that have been added directly to the
slider.
@see #changeListener
@see #fireStateChanged
@see javax.swing.event.ChangeListener
@see javax.swing.BoundedRangeModel
"
      end

      operation 10700930 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a ChangeListener to the slider.

@param l the ChangeListener to add
@see #fireStateChanged
@see #removeChangeListener
"
      end

      operation 10701058 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a ChangeListener from the slider.

@param l the ChangeListener to remove
@see #fireStateChanged
@see #addChangeListener

"
      end

      operation 10701186 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this JSlider with addChangeListener().

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10701314 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a {@code ChangeEvent}, whose source is this {@code JSlider}, to
all {@code ChangeListener}s that have registered interest in
{@code ChangeEvent}s.
This method is called each time a {@code ChangeEvent} is received from
the model.
<p>
The event instance is created if necessary, and stored in
{@code changeEvent}.

@see #addChangeListener
@see EventListenerList
"
      end

      operation 10701442 "getModel"
	public return_type class_ref 429954 // BoundedRangeModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code BoundedRangeModel} that handles the slider's three
fundamental properties: minimum, maximum, value.

@return the data model for this component
@see #setModel
@see    BoundedRangeModel
"
      end

      operation 10701570 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 429954 // BoundedRangeModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code BoundedRangeModel} that handles the slider's three
fundamental properties: minimum, maximum, value.
<p>
Attempts to pass a {@code null} model to this method result in
undefined behavior, and, most likely, exceptions.

@param  newModel the new, {@code non-null} <code>BoundedRangeModel</code> to use

@see #getModel
@see    BoundedRangeModel
@beaninfo
      bound: true
description: The sliders BoundedRangeModel.
"
      end

      operation 10701698 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the slider's current value
from the {@code BoundedRangeModel}.

@return  the current value of the slider
@see     #setValue
@see     BoundedRangeModel#getValue
"
      end

      operation 10701826 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the slider's current value to {@code n}.  This method
forwards the new value to the model.
<p>
The data model (an instance of {@code BoundedRangeModel})
handles any mathematical
issues arising from assigning faulty values.  See the
{@code BoundedRangeModel} documentation for details.
<p>
If the new value is different from the previous value,
all change listeners are notified.

@param   n       the new value
@see     #getValue
@see     #addChangeListener
@see     BoundedRangeModel#setValue
@beaninfo
  preferred: true
description: The sliders current value.
"
      end

      operation 10701954 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value supported by the slider
from the <code>BoundedRangeModel</code>.

@return the value of the model's minimum property
@see #setMinimum
@see     BoundedRangeModel#getMinimum
"
      end

      operation 10702082 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "minimum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the slider's minimum value to {@code minimum}.  This method
forwards the new minimum value to the model.
<p>
The data model (an instance of {@code BoundedRangeModel})
handles any mathematical
issues arising from assigning faulty values.  See the
{@code BoundedRangeModel} documentation for details.
<p>
If the new minimum value is different from the previous minimum value,
all change listeners are notified.

@param minimum  the new minimum
@see #getMinimum
@see    #addChangeListener
@see BoundedRangeModel#setMinimum
@beaninfo
      bound: true
  preferred: true
description: The sliders minimum value.
"
      end

      operation 10702210 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value supported by the slider
from the <code>BoundedRangeModel</code>.

@return the value of the model's maximum property
@see #setMaximum
@see BoundedRangeModel#getMaximum
"
      end

      operation 10702338 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "maximum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the slider's maximum value to {@code maximum}.  This method
forwards the new maximum value to the model.
<p>
The data model (an instance of {@code BoundedRangeModel})
handles any mathematical
issues arising from assigning faulty values.  See the
{@code BoundedRangeModel} documentation for details.
<p>
If the new maximum value is different from the previous maximum value,
all change listeners are notified.

@param maximum  the new maximum
@see #getMaximum
@see #addChangeListener
@see BoundedRangeModel#setMaximum
@beaninfo
      bound: true
  preferred: true
description: The sliders maximum value.
"
      end

      operation 10702466 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code valueIsAdjusting} property from the model.  For
details on how this is used, see the {@code setValueIsAdjusting}
documentation.

@return the value of the model's {@code valueIsAdjusting} property
@see #setValueIsAdjusting
"
      end

      operation 10702594 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model's {@code valueIsAdjusting} property.  Slider look and
feel implementations should set this property to {@code true} when
a knob drag begins, and to {@code false} when the drag ends.

@param b the new value for the {@code valueIsAdjusting} property
@see   #getValueIsAdjusting
@see   BoundedRangeModel#setValueIsAdjusting
@beaninfo
     expert: true
description: True if the slider knob is being dragged.
"
      end

      operation 10702722 "getExtent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"extent\" from the <code>BoundedRangeModel</code>.
This represents the range of values \"covered\" by the knob.

@return an int representing the extent
@see #setExtent
@see BoundedRangeModel#getExtent
"
      end

      operation 10702850 "setExtent"
	public explicit_return_type "void"
	nparams 1
	  param in name "extent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the range \"covered\" by the knob.  Most look
and feel implementations will change the value by this amount
if the user clicks on either side of the knob.  This method just
forwards the new extent value to the model.
<p>
The data model (an instance of {@code BoundedRangeModel})
handles any mathematical
issues arising from assigning faulty values.  See the
{@code BoundedRangeModel} documentation for details.
<p>
If the new extent value is different from the previous extent value,
all change listeners are notified.

@param extent the new extent
@see   #getExtent
@see   BoundedRangeModel#setExtent
@beaninfo
     expert: true
description: Size of the range covered by the knob.
"
      end

      operation 10702978 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return this slider's vertical or horizontal orientation.
@return {@code SwingConstants.VERTICAL} or
 {@code SwingConstants.HORIZONTAL}
@see #setOrientation
"
      end

      operation 10703106 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the slider's orientation to either {@code SwingConstants.VERTICAL} or
{@code SwingConstants.HORIZONTAL}.

@param orientation {@code HORIZONTAL} or {@code VERTICAL}
@throws IllegalArgumentException if orientation is not one of {@code VERTICAL}, {@code HORIZONTAL}
@see #getOrientation
@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
 description: Set the scrollbars orientation to either VERTICAL or HORIZONTAL.
        enum: VERTICAL JSlider.VERTICAL
              HORIZONTAL JSlider.HORIZONTAL

"
      end

      operation 10703234 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@since 1.6
"
      end

      operation 10703362 "imageUpdate"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "infoflags" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.7
"
      end

      operation 10703490 "getLabelTable"
	public return_type class_ref 275970 // Dictionary
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the dictionary of what labels to draw at which values.

@return the <code>Dictionary</code> containing labels and
   where to draw them
"
      end

      operation 10703618 "setLabelTable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "labels" type class_ref 275970 // Dictionary
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to specify what label will be drawn at any given value.
The key-value pairs are of this format:
<code>{ Integer value, java.swing.JComponent label }</code>.
<p>
An easy way to generate a standard table of value labels is by using the
{@code createStandardLabels} method.
<p>
Once the labels have been set, this method calls {@link #updateLabelUIs}.
Note that the labels are only painted if the {@code paintLabels}
property is {@code true}.

@param labels new {@code Dictionary} of labels, or {@code null} to
       remove all labels
@see #createStandardLabels(int)
@see #getLabelTable
@see #setPaintLabels
@beaninfo
      hidden: true
       bound: true
   attribute: visualUpdate true
 description: Specifies what labels will be drawn for any given value.
"
      end

      operation 10703746 "updateLabelUIs"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the UIs for the labels in the label table by calling
{@code updateUI} on each label.  The UIs are updated from
the current look and feel.  The labels are also set to their
preferred size.

@see #setLabelTable
@see JComponent#updateUI
"
      end

      operation 10703874 "updateLabelSizes"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10704002 "createStandardLabels"
	public return_type class_ref 137090 // Hashtable
	nparams 1
	  param in name "increment" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Hashtable} of numerical text labels, starting at the
slider minimum, and using the increment specified.
For example, if you call <code>createStandardLabels( 10 )</code>
and the slider minimum is zero,
then labels will be created for the values 0, 10, 20, 30, and so on.
<p>
For the labels to be drawn on the slider, the returned {@code Hashtable}
must be passed into {@code setLabelTable}, and {@code setPaintLabels}
must be set to {@code true}.
<p>
For further details on the makeup of the returned {@code Hashtable}, see
the {@code setLabelTable} documentation.

@param  increment  distance between labels in the generated hashtable
@return a new {@code Hashtable} of labels
@see #setLabelTable
@see #setPaintLabels
@throws IllegalArgumentException if {@code increment} is less than or
         equal to zero
"
      end

      operation 10704130 "createStandardLabels"
	public return_type class_ref 137090 // Hashtable
	nparams 2
	  param in name "increment" explicit_type "int"
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code Hashtable} of numerical text labels, starting at the
starting point specified, and using the increment specified.
For example, if you call
<code>createStandardLabels( 10, 2 )</code>,
then labels will be created for the values 2, 12, 22, 32, and so on.
<p>
For the labels to be drawn on the slider, the returned {@code Hashtable}
must be passed into {@code setLabelTable}, and {@code setPaintLabels}
must be set to {@code true}.
<p>
For further details on the makeup of the returned {@code Hashtable}, see
the {@code setLabelTable} documentation.

@param  increment  distance between labels in the generated hashtable
@param  start      value at which the labels will begin
@return a new {@code Hashtable} of labels
@see #setLabelTable
@see #setPaintLabels
@exception IllegalArgumentException if {@code start} is
         out of range, or if {@code increment} is less than or equal
         to zero
"
      end

      operation 10704258 "getInverted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the value-range shown for the slider is reversed,

@return true if the slider values are reversed from their normal order
@see #setInverted
"
      end

      operation 10704386 "setInverted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify true to reverse the value-range shown for the slider and false to
put the value range in the normal order.  The order depends on the
slider's <code>ComponentOrientation</code> property.  Normal (non-inverted)
horizontal sliders with a <code>ComponentOrientation</code> value of
<code>LEFT_TO_RIGHT</code> have their maximum on the right.
Normal horizontal sliders with a <code>ComponentOrientation</code> value of
<code>RIGHT_TO_LEFT</code> have their maximum on the left.  Normal vertical
sliders have their maximum on the top.  These labels are reversed when the
slider is inverted.
<p>
By default, the value of this property is {@code false}.

@param b  true to reverse the slider values from their normal order
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: If true reverses the slider values from their normal order

"
      end

      operation 10704514 "getMajorTickSpacing"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the major tick spacing.  The number that is returned
represents the distance, measured in values, between each major tick mark.
If you have a slider with a range from 0 to 50 and the major tick spacing
is set to 10, you will get major ticks next to the following values:
0, 10, 20, 30, 40, 50.

@return the number of values between major ticks
@see #setMajorTickSpacing
"
      end

      operation 10704642 "setMajorTickSpacing"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method sets the major tick spacing.  The number that is passed in
represents the distance, measured in values, between each major tick mark.
If you have a slider with a range from 0 to 50 and the major tick spacing
is set to 10, you will get major ticks next to the following values:
0, 10, 20, 30, 40, 50.
<p>
In order for major ticks to be painted, {@code setPaintTicks} must be
set to {@code true}.
<p>
This method will also set up a label table for you.
If there is not already a label table, and the major tick spacing is
{@code > 0}, and {@code getPaintLabels} returns
{@code true}, a standard label table will be generated (by calling
{@code createStandardLabels}) with labels at the major tick marks.
For the example above, you would get text labels: \"0\",
\"10\", \"20\", \"30\", \"40\", \"50\".
The label table is then set on the slider by calling
{@code setLabelTable}.

@param  n  new value for the {@code majorTickSpacing} property
@see #getMajorTickSpacing
@see #setPaintTicks
@see #setLabelTable
@see #createStandardLabels(int)
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Sets the number of values between major tick marks.

"
      end

      operation 10704770 "getMinorTickSpacing"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the minor tick spacing.  The number that is returned
represents the distance, measured in values, between each minor tick mark.
If you have a slider with a range from 0 to 50 and the minor tick spacing
is set to 10, you will get minor ticks next to the following values:
0, 10, 20, 30, 40, 50.

@return the number of values between minor ticks
@see #getMinorTickSpacing
"
      end

      operation 10704898 "setMinorTickSpacing"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method sets the minor tick spacing.  The number that is passed in
represents the distance, measured in values, between each minor tick mark.
If you have a slider with a range from 0 to 50 and the minor tick spacing
is set to 10, you will get minor ticks next to the following values:
0, 10, 20, 30, 40, 50.
<p>
In order for minor ticks to be painted, {@code setPaintTicks} must be
set to {@code true}.

@param  n  new value for the {@code minorTickSpacing} property
@see #getMinorTickSpacing
@see #setPaintTicks
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Sets the number of values between minor tick marks.
"
      end

      operation 10705026 "getSnapToTicks"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the knob (and the data value it represents)
resolve to the closest tick mark next to where the user
positioned the knob.

@return true if the value snaps to the nearest tick mark, else false
@see #setSnapToTicks
"
      end

      operation 10705154 "getSnapToValue"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the knob (and the data value it represents)
resolve to the closest slider value next to where the user
positioned the knob.

@return true if the value snaps to the nearest slider value, else false
@see #setSnapToValue
"
      end

      operation 10705282 "setSnapToTicks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifying true makes the knob (and the data value it represents)
resolve to the closest tick mark next to where the user
positioned the knob.
By default, this property is {@code false}.

@param b  true to snap the knob to the nearest tick mark
@see #getSnapToTicks
@beaninfo
      bound: true
description: If true snap the knob to the nearest tick mark.
"
      end

      operation 10705410 "setSnapToValue"
	package explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifying true makes the knob (and the data value it represents)
resolve to the closest slider value next to where the user
positioned the knob. If the {@code snapToTicks} property has also been
set to {@code true}, the snap-to-ticks behavior will prevail.
By default, the snapToValue property is {@code true}.

@param b  true to snap the knob to the nearest slider value
@see #getSnapToValue
@see #setSnapToTicks
@beaninfo
      bound: true
description: If true snap the knob to the nearest slider value.
"
      end

      operation 10705538 "getPaintTicks"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if tick marks are to be painted.
@return true if tick marks are painted, else false
@see #setPaintTicks
"
      end

      operation 10705666 "setPaintTicks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether tick marks are painted on the slider.
By default, this property is {@code false}.

@param  b  whether or not tick marks should be painted
@see #getPaintTicks
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: If true tick marks are painted on the slider.
"
      end

      operation 10705794 "getPaintTrack"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if the track (area the slider slides in) is to be painted.
@return true if track is painted, else false
@see #setPaintTrack
"
      end

      operation 10705922 "setPaintTrack"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the track is painted on the slider.
By default, this property is {@code true}.

@param  b  whether or not to paint the slider track
@see #getPaintTrack
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: If true, the track is painted on the slider.
"
      end

      operation 10706050 "getPaintLabels"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if labels are to be painted.
@return true if labels are painted, else false
@see #setPaintLabels
"
      end

      operation 10706178 "setPaintLabels"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether labels are painted on the slider.
<p>
This method will also set up a label table for you.
If there is not already a label table, and the major tick spacing is
{@code > 0},
a standard label table will be generated (by calling
{@code createStandardLabels}) with labels at the major tick marks.
The label table is then set on the slider by calling
{@code setLabelTable}.
<p>
By default, this property is {@code false}.

@param  b  whether or not to paint labels
@see #getPaintLabels
@see #getLabelTable
@see #createStandardLabels(int)
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: If true labels are painted on the slider.
"
      end

      operation 10706306 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10706434 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JSlider. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JSlider.
"
      end

      operation 10706562 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JSlider.
For sliders, the AccessibleContext takes the form of an
AccessibleJSlider.
A new AccessibleJSlider instance is created if necessary.

@return an AccessibleJSlider that serves as the
        AccessibleContext of this JSlider
"
      end

      class 1288322 "AccessibleJSlider"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4149378 // <generalisation>
	  relation 4149378 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4149378 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4149506 // <realization>
	  relation 4149506 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4149506 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	operation 10706690 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state set of this object.

@return an instance of AccessibleState containing the current state
of the object
@see AccessibleState
"
	end

	operation 10706818 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the object
"
	end

	operation 10706946 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 10707074 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible value of this object.

@return The current value of this object.
"
	end

	operation 10707202 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return True if the value was set.
"
	end

	operation 10707330 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum accessible value of this object.

@return The minimum value of this object.
"
	end

	operation 10707458 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum accessible value of this object.

@return The maximum value of this object.
"
	end
      end
    end

    class 441218 "JSplitPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JSplitPane</code> is used to divide two (and only two)
<code>Component</code>s. The two <code>Component</code>s
are graphically divided based on the look and feel
implementation, and the two <code>Component</code>s can then be
interactively resized by the user.
Information on using <code>JSplitPane</code> is in
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html\">How to Use Split Panes</a> in
<em>The Java Tutorial</em>.
<p>
The two <code>Component</code>s in a split pane can be aligned
left to right using
<code>JSplitPane.HORIZONTAL_SPLIT</code>, or top to bottom using
<code>JSplitPane.VERTICAL_SPLIT</code>.
The preferred way to change the size of the <code>Component</code>s
is to invoke
<code>setDividerLocation</code> where <code>location</code> is either
the new x or y position, depending on the orientation of the
<code>JSplitPane</code>.
<p>
To resize the <code>Component</code>s to their preferred sizes invoke
<code>resetToPreferredSizes</code>.
<p>
When the user is resizing the <code>Component</code>s the minimum
size of the <code>Components</code> is used to determine the
maximum/minimum position the <code>Component</code>s
can be set to. If the minimum size of the two
components is greater than the size of the split pane the divider
will not allow you to resize it. To alter the minimum size of a
<code>JComponent</code>, see {@link JComponent#setMinimumSize}.
<p>
When the user resizes the split pane the new space is distributed between
the two components based on the <code>resizeWeight</code> property.
A value of 0,
the default, indicates the right/bottom component gets all the space,
where as a value of 1 indicates the left/top component gets all the space.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see #setDividerLocation
@see #resetToPreferredSizes

@author Scott Violet
"
      classrelation 4157314 // <generalisation>
	relation 4157314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4157314 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4157442 // <realization>
	relation 4157442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4157442 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4157570 // uiClassID (<unidirectional association>)
	relation 4157570 --->
	  a role_name "uiClassID" init_value " \"SplitPaneUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4157570 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2423554 "VERTICAL_SPLIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Vertical split indicates the <code>Component</code>s are
split along the y axis.  For example the two
<code>Component</code>s will be split one on top of the other.

"
      end

      attribute 2423682 "HORIZONTAL_SPLIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Horizontal split indicates the <code>Component</code>s are
split along the x axis.  For example the two
<code>Component</code>s will be split one to the left of the
other.

"
      end

      classrelation 4157698 // LEFT (<unidirectional association>)
	relation 4157698 --->
	  a role_name "LEFT" init_value " \"left\"" class_relation const_relation public
	    comment "
Used to add a <code>Component</code> to the left of the other
<code>Component</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4157698 // LEFT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4157826 // RIGHT (<unidirectional association>)
	relation 4157826 --->
	  a role_name "RIGHT" init_value " \"right\"" class_relation const_relation public
	    comment "
Used to add a <code>Component</code> to the right of the other
<code>Component</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4157826 // RIGHT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4157954 // TOP (<unidirectional association>)
	relation 4157954 --->
	  a role_name "TOP" init_value " \"top\"" class_relation const_relation public
	    comment "
Used to add a <code>Component</code> above the other
<code>Component</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4157954 // TOP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158082 // BOTTOM (<unidirectional association>)
	relation 4158082 --->
	  a role_name "BOTTOM" init_value " \"bottom\"" class_relation const_relation public
	    comment "
Used to add a <code>Component</code> below the other
<code>Component</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158082 // BOTTOM (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158210 // DIVIDER (<unidirectional association>)
	relation 4158210 --->
	  a role_name "DIVIDER" init_value " \"divider\"" class_relation const_relation public
	    comment "
Used to add a <code>Component</code> that will represent the divider.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158210 // DIVIDER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158338 // ORIENTATION_PROPERTY (<unidirectional association>)
	relation 4158338 --->
	  a role_name "ORIENTATION_PROPERTY" init_value " \"orientation\"" class_relation const_relation public
	    comment "
Bound property name for orientation (horizontal or vertical).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158338 // ORIENTATION_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158466 // CONTINUOUS_LAYOUT_PROPERTY (<unidirectional association>)
	relation 4158466 --->
	  a role_name "CONTINUOUS_LAYOUT_PROPERTY" init_value " \"continuousLayout\"" class_relation const_relation public
	    comment "
Bound property name for continuousLayout.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158466 // CONTINUOUS_LAYOUT_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158594 // DIVIDER_SIZE_PROPERTY (<unidirectional association>)
	relation 4158594 --->
	  a role_name "DIVIDER_SIZE_PROPERTY" init_value " \"dividerSize\"" class_relation const_relation public
	    comment "
Bound property name for border.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158594 // DIVIDER_SIZE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158722 // ONE_TOUCH_EXPANDABLE_PROPERTY (<unidirectional association>)
	relation 4158722 --->
	  a role_name "ONE_TOUCH_EXPANDABLE_PROPERTY" init_value "
                               \"oneTouchExpandable\"" class_relation const_relation public
	    comment "
Bound property for oneTouchExpandable.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158722 // ONE_TOUCH_EXPANDABLE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158850 // LAST_DIVIDER_LOCATION_PROPERTY (<unidirectional association>)
	relation 4158850 --->
	  a role_name "LAST_DIVIDER_LOCATION_PROPERTY" init_value "
                               \"lastDividerLocation\"" class_relation const_relation public
	    comment "
Bound property for lastLocation.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158850 // LAST_DIVIDER_LOCATION_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4158978 // DIVIDER_LOCATION_PROPERTY (<unidirectional association>)
	relation 4158978 --->
	  a role_name "DIVIDER_LOCATION_PROPERTY" init_value " \"dividerLocation\"" class_relation const_relation public
	    comment "
Bound property for the dividerLocation.
@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4158978 // DIVIDER_LOCATION_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4159106 // RESIZE_WEIGHT_PROPERTY (<unidirectional association>)
	relation 4159106 --->
	  a role_name "RESIZE_WEIGHT_PROPERTY" init_value " \"resizeWeight\"" class_relation const_relation public
	    comment "
Bound property for weight.
@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4159106 // RESIZE_WEIGHT_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2423810 "orientation"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How the views are split.

"
      end

      attribute 2423938 "continuousLayout"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not the views are continuously redisplayed while
resizing.

"
      end

      classrelation 4159234 // leftComponent (<unidirectional association>)
	relation 4159234 --->
	  a role_name "leftComponent" protected
	    comment "
The left or top component.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4159234 // leftComponent (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4159362 // rightComponent (<unidirectional association>)
	relation 4159362 --->
	  a role_name "rightComponent" protected
	    comment "
The right or bottom component.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4159362 // rightComponent (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 2424066 "dividerSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Size of the divider.

"
      end

      attribute 2424194 "dividerSizeSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2424322 "oneTouchExpandable"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Is a little widget provided to quickly expand/collapse the
split pane?

"
      end

      attribute 2424450 "oneTouchExpandableSet"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2424578 "lastDividerLocation"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Previous location of the split pane.

"
      end

      attribute 2424706 "resizeWeight"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "How to distribute extra space.

"
      end

      attribute 2424834 "dividerLocation"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Location of the divider, at least the value that was set, the UI may
have a different value.

"
      end

      operation 10736386 "JSplitPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JSplitPane</code> configured to arrange the child
components side-by-side horizontally, using two buttons for the components.
"
      end

      operation 10736514 "JSplitPane"
	public explicit_return_type ""
	nparams 1
	  param in name "newOrientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"orientation\"})
"
	
	
	
	comment "Creates a new <code>JSplitPane</code> configured with the
specified orientation.

@param newOrientation  <code>JSplitPane.HORIZONTAL_SPLIT</code> or
                       <code>JSplitPane.VERTICAL_SPLIT</code>
@exception IllegalArgumentException if <code>orientation</code>
         is not one of HORIZONTAL_SPLIT or VERTICAL_SPLIT.
"
      end

      operation 10736642 "JSplitPane"
	public explicit_return_type ""
	nparams 2
	  param in name "newOrientation" explicit_type "int"
	  param inout name "newContinuousLayout" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JSplitPane</code> with the specified
orientation and redrawing style.

@param newOrientation  <code>JSplitPane.HORIZONTAL_SPLIT</code> or
                       <code>JSplitPane.VERTICAL_SPLIT</code>
@param newContinuousLayout  a boolean, true for the components to
       redraw continuously as the divider changes position, false
       to wait until the divider position stops changing to redraw
@exception IllegalArgumentException if <code>orientation</code>
         is not one of HORIZONTAL_SPLIT or VERTICAL_SPLIT
"
      end

      operation 10736770 "JSplitPane"
	public explicit_return_type ""
	nparams 3
	  param in name "newOrientation" explicit_type "int"
	  param inout name "newLeftComponent" type class_ref 338818 // Component
	  param inout name "newRightComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JSplitPane</code> with the specified
orientation and the specified components.

@param newOrientation  <code>JSplitPane.HORIZONTAL_SPLIT</code> or
                       <code>JSplitPane.VERTICAL_SPLIT</code>
@param newLeftComponent the <code>Component</code> that will
         appear on the left
         of a horizontally-split pane, or at the top of a
         vertically-split pane
@param newRightComponent the <code>Component</code> that will
         appear on the right
         of a horizontally-split pane, or at the bottom of a
         vertically-split pane
@exception IllegalArgumentException if <code>orientation</code>
         is not one of: HORIZONTAL_SPLIT or VERTICAL_SPLIT
"
      end

      operation 10736898 "JSplitPane"
	public explicit_return_type ""
	nparams 4
	  param in name "newOrientation" explicit_type "int"
	  param inout name "newContinuousLayout" explicit_type "boolean"
	  param inout name "newLeftComponent" type class_ref 338818 // Component
	  param inout name "newRightComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JSplitPane</code> with the specified
orientation and
redrawing style, and with the specified components.

@param newOrientation  <code>JSplitPane.HORIZONTAL_SPLIT</code> or
                       <code>JSplitPane.VERTICAL_SPLIT</code>
@param newContinuousLayout  a boolean, true for the components to
       redraw continuously as the divider changes position, false
       to wait until the divider position stops changing to redraw
@param newLeftComponent the <code>Component</code> that will
         appear on the left
         of a horizontally-split pane, or at the top of a
         vertically-split pane
@param newRightComponent the <code>Component</code> that will
         appear on the right
         of a horizontally-split pane, or at the bottom of a
         vertically-split pane
@exception IllegalArgumentException if <code>orientation</code>
         is not one of HORIZONTAL_SPLIT or VERTICAL_SPLIT
"
      end

      operation 10737026 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 442114 // SplitPaneUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the <code>SplitPaneUI</code> L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 10737154 "getUI"
	public return_type class_ref 442114 // SplitPaneUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>SplitPaneUI</code> that is providing the
current look and feel.

@return the <code>SplitPaneUI</code> object that renders this component
@beaninfo
      expert: true
 description: The L&amp;F object that renders this component.
"
      end

      operation 10737282 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIManager</code> that the L&amp;F has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
      end

      operation 10737410 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"SplitPaneUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
      expert: true
 description: A string that specifies the name of the L&amp;F class.
"
      end

      operation 10737538 "setDividerSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "newSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the divider.

@param newSize an integer giving the size of the divider in pixels
@beaninfo
       bound: true
 description: The size of the divider.
"
      end

      operation 10737666 "getDividerSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the divider.

@return an integer giving the size of the divider in pixels
"
      end

      operation 10737794 "setLeftComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component to the left (or above) the divider.

@param comp the <code>Component</code> to display in that position
"
      end

      operation 10737922 "getLeftComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component to the left (or above) the divider.

@return the <code>Component</code> displayed in that position
@beaninfo
   preferred: true
 description: The component to the left (or above) the divider.
"
      end

      operation 10738050 "setTopComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component above, or to the left of the divider.

@param comp the <code>Component</code> to display in that position
@beaninfo
 description: The component above, or to the left of the divider.
"
      end

      operation 10738178 "getTopComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component above, or to the left of the divider.

@return the <code>Component</code> displayed in that position
"
      end

      operation 10738306 "setRightComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component to the right (or below) the divider.

@param comp the <code>Component</code> to display in that position
@beaninfo
   preferred: true
 description: The component to the right (or below) the divider.
"
      end

      operation 10738434 "getRightComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component to the right (or below) the divider.

@return the <code>Component</code> displayed in that position
"
      end

      operation 10738562 "setBottomComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component below, or to the right of the divider.

@param comp the <code>Component</code> to display in that position
@beaninfo
 description: The component below, or to the right of the divider.
"
      end

      operation 10738690 "getBottomComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component below, or to the right of the divider.

@return the <code>Component</code> displayed in that position
"
      end

      operation 10738818 "setOneTouchExpandable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>oneTouchExpandable</code> property,
which must be <code>true</code> for the
<code>JSplitPane</code> to provide a UI widget
on the divider to quickly expand/collapse the divider.
The default value of this property is <code>false</code>.
Some look and feels might not support one-touch expanding;
they will ignore this property.

@param newValue <code>true</code> to specify that the split pane should provide a
       collapse/expand widget
@beaninfo
       bound: true
 description: UI widget on the divider to quickly
              expand/collapse the divider.

@see #isOneTouchExpandable
"
      end

      operation 10738946 "isOneTouchExpandable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>oneTouchExpandable</code> property.

@return the value of the <code>oneTouchExpandable</code> property
@see #setOneTouchExpandable
"
      end

      operation 10739074 "setLastDividerLocation"
	public explicit_return_type "void"
	nparams 1
	  param in name "newLastLocation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the last location the divider was at to
<code>newLastLocation</code>.

@param newLastLocation an integer specifying the last divider location
       in pixels, from the left (or upper) edge of the pane to the
       left (or upper) edge of the divider
@beaninfo
       bound: true
 description: The last location the divider was at.
"
      end

      operation 10739202 "getLastDividerLocation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last location the divider was at.

@return an integer specifying the last divider location as a count
      of pixels from the left (or upper) edge of the pane to the
      left (or upper) edge of the divider
"
      end

      operation 10739330 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the orientation, or how the splitter is divided. The options
are:<ul>
<li>JSplitPane.VERTICAL_SPLIT  (above/below orientation of components)
<li>JSplitPane.HORIZONTAL_SPLIT  (left/right orientation of components)
</ul>

@param orientation an integer specifying the orientation
@exception IllegalArgumentException if orientation is not one of:
       HORIZONTAL_SPLIT or VERTICAL_SPLIT.
@beaninfo
       bound: true
 description: The orientation, or how the splitter is divided.
        enum: HORIZONTAL_SPLIT JSplitPane.HORIZONTAL_SPLIT
              VERTICAL_SPLIT   JSplitPane.VERTICAL_SPLIT
"
      end

      operation 10739458 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the orientation.

@return an integer giving the orientation
@see #setOrientation
"
      end

      operation 10739586 "setContinuousLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newContinuousLayout" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>continuousLayout</code> property,
which must be <code>true</code> for the child components
to be continuously
redisplayed and laid out during user intervention.
The default value of this property is look and feel dependent.
Some look and feels might not support continuous layout;
they will ignore this property.

@param newContinuousLayout  <code>true</code> if the components
       should continuously be redrawn as the divider changes position
@beaninfo
       bound: true
 description: Whether the child components are
              continuously redisplayed and laid out during
              user intervention.
@see #isContinuousLayout
"
      end

      operation 10739714 "isContinuousLayout"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>continuousLayout</code> property.

@return the value of the <code>continuousLayout</code> property
@see #setContinuousLayout
"
      end

      operation 10739842 "setResizeWeight"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies how to distribute extra space when the size of the split pane
changes. A value of 0, the default,
indicates the right/bottom component gets all the extra space (the
left/top component acts fixed), where as a value of 1 specifies the
left/top component gets all the extra space (the right/bottom component
acts fixed). Specifically, the left/top component gets (weight * diff)
extra space and the right/bottom component gets (1 - weight) * diff
extra space.

@param value as described above
@exception IllegalArgumentException if <code>value</code> is &lt; 0 or &gt; 1
@since 1.3
@beaninfo
       bound: true
 description: Specifies how to distribute extra space when the split pane
              resizes.
"
      end

      operation 10739970 "getResizeWeight"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number that determines how extra space is distributed.
@return how extra space is to be distributed on a resize of the
        split pane
@since 1.3
"
      end

      operation 10740098 "resetToPreferredSizes"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the <code>JSplitPane</code> layout based on the preferred size
of the children components. This will likely result in changing
the divider location.
"
      end

      operation 10740226 "setDividerLocation"
	public explicit_return_type "void"
	nparams 1
	  param in name "proportionalLocation" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the divider location as a percentage of the
<code>JSplitPane</code>'s size.
<p>
This method is implemented in terms of
<code>setDividerLocation(int)</code>.
This method immediately changes the size of the split pane based on
its current size. If the split pane is not correctly realized and on
screen, this method will have no effect (new divider location will
become (current size * proportionalLocation) which is 0).

@param proportionalLocation  a double-precision floating point value
       that specifies a percentage, from zero (top/left) to 1.0
       (bottom/right)
@exception IllegalArgumentException if the specified location is &lt; 0
           or &gt; 1.0
@beaninfo
 description: The location of the divider.
"
      end

      operation 10740354 "setDividerLocation"
	public explicit_return_type "void"
	nparams 1
	  param in name "location" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of the divider. This is passed off to the
look and feel implementation, and then listeners are notified. A value
less than 0 implies the divider should be reset to a value that
attempts to honor the preferred size of the left/top component.
After notifying the listeners, the last divider location is updated,
via <code>setLastDividerLocation</code>.

@param location an int specifying a UI-specific value (typically a
       pixel count)
@beaninfo
       bound: true
 description: The location of the divider.
"
      end

      operation 10740482 "getDividerLocation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last value passed to <code>setDividerLocation</code>.
The value returned from this method may differ from the actual
divider location (if <code>setDividerLocation</code> was passed a
value bigger than the current size).

@return an integer specifying the location of the divider
"
      end

      operation 10740610 "getMinimumDividerLocation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum location of the divider from the look and feel
implementation.

@return an integer specifying a UI-specific value for the minimum
         location (typically a pixel count); or -1 if the UI is
         <code>null</code>
@beaninfo
 description: The minimum location of the divider from the L&amp;F.
"
      end

      operation 10740738 "getMaximumDividerLocation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum location of the divider from the look and feel
implementation.

@return an integer specifying a UI-specific value for the maximum
         location (typically a pixel count); or -1 if the  UI is
         <code>null</code>
"
      end

      operation 10740866 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the child component, <code>component</code> from the
pane. Resets the <code>leftComponent</code> or
<code>rightComponent</code> instance variable, as necessary.

@param component the <code>Component</code> to remove
"
      end

      operation 10740994 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the <code>Component</code> at the specified index.
Updates the <code>leftComponent</code> and <code>rightComponent</code>
instance variables as necessary, and then messages super.

@param index an integer specifying the component to remove, where
       1 specifies the left/top component and 2 specifies the
       bottom/right component
"
      end

      operation 10741122 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the child components from the split pane. Resets the
<code>leftComonent</code> and <code>rightComponent</code>
instance variables.
"
      end

      operation 10741250 "isValidateRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns true, so that calls to <code>revalidate</code>
on any descendant of this <code>JSplitPane</code>
will cause a request to be queued that
will validate the <code>JSplitPane</code> and all its descendants.

@return true
@see JComponent#revalidate
@see java.awt.Container#isValidateRoot

@beaninfo
   hidden: true
"
      end

      operation 10741378 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this split pane.
If <code>constraints</code> identifies the left/top or
right/bottom child component, and a component with that identifier
was previously added, it will be removed and then <code>comp</code>
will be added in its place. If <code>constraints</code> is not
one of the known identifiers the layout manager may throw an
<code>IllegalArgumentException</code>.
<p>
The possible constraints objects (Strings) are:
<ul>
<li>JSplitPane.TOP
<li>JSplitPane.LEFT
<li>JSplitPane.BOTTOM
<li>JSplitPane.RIGHT
</ul>
If the <code>constraints</code> object is <code>null</code>,
the component is added in the
first available position (left/top if open, else right/bottom).

@param comp        the component to add
@param constraints an <code>Object</code> specifying the
                   layout constraints
                   (position) for this component
@param index       an integer specifying the index in the container's
                   list.
@exception IllegalArgumentException  if the <code>constraints</code>
         object does not match an existing component
@see java.awt.Container#addImpl(Component, Object, int)
"
      end

      operation 10741506 "paintChildren"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclassed to message the UI with <code>finishedPaintingChildren</code>
after super has been messaged, as well as painting the border.

@param g the <code>Graphics</code> context within which to paint
"
      end

      operation 10741634 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10741762 "setUIProperty"
	package explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10741890 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JSplitPane</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JSplitPane</code>.
"
      end

      operation 10742018 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/////////////////////////
 Accessibility support //
/////////////////////////

Gets the AccessibleContext associated with this JSplitPane.
For split panes, the AccessibleContext takes the form of an
AccessibleJSplitPane.
A new AccessibleJSplitPane instance is created if necessary.

@return an AccessibleJSplitPane that serves as the
        AccessibleContext of this JSplitPane
@beaninfo
      expert: true
 description: The AccessibleContext associated with this SplitPane.
"
      end

      class 1291522 "AccessibleJSplitPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4159490 // <generalisation>
	  relation 4159490 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4159490 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4159618 // <realization>
	  relation 4159618 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4159618 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	operation 10742146 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.

@return an instance of AccessibleState containing the current state
of the object
@see AccessibleState
"
	end

	operation 10742274 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 10742402 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the accessible value of this object.

@return a localized String describing the value of this object
"
	end

	operation 10742530 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the value of this object as a Number.

@return True if the value was set.
"
	end

	operation 10742658 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the minimum accessible value of this object.

@return The minimum value of this object.
"
	end

	operation 10742786 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the maximum accessible value of this object.

@return The maximum value of this object.
"
	end

	operation 10742914 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.

@return an instance of AccessibleRole describing the role of
the object
@see AccessibleRole
"
	end
      end
    end

    class 444162 "JTabbedPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A component that lets the user switch between a group of components by
clicking on a tab with a given title and/or icon.
For examples and information on using tabbed panes see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html\">How to Use Tabbed Panes</a>,
a section in <em>The Java Tutorial</em>.
<p>
Tabs/components are added to a <code>TabbedPane</code> object by using the
<code>addTab</code> and <code>insertTab</code> methods.
A tab is represented by an index corresponding
to the position it was added in, where the first tab has an index equal to 0
and the last tab has an index equal to the tab count minus 1.
<p>
The <code>TabbedPane</code> uses a <code>SingleSelectionModel</code>
to represent the set
of tab indices and the currently selected index.  If the tab count
is greater than 0, then there will always be a selected index, which
by default will be initialized to the first tab.  If the tab count is
0, then the selected index will be -1.
<p>
The tab title can be rendered by a <code>Component</code>.
For example, the following produce similar results:
<pre>
// In this case the look and feel renders the title for the tab.
tabbedPane.addTab(\"Tab\", myComponent);
// In this case the custom component is responsible for rendering the
// title of the tab.
tabbedPane.addTab(null, myComponent);
tabbedPane.setTabComponentAt(0, new JLabel(\"Tab\"));
</pre>
The latter is typically used when you want a more complex user interaction
that requires custom components on the tab.  For example, you could
provide a custom component that animates or one that has widgets for
closing the tab.
<p>
If you specify a component for a tab, the <code>JTabbedPane</code>
will not render any text or icon you have specified for the tab.
<p>
<strong>Note:</strong>
Do not use <code>setVisible</code> directly on a tab component to make it visible,
use <code>setSelectedComponent</code> or <code>setSelectedIndex</code> methods instead.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
     attribute: isContainer true
   description: A component which provides a tab folder metaphor for
                displaying one component from a set of components.

@author Dave Moore
@author Philip Milne
@author Amy Fowler

@see SingleSelectionModel
"
      classrelation 4159746 // <generalisation>
	relation 4159746 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4159746 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4159874 // <realization>
	relation 4159874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4159874 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4160002 // <realization>
	relation 4160002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4160002 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4160130 // <realization>
	relation 4160130 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4160130 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      attribute 2424962 "WRAP_TAB_LAYOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The tab layout policy for wrapping tabs in multiple runs when all
tabs will not fit within a single run.

"
      end

      attribute 2425090 "SCROLL_TAB_LAYOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tab layout policy for providing a subset of available tabs when all
the tabs will not fit within a single run.  If all the tabs do
not fit within a single run the look and feel will provide a way
to navigate to hidden tabs.

"
      end

      classrelation 4160258 // uiClassID (<unidirectional association>)
	relation 4160258 --->
	  a role_name "uiClassID" init_value " \"TabbedPaneUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4160258 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2425218 "tabPlacement"
	protected explicit_type "int"
	init_value " TOP"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Where the tabs are placed.
@see #setTabPlacement

"
      end

      attribute 2425346 "tabLayoutPolicy"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4160386 // model (<unidirectional association>)
	relation 4160386 --->
	  a role_name "model" protected
	    comment " The default selection model 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4160386 // model (<unidirectional association>)
	  b parent class_ref 393474 // SingleSelectionModel
      end

      attribute 2425474 "haveRegistered"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4160514 // changeListener (<unidirectional association>)
	relation 4160514 --->
	  a role_name "changeListener" init_value " null" protected
	    comment "
The <code>changeListener</code> is the listener we add to the
model.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4160514 // changeListener (<unidirectional association>)
	  b parent class_ref 359426 // ChangeListener
      end

      class 1291650 "Page"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4161666 // <generalisation>
	  relation 4161666 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4161666 // <generalisation>
	    b parent class_ref 347522 // AccessibleContext
	end

	classrelation 4161794 // <realization>
	  relation 4161794 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4161794 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 4161922 // <realization>
	  relation 4161922 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4161922 // <realization>
	    b parent class_ref 347778 // Accessible
	end

	classrelation 4162050 // <realization>
	  relation 4162050 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4162050 // <realization>
	    b parent class_ref 348546 // AccessibleComponent
	end

	classrelation 4162178 // title (<unidirectional association>)
	  relation 4162178 --->
	    a role_name "title" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4162178 // title (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 4162306 // background (<unidirectional association>)
	  relation 4162306 --->
	    a role_name "background" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4162306 // background (<unidirectional association>)
	    b parent class_ref 323458 // Color
	end

	classrelation 4162434 // foreground (<unidirectional association>)
	  relation 4162434 --->
	    a role_name "foreground" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4162434 // foreground (<unidirectional association>)
	    b parent class_ref 323458 // Color
	end

	classrelation 4162562 // icon (<unidirectional association>)
	  relation 4162562 --->
	    a role_name "icon" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4162562 // icon (<unidirectional association>)
	    b parent class_ref 352642 // Icon
	end

	classrelation 4162690 // disabledIcon (<unidirectional association>)
	  relation 4162690 --->
	    a role_name "disabledIcon" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4162690 // disabledIcon (<unidirectional association>)
	    b parent class_ref 352642 // Icon
	end

	classrelation 4162818 // parent (<unidirectional association>)
	  relation 4162818 --->
	    a role_name "parent" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4162818 // parent (<unidirectional association>)
	    b parent class_ref 444162 // JTabbedPane
	end

	classrelation 4162946 // component (<unidirectional association>)
	  relation 4162946 --->
	    a role_name "component" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4162946 // component (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	classrelation 4163074 // tip (<unidirectional association>)
	  relation 4163074 --->
	    a role_name "tip" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4163074 // tip (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 2425602 "enabled"
	  package explicit_type "boolean"
	  init_value " true"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2425730 "needsUIUpdate"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2425858 "mnemonic"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2425986 "mnemonicIndex"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4163202 // tabComponent (<unidirectional association>)
	  relation 4163202 --->
	    a role_name "tabComponent" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4163202 // tabComponent (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	operation 10754178 "Page"
	  package explicit_return_type ""
	  nparams 6
	    param inout name "parent" type class_ref 444162 // JTabbedPane
	    param inout name "title" type class_ref 128130 // String
	    param inout name "icon" type class_ref 352642 // Icon
	    param inout name "disabledIcon" type class_ref 352642 // Icon
	    param inout name "component" type class_ref 338818 // Component
	    param inout name "tip" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10754306 "initAccessibleContext"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "initializes the AccessibleContext for the page
"
	end

	operation 10754434 "setMnemonic"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "mnemonic" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10754562 "getMnemonic"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10754690 "setDisplayedMnemonicIndex"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "mnemonicIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the page displayed mnemonic index
"
	end

	operation 10754818 "getDisplayedMnemonicIndex"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the page displayed mnemonic index
"
	end

	operation 10754946 "updateDisplayedMnemonicIndex"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10755074 "getAccessibleContext"
	  public return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "///////////////
 Accessibility support
//////////////"
	end

	operation 10755202 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleContext methods"
	end

	operation 10755330 "getAccessibleDescription"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10755458 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10755586 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10755714 "getAccessibleIndexInParent"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10755842 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10755970 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10756098 "getLocale"
	  public return_type class_ref 312962 // Locale
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10756226 "getAccessibleComponent"
	  public return_type class_ref 348546 // AccessibleComponent
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10756354 "getBackground"
	  public return_type class_ref 323458 // Color
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleComponent methods"
	end

	operation 10756482 "setBackground"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10756610 "getForeground"
	  public return_type class_ref 323458 // Color
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10756738 "setForeground"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10756866 "getCursor"
	  public return_type class_ref 340866 // Cursor
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10756994 "setCursor"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 340866 // Cursor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10757122 "getFont"
	  public return_type class_ref 340354 // Font
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10757250 "setFont"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "f" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10757378 "getFontMetrics"
	  public return_type class_ref 343810 // FontMetrics
	  nparams 1
	    param inout name "f" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10757506 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10757634 "setEnabled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10757762 "isVisible"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10757890 "setVisible"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758018 "isShowing"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758146 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758274 "getLocationOnScreen"
	  public return_type class_ref 323714 // Point
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758402 "getLocation"
	  public return_type class_ref 323714 // Point
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758530 "setLocation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758658 "getBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758786 "setBounds"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "r" type class_ref 314114 // Rectangle
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10758914 "getSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10759042 "setSize"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "d" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10759170 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10759298 "isFocusTraversable"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10759426 "requestFocus"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10759554 "addFocusListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 342018 // FocusListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10759682 "removeFocusListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 342018 // FocusListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10759810 "getAccessibleIcon"
	  public return_type class_ref 349186 // AccessibleIcon
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " TIGER - 4732339

Returns an AccessibleIcon

@return the enabled icon if one exists and the page
is enabled. Otherwise, returns the disabled icon if
one exists and the page is disabled.  Otherwise, null
is returned.
"
	end
      end

      classrelation 4160642 // pages (<unidirectional association>)
	relation 4160642 --->
	  a role_name "pages" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Page> ${name}${value};
"
	    classrelation_ref 4160642 // pages (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 4160770 // visComp (<unidirectional association>)
	relation 4160770 --->
	  a role_name "visComp" init_value " null" private
	    comment " The component that is currently visible 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4160770 // visComp (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4160898 // changeEvent (<unidirectional association>)
	relation 4160898 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment "
Only one <code>ChangeEvent</code> is needed per <code>TabPane</code>
instance since the
event's only (read-only) state is the source property.  The source
of events generated here is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4160898 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      operation 10743042 "JTabbedPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty <code>TabbedPane</code> with a default
tab placement of <code>JTabbedPane.TOP</code>.
@see #addTab
"
      end

      operation 10743170 "JTabbedPane"
	public explicit_return_type ""
	nparams 1
	  param in name "tabPlacement" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty <code>TabbedPane</code> with the specified tab placement
of either: <code>JTabbedPane.TOP</code>, <code>JTabbedPane.BOTTOM</code>,
<code>JTabbedPane.LEFT</code>, or <code>JTabbedPane.RIGHT</code>.

@param tabPlacement the placement for the tabs relative to the content
@see #addTab
"
      end

      operation 10743298 "JTabbedPane"
	public explicit_return_type ""
	nparams 2
	  param in name "tabPlacement" explicit_type "int"
	  param in name "tabLayoutPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty <code>TabbedPane</code> with the specified tab placement
and tab layout policy.  Tab placement may be either:
<code>JTabbedPane.TOP</code>, <code>JTabbedPane.BOTTOM</code>,
<code>JTabbedPane.LEFT</code>, or <code>JTabbedPane.RIGHT</code>.
Tab layout policy may be either: <code>JTabbedPane.WRAP_TAB_LAYOUT</code>
or <code>JTabbedPane.SCROLL_TAB_LAYOUT</code>.

@param tabPlacement the placement for the tabs relative to the content
@param tabLayoutPolicy the policy for laying out tabs when all tabs will not fit on one run
@exception IllegalArgumentException if tab placement or tab layout policy are not
           one of the above supported values
@see #addTab
@since 1.4
"
      end

      operation 10743426 "getUI"
	public return_type class_ref 444034 // TabbedPaneUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the UI object which implements the L&amp;F for this component.

@return a <code>TabbedPaneUI</code> object
@see #setUI
"
      end

      operation 10743554 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 444034 // TabbedPaneUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the UI object which implements the L&amp;F for this component.

@param ui the new UI object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the tabbedpane's LookAndFeel
"
      end

      operation 10743682 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10743810 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the UI class that implements the
L&amp;F for this component.

@return the string \"TabbedPaneUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      class 1291778 "ModelListener"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4161026 // <realization>
	  relation 4161026 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4161026 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4161154 // <realization>
	  relation 4161154 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4161154 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10743938 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10744066 "createChangeListener"
	protected return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses that want to handle <code>ChangeEvents</code> differently
can override this to return a subclass of <code>ModelListener</code> or
another <code>ChangeListener</code> implementation.

@see #fireStateChanged
"
      end

      operation 10744194 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>ChangeListener</code> to this tabbedpane.

@param l the <code>ChangeListener</code> to add
@see #fireStateChanged
@see #removeChangeListener
"
      end

      operation 10744322 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code> from this tabbedpane.

@param l the <code>ChangeListener</code> to remove
@see #fireStateChanged
@see #addChangeListener
"
      end

      operation 10744450 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this <code>JTabbedPane</code> with <code>addChangeListener</code>.

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10744578 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a {@code ChangeEvent}, with this {@code JTabbedPane} as the source,
to each registered listener. This method is called each time there is
a change to either the selected index or the selected tab in the
{@code JTabbedPane}. Usually, the selected index and selected tab change
together. However, there are some cases, such as tab addition, where the
selected index changes and the same tab remains selected. There are other
cases, such as deleting the selected tab, where the index remains the
same, but a new tab moves to that index. Events are fired for all of
these cases.

@see #addChangeListener
@see EventListenerList
"
      end

      operation 10744706 "getModel"
	public return_type class_ref 393474 // SingleSelectionModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model associated with this tabbedpane.

@see #setModel
"
      end

      operation 10744834 "setModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "model" type class_ref 393474 // SingleSelectionModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model to be used with this tabbedpane.

@param model the model to be used
@see #getModel
@beaninfo
      bound: true
description: The tabbedpane's SingleSelectionModel.
"
      end

      operation 10744962 "getTabPlacement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the placement of the tabs for this tabbedpane.
@see #setTabPlacement
"
      end

      operation 10745090 "setTabPlacement"
	public explicit_return_type "void"
	nparams 1
	  param in name "tabPlacement" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the tab placement for this tabbedpane.
Possible values are:<ul>
<li><code>JTabbedPane.TOP</code>
<li><code>JTabbedPane.BOTTOM</code>
<li><code>JTabbedPane.LEFT</code>
<li><code>JTabbedPane.RIGHT</code>
</ul>
The default value, if not set, is <code>SwingConstants.TOP</code>.

@param tabPlacement the placement for the tabs relative to the content
@exception IllegalArgumentException if tab placement value isn't one
                         of the above valid values

@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
        enum: TOP JTabbedPane.TOP
              LEFT JTabbedPane.LEFT
              BOTTOM JTabbedPane.BOTTOM
              RIGHT JTabbedPane.RIGHT
 description: The tabbedpane's tab placement.

"
      end

      operation 10745218 "getTabLayoutPolicy"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the policy used by the tabbedpane to layout the tabs when all the
tabs will not fit within a single run.
@see #setTabLayoutPolicy
@since 1.4
"
      end

      operation 10745346 "setTabLayoutPolicy"
	public explicit_return_type "void"
	nparams 1
	  param in name "tabLayoutPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the policy which the tabbedpane will use in laying out the tabs
when all the tabs will not fit within a single run.
Possible values are:
<ul>
<li><code>JTabbedPane.WRAP_TAB_LAYOUT</code>
<li><code>JTabbedPane.SCROLL_TAB_LAYOUT</code>
</ul>

The default value, if not set by the UI, is <code>JTabbedPane.WRAP_TAB_LAYOUT</code>.
<p>
Some look and feels might only support a subset of the possible
layout policies, in which case the value of this property may be
ignored.

@param tabLayoutPolicy the policy used to layout the tabs
@exception IllegalArgumentException if layoutPolicy value isn't one
                         of the above valid values
@see #getTabLayoutPolicy
@since 1.4

@beaninfo
   preferred: true
       bound: true
   attribute: visualUpdate true
        enum: WRAP_TAB_LAYOUT JTabbedPane.WRAP_TAB_LAYOUT
              SCROLL_TAB_LAYOUT JTabbedPane.SCROLL_TAB_LAYOUT
 description: The tabbedpane's policy for laying out the tabs

"
      end

      operation 10745474 "getSelectedIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the currently selected index for this tabbedpane.
Returns -1 if there is no currently selected tab.

@return the index of the selected tab
@see #setSelectedIndex
"
      end

      operation 10745602 "setSelectedIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected index for this tabbedpane. The index must be
a valid tab index or -1, which indicates that no tab should be selected
(can also be used when there are no tabs in the tabbedpane).  If a -1
value is specified when the tabbedpane contains one or more tabs, then
the results will be implementation defined.

@param index  the index to be selected
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < -1 || index >= tab count)}

@see #getSelectedIndex
@see SingleSelectionModel#setSelectedIndex
@beaninfo
  preferred: true
description: The tabbedpane's selected tab index.
"
      end

      operation 10745730 "setSelectedIndexImpl"
	private explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "doAccessibleChanges" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10745858 "changeAccessibleSelection"
	private explicit_return_type "void"
	nparams 3
	  param inout name "oldPage" type class_ref 1291650 // Page
	  param inout name "oldName" type class_ref 128130 // String
	  param inout name "newPage" type class_ref 1291650 // Page
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10745986 "getSelectedComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the currently selected component for this tabbedpane.
Returns <code>null</code> if there is no currently selected tab.

@return the component corresponding to the selected tab
@see #setSelectedComponent
"
      end

      operation 10746114 "setSelectedComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected component for this tabbedpane.  This
will automatically set the <code>selectedIndex</code> to the index
corresponding to the specified component.

@exception IllegalArgumentException if component not found in tabbed
         pane
@see #getSelectedComponent
@beaninfo
  preferred: true
description: The tabbedpane's selected component.
"
      end

      operation 10746242 "insertTab"
	public explicit_return_type "void"
	nparams 5
	  param inout name "title" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "tip" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a new tab for the given component, at the given index,
represented by the given title and/or icon, either of which may
be {@code null}.

@param title the title to be displayed on the tab
@param icon the icon to be displayed on the tab
@param component the component to be displayed when this tab is clicked.
@param tip the tooltip to be displayed for this tab
@param index the position to insert this new tab
      ({@code > 0 and <= getTabCount()})

@throws IndexOutOfBoundsException if the index is out of range
        ({@code < 0 or > getTabCount()})

@see #addTab
@see #removeTabAt
"
      end

      operation 10746370 "addTab"
	public explicit_return_type "void"
	nparams 4
	  param inout name "title" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "tip" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> and <code>tip</code>
represented by a <code>title</code> and/or <code>icon</code>,
either of which can be <code>null</code>.
Cover method for <code>insertTab</code>.

@param title the title to be displayed in this tab
@param icon the icon to be displayed in this tab
@param component the component to be displayed when this tab is clicked
@param tip the tooltip to be displayed for this tab

@see #insertTab
@see #removeTabAt
"
      end

      operation 10746498 "addTab"
	public explicit_return_type "void"
	nparams 3
	  param inout name "title" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> represented by a <code>title</code>
and/or <code>icon</code>, either of which can be <code>null</code>.
Cover method for <code>insertTab</code>.

@param title the title to be displayed in this tab
@param icon the icon to be displayed in this tab
@param component the component to be displayed when this tab is clicked

@see #insertTab
@see #removeTabAt
"
      end

      operation 10746626 "addTab"
	public explicit_return_type "void"
	nparams 2
	  param inout name "title" type class_ref 128130 // String
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> represented by a <code>title</code>
and no icon.
Cover method for <code>insertTab</code>.

@param title the title to be displayed in this tab
@param component the component to be displayed when this tab is clicked

@see #insertTab
@see #removeTabAt
"
      end

      operation 10746754 "add"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> with a tab title defaulting to
the name of the component which is the result of calling
<code>component.getName</code>.
Cover method for <code>insertTab</code>.

@param component the component to be displayed when this tab is clicked
@return the component

@see #insertTab
@see #removeTabAt
"
      end

      operation 10746882 "add"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "title" type class_ref 128130 // String
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> with the specified tab title.
Cover method for <code>insertTab</code>.

@param title the title to be displayed in this tab
@param component the component to be displayed when this tab is clicked
@return the component

@see #insertTab
@see #removeTabAt
"
      end

      operation 10747010 "add"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> at the specified tab index with a tab
title defaulting to the name of the component.
Cover method for <code>insertTab</code>.

@param component the component to be displayed when this tab is clicked
@param index the position to insert this new tab
@return the component

@see #insertTab
@see #removeTabAt
"
      end

      operation 10747138 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> to the tabbed pane.
If <code>constraints</code> is a <code>String</code> or an
<code>Icon</code>, it will be used for the tab title,
otherwise the component's name will be used as the tab title.
Cover method for <code>insertTab</code>.

@param component the component to be displayed when this tab is clicked
@param constraints the object to be displayed in the tab

@see #insertTab
@see #removeTabAt
"
      end

      operation 10747266 "add"
	public explicit_return_type "void"
	nparams 3
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>component</code> at the specified tab index.
If <code>constraints</code> is a <code>String</code> or an
<code>Icon</code>, it will be used for the tab title,
otherwise the component's name will be used as the tab title.
Cover method for <code>insertTab</code>.

@param component the component to be displayed when this tab is clicked
@param constraints the object to be displayed in the tab
@param index the position to insert this new tab

@see #insertTab
@see #removeTabAt
"
      end

      operation 10747394 "removeTabAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the tab at <code>index</code>.
After the component associated with <code>index</code> is removed,
its visibility is reset to true to ensure it will be visible
if added to other containers.
@param index the index of the tab to be removed
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #addTab
@see #insertTab
"
      end

      operation 10747522 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified <code>Component</code> from the
<code>JTabbedPane</code>. The method does nothing
if the <code>component</code> is null.

@param component the component to remove from the tabbedpane
@see #addTab
@see #removeTabAt
"
      end

      operation 10747650 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the tab and component which corresponds to the specified index.

@param index the index of the component to remove from the
         <code>tabbedpane</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}
@see #addTab
@see #removeTabAt
"
      end

      operation 10747778 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the tabs and their corresponding components
from the <code>tabbedpane</code>.

@see #addTab
@see #removeTabAt
"
      end

      operation 10747906 "getTabCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of tabs in this <code>tabbedpane</code>.

@return an integer specifying the number of tabbed pages
"
      end

      operation 10748034 "getTabRunCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of tab runs currently used to display
the tabs.
@return an integer giving the number of rows if the
         <code>tabPlacement</code>
         is <code>TOP</code> or <code>BOTTOM</code>
         and the number of columns if
         <code>tabPlacement</code>
         is <code>LEFT</code> or <code>RIGHT</code>,
         or 0 if there is no UI set on this <code>tabbedpane</code>
"
      end

      operation 10748162 "getTitleAt"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Getters for the Pages

Returns the tab title at <code>index</code>.

@param index  the index of the item being queried
@return the title at <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}
@see #setTitleAt
"
      end

      operation 10748290 "getIconAt"
	public return_type class_ref 352642 // Icon
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab icon at <code>index</code>.

@param index  the index of the item being queried
@return the icon at <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setIconAt
"
      end

      operation 10748418 "getDisabledIconAt"
	public return_type class_ref 352642 // Icon
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab disabled icon at <code>index</code>.
If the tab disabled icon doesn't exist at <code>index</code>
this will forward the call to the look and feel to construct
an appropriate disabled Icon from the corresponding enabled
Icon. Some look and feels might not render the disabled Icon,
in which case it won't be created.

@param index  the index of the item being queried
@return the icon at <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setDisabledIconAt
"
      end

      operation 10748546 "getToolTipTextAt"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab tooltip text at <code>index</code>.

@param index  the index of the item being queried
@return a string containing the tool tip text at <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setToolTipTextAt
@since 1.3
"
      end

      operation 10748674 "getBackgroundAt"
	public return_type class_ref 323458 // Color
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab background color at <code>index</code>.

@param index  the index of the item being queried
@return the <code>Color</code> of the tab background at
         <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setBackgroundAt
"
      end

      operation 10748802 "getForegroundAt"
	public return_type class_ref 323458 // Color
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab foreground color at <code>index</code>.

@param index  the index of the item being queried
@return the <code>Color</code> of the tab foreground at
         <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setForegroundAt
"
      end

      operation 10748930 "isEnabledAt"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not the tab at <code>index</code> is
currently enabled.

@param index  the index of the item being queried
@return true if the tab at <code>index</code> is enabled;
         false otherwise
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setEnabledAt
"
      end

      operation 10749058 "getComponentAt"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component at <code>index</code>.

@param index  the index of the item being queried
@return the <code>Component</code> at <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setComponentAt
"
      end

      operation 10749186 "getMnemonicAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "tabIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the keyboard mnemonic for accessing the specified tab.
The mnemonic is the key which when combined with the look and feel's
mouseless modifier (usually Alt) will activate the specified
tab.

@since 1.4
@param tabIndex the index of the tab that the mnemonic refers to
@return the key code which represents the mnemonic;
        -1 if a mnemonic is not specified for the tab
@exception IndexOutOfBoundsException if index is out of range
           (<code>tabIndex</code> &lt; 0 ||
             <code>tabIndex</code> &gt;= tab count)
@see #setDisplayedMnemonicIndexAt(int,int)
@see #setMnemonicAt(int,int)
"
      end

      operation 10749314 "getDisplayedMnemonicIndexAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "tabIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character, as an index, that the look and feel should
provide decoration for as representing the mnemonic character.

@since 1.4
@param tabIndex the index of the tab that the mnemonic refers to
@return index representing mnemonic character if one exists;
   otherwise returns -1
@exception IndexOutOfBoundsException if index is out of range
           (<code>tabIndex</code> &lt; 0 ||
             <code>tabIndex</code> &gt;= tab count)
@see #setDisplayedMnemonicIndexAt(int,int)
@see #setMnemonicAt(int,int)
"
      end

      operation 10749442 "getBoundsAt"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab bounds at <code>index</code>.  If the tab at
this index is not currently visible in the UI, then returns
<code>null</code>.
If there is no UI set on this <code>tabbedpane</code>,
then returns <code>null</code>.

@param index the index to be queried
@return a <code>Rectangle</code> containing the tab bounds at
         <code>index</code>, or <code>null</code> if tab at
         <code>index</code> is not currently visible in the UI,
         or if there is no UI set on this <code>tabbedpane</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}
"
      end

      operation 10749570 "setTitleAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setters for the Pages

Sets the title at <code>index</code> to <code>title</code> which
can be <code>null</code>.
The title is not shown if a tab component for this tab was specified.
An internal exception is raised if there is no tab at that index.

@param index the tab index where the title should be set
@param title the title to be displayed in the tab
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #getTitleAt
@see #setTabComponentAt
@beaninfo
   preferred: true
   attribute: visualUpdate true
 description: The title at the specified tab index.
"
      end

      operation 10749698 "setIconAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the icon at <code>index</code> to <code>icon</code> which can be
<code>null</code>. This does not set disabled icon at <code>icon</code>.
If the new Icon is different than the current Icon and disabled icon
is not explicitly set, the LookAndFeel will be asked to generate a disabled
Icon. To explicitly set disabled icon, use <code>setDisableIconAt()</code>.
The icon is not shown if a tab component for this tab was specified.
An internal exception is raised if there is no tab at that index.

@param index the tab index where the icon should be set
@param icon the icon to be displayed in the tab
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setDisabledIconAt
@see #getIconAt
@see #getDisabledIconAt
@see #setTabComponentAt
@beaninfo
   preferred: true
   attribute: visualUpdate true
 description: The icon at the specified tab index.
"
      end

      operation 10749826 "setDisabledIconAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "disabledIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the disabled icon at <code>index</code> to <code>icon</code>
which can be <code>null</code>.
An internal exception is raised if there is no tab at that index.

@param index the tab index where the disabled icon should be set
@param disabledIcon the icon to be displayed in the tab when disabled
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #getDisabledIconAt
@beaninfo
   preferred: true
   attribute: visualUpdate true
 description: The disabled icon at the specified tab index.
"
      end

      operation 10749954 "setToolTipTextAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "toolTipText" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the tooltip text at <code>index</code> to <code>toolTipText</code>
which can be <code>null</code>.
An internal exception is raised if there is no tab at that index.

@param index the tab index where the tooltip text should be set
@param toolTipText the tooltip text to be displayed for the tab
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #getToolTipTextAt
@beaninfo
   preferred: true
 description: The tooltip text at the specified tab index.
@since 1.3
"
      end

      operation 10750082 "setBackgroundAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "background" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the background color at <code>index</code> to
<code>background</code>
which can be <code>null</code>, in which case the tab's background color
will default to the background color of the <code>tabbedpane</code>.
An internal exception is raised if there is no tab at that index.
<p>
It is up to the look and feel to honor this property, some may
choose to ignore it.

@param index the tab index where the background should be set
@param background the color to be displayed in the tab's background
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #getBackgroundAt
@beaninfo
   preferred: true
   attribute: visualUpdate true
 description: The background color at the specified tab index.
"
      end

      operation 10750210 "setForegroundAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "foreground" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the foreground color at <code>index</code> to
<code>foreground</code> which can be
<code>null</code>, in which case the tab's foreground color
will default to the foreground color of this <code>tabbedpane</code>.
An internal exception is raised if there is no tab at that index.
<p>
It is up to the look and feel to honor this property, some may
choose to ignore it.

@param index the tab index where the foreground should be set
@param foreground the color to be displayed as the tab's foreground
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #getForegroundAt
@beaninfo
   preferred: true
   attribute: visualUpdate true
 description: The foreground color at the specified tab index.
"
      end

      operation 10750338 "setEnabledAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not the tab at <code>index</code> is enabled.
An internal exception is raised if there is no tab at that index.

@param index the tab index which should be enabled/disabled
@param enabled whether or not the tab should be enabled
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #isEnabledAt
"
      end

      operation 10750466 "setComponentAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at <code>index</code> to <code>component</code>.
An internal exception is raised if there is no tab at that index.

@param index the tab index where this component is being placed
@param component the component for the tab
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #getComponentAt
@beaninfo
   attribute: visualUpdate true
 description: The component at the specified tab index.
"
      end

      operation 10750594 "setDisplayedMnemonicIndexAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "tabIndex" explicit_type "int"
	  param in name "mnemonicIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint to the look and feel as to which character in the
text should be decorated to represent the mnemonic. Not all look and
feels may support this. A value of -1 indicates either there is
no mnemonic for this tab, or you do not wish the mnemonic to be
displayed for this tab.
<p>
The value of this is updated as the properties relating to the
mnemonic change (such as the mnemonic itself, the text...).
You should only ever have to call this if
you do not wish the default character to be underlined. For example, if
the text at tab index 3 was 'Apple Price', with a mnemonic of 'p',
and you wanted the 'P'
to be decorated, as 'Apple <u>P</u>rice', you would have to invoke
<code>setDisplayedMnemonicIndex(3, 6)</code> after invoking
<code>setMnemonicAt(3, KeyEvent.VK_P)</code>.
<p>Note that it is the programmer's responsibility to ensure
that each tab has a unique mnemonic or unpredictable results may
occur.

@since 1.4
@param tabIndex the index of the tab that the mnemonic refers to
@param mnemonicIndex index into the <code>String</code> to underline
@exception IndexOutOfBoundsException if <code>tabIndex</code> is
           out of range ({@code tabIndex < 0 || tabIndex >= tab
           count})
@exception IllegalArgumentException will be thrown if
           <code>mnemonicIndex</code> is &gt;= length of the tab
           title , or &lt; -1
@see #setMnemonicAt(int,int)
@see #getDisplayedMnemonicIndexAt(int)

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: the index into the String to draw the keyboard character
              mnemonic at
"
      end

      operation 10750722 "setMnemonicAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "tabIndex" explicit_type "int"
	  param in name "mnemonic" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the keyboard mnemonic for accessing the specified tab.
The mnemonic is the key which when combined with the look and feel's
mouseless modifier (usually Alt) will activate the specified
tab.
<p>
A mnemonic must correspond to a single key on the keyboard
and should be specified using one of the <code>VK_XXX</code>
keycodes defined in <code>java.awt.event.KeyEvent</code>
or one of the extended keycodes obtained through
<code>java.awt.event.KeyEvent.getExtendedKeyCodeForChar</code>.
Mnemonics are case-insensitive, therefore a key event
with the corresponding keycode would cause the button to be
activated whether or not the Shift modifier was pressed.
<p>
This will update the displayed mnemonic property for the specified
tab.

@since 1.4
@param tabIndex the index of the tab that the mnemonic refers to
@param mnemonic the key code which represents the mnemonic
@exception IndexOutOfBoundsException if <code>tabIndex</code> is out
           of range ({@code tabIndex < 0 || tabIndex >= tab count})
@see #getMnemonicAt(int)
@see #setDisplayedMnemonicIndexAt(int,int)

@beaninfo
       bound: true
   attribute: visualUpdate true
 description: The keyboard mnenmonic, as a KeyEvent VK constant,
              for the specified tab
"
      end

      operation 10750850 "indexOfTab"
	public explicit_return_type "int"
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end of Page setters

Returns the first tab index with a given <code>title</code>,  or
-1 if no tab has this title.

@param title the title for the tab
@return the first tab index which matches <code>title</code>, or
         -1 if no tab has this title
"
      end

      operation 10750978 "indexOfTab"
	public explicit_return_type "int"
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first tab index with a given <code>icon</code>,
or -1 if no tab has this icon.

@param icon the icon for the tab
@return the first tab index which matches <code>icon</code>,
         or -1 if no tab has this icon
"
      end

      operation 10751106 "indexOfComponent"
	public explicit_return_type "int"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the tab for the specified component.
Returns -1 if there is no tab for this component.

@param component the component for the tab
@return the first tab which matches this component, or -1
         if there is no tab for this component
"
      end

      operation 10751234 "indexAtLocation"
	public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab index corresponding to the tab whose bounds
intersect the specified location.  Returns -1 if no tab
intersects the location.

@param x the x location relative to this tabbedpane
@param y the y location relative to this tabbedpane
@return the tab index which intersects the location, or
        -1 if no tab intersects the location
@since 1.4
"
      end

      operation 10751362 "getToolTipText"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tooltip text for the component determined by the
mouse event location.

@param event  the <code>MouseEvent</code> that tells where the
         cursor is lingering
@return the <code>String</code> containing the tooltip text
"
      end

      operation 10751490 "checkIndex"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10751618 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10751746 "compWriteObjectNotify"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called from the <code>JComponent</code>'s
<code>EnableSerializationFocusListener</code> to
do any Swing-specific pre-serialization configuration.
"
      end

      operation 10751874 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10752002 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JTabbedPane</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JTabbedPane.
"
      end

      operation 10752130 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JTabbedPane.
For tabbed panes, the AccessibleContext takes the form of an
AccessibleJTabbedPane.
A new AccessibleJTabbedPane instance is created if necessary.

@return an AccessibleJTabbedPane that serves as the
        AccessibleContext of this JTabbedPane
"
      end

      class 1291906 "AccessibleJTabbedPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4161282 // <generalisation>
	  relation 4161282 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4161282 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	classrelation 4161410 // <realization>
	  relation 4161410 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4161410 // <realization>
	    b parent class_ref 348674 // AccessibleSelection
	end

	classrelation 4161538 // <realization>
	  relation 4161538 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4161538 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	operation 10752258 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the accessible name of this object, or {@code null} if
there is no accessible name.

@return the accessible name of this object, nor {@code null}.
@since 1.6
"
	end

	operation 10752386 "AccessibleJTabbedPane"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Constructs an AccessibleJTabbedPane
"
	end

	operation 10752514 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10752642 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of
         the object
"
	end

	operation 10752770 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.

@return the number of accessible children in the object.
"
	end

	operation 10752898 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the specified Accessible child of the object.

@param i zero-based index of child
@return the Accessible child of the object
@exception IllegalArgumentException if index is out of bounds
"
	end

	operation 10753026 "getAccessibleSelection"
	  public return_type class_ref 348674 // AccessibleSelection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>AccessibleSelection</code> associated with
this object.  In the implementation of the Java
Accessibility API for this class,
returns this object, which is responsible for implementing the
<code>AccessibleSelection</code> interface on behalf of itself.

@return this object
"
	end

	operation 10753154 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>Accessible</code> child contained at
the local coordinate <code>Point</code>, if one exists.
Otherwise returns the currently selected tab.

@return the <code>Accessible</code> at the specified
   location, if it exists
"
	end

	operation 10753282 "getAccessibleSelectionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10753410 "getAccessibleSelection"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10753538 "isAccessibleChildSelected"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10753666 "addAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10753794 "removeAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10753922 "clearAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10754050 "selectAllAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10759938 "setTabComponentAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component that is responsible for rendering the
title for the specified tab.  A null value means
<code>JTabbedPane</code> will render the title and/or icon for
the specified tab.  A non-null value means the component will
render the title and <code>JTabbedPane</code> will not render
the title and/or icon.
<p>
Note: The component must not be one that the developer has
      already added to the tabbed pane.

@param index the tab index where the component should be set
@param component the component to render the title for the
                 specified tab
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}
@exception IllegalArgumentException if component has already been
           added to this <code>JTabbedPane</code>

@see #getTabComponentAt
@beaninfo
   preferred: true
   attribute: visualUpdate true
 description: The tab component at the specified tab index.
@since 1.6
"
      end

      operation 10760066 "getTabComponentAt"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tab component at <code>index</code>.

@param index  the index of the item being queried
@return the tab component at <code>index</code>
@exception IndexOutOfBoundsException if index is out of range
           {@code (index < 0 || index >= tab count)}

@see #setTabComponentAt
@since 1.6
"
      end

      operation 10760194 "indexOfTabComponent"
	public explicit_return_type "int"
	nparams 1
	  param inout name "tabComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the tab for the specified tab component.
Returns -1 if there is no tab for this tab component.

@param tabComponent the tab component for the tab
@return the first tab which matches this tab component, or -1
         if there is no tab for this tab component
@see #setTabComponentAt
@see #getTabComponentAt
@since 1.6
"
      end
    end

    class 448130 "JTree"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<a name=\"jtree_description\"></a>
A control that displays a set of hierarchical data as an outline.
You can find task-oriented documentation and examples of using trees in
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html\">How to Use Trees</a>,
a section in <em>The Java Tutorial.</em>
<p>
A specific node in a tree can be identified either by a
<code>TreePath</code> (an object
that encapsulates a node and all of its ancestors), or by its
display row, where each row in the display area displays one node.
An <i>expanded</i> node is a non-leaf node (as identified by
<code>TreeModel.isLeaf(node)</code> returning false) that will displays
its children when all its ancestors are <i>expanded</i>.
A <i>collapsed</i>
node is one which hides them. A <i>hidden</i> node is one which is
under a collapsed ancestor. All of a <i>viewable</i> nodes parents
are expanded, but may or may not be displayed. A <i>displayed</i> node
is both viewable and in the display area, where it can be seen.
</p>
The following <code>JTree</code> methods use \"visible\" to mean \"displayed\":
<ul>
<li><code>isRootVisible()</code>
<li><code>setRootVisible()</code>
<li><code>scrollPathToVisible()</code>
<li><code>scrollRowToVisible()</code>
<li><code>getVisibleRowCount()</code>
<li><code>setVisibleRowCount()</code>
</ul>
The next group of <code>JTree</code> methods use \"visible\" to mean
\"viewable\" (under an expanded parent):
<ul>
<li><code>isVisible()</code>
<li><code>makeVisible()</code>
</ul>
If you are interested in knowing when the selection changes implement
the <code>TreeSelectionListener</code> interface and add the instance
using the method <code>addTreeSelectionListener</code>.
<code>valueChanged</code> will be invoked when the
selection changes, that is if the user clicks twice on the same
node <code>valueChanged</code> will only be invoked once.
<p>
If you are interested in detecting either double-click events or when
a user clicks on a node, regardless of whether or not it was selected,
we recommend you do the following:
</p>
<pre>
final JTree tree = ...;

MouseListener ml = new MouseAdapter() {
    public void <b>mousePressed</b>(MouseEvent e) {
        int selRow = tree.getRowForLocation(e.getX(), e.getY());
        TreePath selPath = tree.getPathForLocation(e.getX(), e.getY());
        if(selRow != -1) {
            if(e.getClickCount() == 1) {
                mySingleClick(selRow, selPath);
            }
            else if(e.getClickCount() == 2) {
                myDoubleClick(selRow, selPath);
            }
        }
    }
};
tree.addMouseListener(ml);
</pre>
NOTE: This example obtains both the path and row, but you only need to
get the one you're interested in.
<p>
To use <code>JTree</code> to display compound nodes
(for example, nodes containing both
a graphic icon and text), subclass {@link TreeCellRenderer} and use
{@link #setCellRenderer} to tell the tree to use it. To edit such nodes,
subclass {@link TreeCellEditor} and use {@link #setCellEditor}.
</p>
<p>
Like all <code>JComponent</code> classes, you can use {@link InputMap} and
{@link ActionMap}
to associate an {@link Action} object with a {@link KeyStroke}
and execute the action under specified conditions.
</p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.
</p>
@beaninfo
  attribute: isContainer false
description: A component that displays a set of hierarchical data as an outline.

@author Rob Davis
@author Ray Ryan
@author Scott Violet
"
      class 450306 "DropLocation"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 4170242 // <generalisation>
	relation 4170242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4170242 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4170370 // <realization>
	relation 4170370 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4170370 // <realization>
	  b parent class_ref 427522 // Scrollable
      end

      classrelation 4170498 // <realization>
	relation 4170498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4170498 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4170626 // uiClassID (<unidirectional association>)
	relation 4170626 --->
	  a role_name "uiClassID" init_value " \"TreeUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4170626 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4170754 // treeModel (<unidirectional association>)
	relation 4170754 --->
	  a role_name "treeModel" protected
	    comment "
The model that defines the tree displayed by this object.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4170754 // treeModel (<unidirectional association>)
	  b parent class_ref 449410 // TreeModel
      end

      classrelation 4170882 // selectionModel (<unidirectional association>)
	relation 4170882 --->
	  a role_name "selectionModel" protected
	    comment "
Models the set of selected nodes in this tree.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4170882 // selectionModel (<unidirectional association>)
	  b parent class_ref 449538 // TreeSelectionModel
      end

      attribute 2430722 "rootVisible"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if the root node is displayed, false if its children are
the highest visible nodes.

"
      end

      classrelation 4171010 // cellRenderer (<unidirectional association>)
	relation 4171010 --->
	  a role_name "cellRenderer" protected
	    comment "
The cell used to draw nodes. If <code>null</code>, the UI uses a default
<code>cellRenderer</code>.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4171010 // cellRenderer (<unidirectional association>)
	  b parent class_ref 448002 // TreeCellRenderer
      end

      attribute 2430850 "rowHeight"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Height to use for each display row. If this is &lt;= 0 the renderer
determines the height for each row.

"
      end

      attribute 2430978 "rowHeightSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4171138 // expandedState (<unidirectional association>)
	relation 4171138 --->
	  a role_name "expandedState" private
	    comment "
Maps from <code>TreePath</code> to <code>Boolean</code>
indicating whether or not the
particular path is expanded. This ONLY indicates whether a
given path is expanded, and NOT if it is visible or not. That
information must be determined by visiting all the parent
paths and seeing if they are visible.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TreePath, Boolean> ${name}${value};
"
	    classrelation_ref 4171138 // expandedState (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      attribute 2431106 "showsRootHandles"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if handles are displayed at the topmost level of the tree.
<p>
A handle is a small icon that displays adjacent to the node which
allows the user to click once to expand or collapse the node. A
common interface shows a plus sign (+) for a node which can be
expanded and a minus sign (-) for a node which can be collapsed.
Handles are always shown for nodes below the topmost level.
<p>
If the <code>rootVisible</code> setting specifies that the root
node is to be displayed, then that is the only node at the topmost
level. If the root node is not displayed, then all of its
children are at the topmost level of the tree. Handles are
always displayed for nodes other than the topmost.
<p>
If the root node isn't visible, it is generally a good to make
this value true. Otherwise, the tree looks exactly like a list,
and users may not know that the \"list entries\" are actually
tree nodes.

@see #rootVisible

"
      end

      attribute 2431234 "showsRootHandlesSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1294466 "TreeSelectionRedirector"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 4171266 // selectionRedirector (<unidirectional association>)
	relation 4171266 --->
	  a role_name "selectionRedirector" protected
	    comment "
Creates a new event and passed it off the
<code>selectionListeners</code>.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4171266 // selectionRedirector (<unidirectional association>)
	  b parent class_ref 1294466 // TreeSelectionRedirector
      end

      classrelation 4171394 // cellEditor (<unidirectional association>)
	relation 4171394 --->
	  a role_name "cellEditor" protected
	    comment "
Editor for the entries.  Default is <code>null</code>
(tree is not editable).

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4171394 // cellEditor (<unidirectional association>)
	  b parent class_ref 449026 // TreeCellEditor
      end

      attribute 2431362 "editable"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Is the tree editable? Default is false.

"
      end

      attribute 2431490 "largeModel"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Is this tree a large model? This is a code-optimization setting.
A large model can be used when the cell height is the same for all
nodes. The UI will then cache very little information and instead
continually message the model. Without a large model the UI caches
most of the information, resulting in fewer method calls to the model.
<p>
This value is only a suggestion to the UI. Not all UIs will
take advantage of it. Default value is false.

"
      end

      attribute 2431618 "visibleRowCount"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of rows to make visible at one time. This value is used for
the <code>Scrollable</code> interface. It determines the preferred
size of the display area.

"
      end

      attribute 2431746 "invokesStopCellEditing"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, when editing is to be stopped by way of selection changing,
data in tree changing or other means <code>stopCellEditing</code>
is invoked, and changes are saved. If false,
<code>cancelCellEditing</code> is invoked, and changes
are discarded. Default is false.

"
      end

      attribute 2431874 "scrollsOnExpand"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, when a node is expanded, as many of the descendants are
scrolled to be visible.

"
      end

      attribute 2432002 "scrollsOnExpandSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2432130 "toggleClickCount"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of mouse clicks before a node is expanded.

"
      end

      classrelation 4171522 // treeModelListener (<unidirectional association>)
	relation 4171522 --->
	  a role_name "treeModelListener" protected
	    comment "
Updates the <code>expandedState</code>.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4171522 // treeModelListener (<unidirectional association>)
	  b parent class_ref 449922 // TreeModelListener
      end

      classrelation 4171650 // expandedStack (<unidirectional association>)
	relation 4171650 --->
	  a role_name "expandedStack" private
	    comment "
Used when <code>setExpandedState</code> is invoked,
will be a <code>Stack</code> of <code>Stack</code>s.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Stack<TreePath>> ${name}${value};
"
	    classrelation_ref 4171650 // expandedStack (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      classrelation 4171778 // leadPath (<unidirectional association>)
	relation 4171778 --->
	  a role_name "leadPath" private
	    comment "
Lead selection path, may not be <code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4171778 // leadPath (<unidirectional association>)
	  b parent class_ref 448770 // TreePath
      end

      classrelation 4171906 // anchorPath (<unidirectional association>)
	relation 4171906 --->
	  a role_name "anchorPath" private
	    comment "
Anchor path.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4171906 // anchorPath (<unidirectional association>)
	  b parent class_ref 448770 // TreePath
      end

      attribute 2432258 "expandsSelectedPaths"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if paths in the selection should be expanded.

"
      end

      attribute 2432386 "settingUI"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is set to true for the life of the <code>setUI</code> call.

"
      end

      attribute 2432514 "dragEnabled"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, mouse presses on selections initiate a drag operation. 
"
      end

      classrelation 4172034 // dropMode (<unidirectional association>)
	relation 4172034 --->
	  a role_name "dropMode" init_value " DropMode.USE_SELECTION" private
	    comment "
The drop mode for this component.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4172034 // dropMode (<unidirectional association>)
	  b parent class_ref 427906 // DropMode
      end

      classrelation 4172162 // dropLocation (<unidirectional association>)
	relation 4172162 --->
	  a role_name "dropLocation" private
	    comment "
The drop location.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4172162 // dropLocation (<unidirectional association>)
	  b parent class_ref 351618 // DropLocation
      end
    end

    class 456578 "JToolBar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JToolBar</code> provides a component that is useful for
displaying commonly used <code>Action</code>s or controls.
For examples and information on using tool bars see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html\">How to Use Tool Bars</a>,
a section in <em>The Java Tutorial</em>.

<p>
With most look and feels,
the user can drag out a tool bar into a separate window
(unless the <code>floatable</code> property is set to <code>false</code>).
For drag-out to work correctly, it is recommended that you add
<code>JToolBar</code> instances to one of the four \"sides\" of a
container whose layout manager is a <code>BorderLayout</code>,
and do not add children to any of the other four \"sides\".
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer true
description: A component which displays commonly used controls or Actions.

@author Georges Saab
@author Jeff Shapiro
@see Action
"
      classrelation 4167810 // <generalisation>
	relation 4167810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4167810 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4167938 // <realization>
	relation 4167938 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4167938 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      classrelation 4168066 // <realization>
	relation 4168066 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4168066 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4168194 // uiClassID (<unidirectional association>)
	relation 4168194 --->
	  a role_name "uiClassID" init_value " \"ToolBarUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4168194 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2430338 "paintBorder"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4168322 // margin (<unidirectional association>)
	relation 4168322 --->
	  a role_name "margin" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4168322 // margin (<unidirectional association>)
	  b parent class_ref 343938 // Insets
      end

      attribute 2430466 "floatable"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2430594 "orientation"
	private explicit_type "int"
	init_value " HORIZONTAL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10769026 "JToolBar"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new tool bar; orientation defaults to <code>HORIZONTAL</code>.
"
      end

      operation 10769154 "JToolBar"
	public explicit_return_type ""
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new tool bar with the specified <code>orientation</code>.
The <code>orientation</code> must be either <code>HORIZONTAL</code>
or <code>VERTICAL</code>.

@param orientation  the orientation desired
"
      end

      operation 10769282 "JToolBar"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new tool bar with the specified <code>name</code>.  The
name is used as the title of the undocked tool bar.  The default
orientation is <code>HORIZONTAL</code>.

@param name the name of the tool bar
@since 1.3
"
      end

      operation 10769410 "JToolBar"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new tool bar with a specified <code>name</code> and
<code>orientation</code>.
All other constructors call this constructor.
If <code>orientation</code> is an invalid value, an exception will
be thrown.

@param name  the name of the tool bar
@param orientation  the initial orientation -- it must be
         either <code>HORIZONTAL</code> or <code>VERTICAL</code>
@exception IllegalArgumentException if orientation is neither
         <code>HORIZONTAL</code> nor <code>VERTICAL</code>
@since 1.3
"
      end

      operation 10769538 "getUI"
	public return_type class_ref 476802 // ToolBarUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tool bar's current UI.
@see #setUI
"
      end

      operation 10769666 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 476802 // ToolBarUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the L&amp;F object that renders this component.

@param ui  the <code>ToolBarUI</code> L&amp;F object
@see UIDefaults#getUI
@beaninfo
       bound: true
      hidden: true
   attribute: visualUpdate true
 description: The UI object that implements the Component's LookAndFeel.
"
      end

      operation 10769794 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIFactory</code> that the L&amp;F has changed.
Called to replace the UI with the latest version from the
<code>UIFactory</code>.

@see JComponent#updateUI
"
      end

      operation 10769922 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"ToolBarUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10770050 "getComponentIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the specified component.
(Note: Separators occupy index positions.)

@param c  the <code>Component</code> to find
@return an integer indicating the component's position,
         where 0 is first
"
      end

      operation 10770178 "getComponentAtIndex"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component at the specified index.

@param i  the component's position, where 0 is first
@return   the <code>Component</code> at that position,
         or <code>null</code> for an invalid index

"
      end

      operation 10770306 "setMargin"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 343938 // Insets
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the margin between the tool bar's border and
its buttons. Setting to <code>null</code> causes the tool bar to
use the default margins. The tool bar's default <code>Border</code>
object uses this value to create the proper margin.
However, if a non-default border is set on the tool bar,
it is that <code>Border</code> object's responsibility to create the
appropriate margin space (otherwise this property will
effectively be ignored).

@param m an <code>Insets</code> object that defines the space
        between the border and the buttons
@see Insets
@beaninfo
description: The margin between the tool bar's border and contents
      bound: true
     expert: true
"
      end

      operation 10770434 "getMargin"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the margin between the tool bar's border and
its buttons.

@return an <code>Insets</code> object containing the margin values
@see Insets
"
      end

      operation 10770562 "isBorderPainted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>borderPainted</code> property.

@return the value of the <code>borderPainted</code> property
@see #setBorderPainted
"
      end

      operation 10770690 "setBorderPainted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>borderPainted</code> property, which is
<code>true</code> if the border should be painted.
The default value for this property is <code>true</code>.
Some look and feels might not implement painted borders;
they will ignore this property.

@param b if true, the border is painted
@see #isBorderPainted
@beaninfo
description: Does the tool bar paint its borders?
      bound: true
     expert: true
"
      end

      operation 10770818 "paintBorder"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the tool bar's border if the <code>borderPainted</code> property
is <code>true</code>.

@param g  the <code>Graphics</code> context in which the painting
        is done
@see JComponent#paint
@see JComponent#setBorder
"
      end

      operation 10770946 "isFloatable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>floatable</code> property.

@return the value of the <code>floatable</code> property

@see #setFloatable
"
      end

      operation 10771074 "setFloatable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>floatable</code> property,
which must be <code>true</code> for the user to move the tool bar.
Typically, a floatable tool bar can be
dragged into a different position within the same container
or out into its own window.
The default value of this property is <code>true</code>.
Some look and feels might not implement floatable tool bars;
they will ignore this property.

@param b if <code>true</code>, the tool bar can be moved;
         <code>false</code> otherwise
@see #isFloatable
@beaninfo
description: Can the tool bar be made to float by the user?
      bound: true
  preferred: true
"
      end

      operation 10771202 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current orientation of the tool bar.  The value is either
<code>HORIZONTAL</code> or <code>VERTICAL</code>.

@return an integer representing the current orientation -- either
         <code>HORIZONTAL</code> or <code>VERTICAL</code>
@see #setOrientation
"
      end

      operation 10771330 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "o" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the orientation of the tool bar.  The orientation must have
either the value <code>HORIZONTAL</code> or <code>VERTICAL</code>.
If <code>orientation</code> is
an invalid value, an exception will be thrown.

@param o  the new orientation -- either <code>HORIZONTAL</code> or
                 <code>VERTICAL</code>
@exception IllegalArgumentException if orientation is neither
         <code>HORIZONTAL</code> nor <code>VERTICAL</code>
@see #getOrientation
@beaninfo
description: The current orientation of the tool bar
      bound: true
  preferred: true
       enum: HORIZONTAL SwingConstants.HORIZONTAL
             VERTICAL   SwingConstants.VERTICAL
"
      end

      operation 10771458 "setRollover"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rollover" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rollover state of this toolbar. If the rollover state is true
then the border of the toolbar buttons will be drawn only when the
mouse pointer hovers over them. The default value of this property
is false.
<p>
The implementation of a look and feel may choose to ignore this
property.

@param rollover true for rollover toolbar buttons; otherwise false
@since 1.4
@beaninfo
       bound: true
   preferred: true
   attribute: visualUpdate true
 description: Will draw rollover button borders in the toolbar.
"
      end

      operation 10771586 "isRollover"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the rollover state.

@return true if rollover toolbar buttons are to be drawn; otherwise false
@see #setRollover(boolean)
@since 1.4
"
      end

      operation 10771714 "checkOrientation"
	private explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10771842 "addSeparator"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a separator of default size to the end of the tool bar.
The default size is determined by the current look and feel.
"
      end

      operation 10771970 "addSeparator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "size" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a separator of a specified size to the end
of the tool bar.

@param size the <code>Dimension</code> of the separator
"
      end

      operation 10772098 "add"
	public return_type class_ref 389378 // JButton
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new <code>JButton</code> which dispatches the action.

@param a the <code>Action</code> object to add as a new menu item
@return the new button which dispatches the action
"
      end

      operation 10772226 "createActionComponent"
	protected return_type class_ref 389378 // JButton
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method which creates the <code>JButton</code> for
<code>Action</code>s added to the <code>JToolBar</code>.
The default name is empty if a <code>null</code> action is passed.

@param a the <code>Action</code> for the button to be added
@return the newly created button
@see Action
@since 1.3
"
      end

      operation 10772354 "createActionChangeListener"
	protected return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "b" type class_ref 389378 // JButton
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a properly configured <code>PropertyChangeListener</code>
which updates the control as changes to the <code>Action</code> occur,
or <code>null</code> if the default
property change listener for the control is desired.

@return <code>null</code>
"
      end

      operation 10772482 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a <code>JButton</code> is being added, it is initially
set to be disabled.

@param comp  the component to be enhanced
@param constraints  the constraints to be enforced on the component
@param index the index of the component

"
      end

      class 1293826 "Separator"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4168450 // <generalisation>
	  relation 4168450 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4168450 // <generalisation>
	    b parent class_ref 394114 // JSeparator
	end

	classrelation 4168578 // separatorSize (<unidirectional association>)
	  relation 4168578 --->
	    a role_name "separatorSize" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4168578 // separatorSize (<unidirectional association>)
	    b parent class_ref 316802 // Dimension
	end

	operation 10772610 "Separator"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new toolbar separator with the default size
as defined by the current look and feel.
"
	end

	operation 10772738 "Separator"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "size" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new toolbar separator with the specified size.

@param size the <code>Dimension</code> of the separator
"
	end

	operation 10772866 "getUIClassID"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"ToolBarSeparatorUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
	end

	operation 10772994 "setSeparatorSize"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "size" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the size of the separator.

@param size the new <code>Dimension</code> of the separator
"
	end

	operation 10773122 "getSeparatorSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the size of the separator

@return the <code>Dimension</code> object containing the separator's
        size (This is a reference, NOT a copy!)
"
	end

	operation 10773250 "getMinimumSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the minimum size for the separator.

@return the <code>Dimension</code> object containing the separator's
        minimum size
"
	end

	operation 10773378 "getMaximumSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the maximum size for the separator.

@return the <code>Dimension</code> object containing the separator's
        maximum size
"
	end

	operation 10773506 "getPreferredSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the preferred size for the separator.

@return the <code>Dimension</code> object containing the separator's
        preferred size
"
	end
      end

      operation 10773634 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10773762 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JToolBar</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JToolBar</code>.
"
      end

      class 1293954 "DefaultToolBarLayout"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4168706 // <realization>
	  relation 4168706 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4168706 // <realization>
	    b parent class_ref 406402 // LayoutManager2
	end

	classrelation 4168834 // <realization>
	  relation 4168834 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4168834 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 4168962 // <realization>
	  relation 4168962 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4168962 // <realization>
	    b parent class_ref 347266 // PropertyChangeListener
	end

	classrelation 4169090 // <realization>
	  relation 4169090 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4169090 // <realization>
	    b parent class_ref 354818 // UIResource
	end

	classrelation 4169218 // lm (<unidirectional association>)
	  relation 4169218 --->
	    a role_name "lm" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4169218 // lm (<unidirectional association>)
	    b parent class_ref 1264514 // BoxLayout
	end

	operation 10773890 "DefaultToolBarLayout"
	  package explicit_return_type ""
	  nparams 1
	    param in name "orientation" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774018 "addLayoutComponent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "comp" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774146 "addLayoutComponent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "constraints" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774274 "removeLayoutComponent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "comp" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774402 "preferredLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774530 "minimumLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774658 "maximumLayoutSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774786 "layoutContainer"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10774914 "getLayoutAlignmentX"
	  public explicit_return_type "float"
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10775042 "getLayoutAlignmentY"
	  public explicit_return_type "float"
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10775170 "invalidateLayout"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "target" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10775298 "propertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10775426 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mgr" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10775554 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JToolBar.
For tool bars, the AccessibleContext takes the form of an
AccessibleJToolBar.
A new AccessibleJToolBar instance is created if necessary.

@return an AccessibleJToolBar that serves as the
        AccessibleContext of this JToolBar
"
      end

      class 1294082 "AccessibleJToolBar"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4169346 // <generalisation>
	  relation 4169346 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4169346 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 10775682 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see AccessibleState
"
	end

	operation 10775810 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the object
"
	end
      end
    end

    class 468738 "JWindow"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>JWindow</code> is a container that can be displayed anywhere on the
user's desktop. It does not have the title bar, window-management buttons,
or other trimmings associated with a <code>JFrame</code>, but it is still a
\"first-class citizen\" of the user's desktop, and can exist anywhere
on it.
<p>
The <code>JWindow</code> component contains a <code>JRootPane</code>
as its only child.  The <code>contentPane</code> should be the parent
of any children of the <code>JWindow</code>.
As a convenience, the {@code add}, {@code remove}, and {@code setLayout}
methods of this class are overridden, so that they delegate calls
to the corresponding methods of the {@code ContentPane}.
For example, you can add a child component to a window as follows:
<pre>
      window.add(child);
</pre>
And the child will be added to the contentPane.
The <code>contentPane</code> will always be non-<code>null</code>.
Attempting to set it to <code>null</code> will cause the <code>JWindow</code>
to throw an exception. The default <code>contentPane</code> will have a
<code>BorderLayout</code> manager set on it.
Refer to {@link javax.swing.RootPaneContainer}
for details on adding, removing and setting the <code>LayoutManager</code>
of a <code>JWindow</code>.
<p>
Please see the {@link JRootPane} documentation for a complete description of
the <code>contentPane</code>, <code>glassPane</code>, and
<code>layeredPane</code> components.
<p>
In a multi-screen environment, you can create a <code>JWindow</code>
on a different screen device.  See {@link java.awt.Window} for more
information.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JRootPane

@beaninfo
     attribute: isContainer true
     attribute: containerDelegate getContentPane
   description: A toplevel window which has no system border or controls.

@author David Kloba
"
      classrelation 929026 // <generalisation>
	relation 929026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 929026 // <generalisation>
	  b parent class_ref 347394 // Window
      end

      classrelation 929154 // <realization>
	relation 929154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 929154 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 929282 // <realization>
	relation 929282 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 929282 // <realization>
	  b parent class_ref 469762 // RootPaneContainer
      end

      classrelation 929410 // <realization>
	relation 929410 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 929410 // <realization>
	  b parent class_ref 351490 // HasGetTransferHandler
      end

      classrelation 929538 // rootPane (<unidirectional association>)
	relation 929538 --->
	  a role_name "rootPane" protected
	    comment "
The <code>JRootPane</code> instance that manages the
<code>contentPane</code>
and optional <code>menuBar</code> for this frame, as well as the
<code>glassPane</code>.

@see #getRootPane
@see #setRootPane

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929538 // rootPane (<unidirectional association>)
	  b parent class_ref 434050 // JRootPane
      end

      attribute 612610 "rootPaneCheckingEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then calls to <code>add</code> and <code>setLayout</code>
will be forwarded to the <code>contentPane</code>. This is initially
false, but is set to true when the <code>JWindow</code> is constructed.

@see #isRootPaneCheckingEnabled
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer

"
      end

      classrelation 929666 // transferHandler (<unidirectional association>)
	relation 929666 --->
	  a role_name "transferHandler" private
	    comment "
The <code>TransferHandler</code> for this window.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929666 // transferHandler (<unidirectional association>)
	  b parent class_ref 351362 // TransferHandler
      end

      operation 2830466 "JWindow"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a window with no specified owner. This window will not be
focusable.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@throws HeadlessException if
        <code>GraphicsEnvironment.isHeadless()</code> returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see #isFocusableWindow
@see JComponent#getDefaultLocale
"
      end

      operation 2830594 "JWindow"
	public explicit_return_type ""
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a window with the specified <code>GraphicsConfiguration</code>
of a screen device. This window will not be focusable.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@param gc the <code>GraphicsConfiguration</code> that is used
         to construct the new window with; if gc is <code>null</code>,
         the system default <code>GraphicsConfiguration</code>
         is assumed
@throws HeadlessException If
        <code>GraphicsEnvironment.isHeadless()</code> returns true.
@throws IllegalArgumentException if <code>gc</code> is not from
        a screen device.

@see java.awt.GraphicsEnvironment#isHeadless
@see #isFocusableWindow
@see JComponent#getDefaultLocale

@since  1.3
"
      end

      operation 2830722 "JWindow"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 393346 // Frame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a window with the specified owner frame.
If <code>owner</code> is <code>null</code>, the shared owner
will be used and this window will not be focusable. Also,
this window will not be focusable unless its owner is showing
on the screen.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@param owner the frame from which the window is displayed
@throws HeadlessException if GraphicsEnvironment.isHeadless()
           returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see #isFocusableWindow
@see JComponent#getDefaultLocale
"
      end

      operation 2830850 "JWindow"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a window with the specified owner window. This window
will not be focusable unless its owner is showing on the screen.
If <code>owner</code> is <code>null</code>, the shared owner
will be used and this window will not be focusable.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@param owner the window from which the window is displayed
@throws HeadlessException if
        <code>GraphicsEnvironment.isHeadless()</code> returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see #isFocusableWindow
@see JComponent#getDefaultLocale
"
      end

      operation 2830978 "JWindow"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a window with the specified owner window and
<code>GraphicsConfiguration</code> of a screen device. If
<code>owner</code> is <code>null</code>, the shared owner will be used
and this window will not be focusable.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@param owner the window from which the window is displayed
@param gc the <code>GraphicsConfiguration</code> that is used
         to construct the new window with; if gc is <code>null</code>,
         the system default <code>GraphicsConfiguration</code>
         is assumed, unless <code>owner</code> is also null, in which
         case the <code>GraphicsConfiguration</code> from the
         shared owner frame will be used.
@throws HeadlessException if
        <code>GraphicsEnvironment.isHeadless()</code> returns true.
@throws IllegalArgumentException if <code>gc</code> is not from
        a screen device.

@see java.awt.GraphicsEnvironment#isHeadless
@see #isFocusableWindow
@see JComponent#getDefaultLocale

@since  1.3
"
      end

      operation 2831106 "windowInit"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructors to init the <code>JWindow</code> properly.
"
      end

      operation 2831234 "createRootPane"
	protected return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create the default
<code>rootPane</code>.
"
      end

      operation 2831362 "isRootPaneCheckingEnabled"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@return true if <code>add</code> and <code>setLayout</code>
        are forwarded; false otherwise

@see #addImpl
@see #setLayout
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 2831490 "setTransferHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newHandler" type class_ref 351362 // TransferHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code transferHandler} property, which is a mechanism to
support transfer of data into this component. Use {@code null}
if the component does not support data transfer operations.
<p>
If the system property {@code suppressSwingDropSupport} is {@code false}
(the default) and the current drop target on this component is either
{@code null} or not a user-set drop target, this method will change the
drop target as follows: If {@code newHandler} is {@code null} it will
clear the drop target. If not {@code null} it will install a new
{@code DropTarget}.
<p>
Note: When used with {@code JWindow}, {@code TransferHandler} only
provides data import capability, as the data export related methods
are currently typed to {@code JComponent}.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html\">
How to Use Drag and Drop and Data Transfer</a>, a section in
<em>The Java Tutorial</em>, for more information.

@param newHandler the new {@code TransferHandler}

@see TransferHandler
@see #getTransferHandler
@see java.awt.Component#setDropTarget
@since 1.6

@beaninfo
       bound: true
      hidden: true
 description: Mechanism for transfer of data into the component
"
      end

      operation 2831618 "getTransferHandler"
	public return_type class_ref 351362 // TransferHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>transferHandler</code> property.

@return the value of the <code>transferHandler</code> property

@see TransferHandler
@see #setTransferHandler
@since 1.6
"
      end

      operation 2831746 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>paint(g)</code>.  This method was overridden to
prevent an unnecessary call to clear the background.

@param g  the <code>Graphics</code> context in which to paint
"
      end

      operation 2831874 "setRootPaneCheckingEnabled"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@param enabled  true if <code>add</code> and <code>setLayout</code>
       are forwarded, false if they should operate directly on the
       <code>JWindow</code>.

@see #addImpl
@see #setLayout
@see #isRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
@beaninfo
     hidden: true
description: Whether the add and setLayout methods are forwarded
"
      end

      operation 2832002 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified child <code>Component</code>.
This method is overridden to conditionally forward calls to the
<code>contentPane</code>.
By default, children are added to the <code>contentPane</code> instead
of the frame, refer to {@link javax.swing.RootPaneContainer} for
details.

@param comp the component to be enhanced
@param constraints the constraints to be respected
@param index the index
@exception IllegalArgumentException if <code>index</code> is invalid
@exception IllegalArgumentException if adding the container's parent
                 to itself
@exception IllegalArgumentException if adding a window to a container

@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 2832130 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the container. If
<code>comp</code> is not the <code>rootPane</code>, this will forward
the call to the <code>contentPane</code>. This will do nothing if
<code>comp</code> is not a child of the <code>JWindow</code> or
<code>contentPane</code>.

@param comp the component to be removed
@throws NullPointerException if <code>comp</code> is null
@see #add
@see javax.swing.RootPaneContainer
"
      end

      operation 2832258 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "manager" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>LayoutManager</code>.
Overridden to conditionally forward the call to the
<code>contentPane</code>.
Refer to {@link javax.swing.RootPaneContainer} for
more information.

@param manager the <code>LayoutManager</code>
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 2832386 "getRootPane"
	public return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>rootPane</code> object for this window.
@return the <code>rootPane</code> property for this window

@see #setRootPane
@see RootPaneContainer#getRootPane
"
      end

      operation 2832514 "setRootPane"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the new <code>rootPane</code> object for this window.
This method is called by the constructor.

@param root the new <code>rootPane</code> property
@see #getRootPane

@beaninfo
       hidden: true
  description: the RootPane object for this window.
"
      end

      operation 2832642 "getContentPane"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Container</code> which is the <code>contentPane</code>
for this window.

@return the <code>contentPane</code> property
@see #setContentPane
@see RootPaneContainer#getContentPane
"
      end

      operation 2832770 "setContentPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentPane" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>contentPane</code> property for this window.
This method is called by the constructor.

@param contentPane the new <code>contentPane</code>

@exception IllegalComponentStateException (a runtime
           exception) if the content pane parameter is <code>null</code>
@see #getContentPane
@see RootPaneContainer#setContentPane

@beaninfo
    hidden: true
    description: The client area of the window where child
                 components are normally inserted.
"
      end

      operation 2832898 "getLayeredPane"
	public return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>layeredPane</code> object for this window.

@return the <code>layeredPane</code> property
@see #setLayeredPane
@see RootPaneContainer#getLayeredPane
"
      end

      operation 2833026 "setLayeredPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layeredPane" type class_ref 400642 // JLayeredPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>layeredPane</code> property.
This method is called by the constructor.

@param layeredPane the new <code>layeredPane</code> object

@exception IllegalComponentStateException (a runtime
           exception) if the content pane parameter is <code>null</code>
@see #getLayeredPane
@see RootPaneContainer#setLayeredPane

@beaninfo
    hidden: true
    description: The pane which holds the various window layers.
"
      end

      operation 2833154 "getGlassPane"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>glassPane Component</code> for this window.

@return the <code>glassPane</code> property
@see #setGlassPane
@see RootPaneContainer#getGlassPane
"
      end

      operation 2833282 "setGlassPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "glassPane" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>glassPane</code> property.
This method is called by the constructor.
@param glassPane the <code>glassPane</code> object for this window

@see #getGlassPane
@see RootPaneContainer#setGlassPane

@beaninfo
    hidden: true
    description: A transparent pane used for menu rendering.
"
      end

      operation 2833410 "getGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@since 1.6
"
      end

      operation 2833538 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "time" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the specified rectangle of this component within
<code>time</code> milliseconds.  Refer to <code>RepaintManager</code>
for details on how the repaint is handled.

@param     time   maximum time in milliseconds before update
@param     x    the <i>x</i> coordinate
@param     y    the <i>y</i> coordinate
@param     width    the width
@param     height   the height
@see       RepaintManager
@since     1.6
"
      end

      operation 2833666 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JWindow</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JWindow</code>
"
      end

      classrelation 929794 // accessibleContext (<unidirectional association>)
	relation 929794 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////
 The accessible context property. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929794 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 2833794 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this JWindow.
For JWindows, the AccessibleContext takes the form of an
AccessibleJWindow.
A new AccessibleJWindow instance is created if necessary.

@return an AccessibleJWindow that serves as the
        AccessibleContext of this JWindow
"
      end

      class 469890 "AccessibleJWindow"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 929922 // <generalisation>
	  relation 929922 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 929922 // <generalisation>
	    b parent class_ref 469634 // AccessibleAWTWindow
	end
      end
    end

    class 469762 "RootPaneContainer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface is implemented by components that have a single
JRootPane child: JDialog, JFrame, JWindow, JApplet, JInternalFrame.
The methods in  this interface are just <i>covers</i> for the JRootPane
properties, e.g. <code>getContentPane()</code> is generally implemented
like this:<pre>
    public Container getContentPane() {
        return getRootPane().getContentPane();
    }
</pre>
This interface serves as a <i>marker</i> for Swing GUI builders
that need to treat components like JFrame, that contain a
single JRootPane, specially.  For example in a GUI builder,
dropping a component on a RootPaneContainer would be interpreted
as <code>frame.getContentPane().add(child)</code>.
<p>
As a convenience, the standard classes that implement this interface
(such as {@code JFrame}, {@code JDialog}, {@code JWindow}, {@code JApplet},
and {@code JInternalFrame}) have their {@code add}, {@code remove},
and {@code setLayout} methods overridden, so that they delegate calls
to the corresponding methods of the {@code ContentPane}.
For example, you can add a child component to a frame as follows:
<pre>
      frame.add(child);
</pre>
instead of:
<pre>
      frame.getContentPane().add(child);
</pre>
<p>
The behavior of the <code>add</code> and
<code>setLayout</code> methods for
<code>JFrame</code>, <code>JDialog</code>, <code>JWindow</code>,
<code>JApplet</code> and <code>JInternalFrame</code> is controlled by
the <code>rootPaneCheckingEnabled</code> property. If this property is
true (the default), then calls to these methods are
forwarded to the <code>contentPane</code>; if false, these
methods operate directly on the <code>RootPaneContainer</code>. This
property is only intended for subclasses, and is therefore protected.

@see JRootPane
@see JFrame
@see JDialog
@see JWindow
@see JApplet
@see JInternalFrame

@author Hans Muller
"
      operation 2829570 "getRootPane"
	public return_type class_ref 434050 // JRootPane
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return this component's single JRootPane child.  A conventional
implementation of this interface will have all of the other
methods indirect through this one.  The rootPane has two
children: the glassPane and the layeredPane.

@return this components single JRootPane child.
@see JRootPane
"
      end

      operation 2829698 "setContentPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentPane" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"contentPane\" is the primary container for application
specific components.  Applications should add children to
the contentPane, set its layout manager, and so on.
<p>
The contentPane may not be null.
<p>
Generally implemented with
<code>getRootPane().setContentPane(contentPane);</code>

@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the content pane parameter is null
@param contentPane the Container to use for the contents of this
       JRootPane
@see JRootPane#getContentPane
@see #getContentPane
"
      end

      operation 2829826 "getContentPane"
	public return_type class_ref 338690 // Container
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the contentPane.

@return the value of the contentPane property.
@see #setContentPane
"
      end

      operation 2829954 "setLayeredPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layeredPane" type class_ref 400642 // JLayeredPane
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A Container that manages the contentPane and in some cases a menu bar.
The layeredPane can be used by descendants that want to add a child
to the RootPaneContainer that isn't layout managed.  For example
an internal dialog or a drag and drop effect component.
<p>
The layeredPane may not be null.
<p>
Generally implemented with<pre>
   getRootPane().setLayeredPane(layeredPane);</pre>

@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the layered pane parameter is null
@see #getLayeredPane
@see JRootPane#getLayeredPane
"
      end

      operation 2830082 "getLayeredPane"
	public return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the layeredPane.

@return the value of the layeredPane property.
@see #setLayeredPane
"
      end

      operation 2830210 "setGlassPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "glassPane" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The glassPane is always the first child of the rootPane
and the rootPanes layout manager ensures that it's always
as big as the rootPane.  By default it's transparent and
not visible.  It can be used to temporarily grab all keyboard
and mouse input by adding listeners and then making it visible.
by default it's not visible.
<p>
The glassPane may not be null.
<p>
Generally implemented with
<code>getRootPane().setGlassPane(glassPane);</code>

@see #getGlassPane
@see JRootPane#setGlassPane
"
      end

      operation 2830338 "getGlassPane"
	public return_type class_ref 338818 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the glassPane.

@return the value of the glassPane property.
@see #setGlassPane
"
      end
    end

    class 472834 "JFormattedTextField"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JFormattedTextField</code> extends <code>JTextField</code> adding
support for formatting arbitrary values, as well as retrieving a particular
object once the user has edited the text. The following illustrates
configuring a <code>JFormattedTextField</code> to edit dates:
<pre>
  JFormattedTextField ftf = new JFormattedTextField();
  ftf.setValue(new Date());
</pre>
<p>
Once a <code>JFormattedTextField</code> has been created, you can
listen for editing changes by way of adding
a <code>PropertyChangeListener</code> and listening for
<code>PropertyChangeEvent</code>s with the property name <code>value</code>.
<p>
<code>JFormattedTextField</code> allows
configuring what action should be taken when focus is lost. The possible
configurations are:
<table summary=\"Possible JFormattedTextField configurations and their descriptions\">
<tr><th><p style=\"text-align:left\">Value</p></th><th><p style=\"text-align:left\">Description</p></th></tr>
<tr><td>JFormattedTextField.REVERT
           <td>Revert the display to match that of <code>getValue</code>,
               possibly losing the current edit.
       <tr><td>JFormattedTextField.COMMIT
           <td>Commits the current value. If the value being edited
               isn't considered a legal value by the
               <code>AbstractFormatter</code> that is, a
               <code>ParseException</code> is thrown, then the value
               will not change, and then edited value will persist.
       <tr><td>JFormattedTextField.COMMIT_OR_REVERT
           <td>Similar to <code>COMMIT</code>, but if the value isn't
               legal, behave like <code>REVERT</code>.
       <tr><td>JFormattedTextField.PERSIST
           <td>Do nothing, don't obtain a new
               <code>AbstractFormatter</code>, and don't update the value.
</table>
The default is <code>JFormattedTextField.COMMIT_OR_REVERT</code>,
refer to {@link #setFocusLostBehavior} for more information on this.
<p>
<code>JFormattedTextField</code> allows the focus to leave, even if
the currently edited value is invalid. To lock the focus down while the
<code>JFormattedTextField</code> is an invalid edit state
you can attach an <code>InputVerifier</code>. The following code snippet
shows a potential implementation of such an <code>InputVerifier</code>:
<pre>
public class FormattedTextFieldVerifier extends InputVerifier {
    public boolean verify(JComponent input) {
        if (input instanceof JFormattedTextField) {
            JFormattedTextField ftf = (JFormattedTextField)input;
            AbstractFormatter formatter = ftf.getFormatter();
            if (formatter != null) {
                String text = ftf.getText();
                try {
                     formatter.stringToValue(text);
                     return true;
                 } catch (ParseException pe) {
                     return false;
                 }
             }
         }
         return true;
     }
     public boolean shouldYieldFocus(JComponent input) {
         return verify(input);
     }
 }
</pre>
<p>
Alternatively, you could invoke <code>commitEdit</code>, which would also
commit the value.
<p>
<code>JFormattedTextField</code> does not do the formatting it self,
rather formatting is done through an instance of
<code>JFormattedTextField.AbstractFormatter</code> which is obtained from
an instance of <code>JFormattedTextField.AbstractFormatterFactory</code>.
Instances of <code>JFormattedTextField.AbstractFormatter</code> are
notified when they become active by way of the
<code>install</code> method, at which point the
<code>JFormattedTextField.AbstractFormatter</code> can install whatever
it needs to, typically a <code>DocumentFilter</code>. Similarly when
<code>JFormattedTextField</code> no longer
needs the <code>AbstractFormatter</code>, it will invoke
<code>uninstall</code>.
<p>
<code>JFormattedTextField</code> typically
queries the <code>AbstractFormatterFactory</code> for an
<code>AbstractFormat</code> when it gains or loses focus. Although this
can change based on the focus lost policy. If the focus lost
policy is <code>JFormattedTextField.PERSIST</code>
and the <code>JFormattedTextField</code> has been edited, the
<code>AbstractFormatterFactory</code> will not be queried until the
value has been committed. Similarly if the focus lost policy is
<code>JFormattedTextField.COMMIT</code> and an exception
is thrown from <code>stringToValue</code>, the
<code>AbstractFormatterFactory</code> will not be queried when focus is
lost or gained.
<p>
<code>JFormattedTextField.AbstractFormatter</code>
is also responsible for determining when values are committed to
the <code>JFormattedTextField</code>. Some
<code>JFormattedTextField.AbstractFormatter</code>s will make new values
available on every edit, and others will never commit the value. You can
force the current value to be obtained
from the current <code>JFormattedTextField.AbstractFormatter</code>
by way of invoking <code>commitEdit</code>. <code>commitEdit</code> will
be invoked whenever return is pressed in the
<code>JFormattedTextField</code>.
<p>
If an <code>AbstractFormatterFactory</code> has not been explicitly
set, one will be set based on the <code>Class</code> of the value type after
<code>setValue</code> has been invoked (assuming value is non-null).
For example, in the following code an appropriate
<code>AbstractFormatterFactory</code> and <code>AbstractFormatter</code>
will be created to handle formatting of numbers:
<pre>
  JFormattedTextField tf = new JFormattedTextField();
  tf.setValue(100);
</pre>
<p>
<strong>Warning:</strong> As the <code>AbstractFormatter</code> will
typically install a <code>DocumentFilter</code> on the
<code>Document</code>, and a <code>NavigationFilter</code> on the
<code>JFormattedTextField</code> you should not install your own. If you do,
you are likely to see odd behavior in that the editing policy of the
<code>AbstractFormatter</code> will not be enforced.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@since 1.4
"
      classrelation 4123010 // <generalisation>
	relation 4123010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4123010 // <generalisation>
	  b parent class_ref 360066 // JTextField
      end

      classrelation 4123138 // uiClassID (<unidirectional association>)
	relation 4123138 --->
	  a role_name "uiClassID" init_value " \"FormattedTextFieldUI\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4123138 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4123266 // defaultActions (<unidirectional association>)
	relation 4123266 --->
	  a role_name "defaultActions" multiplicity "[]" init_value "
            { new CommitAction(), new CancelAction() }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4123266 // defaultActions (<unidirectional association>)
	  b parent class_ref 352258 // Action
      end

      attribute 2408962 "COMMIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant identifying that when focus is lost,
<code>commitEdit</code> should be invoked. If in committing the
new value a <code>ParseException</code> is thrown, the invalid
value will remain.

@see #setFocusLostBehavior

"
      end

      attribute 2409090 "COMMIT_OR_REVERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant identifying that when focus is lost,
<code>commitEdit</code> should be invoked. If in committing the new
value a <code>ParseException</code> is thrown, the value will be
reverted.

@see #setFocusLostBehavior

"
      end

      attribute 2409218 "REVERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant identifying that when focus is lost, editing value should
be reverted to current value set on the
<code>JFormattedTextField</code>.

@see #setFocusLostBehavior

"
      end

      attribute 2409346 "PERSIST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant identifying that when focus is lost, the edited value
should be left.

@see #setFocusLostBehavior

"
      end

      class 1283842 "AbstractFormatterFactory"
	abstract visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 10619138 "getFormatter"
	  abstract public return_type class_ref 1283970 // AbstractFormatter
	  nparams 1
	    param inout name "tf" type class_ref 472834 // JFormattedTextField
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an <code>AbstractFormatter</code> that can handle formatting
of the passed in <code>JFormattedTextField</code>.

@param tf JFormattedTextField requesting AbstractFormatter
@return AbstractFormatter to handle formatting duties, a null
        return value implies the JFormattedTextField should behave
        like a normal JTextField
"
	end
      end

      classrelation 4123394 // factory (<unidirectional association>)
	relation 4123394 --->
	  a role_name "factory" private
	    comment "
Factory used to obtain an instance of AbstractFormatter.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4123394 // factory (<unidirectional association>)
	  b parent class_ref 1283842 // AbstractFormatterFactory
      end

      class 1283970 "AbstractFormatter"
	abstract visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4124546 // <realization>
	  relation 4124546 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4124546 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 4124674 // ftf (<unidirectional association>)
	  relation 4124674 --->
	    a role_name "ftf" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4124674 // ftf (<unidirectional association>)
	    b parent class_ref 472834 // JFormattedTextField
	end

	operation 10619266 "install"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ftf" type class_ref 472834 // JFormattedTextField
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Installs the <code>AbstractFormatter</code> onto a particular
<code>JFormattedTextField</code>.
This will invoke <code>valueToString</code> to convert the
current value from the <code>JFormattedTextField</code> to
a String. This will then install the <code>Action</code>s from
<code>getActions</code>, the <code>DocumentFilter</code>
returned from <code>getDocumentFilter</code> and the
<code>NavigationFilter</code> returned from
<code>getNavigationFilter</code> onto the
<code>JFormattedTextField</code>.
<p>
Subclasses will typically only need to override this if they
wish to install additional listeners on the
<code>JFormattedTextField</code>.
<p>
If there is a <code>ParseException</code> in converting the
current value to a String, this will set the text to an empty
String, and mark the <code>JFormattedTextField</code> as being
in an invalid state.
<p>
While this is a public method, this is typically only useful
for subclassers of <code>JFormattedTextField</code>.
<code>JFormattedTextField</code> will invoke this method at
the appropriate times when the value changes, or its internal
state changes.  You will only need to invoke this yourself if
you are subclassing <code>JFormattedTextField</code> and
installing/uninstalling <code>AbstractFormatter</code> at a
different time than <code>JFormattedTextField</code> does.

@param ftf JFormattedTextField to format for, may be null indicating
           uninstall from current JFormattedTextField.
"
	end

	operation 10619394 "uninstall"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Uninstalls any state the <code>AbstractFormatter</code> may have
installed on the <code>JFormattedTextField</code>. This resets the
<code>DocumentFilter</code>, <code>NavigationFilter</code>
and additional <code>Action</code>s installed on the
<code>JFormattedTextField</code>.
"
	end

	operation 10619522 "stringToValue"
	  abstract public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "text" type class_ref 128130 // String
	  nexceptions 1
	    exception class_ref 372482 // ParseException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Parses <code>text</code> returning an arbitrary Object. Some
formatters may return null.

@throws ParseException if there is an error in the conversion
@param text String to convert
@return Object representation of text
"
	end

	operation 10619650 "valueToString"
	  abstract public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "value" type class_ref 129538 // Object
	  nexceptions 1
	    exception class_ref 372482 // ParseException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the string value to display for <code>value</code>.

@throws ParseException if there is an error in the conversion
@param value Value to convert
@return String representation of value
"
	end

	operation 10619778 "getFormattedTextField"
	  protected return_type class_ref 472834 // JFormattedTextField
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the current <code>JFormattedTextField</code> the
<code>AbstractFormatter</code> is installed on.

@return JFormattedTextField formatting for.
"
	end

	operation 10619906 "invalidEdit"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This should be invoked when the user types an invalid character.
This forwards the call to the current JFormattedTextField.
"
	end

	operation 10620034 "setEditValid"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "valid" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoke this to update the <code>editValid</code> property of the
<code>JFormattedTextField</code>. If you an enforce a policy
such that the <code>JFormattedTextField</code> is always in a
valid state, you will never need to invoke this.

@param valid Valid state of the JFormattedTextField
"
	end

	operation 10620162 "getActions"
	  protected return_type class_ref 352258 // Action
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Subclass and override if you wish to provide a custom set of
<code>Action</code>s. <code>install</code> will install these
on the <code>JFormattedTextField</code>'s <code>ActionMap</code>.

@return Array of Actions to install on JFormattedTextField
"
	end

	operation 10620290 "getDocumentFilter"
	  protected return_type class_ref 408834 // DocumentFilter
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Subclass and override if you wish to provide a
<code>DocumentFilter</code> to restrict what can be input.
<code>install</code> will install the returned value onto
the <code>JFormattedTextField</code>.

@return DocumentFilter to restrict edits
"
	end

	operation 10620418 "getNavigationFilter"
	  protected return_type class_ref 403330 // NavigationFilter
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Subclass and override if you wish to provide a filter to restrict
where the user can navigate to.
<code>install</code> will install the returned value onto
the <code>JFormattedTextField</code>.

@return NavigationFilter to restrict navigation
"
	end

	operation 10620546 "clone"
	  protected return_type class_ref 129538 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 129794 // CloneNotSupportedException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clones the <code>AbstractFormatter</code>. The returned instance
is not associated with a <code>JFormattedTextField</code>.

@return Copy of the AbstractFormatter
"
	end

	operation 10620674 "installDocumentFilter"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "filter" type class_ref 408834 // DocumentFilter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Installs the <code>DocumentFilter</code> <code>filter</code>
onto the current <code>JFormattedTextField</code>.

@param filter DocumentFilter to install on the Document.
"
	end
      end

      classrelation 4123522 // format (<unidirectional association>)
	relation 4123522 --->
	  a role_name "format" private
	    comment "
Object responsible for formatting the current value.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4123522 // format (<unidirectional association>)
	  b parent class_ref 1283970 // AbstractFormatter
      end

      classrelation 4123650 // value (<unidirectional association>)
	relation 4123650 --->
	  a role_name "value" private
	    comment "
Last valid value.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4123650 // value (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2409474 "editValid"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True while the value being edited is valid.

"
      end

      attribute 2409602 "focusLostBehavior"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Behavior when focus is lost.

"
      end

      attribute 2409730 "edited"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates the current value has been edited.

"
      end

      classrelation 4123778 // documentListener (<unidirectional association>)
	relation 4123778 --->
	  a role_name "documentListener" private
	    comment "
Used to set the dirty state.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4123778 // documentListener (<unidirectional association>)
	  b parent class_ref 403842 // DocumentListener
      end

      classrelation 4123906 // mask (<unidirectional association>)
	relation 4123906 --->
	  a role_name "mask" private
	    comment "
Masked used to set the AbstractFormatterFactory.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4123906 // mask (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4124034 // textFormatterActionMap (<unidirectional association>)
	relation 4124034 --->
	  a role_name "textFormatterActionMap" private
	    comment "
ActionMap that the TextFormatter Actions are added to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4124034 // textFormatterActionMap (<unidirectional association>)
	  b parent class_ref 357890 // ActionMap
      end

      attribute 2409858 "composedTextExists"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates the input method composed text is in the document

"
      end

      class 1284098 "FocusLostHandler"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4124290 // <realization>
	  relation 4124290 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4124290 // <realization>
	    b parent class_ref 128770 // Runnable
	end

	classrelation 4124418 // <realization>
	  relation 4124418 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4124418 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10617858 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4124162 // focusLostHandler (<unidirectional association>)
	relation 4124162 --->
	  a role_name "focusLostHandler" private
	    comment "
A handler for FOCUS_LOST event

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4124162 // focusLostHandler (<unidirectional association>)
	  b parent class_ref 1284098 // FocusLostHandler
      end

      operation 10615298 "JFormattedTextField"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JFormattedTextField</code> with no
<code>AbstractFormatterFactory</code>. Use <code>setMask</code> or
<code>setFormatterFactory</code> to configure the
<code>JFormattedTextField</code> to edit a particular type of
value.
"
      end

      operation 10615426 "JFormattedTextField"
	public explicit_return_type ""
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a JFormattedTextField with the specified value. This will
create an <code>AbstractFormatterFactory</code> based on the
type of <code>value</code>.

@param value Initial value for the JFormattedTextField
"
      end

      operation 10615554 "JFormattedTextField"
	public explicit_return_type ""
	nparams 1
	  param inout name "format" type class_ref 1045250 // Format
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JFormattedTextField</code>. <code>format</code> is
wrapped in an appropriate <code>AbstractFormatter</code> which is
then wrapped in an <code>AbstractFormatterFactory</code>.

@param format Format used to look up an AbstractFormatter
"
      end

      operation 10615682 "JFormattedTextField"
	public explicit_return_type ""
	nparams 1
	  param inout name "formatter" type class_ref 1283970 // AbstractFormatter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JFormattedTextField</code> with the specified
<code>AbstractFormatter</code>. The <code>AbstractFormatter</code>
is placed in an <code>AbstractFormatterFactory</code>.

@param formatter AbstractFormatter to use for formatting.
"
      end

      operation 10615810 "JFormattedTextField"
	public explicit_return_type ""
	nparams 1
	  param inout name "factory" type class_ref 1283842 // AbstractFormatterFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JFormattedTextField</code> with the specified
<code>AbstractFormatterFactory</code>.

@param factory AbstractFormatterFactory used for formatting.
"
      end

      operation 10615938 "JFormattedTextField"
	public explicit_return_type ""
	nparams 2
	  param inout name "factory" type class_ref 1283842 // AbstractFormatterFactory
	  param inout name "currentValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JFormattedTextField</code> with the specified
<code>AbstractFormatterFactory</code> and initial value.

@param factory <code>AbstractFormatterFactory</code> used for
       formatting.
@param currentValue Initial value to use
"
      end

      operation 10616066 "setFocusLostBehavior"
	public explicit_return_type "void"
	nparams 1
	  param in name "behavior" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the behavior when focus is lost. This will be one of
<code>JFormattedTextField.COMMIT_OR_REVERT</code>,
<code>JFormattedTextField.REVERT</code>,
<code>JFormattedTextField.COMMIT</code> or
<code>JFormattedTextField.PERSIST</code>
Note that some <code>AbstractFormatter</code>s may push changes as
they occur, so that the value of this will have no effect.
<p>
This will throw an <code>IllegalArgumentException</code> if the object
passed in is not one of the afore mentioned values.
<p>
The default value of this property is
<code>JFormattedTextField.COMMIT_OR_REVERT</code>.

@param behavior Identifies behavior when focus is lost
@throws IllegalArgumentException if behavior is not one of the known
        values
@beaninfo
 enum: COMMIT         JFormattedTextField.COMMIT
       COMMIT_OR_REVERT JFormattedTextField.COMMIT_OR_REVERT
       REVERT         JFormattedTextField.REVERT
       PERSIST        JFormattedTextField.PERSIST
 description: Behavior when component loses focus
"
      end

      operation 10616194 "getFocusLostBehavior"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the behavior when focus is lost. This will be one of
<code>COMMIT_OR_REVERT</code>,
<code>COMMIT</code>,
<code>REVERT</code> or
<code>PERSIST</code>
Note that some <code>AbstractFormatter</code>s may push changes as
they occur, so that the value of this will have no effect.

@return returns behavior when focus is lost
"
      end

      operation 10616322 "setFormatterFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tf" type class_ref 1283842 // AbstractFormatterFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>AbstractFormatterFactory</code>.
<code>AbstractFormatterFactory</code> is
able to return an instance of <code>AbstractFormatter</code> that is
used to format a value for display, as well an enforcing an editing
policy.
<p>
If you have not explicitly set an <code>AbstractFormatterFactory</code>
by way of this method (or a constructor) an
<code>AbstractFormatterFactory</code> and consequently an
<code>AbstractFormatter</code> will be used based on the
<code>Class</code> of the value. <code>NumberFormatter</code> will
be used for <code>Number</code>s, <code>DateFormatter</code> will
be used for <code>Dates</code>, otherwise <code>DefaultFormatter</code>
will be used.
<p>
This is a JavaBeans bound property.

@param tf <code>AbstractFormatterFactory</code> used to lookup
         instances of <code>AbstractFormatter</code>
@beaninfo
      bound: true
  attribute: visualUpdate true
description: AbstractFormatterFactory, responsible for returning an
             AbstractFormatter that can format the current value.
"
      end

      operation 10616450 "getFormatterFactory"
	public return_type class_ref 1283842 // AbstractFormatterFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <code>AbstractFormatterFactory</code>.

@see #setFormatterFactory
@return <code>AbstractFormatterFactory</code> used to determine
        <code>AbstractFormatter</code>s
"
      end

      operation 10616578 "setFormatter"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "format" type class_ref 1283970 // AbstractFormatter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current <code>AbstractFormatter</code>.
<p>
You should not normally invoke this, instead set the
<code>AbstractFormatterFactory</code> or set the value.
<code>JFormattedTextField</code> will
invoke this as the state of the <code>JFormattedTextField</code>
changes and requires the value to be reset.
<code>JFormattedTextField</code> passes in the
<code>AbstractFormatter</code> obtained from the
<code>AbstractFormatterFactory</code>.
<p>
This is a JavaBeans bound property.

@see #setFormatterFactory
@param format AbstractFormatter to use for formatting
@beaninfo
      bound: true
  attribute: visualUpdate true
description: TextFormatter, responsible for formatting the current value
"
      end

      operation 10616706 "getFormatter"
	public return_type class_ref 1283970 // AbstractFormatter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>AbstractFormatter</code> that is used to format and
parse the current value.

@return AbstractFormatter used for formatting
"
      end

      operation 10616834 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value that will be formatted by an
<code>AbstractFormatter</code> obtained from the current
<code>AbstractFormatterFactory</code>. If no
<code>AbstractFormatterFactory</code> has been specified, this will
attempt to create one based on the type of <code>value</code>.
<p>
The default value of this property is null.
<p>
This is a JavaBeans bound property.

@param value Current value to display
@beaninfo
      bound: true
  attribute: visualUpdate true
description: The value to be formatted.
"
      end

      operation 10616962 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last valid value. Based on the editing policy of
the <code>AbstractFormatter</code> this may not return the current
value. The currently edited value can be obtained by invoking
<code>commitEdit</code> followed by <code>getValue</code>.

@return Last valid value
"
      end

      operation 10617090 "commitEdit"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 372482 // ParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the current value to be taken from the
<code>AbstractFormatter</code> and set as the current value.
This has no effect if there is no current
<code>AbstractFormatter</code> installed.

@throws ParseException if the <code>AbstractFormatter</code> is not able
        to format the current value
"
      end

      operation 10617218 "setEditValid"
	private explicit_return_type "void"
	nparams 1
	  param inout name "isValid" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the validity of the edit on the receiver. You should not normally
invoke this. This will be invoked by the
<code>AbstractFormatter</code> as the user edits the value.
<p>
Not all formatters will allow the component to get into an invalid
state, and thus this may never be invoked.
<p>
Based on the look and feel this may visually change the state of
the receiver.

@param isValid boolean indicating if the currently edited value is
       valid.
@beaninfo
      bound: true
  attribute: visualUpdate true
description: True indicates the edited value is valid
"
      end

      operation 10617346 "isEditValid"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current value being edited is valid. The value of
this is managed by the current <code>AbstractFormatter</code>, as such
there is no public setter for it.

@return true if the current value being edited is valid.
"
      end

      operation 10617474 "invalidEdit"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the user inputs an invalid value. This gives the
component a chance to provide feedback. The default
implementation beeps.
"
      end

      operation 10617602 "processInputMethodEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346754 // InputMethodEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes any input method events, such as
<code>InputMethodEvent.INPUT_METHOD_TEXT_CHANGED</code> or
<code>InputMethodEvent.CARET_POSITION_CHANGED</code>.

@param e the <code>InputMethodEvent</code>
@see InputMethodEvent
"
      end

      operation 10617730 "processFocusEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes any focus events, such as
<code>FocusEvent.FOCUS_GAINED</code> or
<code>FocusEvent.FOCUS_LOST</code>.

@param e the <code>FocusEvent</code>
@see FocusEvent
"
      end

      operation 10617986 "getActions"
	public return_type class_ref 352258 // Action
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the command list for the editor.  This is
the list of commands supported by the plugged-in UI
augmented by the collection of commands that the
editor itself supports.  These are useful for binding
to events, such as in a keymap.

@return the command list
"
      end

      operation 10618114 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class ID for a UI.

@return the string \"FormattedTextFieldUI\"
@see JComponent#getUIClassID
"
      end

      operation 10618242 "setDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 405378 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the editor with a text document.
The currently registered factory is used to build a view for
the document, which gets displayed by the editor after revalidation.
A PropertyChange event (\"document\") is propagated to each listener.

@param doc  the document to display/edit
@see #getDocument
@beaninfo
 description: the text document model
       bound: true
      expert: true
"
      end

      operation 10618370 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject and writeObject in JComponent for more
information about serialization in Swing.

@param s Stream to write to
"
      end

      operation 10618498 "setFormatterActions"
	private explicit_return_type "void"
	nparams 1
	  param inout name "actions" type class_ref 352258 // Action
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the Actions that come from the TextFormatter to
<code>actions</code>.
"
      end

      operation 10618626 "setValue"
	private explicit_return_type "void"
	nparams 3
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "createFormat" explicit_type "boolean"
	  param inout name "firePC" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the setting of the value. If <code>createFormat</code> is true,
this will also obtain a new <code>AbstractFormatter</code> from the
current factory. The property change event will be fired if
<code>firePC</code> is true.
"
      end

      operation 10618754 "setEdited"
	private explicit_return_type "void"
	nparams 1
	  param inout name "edited" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the edited state of the receiver.
"
      end

      operation 10618882 "isEdited"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the receiver has been edited.
"
      end

      operation 10619010 "getDefaultFormatterFactory"
	private return_type class_ref 1283842 // AbstractFormatterFactory
	nparams 1
	  param inout name "type" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an AbstractFormatterFactory suitable for the passed in
Object type.
"
      end

      class 1284226 "CommitAction"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4124802 // <generalisation>
	  relation 4124802 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4124802 // <generalisation>
	    b parent class_ref 430082 // NotifyAction
	end

	operation 10620802 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10620930 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1284354 "CancelAction"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4124930 // <generalisation>
	  relation 4124930 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4124930 // <generalisation>
	    b parent class_ref 406658 // TextAction
	end

	operation 10621058 "CancelAction"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10621186 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10621314 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1284482 "DocumentHandler"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4125058 // <realization>
	  relation 4125058 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4125058 // <realization>
	    b parent class_ref 403842 // DocumentListener
	end

	classrelation 4125186 // <realization>
	  relation 4125186 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4125186 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10621442 "insertUpdate"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 403970 // DocumentEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10621570 "removeUpdate"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 403970 // DocumentEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10621698 "changedUpdate"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 403970 // DocumentEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 475010 "JTable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>JTable</code> is used to display and edit regular two-dimensional tables
of cells.
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/table.html\">How to Use Tables</a>
in <em>The Java Tutorial</em>
for task-oriented documentation and examples of using <code>JTable</code>.

<p>
The <code>JTable</code> has many
facilities that make it possible to customize its rendering and editing
but provides defaults for these features so that simple tables can be
set up easily.  For example, to set up a table with 10 rows and 10
columns of numbers:

<pre>
     TableModel dataModel = new AbstractTableModel() {
         public int getColumnCount() { return 10; }
         public int getRowCount() { return 10;}
         public Object getValueAt(int row, int col) { return new Integer(row*col); }
     };
     JTable table = new JTable(dataModel);
     JScrollPane scrollpane = new JScrollPane(table);
</pre>
<p>
{@code JTable}s are typically placed inside of a {@code JScrollPane}.  By
default, a {@code JTable} will adjust its width such that
a horizontal scrollbar is unnecessary.  To allow for a horizontal scrollbar,
invoke {@link #setAutoResizeMode} with {@code AUTO_RESIZE_OFF}.
Note that if you wish to use a <code>JTable</code> in a standalone
view (outside of a <code>JScrollPane</code>) and want the header
displayed, you can get it using {@link #getTableHeader} and
display it separately.
<p>
To enable sorting and filtering of rows, use a
{@code RowSorter}.
You can set up a row sorter in either of two ways:
<ul>
  <li>Directly set the {@code RowSorter}. For example:
       {@code table.setRowSorter(new TableRowSorter(model))}.
  <li>Set the {@code autoCreateRowSorter}
      property to {@code true}, so that the {@code JTable}
      creates a {@code RowSorter} for
      you. For example: {@code setAutoCreateRowSorter(true)}.
</ul>
<p>
When designing applications that use the <code>JTable</code> it is worth paying
close attention to the data structures that will represent the table's data.
The <code>DefaultTableModel</code> is a model implementation that
uses a <code>Vector</code> of <code>Vector</code>s of <code>Object</code>s to
store the cell values. As well as copying the data from an
application into the <code>DefaultTableModel</code>,
it is also possible to wrap the data in the methods of the
<code>TableModel</code> interface so that the data can be passed to the
<code>JTable</code> directly, as in the example above. This often results
in more efficient applications because the model is free to choose the
internal representation that best suits the data.
A good rule of thumb for deciding whether to use the <code>AbstractTableModel</code>
or the <code>DefaultTableModel</code> is to use the <code>AbstractTableModel</code>
as the base class for creating subclasses and the <code>DefaultTableModel</code>
when subclassing is not required.
<p>
The \"TableExample\" directory in the demo area of the source distribution
gives a number of complete examples of <code>JTable</code> usage,
covering how the <code>JTable</code> can be used to provide an
editable view of data taken from a database and how to modify
the columns in the display to use specialized renderers and editors.
<p>
The <code>JTable</code> uses integers exclusively to refer to both the rows and the columns
of the model that it displays. The <code>JTable</code> simply takes a tabular range of cells
and uses <code>getValueAt(int, int)</code> to retrieve the
values from the model during painting.  It is important to remember that
the column and row indexes returned by various <code>JTable</code> methods
are in terms of the <code>JTable</code> (the view) and are not
necessarily the same indexes used by the model.
<p>
By default, columns may be rearranged in the <code>JTable</code> so that the
view's columns appear in a different order to the columns in the model.
This does not affect the implementation of the model at all: when the
columns are reordered, the <code>JTable</code> maintains the new order of the columns
internally and converts its column indices before querying the model.
<p>
So, when writing a <code>TableModel</code>, it is not necessary to listen for column
reordering events as the model will be queried in its own coordinate
system regardless of what is happening in the view.
In the examples area there is a demonstration of a sorting algorithm making
use of exactly this technique to interpose yet another coordinate system
where the order of the rows is changed, rather than the order of the columns.
<p>
Similarly when using the sorting and filtering functionality
provided by <code>RowSorter</code> the underlying
<code>TableModel</code> does not need to know how to do sorting,
rather <code>RowSorter</code> will handle it.  Coordinate
conversions will be necessary when using the row based methods of
<code>JTable</code> with the underlying <code>TableModel</code>.
All of <code>JTable</code>s row based methods are in terms of the
<code>RowSorter</code>, which is not necessarily the same as that
of the underlying <code>TableModel</code>.  For example, the
selection is always in terms of <code>JTable</code> so that when
using <code>RowSorter</code> you will need to convert using
<code>convertRowIndexToView</code> or
<code>convertRowIndexToModel</code>.  The following shows how to
convert coordinates from <code>JTable</code> to that of the
underlying model:
<pre>
  int[] selection = table.getSelectedRows();
  for (int i = 0; i &lt; selection.length; i++) {
    selection[i] = table.convertRowIndexToModel(selection[i]);
  }
  // selection is now in terms of the underlying TableModel
</pre>
<p>
By default if sorting is enabled <code>JTable</code> will persist the
selection and variable row heights in terms of the model on
sorting.  For example if row 0, in terms of the underlying model,
is currently selected, after the sort row 0, in terms of the
underlying model will be selected.  Visually the selection may
change, but in terms of the underlying model it will remain the
same.  The one exception to that is if the model index is no longer
visible or was removed.  For example, if row 0 in terms of model
was filtered out the selection will be empty after the sort.
<p>
J2SE 5 adds methods to <code>JTable</code> to provide convenient access to some
common printing needs. Simple new {@link #print()} methods allow for quick
and easy addition of printing support to your application. In addition, a new
{@link #getPrintable} method is available for more advanced printing needs.
<p>
As for all <code>JComponent</code> classes, you can use
{@link InputMap} and {@link ActionMap} to associate an
{@link Action} object with a {@link KeyStroke} and execute the
action under specified conditions.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.


@beaninfo
  attribute: isContainer false
description: A component which displays data in a two dimensional grid.

@author Philip Milne
@author Shannon Hickey (printing support)
@see javax.swing.table.DefaultTableModel
@see javax.swing.table.TableRowSorter

 The first versions of the JTable, contained in Swing-0.1 through
Swing-0.4, were written by Alan Chung.
"
      classrelation 4163330 // <generalisation>
	relation 4163330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4163330 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4163586 // <realization>
	relation 4163586 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4163586 // <realization>
	  b parent class_ref 1292034 // TableModelListener
      end

      classrelation 4163714 // <realization>
	relation 4163714 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4163714 // <realization>
	  b parent class_ref 427522 // Scrollable
      end

      classrelation 4163970 // <realization>
	relation 4163970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4163970 // <realization>
	  b parent class_ref 1292290 // TableColumnModelListener
      end

      classrelation 4164098 // <realization>
	relation 4164098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4164098 // <realization>
	  b parent class_ref 365442 // ListSelectionListener
      end

      classrelation 4164226 // <realization>
	relation 4164226 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4164226 // <realization>
	  b parent class_ref 449666 // CellEditorListener
      end

      classrelation 4164354 // <realization>
	relation 4164354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4164354 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4164610 // <realization>
	relation 4164610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4164610 // <realization>
	  b parent class_ref 1269506 // RowSorterListener
      end

      classrelation 4164738 // uiClassID (<unidirectional association>)
	relation 4164738 --->
	  a role_name "uiClassID" init_value " \"TableUI\"" class_relation const_relation private
	    comment " Static Constants


@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4164738 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2426114 "AUTO_RESIZE_OFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Do not adjust column widths automatically; use a horizontal scrollbar instead. 
"
      end

      attribute 2426242 "AUTO_RESIZE_NEXT_COLUMN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " When a column is adjusted in the UI, adjust the next column the opposite way. 
"
      end

      attribute 2426370 "AUTO_RESIZE_SUBSEQUENT_COLUMNS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " During UI adjustment, change subsequent columns to preserve the total width;
this is the default behavior. 
"
      end

      attribute 2426498 "AUTO_RESIZE_LAST_COLUMN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " During all resize operations, apply adjustments to the last column only. 
"
      end

      attribute 2426626 "AUTO_RESIZE_ALL_COLUMNS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " During all resize operations, proportionately resize all columns. 
"
      end

      class 1292546 "PrintMode"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2426754 "NORMAL"
	  public type class_ref 1292546 // PrintMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Printing mode that prints the table at its current size,
spreading both columns and rows across multiple pages if necessary.

"
	end

	attribute 2426882 "FIT_WIDTH"
	  public type class_ref 1292546 // PrintMode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Printing mode that scales the output smaller, if necessary,
to fit the table's entire width (and thereby all columns) on each page;
Rows are spread across multiple pages as necessary.
"
	end
      end

      classrelation 4164866 // dataModel (<unidirectional association>)
	relation 4164866 --->
	  a role_name "dataModel" protected
	    comment " Instance Variables

 The <code>TableModel</code> of the table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4164866 // dataModel (<unidirectional association>)
	  b parent class_ref 1292674 // TableModel
      end

      classrelation 4164994 // columnModel (<unidirectional association>)
	relation 4164994 --->
	  a role_name "columnModel" protected
	    comment " The <code>TableColumnModel</code> of the table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4164994 // columnModel (<unidirectional association>)
	  b parent class_ref 1292802 // TableColumnModel
      end

      classrelation 4165122 // selectionModel (<unidirectional association>)
	relation 4165122 --->
	  a role_name "selectionModel" protected
	    comment " The <code>ListSelectionModel</code> of the table, used to keep track of row selections. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4165122 // selectionModel (<unidirectional association>)
	  b parent class_ref 1269122 // ListSelectionModel
      end

      classrelation 4165250 // tableHeader (<unidirectional association>)
	relation 4165250 --->
	  a role_name "tableHeader" protected
	    comment " The <code>TableHeader</code> working with the table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4165250 // tableHeader (<unidirectional association>)
	  b parent class_ref 474114 // JTableHeader
      end

      attribute 2427010 "rowHeight"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The height in pixels of each row in the table. 
"
      end

      attribute 2427138 "rowMargin"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The height in pixels of the margin between the cells in each row. 
"
      end

      classrelation 4165378 // gridColor (<unidirectional association>)
	relation 4165378 --->
	  a role_name "gridColor" protected
	    comment " The color of the grid. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4165378 // gridColor (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      attribute 2427266 "showHorizontalLines"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The table draws horizontal lines between cells if <code>showHorizontalLines</code> is true. 
"
      end

      attribute 2427394 "showVerticalLines"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The table draws vertical lines between cells if <code>showVerticalLines</code> is true. 
"
      end

      attribute 2427522 "autoResizeMode"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Determines if the table automatically resizes the
 width of the table's columns to take up the entire width of the
 table, and how it does the resizing.

"
      end

      attribute 2427650 "autoCreateColumnsFromModel"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The table will query the <code>TableModel</code> to build the default
 set of columns if this is true.

"
      end

      classrelation 4165506 // preferredViewportSize (<unidirectional association>)
	relation 4165506 --->
	  a role_name "preferredViewportSize" protected
	    comment " Used by the <code>Scrollable</code> interface to determine the initial visible area. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4165506 // preferredViewportSize (<unidirectional association>)
	  b parent class_ref 316802 // Dimension
      end

      attribute 2427778 "rowSelectionAllowed"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if row selection is allowed in this table. 
"
      end

      attribute 2427906 "cellSelectionEnabled"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Obsolete as of Java 2 platform v1.3.  Please use the
<code>rowSelectionAllowed</code> property and the
<code>columnSelectionAllowed</code> property of the
<code>columnModel</code> instead. Or use the
method <code>getCellSelectionEnabled</code>.


If true, both a row selection and a column selection
can be non-empty at the same time, the selected cells are the
the cells whose row and column are both selected.

"
      end

      classrelation 4165634 // editorComp (<unidirectional association>)
	relation 4165634 --->
	  a role_name "editorComp" protected
	    comment " If editing, the <code>Component</code> that is handling the editing. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4165634 // editorComp (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4165762 // cellEditor (<unidirectional association>)
	relation 4165762 --->
	  a role_name "cellEditor" protected
	    comment "
The active cell editor object, that overwrites the screen real estate
occupied by the current cell and allows the user to change its contents.
{@code null} if the table isn't currently editing.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4165762 // cellEditor (<unidirectional association>)
	  b parent class_ref 1266946 // TableCellEditor
      end

      attribute 2428034 "editingColumn"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies the column of the cell being edited. 
"
      end

      attribute 2428162 "editingRow"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifies the row of the cell being edited. 
"
      end

      classrelation 4165890 // defaultRenderersByColumnClass (<unidirectional association>)
	relation 4165890 --->
	  a role_name "defaultRenderersByColumnClass" protected
	    comment "
A table of objects that display the contents of a cell,
indexed by class as declared in <code>getColumnClass</code>
in the <code>TableModel</code> interface.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4165890 // defaultRenderersByColumnClass (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 4166018 // defaultEditorsByColumnClass (<unidirectional association>)
	relation 4166018 --->
	  a role_name "defaultEditorsByColumnClass" protected
	    comment "
A table of objects that display and edit the contents of a cell,
indexed by class as declared in <code>getColumnClass</code>
in the <code>TableModel</code> interface.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166018 // defaultEditorsByColumnClass (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 4166146 // selectionForeground (<unidirectional association>)
	relation 4166146 --->
	  a role_name "selectionForeground" protected
	    comment " The foreground color of selected cells. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166146 // selectionForeground (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 4166274 // selectionBackground (<unidirectional association>)
	relation 4166274 --->
	  a role_name "selectionBackground" protected
	    comment " The background color of selected cells. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166274 // selectionBackground (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 4166402 // rowModel (<unidirectional association>)
	relation 4166402 --->
	  a role_name "rowModel" private
	    comment " Private state

 WARNING: If you directly access this field you should also change the
 SortManager.modelRowSizes field as well.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166402 // rowModel (<unidirectional association>)
	  b parent class_ref 1292930 // SizeSequence
      end

      attribute 2428290 "dragEnabled"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2428418 "surrendersFocusOnKeystroke"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4166530 // editorRemover (<unidirectional association>)
	relation 4166530 --->
	  a role_name "editorRemover" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166530 // editorRemover (<unidirectional association>)
	  b parent class_ref 347266 // PropertyChangeListener
      end

      attribute 2428546 "columnSelectionAdjusting"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The last value of getValueIsAdjusting from the column selection models
columnSelectionChanged notification. Used to test if a repaint is
needed.

"
      end

      attribute 2428674 "rowSelectionAdjusting"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The last value of getValueIsAdjusting from the row selection models
valueChanged notification. Used to test if a repaint is needed.

"
      end

      classrelation 4166658 // printError (<unidirectional association>)
	relation 4166658 --->
	  a role_name "printError" private
	    comment "
To communicate errors between threads during printing.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166658 // printError (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      attribute 2428802 "isRowHeightSet"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True when setRowHeight(int) has been invoked.

"
      end

      attribute 2428930 "updateSelectionOnSort"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, on a sort the selection is reset.

"
      end

      class 1293058 "SortManager"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 4166786 // sortManager (<unidirectional association>)
	relation 4166786 --->
	  a role_name "sortManager" private
	    comment "
Information used in sorting.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166786 // sortManager (<unidirectional association>)
	  b parent class_ref 1293058 // SortManager
      end

      attribute 2429058 "ignoreSortChange"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, when sorterChanged is invoked it's value is ignored.

"
      end

      attribute 2429186 "sorterChanged"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not sorterChanged has been invoked.

"
      end

      attribute 2429314 "autoCreateRowSorter"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, any time the model changes a new RowSorter is set.

"
      end

      attribute 2429442 "fillsViewportHeight"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not the table always fills the viewport height.
@see #setFillsViewportHeight
@see #getScrollableTracksViewportHeight

"
      end

      classrelation 4166914 // dropMode (<unidirectional association>)
	relation 4166914 --->
	  a role_name "dropMode" init_value " DropMode.USE_SELECTION" private
	    comment "
The drop mode for this component.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4166914 // dropMode (<unidirectional association>)
	  b parent class_ref 427906 // DropMode
      end

      classrelation 4167042 // dropLocation (<unidirectional association>)
	relation 4167042 --->
	  a role_name "dropLocation" private
	    comment "
The drop location.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4167042 // dropLocation (<unidirectional association>)
	  b parent class_ref 351618 // DropLocation
      end

      class 1325314 "DropLocation"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end
    end

    class 476930 "JFrame"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An extended version of <code>java.awt.Frame</code> that adds support for
the JFC/Swing component architecture.
You can find task-oriented documentation about using <code>JFrame</code>
in <em>The Java Tutorial</em>, in the section
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/frame.html\">How to Make Frames</a>.

<p>
The <code>JFrame</code> class is slightly incompatible with <code>Frame</code>.
Like all other JFC/Swing top-level containers,
a <code>JFrame</code> contains a <code>JRootPane</code> as its only child.
The <b>content pane</b> provided by the root pane should,
as a rule, contain
all the non-menu components displayed by the <code>JFrame</code>.
This is different from the AWT <code>Frame</code> case.
As a convenience, the {@code add}, {@code remove}, and {@code setLayout}
methods of this class are overridden, so that they delegate calls
to the corresponding methods of the {@code ContentPane}.
For example, you can add a child component to a frame as follows:
<pre>
      frame.add(child);
</pre>
And the child will be added to the contentPane.
The content pane will
always be non-null. Attempting to set it to null will cause the JFrame
to throw an exception. The default content pane will have a BorderLayout
manager set on it.
Refer to {@link javax.swing.RootPaneContainer}
for details on adding, removing and setting the <code>LayoutManager</code>
of a <code>JFrame</code>.
<p>
Unlike a <code>Frame</code>, a <code>JFrame</code> has some notion of how to
respond when the user attempts to close the window. The default behavior
is to simply hide the JFrame when the user closes the window. To change the
default behavior, you invoke the method
{@link #setDefaultCloseOperation}.
To make the <code>JFrame</code> behave the same as a <code>Frame</code>
instance, use
<code>setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE)</code>.
<p>
For more information on content panes
and other features that root panes provide,
see <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html\">Using Top-Level Containers</a> in <em>The Java Tutorial</em>.
<p>
In a multi-screen environment, you can create a <code>JFrame</code>
on a different screen device.  See {@link java.awt.Frame} for more
information.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JRootPane
@see #setDefaultCloseOperation
@see java.awt.event.WindowListener#windowClosing
@see javax.swing.RootPaneContainer

@beaninfo
     attribute: isContainer true
     attribute: containerDelegate getContentPane
   description: A toplevel window which can be minimized to an icon.

@author Jeff Dinkins
@author Georges Saab
@author David Kloba
"
      classrelation 4125314 // <generalisation>
	relation 4125314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4125314 // <generalisation>
	  b parent class_ref 393346 // Frame
      end

      classrelation 4125442 // <realization>
	relation 4125442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4125442 // <realization>
	  b parent class_ref 1276162 // WindowConstants
      end

      classrelation 4125570 // <realization>
	relation 4125570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4125570 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4125698 // <realization>
	relation 4125698 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4125698 // <realization>
	  b parent class_ref 469762 // RootPaneContainer
      end

      classrelation 4125826 // <realization>
	relation 4125826 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4125826 // <realization>
	  b parent class_ref 351490 // HasGetTransferHandler
      end

      attribute 2409986 "EXIT_ON_CLOSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The exit application default window close operation. If a window
has this set as the close operation and is closed in an applet,
a <code>SecurityException</code> may be thrown.
It is recommended you only use this in an application.
<p>
@since 1.3

"
      end

      classrelation 4125954 // defaultLookAndFeelDecoratedKey (<unidirectional association>)
	relation 4125954 --->
	  a role_name "defaultLookAndFeelDecoratedKey" init_value "
            new StringBuffer(\"JFrame.defaultLookAndFeelDecorated\")" class_relation const_relation private
	    comment "
Key into the AppContext, used to check if should provide decorations
by default.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4125954 // defaultLookAndFeelDecoratedKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2410114 "defaultCloseOperation"
	private explicit_type "int"
	init_value " HIDE_ON_CLOSE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4126082 // transferHandler (<unidirectional association>)
	relation 4126082 --->
	  a role_name "transferHandler" private
	    comment "
The <code>TransferHandler</code> for this frame.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4126082 // transferHandler (<unidirectional association>)
	  b parent class_ref 351362 // TransferHandler
      end

      classrelation 4126210 // rootPane (<unidirectional association>)
	relation 4126210 --->
	  a role_name "rootPane" protected
	    comment "
The <code>JRootPane</code> instance that manages the
<code>contentPane</code>
and optional <code>menuBar</code> for this frame, as well as the
<code>glassPane</code>.

@see JRootPane
@see RootPaneContainer

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4126210 // rootPane (<unidirectional association>)
	  b parent class_ref 434050 // JRootPane
      end

      attribute 2410242 "rootPaneCheckingEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then calls to <code>add</code> and <code>setLayout</code>
will be forwarded to the <code>contentPane</code>. This is initially
false, but is set to true when the <code>JFrame</code> is constructed.

@see #isRootPaneCheckingEnabled
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer

"
      end

      operation 10621826 "JFrame"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new frame that is initially invisible.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see Component#setSize
@see Component#setVisible
@see JComponent#getDefaultLocale
"
      end

      operation 10621954 "JFrame"
	public explicit_return_type ""
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Frame</code> in the specified
<code>GraphicsConfiguration</code> of
a screen device and a blank title.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@param gc the <code>GraphicsConfiguration</code> that is used
         to construct the new <code>Frame</code>;
         if <code>gc</code> is <code>null</code>, the system
         default <code>GraphicsConfiguration</code> is assumed
@exception IllegalArgumentException if <code>gc</code> is not from
         a screen device.  This exception is always thrown when
     GraphicsEnvironment.isHeadless() returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
@since     1.3
"
      end

      operation 10622082 "JFrame"
	public explicit_return_type ""
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, initially invisible <code>Frame</code> with the
specified title.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@param title the title for the frame
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see Component#setSize
@see Component#setVisible
@see JComponent#getDefaultLocale
"
      end

      operation 10622210 "JFrame"
	public explicit_return_type ""
	nparams 2
	  param inout name "title" type class_ref 128130 // String
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JFrame</code> with the specified title and the
specified <code>GraphicsConfiguration</code> of a screen device.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@param title the title to be displayed in the
         frame's border. A <code>null</code> value is treated as
         an empty string, \"\".
@param gc the <code>GraphicsConfiguration</code> that is used
         to construct the new <code>JFrame</code> with;
         if <code>gc</code> is <code>null</code>, the system
         default <code>GraphicsConfiguration</code> is assumed
@exception IllegalArgumentException if <code>gc</code> is not from
         a screen device.  This exception is always thrown when
     GraphicsEnvironment.isHeadless() returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
@since     1.3
"
      end

      operation 10622338 "frameInit"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by the constructors to init the <code>JFrame</code> properly. "
      end

      operation 10622466 "createRootPane"
	protected return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create the default
<code>rootPane</code>.
"
      end

      operation 10622594 "processWindowEvent"
	protected explicit_return_type "void"
	nparams 1
	  param in name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes window events occurring on this component.
Hides the window or disposes of it, as specified by the setting
of the <code>defaultCloseOperation</code> property.

@param  e  the window event
@see    #setDefaultCloseOperation
@see    java.awt.Window#processWindowEvent
"
      end

      operation 10622722 "setDefaultCloseOperation"
	public explicit_return_type "void"
	nparams 1
	  param in name "operation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the operation that will happen by default when
the user initiates a \"close\" on this frame.
You must specify one of the following choices:
<br><br>
<ul>
<li><code>DO_NOTHING_ON_CLOSE</code>
(defined in <code>WindowConstants</code>):
Don't do anything; require the
program to handle the operation in the <code>windowClosing</code>
method of a registered <code>WindowListener</code> object.

<li><code>HIDE_ON_CLOSE</code>
(defined in <code>WindowConstants</code>):
Automatically hide the frame after
invoking any registered <code>WindowListener</code>
objects.

<li><code>DISPOSE_ON_CLOSE</code>
(defined in <code>WindowConstants</code>):
Automatically hide and dispose the
frame after invoking any registered <code>WindowListener</code>
objects.

<li><code>EXIT_ON_CLOSE</code>
(defined in <code>JFrame</code>):
Exit the application using the <code>System</code>
<code>exit</code> method.  Use this only in applications.
</ul>
<p>
The value is set to <code>HIDE_ON_CLOSE</code> by default. Changes
to the value of this property cause the firing of a property
change event, with property name \"defaultCloseOperation\".
<p>
<b>Note</b>: When the last displayable window within the
Java virtual machine (VM) is disposed of, the VM may
terminate.  See <a href=\"../../java/awt/doc-files/AWTThreadIssues.html\">
AWT Threading Issues</a> for more information.

@param operation the operation which should be performed when the
       user closes the frame
@exception IllegalArgumentException if defaultCloseOperation value
            isn't one of the above valid values
@see #addWindowListener
@see #getDefaultCloseOperation
@see WindowConstants
@throws  SecurityException
       if <code>EXIT_ON_CLOSE</code> has been specified and the
       <code>SecurityManager</code> will
       not allow the caller to invoke <code>System.exit</code>
@see        java.lang.Runtime#exit(int)

@beaninfo
  preferred: true
      bound: true
       enum: DO_NOTHING_ON_CLOSE WindowConstants.DO_NOTHING_ON_CLOSE
             HIDE_ON_CLOSE       WindowConstants.HIDE_ON_CLOSE
             DISPOSE_ON_CLOSE    WindowConstants.DISPOSE_ON_CLOSE
             EXIT_ON_CLOSE       WindowConstants.EXIT_ON_CLOSE
description: The frame's default close operation.
"
      end

      operation 10622850 "getDefaultCloseOperation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the operation that occurs when the user
initiates a \"close\" on this frame.

@return an integer indicating the window-close operation
@see #setDefaultCloseOperation
"
      end

      operation 10622978 "setTransferHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newHandler" type class_ref 351362 // TransferHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code transferHandler} property, which is a mechanism to
support transfer of data into this component. Use {@code null}
if the component does not support data transfer operations.
<p>
If the system property {@code suppressSwingDropSupport} is {@code false}
(the default) and the current drop target on this component is either
{@code null} or not a user-set drop target, this method will change the
drop target as follows: If {@code newHandler} is {@code null} it will
clear the drop target. If not {@code null} it will install a new
{@code DropTarget}.
<p>
Note: When used with {@code JFrame}, {@code TransferHandler} only
provides data import capability, as the data export related methods
are currently typed to {@code JComponent}.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html\">
How to Use Drag and Drop and Data Transfer</a>, a section in
<em>The Java Tutorial</em>, for more information.

@param newHandler the new {@code TransferHandler}

@see TransferHandler
@see #getTransferHandler
@see java.awt.Component#setDropTarget
@since 1.6

@beaninfo
       bound: true
      hidden: true
 description: Mechanism for transfer of data into the component
"
      end

      operation 10623106 "getTransferHandler"
	public return_type class_ref 351362 // TransferHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>transferHandler</code> property.

@return the value of the <code>transferHandler</code> property

@see TransferHandler
@see #setTransferHandler
@since 1.6
"
      end

      operation 10623234 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Just calls <code>paint(g)</code>.  This method was overridden to
prevent an unnecessary call to clear the background.

@param g the Graphics context in which to paint
"
      end

      operation 10623362 "setJMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menubar" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the menubar for this frame.
@param menubar the menubar being placed in the frame

@see #getJMenuBar

@beaninfo
     hidden: true
description: The menubar for accessing pulldown menus from this frame.
"
      end

      operation 10623490 "getJMenuBar"
	public return_type class_ref 419586 // JMenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the menubar set on this frame.
@return the menubar for this frame

@see #setJMenuBar
"
      end

      operation 10623618 "isRootPaneCheckingEnabled"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@return true if <code>add</code> and <code>setLayout</code>
        are forwarded; false otherwise

@see #addImpl
@see #setLayout
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10623746 "setRootPaneCheckingEnabled"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@param enabled  true if <code>add</code> and <code>setLayout</code>
       are forwarded, false if they should operate directly on the
       <code>JFrame</code>.

@see #addImpl
@see #setLayout
@see #isRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
@beaninfo
     hidden: true
description: Whether the add and setLayout methods are forwarded
"
      end

      operation 10623874 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified child <code>Component</code>.
This method is overridden to conditionally forward calls to the
<code>contentPane</code>.
By default, children are added to the <code>contentPane</code> instead
of the frame, refer to {@link javax.swing.RootPaneContainer} for
details.

@param comp the component to be enhanced
@param constraints the constraints to be respected
@param index the index
@exception IllegalArgumentException if <code>index</code> is invalid
@exception IllegalArgumentException if adding the container's parent
                 to itself
@exception IllegalArgumentException if adding a window to a container

@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10624002 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the container. If
<code>comp</code> is not the <code>rootPane</code>, this will forward
the call to the <code>contentPane</code>. This will do nothing if
<code>comp</code> is not a child of the <code>JFrame</code> or
<code>contentPane</code>.

@param comp the component to be removed
@throws NullPointerException if <code>comp</code> is null
@see #add
@see javax.swing.RootPaneContainer
"
      end

      operation 10624130 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "manager" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>LayoutManager</code>.
Overridden to conditionally forward the call to the
<code>contentPane</code>.
Refer to {@link javax.swing.RootPaneContainer} for
more information.

@param manager the <code>LayoutManager</code>
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10624258 "getRootPane"
	public return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>rootPane</code> object for this frame.
@return the <code>rootPane</code> property

@see #setRootPane
@see RootPaneContainer#getRootPane
"
      end

      operation 10624386 "setRootPane"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>rootPane</code> property.
This method is called by the constructor.
@param root the <code>rootPane</code> object for this frame

@see #getRootPane

@beaninfo
  hidden: true
description: the RootPane object for this frame.
"
      end

      operation 10624514 "setIconImage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10624642 "getContentPane"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>contentPane</code> object for this frame.
@return the <code>contentPane</code> property

@see #setContentPane
@see RootPaneContainer#getContentPane
"
      end

      operation 10624770 "setContentPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentPane" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>contentPane</code> property.
This method is called by the constructor.
<p>
Swing's painting architecture requires an opaque <code>JComponent</code>
in the containment hierarchy. This is typically provided by the
content pane. If you replace the content pane it is recommended you
replace it with an opaque <code>JComponent</code>.

@param contentPane the <code>contentPane</code> object for this frame

@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the content pane parameter is <code>null</code>
@see #getContentPane
@see RootPaneContainer#setContentPane
@see JRootPane

@beaninfo
    hidden: true
    description: The client area of the frame where child
                 components are normally inserted.
"
      end

      operation 10624898 "getLayeredPane"
	public return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>layeredPane</code> object for this frame.
@return the <code>layeredPane</code> property

@see #setLayeredPane
@see RootPaneContainer#getLayeredPane
"
      end

      operation 10625026 "setLayeredPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layeredPane" type class_ref 400642 // JLayeredPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>layeredPane</code> property.
This method is called by the constructor.
@param layeredPane the <code>layeredPane</code> object for this frame

@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the layered pane parameter is <code>null</code>
@see #getLayeredPane
@see RootPaneContainer#setLayeredPane

@beaninfo
    hidden: true
    description: The pane that holds the various frame layers.
"
      end

      operation 10625154 "getGlassPane"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>glassPane</code> object for this frame.
@return the <code>glassPane</code> property

@see #setGlassPane
@see RootPaneContainer#getGlassPane
"
      end

      operation 10625282 "setGlassPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "glassPane" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>glassPane</code> property.
This method is called by the constructor.
@param glassPane the <code>glassPane</code> object for this frame

@see #getGlassPane
@see RootPaneContainer#setGlassPane

@beaninfo
    hidden: true
    description: A transparent pane used for menu rendering.
"
      end

      operation 10625410 "getGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@since 1.6
"
      end

      operation 10625538 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "time" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the specified rectangle of this component within
<code>time</code> milliseconds.  Refer to <code>RepaintManager</code>
for details on how the repaint is handled.

@param     time   maximum time in milliseconds before update
@param     x    the <i>x</i> coordinate
@param     y    the <i>y</i> coordinate
@param     width    the width
@param     height   the height
@see       RepaintManager
@since     1.6
"
      end

      operation 10625666 "setDefaultLookAndFeelDecorated"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "defaultLookAndFeelDecorated" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint as to whether or not newly created <code>JFrame</code>s
should have their Window decorations (such as borders, widgets to
close the window, title...) provided by the current look
and feel. If <code>defaultLookAndFeelDecorated</code> is true,
the current <code>LookAndFeel</code> supports providing window
decorations, and the current window manager supports undecorated
windows, then newly created <code>JFrame</code>s will have their
Window decorations provided by the current <code>LookAndFeel</code>.
Otherwise, newly created <code>JFrame</code>s will have their
Window decorations provided by the current window manager.
<p>
You can get the same effect on a single JFrame by doing the following:
<pre>
   JFrame frame = new JFrame();
   frame.setUndecorated(true);
   frame.getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
</pre>

@param defaultLookAndFeelDecorated A hint as to whether or not current
       look and feel should provide window decorations
@see javax.swing.LookAndFeel#getSupportsWindowDecorations
@since 1.4
"
      end

      operation 10625794 "isDefaultLookAndFeelDecorated"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if newly created <code>JFrame</code>s should have their
Window decorations provided by the current look and feel. This is only
a hint, as certain look and feels may not support this feature.

@return true if look and feel should provide Window decorations.
@since 1.4
"
      end

      operation 10625922 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JFrame</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JFrame</code>
"
      end

      classrelation 4126338 // accessibleContext (<unidirectional association>)
	relation 4126338 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////
 The accessible context property. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4126338 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 10626050 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this JFrame.
For JFrames, the AccessibleContext takes the form of an
AccessibleJFrame.
A new AccessibleJFrame instance is created if necessary.

@return an AccessibleJFrame that serves as the
        AccessibleContext of this JFrame
"
      end

      class 1284610 "AccessibleJFrame"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4126466 // <generalisation>
	  relation 4126466 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4126466 // <generalisation>
	    b parent class_ref 866690 // AccessibleAWTFrame
	end

	operation 10626178 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleContext methods

Get the accessible name of this object.

@return the localized name of the object -- can be null if this
object does not have a name
"
	end

	operation 10626306 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see AccessibleState
"
	end
      end
    end

    class 1262722 "AbstractCellEditor"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A base class for <code>CellEditors</code>, providing default
implementations for the methods in the <code>CellEditor</code>
interface except <code>getCellEditorValue()</code>.
Like the other abstract implementations in Swing, also manages a list
of listeners.

<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Philip Milne
@since 1.3
"
      classrelation 4058242 // <realization>
	relation 4058242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4058242 // <realization>
	  b parent class_ref 1262850 // CellEditor
      end

      classrelation 4058370 // <realization>
	relation 4058370 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4058370 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4058498 // listenerList (<unidirectional association>)
	relation 4058498 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4058498 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      classrelation 4058626 // changeEvent (<unidirectional association>)
	relation 4058626 --->
	  a role_name "changeEvent" init_value " null" protected
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4058626 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      operation 10406786 "isCellEditable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 525698 // EventObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Force this to be implemented.
 public Object  getCellEditorValue()

Returns true.
@param e  an event object
@return true
"
      end

      operation 10406914 "shouldSelectCell"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 525698 // EventObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true.
@param anEvent  an event object
@return true
"
      end

      operation 10407042 "stopCellEditing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>fireEditingStopped</code> and returns true.
@return true
"
      end

      operation 10407170 "cancelCellEditing"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>fireEditingCanceled</code>.
"
      end

      operation 10407298 "addCellEditorListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 449666 // CellEditorListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>CellEditorListener</code> to the listener list.
@param l  the new listener to be added
"
      end

      operation 10407426 "removeCellEditorListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 449666 // CellEditorListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>CellEditorListener</code> from the listener list.
@param l  the listener to be removed
"
      end

      operation 10407554 "getCellEditorListeners"
	public return_type class_ref 449666 // CellEditorListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>CellEditorListener</code>s added
to this AbstractCellEditor with addCellEditorListener().

@return all of the <code>CellEditorListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10407682 "fireEditingStopped"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.

@see EventListenerList
"
      end

      operation 10407810 "fireEditingCanceled"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.

@see EventListenerList
"
      end
    end

    class 1262850 "CellEditor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface defines the methods any general editor should be able
to implement. <p>

Having this interface enables complex components (the client of the
editor) such as <code>JTree</code> and
<code>JTable</code> to allow any generic editor to
edit values in a table cell, or tree cell, etc.  Without this generic
editor interface, <code>JTable</code> would have to know about specific editors,
such as <code>JTextField</code>, <code>JCheckBox</code>, <code>JComboBox</code>,
etc.  In addition, without this interface, clients of editors such as
<code>JTable</code> would not be able
to work with any editors developed in the future by the user
or a 3rd party ISV. <p>

To use this interface, a developer creating a new editor can have the
new component implement the interface.  Or the developer can
choose a wrapper based approach and provide a companion object which
implements the <code>CellEditor</code> interface (See
<code>DefaultCellEditor</code> for example).  The wrapper approach
is particularly useful if the user want to use a 3rd party ISV
editor with <code>JTable</code>, but the ISV didn't implement the
<code>CellEditor</code> interface.  The user can simply create an object
that contains an instance of the 3rd party editor object and \"translate\"
the <code>CellEditor</code> API into the 3rd party editor's API.

@see javax.swing.event.CellEditorListener

@author Alan Chung
"
      operation 10405890 "getCellEditorValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value contained in the editor.
@return the value contained in the editor
"
      end

      operation 10406018 "isCellEditable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 525698 // EventObject
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Asks the editor if it can start editing using <code>anEvent</code>.
<code>anEvent</code> is in the invoking component coordinate system.
The editor can not assume the Component returned by
<code>getCellEditorComponent</code> is installed.  This method
is intended for the use of client to avoid the cost of setting up
and installing the editor component if editing is not possible.
If editing can be started this method returns true.

@param   anEvent         the event the editor should use to consider
                         whether to begin editing or not
@return  true if editing can be started
@see #shouldSelectCell
"
      end

      operation 10406146 "shouldSelectCell"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 525698 // EventObject
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the editing cell should be selected, false otherwise.
Typically, the return value is true, because is most cases the editing
cell should be selected.  However, it is useful to return false to
keep the selection from changing for some types of edits.
eg. A table that contains a column of check boxes, the user might
want to be able to change those checkboxes without altering the
selection.  (See Netscape Communicator for just such an example)
Of course, it is up to the client of the editor to use the return
value, but it doesn't need to if it doesn't want to.

@param   anEvent         the event the editor should use to start
                         editing
@return  true if the editor would like the editing cell to be selected;
   otherwise returns false
@see #isCellEditable
"
      end

      operation 10406274 "stopCellEditing"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the editor to stop editing and accept any partially edited
value as the value of the editor.  The editor returns false if
editing was not stopped; this is useful for editors that validate
and can not accept invalid entries.

@return  true if editing was stopped; false otherwise
"
      end

      operation 10406402 "cancelCellEditing"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the editor to cancel editing and not accept any partially
edited value.
"
      end

      operation 10406530 "addCellEditorListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 449666 // CellEditorListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to the list that's notified when the editor
stops, or cancels editing.

@param   l               the CellEditorListener
"
      end

      operation 10406658 "removeCellEditorListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 449666 // CellEditorListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from the list that's notified

@param   l               the CellEditorListener
"
      end
    end

    class 1262978 "AbstractSpinnerModel"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides the ChangeListener part of the
SpinnerModel interface that should be suitable for most concrete SpinnerModel
implementations.  Subclasses must provide an implementation of the
<code>setValue</code>, <code>getValue</code>, <code>getNextValue</code> and
<code>getPreviousValue</code> methods.

@see JSpinner
@see SpinnerModel
@see SpinnerListModel
@see SpinnerNumberModel
@see SpinnerDateModel

@author Hans Muller
@since 1.4
"
      classrelation 4058754 // <realization>
	relation 4058754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4058754 // <realization>
	  b parent class_ref 1263106 // SpinnerModel
      end

      classrelation 4058882 // <realization>
	relation 4058882 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4058882 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4059010 // changeEvent (<unidirectional association>)
	relation 4059010 --->
	  a role_name "changeEvent" init_value " null" private
	    comment "
Only one ChangeEvent is needed per model instance since the
event's only (read-only) state is the source property.  The source
of events generated here is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4059010 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      classrelation 4059138 // listenerList (<unidirectional association>)
	relation 4059138 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment "
The list of ChangeListeners for this model.  Subclasses may
store their own listeners here.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4059138 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      operation 10408706 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a ChangeListener to the model's listener list.  The
ChangeListeners must be notified when the models value changes.

@param l the ChangeListener to add
@see #removeChangeListener
@see SpinnerModel#addChangeListener
"
      end

      operation 10408834 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a ChangeListener from the model's listener list.

@param l the ChangeListener to remove
@see #addChangeListener
@see SpinnerModel#removeChangeListener
"
      end

      operation 10408962 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>ChangeListener</code>s added
to this AbstractSpinnerModel with addChangeListener().

@return all of the <code>ChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10409090 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Run each ChangeListeners stateChanged() method.

@see #setValue
@see EventListenerList
"
      end

      operation 10409218 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array of all the listeners of the given type that
were added to this model.  For example to find all of the
ChangeListeners added to this model:
<pre>
myAbstractSpinnerModel.getListeners(ChangeListener.class);
</pre>

@param listenerType the type of listeners to return, e.g. ChangeListener.class
@return all of the objects receiving <em>listenerType</em> notifications
        from this model
"
      end
    end

    class 1263106 "SpinnerModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A model for a potentially unbounded sequence of object values.  This model
is similar to <code>ListModel</code> however there are some important differences:
<ul>
<li> The number of sequence elements isn't necessarily bounded.
<li> The model doesn't support indexed random access to sequence elements.
     Only three sequence values are accessible at a time: current, next and
     previous.
<li> The current sequence element, can be set.
</ul>
<p>
A <code>SpinnerModel</code> has three properties, only the first is read/write.
<dl>
  <dt><code>value</code>
  <dd>The current element of the sequence.

  <dt><code>nextValue</code>
  <dd>The following element or null if <code>value</code> is the
    last element of the sequence.

  <dt><code>previousValue</code>
  <dd>The preceding element or null if <code>value</code> is the
    first element of the sequence.
</dl>
When the the <code>value</code> property changes,
<code>ChangeListeners</code> are notified.  <code>SpinnerModel</code> may
choose to notify the <code>ChangeListeners</code> under other circumstances.

@see JSpinner
@see AbstractSpinnerModel
@see SpinnerListModel
@see SpinnerNumberModel
@see SpinnerDateModel

@author Hans Muller
@since 1.4
"
      operation 10407938 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <i>current element</i> of the sequence.  This element is usually
displayed by the <code>editor</code> part of a <code>JSpinner</code>.

@return the current spinner value.
@see #setValue
"
      end

      operation 10408066 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes current value of the model, typically this value is displayed
by the <code>editor</code> part of a  <code>JSpinner</code>.
If the <code>SpinnerModel</code> implementation doesn't support
the specified value then an <code>IllegalArgumentException</code>
is thrown.  For example a <code>SpinnerModel</code> for numbers might
only support values that are integer multiples of ten. In
that case, <code>model.setValue(new Number(11))</code>
would throw an exception.

@throws IllegalArgumentException if <code>value</code> isn't allowed
@see #getValue
"
      end

      operation 10408194 "getNextValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the object in the sequence that comes after the object returned
by <code>getValue()</code>. If the end of the sequence has been reached
then return null.  Calling this method does not effect <code>value</code>.

@return the next legal value or null if one doesn't exist
@see #getValue
@see #getPreviousValue
"
      end

      operation 10408322 "getPreviousValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the object in the sequence that comes before the object returned
by <code>getValue()</code>.  If the end of the sequence has been reached then
return null. Calling this method does not effect <code>value</code>.

@return the previous legal value or null if one doesn't exist
@see #getValue
@see #getNextValue
"
      end

      operation 10408450 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>ChangeListener</code> to the model's listener list.  The
<code>ChangeListeners</code> must be notified when models <code>value</code>
changes.

@param l the ChangeListener to add
@see #removeChangeListener
"
      end

      operation 10408578 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code> from the model's listener list.

@param l the ChangeListener to remove
@see #addChangeListener
"
      end
    end

    class 1263234 "AncestorNotifier"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Dave Moore
"
      classrelation 4059650 // <realization>
	relation 4059650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4059650 // <realization>
	  b parent class_ref 341890 // ComponentListener
      end

      classrelation 4059778 // <realization>
	relation 4059778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4059778 // <realization>
	  b parent class_ref 347266 // PropertyChangeListener
      end

      classrelation 4059906 // <realization>
	relation 4059906 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4059906 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4060034 // firstInvisibleAncestor (<unidirectional association>)
	relation 4060034 --->
	  a role_name "firstInvisibleAncestor" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4060034 // firstInvisibleAncestor (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4060162 // listenerList (<unidirectional association>)
	relation 4060162 --->
	  a role_name "listenerList" init_value " new EventListenerList()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4060162 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      classrelation 4060290 // root (<unidirectional association>)
	relation 4060290 --->
	  a role_name "root" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4060290 // root (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      operation 10410882 "AncestorNotifier"
	package explicit_return_type ""
	nparams 1
	  param inout name "root" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411010 "addAncestorListener"
	package explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1263362 // AncestorListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411138 "removeAncestorListener"
	package explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1263362 // AncestorListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411266 "getAncestorListeners"
	package return_type class_ref 1263362 // AncestorListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411394 "fireAncestorAdded"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "source" type class_ref 338434 // JComponent
	  param in name "id" explicit_type "int"
	  param inout name "ancestor" type class_ref 338690 // Container
	  param inout name "ancestorParent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@see EventListenerList
"
      end

      operation 10411522 "fireAncestorRemoved"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "source" type class_ref 338434 // JComponent
	  param in name "id" explicit_type "int"
	  param inout name "ancestor" type class_ref 338690 // Container
	  param inout name "ancestorParent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@see EventListenerList
"
      end

      operation 10411650 "fireAncestorMoved"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "source" type class_ref 338434 // JComponent
	  param in name "id" explicit_type "int"
	  param inout name "ancestor" type class_ref 338690 // Container
	  param inout name "ancestorParent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@see EventListenerList
"
      end

      operation 10411778 "removeAllListeners"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411906 "addListeners"
	package explicit_return_type "void"
	nparams 2
	  param inout name "ancestor" type class_ref 338818 // Component
	  param inout name "addToFirst" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412034 "removeListeners"
	package explicit_return_type "void"
	nparams 1
	  param inout name "ancestor" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412162 "componentResized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412290 "componentMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412418 "componentShown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412546 "componentHidden"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412674 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1263490 "Autoscroller"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Autoscroller is responsible for generating synthetic mouse dragged
events. It is the responsibility of the Component (or its MouseListeners)
that receive the events to do the actual scrolling in response to the
mouse dragged events.

@author Dave Moore
@author Scott Violet
"
      classrelation 4060674 // <realization>
	relation 4060674 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4060674 // <realization>
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 4060802 // sharedInstance (<unidirectional association>)
	relation 4060802 --->
	  a role_name "sharedInstance" init_value " new Autoscroller()" class_relation private
	    comment "
Global Autoscroller.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4060802 // sharedInstance (<unidirectional association>)
	  b parent class_ref 1263490 // Autoscroller
      end

      classrelation 4060930 // event (<unidirectional association>)
	relation 4060930 --->
	  a role_name "event" class_relation private
	    comment " As there can only ever be one autoscroller active these fields are
 static. The Timer is recreated as necessary to target the appropriate
 Autoscroller instance.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4060930 // event (<unidirectional association>)
	  b parent class_ref 346626 // MouseEvent
      end

      classrelation 4061058 // timer (<unidirectional association>)
	relation 4061058 --->
	  a role_name "timer" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061058 // timer (<unidirectional association>)
	  b parent class_ref 354690 // Timer
      end

      classrelation 4061186 // component (<unidirectional association>)
	relation 4061186 --->
	  a role_name "component" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061186 // component (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      operation 10414338 "stop"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The public API, all methods are cover methods for an instance method


Stops autoscroll events from happening on the specified component.
"
      end

      operation 10414466 "isRunning"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops autoscroll events from happening on the specified component.
"
      end

      operation 10414594 "processMouseDragged"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a mouse dragged event occurs, will start the autoscroller
if necessary.
"
      end

      operation 10414722 "Autoscroller"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10414850 "start"
	private explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the timer targeting the passed in component.
"
      end

      operation 10414978 "_stop"
	private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods mirror the public static API


Stops scrolling for the passed in widget.
"
      end

      operation 10415106 "_isRunning"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if autoscrolling is currently running for the specified
widget.
"
      end

      operation 10415234 "_processMouseDragged"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "MouseListener method, invokes start/stop as necessary.
"
      end

      operation 10415362 "actionPerformed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ActionListener


ActionListener method. Invoked when the Timer fires. This will scroll
if necessary.
"
      end
    end

    class 1263618 "BorderFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Factory class for vending standard <code>Border</code> objects.  Wherever
possible, this factory will hand out references to shared
<code>Border</code> instances.
For further information and examples see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/border.htmll\">How
to Use Borders</a>,
a section in <em>The Java Tutorial</em>.

@author David Kloba
"
      operation 10415490 "BorderFactory"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Don't let anyone instantiate this class "
      end

      operation 10415618 "createLineBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 1
	  param inout name "color" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "// LineBorder ///////////////////////////////////////////////////////////////

Creates a line border withe the specified color.

@param color  a <code>Color</code> to use for the line
@return the <code>Border</code> object
"
      end

      operation 10415746 "createLineBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 2
	  param inout name "color" type class_ref 323458 // Color
	  param in name "thickness" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a line border with the specified color
and width. The width applies to all four sides of the
border. To specify widths individually for the top,
bottom, left, and right, use
{@link #createMatteBorder(int,int,int,int,Color)}.

@param color  a <code>Color</code> to use for the line
@param thickness  an integer specifying the width in pixels
@return the <code>Border</code> object
"
      end

      operation 10415874 "createLineBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 3
	  param inout name "color" type class_ref 323458 // Color
	  param in name "thickness" explicit_type "int"
	  param inout name "rounded" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a line border with the specified color, thickness, and corner shape.

@param color      the color of the border
@param thickness  the thickness of the border
@param rounded    whether or not border corners should be round
@return the {@code Border} object

@see LineBorder#LineBorder(Color, int, boolean)
@since 1.7
"
      end

      classrelation 4061314 // sharedRaisedBevel (<unidirectional association>)
	relation 4061314 --->
	  a role_name "sharedRaisedBevel" init_value " new BevelBorder(BevelBorder.RAISED)" class_relation const_relation package
	    comment "// BevelBorder /////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061314 // sharedRaisedBevel (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4061442 // sharedLoweredBevel (<unidirectional association>)
	relation 4061442 --->
	  a role_name "sharedLoweredBevel" init_value " new BevelBorder(BevelBorder.LOWERED)" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061442 // sharedLoweredBevel (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 10416002 "createRaisedBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a border with a raised beveled edge, using
brighter shades of the component's current background color
for highlighting, and darker shading for shadows.
(In a raised border, highlights are on top and shadows
 are underneath.)

@return the <code>Border</code> object
"
      end

      operation 10416130 "createLoweredBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a border with a lowered beveled edge, using
brighter shades of the component's current background color
for highlighting, and darker shading for shadows.
(In a lowered border, shadows are on top and highlights
 are underneath.)

@return the <code>Border</code> object
"
      end

      operation 10416258 "createBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border of the specified type, using
brighter shades of the component's current background color
for highlighting, and darker shading for shadows.
(In a lowered border, shadows are on top and highlights
 are underneath.)

@param type  an integer specifying either
                 <code>BevelBorder.LOWERED</code> or
                 <code>BevelBorder.RAISED</code>
@return the <code>Border</code> object
"
      end

      operation 10416386 "createBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 3
	  param in name "type" explicit_type "int"
	  param inout name "highlight" type class_ref 323458 // Color
	  param inout name "shadow" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border of the specified type, using
the specified highlighting and shadowing. The outer
edge of the highlighted area uses a brighter shade of
the highlight color. The inner edge of the shadow area
uses a brighter shade of the shadow color.

@param type  an integer specifying either
                 <code>BevelBorder.LOWERED</code> or
                 <code>BevelBorder.RAISED</code>
@param highlight  a <code>Color</code> object for highlights
@param shadow     a <code>Color</code> object for shadows
@return the <code>Border</code> object
"
      end

      operation 10416514 "createBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 5
	  param in name "type" explicit_type "int"
	  param inout name "highlightOuter" type class_ref 323458 // Color
	  param inout name "highlightInner" type class_ref 323458 // Color
	  param inout name "shadowOuter" type class_ref 323458 // Color
	  param inout name "shadowInner" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border of the specified type, using
the specified colors for the inner and outer highlight
and shadow areas.

@param type  an integer specifying either
         <code>BevelBorder.LOWERED</code> or
         <code>BevelBorder.RAISED</code>
@param highlightOuter  a <code>Color</code> object for the
                 outer edge of the highlight area
@param highlightInner  a <code>Color</code> object for the
                 inner edge of the highlight area
@param shadowOuter     a <code>Color</code> object for the
                 outer edge of the shadow area
@param shadowInner     a <code>Color</code> object for the
                 inner edge of the shadow area
@return the <code>Border</code> object
"
      end

      operation 10416642 "createSharedBevel"
	class_operation package return_type class_ref 357122 // Border
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4061570 // sharedSoftRaisedBevel (<unidirectional association>)
	relation 4061570 --->
	  a role_name "sharedSoftRaisedBevel" class_relation private
	    comment "// SoftBevelBorder ///////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061570 // sharedSoftRaisedBevel (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4061698 // sharedSoftLoweredBevel (<unidirectional association>)
	relation 4061698 --->
	  a role_name "sharedSoftLoweredBevel" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061698 // sharedSoftLoweredBevel (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 10416770 "createRaisedSoftBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border with a raised edge and softened corners,
using brighter shades of the component's current background color
for highlighting, and darker shading for shadows.
In a raised border, highlights are on top and shadows are underneath.

@return the {@code Border} object

@since 1.7
"
      end

      operation 10416898 "createLoweredSoftBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border with a lowered edge and softened corners,
using brighter shades of the component's current background color
for highlighting, and darker shading for shadows.
In a lowered border, shadows are on top and highlights are underneath.

@return the {@code Border} object

@since 1.7
"
      end

      operation 10417026 "createSoftBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border of the specified type with softened corners,
using brighter shades of the component's current background color
for highlighting, and darker shading for shadows.
The type is either {@link BevelBorder#RAISED} or {@link BevelBorder#LOWERED}.

@param type  a type of a bevel
@return the {@code Border} object or {@code null}
        if the specified type is not valid

@see BevelBorder#BevelBorder(int)
@since 1.7
"
      end

      operation 10417154 "createSoftBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 3
	  param in name "type" explicit_type "int"
	  param inout name "highlight" type class_ref 323458 // Color
	  param inout name "shadow" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border of the specified type with softened corners,
using the specified highlighting and shadowing.
The type is either {@link BevelBorder#RAISED} or {@link BevelBorder#LOWERED}.
The outer edge of the highlight area uses
a brighter shade of the {@code highlight} color.
The inner edge of the shadow area uses
a brighter shade of the {@code shadow} color.

@param type       a type of a bevel
@param highlight  a basic color of the highlight area
@param shadow     a basic color of the shadow area
@return the {@code Border} object

@see BevelBorder#BevelBorder(int, Color, Color)
@since 1.7
"
      end

      operation 10417282 "createSoftBevelBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 5
	  param in name "type" explicit_type "int"
	  param inout name "highlightOuter" type class_ref 323458 // Color
	  param inout name "highlightInner" type class_ref 323458 // Color
	  param inout name "shadowOuter" type class_ref 323458 // Color
	  param inout name "shadowInner" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a beveled border of the specified type with softened corners,
using the specified colors for the inner and outer edges
of the highlight and the shadow areas.
The type is either {@link BevelBorder#RAISED} or {@link BevelBorder#LOWERED}.
Note: The shadow inner and outer colors are switched
for a lowered bevel border.

@param type            a type of a bevel
@param highlightOuter  a color of the outer edge of the highlight area
@param highlightInner  a color of the inner edge of the highlight area
@param shadowOuter     a color of the outer edge of the shadow area
@param shadowInner     a color of the inner edge of the shadow area
@return the {@code Border} object

@see BevelBorder#BevelBorder(int, Color, Color, Color, Color)
@since 1.7
"
      end

      classrelation 4061826 // sharedEtchedBorder (<unidirectional association>)
	relation 4061826 --->
	  a role_name "sharedEtchedBorder" init_value " new EtchedBorder()" class_relation const_relation package
	    comment "// EtchedBorder ///////////////////////////////////////////////////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061826 // sharedEtchedBorder (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4061954 // sharedRaisedEtchedBorder (<unidirectional association>)
	relation 4061954 --->
	  a role_name "sharedRaisedEtchedBorder" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4061954 // sharedRaisedEtchedBorder (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 10417410 "createEtchedBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a border with an \"etched\" look using
the component's current background color for
highlighting and shading.

@return the <code>Border</code> object
"
      end

      operation 10417538 "createEtchedBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 2
	  param inout name "highlight" type class_ref 323458 // Color
	  param inout name "shadow" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a border with an \"etched\" look using
the specified highlighting and shading colors.

@param highlight  a <code>Color</code> object for the border highlights
@param shadow     a <code>Color</code> object for the border shadows
@return the <code>Border</code> object
"
      end

      operation 10417666 "createEtchedBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a border with an \"etched\" look using
the component's current background color for
highlighting and shading.

@param type      one of <code>EtchedBorder.RAISED</code>, or
                 <code>EtchedBorder.LOWERED</code>
@return the <code>Border</code> object
@exception IllegalArgumentException if type is not either
                 <code>EtchedBorder.RAISED</code> or
                 <code>EtchedBorder.LOWERED</code>
@since 1.3
"
      end

      operation 10417794 "createEtchedBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 3
	  param in name "type" explicit_type "int"
	  param inout name "highlight" type class_ref 323458 // Color
	  param inout name "shadow" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a border with an \"etched\" look using
the specified highlighting and shading colors.

@param type      one of <code>EtchedBorder.RAISED</code>, or
                 <code>EtchedBorder.LOWERED</code>
@param highlight  a <code>Color</code> object for the border highlights
@param shadow     a <code>Color</code> object for the border shadows
@return the <code>Border</code> object
@since 1.3
"
      end

      operation 10417922 "createTitledBorder"
	class_operation public return_type class_ref 1263746 // TitledBorder
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "// TitledBorder ////////////////////////////////////////////////////////////

Creates a new titled border with the specified title,
the default border type (determined by the current look and feel),
the default text position (determined by the current look and feel),
the default justification (leading), and the default
font and text color (determined by the current look and feel).

@param title      a <code>String</code> containing the text of the title
@return the <code>TitledBorder</code> object
"
      end

      operation 10418050 "createTitledBorder"
	class_operation public return_type class_ref 1263746 // TitledBorder
	nparams 1
	  param inout name "border" type class_ref 357122 // Border
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new titled border with an empty title,
the specified border object,
the default text position (determined by the current look and feel),
the default justification (leading), and the default
font and text color (determined by the current look and feel).

@param border     the <code>Border</code> object to add the title to; if
                  <code>null</code> the <code>Border</code> is determined
                  by the current look and feel.
@return the <code>TitledBorder</code> object
"
      end

      operation 10418178 "createTitledBorder"
	class_operation public return_type class_ref 1263746 // TitledBorder
	nparams 2
	  param inout name "border" type class_ref 357122 // Border
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a title to an existing border,
with default positioning (determined by the current look and feel),
default justification (leading) and the default
font and text color (determined by the current look and feel).

@param border     the <code>Border</code> object to add the title to
@param title      a <code>String</code> containing the text of the title
@return the <code>TitledBorder</code> object
"
      end

      operation 10418306 "createTitledBorder"
	class_operation public return_type class_ref 1263746 // TitledBorder
	nparams 4
	  param inout name "border" type class_ref 357122 // Border
	  param inout name "title" type class_ref 128130 // String
	  param in name "titleJustification" explicit_type "int"
	  param in name "titlePosition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a title to an existing border, with the specified
positioning and using the default
font and text color (determined by the current look and feel).

@param border      the <code>Border</code> object to add the title to
@param title       a <code>String</code> containing the text of the title
@param titleJustification  an integer specifying the justification
       of the title -- one of the following:
<ul>
<li><code>TitledBorder.LEFT</code>
<li><code>TitledBorder.CENTER</code>
<li><code>TitledBorder.RIGHT</code>
<li><code>TitledBorder.LEADING</code>
<li><code>TitledBorder.TRAILING</code>
<li><code>TitledBorder.DEFAULT_JUSTIFICATION</code> (leading)
</ul>
@param titlePosition       an integer specifying the vertical position of
       the text in relation to the border -- one of the following:
<ul>
<li><code> TitledBorder.ABOVE_TOP</code>
<li><code>TitledBorder.TOP</code> (sitting on the top line)
<li><code>TitledBorder.BELOW_TOP</code>
<li><code>TitledBorder.ABOVE_BOTTOM</code>
<li><code>TitledBorder.BOTTOM</code> (sitting on the bottom line)
<li><code>TitledBorder.BELOW_BOTTOM</code>
<li><code>TitledBorder.DEFAULT_POSITION</code> (the title position
 is determined by the current look and feel)
</ul>
@return the <code>TitledBorder</code> object
"
      end

      operation 10418434 "createTitledBorder"
	class_operation public return_type class_ref 1263746 // TitledBorder
	nparams 5
	  param inout name "border" type class_ref 357122 // Border
	  param inout name "title" type class_ref 128130 // String
	  param in name "titleJustification" explicit_type "int"
	  param in name "titlePosition" explicit_type "int"
	  param inout name "titleFont" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a title to an existing border, with the specified
positioning and font, and using the default text color
(determined by the current look and feel).

@param border      the <code>Border</code> object to add the title to
@param title       a <code>String</code> containing the text of the title
@param titleJustification  an integer specifying the justification
       of the title -- one of the following:
<ul>
<li><code>TitledBorder.LEFT</code>
<li><code>TitledBorder.CENTER</code>
<li><code>TitledBorder.RIGHT</code>
<li><code>TitledBorder.LEADING</code>
<li><code>TitledBorder.TRAILING</code>
<li><code>TitledBorder.DEFAULT_JUSTIFICATION</code> (leading)
</ul>
@param titlePosition       an integer specifying the vertical position of
       the text in relation to the border -- one of the following:
<ul>
<li><code> TitledBorder.ABOVE_TOP</code>
<li><code>TitledBorder.TOP</code> (sitting on the top line)
<li><code>TitledBorder.BELOW_TOP</code>
<li><code>TitledBorder.ABOVE_BOTTOM</code>
<li><code>TitledBorder.BOTTOM</code> (sitting on the bottom line)
<li><code>TitledBorder.BELOW_BOTTOM</code>
<li><code>TitledBorder.DEFAULT_POSITION</code> (the title position
 is determined by the current look and feel)
</ul>
@param titleFont           a Font object specifying the title font
@return the TitledBorder object
"
      end

      operation 10418562 "createTitledBorder"
	class_operation public return_type class_ref 1263746 // TitledBorder
	nparams 6
	  param inout name "border" type class_ref 357122 // Border
	  param inout name "title" type class_ref 128130 // String
	  param in name "titleJustification" explicit_type "int"
	  param in name "titlePosition" explicit_type "int"
	  param inout name "titleFont" type class_ref 340354 // Font
	  param inout name "titleColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a title to an existing border, with the specified
positioning, font and color.

@param border      the <code>Border</code> object to add the title to
@param title       a <code>String</code> containing the text of the title
@param titleJustification  an integer specifying the justification
       of the title -- one of the following:
<ul>
<li><code>TitledBorder.LEFT</code>
<li><code>TitledBorder.CENTER</code>
<li><code>TitledBorder.RIGHT</code>
<li><code>TitledBorder.LEADING</code>
<li><code>TitledBorder.TRAILING</code>
<li><code>TitledBorder.DEFAULT_JUSTIFICATION</code> (leading)
</ul>
@param titlePosition       an integer specifying the vertical position of
       the text in relation to the border -- one of the following:
<ul>
<li><code> TitledBorder.ABOVE_TOP</code>
<li><code>TitledBorder.TOP</code> (sitting on the top line)
<li><code>TitledBorder.BELOW_TOP</code>
<li><code>TitledBorder.ABOVE_BOTTOM</code>
<li><code>TitledBorder.BOTTOM</code> (sitting on the bottom line)
<li><code>TitledBorder.BELOW_BOTTOM</code>
<li><code>TitledBorder.DEFAULT_POSITION</code> (the title position
 is determined by the current look and feel)
</ul>
@param titleFont   a <code>Font</code> object specifying the title font
@param titleColor  a <code>Color</code> object specifying the title color
@return the <code>TitledBorder</code> object
"
      end

      classrelation 4062082 // emptyBorder (<unidirectional association>)
	relation 4062082 --->
	  a role_name "emptyBorder" init_value " new EmptyBorder(0, 0, 0, 0)" class_relation const_relation package
	    comment "// EmptyBorder ///////////////////////////////////////////////////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4062082 // emptyBorder (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 10418690 "createEmptyBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty border that takes up no space. (The width
of the top, bottom, left, and right sides are all zero.)

@return the <code>Border</code> object
"
      end

      operation 10418818 "createEmptyBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 4
	  param in name "top" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	  param in name "right" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty border that takes up space but which does
no drawing, specifying the width of the top, left, bottom, and
right sides.

@param top     an integer specifying the width of the top,
                 in pixels
@param left    an integer specifying the width of the left side,
                 in pixels
@param bottom  an integer specifying the width of the bottom,
                 in pixels
@param right   an integer specifying the width of the right side,
                 in pixels
@return the <code>Border</code> object
"
      end

      operation 10418946 "createCompoundBorder"
	class_operation public return_type class_ref 438658 // CompoundBorder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "// CompoundBorder ////////////////////////////////////////////////////////

Creates a compound border with a <code>null</code> inside edge and a
<code>null</code> outside edge.

@return the <code>CompoundBorder</code> object
"
      end

      operation 10419074 "createCompoundBorder"
	class_operation public return_type class_ref 438658 // CompoundBorder
	nparams 2
	  param inout name "outsideBorder" type class_ref 357122 // Border
	  param inout name "insideBorder" type class_ref 357122 // Border
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a compound border specifying the border objects to use
for the outside and inside edges.

@param outsideBorder  a <code>Border</code> object for the outer
                         edge of the compound border
@param insideBorder   a <code>Border</code> object for the inner
                         edge of the compound border
@return the <code>CompoundBorder</code> object
"
      end

      operation 10419202 "createMatteBorder"
	class_operation public return_type class_ref 1263874 // MatteBorder
	nparams 5
	  param in name "top" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "color" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "// MatteBorder ////////////////////////////////////////////////////////

Creates a matte-look border using a solid color. (The difference between
this border and a line border is that you can specify the individual
border dimensions.)

@param top     an integer specifying the width of the top,
                         in pixels
@param left    an integer specifying the width of the left side,
                         in pixels
@param bottom  an integer specifying the width of the right side,
                         in pixels
@param right   an integer specifying the width of the bottom,
                         in pixels
@param color   a <code>Color</code> to use for the border
@return the <code>MatteBorder</code> object
"
      end

      operation 10419330 "createMatteBorder"
	class_operation public return_type class_ref 1263874 // MatteBorder
	nparams 5
	  param in name "top" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param inout name "tileIcon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a matte-look border that consists of multiple tiles of a
specified icon. Multiple copies of the icon are placed side-by-side
to fill up the border area.
<p>
Note:<br>
If the icon doesn't load, the border area is painted gray.

@param top     an integer specifying the width of the top,
                         in pixels
@param left    an integer specifying the width of the left side,
                         in pixels
@param bottom  an integer specifying the width of the right side,
                         in pixels
@param right   an integer specifying the width of the bottom,
                         in pixels
@param tileIcon  the <code>Icon</code> object used for the border tiles
@return the <code>MatteBorder</code> object
"
      end

      operation 10419458 "createStrokeBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 1
	  param inout name "stroke" type class_ref 857730 // BasicStroke
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "// StrokeBorder //////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

Creates a border of the specified {@code stroke}.
The component's foreground color will be used to render the border.

@param stroke  the {@link BasicStroke} object used to stroke a shape
@return the {@code Border} object

@throws NullPointerException if the specified {@code stroke} is {@code null}

@since 1.7
"
      end

      operation 10419586 "createStrokeBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 2
	  param inout name "stroke" type class_ref 857730 // BasicStroke
	  param inout name "paint" type class_ref 860418 // Paint
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a border of the specified {@code stroke} and {@code paint}.
If the specified {@code paint} is {@code null},
the component's foreground color will be used to render the border.

@param stroke  the {@link BasicStroke} object used to stroke a shape
@param paint   the {@link Paint} object used to generate a color
@return the {@code Border} object

@throws NullPointerException if the specified {@code stroke} is {@code null}

@since 1.7
"
      end

      classrelation 4062210 // sharedDashedBorder (<unidirectional association>)
	relation 4062210 --->
	  a role_name "sharedDashedBorder" class_relation private
	    comment "// DashedBorder //////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4062210 // sharedDashedBorder (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      operation 10419714 "createDashedBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 1
	  param inout name "paint" type class_ref 860418 // Paint
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dashed border of the specified {@code paint}.
If the specified {@code paint} is {@code null},
the component's foreground color will be used to render the border.
The width of a dash line is equal to {@code 1}.
The relative length of a dash line and
the relative spacing between dash lines are equal to {@code 1}.
A dash line is not rounded.

@param paint  the {@link Paint} object used to generate a color
@return the {@code Border} object

@since 1.7
"
      end

      operation 10419842 "createDashedBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 3
	  param inout name "paint" type class_ref 860418 // Paint
	  param in name "length" explicit_type "float"
	  param in name "spacing" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dashed border of the specified {@code paint},
relative {@code length}, and relative {@code spacing}.
If the specified {@code paint} is {@code null},
the component's foreground color will be used to render the border.
The width of a dash line is equal to {@code 1}.
A dash line is not rounded.

@param paint    the {@link Paint} object used to generate a color
@param length   the relative length of a dash line
@param spacing  the relative spacing between dash lines
@return the {@code Border} object

@throws IllegalArgumentException if the specified {@code length} is less than {@code 1}, or
                                 if the specified {@code spacing} is less than {@code 0}
@since 1.7
"
      end

      operation 10419970 "createDashedBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 5
	  param inout name "paint" type class_ref 860418 // Paint
	  param in name "thickness" explicit_type "float"
	  param in name "length" explicit_type "float"
	  param in name "spacing" explicit_type "float"
	  param inout name "rounded" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dashed border of the specified {@code paint}, {@code thickness},
line shape, relative {@code length}, and relative {@code spacing}.
If the specified {@code paint} is {@code null},
the component's foreground color will be used to render the border.

@param paint      the {@link Paint} object used to generate a color
@param thickness  the width of a dash line
@param length     the relative length of a dash line
@param spacing    the relative spacing between dash lines
@param rounded    whether or not line ends should be round
@return the {@code Border} object

@throws IllegalArgumentException if the specified {@code thickness} is less than {@code 1}, or
                                 if the specified {@code length} is less than {@code 1}, or
                                 if the specified {@code spacing} is less than {@code 0}
@since 1.7
"
      end
    end

    class 1264002 "Box"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A lightweight container
that uses a BoxLayout object as its layout manager.
Box provides several class methods
that are useful for containers using BoxLayout --
even non-Box containers.

<p>
The <code>Box</code> class can create several kinds
of invisible components
that affect layout:
glue, struts, and rigid areas.
If all the components your <code>Box</code> contains
have a fixed size,
you might want to use a glue component
(returned by <code>createGlue</code>)
to control the components' positions.
If you need a fixed amount of space between two components,
try using a strut
(<code>createHorizontalStrut</code> or <code>createVerticalStrut</code>).
If you need an invisible component
that always takes up the same amount of space,
get it by invoking <code>createRigidArea</code>.
<p>
If you are implementing a <code>BoxLayout</code> you
can find further information and examples in
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html\">How to Use BoxLayout</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see BoxLayout

@author  Timothy Prinzing
"
      classrelation 4062338 // <generalisation>
	relation 4062338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4062338 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4062466 // <realization>
	relation 4062466 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4062466 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      operation 10421762 "Box"
	public explicit_return_type ""
	nparams 1
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Box</code> that displays its components
along the the specified axis.

@param axis  can be {@link BoxLayout#X_AXIS},
             {@link BoxLayout#Y_AXIS},
             {@link BoxLayout#LINE_AXIS} or
             {@link BoxLayout#PAGE_AXIS}.
@throws AWTError if the <code>axis</code> is invalid
@see #createHorizontalBox
@see #createVerticalBox
"
      end

      operation 10421890 "createHorizontalBox"
	class_operation public return_type class_ref 1264002 // Box
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Box</code> that displays its components
from left to right. If you want a <code>Box</code> that
respects the component orientation you should create the
<code>Box</code> using the constructor and pass in
<code>BoxLayout.LINE_AXIS</code>, eg:
<pre>
  Box lineBox = new Box(BoxLayout.LINE_AXIS);
</pre>

@return the box
"
      end

      operation 10422018 "createVerticalBox"
	class_operation public return_type class_ref 1264002 // Box
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Box</code> that displays its components
from top to bottom. If you want a <code>Box</code> that
respects the component orientation you should create the
<code>Box</code> using the constructor and pass in
<code>BoxLayout.PAGE_AXIS</code>, eg:
<pre>
  Box lineBox = new Box(BoxLayout.PAGE_AXIS);
</pre>

@return the box
"
      end

      operation 10422146 "createRigidArea"
	class_operation public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an invisible component that's always the specified size.
<!-- WHEN WOULD YOU USE THIS AS OPPOSED TO A STRUT? -->

@param d the dimensions of the invisible component
@return the component
@see #createGlue
@see #createHorizontalStrut
@see #createVerticalStrut
"
      end

      operation 10422274 "createHorizontalStrut"
	class_operation public return_type class_ref 338818 // Component
	nparams 1
	  param in name "width" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an invisible, fixed-width component.
In a horizontal box,
you typically use this method
to force a certain amount of space between two components.
In a vertical box,
you might use this method
to force the box to be at least the specified width.
The invisible component has no height
unless excess space is available,
in which case it takes its share of available space,
just like any other component that has no maximum height.

@param width the width of the invisible component, in pixels &gt;= 0
@return the component
@see #createVerticalStrut
@see #createGlue
@see #createRigidArea
"
      end

      operation 10422402 "createVerticalStrut"
	class_operation public return_type class_ref 338818 // Component
	nparams 1
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an invisible, fixed-height component.
In a vertical box,
you typically use this method
to force a certain amount of space between two components.
In a horizontal box,
you might use this method
to force the box to be at least the specified height.
The invisible component has no width
unless excess space is available,
in which case it takes its share of available space,
just like any other component that has no maximum width.

@param height the height of the invisible component, in pixels &gt;= 0
@return the component
@see #createHorizontalStrut
@see #createGlue
@see #createRigidArea
"
      end

      operation 10422530 "createGlue"
	class_operation public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an invisible \"glue\" component
that can be useful in a Box
whose visible components have a maximum width
(for a horizontal box)
or height (for a vertical box).
You can think of the glue component
as being a gooey substance
that expands as much as necessary
to fill the space between its neighboring components.

<p>

For example, suppose you have
a horizontal box that contains two fixed-size components.
If the box gets extra space,
the fixed-size components won't become larger,
so where does the extra space go?
Without glue,
the extra space goes to the right of the second component.
If you put glue between the fixed-size components,
then the extra space goes there.
If you put glue before the first fixed-size component,
the extra space goes there,
and the fixed-size components are shoved against the right
edge of the box.
If you put glue before the first fixed-size component
and after the second fixed-size component,
the fixed-size components are centered in the box.

<p>

To use glue,
call <code>Box.createGlue</code>
and add the returned component to a container.
The glue component has no minimum or preferred size,
so it takes no space unless excess space is available.
If excess space is available,
then the glue component takes its share of available
horizontal or vertical space,
just like any other component that has no maximum width or height.

@return the component
"
      end

      operation 10422658 "createHorizontalGlue"
	class_operation public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a horizontal glue component.

@return the component
"
      end

      operation 10422786 "createVerticalGlue"
	class_operation public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a vertical glue component.

@return the component
"
      end

      operation 10422914 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws an AWTError, since a Box can use only a BoxLayout.

@param l the layout manager to use
"
      end

      operation 10423042 "paintComponent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints this <code>Box</code>.  If this <code>Box</code> has a UI this
method invokes super's implementation, otherwise if this
<code>Box</code> is opaque the <code>Graphics</code> is filled
using the background.

@param g the <code>Graphics</code> to paint to
@throws NullPointerException if <code>g</code> is null
@since 1.6
"
      end

      class 1264130 "Filler"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4062594 // <generalisation>
	  relation 4062594 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4062594 // <generalisation>
	    b parent class_ref 338434 // JComponent
	end

	classrelation 4062722 // <realization>
	  relation 4062722 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4062722 // <realization>
	    b parent class_ref 347778 // Accessible
	end

	operation 10423170 "Filler"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "min" type class_ref 316802 // Dimension
	    param inout name "pref" type class_ref 316802 // Dimension
	    param inout name "max" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ConstructorProperties({\"minimumSize\", \"preferredSize\", \"maximumSize\"})
"
	  
	  
	  
	  comment "Constructor to create shape with the given size ranges.

@param min   Minimum size
@param pref  Preferred size
@param max   Maximum size
"
	end

	operation 10423298 "changeShape"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "min" type class_ref 316802 // Dimension
	    param inout name "pref" type class_ref 316802 // Dimension
	    param inout name "max" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Change the size requests for this shape.  An invalidate() is
propagated upward as a result so that layout will eventually
happen with using the new sizes.

@param min   Value to return for getMinimumSize
@param pref  Value to return for getPreferredSize
@param max   Value to return for getMaximumSize
"
	end

	operation 10423426 "paintComponent"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "g" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ---- Component methods ------------------------------------------

Paints this <code>Filler</code>.  If this
<code>Filler</code> has a UI this method invokes super's
implementation, otherwise if this <code>Filler</code> is
opaque the <code>Graphics</code> is filled using the
background.

@param g the <code>Graphics</code> to paint to
@throws NullPointerException if <code>g</code> is null
@since 1.6
"
	end

	operation 10423554 "getAccessibleContext"
	  public return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "///////////////
 Accessibility support for Box$Filler
//////////////

Gets the AccessibleContext associated with this Box.Filler.
For box fillers, the AccessibleContext takes the form of an
AccessibleBoxFiller.
A new AccessibleAWTBoxFiller instance is created if necessary.

@return an AccessibleBoxFiller that serves as the
        AccessibleContext of this Box.Filler.
"
	end

	class 1264258 "AccessibleBoxFiller"
	  visibility protected 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  java_annotation "@SuppressWarnings(\"serial\")
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4062850 // <generalisation>
	    relation 4062850 ---|>
	      a public
		java "${type}"
		classrelation_ref 4062850 // <generalisation>
	      b parent class_ref 347650 // AccessibleAWTComponent
	  end

	  operation 10423682 "getAccessibleRole"
	    public return_type class_ref 348034 // AccessibleRole
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " AccessibleContext methods


Gets the role of this object.

@return an instance of AccessibleRole describing the role of
  the object (AccessibleRole.FILLER)
@see AccessibleRole
"
	  end
	end
      end

      operation 10423810 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support for Box
//////////////

Gets the AccessibleContext associated with this Box.
For boxes, the AccessibleContext takes the form of an
AccessibleBox.
A new AccessibleAWTBox instance is created if necessary.

@return an AccessibleBox that serves as the
        AccessibleContext of this Box
"
      end

      class 1264386 "AccessibleBox"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4062978 // <generalisation>
	  relation 4062978 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4062978 // <generalisation>
	    b parent class_ref 350978 // AccessibleAWTContainer
	end

	operation 10423938 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleContext methods


Gets the role of this object.

@return an instance of AccessibleRole describing the role of the
  object (AccessibleRole.FILLER)
@see AccessibleRole
"
	end
      end
    end

    class 1264514 "BoxLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A layout manager that allows multiple components to be laid out either
vertically or horizontally. The components will not wrap so, for
example, a vertical arrangement of components will stay vertically
arranged when the frame is resized.
<TABLE STYLE=\"FLOAT:RIGHT\" BORDER=\"0\" SUMMARY=\"layout\">
   <TR>
     <TD ALIGN=\"CENTER\">
        <P STYLE=\"TEXT-ALIGN:CENTER\"><IMG SRC=\"doc-files/BoxLayout-1.gif\"
         alt=\"The following text describes this graphic.\"
         WIDTH=\"191\" HEIGHT=\"201\" STYLE=\"FLOAT:BOTTOM; BORDER:0\">
     </TD>
   </TR>
</TABLE>
<p>
Nesting multiple panels with different combinations of horizontal and
vertical gives an effect similar to GridBagLayout, without the
complexity. The diagram shows two panels arranged horizontally, each
of which contains 3 components arranged vertically.

<p> The BoxLayout manager is constructed with an axis parameter that
specifies the type of layout that will be done. There are four choices:

<blockquote><b><tt>X_AXIS</tt></b> - Components are laid out horizontally
from left to right.</blockquote>

<blockquote><b><tt>Y_AXIS</tt></b> - Components are laid out vertically
from top to bottom.</blockquote>

<blockquote><b><tt>LINE_AXIS</tt></b> - Components are laid out the way
words are laid out in a line, based on the container's
<tt>ComponentOrientation</tt> property. If the container's
<tt>ComponentOrientation</tt> is horizontal then components are laid out
horizontally, otherwise they are laid out vertically.  For horizontal
orientations, if the container's <tt>ComponentOrientation</tt> is left to
right then components are laid out left to right, otherwise they are laid
out right to left. For vertical orientations components are always laid out
from top to bottom.</blockquote>

<blockquote><b><tt>PAGE_AXIS</tt></b> - Components are laid out the way
text lines are laid out on a page, based on the container's
<tt>ComponentOrientation</tt> property. If the container's
<tt>ComponentOrientation</tt> is horizontal then components are laid out
vertically, otherwise they are laid out horizontally.  For horizontal
orientations, if the container's <tt>ComponentOrientation</tt> is left to
right then components are laid out left to right, otherwise they are laid
out right to left.&nbsp; For vertical orientations components are always
laid out from top to bottom.</blockquote>
<p>
For all directions, components are arranged in the same order as they were
added to the container.
<p>
BoxLayout attempts to arrange components
at their preferred widths (for horizontal layout)
or heights (for vertical layout).
For a horizontal layout,
if not all the components are the same height,
BoxLayout attempts to make all the components
as high as the highest component.
If that's not possible for a particular component,
then BoxLayout aligns that component vertically,
according to the component's Y alignment.
By default, a component has a Y alignment of 0.5,
which means that the vertical center of the component
should have the same Y coordinate as
the vertical centers of other components with 0.5 Y alignment.
<p>
Similarly, for a vertical layout,
BoxLayout attempts to make all components in the column
as wide as the widest component.
If that fails, it aligns them horizontally
according to their X alignments.  For <code>PAGE_AXIS</code> layout,
horizontal alignment is done based on the leading edge of the component.
In other words, an X alignment value of 0.0 means the left edge of a
component if the container's <code>ComponentOrientation</code> is left to
right and it means the right edge of the component otherwise.
<p>
Instead of using BoxLayout directly, many programs use the Box class.
The Box class is a lightweight container that uses a BoxLayout.
It also provides handy methods to help you use BoxLayout well.
Adding components to multiple nested boxes is a powerful way to get
the arrangement you want.
<p>
For further information and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html\">How to Use BoxLayout</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see Box
@see java.awt.ComponentOrientation
@see JComponent#getAlignmentX
@see JComponent#getAlignmentY

@author   Timothy Prinzing
"
      classrelation 4063106 // <realization>
	relation 4063106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4063106 // <realization>
	  b parent class_ref 406402 // LayoutManager2
      end

      classrelation 4063234 // <realization>
	relation 4063234 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4063234 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2378114 "X_AXIS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that components should be laid out left to right.

"
      end

      attribute 2378242 "Y_AXIS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that components should be laid out top to bottom.

"
      end

      attribute 2378370 "LINE_AXIS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that components should be laid out in the direction of
a line of text as determined by the target container's
<code>ComponentOrientation</code> property.

"
      end

      attribute 2378498 "PAGE_AXIS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that components should be laid out in the direction that
lines flow across a page as determined by the target container's
<code>ComponentOrientation</code> property.

"
      end

      operation 10424066 "BoxLayout"
	public explicit_return_type ""
	nparams 2
	  param inout name "target" type class_ref 338690 // Container
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"target\", \"axis\"})
"
	
	
	
	comment "Creates a layout manager that will lay out components along the
given axis.

@param target  the container that needs to be laid out
@param axis  the axis to lay out components along. Can be one of:
             <code>BoxLayout.X_AXIS</code>,
             <code>BoxLayout.Y_AXIS</code>,
             <code>BoxLayout.LINE_AXIS</code> or
             <code>BoxLayout.PAGE_AXIS</code>

@exception AWTError  if the value of <code>axis</code> is invalid
"
      end

      operation 10424194 "BoxLayout"
	package explicit_return_type ""
	nparams 3
	  param inout name "target" type class_ref 338690 // Container
	  param in name "axis" explicit_type "int"
	  param inout name "dbg" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a BoxLayout that
produces debugging messages.

@param target  the container that needs to be laid out
@param axis  the axis to lay out components along. Can be one of:
             <code>BoxLayout.X_AXIS</code>,
             <code>BoxLayout.Y_AXIS</code>,
             <code>BoxLayout.LINE_AXIS</code> or
             <code>BoxLayout.PAGE_AXIS</code>

@param dbg  the stream to which debugging messages should be sent,
  null if none
"
      end

      operation 10424322 "getTarget"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the container that uses this layout manager.

@return the container that uses this layout manager

@since 1.6
"
      end

      operation 10424450 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis that was used to lay out components.
Returns one of:
<code>BoxLayout.X_AXIS</code>,
<code>BoxLayout.Y_AXIS</code>,
<code>BoxLayout.LINE_AXIS</code> or
<code>BoxLayout.PAGE_AXIS</code>

@return the axis that was used to lay out components

@since 1.6
"
      end

      operation 10424578 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that a child has changed its layout related information,
and thus any cached calculations should be flushed.
<p>
This method is called by AWT when the invalidate method is called
on the Container.  Since the invalidate method may be called
asynchronously to the event thread, this method may be called
asynchronously.

@param target  the affected container

@exception AWTError  if the target isn't the container specified to the
                     BoxLayout constructor
"
      end

      operation 10424706 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Not used by this class.

@param name the name of the component
@param comp the component
"
      end

      operation 10424834 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Not used by this class.

@param comp the component
"
      end

      operation 10424962 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Not used by this class.

@param comp the component
@param constraints constraints
"
      end

      operation 10425090 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred dimensions for this layout, given the components
in the specified target container.

@param target  the container that needs to be laid out
@return the dimensions &gt;= 0 &amp;&amp; &lt;= Integer.MAX_VALUE
@exception AWTError  if the target isn't the container specified to the
                     BoxLayout constructor
@see Container
@see #minimumLayoutSize
@see #maximumLayoutSize
"
      end

      operation 10425218 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum dimensions needed to lay out the components
contained in the specified target container.

@param target  the container that needs to be laid out
@return the dimensions &gt;= 0 &amp;&amp; &lt;= Integer.MAX_VALUE
@exception AWTError  if the target isn't the container specified to the
                     BoxLayout constructor
@see #preferredLayoutSize
@see #maximumLayoutSize
"
      end

      operation 10425346 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum dimensions the target container can use
to lay out the components it contains.

@param target  the container that needs to be laid out
@return the dimensions &gt;= 0 &amp;&amp; &lt;= Integer.MAX_VALUE
@exception AWTError  if the target isn't the container specified to the
                     BoxLayout constructor
@see #preferredLayoutSize
@see #minimumLayoutSize
"
      end

      operation 10425474 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the X axis for the container.
If the box is horizontal, the default
alignment will be returned. Otherwise, the alignment needed
to place the children along the X axis will be returned.

@param target  the container
@return the alignment &gt;= 0.0f &amp;&amp; &lt;= 1.0f
@exception AWTError  if the target isn't the container specified to the
                     BoxLayout constructor
"
      end

      operation 10425602 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the Y axis for the container.
If the box is vertical, the default
alignment will be returned. Otherwise, the alignment needed
to place the children along the Y axis will be returned.

@param target  the container
@return the alignment &gt;= 0.0f &amp;&amp; &lt;= 1.0f
@exception AWTError  if the target isn't the container specified to the
                     BoxLayout constructor
"
      end

      operation 10425730 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the AWT <!-- XXX CHECK! --> when the specified container
needs to be laid out.

@param target  the container to lay out

@exception AWTError  if the target isn't the container specified to the
                     BoxLayout constructor
"
      end

      operation 10425858 "checkContainer"
	package explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10425986 "checkRequests"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10426114 "resolveAxis"
	private explicit_return_type "int"
	nparams 2
	  param in name "axis" explicit_type "int"
	  param inout name "o" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given one of the 4 axis values, resolve it to an absolute axis.
The relative axis values, PAGE_AXIS and LINE_AXIS are converted
to their absolute couterpart given the target's ComponentOrientation
value.  The absolute axes, X_AXIS and Y_AXIS are returned unmodified.

@param axis the axis to resolve
@param o the ComponentOrientation to resolve against
@return the resolved axis
"
      end

      attribute 2378626 "axis"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4063362 // target (<unidirectional association>)
	relation 4063362 --->
	  a role_name "target" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4063362 // target (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 4063490 // xChildren (<unidirectional association>)
	relation 4063490 --->
	  a role_name "xChildren" multiplicity "[]" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4063490 // xChildren (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end

      classrelation 4063618 // yChildren (<unidirectional association>)
	relation 4063618 --->
	  a role_name "yChildren" multiplicity "[]" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4063618 // yChildren (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end

      classrelation 4063746 // xTotal (<unidirectional association>)
	relation 4063746 --->
	  a role_name "xTotal" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4063746 // xTotal (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end

      classrelation 4063874 // yTotal (<unidirectional association>)
	relation 4063874 --->
	  a role_name "yTotal" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4063874 // yTotal (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end

      classrelation 4064002 // dbg (<unidirectional association>)
	relation 4064002 --->
	  a role_name "dbg" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4064002 // dbg (<unidirectional association>)
	  b parent class_ref 128258 // PrintStream
      end
    end

    class 1264642 "BufferStrategyPaintManager"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PaintManager implementation that uses a BufferStrategy for
rendering.

@author Scott Violet
"
      classrelation 4066818 // <generalisation>
	relation 4066818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4066818 // <generalisation>
	  b parent class_ref 1264770 // PaintManager
      end

      classrelation 4066946 // COMPONENT_CREATE_BUFFER_STRATEGY_METHOD (<unidirectional association>)
	relation 4066946 --->
	  a role_name "COMPONENT_CREATE_BUFFER_STRATEGY_METHOD" class_relation private
	    comment " All drawing is done to a BufferStrategy.  At the end of painting
 (endPaint) the region that was painted is flushed to the screen
 (using BufferStrategy.show).

 PaintManager.show is overriden to show directly from the
 BufferStrategy (when using blit), if successful true is
 returned and a paint event will not be generated.  To avoid
 showing from the buffer while painting a locking scheme is
 implemented.  When beginPaint is invoked the field painting is
 set to true.  If painting is true and show is invoked we
 immediately return false.  This is done to avoid blocking the
 toolkit thread while painting happens.  In a similar way when
 show is invoked the field showing is set to true, beginPaint
 will then block until showing is true.  This scheme ensures we
 only ever have one thread using the BufferStrategy and it also
 ensures the toolkit thread remains as responsive as possible.

 If we're using a flip strategy the contents of the backbuffer may
 have changed and so show only attempts to show from the backbuffer
 if we get a blit strategy.


 Methods used to create BufferStrategy for Applets.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4066946 // COMPONENT_CREATE_BUFFER_STRATEGY_METHOD (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 4067074 // COMPONENT_GET_BUFFER_STRATEGY_METHOD (<unidirectional association>)
	relation 4067074 --->
	  a role_name "COMPONENT_GET_BUFFER_STRATEGY_METHOD" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4067074 // COMPONENT_GET_BUFFER_STRATEGY_METHOD (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      attribute 2381058 "LOGGER"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(
                           \"javax.swing.BufferStrategyPaintManager\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1265538 "BufferInfo"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4067842 // <generalisation>
	  relation 4067842 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4067842 // <generalisation>
	    b parent class_ref 440194 // ComponentAdapter
	end

	classrelation 4067970 // <realization>
	  relation 4067970 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4067970 // <realization>
	    b parent class_ref 433794 // WindowListener
	end

	classrelation 4068098 // weakBS (<unidirectional association>)
	  relation 4068098 --->
	    a role_name "weakBS" private
	      comment " NOTE: This class does NOT hold a direct reference to the root, if it
 did there would be a cycle between the BufferPerWindowPaintManager
 and the Window so that it could never be GC'ed

 Reference to BufferStrategy is referenced via WeakReference for
 same reason.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<BufferStrategy> ${name}${value};
"
	      classrelation_ref 4068098 // weakBS (<unidirectional association>)
	    b parent class_ref 131330 // WeakReference
	end

	classrelation 4068226 // root (<unidirectional association>)
	  relation 4068226 --->
	    a role_name "root" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Container> ${name}${value};
"
	      classrelation_ref 4068226 // root (<unidirectional association>)
	    b parent class_ref 131330 // WeakReference
	end

	attribute 2382338 "inSync"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Indicates whether or not the backbuffer and display are in sync.
 This is set to true when a full repaint on the rootpane is done.
"
	end

	attribute 2382466 "contentsLostDuringExpose"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Indicates the contents were lost during and expose event.
"
	end

	attribute 2382594 "paintAllOnExpose"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Indicates we need to generate a paint event on expose.
"
	end

	operation 10438274 "BufferInfo"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "root" type class_ref 338690 // Container
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10438402 "setPaintAllOnExpose"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "paintAllOnExpose" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10438530 "getPaintAllOnExpose"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10438658 "setContentsLostDuringExpose"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "value" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10438786 "getContentsLostDuringExpose"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10438914 "setInSync"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "inSync" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10439042 "isInSync"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Whether or not the contents of the buffer strategy
is in sync with the window.  This is set to true when the root
pane paints all, and false when contents are lost/restored.
"
	end

	operation 10439170 "getRoot"
	  public return_type class_ref 338690 // Container
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the Root (Window or Applet) that this BufferInfo references.
"
	end

	operation 10439298 "getBufferStrategy"
	  public return_type class_ref 341122 // BufferStrategy
	  nparams 1
	    param inout name "create" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the BufferStartegy.  This will return null if
the BufferStartegy hasn't been created and <code>create</code> is
false, or if there is a problem in creating the
<code>BufferStartegy</code>.

@param create If true, and the BufferStartegy is currently null,
              one will be created.
"
	end

	operation 10439426 "hasBufferStrategyChanged"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the buffer strategy of the component differs
from current buffer strategy.
"
	end

	operation 10439554 "createBufferStrategy"
	  private return_type class_ref 341122 // BufferStrategy
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates the BufferStrategy.  If the appropriate system property
has been set we'll try for flip first and then we'll try for
blit.
"
	end

	operation 10439682 "createBufferStrategy"
	  private return_type class_ref 341122 // BufferStrategy
	  nparams 2
	    param inout name "root" type class_ref 338690 // Container
	    param inout name "isVsynced" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Creates and returns a buffer strategy.  If
 there is a problem creating the buffer strategy this will
 eat the exception and return null."
	end

	operation 10439810 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cleans up and removes any references.
"
	end

	operation 10439938 "componentHidden"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 346242 // ComponentEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " We mark the buffer as needing to be painted on a hide/iconify
 because the developer may have conditionalized painting based on
 visibility.
 Ideally we would also move to having the BufferStrategy being
 a SoftReference in Component here, but that requires changes to
 Component and the like."
	end

	operation 10440066 "windowIconified"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10440194 "windowClosed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " On a dispose we chuck everything."
	end

	operation 10440322 "windowOpened"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10440450 "windowClosing"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10440578 "windowDeiconified"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10440706 "windowActivated"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10440834 "windowDeactivated"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4067202 // bufferInfos (<unidirectional association>)
	relation 4067202 --->
	  a role_name "bufferInfos" private
	    comment "
List of BufferInfos.  We don't use a Map primarily because
there are typically only a handful of top level components making
a Map overkill.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<BufferInfo> ${name}${value};
"
	    classrelation_ref 4067202 // bufferInfos (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      attribute 2381186 "painting"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates <code>beginPaint</code> has been invoked.  This is
set to true for the life of beginPaint/endPaint pair.

"
      end

      attribute 2381314 "showing"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates we're in the process of showing.  All painting, on the EDT,
is blocked while this is true.

"
      end

      attribute 2381442 "accumulatedX"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Region that we need to flush.  When beginPaint is called these are
 reset and any subsequent calls to paint/copyArea then update these
 fields accordingly.  When endPaint is called we then try and show
 the accumulated region.
 These fields are in the coordinate system of the root.

"
      end

      attribute 2381570 "accumulatedY"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2381698 "accumulatedMaxX"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2381826 "accumulatedMaxY"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4067330 // rootJ (<unidirectional association>)
	relation 4067330 --->
	  a role_name "rootJ" private
	    comment " The following fields are set by prepare


Farthest JComponent ancestor for the current paint/copyArea.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4067330 // rootJ (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      attribute 2381954 "xOffset"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Location of component being painted relative to root.

"
      end

      attribute 2382082 "yOffset"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Location of component being painted relative to root.

"
      end

      classrelation 4067458 // bsg (<unidirectional association>)
	relation 4067458 --->
	  a role_name "bsg" private
	    comment "
Graphics from the BufferStrategy.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4067458 // bsg (<unidirectional association>)
	  b parent class_ref 343682 // Graphics
      end

      classrelation 4067586 // bufferStrategy (<unidirectional association>)
	relation 4067586 --->
	  a role_name "bufferStrategy" private
	    comment "
BufferStrategy currently being used.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4067586 // bufferStrategy (<unidirectional association>)
	  b parent class_ref 341122 // BufferStrategy
      end

      classrelation 4067714 // bufferInfo (<unidirectional association>)
	relation 4067714 --->
	  a role_name "bufferInfo" private
	    comment "
BufferInfo corresponding to root.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4067714 // bufferInfo (<unidirectional association>)
	  b parent class_ref 1265538 // BufferInfo
      end

      attribute 2382210 "disposeBufferOnEnd"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Set to true if the bufferInfo needs to be disposed when current
paint loop is done.

"
      end

      operation 10435714 "getGetBufferStrategyMethod"
	class_operation private return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10435842 "getCreateBufferStrategyMethod"
	class_operation private return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10435970 "getMethods"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10436098 "BufferStrategyPaintManager"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10436226 "dispose"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PaintManager methods


Cleans up any created BufferStrategies.
"
      end

      operation 10436354 "dispose"
	private explicit_return_type "void"
	nparams 1
	  param inout name "bufferInfos" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<BufferInfo> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10436482 "show"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "c" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows the specified region of the back buffer.  This will return
true if successful, false otherwise.  This is invoked on the
toolkit thread in response to an expose event.
"
      end

      operation 10436610 "paint"
	public explicit_return_type "boolean"
	nparams 7
	  param inout name "paintingComponent" type class_ref 338434 // JComponent
	  param inout name "bufferComponent" type class_ref 338434 // JComponent
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10436738 "copyArea"
	public explicit_return_type "void"
	nparams 9
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "g" type class_ref 343682 // Graphics
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param in name "deltaX" explicit_type "int"
	  param in name "deltaY" explicit_type "int"
	  param inout name "clip" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10436866 "beginPaint"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10436994 "endPaint"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10437122 "flushAccumulatedRegion"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders the BufferStrategy to the screen.

@return true if successful, false otherwise.
"
      end

      operation 10437250 "resetAccumulated"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10437378 "doubleBufferingChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "rootPane" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the double buffering or useTrueDoubleBuffering
changes for a JRootPane.  If the rootpane is not double
buffered, or true double buffering changes we throw out any
cache we may have.
"
      end

      operation 10437506 "doubleBufferingChanged0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "rootPane" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the work for doubleBufferingChanged.
"
      end

      operation 10437634 "prepare"
	private explicit_return_type "boolean"
	nparams 7
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "root" type class_ref 338690 // Container
	  param inout name "isPaint" explicit_type "boolean"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates information common to paint/copyArea.

@return true if should use buffering per window in painting.
"
      end

      operation 10437762 "fetchRoot"
	private return_type class_ref 338690 // Container
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10437890 "resetDoubleBufferPerWindow"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turns off double buffering per window.
"
      end

      operation 10438018 "getBufferInfo"
	private return_type class_ref 1265538 // BufferInfo
	nparams 1
	  param inout name "root" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the BufferInfo for the specified root or null if one
hasn't been created yet.
"
      end

      operation 10438146 "accumulate"
	private explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1265666 "ButtonGroup"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"serial\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to create a multiple-exclusion scope for
a set of buttons. Creating a set of buttons with the
same <code>ButtonGroup</code> object means that
turning \"on\" one of those buttons
turns off all other buttons in the group.
<p>
A <code>ButtonGroup</code> can be used with
any set of objects that inherit from <code>AbstractButton</code>.
Typically a button group contains instances of
<code>JRadioButton</code>,
<code>JRadioButtonMenuItem</code>,
or <code>JToggleButton</code>.
It wouldn't make sense to put an instance of
<code>JButton</code> or <code>JMenuItem</code>
in a button group
because <code>JButton</code> and <code>JMenuItem</code>
don't implement the selected state.
<p>
Initially, all buttons in the group are unselected.
<p>
For examples and further information on using button groups see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton\">How to Use Radio Buttons</a>,
a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Jeff Dinkins
"
      classrelation 4068354 // <realization>
	relation 4068354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4068354 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4068482 // buttons (<unidirectional association>)
	relation 4068482 --->
	  a role_name "buttons" init_value " new Vector<AbstractButton>()" protected
	    comment " the list of buttons participating in this group
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AbstractButton> ${name}${value};
"
	    classrelation_ref 4068482 // buttons (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 4068610 // selection (<unidirectional association>)
	relation 4068610 --->
	  a role_name "selection" init_value " null" package
	    comment "
The current selection.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4068610 // selection (<unidirectional association>)
	  b parent class_ref 397570 // ButtonModel
      end

      operation 10440962 "ButtonGroup"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>ButtonGroup</code>.
"
      end

      operation 10441090 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" type class_ref 384898 // AbstractButton
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the button to the group.
@param b the button to be added
"
      end

      operation 10441218 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" type class_ref 384898 // AbstractButton
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the button from the group.
@param b the button to be removed
"
      end

      operation 10441346 "clearSelection"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the selection such that none of the buttons
in the <code>ButtonGroup</code> are selected.

@since 1.6
"
      end

      operation 10441474 "getElements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AbstractButton> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all the buttons that are participating in
this group.
@return an <code>Enumeration</code> of the buttons in this group
"
      end

      operation 10441602 "getSelection"
	public return_type class_ref 397570 // ButtonModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model of the selected button.
@return the selected button model
"
      end

      operation 10441730 "setSelected"
	public explicit_return_type "void"
	nparams 2
	  param inout name "m" type class_ref 397570 // ButtonModel
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected value for the <code>ButtonModel</code>.
Only one button in the group may be selected at a time.
@param m the <code>ButtonModel</code>
@param b <code>true</code> if this button is to be
  selected, otherwise <code>false</code>
"
      end

      operation 10441858 "isSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "m" type class_ref 397570 // ButtonModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether a <code>ButtonModel</code> is selected.
@return <code>true</code> if the button is selected,
  otherwise returns <code>false</code>
"
      end

      operation 10441986 "getButtonCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of buttons in the group.
@return the button count
@since 1.3
"
      end
    end

    class 1265922 "ClientPropertyKey"
      visibility package stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An enumeration for keys used as client properties within the Swing
implementation.
<p>
This enum holds only a small subset of the keys currently used within Swing,
but we may move more of them here in the future.
<p>
Adding an item to, and using, this class instead of {@code String} for
client properties protects against conflicts with developer-set client
properties. Using this class also avoids a problem with {@code StringBuilder}
and {@code StringBuffer} keys, whereby the keys are not recognized upon
deserialization.
<p>
When a client property value associated with one of these keys does not
implement {@code Serializable}, the result during serialization depends
on how the key is defined here. Historically, client properties with values
not implementing {@code Serializable} have simply been dropped and left out
of the serialized representation. To define keys with such behavior in this
enum, provide a value of {@code false} for the {@code reportValueNotSerializable}
property. When migrating existing properties to this enum, one may wish to
consider using this by default, to preserve backward compatibility.
<p>
To instead have a {@code NotSerializableException} thrown when a
{@code non-Serializable} property is encountered, provide the value of
{@code true} for the {@code reportValueNotSerializable} property. This
is useful when the property represents something that the developer
needs to know about when it cannot be serialized.

@author  Shannon Hickey
"
      attribute 2382722 "JComponent_INPUT_VERIFIER"
	public type class_ref 1265922 // ClientPropertyKey
	cpp_decl ""
	java_decl "  ${@}${name}(true),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key used by JComponent for storing InputVerifier.
"
      end

      attribute 2382850 "JComponent_TRANSFER_HANDLER"
	public type class_ref 1265922 // ClientPropertyKey
	cpp_decl ""
	java_decl "  ${@}${name}(true),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key used by JComponent for storing TransferHandler.
"
      end

      attribute 2382978 "JComponent_ANCESTOR_NOTIFIER"
	public type class_ref 1265922 // ClientPropertyKey
	cpp_decl ""
	java_decl "  ${@}${name}(true),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key used by JComponent for storing AncestorNotifier.
"
      end

      attribute 2383106 "PopupFactory_FORCE_HEAVYWEIGHT_POPUP"
	public type class_ref 1265922 // ClientPropertyKey
	cpp_decl ""
	java_decl "  ${@}${name}(true),${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key used by PopupFactory to force heavy weight popups for a
component.
"
      end

      attribute 2383234 "reportValueNotSerializable"
	const_attribute private explicit_type "boolean"
	stereotype "attribute"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not a {@code NotSerializableException} should be thrown
during serialization, when the value associated with this key does
not implement {@code Serializable}.

"
      end

      extra_member 184706 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setClientPropertyKeyAccessor(
            new AWTAccessor.ClientPropertyKeyAccessor() {
                public Object getJComponent_TRANSFER_HANDLER() {
                    return JComponent_TRANSFER_HANDLER;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10446210 "ClientPropertyKey"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a key with the {@code reportValueNotSerializable} property
set to {@code false}.
"
      end

      operation 10446338 "ClientPropertyKey"
	private explicit_return_type ""
	nparams 1
	  param inout name "reportValueNotSerializable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a key with the {@code reportValueNotSerializable} property
set to the given value.
"
      end

      operation 10446466 "getReportValueNotSerializable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not a {@code NotSerializableException} should be thrown
during serialization, when the value associated with this key does
not implement {@code Serializable}.
"
      end
    end

    class 1266050 "DebugGraphics"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Graphics subclass supporting graphics debugging. Overrides most methods
from Graphics.  DebugGraphics objects are rarely created by hand.  They
are most frequently created automatically when a JComponent's
debugGraphicsOptions are changed using the setDebugGraphicsOptions()
method.
<p>
NOTE: You must turn off double buffering to use DebugGraphics:
      RepaintManager repaintManager = RepaintManager.currentManager(component);
      repaintManager.setDoubleBufferingEnabled(false);

@see JComponent#setDebugGraphicsOptions
@see RepaintManager#currentManager
@see RepaintManager#setDoubleBufferingEnabled

@author Dave Karlton
"
      classrelation 4069378 // <generalisation>
	relation 4069378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4069378 // <generalisation>
	  b parent class_ref 343682 // Graphics
      end

      classrelation 4069506 // graphics (<unidirectional association>)
	relation 4069506 --->
	  a role_name "graphics" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4069506 // graphics (<unidirectional association>)
	  b parent class_ref 343682 // Graphics
      end

      classrelation 4069634 // buffer (<unidirectional association>)
	relation 4069634 --->
	  a role_name "buffer" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4069634 // buffer (<unidirectional association>)
	  b parent class_ref 340098 // Image
      end

      attribute 2383362 "debugOptions"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2383490 "graphicsID"
	package explicit_type "int"
	init_value " graphicsCount++"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2383618 "xOffset"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2383746 "yOffset"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2383874 "graphicsCount"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4069762 // imageLoadingIcon (<unidirectional association>)
	relation 4069762 --->
	  a role_name "imageLoadingIcon" init_value " new ImageIcon()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4069762 // imageLoadingIcon (<unidirectional association>)
	  b parent class_ref 413826 // ImageIcon
      end

      attribute 2384002 "LOG_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Log graphics operations. 
"
      end

      attribute 2384130 "FLASH_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flash graphics operations. 
"
      end

      attribute 2384258 "BUFFERED_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Show buffered operations in a separate <code>Frame</code>. 
"
      end

      attribute 2384386 "NONE_OPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Don't debug graphics operations. 
"
      end

      extra_member 184834 "initialization"
	
	cpp "" ""
	java "  static {
        JComponent.DEBUG_GRAPHICS_LOADED = true;
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10447362 "DebugGraphics"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new debug graphics context that supports slowed
down drawing.
"
      end

      operation 10447490 "DebugGraphics"
	public explicit_return_type ""
	nparams 2
	  param inout name "graphics" type class_ref 343682 // Graphics
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a debug graphics context from an existing graphics
context that slows down drawing for the specified component.

@param graphics  the Graphics context to slow down
@param component the JComponent to draw slowly
"
      end

      operation 10447618 "DebugGraphics"
	public explicit_return_type ""
	nparams 1
	  param inout name "graphics" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a debug graphics context from an existing graphics
context that supports slowed down drawing.

@param graphics  the Graphics context to slow down
"
      end

      operation 10447746 "create"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.create</code> to return a DebugGraphics object.
"
      end

      operation 10447874 "create"
	public return_type class_ref 343682 // Graphics
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.create</code> to return a DebugGraphics object.
"
      end

      operation 10448002 "setFlashColor"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "flashColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------------
  NEW METHODS
------------------------------------------------

Sets the Color used to flash drawing operations.
"
      end

      operation 10448130 "flashColor"
	class_operation public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Color used to flash drawing operations.
@see #setFlashColor
"
      end

      operation 10448258 "setFlashTime"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "flashTime" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time delay of drawing operation flashing.
"
      end

      operation 10448386 "flashTime"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time delay of drawing operation flashing.
@see #setFlashTime
"
      end

      operation 10448514 "setFlashCount"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "flashCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of times that drawing operations will flash.
"
      end

      operation 10448642 "flashCount"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the number of times that drawing operations will flash.
@see #setFlashCount
"
      end

      operation 10448770 "setLogStream"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the stream to which the DebugGraphics logs drawing operations.
"
      end

      operation 10448898 "logStream"
	class_operation public return_type class_ref 128258 // PrintStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the stream to which the DebugGraphics logs drawing operations.
@see #setLogStream
"
      end

      operation 10449026 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aFont" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the Font used for text drawing operations.
"
      end

      operation 10449154 "getFont"
	public return_type class_ref 340354 // Font
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the Font used for text drawing operations.
@see #setFont
"
      end

      operation 10449282 "setColor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the color to be used for drawing and filling lines and shapes.
"
      end

      operation 10449410 "getColor"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the Color used for text drawing operations.
@see #setColor
"
      end

      operation 10449538 "getFontMetrics"
	public return_type class_ref 343810 // FontMetrics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-----------------------------------------------
 OVERRIDDEN METHODS
------------------------------------------------

Overrides <code>Graphics.getFontMetrics</code>.
"
      end

      operation 10449666 "getFontMetrics"
	public return_type class_ref 343810 // FontMetrics
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.getFontMetrics</code>.
"
      end

      operation 10449794 "translate"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.translate</code>.
"
      end

      operation 10449922 "setPaintMode"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.setPaintMode</code>.
"
      end

      operation 10450050 "setXORMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.setXORMode</code>.
"
      end

      operation 10450178 "getClipBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.getClipBounds</code>.
"
      end

      operation 10450306 "clipRect"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.clipRect</code>.
"
      end

      operation 10450434 "setClip"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.setClip</code>.
"
      end

      operation 10450562 "getClip"
	public return_type class_ref 379394 // Shape
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.getClip</code>.
"
      end

      operation 10450690 "setClip"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clip" type class_ref 379394 // Shape
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.setClip</code>.
"
      end

      operation 10450818 "drawRect"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawRect</code>.
"
      end

      operation 10450946 "fillRect"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.fillRect</code>.
"
      end

      operation 10451074 "clearRect"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.clearRect</code>.
"
      end

      operation 10451202 "drawRoundRect"
	public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "arcWidth" explicit_type "int"
	  param in name "arcHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawRoundRect</code>.
"
      end

      operation 10451330 "fillRoundRect"
	public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "arcWidth" explicit_type "int"
	  param in name "arcHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.fillRoundRect</code>.
"
      end

      operation 10451458 "drawLine"
	public explicit_return_type "void"
	nparams 4
	  param in name "x1" explicit_type "int"
	  param in name "y1" explicit_type "int"
	  param in name "x2" explicit_type "int"
	  param in name "y2" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawLine</code>.
"
      end

      operation 10451586 "draw3DRect"
	public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "raised" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.draw3DRect</code>.
"
      end

      operation 10451714 "fill3DRect"
	public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "raised" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.fill3DRect</code>.
"
      end

      operation 10451842 "drawOval"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawOval</code>.
"
      end

      operation 10451970 "fillOval"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.fillOval</code>.
"
      end

      operation 10452098 "drawArc"
	public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "startAngle" explicit_type "int"
	  param in name "arcAngle" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawArc</code>.
"
      end

      operation 10452226 "fillArc"
	public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "startAngle" explicit_type "int"
	  param in name "arcAngle" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.fillArc</code>.
"
      end

      operation 10452354 "drawPolyline"
	public explicit_return_type "void"
	nparams 3
	  param inout name "xPoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "yPoints" explicit_type "int"
	multiplicity "[]"
	  param in name "nPoints" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawPolyline</code>.
"
      end

      operation 10452482 "drawPolygon"
	public explicit_return_type "void"
	nparams 3
	  param inout name "xPoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "yPoints" explicit_type "int"
	multiplicity "[]"
	  param in name "nPoints" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawPolygon</code>.
"
      end

      operation 10452610 "fillPolygon"
	public explicit_return_type "void"
	nparams 3
	  param inout name "xPoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "yPoints" explicit_type "int"
	multiplicity "[]"
	  param in name "nPoints" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.fillPolygon</code>.
"
      end

      operation 10452738 "drawString"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aString" type class_ref 128130 // String
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawString</code>.
"
      end

      operation 10452866 "drawString"
	public explicit_return_type "void"
	nparams 3
	  param inout name "iterator" type class_ref 472962 // AttributedCharacterIterator
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawString</code>.
"
      end

      operation 10452994 "drawBytes"
	public explicit_return_type "void"
	nparams 5
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawBytes</code>.
"
      end

      operation 10453122 "drawChars"
	public explicit_return_type "void"
	nparams 5
	  param inout name "data" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawChars</code>.
"
      end

      operation 10453250 "drawImage"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawImage</code>.
"
      end

      operation 10453378 "drawImage"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawImage</code>.
"
      end

      operation 10453506 "drawImage"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "bgcolor" type class_ref 323458 // Color
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawImage</code>.
"
      end

      operation 10453634 "drawImage"
	public explicit_return_type "boolean"
	nparams 7
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "bgcolor" type class_ref 323458 // Color
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawImage</code>.
"
      end

      operation 10453762 "drawImage"
	public explicit_return_type "boolean"
	nparams 10
	  param inout name "img" type class_ref 340098 // Image
	  param in name "dx1" explicit_type "int"
	  param in name "dy1" explicit_type "int"
	  param in name "dx2" explicit_type "int"
	  param in name "dy2" explicit_type "int"
	  param in name "sx1" explicit_type "int"
	  param in name "sy1" explicit_type "int"
	  param in name "sx2" explicit_type "int"
	  param in name "sy2" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawImage</code>.
"
      end

      operation 10453890 "drawImage"
	public explicit_return_type "boolean"
	nparams 11
	  param inout name "img" type class_ref 340098 // Image
	  param in name "dx1" explicit_type "int"
	  param in name "dy1" explicit_type "int"
	  param in name "dx2" explicit_type "int"
	  param in name "dy2" explicit_type "int"
	  param in name "sx1" explicit_type "int"
	  param in name "sy1" explicit_type "int"
	  param in name "sx2" explicit_type "int"
	  param in name "sy2" explicit_type "int"
	  param inout name "bgcolor" type class_ref 323458 // Color
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.drawImage</code>.
"
      end

      operation 10454018 "loadImage"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "img" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10454146 "copyArea"
	public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "destX" explicit_type "int"
	  param in name "destY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.copyArea</code>.
"
      end

      operation 10454274 "sleep"
	package explicit_return_type "void"
	nparams 1
	  param in name "mSecs" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10454402 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>Graphics.dispose</code>.
"
      end

      operation 10454530 "isDrawingBuffer"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ALERT!

Returns the drawingBuffer value.

@return true if this object is drawing from a Buffer
"
      end

      operation 10454658 "toShortString"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10454786 "pointToString"
	package return_type class_ref 128130 // String
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10454914 "setDebugOptions"
	public explicit_return_type "void"
	nparams 1
	  param in name "options" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enables/disables diagnostic information about every graphics
operation. The value of <b>options</b> indicates how this information
should be displayed. LOG_OPTION causes a text message to be printed.
FLASH_OPTION causes the drawing to flash several times. BUFFERED_OPTION
creates a new Frame that shows each operation on an
offscreen buffer. The value of <b>options</b> is bitwise OR'd into
the current value. To disable debugging use NONE_OPTION.
"
      end

      operation 10455042 "getDebugOptions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the current debugging options for this DebugGraphics.
@see #setDebugOptions
"
      end

      operation 10455170 "setDebugOptions"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338434 // JComponent
	  param in name "options" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Static wrapper method for DebugGraphicsInfo.setDebugOptions(). Stores
options on a per component basis.
"
      end

      operation 10455298 "getDebugOptions"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Static wrapper method for DebugGraphicsInfo.getDebugOptions().
"
      end

      operation 10455426 "shouldComponentDebug"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns non-zero if <b>component</b> should display with DebugGraphics,
zero otherwise. Walks the JComponent's parent tree to determine if
any debugging options have been set.
"
      end

      operation 10455554 "debugComponentCount"
	class_operation package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the number of JComponents that have debugging options turned
on.
"
      end

      operation 10455682 "debugLog"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10455810 "debugFlash"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10455938 "debugBuffered"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10456066 "debugGraphics"
	private return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a DebugGraphics for use in buffering window.
"
      end

      operation 10456194 "info"
	class_operation package return_type class_ref 1266178 // DebugGraphicsInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns DebugGraphicsInfo, or creates one if none exists.
"
      end

      classrelation 4069890 // debugGraphicsInfoKey (<unidirectional association>)
	relation 4069890 --->
	  a role_name "debugGraphicsInfoKey" init_value " DebugGraphicsInfo.class" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4069890 // debugGraphicsInfoKey (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end
    end

    class 1266178 "DebugGraphicsInfo"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Class used by DebugGraphics for maintaining information about how
to render graphics calls.

@author Dave Karlton
"
      classrelation 4070274 // flashColor (<unidirectional association>)
	relation 4070274 --->
	  a role_name "flashColor" init_value " Color.red" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4070274 // flashColor (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      attribute 2384514 "flashTime"
	package explicit_type "int"
	init_value " 100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2384642 "flashCount"
	package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4070402 // componentToDebug (<unidirectional association>)
	relation 4070402 --->
	  a role_name "componentToDebug" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<JComponent, Integer> ${name}${value};
"
	    classrelation_ref 4070402 // componentToDebug (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 4070530 // debugFrame (<unidirectional association>)
	relation 4070530 --->
	  a role_name "debugFrame" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4070530 // debugFrame (<unidirectional association>)
	  b parent class_ref 476930 // JFrame
      end

      classrelation 4070658 // stream (<unidirectional association>)
	relation 4070658 --->
	  a role_name "stream" init_value " System.out" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4070658 // stream (<unidirectional association>)
	  b parent class_ref 128258 // PrintStream
      end

      operation 10456578 "setDebugOptions"
	package explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338434 // JComponent
	  param in name "debug" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10456706 "getDebugOptions"
	package explicit_return_type "int"
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10456834 "log"
	package explicit_return_type "void"
	nparams 1
	  param inout name "string" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1266306 "DebugGraphicsFilter"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Color filter for DebugGraphics, used for images only.

@author Dave Karlton
"
      classrelation 4070018 // <generalisation>
	relation 4070018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4070018 // <generalisation>
	  b parent class_ref 379778 // RGBImageFilter
      end

      classrelation 4070146 // color (<unidirectional association>)
	relation 4070146 --->
	  a role_name "color" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4070146 // color (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      operation 10456322 "DebugGraphicsFilter"
	package explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10456450 "filterRGB"
	public explicit_return_type "int"
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "rgb" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1266434 "DebugGraphicsObserver"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " ImageObserver for DebugGraphics, used for images only.

@author Dave Karlton
"
      classrelation 4070786 // <realization>
	relation 4070786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4070786 // <realization>
	  b parent class_ref 339970 // ImageObserver
      end

      attribute 2384770 "lastInfo"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10456962 "allBitsPresent"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10457090 "imageHasProblem"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10457218 "imageUpdate"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "infoflags" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1266562 "DefaultBoundedRangeModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A generic implementation of BoundedRangeModel.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author David Kloba
@author Hans Muller
@see BoundedRangeModel
"
      classrelation 4070914 // <realization>
	relation 4070914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4070914 // <realization>
	  b parent class_ref 429954 // BoundedRangeModel
      end

      classrelation 4071042 // <realization>
	relation 4071042 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4071042 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4071170 // changeEvent (<unidirectional association>)
	relation 4071170 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment "
Only one <code>ChangeEvent</code> is needed per model instance since the
event's only (read-only) state is the source property.  The source
of events generated here is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4071170 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      classrelation 4071298 // listenerList (<unidirectional association>)
	relation 4071298 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment " The listeners waiting for model changes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4071298 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      attribute 2384898 "value"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2385026 "extent"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2385154 "min"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2385282 "max"
	private explicit_type "int"
	init_value " 100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2385410 "isAdjusting"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10457346 "DefaultBoundedRangeModel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes all of the properties with default values.
Those values are:
<ul>
<li><code>value</code> = 0
<li><code>extent</code> = 0
<li><code>minimum</code> = 0
<li><code>maximum</code> = 100
<li><code>adjusting</code> = false
</ul>
"
      end

      operation 10457474 "DefaultBoundedRangeModel"
	public explicit_return_type ""
	nparams 4
	  param in name "value" explicit_type "int"
	  param in name "extent" explicit_type "int"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes value, extent, minimum and maximum. Adjusting is false.
Throws an <code>IllegalArgumentException</code> if the following
constraints aren't satisfied:
<pre>
min &lt;= value &lt;= value+extent &lt;= max
</pre>
"
      end

      operation 10457602 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's current value.
@return the model's current value
@see #setValue
@see BoundedRangeModel#getValue
"
      end

      operation 10457730 "getExtent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's extent.
@return the model's extent
@see #setExtent
@see BoundedRangeModel#getExtent
"
      end

      operation 10457858 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's minimum.
@return the model's minimum
@see #setMinimum
@see BoundedRangeModel#getMinimum
"
      end

      operation 10457986 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model's maximum.
@return  the model's maximum
@see #setMaximum
@see BoundedRangeModel#getMaximum
"
      end

      operation 10458114 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current value of the model. For a slider, that
determines where the knob appears. Ensures that the new
value, <I>n</I> falls within the model's constraints:
<pre>
    minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>

@see BoundedRangeModel#setValue
"
      end

      operation 10458242 "setExtent"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the extent to <I>n</I> after ensuring that <I>n</I>
is greater than or equal to zero and falls within the model's
constraints:
<pre>
    minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
@see BoundedRangeModel#setExtent
"
      end

      operation 10458370 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum to <I>n</I> after ensuring that <I>n</I>
that the other three properties obey the model's constraints:
<pre>
    minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
@see #getMinimum
@see BoundedRangeModel#setMinimum
"
      end

      operation 10458498 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum to <I>n</I> after ensuring that <I>n</I>
that the other three properties obey the model's constraints:
<pre>
    minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
@see BoundedRangeModel#setMaximum
"
      end

      operation 10458626 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>valueIsAdjusting</code> property.

@see #getValueIsAdjusting
@see #setValue
@see BoundedRangeModel#setValueIsAdjusting
"
      end

      operation 10458754 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the value is in the process of changing
as a result of actions being taken by the user.

@return the value of the <code>valueIsAdjusting</code> property
@see #setValue
@see BoundedRangeModel#getValueIsAdjusting
"
      end

      operation 10458882 "setRangeProperties"
	public explicit_return_type "void"
	nparams 5
	  param in name "newValue" explicit_type "int"
	  param in name "newExtent" explicit_type "int"
	  param in name "newMin" explicit_type "int"
	  param in name "newMax" explicit_type "int"
	  param inout name "adjusting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all of the <code>BoundedRangeModel</code> properties after forcing
the arguments to obey the usual constraints:
<pre>
    minimum &lt;= value &lt;= value+extent &lt;= maximum
</pre>
<p>
At most, one <code>ChangeEvent</code> is generated.

@see BoundedRangeModel#setRangeProperties
@see #setValue
@see #setExtent
@see #setMinimum
@see #setMaximum
@see #setValueIsAdjusting
"
      end

      operation 10459010 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>ChangeListener</code>.  The change listeners are run each
time any one of the Bounded Range model properties changes.

@param l the ChangeListener to add
@see #removeChangeListener
@see BoundedRangeModel#addChangeListener
"
      end

      operation 10459138 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code>.

@param l the <code>ChangeListener</code> to remove
@see #addChangeListener
@see BoundedRangeModel#removeChangeListener
"
      end

      operation 10459266 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the change listeners
registered on this <code>DefaultBoundedRangeModel</code>.

@return all of this model's <code>ChangeListener</code>s
        or an empty
        array if no change listeners are currently registered

@see #addChangeListener
@see #removeChangeListener

@since 1.4
"
      end

      operation 10459394 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs each <code>ChangeListener</code>'s <code>stateChanged</code> method.

@see #setRangeProperties
@see EventListenerList
"
      end

      operation 10459522 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays all of the
<code>BoundedRangeModel</code> properties.
"
      end

      operation 10459650 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered as
<code><em>Foo</em>Listener</code>s
upon this model.
<code><em>Foo</em>Listener</code>s
are registered using the <code>add<em>Foo</em>Listener</code> method.
<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as <code><em>Foo</em>Listener.class</code>.
For example, you can query a <code>DefaultBoundedRangeModel</code>
instance <code>m</code>
for its change listeners
with the following code:

<pre>ChangeListener[] cls = (ChangeListener[])(m.getListeners(ChangeListener.class));</pre>

If no such listeners exist,
this method returns an empty array.

@param listenerType  the type of listeners requested;
         this parameter should specify an interface
         that descends from <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s
         on this model,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code> doesn't
         specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getChangeListeners

@since 1.3
"
      end
    end

    class 1266690 "DefaultButtonModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The default implementation of a <code>Button</code> component's data model.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing. As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Jeff Dinkins
"
      classrelation 4071426 // <realization>
	relation 4071426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4071426 // <realization>
	  b parent class_ref 397570 // ButtonModel
      end

      classrelation 4071554 // <realization>
	relation 4071554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4071554 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2385538 "stateMask"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The bitmask used to store the state of the button. 
"
      end

      classrelation 4071682 // actionCommand (<unidirectional association>)
	relation 4071682 --->
	  a role_name "actionCommand" init_value " null" protected
	    comment " The action command string fired by the button. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4071682 // actionCommand (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4071810 // group (<unidirectional association>)
	relation 4071810 --->
	  a role_name "group" init_value " null" protected
	    comment " The button group that the button belongs to. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4071810 // group (<unidirectional association>)
	  b parent class_ref 1265666 // ButtonGroup
      end

      attribute 2385666 "mnemonic"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The button's mnemonic. 
"
      end

      classrelation 4071938 // changeEvent (<unidirectional association>)
	relation 4071938 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment "
Only one <code>ChangeEvent</code> is needed per button model
instance since the event's only state is the source property.
The source of events generated is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4071938 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      classrelation 4072066 // listenerList (<unidirectional association>)
	relation 4072066 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment " Stores the listeners on this model. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4072066 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      attribute 2385794 "menuItem"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " controls the usage of the MenuItem.disabledAreNavigable UIDefaults
 property in the setArmed() method
"
      end

      operation 10459778 "DefaultButtonModel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DefaultButtonModel</code>.

"
      end

      attribute 2385922 "ARMED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the \"armed\" bit in the bitmask, which
indicates partial commitment towards choosing/triggering
the button.

"
      end

      attribute 2386050 "SELECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the \"selected\" bit in the bitmask, which
indicates that the button has been selected. Only needed for
certain types of buttons - such as radio button or check box.

"
      end

      attribute 2386178 "PRESSED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the \"pressed\" bit in the bitmask, which
indicates that the button is pressed.

"
      end

      attribute 2386306 "ENABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the \"enabled\" bit in the bitmask, which
indicates that the button can be selected by
an input device (such as a mouse pointer).

"
      end

      attribute 2386434 "ROLLOVER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identifies the \"rollover\" bit in the bitmask, which
indicates that the mouse is over the button.

"
      end

      operation 10459906 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "actionCommand" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460034 "getActionCommand"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460162 "isArmed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460290 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460418 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460546 "isPressed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460674 "isRollover"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460802 "setArmed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10460930 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461058 "setSelected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461186 "setPressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461314 "setRollover"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461442 "setMnemonic"
	public explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461570 "getMnemonic"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461698 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461826 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10461954 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the change listeners
registered on this <code>DefaultButtonModel</code>.

@return all of this model's <code>ChangeListener</code>s
        or an empty
        array if no change listeners are currently registered

@see #addChangeListener
@see #removeChangeListener

@since 1.4
"
      end

      operation 10462082 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.

@see EventListenerList
"
      end

      operation 10462210 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10462338 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10462466 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners
registered on this <code>DefaultButtonModel</code>.

@return all of this model's <code>ActionListener</code>s
        or an empty
        array if no action listeners are currently registered

@see #addActionListener
@see #removeActionListener

@since 1.4
"
      end

      operation 10462594 "fireActionPerformed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param e the <code>ActionEvent</code> to deliver to listeners
@see EventListenerList
"
      end

      operation 10462722 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10462850 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10462978 "getItemListeners"
	public return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the item listeners
registered on this <code>DefaultButtonModel</code>.

@return all of this model's <code>ItemListener</code>s
        or an empty
        array if no item listeners are currently registered

@see #addItemListener
@see #removeItemListener

@since 1.4
"
      end

      operation 10463106 "fireItemStateChanged"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.

@param e the <code>ItemEvent</code> to deliver to listeners
@see EventListenerList
"
      end

      operation 10463234 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered as
<code><em>Foo</em>Listener</code>s
upon this model.
<code><em>Foo</em>Listener</code>s
are registered using the <code>add<em>Foo</em>Listener</code> method.
<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as <code><em>Foo</em>Listener.class</code>.
For example, you can query a <code>DefaultButtonModel</code>
instance <code>m</code>
for its action listeners
with the following code:

<pre>ActionListener[] als = (ActionListener[])(m.getListeners(ActionListener.class));</pre>

If no such listeners exist,
this method returns an empty array.

@param listenerType  the type of listeners requested;
         this parameter should specify an interface
         that descends from <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s
         on this model,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code> doesn't
         specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getActionListeners
@see #getChangeListeners
@see #getItemListeners

@since 1.3
"
      end

      operation 10463362 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Overridden to return <code>null</code>. "
      end

      operation 10463490 "setGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "group" type class_ref 1265666 // ButtonGroup
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10463618 "getGroup"
	public return_type class_ref 1265666 // ButtonGroup
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the group that the button belongs to.
Normally used with radio buttons, which are mutually
exclusive within their group.

@return the <code>ButtonGroup</code> that the button belongs to

@since 1.3
"
      end

      operation 10463746 "isMenuItem"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10463874 "setMenuItem"
	package explicit_return_type "void"
	nparams 1
	  param inout name "menuItem" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1266818 "DefaultCellEditor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The default editor for table and tree cells.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Alan Chung
@author Philip Milne
"
      classrelation 4072194 // <generalisation>
	relation 4072194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4072194 // <generalisation>
	  b parent class_ref 1262722 // AbstractCellEditor
      end

      classrelation 4072450 // <realization>
	relation 4072450 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4072450 // <realization>
	  b parent class_ref 1266946 // TableCellEditor
      end

      classrelation 4072706 // <realization>
	relation 4072706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4072706 // <realization>
	  b parent class_ref 449026 // TreeCellEditor
      end

      classrelation 4072834 // editorComponent (<unidirectional association>)
	relation 4072834 --->
	  a role_name "editorComponent" protected
	    comment "  Instance Variables

 The Swing component being edited. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4072834 // editorComponent (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      class 1267074 "EditorDelegate"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4073090 // <realization>
	  relation 4073090 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4073090 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	classrelation 4073218 // <realization>
	  relation 4073218 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4073218 // <realization>
	    b parent class_ref 389506 // ItemListener
	end

	classrelation 4073346 // <realization>
	  relation 4073346 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4073346 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 4073474 // value (<unidirectional association>)
	  relation 4073474 --->
	    a role_name "value" protected
	      comment "  The value of this cell. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4073474 // value (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 10465922 "getCellEditorValue"
	  public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of this cell.
@return the value of this cell
"
	end

	operation 10466050 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the value of this cell.
@param value the new value of this cell
"
	end

	operation 10466178 "isCellEditable"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "anEvent" type class_ref 525698 // EventObject
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if <code>anEvent</code> is <b>not</b> a
<code>MouseEvent</code>.  Otherwise, it returns true
if the necessary number of clicks have occurred, and
returns false otherwise.

@param   anEvent         the event
@return  true  if cell is ready for editing, false otherwise
@see #setClickCountToStart
@see #shouldSelectCell
"
	end

	operation 10466306 "shouldSelectCell"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "anEvent" type class_ref 525698 // EventObject
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true to indicate that the editing cell may
be selected.

@param   anEvent         the event
@return  true
@see #isCellEditable
"
	end

	operation 10466434 "startCellEditing"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "anEvent" type class_ref 525698 // EventObject
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true to indicate that editing has begun.

@param anEvent          the event
"
	end

	operation 10466562 "stopCellEditing"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Stops editing and
returns true to indicate that editing has stopped.
This method calls <code>fireEditingStopped</code>.

@return  true
"
	end

	operation 10466690 "cancelCellEditing"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cancels editing.  This method calls <code>fireEditingCanceled</code>.
"
	end

	operation 10466818 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "When an action is performed, editing is ended.
@param e the action event
@see #stopCellEditing
"
	end

	operation 10466946 "itemStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 390658 // ItemEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "When an item's state changes, editing is ended.
@param e the action event
@see #stopCellEditing
"
	end
      end

      classrelation 4072962 // delegate (<unidirectional association>)
	relation 4072962 --->
	  a role_name "delegate" protected
	    comment "
The delegate class which handles all methods sent from the
<code>CellEditor</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4072962 // delegate (<unidirectional association>)
	  b parent class_ref 1267074 // EditorDelegate
      end

      attribute 2386562 "clickCountToStart"
	protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An integer specifying the number of clicks needed to start editing.
Even if <code>clickCountToStart</code> is defined as zero, it
will not initiate until a click occurs.

"
      end

      operation 10464258 "DefaultCellEditor"
	public explicit_return_type ""
	nparams 1
	  param in name "textField" type class_ref 360066 // JTextField
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"component\"})
"
	
	
	
	comment "  Constructors


Constructs a <code>DefaultCellEditor</code> that uses a text field.

@param textField  a <code>JTextField</code> object
"
      end

      operation 10464386 "DefaultCellEditor"
	public explicit_return_type ""
	nparams 1
	  param in name "checkBox" type class_ref 1267202 // JCheckBox
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DefaultCellEditor</code> object that uses a check box.

@param checkBox  a <code>JCheckBox</code> object
"
      end

      operation 10464514 "DefaultCellEditor"
	public explicit_return_type ""
	nparams 1
	  param in name "comboBox" type class_ref 364162 // JComboBox
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DefaultCellEditor</code> object that uses a
combo box.

@param comboBox  a <code>JComboBox</code> object
"
      end

      operation 10464642 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reference to the editor component.

@return the editor <code>Component</code>
"
      end

      operation 10464770 "setClickCountToStart"
	public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Modifying


Specifies the number of clicks needed to start editing.

@param count  an int specifying the number of clicks needed to start editing
@see #getClickCountToStart
"
      end

      operation 10464898 "getClickCountToStart"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of clicks needed to start editing.
@return the number of clicks needed to start editing
"
      end

      operation 10465026 "getCellEditorValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Override the implementations of the superclass, forwarding all methods
  from the CellEditor interface to our delegate.


Forwards the message from the <code>CellEditor</code> to
the <code>delegate</code>.
@see EditorDelegate#getCellEditorValue
"
      end

      operation 10465154 "isCellEditable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 525698 // EventObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the message from the <code>CellEditor</code> to
the <code>delegate</code>.
@see EditorDelegate#isCellEditable(EventObject)
"
      end

      operation 10465282 "shouldSelectCell"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 525698 // EventObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the message from the <code>CellEditor</code> to
the <code>delegate</code>.
@see EditorDelegate#shouldSelectCell(EventObject)
"
      end

      operation 10465410 "stopCellEditing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the message from the <code>CellEditor</code> to
the <code>delegate</code>.
@see EditorDelegate#stopCellEditing
"
      end

      operation 10465538 "cancelCellEditing"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the message from the <code>CellEditor</code> to
the <code>delegate</code>.
@see EditorDelegate#cancelCellEditing
"
      end

      operation 10465666 "getTreeCellEditorComponent"
	public return_type class_ref 338818 // Component
	nparams 6
	  param inout name "tree" type class_ref 448130 // JTree
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "isSelected" explicit_type "boolean"
	  param inout name "expanded" explicit_type "boolean"
	  param inout name "leaf" explicit_type "boolean"
	  param in name "row" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Implementing the TreeCellEditor Interface

 Implements the <code>TreeCellEditor</code> interface. "
      end

      operation 10465794 "getTableCellEditorComponent"
	public return_type class_ref 338818 // Component
	nparams 5
	  param inout name "table" type class_ref 475010 // JTable
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "isSelected" explicit_type "boolean"
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Implementing the CellEditor Interface

 Implements the <code>TableCellEditor</code> interface. "
      end
    end

    class 1267202 "JCheckBox"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a check box -- an item that can be selected or
deselected, and which displays its state to the user.
By convention, any number of check boxes in a group can be selected.
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/button.html\">How to Use Buttons, Check Boxes, and Radio Buttons</a>
in <em>The Java Tutorial</em>
for examples and information on using check boxes.
<p>
Buttons can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a button has many benefits beyond directly
configuring a button.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JRadioButton

@beaninfo
  attribute: isContainer false
description: A component which can be selected or deselected.

@author Jeff Dinkins
"
      classrelation 4090882 // <generalisation>
	relation 4090882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4090882 // <generalisation>
	  b parent class_ref 1274626 // JToggleButton
      end

      classrelation 4091010 // <realization>
	relation 4091010 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4091010 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4091138 // BORDER_PAINTED_FLAT_CHANGED_PROPERTY (<unidirectional association>)
	relation 4091138 --->
	  a role_name "BORDER_PAINTED_FLAT_CHANGED_PROPERTY" init_value " \"borderPaintedFlat\"" class_relation const_relation public
	    comment " Identifies a change to the flat property. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4091138 // BORDER_PAINTED_FLAT_CHANGED_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2400258 "flat"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4091266 // uiClassID (<unidirectional association>)
	relation 4091266 --->
	  a role_name "uiClassID" init_value " \"CheckBoxUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4091266 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10549250 "JCheckBox"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box button with no text, no icon.
"
      end

      operation 10549378 "JCheckBox"
	public explicit_return_type ""
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box with an icon.

@param icon  the Icon image to display
"
      end

      operation 10549506 "JCheckBox"
	public explicit_return_type ""
	nparams 2
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box with an icon and specifies whether
or not it is initially selected.

@param icon  the Icon image to display
@param selected a boolean value indicating the initial selection
       state. If <code>true</code> the check box is selected
"
      end

      operation 10549634 "JCheckBox"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box with text.

@param text the text of the check box.
"
      end

      operation 10549762 "JCheckBox"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box where properties are taken from the
Action supplied.

@since 1.3
"
      end

      operation 10549890 "JCheckBox"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box with text and specifies whether
or not it is initially selected.

@param text the text of the check box.
@param selected a boolean value indicating the initial selection
       state. If <code>true</code> the check box is selected
"
      end

      operation 10550018 "JCheckBox"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box with
the specified text and icon.

@param text the text of the check box.
@param icon  the Icon image to display
"
      end

      operation 10550146 "JCheckBox"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box with text and icon,
and specifies whether or not it is initially selected.

@param text the text of the check box.
@param icon  the Icon image to display
@param selected a boolean value indicating the initial selection
       state. If <code>true</code> the check box is selected
"
      end

      operation 10550274 "setBorderPaintedFlat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>borderPaintedFlat</code> property,
which gives a hint to the look and feel as to the
appearance of the check box border.
This is usually set to <code>true</code> when a
<code>JCheckBox</code> instance is used as a
renderer in a component such as a <code>JTable</code> or
<code>JTree</code>.  The default value for the
<code>borderPaintedFlat</code> property is <code>false</code>.
This method fires a property changed event.
Some look and feels might not implement flat borders;
they will ignore this property.

@param b <code>true</code> requests that the border be painted flat;
         <code>false</code> requests normal borders
@see #isBorderPaintedFlat
@beaninfo
       bound: true
   attribute: visualUpdate true
 description: Whether the border is painted flat.
@since 1.3
"
      end

      operation 10550402 "isBorderPaintedFlat"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <code>borderPaintedFlat</code> property.

@return the value of the <code>borderPaintedFlat</code> property
@see #setBorderPaintedFlat
@since 1.3
"
      end

      operation 10550530 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10550658 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the L&amp;F class
that renders this component.

@return the string \"CheckBoxUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
       expert: true
  description: A string that specifies the name of the L&amp;F class
"
      end

      operation 10550786 "setIconFromAction"
	package explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The icon for checkboxs comes from the look and feel,
not the Action; this is overriden to do nothing.
"
      end

      operation 10550914 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject and writeObject in JComponent for more
information about serialization in Swing.
"
      end

      operation 10551042 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See JComponent.readObject() for information about serialization
in Swing.
"
      end

      operation 10551170 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JCheckBox. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.
specific new aspects of the JFC components.

@return  a string representation of this JCheckBox.
"
      end

      operation 10551298 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JCheckBox.
For JCheckBoxes, the AccessibleContext takes the form of an
AccessibleJCheckBox.
A new AccessibleJCheckBox instance is created if necessary.

@return an AccessibleJCheckBox that serves as the
        AccessibleContext of this JCheckBox
@beaninfo
      expert: true
 description: The AccessibleContext associated with this CheckBox.
"
      end

      class 1275010 "AccessibleJCheckBox"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4091394 // <generalisation>
	  relation 4091394 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4091394 // <generalisation>
	    b parent class_ref 1274882 // AccessibleJToggleButton
	end

	operation 10551426 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole
"
	end
      end
    end

    class 1267330 "DefaultComboBoxModel"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 366466 // AbstractListModel
        rank 0 explicit_value ""
      actual class class_ref 1267458 // MutableComboBoxModel
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The default model for combo boxes.

@param <E> the type of the elements of this model

@author Arnaud Weber
@author Tom Santos
"
      classrelation 4073602 // <realization>
	relation 4073602 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4073602 // <realization>
	  b parent class_ref 366466 // AbstractListModel
      end

      classrelation 4073858 // <realization>
	relation 4073858 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4073858 // <realization>
	  b parent class_ref 1267458 // MutableComboBoxModel
      end

      classrelation 4073986 // <realization>
	relation 4073986 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4073986 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4074114 // objects (<unidirectional association>)
	relation 4074114 --->
	  a role_name "objects" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 4074114 // objects (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 4074242 // selectedObject (<unidirectional association>)
	relation 4074242 --->
	  a role_name "selectedObject" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4074242 // selectedObject (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10467586 "DefaultComboBoxModel"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty DefaultComboBoxModel object.
"
      end

      operation 10467714 "DefaultComboBoxModel"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "items" explicit_type "E"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DefaultComboBoxModel object initialized with
an array of objects.

@param items  an array of Object objects
"
      end

      operation 10467842 "DefaultComboBoxModel"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "v" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<E> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DefaultComboBoxModel object initialized with
a vector.

@param v  a Vector object ...
"
      end

      operation 10467970 "setSelectedItem"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.ComboBoxModel

Set the value of the selected item. The selected item may be null.

@param anObject The combo box value or null for no selection.
"
      end

      operation 10468098 "getSelectedItem"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.ComboBoxModel"
      end

      operation 10468226 "getSize"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.ListModel"
      end

      operation 10468354 "getElementAt"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.ListModel"
      end

      operation 10468482 "getIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index-position of the specified object in the list.

@param anObject
@return an int representing the index position, where 0 is
        the first position
"
      end

      operation 10468610 "addElement"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anObject" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.MutableComboBoxModel"
      end

      operation 10468738 "insertElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "anObject" explicit_type "E"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.MutableComboBoxModel"
      end

      operation 10468866 "removeElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.MutableComboBoxModel"
      end

      operation 10468994 "removeElement"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.MutableComboBoxModel"
      end

      operation 10469122 "removeAllElements"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Empties the list.
"
      end
    end

    class 1267458 "MutableComboBoxModel"
      visibility public stereotype "interface"
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 368130 // ComboBoxModel
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A mutable version of <code>ComboBoxModel</code>.

@param <E> the type of the elements of this model

@author Tom Santos
"
      classrelation 4073730 // <realization>
	relation 4073730 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4073730 // <realization>
	  b parent class_ref 368130 // ComboBoxModel
      end

      operation 10467074 "addElement"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "item" explicit_type "E"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an item at the end of the model. The implementation of this method
should notify all registered <code>ListDataListener</code>s that the
item has been added.

@param item the item to be added
"
      end

      operation 10467202 "removeElement"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an item from the model. The implementation of this method should
should notify all registered <code>ListDataListener</code>s that the
item has been removed.

@param obj the <code>Object</code> to be removed
"
      end

      operation 10467330 "insertElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "item" explicit_type "E"
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an item at a specific index.  The implementation of this method
should notify all registered <code>ListDataListener</code>s that the
item has been added.

@param item  the item to be added
@param index  location to add the object
"
      end

      operation 10467458 "removeElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an item at a specific index. The implementation of this method
should notify all registered <code>ListDataListener</code>s that the
item has been removed.

@param index  location of the item to be removed
"
      end
    end

    class 1267586 "DefaultFocusManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class has been obsoleted by the 1.4 focus APIs. While client code may
still use this class, developers are strongly encouraged to use
<code>java.awt.KeyboardFocusManager</code> and
<code>java.awt.DefaultKeyboardFocusManager</code> instead.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@author Arnaud Weber
@author David Mendenhall
"
      classrelation 4074626 // <generalisation>
	relation 4074626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4074626 // <generalisation>
	  b parent class_ref 1267714 // FocusManager
      end

      classrelation 4074754 // gluePolicy (<unidirectional association>)
	relation 4074754 --->
	  a role_name "gluePolicy" init_value "
        new LegacyGlueFocusTraversalPolicy(this)" const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4074754 // gluePolicy (<unidirectional association>)
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      classrelation 4074882 // layoutPolicy (<unidirectional association>)
	relation 4074882 --->
	  a role_name "layoutPolicy" init_value "
        new LegacyLayoutFocusTraversalPolicy(this)" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4074882 // layoutPolicy (<unidirectional association>)
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      classrelation 4075010 // comparator (<unidirectional association>)
	relation 4075010 --->
	  a role_name "comparator" init_value "
        new LayoutComparator()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4075010 // comparator (<unidirectional association>)
	  b parent class_ref 1267842 // LayoutComparator
      end

      operation 10469762 "DefaultFocusManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10469890 "getComponentAfter"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10470018 "getComponentBefore"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10470146 "getFirstComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10470274 "getLastComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10470402 "compareTabOrder"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 338818 // Component
	  param inout name "b" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1267714 "FocusManager"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class has been obsoleted by the 1.4 focus APIs. While client code may
still use this class, developers are strongly encouraged to use
<code>java.awt.KeyboardFocusManager</code> and
<code>java.awt.DefaultKeyboardFocusManager</code> instead.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@see <a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>

@author Arnaud Weber
@author David Mendenhall
"
      classrelation 4074370 // <generalisation>
	relation 4074370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4074370 // <generalisation>
	  b parent class_ref 861442 // DefaultKeyboardFocusManager
      end

      classrelation 4074498 // FOCUS_MANAGER_CLASS_PROPERTY (<unidirectional association>)
	relation 4074498 --->
	  a role_name "FOCUS_MANAGER_CLASS_PROPERTY" init_value "
        \"FocusManagerClassName\"" class_relation const_relation public
	    comment "
This field is obsolete, and its use is discouraged since its
specification is incompatible with the 1.4 focus APIs.
The current FocusManager is no longer a property of the UI.
Client code must query for the current FocusManager using
<code>KeyboardFocusManager.getCurrentKeyboardFocusManager()</code>.
See the Focus Specification for more information.

@see java.awt.KeyboardFocusManager#getCurrentKeyboardFocusManager
@see <a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4074498 // FOCUS_MANAGER_CLASS_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2386690 "enabled"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10469250 "getCurrentManager"
	class_operation public return_type class_ref 1267714 // FocusManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <code>KeyboardFocusManager</code> instance
for the calling thread's context.

@return this thread's context's <code>KeyboardFocusManager</code>
@see #setCurrentManager
"
      end

      operation 10469378 "setCurrentManager"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "aFocusManager" type class_ref 1267714 // FocusManager
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current <code>KeyboardFocusManager</code> instance
for the calling thread's context. If <code>null</code> is
specified, then the current <code>KeyboardFocusManager</code>
is replaced with a new instance of
<code>DefaultKeyboardFocusManager</code>.
<p>
If a <code>SecurityManager</code> is installed,
the calling thread must be granted the <code>AWTPermission</code>
\"replaceKeyboardFocusManager\" in order to replace the
the current <code>KeyboardFocusManager</code>.
If this permission is not granted,
this method will throw a <code>SecurityException</code>,
and the current <code>KeyboardFocusManager</code> will be unchanged.

@param aFocusManager the new <code>KeyboardFocusManager</code>
    for this thread's context
@see #getCurrentManager
@see java.awt.DefaultKeyboardFocusManager
@throws SecurityException if the calling thread does not have permission
        to replace the current <code>KeyboardFocusManager</code>
"
      end

      operation 10469506 "disableSwingFocusManager"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Changes the current <code>KeyboardFocusManager</code>'s default
<code>FocusTraversalPolicy</code> to
<code>DefaultFocusTraversalPolicy</code>.

@see java.awt.DefaultFocusTraversalPolicy
@see java.awt.KeyboardFocusManager#setDefaultFocusTraversalPolicy
@deprecated as of 1.4, replaced by
<code>KeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy)</code>
"
      end

      operation 10469634 "isFocusManagerEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns whether the application has invoked
<code>disableSwingFocusManager()</code>.

@see #disableSwingFocusManager
@deprecated As of 1.4, replaced by
  <code>KeyboardFocusManager.getDefaultFocusTraversalPolicy()</code>
"
      end
    end

    class 1267842 "LayoutComparator"
      visibility package 
      nactuals 1
      actual class class_ref 184962 // Comparator
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Comparator which attempts to sort Components based on their size and
position. Code adapted from original javax.swing.DefaultFocusManager
implementation.

@author David Mendenhall
"
      classrelation 4173058 // <realization>
	relation 4173058 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4173058 // <realization>
	  b parent class_ref 184962 // Comparator
      end

      classrelation 4173186 // <realization>
	relation 4173186 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4173186 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2432770 "ROW_TOLERANCE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2432898 "horizontal"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2433026 "leftToRight"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10780546 "setComponentOrientation"
	package explicit_return_type "void"
	nparams 1
	  param inout name "orientation" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10780674 "compare"
	public explicit_return_type "int"
	nparams 2
	  param inout name "a" type class_ref 338818 // Component
	  param inout name "b" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1267970 "LegacyLayoutFocusTraversalPolicy"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 4076674 // <generalisation>
	relation 4076674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4076674 // <generalisation>
	  b parent class_ref 1268098 // LayoutFocusTraversalPolicy
      end

      operation 10474498 "LegacyLayoutFocusTraversalPolicy"
	package explicit_return_type ""
	nparams 1
	  param inout name "defaultFocusManager" type class_ref 1267586 // DefaultFocusManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1268098 "LayoutFocusTraversalPolicy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A SortingFocusTraversalPolicy which sorts Components based on their size,
position, and orientation. Based on their size and position, Components are
roughly categorized into rows and columns. For a Container with horizontal
orientation, columns run left-to-right or right-to-left, and rows run top-
to-bottom. For a Container with vertical orientation, columns run top-to-
bottom and rows run left-to-right or right-to-left. See
<code>ComponentOrientation</code> for more information. All columns in a
row are fully traversed before proceeding to the next row.

@author David Mendenhall

@see java.awt.ComponentOrientation
@since 1.4
"
      classrelation 4076162 // <generalisation>
	relation 4076162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4076162 // <generalisation>
	  b parent class_ref 1268226 // SortingFocusTraversalPolicy
      end

      classrelation 4076290 // <realization>
	relation 4076290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4076290 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4076418 // fitnessTestPolicy (<unidirectional association>)
	relation 4076418 --->
	  a role_name "fitnessTestPolicy" init_value "
        new SwingDefaultFocusTraversalPolicy()" class_relation const_relation private
	    comment " Delegate most of our fitness test to Default so that we only have to
 code the algorithm once.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4076418 // fitnessTestPolicy (<unidirectional association>)
	  b parent class_ref 1268610 // SwingDefaultFocusTraversalPolicy
      end

      operation 10473218 "LayoutFocusTraversalPolicy"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a LayoutFocusTraversalPolicy.
"
      end

      operation 10473346 "LayoutFocusTraversalPolicy"
	package explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super Component> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a LayoutFocusTraversalPolicy with the passed in
<code>Comparator</code>.
"
      end

      operation 10473474 "getComponentAfter"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus after aComponent.
aContainer must be a focus cycle root of aComponent.
<p>
By default, LayoutFocusTraversalPolicy implicitly transfers focus down-
cycle. That is, during normal focus traversal, the Component
traversed after a focus cycle root will be the focus-cycle-root's
default Component to focus. This behavior can be disabled using the
<code>setImplicitDownCycleTraversal</code> method.
<p>
If aContainer is <a href=\"../../java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus
traversal policy provider</a>, the focus is always transferred down-cycle.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus after aComponent, or
        null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or a focus traversal policy provider, or if either aContainer or
        aComponent is null
"
      end

      operation 10473602 "getComponentBefore"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus before aComponent.
aContainer must be a focus cycle root of aComponent.
<p>
By default, LayoutFocusTraversalPolicy implicitly transfers focus down-
cycle. That is, during normal focus traversal, the Component
traversed after a focus cycle root will be the focus-cycle-root's
default Component to focus. This behavior can be disabled using the
<code>setImplicitDownCycleTraversal</code> method.
<p>
If aContainer is <a href=\"../../java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus
traversal policy provider</a>, the focus is always transferred down-cycle.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus before aComponent,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or a focus traversal policy provider, or if either aContainer or
        aComponent is null
"
      end

      operation 10473730 "getFirstComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
forward direction.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider whose
       first Component is to be returned
@return the first Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 10473858 "getLastComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
reverse direction.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider whose
       last Component is to be returned
@return the last Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 10473986 "accept"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified <code>Component</code>
is an acceptable choice as the new focus owner.
This method performs the following sequence of operations:
<ol>
<li>Checks whether <code>aComponent</code> is visible, displayable,
    enabled, and focusable.  If any of these properties is
    <code>false</code>, this method returns <code>false</code>.
<li>If <code>aComponent</code> is an instance of <code>JTable</code>,
    returns <code>true</code>.
<li>If <code>aComponent</code> is an instance of <code>JComboBox</code>,
    then returns the value of
    <code>aComponent.getUI().isFocusTraversable(aComponent)</code>.
<li>If <code>aComponent</code> is a <code>JComponent</code>
    with a <code>JComponent.WHEN_FOCUSED</code>
    <code>InputMap</code> that is neither <code>null</code>
    nor empty, returns <code>true</code>.
<li>Returns the value of
    <code>DefaultFocusTraversalPolicy.accept(aComponent)</code>.
</ol>

@param aComponent the <code>Component</code> whose fitness
                  as a focus owner is to be tested
@see java.awt.Component#isVisible
@see java.awt.Component#isDisplayable
@see java.awt.Component#isEnabled
@see java.awt.Component#isFocusable
@see javax.swing.plaf.ComboBoxUI#isFocusTraversable
@see javax.swing.JComponent#getInputMap
@see java.awt.DefaultFocusTraversalPolicy#accept
@return <code>true</code> if <code>aComponent</code> is a valid choice
        for a focus owner;
        otherwise <code>false</code>
"
      end

      operation 10474114 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10474242 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1268226 "SortingFocusTraversalPolicy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A FocusTraversalPolicy that determines traversal order by sorting the
Components of a focus traversal cycle based on a given Comparator. Portions
of the Component hierarchy that are not visible and displayable will not be
included.
<p>
By default, SortingFocusTraversalPolicy implicitly transfers focus down-
cycle. That is, during normal focus traversal, the Component
traversed after a focus cycle root will be the focus-cycle-root's default
Component to focus. This behavior can be disabled using the
<code>setImplicitDownCycleTraversal</code> method.
<p>
By default, methods of this class with return a Component only if it is
visible, displayable, enabled, and focusable. Subclasses can modify this
behavior by overriding the <code>accept</code> method.
<p>
This policy takes into account <a
href=\"../../java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus traversal
policy providers</a>.  When searching for first/last/next/previous Component,
if a focus traversal policy provider is encountered, its focus traversal
policy is used to perform the search operation.

@author David Mendenhall

@see java.util.Comparator
@since 1.4
"
      classrelation 4075266 // <generalisation>
	relation 4075266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4075266 // <generalisation>
	  b parent class_ref 1268354 // InternalFrameFocusTraversalPolicy
      end

      classrelation 4075394 // comparator (<unidirectional association>)
	relation 4075394 --->
	  a role_name "comparator" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super Component> ${name}${value};
"
	    classrelation_ref 4075394 // comparator (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      attribute 2386818 "implicitDownCycleTraversal"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2386946 "log"
	private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"javax.swing.SortingFocusTraversalPolicy\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4075522 // cachedRoot (<unidirectional association>)
	relation 4075522 --->
	  a role_name "cachedRoot" private
	    comment "
Used by getComponentAfter and getComponentBefore for efficiency. In
order to maintain compliance with the specification of
FocusTraversalPolicy, if traversal wraps, we should invoke
getFirstComponent or getLastComponent. These methods may be overriden in
subclasses to behave in a non-generic way. However, in the generic case,
these methods will simply return the first or last Components of the
sorted list, respectively. Since getComponentAfter and
getComponentBefore have already built the sorted list before determining
that they need to invoke getFirstComponent or getLastComponent, the
sorted list should be reused if possible.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4075522 // cachedRoot (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 4075650 // cachedCycle (<unidirectional association>)
	relation 4075650 --->
	  a role_name "cachedCycle" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 4075650 // cachedCycle (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 4075778 // fitnessTestPolicy (<unidirectional association>)
	relation 4075778 --->
	  a role_name "fitnessTestPolicy" init_value " new SwingContainerOrderFocusTraversalPolicy()" class_relation const_relation private
	    comment " Delegate our fitness test to ContainerOrder so that we only have to
 code the algorithm once.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4075778 // fitnessTestPolicy (<unidirectional association>)
	  b parent class_ref 1268482 // SwingContainerOrderFocusTraversalPolicy
      end

      attribute 2387074 "FORWARD_TRAVERSAL"
	const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2387202 "BACKWARD_TRAVERSAL"
	const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2387330 "legacySortingFTPEnabled"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "When true (by default), the legacy merge-sort algo is used to sort an FTP cycle.
When false, the default (tim-sort) algo is used, which may lead to an exception.
See: JDK-8048887

"
      end

      classrelation 4075906 // legacyMergeSortMethod (<unidirectional association>)
	relation 4075906 --->
	  a role_name "legacyMergeSortMethod" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4075906 // legacyMergeSortMethod (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      extra_member 184962 "initialization"
	
	cpp "" ""
	java "  static {
        legacySortingFTPEnabled = \"true\".equals(AccessController.doPrivileged(
            new GetPropertyAction(\"swing.legacySortingFTPEnabled\", \"true\")));
        legacyMergeSortMethod = legacySortingFTPEnabled ?
            AccessController.doPrivileged(new PrivilegedAction<Method>() {
                public Method run() {
                    try {
                        Class c = Class.forName(\"java.util.Arrays\");
                        Method m = c.getDeclaredMethod(\"legacyMergeSort\", new Class[]{Object[].class, Comparator.class});
                        m.setAccessible(true);
                        return m;
                    } catch (ClassNotFoundException | NoSuchMethodException e) {
                        // using default sorting algo
                        return null;
                    }
                }
            }) :
            null;
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10470658 "SortingFocusTraversalPolicy"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SortingFocusTraversalPolicy without a Comparator.
Subclasses must set the Comparator using <code>setComparator</code>
before installing this FocusTraversalPolicy on a focus cycle root or
KeyboardFocusManager.
"
      end

      operation 10470786 "SortingFocusTraversalPolicy"
	public explicit_return_type ""
	nparams 1
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super Component> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SortingFocusTraversalPolicy with the specified Comparator.
"
      end

      operation 10470914 "getFocusTraversalCycle"
	private return_type class_ref 175362 // List
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Component> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10471042 "getComponentIndex"
	private explicit_return_type "int"
	nparams 2
	  param inout name "cycle" type class_ref 175362 // List
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Component> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10471170 "enumerateAndSortCycle"
	private explicit_return_type "void"
	nparams 2
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	  param inout name "cycle" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Component> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10471298 "legacySort"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "l" type class_ref 175362 // List
	  param inout name "c" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Component> ${p0}, ${t1}<? super Component> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10471426 "enumerateCycle"
	private explicit_return_type "void"
	nparams 2
	  param inout name "container" type class_ref 338690 // Container
	  param inout name "cycle" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Component> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10471554 "getTopmostProvider"
	package return_type class_ref 338690 // Container
	nparams 2
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10471682 "getComponentDownCycle"
	private return_type class_ref 338818 // Component
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "traversalDirection" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if a new focus cycle takes place and returns a Component to traverse focus to.
@param comp a possible focus cycle root or policy provider
@param traversalDirection the direction of the traversal
@return a Component to traverse focus to if {@code comp} is a root or provider
        and implicit down-cycle is set, otherwise {@code null}
"
      end

      operation 10471810 "getComponentAfter"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus after aComponent.
aContainer must be a focus cycle root of aComponent or a focus traversal policy provider.
<p>
By default, SortingFocusTraversalPolicy implicitly transfers focus down-
cycle. That is, during normal focus traversal, the Component
traversed after a focus cycle root will be the focus-cycle-root's
default Component to focus. This behavior can be disabled using the
<code>setImplicitDownCycleTraversal</code> method.
<p>
If aContainer is <a href=\"../../java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus
traversal policy provider</a>, the focus is always transferred down-cycle.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus after aComponent, or
        null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or a focus traversal policy provider, or if either aContainer or
        aComponent is null
"
      end

      operation 10471938 "getComponentBefore"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus before aComponent.
aContainer must be a focus cycle root of aComponent or a focus traversal policy provider.
<p>
By default, SortingFocusTraversalPolicy implicitly transfers focus down-
cycle. That is, during normal focus traversal, the Component
traversed after a focus cycle root will be the focus-cycle-root's
default Component to focus. This behavior can be disabled using the
<code>setImplicitDownCycleTraversal</code> method.
<p>
If aContainer is <a href=\"../../java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus
traversal policy provider</a>, the focus is always transferred down-cycle.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus before aComponent,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or a focus traversal policy provider, or if either aContainer or
        aComponent is null
"
      end

      operation 10472066 "getFirstComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
forward direction.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider whose
       first Component is to be returned
@return the first Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 10472194 "getLastComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
reverse direction.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider whose
       last Component is to be returned
@return the last Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 10472322 "getDefaultComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default Component to focus. This Component will be the first
to receive focus when traversing down into a new focus traversal cycle
rooted at aContainer. The default implementation of this method
returns the same Component as <code>getFirstComponent</code>.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider whose
       default Component is to be returned
@return the default Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@see #getFirstComponent
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 10472450 "setImplicitDownCycleTraversal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "implicitDownCycleTraversal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this SortingFocusTraversalPolicy transfers focus down-cycle
implicitly. If <code>true</code>, during normal focus traversal,
the Component traversed after a focus cycle root will be the focus-
cycle-root's default Component to focus. If <code>false</code>, the
next Component in the focus traversal cycle rooted at the specified
focus cycle root will be traversed instead. The default value for this
property is <code>true</code>.

@param implicitDownCycleTraversal whether this
       SortingFocusTraversalPolicy transfers focus down-cycle implicitly
@see #getImplicitDownCycleTraversal
@see #getFirstComponent
"
      end

      operation 10472578 "getImplicitDownCycleTraversal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this SortingFocusTraversalPolicy transfers focus down-
cycle implicitly. If <code>true</code>, during normal focus
traversal, the Component traversed after a focus cycle root will be the
focus-cycle-root's default Component to focus. If <code>false</code>,
the next Component in the focus traversal cycle rooted at the specified
focus cycle root will be traversed instead.

@return whether this SortingFocusTraversalPolicy transfers focus down-
        cycle implicitly
@see #setImplicitDownCycleTraversal
@see #getFirstComponent
"
      end

      operation 10472706 "setComparator"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super Component> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Comparator which will be used to sort the Components in a
focus traversal cycle.

@param comparator the Comparator which will be used for sorting
"
      end

      operation 10472834 "getComparator"
	protected return_type class_ref 184962 // Comparator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super Component> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Comparator which will be used to sort the Components in a
focus traversal cycle.

@return the Comparator which will be used for sorting
"
      end

      operation 10472962 "accept"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether a Component is an acceptable choice as the new
focus owner. By default, this method will accept a Component if and
only if it is visible, displayable, enabled, and focusable.

@param aComponent the Component whose fitness as a focus owner is to
       be tested
@return <code>true</code> if aComponent is visible, displayable,
        enabled, and focusable; <code>false</code> otherwise
"
      end
    end

    class 1268354 "InternalFrameFocusTraversalPolicy"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A FocusTraversalPolicy which can optionally provide an algorithm for
determining a JInternalFrame's initial Component. The initial Component is
the first to receive focus when the JInternalFrame is first selected. By
default, this is the same as the JInternalFrame's default Component to
focus.

@author David Mendenhall

@since 1.4
"
      classrelation 4075138 // <generalisation>
	relation 4075138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4075138 // <generalisation>
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      operation 10470530 "getInitialComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "frame" type class_ref 379522 // JInternalFrame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus when a
JInternalFrame is selected for the first time. Once the JInternalFrame
has been selected by a call to <code>setSelected(true)</code>, the
initial Component will not be used again. Instead, if the JInternalFrame
loses and subsequently regains selection, or is made invisible or
undisplayable and subsequently made visible and displayable, the
JInternalFrame's most recently focused Component will become the focus
owner. The default implementation of this method returns the
JInternalFrame's default Component to focus.

@param frame the JInternalFrame whose initial Component is to be
       returned
@return the Component that should receive the focus when frame is
        selected for the first time, or null if no suitable Component
        can be found
@see JInternalFrame#getMostRecentFocusOwner
@throws IllegalArgumentException if window is null
"
      end
    end

    class 1268482 "SwingContainerOrderFocusTraversalPolicy"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Create our own subclass and change accept to public so that we can call
 accept."
      classrelation 4076034 // <generalisation>
	relation 4076034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4076034 // <generalisation>
	  b parent class_ref 861058 // ContainerOrderFocusTraversalPolicy
      end

      operation 10473090 "accept"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1268610 "SwingDefaultFocusTraversalPolicy"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Create our own subclass and change accept to public so that we can call
 accept."
      classrelation 4076546 // <generalisation>
	relation 4076546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4076546 // <generalisation>
	  b parent class_ref 861314 // DefaultFocusTraversalPolicy
      end

      operation 10474370 "accept"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1268738 "CompareTabOrderComparator"
      visibility package 
      nactuals 1
      actual class class_ref 184962 // Comparator
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 4076802 // <realization>
	relation 4076802 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4076802 // <realization>
	  b parent class_ref 184962 // Comparator
      end

      classrelation 4076930 // defaultFocusManager (<unidirectional association>)
	relation 4076930 --->
	  a role_name "defaultFocusManager" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4076930 // defaultFocusManager (<unidirectional association>)
	  b parent class_ref 1267586 // DefaultFocusManager
      end

      operation 10474626 "CompareTabOrderComparator"
	package explicit_return_type ""
	nparams 1
	  param inout name "defaultFocusManager" type class_ref 1267586 // DefaultFocusManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10474754 "compare"
	public explicit_return_type "int"
	nparams 2
	  param inout name "o1" type class_ref 338818 // Component
	  param inout name "o2" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1268866 "DefaultListModel"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 366466 // AbstractListModel
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class loosely implements the <code>java.util.Vector</code>
API, in that it implements the 1.1.x version of
<code>java.util.Vector</code>, has no collection class support,
and notifies the <code>ListDataListener</code>s when changes occur.
Presently it delegates to a <code>Vector</code>,
in a future release it will be a real Collection implementation.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@param <E> the type of the elements of this model

@author Hans Muller
"
      classrelation 4077058 // <realization>
	relation 4077058 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4077058 // <realization>
	  b parent class_ref 366466 // AbstractListModel
      end

      classrelation 4077186 // delegate (<unidirectional association>)
	relation 4077186 --->
	  a role_name "delegate" init_value " new Vector<E>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	    classrelation_ref 4077186 // delegate (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 10474882 "getSize"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of components in this list.
<p>
This method is identical to <code>size</code>, which implements the
<code>List</code> interface defined in the 1.2 Collections framework.
This method exists in conjunction with <code>setSize</code> so that
<code>size</code> is identifiable as a JavaBean property.

@return  the number of components in this list
@see #size()
"
      end

      operation 10475010 "getElementAt"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component at the specified index.
<blockquote>
<b>Note:</b> Although this method is not deprecated, the preferred
   method to use is <code>get(int)</code>, which implements the
   <code>List</code> interface defined in the 1.2 Collections framework.
</blockquote>
@param      index   an index into this list
@return     the component at the specified index
@exception  ArrayIndexOutOfBoundsException  if the <code>index</code>
            is negative or greater than the current size of this
            list
@see #get(int)
"
      end

      operation 10475138 "copyInto"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "anArray" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the components of this list into the specified array.
The array must be big enough to hold all the objects in this list,
else an <code>IndexOutOfBoundsException</code> is thrown.

@param   anArray   the array into which the components get copied
@see Vector#copyInto(Object[])
"
      end

      operation 10475266 "trimToSize"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Trims the capacity of this list to be the list's current size.

@see Vector#trimToSize()
"
      end

      operation 10475394 "ensureCapacity"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increases the capacity of this list, if necessary, to ensure
that it can hold at least the number of components specified by
the minimum capacity argument.

@param   minCapacity   the desired minimum capacity
@see Vector#ensureCapacity(int)
"
      end

      operation 10475522 "setSize"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "newSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this list.

@param   newSize   the new size of this list
@see Vector#setSize(int)
"
      end

      operation 10475650 "capacity"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current capacity of this list.

@return  the current capacity
@see Vector#capacity()
"
      end

      operation 10475778 "size"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of components in this list.

@return  the number of components in this list
@see Vector#size()
"
      end

      operation 10475906 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this list has any components.

@return  <code>true</code> if and only if this list has
         no components, that is, its size is zero;
         <code>false</code> otherwise
@see Vector#isEmpty()
"
      end

      operation 10476034 "elements"
	cpp_inline public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the components of this list.

@return  an enumeration of the components of this list
@see Vector#elements()
"
      end

      operation 10476162 "contains"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "elem" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the specified object is a component in this list.

@param   elem   an object
@return  <code>true</code> if the specified object
         is the same as a component in this list
@see Vector#contains(Object)
"
      end

      operation 10476290 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "elem" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurrence of <code>elem</code>.

@param   elem   an object
@return  the index of the first occurrence of the argument in this
         list; returns <code>-1</code> if the object is not found
@see Vector#indexOf(Object)
"
      end

      operation 10476418 "indexOf"
	cpp_inline public explicit_return_type "int"
	nparams 2
	  param inout name "elem" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurrence of <code>elem</code>, beginning
the search at <code>index</code>.

@param   elem    an desired component
@param   index   the index from which to begin searching
@return  the index where the first occurrence of <code>elem</code>
         is found after <code>index</code>; returns <code>-1</code>
         if the <code>elem</code> is not found in the list
@see Vector#indexOf(Object,int)
"
      end

      operation 10476546 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "elem" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the last occurrence of <code>elem</code>.

@param   elem   the desired component
@return  the index of the last occurrence of <code>elem</code>
         in the list; returns <code>-1</code> if the object is not found
@see Vector#lastIndexOf(Object)
"
      end

      operation 10476674 "lastIndexOf"
	cpp_inline public explicit_return_type "int"
	nparams 2
	  param inout name "elem" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches backwards for <code>elem</code>, starting from the
specified index, and returns an index to it.

@param  elem    the desired component
@param  index   the index to start searching from
@return the index of the last occurrence of the <code>elem</code>
         in this list at position less than <code>index</code>;
         returns <code>-1</code> if the object is not found
@see Vector#lastIndexOf(Object,int)
"
      end

      operation 10476802 "elementAt"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component at the specified index.
Throws an <code>ArrayIndexOutOfBoundsException</code> if the index
is negative or not less than the size of the list.
<blockquote>
<b>Note:</b> Although this method is not deprecated, the preferred
   method to use is <code>get(int)</code>, which implements the
   <code>List</code> interface defined in the 1.2 Collections framework.
</blockquote>

@param      index   an index into this list
@return     the component at the specified index
@see #get(int)
@see Vector#elementAt(int)
"
      end

      operation 10476930 "firstElement"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first component of this list.
Throws a <code>NoSuchElementException</code> if this
vector has no components.
@return     the first component of this list
@see Vector#firstElement()
"
      end

      operation 10477058 "lastElement"
	cpp_inline public explicit_return_type "E"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last component of the list.
Throws a <code>NoSuchElementException</code> if this vector
has no components.

@return  the last component of the list
@see Vector#lastElement()
"
      end

      operation 10477186 "setElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "element" explicit_type "E"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified <code>index</code> of this
list to be the specified element. The previous component at that
position is discarded.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code> if the index
is invalid.
<blockquote>
<b>Note:</b> Although this method is not deprecated, the preferred
   method to use is <code>set(int,Object)</code>, which implements the
   <code>List</code> interface defined in the 1.2 Collections framework.
</blockquote>

@param      element what the component is to be set to
@param      index   the specified index
@see #set(int,Object)
@see Vector#setElementAt(Object,int)
"
      end

      operation 10477314 "removeElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code> if the index
is invalid.
<blockquote>
<b>Note:</b> Although this method is not deprecated, the preferred
   method to use is <code>remove(int)</code>, which implements the
   <code>List</code> interface defined in the 1.2 Collections framework.
</blockquote>

@param      index   the index of the object to remove
@see #remove(int)
@see Vector#removeElementAt(int)
"
      end

      operation 10477442 "insertElementAt"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "element" explicit_type "E"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element as a component in this list at the
specified <code>index</code>.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code> if the index
is invalid.
<blockquote>
<b>Note:</b> Although this method is not deprecated, the preferred
   method to use is <code>add(int,Object)</code>, which implements the
   <code>List</code> interface defined in the 1.2 Collections framework.
</blockquote>

@param      element the component to insert
@param      index   where to insert the new component
@exception  ArrayIndexOutOfBoundsException  if the index was invalid
@see #add(int,Object)
@see Vector#insertElementAt(Object,int)
"
      end

      operation 10477570 "addElement"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the end of this list.

@param   element   the component to be added
@see Vector#addElement(Object)
"
      end

      operation 10477698 "removeElement"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first (lowest-indexed) occurrence of the argument
from this list.

@param   obj   the component to be removed
@return  <code>true</code> if the argument was a component of this
         list; <code>false</code> otherwise
@see Vector#removeElement(Object)
"
      end

      operation 10477826 "removeAllElements"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all components from this list and sets its size to zero.
<blockquote>
<b>Note:</b> Although this method is not deprecated, the preferred
   method to use is <code>clear</code>, which implements the
   <code>List</code> interface defined in the 1.2 Collections framework.
</blockquote>

@see #clear()
@see Vector#removeAllElements()
"
      end

      operation 10477954 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a String representation of this object
"
      end

      operation 10478082 "toArray"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The remaining methods are included for compatibility with the
Java 2 platform Vector class.


Returns an array containing all of the elements in this list in the
correct order.

@return an array containing the elements of the list
@see Vector#toArray()
"
      end

      operation 10478210 "get"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element at the specified position in this list.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code>
if the index is out of range
(<code>index &lt; 0 || index &gt;= size()</code>).

@param index index of element to return
"
      end

      operation 10478338 "set"
	cpp_inline public explicit_return_type "E"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the element at the specified position in this list with the
specified element.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code>
if the index is out of range
(<code>index &lt; 0 || index &gt;= size()</code>).

@param index index of element to replace
@param element element to be stored at the specified position
@return the element previously at the specified position
"
      end

      operation 10478466 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "E"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified element at the specified position in this list.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code> if the
index is out of range
(<code>index &lt; 0 || index &gt; size()</code>).

@param index index at which the specified element is to be inserted
@param element element to be inserted
"
      end

      operation 10478594 "remove"
	cpp_inline public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the element at the specified position in this list.
Returns the element that was removed from the list.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code>
if the index is out of range
(<code>index &lt; 0 || index &gt;= size()</code>).

@param index the index of the element to removed
@return the element previously at the specified position
"
      end

      operation 10478722 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all of the elements from this list.  The list will
be empty after this call returns (unless it throws an exception).
"
      end

      operation 10478850 "removeRange"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "fromIndex" explicit_type "int"
	  param in name "toIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the components at the specified range of indexes.
The removal is inclusive, so specifying a range of (1,5)
removes the component at index 1 and the component at index 5,
as well as all components in between.
<p>
Throws an <code>ArrayIndexOutOfBoundsException</code>
if the index was invalid.
Throws an <code>IllegalArgumentException</code> if
<code>fromIndex &gt; toIndex</code>.

@param      fromIndex the index of the lower end of the range
@param      toIndex   the index of the upper end of the range
@see        #remove(int)
"
      end
    end

    class 1268994 "DefaultListSelectionModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Default data model for list selections.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Philip Milne
@author Hans Muller
@see ListSelectionModel
"
      classrelation 4077314 // <realization>
	relation 4077314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4077314 // <realization>
	  b parent class_ref 1269122 // ListSelectionModel
      end

      classrelation 4077442 // <realization>
	relation 4077442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4077442 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 4077570 // <realization>
	relation 4077570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4077570 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2387842 "MIN"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2387970 "MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MAX_VALUE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388098 "selectionMode"
	private explicit_type "int"
	init_value " MULTIPLE_INTERVAL_SELECTION"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388226 "minIndex"
	private explicit_type "int"
	init_value " MAX"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388354 "maxIndex"
	private explicit_type "int"
	init_value " MIN"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388482 "anchorIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388610 "leadIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388738 "firstAdjustedIndex"
	private explicit_type "int"
	init_value " MAX"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388866 "lastAdjustedIndex"
	private explicit_type "int"
	init_value " MIN"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2388994 "isAdjusting"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2389122 "firstChangedIndex"
	private explicit_type "int"
	init_value " MAX"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2389250 "lastChangedIndex"
	private explicit_type "int"
	init_value " MIN"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4077698 // value (<unidirectional association>)
	relation 4077698 --->
	  a role_name "value" init_value " new BitSet(32)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4077698 // value (<unidirectional association>)
	  b parent class_ref 238082 // BitSet
      end

      classrelation 4077826 // listenerList (<unidirectional association>)
	relation 4077826 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4077826 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      attribute 2389378 "leadAnchorNotificationEnabled"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10481538 "getMinSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10481666 "getMaxSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10481794 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10481922 "getSelectionMode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10482050 "setSelectionMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "selectionMode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@throws IllegalArgumentException {@inheritDoc}
"
      end

      operation 10482178 "isSelectedIndex"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10482306 "isSelectionEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10482434 "addListSelectionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 365442 // ListSelectionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10482562 "removeListSelectionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 365442 // ListSelectionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10482690 "getListSelectionListeners"
	public return_type class_ref 365442 // ListSelectionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the list selection listeners
registered on this <code>DefaultListSelectionModel</code>.

@return all of this model's <code>ListSelectionListener</code>s
        or an empty
        array if no list selection listeners are currently registered

@see #addListSelectionListener
@see #removeListSelectionListener

@since 1.4
"
      end

      operation 10482818 "fireValueChanged"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "isAdjusting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies listeners that we have ended a series of adjustments.
"
      end

      operation 10482946 "fireValueChanged"
	protected explicit_return_type "void"
	nparams 2
	  param in name "firstIndex" explicit_type "int"
	  param in name "lastIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies <code>ListSelectionListeners</code> that the value
of the selection, in the closed interval <code>firstIndex</code>,
<code>lastIndex</code>, has changed.
"
      end

      operation 10483074 "fireValueChanged"
	protected explicit_return_type "void"
	nparams 3
	  param in name "firstIndex" explicit_type "int"
	  param in name "lastIndex" explicit_type "int"
	  param inout name "isAdjusting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param firstIndex the first index in the interval
@param lastIndex the last index in the interval
@param isAdjusting true if this is the final change in a series of
         adjustments
@see EventListenerList
"
      end

      operation 10483202 "fireValueChanged"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10483330 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered as
<code><em>Foo</em>Listener</code>s
upon this model.
<code><em>Foo</em>Listener</code>s
are registered using the <code>add<em>Foo</em>Listener</code> method.
<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as <code><em>Foo</em>Listener.class</code>.
For example, you can query a <code>DefaultListSelectionModel</code>
instance <code>m</code>
for its list selection listeners
with the following code:

<pre>ListSelectionListener[] lsls = (ListSelectionListener[])(m.getListeners(ListSelectionListener.class));</pre>

If no such listeners exist,
this method returns an empty array.

@param listenerType  the type of listeners requested;
         this parameter should specify an interface
         that descends from <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s
         on this model,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code> doesn't
         specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getListSelectionListeners

@since 1.3
"
      end

      operation 10483458 "markAsDirty"
	private explicit_return_type "void"
	nparams 1
	  param in name "r" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Updates first and last change indices"
      end

      operation 10483586 "set"
	private explicit_return_type "void"
	nparams 1
	  param in name "r" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the state at this index and update all relevant state."
      end

      operation 10483714 "clear"
	private explicit_return_type "void"
	nparams 1
	  param in name "r" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clears the state at this index and update all relevant state."
      end

      operation 10483842 "setLeadAnchorNotificationEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the leadAnchorNotificationEnabled flag.
@see             #isLeadAnchorNotificationEnabled()
"
      end

      operation 10483970 "isLeadAnchorNotificationEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>leadAnchorNotificationEnabled</code> flag.
When <code>leadAnchorNotificationEnabled</code> is true the model
generates notification events with bounds that cover all the changes to
the selection plus the changes to the lead and anchor indices.
Setting the flag to false causes a narrowing of the event's bounds to
include only the elements that have been selected or deselected since
the last change. Either way, the model continues to maintain the lead
and anchor variables internally. The default is true.
<p>
Note: It is possible for the lead or anchor to be changed without a
change to the selection. Notification of these changes is often
important, such as when the new lead or anchor needs to be updated in
the view. Therefore, caution is urged when changing the default value.

@return  the value of the <code>leadAnchorNotificationEnabled</code> flag
@see             #setLeadAnchorNotificationEnabled(boolean)
"
      end

      operation 10484098 "updateLeadAnchorIndices"
	private explicit_return_type "void"
	nparams 2
	  param in name "anchorIndex" explicit_type "int"
	  param in name "leadIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10484226 "contains"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10484354 "changeSelection"
	private explicit_return_type "void"
	nparams 5
	  param in name "clearMin" explicit_type "int"
	  param in name "clearMax" explicit_type "int"
	  param in name "setMin" explicit_type "int"
	  param in name "setMax" explicit_type "int"
	  param inout name "clearFirst" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10484482 "changeSelection"
	private explicit_return_type "void"
	nparams 4
	  param in name "clearMin" explicit_type "int"
	  param in name "clearMax" explicit_type "int"
	  param in name "setMin" explicit_type "int"
	  param in name "setMax" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the selection with the effect of first clearing the values
in the inclusive range [clearMin, clearMax] then setting the values
in the inclusive range [setMin, setMax]. Do this in one pass so
that no values are cleared if they would later be set.
"
      end

      operation 10484610 "clearSelection"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10484738 "setSelectionInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the selection to be between {@code index0} and {@code index1}
inclusive. {@code index0} doesn't have to be less than or equal to
{@code index1}.
<p>
In {@code SINGLE_SELECTION} selection mode, only the second index
is used.
<p>
If this represents a change to the current selection, then each
{@code ListSelectionListener} is notified of the change.
<p>
If either index is {@code -1}, this method does nothing and returns
without exception. Otherwise, if either index is less than {@code -1},
an {@code IndexOutOfBoundsException} is thrown.

@param index0 one end of the interval.
@param index1 other end of the interval
@throws IndexOutOfBoundsException if either index is less than {@code -1}
        (and neither index is {@code -1})
@see #addListSelectionListener
"
      end

      operation 10484866 "addSelectionInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the selection to be the set union of the current selection
and the indices between {@code index0} and {@code index1} inclusive.
<p>
In {@code SINGLE_SELECTION} selection mode, this is equivalent
to calling {@code setSelectionInterval}, and only the second index
is used. In {@code SINGLE_INTERVAL_SELECTION} selection mode, this
method behaves like {@code setSelectionInterval}, unless the given
interval is immediately adjacent to or overlaps the existing selection,
and can therefore be used to grow it.
<p>
If this represents a change to the current selection, then each
{@code ListSelectionListener} is notified of the change. Note that
{@code index0} doesn't have to be less than or equal to {@code index1}.
<p>
If either index is {@code -1}, this method does nothing and returns
without exception. Otherwise, if either index is less than {@code -1},
an {@code IndexOutOfBoundsException} is thrown.

@param index0 one end of the interval.
@param index1 other end of the interval
@throws IndexOutOfBoundsException if either index is less than {@code -1}
        (and neither index is {@code -1})
@see #addListSelectionListener
@see #setSelectionInterval
"
      end

      operation 10484994 "removeSelectionInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the selection to be the set difference of the current selection
and the indices between {@code index0} and {@code index1} inclusive.
{@code index0} doesn't have to be less than or equal to {@code index1}.
<p>
In {@code SINGLE_INTERVAL_SELECTION} selection mode, if the removal
would produce two disjoint selections, the removal is extended through
the greater end of the selection. For example, if the selection is
{@code 0-10} and you supply indices {@code 5,6} (in any order) the
resulting selection is {@code 0-4}.
<p>
If this represents a change to the current selection, then each
{@code ListSelectionListener} is notified of the change.
<p>
If either index is {@code -1}, this method does nothing and returns
without exception. Otherwise, if either index is less than {@code -1},
an {@code IndexOutOfBoundsException} is thrown.

@param index0 one end of the interval
@param index1 other end of the interval
@throws IndexOutOfBoundsException if either index is less than {@code -1}
        (and neither index is {@code -1})
@see #addListSelectionListener
"
      end

      operation 10485122 "removeSelectionIntervalImpl"
	private explicit_return_type "void"
	nparams 3
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	  param inout name "changeLeadAnchor" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " private implementation allowing the selection interval
 to be removed without affecting the lead and anchor"
      end

      operation 10485250 "setState"
	private explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10485378 "insertIndexInterval"
	public explicit_return_type "void"
	nparams 3
	  param in name "index" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "before" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert length indices beginning before/after index. If the value
at index is itself selected and the selection mode is not
SINGLE_SELECTION, set all of the newly inserted items as selected.
Otherwise leave them unselected. This method is typically
called to sync the selection model with a corresponding change
in the data model.
"
      end

      operation 10485506 "removeIndexInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the indices in the interval index0,index1 (inclusive) from
the selection model.  This is typically called to sync the selection
model width a corresponding change in the data model.  Note
that (as always) index0 need not be &lt;= index1.
"
      end

      operation 10485634 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isAdjusting" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10485762 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a <code>String</code> representation of this object
"
      end

      operation 10485890 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this selection model with the same selection.
<code>listenerLists</code> are not duplicated.

@exception CloneNotSupportedException if the selection model does not
   both (a) implement the Cloneable interface and (b) define a
   <code>clone</code> method.
"
      end

      operation 10486018 "getAnchorSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10486146 "getLeadSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 10486274 "setAnchorSelectionIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "anchorIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the anchor selection index, leaving all selection values unchanged.
If leadAnchorNotificationEnabled is true, send a notification covering
the old and new anchor cells.

@see #getAnchorSelectionIndex
@see #setLeadSelectionIndex
"
      end

      operation 10486402 "moveLeadSelectionIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "leadIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the lead selection index, leaving all selection values unchanged.
If leadAnchorNotificationEnabled is true, send a notification covering
the old and new lead cells.

@param leadIndex the new lead selection index

@see #setAnchorSelectionIndex
@see #setLeadSelectionIndex
@see #getLeadSelectionIndex

@since 1.5
"
      end

      operation 10486530 "setLeadSelectionIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "leadIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the lead selection index, ensuring that values between the
anchor and the new lead are either all selected or all deselected.
If the value at the anchor index is selected, first clear all the
values in the range [anchor, oldLeadIndex], then select all the values
values in the range [anchor, newLeadIndex], where oldLeadIndex is the old
leadIndex and newLeadIndex is the new one.
<p>
If the value at the anchor index is not selected, do the same thing in
reverse selecting values in the old range and deselecting values in the
new one.
<p>
Generate a single event for this change and notify all listeners.
For the purposes of generating minimal bounds in this event, do the
operation in a single pass; that way the first and last index inside the
ListSelectionEvent that is broadcast will refer to cells that actually
changed value because of this method. If, instead, this operation were
done in two steps the effect on the selection state would be the same
but two events would be generated and the bounds around the changed
values would be wider, including cells that had been first cleared only
to later be set.
<p>
This method can be used in the <code>mouseDragged</code> method
of a UI class to extend a selection.

@see #getLeadSelectionIndex
@see #setAnchorSelectionIndex
"
      end
    end

    class 1269122 "ListSelectionModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the current state of the
selection for any of the components that display a
list of values with stable indices.  The selection is
modeled as a set of intervals, each interval represents
a contiguous range of selected list elements.
The methods for modifying the set of selected intervals
all take a pair of indices, index0 and index1, that represent
a closed interval, i.e. the interval includes both index0 and
index1.

@author Hans Muller
@author Philip Milne
@see DefaultListSelectionModel
"
      attribute 2387458 "SINGLE_SELECTION"
	public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A value for the selectionMode property: select one list index
at a time.

@see #setSelectionMode

"
      end

      attribute 2387586 "SINGLE_INTERVAL_SELECTION"
	public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A value for the selectionMode property: select one contiguous
range of indices at a time.

@see #setSelectionMode

"
      end

      attribute 2387714 "MULTIPLE_INTERVAL_SELECTION"
	public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A value for the selectionMode property: select one or more
contiguous ranges of indices at a time.

@see #setSelectionMode

"
      end

      operation 10478978 "setSelectionInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the selection to be between {@code index0} and {@code index1}
inclusive. {@code index0} doesn't have to be less than or equal to
{@code index1}.
<p>
In {@code SINGLE_SELECTION} selection mode, only the second index
is used.
<p>
If this represents a change to the current selection, then each
{@code ListSelectionListener} is notified of the change.

@param index0 one end of the interval.
@param index1 other end of the interval
@see #addListSelectionListener
"
      end

      operation 10479106 "addSelectionInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the selection to be the set union of the current selection
and the indices between {@code index0} and {@code index1} inclusive.
{@code index0} doesn't have to be less than or equal to {@code index1}.
<p>
In {@code SINGLE_SELECTION} selection mode, this is equivalent
to calling {@code setSelectionInterval}, and only the second index
is used. In {@code SINGLE_INTERVAL_SELECTION} selection mode, this
method behaves like {@code setSelectionInterval}, unless the given
interval is immediately adjacent to or overlaps the existing selection,
and can therefore be used to grow the selection.
<p>
If this represents a change to the current selection, then each
{@code ListSelectionListener} is notified of the change.

@param index0 one end of the interval.
@param index1 other end of the interval
@see #addListSelectionListener
@see #setSelectionInterval
"
      end

      operation 10479234 "removeSelectionInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the selection to be the set difference of the current selection
and the indices between {@code index0} and {@code index1} inclusive.
{@code index0} doesn't have to be less than or equal to {@code index1}.
<p>
In {@code SINGLE_INTERVAL_SELECTION} selection mode, if the removal
would produce two disjoint selections, the removal is extended through
the greater end of the selection. For example, if the selection is
{@code 0-10} and you supply indices {@code 5,6} (in any order) the
resulting selection is {@code 0-4}.
<p>
If this represents a change to the current selection, then each
{@code ListSelectionListener} is notified of the change.

@param index0 one end of the interval.
@param index1 other end of the interval
@see #addListSelectionListener
"
      end

      operation 10479362 "getMinSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first selected index or -1 if the selection is empty.
"
      end

      operation 10479490 "getMaxSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last selected index or -1 if the selection is empty.
"
      end

      operation 10479618 "isSelectedIndex"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified index is selected.
"
      end

      operation 10479746 "getAnchorSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first index argument from the most recent call to
setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().
The most recent index0 is considered the \"anchor\" and the most recent
index1 is considered the \"lead\".  Some interfaces display these
indices specially, e.g. Windows95 displays the lead index with a
dotted yellow outline.

@see #getLeadSelectionIndex
@see #setSelectionInterval
@see #addSelectionInterval
"
      end

      operation 10479874 "setAnchorSelectionIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the anchor selection index.

@see #getAnchorSelectionIndex
"
      end

      operation 10480002 "getLeadSelectionIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the second index argument from the most recent call to
setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().

@see #getAnchorSelectionIndex
@see #setSelectionInterval
@see #addSelectionInterval
"
      end

      operation 10480130 "setLeadSelectionIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the lead selection index.

@see #getLeadSelectionIndex
"
      end

      operation 10480258 "clearSelection"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the selection to the empty set.  If this represents
a change to the current selection then notify each ListSelectionListener.

@see #addListSelectionListener
"
      end

      operation 10480386 "isSelectionEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if no indices are selected.
"
      end

      operation 10480514 "insertIndexInterval"
	public explicit_return_type "void"
	nparams 3
	  param in name "index" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "before" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert length indices beginning before/after index.  This is typically
called to sync the selection model with a corresponding change
in the data model.
"
      end

      operation 10480642 "removeIndexInterval"
	public explicit_return_type "void"
	nparams 2
	  param in name "index0" explicit_type "int"
	  param in name "index1" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the indices in the interval index0,index1 (inclusive) from
the selection model.  This is typically called to sync the selection
model width a corresponding change in the data model.
"
      end

      operation 10480770 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "valueIsAdjusting" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code valueIsAdjusting} property, which indicates whether
or not upcoming selection changes should be considered part of a single
change. The value of this property is used to initialize the
{@code valueIsAdjusting} property of the {@code ListSelectionEvent}s that
are generated.
<p>
For example, if the selection is being updated in response to a user
drag, this property can be set to {@code true} when the drag is initiated
and set to {@code false} when the drag is finished. During the drag,
listeners receive events with a {@code valueIsAdjusting} property
set to {@code true}. At the end of the drag, when the change is
finalized, listeners receive an event with the value set to {@code false}.
Listeners can use this pattern if they wish to update only when a change
has been finalized.
<p>
Setting this property to {@code true} begins a series of changes that
is to be considered part of a single change. When the property is changed
back to {@code false}, an event is sent out characterizing the entire
selection change (if there was one), with the event's
{@code valueIsAdjusting} property set to {@code false}.

@param valueIsAdjusting the new value of the property
@see #getValueIsAdjusting
@see javax.swing.event.ListSelectionEvent#getValueIsAdjusting
"
      end

      operation 10480898 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the selection is undergoing a series of changes.

@return true if the selection is undergoing a series of changes
@see #setValueIsAdjusting
"
      end

      operation 10481026 "setSelectionMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "selectionMode" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selection mode. The following list describes the accepted
selection modes:
<ul>
<li>{@code ListSelectionModel.SINGLE_SELECTION} -
  Only one list index can be selected at a time. In this mode,
  {@code setSelectionInterval} and {@code addSelectionInterval} are
  equivalent, both replacing the current selection with the index
  represented by the second argument (the \"lead\").
<li>{@code ListSelectionModel.SINGLE_INTERVAL_SELECTION} -
  Only one contiguous interval can be selected at a time.
  In this mode, {@code addSelectionInterval} behaves like
  {@code setSelectionInterval} (replacing the current selection),
  unless the given interval is immediately adjacent to or overlaps
  the existing selection, and can therefore be used to grow it.
<li>{@code ListSelectionModel.MULTIPLE_INTERVAL_SELECTION} -
  In this mode, there's no restriction on what can be selected.
</ul>

@see #getSelectionMode
@throws IllegalArgumentException if the selection mode isn't
        one of those allowed
"
      end

      operation 10481154 "getSelectionMode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current selection mode.

@return the current selection mode
@see #setSelectionMode
"
      end

      operation 10481282 "addListSelectionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 365442 // ListSelectionListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a listener to the list that's notified each time a change
to the selection occurs.

@param x the ListSelectionListener
@see #removeListSelectionListener
@see #setSelectionInterval
@see #addSelectionInterval
@see #removeSelectionInterval
@see #clearSelection
@see #insertIndexInterval
@see #removeIndexInterval
"
      end

      operation 10481410 "removeListSelectionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 365442 // ListSelectionListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener from the list that's notified each time a
change to the selection occurs.

@param x the ListSelectionListener
@see #addListSelectionListener
"
      end
    end

    class 1269250 "DefaultRowSorter"
      abstract visibility public 
      nformals 2
      formal name "M" type "" explicit_default_value ""
        explicit_extends ""
      formal name "I" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 1269378 // RowSorter
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of <code>RowSorter</code> that provides sorting and
filtering around a grid-based data model.
Beyond creating and installing a <code>RowSorter</code>, you very rarely
need to interact with one directly.  Refer to
{@link javax.swing.table.TableRowSorter TableRowSorter} for a concrete
implementation of <code>RowSorter</code> for <code>JTable</code>.
<p>
Sorting is done based on the current <code>SortKey</code>s, in order.
If two objects are equal (the <code>Comparator</code> for the
column returns 0) the next <code>SortKey</code> is used.  If no
<code>SortKey</code>s remain or the order is <code>UNSORTED</code>, then
the order of the rows in the model is used.
<p>
Sorting of each column is done by way of a <code>Comparator</code>
that you can specify using the <code>setComparator</code> method.
If a <code>Comparator</code> has not been specified, the
<code>Comparator</code> returned by
<code>Collator.getInstance()</code> is used on the results of
calling <code>toString</code> on the underlying objects.  The
<code>Comparator</code> is never passed <code>null</code>.  A
<code>null</code> value is treated as occurring before a
non-<code>null</code> value, and two <code>null</code> values are
considered equal.
<p>
If you specify a <code>Comparator</code> that casts its argument to
a type other than that provided by the model, a
<code>ClassCastException</code> will be thrown when the data is sorted.
<p>
In addition to sorting, <code>DefaultRowSorter</code> provides the
ability to filter rows.  Filtering is done by way of a
<code>RowFilter</code> that is specified using the
<code>setRowFilter</code> method.  If no filter has been specified all
rows are included.
<p>
By default, rows are in unsorted order (the same as the model) and
every column is sortable. The default <code>Comparator</code>s are
documented in the subclasses (for example, {@link
javax.swing.table.TableRowSorter TableRowSorter}).
<p>
If the underlying model structure changes (the
<code>modelStructureChanged</code> method is invoked) the following
are reset to their default values: <code>Comparator</code>s by
column, current sort order, and whether each column is sortable. To
find the default <code>Comparator</code>s, see the concrete
implementation (for example, {@link
javax.swing.table.TableRowSorter TableRowSorter}).  The default
sort order is unsorted (the same as the model), and columns are
sortable by default.
<p>
If the underlying model structure changes (the
<code>modelStructureChanged</code> method is invoked) the following
are reset to their default values: <code>Comparator</code>s by column,
current sort order and whether a column is sortable.
<p>
<code>DefaultRowSorter</code> is an abstract class.  Concrete
subclasses must provide access to the underlying data by invoking
{@code setModelWrapper}. The {@code setModelWrapper} method
<b>must</b> be invoked soon after the constructor is
called, ideally from within the subclass's constructor.
Undefined behavior will result if you use a {@code
DefaultRowSorter} without specifying a {@code ModelWrapper}.
<p>
<code>DefaultRowSorter</code> has two formal type parameters.  The
first type parameter corresponds to the class of the model, for example
<code>DefaultTableModel</code>.  The second type parameter
corresponds to the class of the identifier passed to the
<code>RowFilter</code>.  Refer to <code>TableRowSorter</code> and
<code>RowFilter</code> for more details on the type parameters.

@param <M> the type of the model
@param <I> the type of the identifier passed to the <code>RowFilter</code>
@see javax.swing.table.TableRowSorter
@see javax.swing.table.DefaultTableModel
@see java.text.Collator
@since 1.6
"
      classrelation 4078210 // <realization>
	relation 4078210 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4078210 // <realization>
	  b parent class_ref 1269378 // RowSorter
      end

      attribute 2389634 "sortsOnUpdates"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not we resort on TableModelEvent.UPDATEs.

"
      end

      class 1270018 "Row"
	visibility private 
	nactuals 1
	actual class class_ref 194946 // Comparable
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4081154 // <realization>
	  relation 4081154 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4081154 // <realization>
	    b parent class_ref 194946 // Comparable
	end

	classrelation 4081282 // sorter (<unidirectional association>)
	  relation 4081282 --->
	    a role_name "sorter" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4081282 // sorter (<unidirectional association>)
	    b parent class_ref 1269250 // DefaultRowSorter
	end

	attribute 2391554 "modelIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10501890 "Row"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param inout name "sorter" type class_ref 1269250 // DefaultRowSorter
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10502018 "compareTo"
	  cpp_inline public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 1270018 // Row
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4078338 // viewToModel (<unidirectional association>)
	relation 4078338 --->
	  a role_name "viewToModel" multiplicity "[]" private
	    comment "
View (JTable) -> model.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4078338 // viewToModel (<unidirectional association>)
	  b parent class_ref 1270018 // Row
      end

      attribute 2389762 "modelToView"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "model -> view (JTable)

"
      end

      classrelation 4078466 // comparators (<unidirectional association>)
	relation 4078466 --->
	  a role_name "comparators" multiplicity "[]" private
	    comment "
Comparators specified by column.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4078466 // comparators (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      attribute 2389890 "isSortable"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not the specified column is sortable, by column.

"
      end

      classrelation 4078594 // cachedSortKeys (<unidirectional association>)
	relation 4078594 --->
	  a role_name "cachedSortKeys" multiplicity "[]" private
	    comment "
Cached SortKeys for the current sort.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4078594 // cachedSortKeys (<unidirectional association>)
	  b parent class_ref 1269762 // SortKey
      end

      classrelation 4078722 // sortComparators (<unidirectional association>)
	relation 4078722 --->
	  a role_name "sortComparators" multiplicity "[]" private
	    comment "
Cached comparators for the current sort

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4078722 // sortComparators (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      classrelation 4078850 // filter (<unidirectional association>)
	relation 4078850 --->
	  a role_name "filter" private
	    comment "
Developer supplied Filter.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super M,? super I> ${name}${value};
"
	    classrelation_ref 4078850 // filter (<unidirectional association>)
	  b parent class_ref 1270146 // RowFilter
      end

      class 1270274 "FilterEntry"
	visibility private 
	nactuals 4
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	actual class class_ref 1270530 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 1270530 // Entry
	  rank 1 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4081026 // <realization>
	  relation 4081026 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4081026 // <realization>
	    b parent class_ref 1270530 // Entry
	end

	attribute 2391426 "modelIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The index into the model, set in getFilterEntry

"
	end

	operation 10501250 "getModel"
	  cpp_inline public explicit_return_type "M"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10501378 "getValueCount"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10501506 "getValue"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10501634 "getStringValue"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10501762 "getIdentifier"
	  cpp_inline public explicit_return_type "I"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4078978 // filterEntry (<unidirectional association>)
	relation 4078978 --->
	  a role_name "filterEntry" private
	    comment "
Value passed to the filter.  The same instance is passed to the
filter for different rows.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4078978 // filterEntry (<unidirectional association>)
	  b parent class_ref 1270274 // FilterEntry
      end

      classrelation 4079106 // sortKeys (<unidirectional association>)
	relation 4079106 --->
	  a role_name "sortKeys" private
	    comment "
The sort keys.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SortKey> ${name}${value};
"
	    classrelation_ref 4079106 // sortKeys (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      attribute 2390018 "useToString"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not to use getStringValueAt.  This is indexed by column.

"
      end

      attribute 2390146 "sorted"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates the contents are sorted.  This is used if
getSortsOnUpdates is false and an update event is received.

"
      end

      attribute 2390274 "maxSortKeys"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maximum number of sort keys.

"
      end

      class 1270402 "ModelWrapper"
	abstract visibility protected 
	nformals 2
	formal name "M" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "I" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 10496514 "ModelWrapper"
	  cpp_inline protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new <code>ModelWrapper</code>.
"
	end

	operation 10496642 "getModel"
	  abstract cpp_inline public explicit_return_type "M"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the underlying model that this <code>Model</code> is
wrapping.

@return the underlying model
"
	end

	operation 10496770 "getColumnCount"
	  abstract cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of columns in the model.

@return the number of columns in the model
"
	end

	operation 10496898 "getRowCount"
	  abstract cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of rows in the model.

@return the number of rows in the model
"
	end

	operation 10497026 "getValueAt"
	  abstract cpp_inline public return_type class_ref 129538 // Object
	  nparams 2
	    param in name "row" explicit_type "int"
	    param in name "column" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value at the specified index.

@param row the row index
@param column the column index
@return the value at the specified index
@throws IndexOutOfBoundsException if the indices are outside
        the range of the model
"
	end

	operation 10497154 "getStringValueAt"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 2
	    param in name "row" explicit_type "int"
	    param in name "column" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value as a <code>String</code> at the specified
index.  This implementation uses <code>toString</code> on
the result from <code>getValueAt</code> (making sure
to return an empty string for null values).  Subclasses that
override this method should never return null.

@param row the row index
@param column the column index
@return the value at the specified index as a <code>String</code>
@throws IndexOutOfBoundsException if the indices are outside
        the range of the model
"
	end

	operation 10497282 "getIdentifier"
	  abstract cpp_inline public explicit_return_type "I"
	  nparams 1
	    param in name "row" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the identifier for the specified row.  The return value
of this is used as the identifier for the
<code>RowFilter.Entry</code> that is passed to the
<code>RowFilter</code>.

@param row the row to return the identifier for, in terms of
           the underlying model
@return the identifier
@see RowFilter.Entry#getIdentifier
"
	end
      end

      classrelation 4079234 // modelWrapper (<unidirectional association>)
	relation 4079234 --->
	  a role_name "modelWrapper" private
	    comment "
Provides access to the data we're sorting/filtering.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<M,I> ${name}${value};
"
	    classrelation_ref 4079234 // modelWrapper (<unidirectional association>)
	  b parent class_ref 1270402 // ModelWrapper
      end

      attribute 2390402 "modelRowCount"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Size of the model. This is used to enforce error checking within
the table changed notification methods (such as rowsInserted).

"
      end

      operation 10489858 "DefaultRowSorter"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty <code>DefaultRowSorter</code>.
"
      end

      operation 10489986 "setModelWrapper"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "modelWrapper" type class_ref 1270402 // ModelWrapper
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<M,I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model wrapper providing the data that is being sorted and
filtered.

@param modelWrapper the model wrapper responsible for providing the
        data that gets sorted and filtered
@throws IllegalArgumentException if {@code modelWrapper} is
        {@code null}
"
      end

      operation 10490114 "getModelWrapper"
	cpp_inline protected return_type class_ref 1270402 // ModelWrapper
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<M,I> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model wrapper providing the data that is being sorted and
filtered.

@return the model wrapper responsible for providing the data that
        gets sorted and filtered
"
      end

      operation 10490242 "getModel"
	cpp_inline public explicit_return_type "M"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the underlying model.

@return the underlying model
"
      end

      operation 10490370 "setSortable"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "column" explicit_type "int"
	  param inout name "sortable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not the specified column is sortable.  The specified
value is only checked when <code>toggleSortOrder</code> is invoked.
It is still possible to sort on a column that has been marked as
unsortable by directly setting the sort keys.  The default is
true.

@param column the column to enable or disable sorting on, in terms
       of the underlying model
@param sortable whether or not the specified column is sortable
@throws IndexOutOfBoundsException if <code>column</code> is outside
        the range of the model
@see #toggleSortOrder
@see #setSortKeys
"
      end

      operation 10490498 "isSortable"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified column is sortable; otherwise, false.

@param column the column to check sorting for, in terms of the
       underlying model
@return true if the column is sortable
@throws IndexOutOfBoundsException if column is outside
        the range of the underlying model
"
      end

      operation 10490626 "setSortKeys"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "sortKeys" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends SortKey> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the sort keys. This creates a copy of the supplied
{@code List}; subsequent changes to the supplied
{@code List} do not effect this {@code DefaultRowSorter}.
If the sort keys have changed this triggers a sort.

@param sortKeys the new <code>SortKeys</code>; <code>null</code>
       is a shorthand for specifying an empty list,
       indicating that the view should be unsorted
@throws IllegalArgumentException if any of the values in
        <code>sortKeys</code> are null or have a column index outside
        the range of the model
"
      end

      operation 10490754 "getSortKeys"
	cpp_inline public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends SortKey> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current sort keys.  This returns an unmodifiable
{@code non-null List}. If you need to change the sort keys,
make a copy of the returned {@code List}, mutate the copy
and invoke {@code setSortKeys} with the new list.

@return the current sort order
"
      end

      operation 10490882 "setMaxSortKeys"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum number of sort keys.  The number of sort keys
determines how equal values are resolved when sorting.  For
example, assume a table row sorter is created and
<code>setMaxSortKeys(2)</code> is invoked on it. The user
clicks the header for column 1, causing the table rows to be
sorted based on the items in column 1.  Next, the user clicks
the header for column 2, causing the table to be sorted based
on the items in column 2; if any items in column 2 are equal,
then those particular rows are ordered based on the items in
column 1. In this case, we say that the rows are primarily
sorted on column 2, and secondarily on column 1.  If the user
then clicks the header for column 3, then the items are
primarily sorted on column 3 and secondarily sorted on column
2.  Because the maximum number of sort keys has been set to 2
with <code>setMaxSortKeys</code>, column 1 no longer has an
effect on the order.
<p>
The maximum number of sort keys is enforced by
<code>toggleSortOrder</code>.  You can specify more sort
keys by invoking <code>setSortKeys</code> directly and they will
all be honored.  However if <code>toggleSortOrder</code> is subsequently
invoked the maximum number of sort keys will be enforced.
The default value is 3.

@param max the maximum number of sort keys
@throws IllegalArgumentException if <code>max</code> &lt; 1
"
      end

      operation 10491010 "getMaxSortKeys"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of sort keys.

@return the maximum number of sort keys
"
      end

      operation 10491138 "setSortsOnUpdates"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "sortsOnUpdates" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If true, specifies that a sort should happen when the underlying
model is updated (<code>rowsUpdated</code> is invoked).  For
example, if this is true and the user edits an entry the
location of that item in the view may change.  The default is
false.

@param sortsOnUpdates whether or not to sort on update events
"
      end

      operation 10491266 "getSortsOnUpdates"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if  a sort should happen when the underlying
model is updated; otherwise, returns false.

@return whether or not to sort when the model is updated
"
      end

      operation 10491394 "setRowFilter"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 1270146 // RowFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super M,? super I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the filter that determines which rows, if any, should be
hidden from the view.  The filter is applied before sorting.  A value
of <code>null</code> indicates all values from the model should be
included.
<p>
<code>RowFilter</code>'s <code>include</code> method is passed an
<code>Entry</code> that wraps the underlying model.  The number
of columns in the <code>Entry</code> corresponds to the
number of columns in the <code>ModelWrapper</code>.  The identifier
comes from the <code>ModelWrapper</code> as well.
<p>
This method triggers a sort.

@param filter the filter used to determine what entries should be
       included
"
      end

      operation 10491522 "getRowFilter"
	cpp_inline public return_type class_ref 1270146 // RowFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super M,? super I> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the filter that determines which rows, if any, should
be hidden from view.

@return the filter
"
      end

      operation 10491650 "toggleSortOrder"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the sort order from ascending to descending (or
descending to ascending) if the specified column is already the
primary sorted column; otherwise, makes the specified column
the primary sorted column, with an ascending sort order.  If
the specified column is not sortable, this method has no
effect.

@param column index of the column to make the primary sorted column,
       in terms of the underlying model
@throws IndexOutOfBoundsException {@inheritDoc}
@see #setSortable(int,boolean)
@see #setMaxSortKeys(int)
"
      end

      operation 10491778 "toggle"
	cpp_inline private return_type class_ref 1269762 // SortKey
	nparams 1
	  param inout name "key" type class_ref 1269762 // SortKey
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10491906 "convertRowIndexToView"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 10492034 "convertRowIndexToModel"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 10492162 "isUnsorted"
	cpp_inline private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10492290 "sortExistingData"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts the existing filtered data.  This should only be used if
the filter hasn't changed.
"
      end

      operation 10492418 "sort"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sorts and filters the rows in the view based on the sort keys
of the columns currently being sorted and the filter, if any,
associated with this sorter.  An empty <code>sortKeys</code> list
indicates that the view should unsorted, the same as the model.

@see #setRowFilter
@see #setSortKeys
"
      end

      operation 10492546 "updateUseToString"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the useToString mapping before a sort.
"
      end

      operation 10492674 "initializeFilteredMapping"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the viewToModel and modelToView mappings based on
the current Filter.
"
      end

      operation 10492802 "createModelToView"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "rowCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes sure the modelToView array is of size rowCount.
"
      end

      operation 10492930 "createViewToModel"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "rowCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the viewToModel array to be of size rowCount.
"
      end

      operation 10493058 "cacheSortKeys"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "keys" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends SortKey> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Caches the sort keys before a sort.
"
      end

      operation 10493186 "useToString"
	cpp_inline protected explicit_return_type "boolean"
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not to convert the value to a string before
doing comparisons when sorting.  If true
<code>ModelWrapper.getStringValueAt</code> will be used, otherwise
<code>ModelWrapper.getValueAt</code> will be used.  It is up to
subclasses, such as <code>TableRowSorter</code>, to honor this value
in their <code>ModelWrapper</code> implementation.

@param column the index of the column to test, in terms of the
       underlying model
@throws IndexOutOfBoundsException if <code>column</code> is not valid
"
      end

      operation 10493314 "setModelToViewFromViewToModel"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "unsetFirst" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refreshes the modelToView mapping from that of viewToModel.
If <code>unsetFirst</code> is true, all indices in modelToView are
first set to -1.
"
      end

      operation 10493442 "getViewToModelAsInts"
	cpp_inline private explicit_return_type "int"
	nparams 1
	  param inout name "viewToModel" type class_ref 1270018 // Row
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10493570 "setComparator"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "column" explicit_type "int"
	  param inout name "comparator" type class_ref 184962 // Comparator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Comparator</code> to use when sorting the specified
column.  This does not trigger a sort.  If you want to sort after
setting the comparator you need to explicitly invoke <code>sort</code>.

@param column the index of the column the <code>Comparator</code> is
       to be used for, in terms of the underlying model
@param comparator the <code>Comparator</code> to use
@throws IndexOutOfBoundsException if <code>column</code> is outside
        the range of the underlying model
"
      end

      operation 10493698 "getComparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Comparator</code> for the specified
column.  This will return <code>null</code> if a <code>Comparator</code>
has not been specified for the column.

@param column the column to fetch the <code>Comparator</code> for, in
       terms of the underlying model
@return the <code>Comparator</code> for the specified column
@throws IndexOutOfBoundsException if column is outside
        the range of the underlying model
"
      end

      operation 10493826 "getComparator0"
	cpp_inline private return_type class_ref 184962 // Comparator
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the Comparator to use during sorting.  Where as
 getComparator() may return null, this will never return null."
      end

      operation 10493954 "getFilterEntry"
	cpp_inline private return_type class_ref 1270530 // Entry
	nparams 1
	  param in name "modelIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<M,I> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10494082 "getViewRowCount"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10494210 "getModelRowCount"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10494338 "allChanged"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10494466 "modelStructureChanged"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10494594 "allRowsChanged"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10494722 "rowsInserted"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 10494850 "rowsDeleted"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 10494978 "rowsUpdated"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 10495106 "rowsUpdated"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 10495234 "checkAgainstModel"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10495362 "include"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param in name "row" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified row should be included.
"
      end

      operation 10495490 "compare"
	cpp_inline private explicit_return_type "int"
	nparams 2
	  param in name "model1" explicit_type "int"
	  param in name "model2" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 10495618 "isTransformed"
	cpp_inline private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether not we are filtering/sorting.
"
      end

      operation 10495746 "insertInOrder"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "toAdd" type class_ref 175362 // List
	  param inout name "current" type class_ref 1270018 // Row
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Row> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insets new set of entries.

@param toAdd the Rows to add, sorted
@param current the array to insert the items into
"
      end

      operation 10495874 "shouldOptimizeChange"
	cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if we should try and optimize the processing of the
<code>TableModelEvent</code>.  If this returns false, assume the
event was dealt with and no further processing needs to happen.
"
      end

      operation 10496002 "rowsInserted0"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10496130 "rowsDeleted0"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10496258 "rowsUpdated0"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10496386 "checkColumn"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1269378 "RowSorter"
      abstract visibility public 
      nformals 1
      formal name "M" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>RowSorter</code> provides the basis for sorting and filtering.
Beyond creating and installing a <code>RowSorter</code>, you very rarely
need to interact with one directly.  Refer to
{@link javax.swing.table.TableRowSorter TableRowSorter} for a concrete
implementation of <code>RowSorter</code> for <code>JTable</code>.
<p>
<code>RowSorter</code>'s primary role is to provide a mapping between
two coordinate systems: that of the view (for example a
<code>JTable</code>) and that of the underlying data source, typically a
model.
<p>
The view invokes the following methods on the <code>RowSorter</code>:
<ul>
<li><code>toggleSortOrder</code> &#151; The view invokes this when the
    appropriate user gesture has occurred to trigger a sort.  For example,
    the user clicked a column header in a table.
<li>One of the model change methods &#151; The view invokes a model
    change method when the underlying model
    has changed.  There may be order dependencies in how the events are
    delivered, so a <code>RowSorter</code> should not update its mapping
    until one of these methods is invoked.
</ul>
Because the view makes extensive use of  the
<code>convertRowIndexToModel</code>,
<code>convertRowIndexToView</code> and <code>getViewRowCount</code> methods,
these methods need to be fast.
<p>
<code>RowSorter</code> provides notification of changes by way of
<code>RowSorterListener</code>.  Two types of notification are sent:
<ul>
<li><code>RowSorterEvent.Type.SORT_ORDER_CHANGED</code> &#151; notifies
    listeners that the sort order has changed.  This is typically followed
    by a notification that the sort has changed.
<li><code>RowSorterEvent.Type.SORTED</code> &#151; notifies listeners that
    the mapping maintained by the <code>RowSorter</code> has changed in
    some way.
</ul>
<code>RowSorter</code> implementations typically don't have a one-to-one
mapping with the underlying model, but they can.
For example, if a database does the sorting,
<code>toggleSortOrder</code> might call through to the database
(on a background thread), and override the mapping methods to return the
argument that is passed in.
<p>
Concrete implementations of <code>RowSorter</code>
need to reference a model such as <code>TableModel</code> or
<code>ListModel</code>.  The view classes, such as
<code>JTable</code> and <code>JList</code>, will also have a
reference to the model.  To avoid ordering dependencies,
<code>RowSorter</code> implementations should not install a
listener on the model.  Instead the view class will call into the
<code>RowSorter</code> when the model changes.  For
example, if a row is updated in a <code>TableModel</code>
<code>JTable</code> invokes <code>rowsUpdated</code>.
When the model changes, the view may call into any of the following methods:
<code>modelStructureChanged</code>, <code>allRowsChanged</code>,
<code>rowsInserted</code>, <code>rowsDeleted</code> and
<code>rowsUpdated</code>.

@param <M> the type of the underlying model
@see javax.swing.table.TableRowSorter
@since 1.6
"
      classrelation 4077954 // listenerList (<unidirectional association>)
	relation 4077954 --->
	  a role_name "listenerList" init_value " new EventListenerList()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4077954 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      operation 10486658 "RowSorter"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>RowSorter</code>.
"
      end

      operation 10486786 "getModel"
	abstract cpp_inline public explicit_return_type "M"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the underlying model.

@return the underlying model
"
      end

      operation 10486914 "toggleSortOrder"
	abstract cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "column" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the sort order of the specified column.  It is up to
subclasses to provide the exact behavior when invoked.  Typically
this will reverse the sort order from ascending to descending (or
descending to ascending) if the specified column is already the
primary sorted column; otherwise, makes the specified column
the primary sorted column, with an ascending sort order.  If
the specified column is not sortable, this method has no
effect.
<p>
If this results in changing the sort order and sorting, the
appropriate <code>RowSorterListener</code> notification will be
sent.

@param column the column to toggle the sort ordering of, in
       terms of the underlying model
@throws IndexOutOfBoundsException if column is outside the range of
        the underlying model
"
      end

      operation 10487042 "convertRowIndexToModel"
	abstract cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location of <code>index</code> in terms of the
underlying model.  That is, for the row <code>index</code> in
the coordinates of the view this returns the row index in terms
of the underlying model.

@param index the row index in terms of the underlying view
@return row index in terms of the view
@throws IndexOutOfBoundsException if <code>index</code> is outside the
        range of the view
"
      end

      operation 10487170 "convertRowIndexToView"
	abstract cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location of <code>index</code> in terms of the
view.  That is, for the row <code>index</code> in the
coordinates of the underlying model this returns the row index
in terms of the view.

@param index the row index in terms of the underlying model
@return row index in terms of the view, or -1 if index has been
        filtered out of the view
@throws IndexOutOfBoundsException if <code>index</code> is outside
        the range of the model
"
      end

      operation 10487298 "setSortKeys"
	abstract cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "keys" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends SortKey> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current sort keys.

@param keys the new <code>SortKeys</code>; <code>null</code>
       is a shorthand for specifying an empty list,
       indicating that the view should be unsorted
"
      end

      operation 10487426 "getSortKeys"
	abstract cpp_inline public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends SortKey> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current sort keys.  This must return a {@code
non-null List} and may return an unmodifiable {@code List}. If
you need to change the sort keys, make a copy of the returned
{@code List}, mutate the copy and invoke {@code setSortKeys}
with the new list.

@return the current sort order
"
      end

      operation 10487554 "getViewRowCount"
	abstract cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows in the view.  If the contents have
been filtered this might differ from the row count of the
underlying model.

@return number of rows in the view
@see #getModelRowCount
"
      end

      operation 10487682 "getModelRowCount"
	abstract cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows in the underlying model.

@return number of rows in the underlying model
@see #getViewRowCount
"
      end

      operation 10487810 "modelStructureChanged"
	abstract cpp_inline public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the underlying model structure has completely
changed.  For example, if the number of columns in a
<code>TableModel</code> changed, this method would be invoked.
<p>
You normally do not call this method.  This method is public
to allow view classes to call it.
"
      end

      operation 10487938 "allRowsChanged"
	abstract cpp_inline public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the contents of the underlying model have
completely changed. The structure of the table is the same,
only the contents have changed. This is typically sent when it
is too expensive to characterize the change in terms of the
other methods.
<p>
You normally do not call this method.  This method is public
to allow view classes to call it.
"
      end

      operation 10488066 "rowsInserted"
	abstract cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when rows have been inserted into the underlying model
in the specified range (inclusive).
<p>
The arguments give the indices of the effected range.
The first argument is in terms of the model before the change, and
must be less than or equal to the size of the model before the change.
The second argument is in terms of the model after the change and must
be less than the size of the model after the change. For example,
if you have a 5-row model and add 3 items to the end of the model
the indices are 5, 7.
<p>
You normally do not call this method.  This method is public
to allow view classes to call it.

@param firstRow the first row
@param endRow the last row
@throws IndexOutOfBoundsException if either argument is invalid, or
        <code>firstRow</code> &gt; <code>endRow</code>
"
      end

      operation 10488194 "rowsDeleted"
	abstract cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when rows have been deleted from the underlying model
in the specified range (inclusive).
<p>
The arguments give the indices of the effected range and
are in terms of the model <b>before</b> the change.
For example, if you have a 5-row model and delete 3 items from the end
of the model the indices are 2, 4.
<p>
You normally do not call this method.  This method is public
to allow view classes to call it.

@param firstRow the first row
@param endRow the last row
@throws IndexOutOfBoundsException if either argument is outside
        the range of the model before the change, or
        <code>firstRow</code> &gt; <code>endRow</code>
"
      end

      operation 10488322 "rowsUpdated"
	abstract cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when rows have been changed in the underlying model
between the specified range (inclusive).
<p>
You normally do not call this method.  This method is public
to allow view classes to call it.

@param firstRow the first row, in terms of the underlying model
@param endRow the last row, in terms of the underlying model
@throws IndexOutOfBoundsException if either argument is outside
        the range of the underlying model, or
        <code>firstRow</code> &gt; <code>endRow</code>
"
      end

      operation 10488450 "rowsUpdated"
	abstract cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "firstRow" explicit_type "int"
	  param in name "endRow" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the column in the rows have been updated in
the underlying model between the specified range.
<p>
You normally do not call this method.  This method is public
to allow view classes to call it.

@param firstRow the first row, in terms of the underlying model
@param endRow the last row, in terms of the underlying model
@param column the column that has changed, in terms of the underlying
       model
@throws IndexOutOfBoundsException if either argument is outside
        the range of the underlying model after the change,
        <code>firstRow</code> &gt; <code>endRow</code>, or
        <code>column</code> is outside the range of the underlying
         model
"
      end

      operation 10488578 "addRowSorterListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1269506 // RowSorterListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>RowSorterListener</code> to receive notification
about this <code>RowSorter</code>.  If the same
listener is added more than once it will receive multiple
notifications.  If <code>l</code> is <code>null</code> nothing
is done.

@param l the <code>RowSorterListener</code>
"
      end

      operation 10488706 "removeRowSorterListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1269506 // RowSorterListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>RowSorterListener</code>.  If
<code>l</code> is <code>null</code> nothing is done.

@param l the <code>RowSorterListener</code>
"
      end

      operation 10488834 "fireSortOrderChanged"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies listener that the sort order has changed.
"
      end

      operation 10488962 "fireRowSorterChanged"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "lastRowIndexToModel" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies listener that the mapping has changed.

@param lastRowIndexToModel the mapping from model indices to
       view indices prior to the sort, may be <code>null</code>
"
      end

      operation 10489090 "fireRowSorterChanged"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1269634 // RowSorterEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1269762 "SortKey"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2389506 "column"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4078082 // sortOrder (<unidirectional association>)
	  relation 4078082 --->
	    a role_name "sortOrder" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4078082 // sortOrder (<unidirectional association>)
	    b parent class_ref 1269890 // SortOrder
	end

	operation 10489218 "SortKey"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param in name "column" explicit_type "int"
	    param inout name "sortOrder" type class_ref 1269890 // SortOrder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>SortKey</code> for the specified column with
the specified sort order.

@param column index of the column, in terms of the model
@param sortOrder the sorter order
@throws IllegalArgumentException if <code>sortOrder</code> is
        <code>null</code>
"
	end

	operation 10489346 "getColumn"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the index of the column.

@return index of column
"
	end

	operation 10489474 "getSortOrder"
	  cpp_inline public return_type class_ref 1269890 // SortOrder
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the sort order of the column.

@return the sort order of the column
"
	end

	operation 10489602 "hashCode"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the hash code for this <code>SortKey</code>.

@return hash code
"
	end

	operation 10489730 "equals"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if this object equals the specified object.
If the specified object is a <code>SortKey</code> and
references the same column and sort order, the two objects
are equal.

@param o the object to compare to
@return true if <code>o</code> is equal to this <code>SortKey</code>
"
	end
      end
    end

    class 1269890 "SortOrder"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "SortOrder is an enumeration of the possible sort orderings.

@see RowSorter
@since 1.6
"
      attribute 2437122 "ASCENDING"
	public type class_ref 1269890 // SortOrder
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enumeration value indicating the items are sorted in increasing order.
For example, the set <code>1, 4, 0</code> sorted in
<code>ASCENDING</code> order is <code>0, 1, 4</code>.

"
      end

      attribute 2437250 "DESCENDING"
	public type class_ref 1269890 // SortOrder
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enumeration value indicating the items are sorted in decreasing order.
For example, the set <code>1, 4, 0</code> sorted in
<code>DESCENDING</code> order is <code>4, 1, 0</code>.

"
      end

      attribute 2437378 "UNSORTED"
	public type class_ref 1269890 // SortOrder
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enumeration value indicating the items are unordered.
For example, the set <code>1, 4, 0</code> in
<code>UNSORTED</code> order is <code>1, 4, 0</code>.
"
      end
    end

    class 1270146 "RowFilter"
      abstract visibility public 
      nformals 2
      formal name "M" type "" explicit_default_value ""
        explicit_extends ""
      formal name "I" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>RowFilter</code> is used to filter out entries from the
model so that they are not shown in the view.  For example, a
<code>RowFilter</code> associated with a <code>JTable</code> might
only allow rows that contain a column with a specific string. The
meaning of <em>entry</em> depends on the component type.
For example, when a filter is
associated with a <code>JTable</code>, an entry corresponds to a
row; when associated with a <code>JTree</code>, an entry corresponds
to a node.
<p>
Subclasses must override the <code>include</code> method to
indicate whether the entry should be shown in the
view.  The <code>Entry</code> argument can be used to obtain the values in
each of the columns in that entry.  The following example shows an
<code>include</code> method that allows only entries containing one or
more values starting with the string \"a\":
<pre>
RowFilter&lt;Object,Object&gt; startsWithAFilter = new RowFilter&lt;Object,Object&gt;() {
  public boolean include(Entry&lt;? extends Object, ? extends Object&gt; entry) {
    for (int i = entry.getValueCount() - 1; i &gt;= 0; i--) {
      if (entry.getStringValue(i).startsWith(\"a\")) {
        // The value starts with \"a\", include it
        return true;
      }
    }
    // None of the columns start with \"a\"; return false so that this
    // entry is not shown
    return false;
  }
};
</pre>
<code>RowFilter</code> has two formal type parameters that allow
you to create a <code>RowFilter</code> for a specific model. For
example, the following assumes a specific model that is wrapping
objects of type <code>Person</code>.  Only <code>Person</code>s
with an age over 20 will be shown:
<pre>
RowFilter&lt;PersonModel,Integer&gt; ageFilter = new RowFilter&lt;PersonModel,Integer&gt;() {
  public boolean include(Entry&lt;? extends PersonModel, ? extends Integer&gt; entry) {
    PersonModel personModel = entry.getModel();
    Person person = personModel.getPerson(entry.getIdentifier());
    if (person.getAge() &gt; 20) {
      // Returning true indicates this row should be shown.
      return true;
    }
    // Age is &lt;= 20, don't show it.
    return false;
  }
};
PersonModel model = createPersonModel();
TableRowSorter&lt;PersonModel&gt; sorter = new TableRowSorter&lt;PersonModel&gt;(model);
sorter.setRowFilter(ageFilter);
</pre>

@param <M> the type of the model; for example <code>PersonModel</code>
@param <I> the type of the identifier; when using
           <code>TableRowSorter</code> this will be <code>Integer</code>
@see javax.swing.table.TableRowSorter
@since 1.6
"
      class 1270530 "Entry"
	abstract visibility public 
	nformals 2
	formal name "M" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "I" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 10498434 "Entry"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an <code>Entry</code>.
"
	end

	operation 10498562 "getModel"
	  abstract cpp_inline public explicit_return_type "M"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the underlying model.

@return the model containing the data that this entry represents
"
	end

	operation 10498690 "getValueCount"
	  abstract cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of values in the entry.  For
example, when used with a table this corresponds to the
number of columns.

@return number of values in the object being filtered
"
	end

	operation 10498818 "getValue"
	  abstract cpp_inline public return_type class_ref 129538 // Object
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value at the specified index.  This may return
<code>null</code>.  When used with a table, index
corresponds to the column number in the model.

@param index the index of the value to get
@return value at the specified index
@throws IndexOutOfBoundsException if index &lt; 0 or
        &gt;= getValueCount
"
	end

	operation 10498946 "getStringValue"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the string value at the specified index.  If
filtering is being done based on <code>String</code> values
this method is preferred to that of <code>getValue</code>
as <code>getValue(index).toString()</code> may return a
different result than <code>getStringValue(index)</code>.
<p>
This implementation calls <code>getValue(index).toString()</code>
after checking for <code>null</code>.  Subclasses that provide
different string conversion should override this method if
necessary.

@param index the index of the value to get
@return {@code non-null} string at the specified index
@throws IndexOutOfBoundsException if index &lt; 0 ||
        &gt;= getValueCount
"
	end

	operation 10499074 "getIdentifier"
	  abstract cpp_inline public explicit_return_type "I"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the identifer (in the model) of the entry.
For a table this corresponds to the index of the row in the model,
expressed as an <code>Integer</code>.

@return a model-based (not view-based) identifier for
        this entry
"
	end
      end

      class 1270658 "ComparisonType"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2390530 "BEFORE"
	  public type class_ref 1270658 // ComparisonType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates that entries with a value before the supplied
value should be included.

"
	end

	attribute 2390658 "AFTER"
	  public type class_ref 1270658 // ComparisonType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates that entries with a value after the supplied
value should be included.

"
	end

	attribute 2390786 "EQUAL"
	  public type class_ref 1270658 // ComparisonType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates that entries with a value equal to the supplied
value should be included.

"
	end

	attribute 2390914 "NOT_EQUAL"
	  public type class_ref 1270658 // ComparisonType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates that entries with a value not equal to the supplied
value should be included.
"
	end
      end

      operation 10497410 "checkIndices"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "columns" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws an IllegalArgumentException if any of the values in
columns are {@literal <} 0.
"
      end

      operation 10497538 "regexFilter"
	class_operation cpp_inline public return_type class_ref 1270146 // RowFilter
	nparams 2
	  param inout name "regex" type class_ref 128130 // String
	  param inout name "" explicit_type "int...indices"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<M,I> ${type}<M,I> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>RowFilter</code> that uses a regular
expression to determine which entries to include.  Only entries
with at least one matching value are included.  For
example, the following creates a <code>RowFilter</code> that
includes entries with at least one value starting with
\"a\":
<pre>
  RowFilter.regexFilter(\"^a\");
</pre>
<p>
The returned filter uses {@link java.util.regex.Matcher#find}
to test for inclusion.  To test for exact matches use the
characters '^' and '$' to match the beginning and end of the
string respectively.  For example, \"^foo$\" includes only rows whose
string is exactly \"foo\" and not, for example, \"food\".  See
{@link java.util.regex.Pattern} for a complete description of
the supported regular-expression constructs.

@param regex the regular expression to filter on
@param indices the indices of the values to check.  If not supplied all
              values are evaluated
@return a <code>RowFilter</code> implementing the specified criteria
@throws NullPointerException if <code>regex</code> is
        <code>null</code>
@throws IllegalArgumentException if any of the <code>indices</code>
        are &lt; 0
@throws PatternSyntaxException if <code>regex</code> is
        not a valid regular expression.
@see java.util.regex.Pattern
"
      end

      operation 10497666 "dateFilter"
	class_operation cpp_inline public return_type class_ref 1270146 // RowFilter
	nparams 3
	  param inout name "type" type class_ref 1270658 // ComparisonType
	  param inout name "date" type class_ref 521474 // Date
	  param inout name "" explicit_type "int...indices"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<M,I> ${type}<M,I> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>RowFilter</code> that includes entries that
have at least one <code>Date</code> value meeting the specified
criteria.  For example, the following <code>RowFilter</code> includes
only entries with at least one date value after the current date:
<pre>
  RowFilter.dateFilter(ComparisonType.AFTER, new Date());
</pre>

@param type the type of comparison to perform
@param date the date to compare against
@param indices the indices of the values to check.  If not supplied all
              values are evaluated
@return a <code>RowFilter</code> implementing the specified criteria
@throws NullPointerException if <code>date</code> is
         <code>null</code>
@throws IllegalArgumentException if any of the <code>indices</code>
        are &lt; 0 or <code>type</code> is
        <code>null</code>
@see java.util.Calendar
@see java.util.Date
"
      end

      operation 10497794 "numberFilter"
	class_operation cpp_inline public return_type class_ref 1270146 // RowFilter
	nparams 3
	  param inout name "type" type class_ref 1270658 // ComparisonType
	  param inout name "number" type class_ref 398210 // Number
	  param inout name "" explicit_type "int...indices"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<M,I> ${type}<M,I> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>RowFilter</code> that includes entries that
have at least one <code>Number</code> value meeting the
specified criteria.  For example, the following
filter will only include entries with at
least one number value equal to 10:
<pre>
  RowFilter.numberFilter(ComparisonType.EQUAL, 10);
</pre>

@param type the type of comparison to perform
@param indices the indices of the values to check.  If not supplied all
              values are evaluated
@return a <code>RowFilter</code> implementing the specified criteria
@throws IllegalArgumentException if any of the <code>indices</code>
        are &lt; 0, <code>type</code> is <code>null</code>
        or <code>number</code> is <code>null</code>
"
      end

      operation 10497922 "orFilter"
	class_operation cpp_inline public return_type class_ref 1270146 // RowFilter
	nparams 1
	  param inout name "filters" type class_ref 184322 // Iterable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<M,I> ${type}<M,I> ${name}${(}${t0}<? extends RowFilter<? super M, ? super I>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>RowFilter</code> that includes entries if any
of the supplied filters includes the entry.
<p>
The following example creates a <code>RowFilter</code> that will
include any entries containing the string \"foo\" or the string
\"bar\":
<pre>
  List&lt;RowFilter&lt;Object,Object&gt;&gt; filters = new ArrayList&lt;RowFilter&lt;Object,Object&gt;&gt;(2);
  filters.add(RowFilter.regexFilter(\"foo\"));
  filters.add(RowFilter.regexFilter(\"bar\"));
  RowFilter&lt;Object,Object&gt; fooBarFilter = RowFilter.orFilter(filters);
</pre>

@param filters the <code>RowFilter</code>s to test
@throws IllegalArgumentException if any of the filters
        are <code>null</code>
@throws NullPointerException if <code>filters</code> is null
@return a <code>RowFilter</code> implementing the specified criteria
@see java.util.Arrays#asList
"
      end

      operation 10498050 "andFilter"
	class_operation cpp_inline public return_type class_ref 1270146 // RowFilter
	nparams 1
	  param inout name "filters" type class_ref 184322 // Iterable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<M,I> ${type}<M,I> ${name}${(}${t0}<? extends RowFilter<? super M, ? super I>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>RowFilter</code> that includes entries if all
of the supplied filters include the entry.
<p>
The following example creates a <code>RowFilter</code> that will
include any entries containing the string \"foo\" and the string
\"bar\":
<pre>
  List&lt;RowFilter&lt;Object,Object&gt;&gt; filters = new ArrayList&lt;RowFilter&lt;Object,Object&gt;&gt;(2);
  filters.add(RowFilter.regexFilter(\"foo\"));
  filters.add(RowFilter.regexFilter(\"bar\"));
  RowFilter&lt;Object,Object&gt; fooBarFilter = RowFilter.andFilter(filters);
</pre>

@param filters the <code>RowFilter</code>s to test
@return a <code>RowFilter</code> implementing the specified criteria
@throws IllegalArgumentException if any of the filters
        are <code>null</code>
@throws NullPointerException if <code>filters</code> is null
@see java.util.Arrays#asList
"
      end

      operation 10498178 "notFilter"
	class_operation cpp_inline public return_type class_ref 1270146 // RowFilter
	nparams 1
	  param inout name "filter" type class_ref 1270146 // RowFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<M,I> ${type}<M,I> ${name}${(}${t0}<M,I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>RowFilter</code> that includes entries if the
supplied filter does not include the entry.

@param filter the <code>RowFilter</code> to negate
@return a <code>RowFilter</code> implementing the specified criteria
@throws IllegalArgumentException if <code>filter</code> is
        <code>null</code>
"
      end

      operation 10498306 "include"
	abstract cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "entry" type class_ref 1270530 // Entry
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends M, ? extends I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified entry should be shown;
returns false if the entry should be hidden.
<p>
The <code>entry</code> argument is valid only for the duration of
the invocation.  Using <code>entry</code> after the call returns
results in undefined behavior.

@param entry a non-<code>null</code> object that wraps the underlying
             object from the model
@return true if the entry should be shown
"
      end

      class 1270786 "GeneralFilter"
	abstract visibility private 
	nactuals 2
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4079362 // <realization>
	  relation 4079362 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4079362 // <realization>
	    b parent class_ref 1270146 // RowFilter
	end

	attribute 2391042 "columns"
	  private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10499202 "GeneralFilter"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "columns" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10499330 "include"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 1270530 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Object,? extends Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10499458 "include"
	  abstract cpp_inline protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "value" type class_ref 1270530 // Entry
	    param in name "index" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Object,? extends Object> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1270914 "RegexFilter"
	visibility private 
	nactuals 2
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4079490 // <generalisation>
	  relation 4079490 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4079490 // <generalisation>
	    b parent class_ref 1270786 // GeneralFilter
	end

	classrelation 4079618 // matcher (<unidirectional association>)
	  relation 4079618 --->
	    a role_name "matcher" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4079618 // matcher (<unidirectional association>)
	    b parent class_ref 834690 // Matcher
	end

	operation 10499586 "RegexFilter"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "regex" type class_ref 417154 // Pattern
	    param inout name "columns" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10499714 "include"
	  cpp_inline protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "value" type class_ref 1270530 // Entry
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Object,? extends Object> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1271042 "DateFilter"
	visibility private 
	nactuals 2
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4079746 // <generalisation>
	  relation 4079746 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4079746 // <generalisation>
	    b parent class_ref 1270786 // GeneralFilter
	end

	attribute 2391170 "date"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4079874 // type (<unidirectional association>)
	  relation 4079874 --->
	    a role_name "type" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4079874 // type (<unidirectional association>)
	    b parent class_ref 1270658 // ComparisonType
	end

	operation 10499842 "DateFilter"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "type" type class_ref 1270658 // ComparisonType
	    param in name "date" explicit_type "long"
	    param inout name "columns" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10499970 "include"
	  cpp_inline protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "value" type class_ref 1270530 // Entry
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Object,? extends Object> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1271170 "NumberFilter"
	visibility private 
	nactuals 2
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4080002 // <generalisation>
	  relation 4080002 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4080002 // <generalisation>
	    b parent class_ref 1270786 // GeneralFilter
	end

	attribute 2391298 "isComparable"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4080130 // number (<unidirectional association>)
	  relation 4080130 --->
	    a role_name "number" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4080130 // number (<unidirectional association>)
	    b parent class_ref 398210 // Number
	end

	classrelation 4080258 // type (<unidirectional association>)
	  relation 4080258 --->
	    a role_name "type" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4080258 // type (<unidirectional association>)
	    b parent class_ref 1270658 // ComparisonType
	end

	operation 10500098 "NumberFilter"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "type" type class_ref 1270658 // ComparisonType
	    param inout name "number" type class_ref 398210 // Number
	    param inout name "columns" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10500226 "include"
	  cpp_inline protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "value" type class_ref 1270530 // Entry
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Object,? extends Object> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 10500354 "longCompare"
	  cpp_inline private explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1271298 "OrFilter"
	visibility private 
	nformals 2
	formal name "M" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "I" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4080386 // <realization>
	  relation 4080386 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4080386 // <realization>
	    b parent class_ref 1270146 // RowFilter
	end

	classrelation 4080514 // filters (<unidirectional association>)
	  relation 4080514 --->
	    a role_name "filters" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RowFilter<? super M,? super I>> ${name}${value};
"
	      classrelation_ref 4080514 // filters (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 10500482 "OrFilter"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "filters" type class_ref 184322 // Iterable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends RowFilter<? super M, ? super I>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10500610 "include"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 1270530 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends M, ? extends I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1271426 "AndFilter"
	visibility private 
	nformals 2
	formal name "M" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "I" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	actual class class_ref 1271298 // OrFilter
	  rank 0 explicit_value ""
	actual class class_ref 1271298 // OrFilter
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4080642 // <realization>
	  relation 4080642 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4080642 // <realization>
	    b parent class_ref 1271298 // OrFilter
	end

	operation 10500738 "AndFilter"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "filters" type class_ref 184322 // Iterable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends RowFilter<? super M,? super I>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10500866 "include"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 1270530 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends M, ? extends I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1271554 "NotFilter"
	visibility private 
	nformals 2
	formal name "M" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "I" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 1270146 // RowFilter
	  rank 0 explicit_value ""
	actual class class_ref 1270146 // RowFilter
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4080770 // <realization>
	  relation 4080770 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4080770 // <realization>
	    b parent class_ref 1270146 // RowFilter
	end

	classrelation 4080898 // filter (<unidirectional association>)
	  relation 4080898 --->
	    a role_name "filter" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<M,I> ${name}${value};
"
	      classrelation_ref 4080898 // filter (<unidirectional association>)
	    b parent class_ref 1270146 // RowFilter
	end

	operation 10500994 "NotFilter"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "filter" type class_ref 1270146 // RowFilter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<M,I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10501122 "include"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 1270530 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends M, ? extends I> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1271682 "DefaultSingleSelectionModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A generic implementation of SingleSelectionModel.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Dave Moore
"
      classrelation 4081410 // <realization>
	relation 4081410 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4081410 // <realization>
	  b parent class_ref 393474 // SingleSelectionModel
      end

      classrelation 4081538 // <realization>
	relation 4081538 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4081538 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4081666 // changeEvent (<unidirectional association>)
	relation 4081666 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment " Only one ModelChangeEvent is needed per model instance since the
event's only (read-only) state is the source property.  The source
of events generated here is always \"this\".

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4081666 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      classrelation 4081794 // listenerList (<unidirectional association>)
	relation 4081794 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment " The collection of registered listeners 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4081794 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      attribute 2391682 "index"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10502914 "getSelectedIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.SingleSelectionModel"
      end

      operation 10503042 "setSelectedIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.SingleSelectionModel"
      end

      operation 10503170 "clearSelection"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.SingleSelectionModel"
      end

      operation 10503298 "isSelected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.SingleSelectionModel"
      end

      operation 10503426 "addChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>ChangeListener</code> to the button.
"
      end

      operation 10503554 "removeChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 359426 // ChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>ChangeListener</code> from the button.
"
      end

      operation 10503682 "getChangeListeners"
	public return_type class_ref 359426 // ChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the change listeners
registered on this <code>DefaultSingleSelectionModel</code>.

@return all of this model's <code>ChangeListener</code>s
        or an empty
        array if no change listeners are currently registered

@see #addChangeListener
@see #removeChangeListener

@since 1.4
"
      end

      operation 10503810 "fireStateChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is created lazily.
@see EventListenerList
"
      end

      operation 10503938 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered as
<code><em>Foo</em>Listener</code>s
upon this model.
<code><em>Foo</em>Listener</code>s
are registered using the <code>add<em>Foo</em>Listener</code> method.
<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as <code><em>Foo</em>Listener.class</code>.
For example, you can query a <code>DefaultSingleSelectionModel</code>
instance <code>m</code>
for its change listeners
with the following code:

<pre>ChangeListener[] cls = (ChangeListener[])(m.getListeners(ChangeListener.class));</pre>

If no such listeners exist,
this method returns an empty array.

@param listenerType  the type of listeners requested;
         this parameter should specify an interface
         that descends from <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s
         on this model,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code> doesn't
         specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getChangeListeners

@since 1.3
"
      end
    end

    class 1271810 "DelegatingDefaultFocusManager"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides a javax.swing.DefaultFocusManager view onto an arbitrary
java.awt.KeyboardFocusManager. We subclass DefaultFocusManager instead of
FocusManager because it seems more backward-compatible. It is likely that
some pre-1.4 code assumes that the object returned by
FocusManager.getCurrentManager is an instance of DefaultFocusManager unless
set explicitly.
"
      classrelation 4081922 // <generalisation>
	relation 4081922 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4081922 // <generalisation>
	  b parent class_ref 1267586 // DefaultFocusManager
      end

      classrelation 4082050 // delegate (<unidirectional association>)
	relation 4082050 --->
	  a role_name "delegate" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4082050 // delegate (<unidirectional association>)
	  b parent class_ref 861570 // KeyboardFocusManager
      end

      operation 10504066 "DelegatingDefaultFocusManager"
	package explicit_return_type ""
	nparams 1
	  param inout name "delegate" type class_ref 861570 // KeyboardFocusManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10504194 "getDelegate"
	package return_type class_ref 861570 // KeyboardFocusManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10504322 "processKeyEvent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "focusedComponent" type class_ref 338818 // Component
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Legacy methods which first appeared in javax.swing.FocusManager.
 Client code is most likely to invoke these methods."
      end

      operation 10504450 "focusNextComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10504578 "focusPreviousComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10504706 "getFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Make sure that we delegate all new methods in KeyboardFocusManager
 as well as the legacy methods from Swing. It is theoretically possible,
 although unlikely, that a client app will treat this instance as a
 new-style KeyboardFocusManager. We might as well be safe.

 The JLS won't let us override the protected methods in
 KeyboardFocusManager such that they invoke the corresponding methods on
 the delegate. However, since client code would never be able to call
 those methods anyways, we don't have to worry about that problem."
      end

      operation 10504834 "clearGlobalFocusOwner"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10504962 "getPermanentFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505090 "getFocusedWindow"
	public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505218 "getActiveWindow"
	public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505346 "getDefaultFocusTraversalPolicy"
	public return_type class_ref 349954 // FocusTraversalPolicy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505474 "setDefaultFocusTraversalPolicy"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultPolicy" type class_ref 349954 // FocusTraversalPolicy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505602 "setDefaultFocusTraversalKeys"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "keystrokes" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends AWTKeyStroke> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505730 "getDefaultFocusTraversalKeys"
	public return_type class_ref 192258 // Set
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505858 "getCurrentFocusCycleRoot"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10505986 "setGlobalCurrentFocusCycleRoot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newFocusCycleRoot" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10506114 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10506242 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10506370 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10506498 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10506626 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10506754 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10506882 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10507010 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10507138 "addKeyEventDispatcher"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dispatcher" type class_ref 861698 // KeyEventDispatcher
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10507266 "removeKeyEventDispatcher"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dispatcher" type class_ref 861698 // KeyEventDispatcher
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10507394 "dispatchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10507522 "dispatchKeyEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10507650 "upFocusCycle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10507778 "downFocusCycle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1271938 "GraphicsWrapper"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 10507906 "subGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10508034 "isClipIntersecting"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10508162 "getClipX"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10508290 "getClipY"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10508418 "getClipWidth"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10508546 "getClipHeight"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1272066 "GrayFilter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An image filter that \"disables\" an image by turning
it into a grayscale image, and brightening the pixels
in the image. Used by buttons to create an image for
a disabled button.

@author      Jeff Dinkins
@author      Tom Ball
@author      Jim Graham
"
      classrelation 4082178 // <generalisation>
	relation 4082178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4082178 // <generalisation>
	  b parent class_ref 379778 // RGBImageFilter
      end

      attribute 2392834 "brighter"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2392962 "percent"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10508674 "createDisabledImage"
	class_operation public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "i" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a disabled image
"
      end

      operation 10508802 "GrayFilter"
	public explicit_return_type ""
	nparams 2
	  param inout name "b" explicit_type "boolean"
	  param in name "p" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a GrayFilter object that filters a color image to a
grayscale image. Used by buttons to create disabled (\"grayed out\")
button images.

@param b  a boolean -- true if the pixels should be brightened
@param p  an int in the range 0..100 that determines the percentage
          of gray, where 100 is the darkest gray, and 0 is the lightest
"
      end

      operation 10508930 "filterRGB"
	public explicit_return_type "int"
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "rgb" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>RGBImageFilter.filterRGB</code>.
"
      end
    end

    class 1272194 "GroupLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code GroupLayout} is a {@code LayoutManager} that hierarchically
groups components in order to position them in a {@code Container}.
{@code GroupLayout} is intended for use by builders, but may be
hand-coded as well.
Grouping is done by instances of the {@link Group Group} class. {@code
GroupLayout} supports two types of groups. A sequential group
positions its child elements sequentially, one after another. A
parallel group aligns its child elements in one of four ways.
<p>
Each group may contain any number of elements, where an element is
a {@code Group}, {@code Component}, or gap. A gap can be thought
of as an invisible component with a minimum, preferred and maximum
size. In addition {@code GroupLayout} supports a preferred gap,
whose value comes from {@code LayoutStyle}.
<p>
Elements are similar to a spring. Each element has a range as
specified by a minimum, preferred and maximum.  Gaps have either a
developer-specified range, or a range determined by {@code
LayoutStyle}. The range for {@code Component}s is determined from
the {@code Component}'s {@code getMinimumSize}, {@code
getPreferredSize} and {@code getMaximumSize} methods. In addition,
when adding {@code Component}s you may specify a particular range
to use instead of that from the component. The range for a {@code
Group} is determined by the type of group. A {@code ParallelGroup}'s
range is the maximum of the ranges of its elements. A {@code
SequentialGroup}'s range is the sum of the ranges of its elements.
<p>
{@code GroupLayout} treats each axis independently.  That is, there
is a group representing the horizontal axis, and a group
representing the vertical axis.  The horizontal group is
responsible for determining the minimum, preferred and maximum size
along the horizontal axis as well as setting the x and width of the
components contained in it. The vertical group is responsible for
determining the minimum, preferred and maximum size along the
vertical axis as well as setting the y and height of the
components contained in it. Each {@code Component} must exist in both
a horizontal and vertical group, otherwise an {@code IllegalStateException}
is thrown during layout, or when the minimum, preferred or
maximum size is requested.
<p>
The following diagram shows a sequential group along the horizontal
axis. The sequential group contains three components. A parallel group
was used along the vertical axis.
<p style=\"text-align:center\">
<img src=\"doc-files/groupLayout.1.gif\" alt=\"Sequential group along the horizontal axis in three components\">
<p>
To reinforce that each axis is treated independently the diagram shows
the range of each group and element along each axis. The
range of each component has been projected onto the axes,
and the groups are rendered in blue (horizontal) and red (vertical).
For readability there is a gap between each of the elements in the
sequential group.
<p>
The sequential group along the horizontal axis is rendered as a solid
blue line. Notice the sequential group is the sum of the children elements
it contains.
<p>
Along the vertical axis the parallel group is the maximum of the height
of each of the components. As all three components have the same height,
the parallel group has the same height.
<p>
The following diagram shows the same three components, but with the
parallel group along the horizontal axis and the sequential group along
the vertical axis.

<p style=\"text-align:center\">
<img src=\"doc-files/groupLayout.2.gif\" alt=\"Sequential group along the vertical axis in three components\">
<p>
As {@code c1} is the largest of the three components, the parallel
group is sized to {@code c1}. As {@code c2} and {@code c3} are smaller
than {@code c1} they are aligned based on the alignment specified
for the component (if specified) or the default alignment of the
parallel group. In the diagram {@code c2} and {@code c3} were created
with an alignment of {@code LEADING}. If the component orientation were
right-to-left then {@code c2} and {@code c3} would be positioned on
the opposite side.
<p>
The following diagram shows a sequential group along both the horizontal
and vertical axis.
<p style=\"text-align:center\">
<img src=\"doc-files/groupLayout.3.gif\" alt=\"Sequential group along both the horizontal and vertical axis in three components\">
<p>
{@code GroupLayout} provides the ability to insert gaps between
{@code Component}s. The size of the gap is determined by an
instance of {@code LayoutStyle}. This may be turned on using the
{@code setAutoCreateGaps} method.  Similarly, you may use
the {@code setAutoCreateContainerGaps} method to insert gaps
between components that touch the edge of the parent container and the
container.
<p>
The following builds a panel consisting of two labels in
one column, followed by two textfields in the next column:
<pre>
  JComponent panel = ...;
  GroupLayout layout = new GroupLayout(panel);
  panel.setLayout(layout);

  // Turn on automatically adding gaps between components
  layout.setAutoCreateGaps(true);

  // Turn on automatically creating gaps between components that touch
  // the edge of the container and the container.
  layout.setAutoCreateContainerGaps(true);

  // Create a sequential group for the horizontal axis.

  GroupLayout.SequentialGroup hGroup = layout.createSequentialGroup();

  // The sequential group in turn contains two parallel groups.
  // One parallel group contains the labels, the other the text fields.
  // Putting the labels in a parallel group along the horizontal axis
  // positions them at the same x location.
  //
  // Variable indentation is used to reinforce the level of grouping.
  hGroup.addGroup(layout.createParallelGroup().
           addComponent(label1).addComponent(label2));
  hGroup.addGroup(layout.createParallelGroup().
           addComponent(tf1).addComponent(tf2));
  layout.setHorizontalGroup(hGroup);

  // Create a sequential group for the vertical axis.
  GroupLayout.SequentialGroup vGroup = layout.createSequentialGroup();

  // The sequential group contains two parallel groups that align
  // the contents along the baseline. The first parallel group contains
  // the first label and text field, and the second parallel group contains
  // the second label and text field. By using a sequential group
  // the labels and text fields are positioned vertically after one another.
  vGroup.addGroup(layout.createParallelGroup(Alignment.BASELINE).
           addComponent(label1).addComponent(tf1));
  vGroup.addGroup(layout.createParallelGroup(Alignment.BASELINE).
           addComponent(label2).addComponent(tf2));
  layout.setVerticalGroup(vGroup);
</pre>
<p>
When run the following is produced.
<p style=\"text-align:center\">
<img src=\"doc-files/groupLayout.example.png\" alt=\"Produced horizontal/vertical form\">
<p>
This layout consists of the following.
<ul><li>The horizontal axis consists of a sequential group containing two
        parallel groups.  The first parallel group contains the labels,
        and the second parallel group contains the text fields.
    <li>The vertical axis consists of a sequential group
        containing two parallel groups.  The parallel groups are configured
        to align their components along the baseline. The first parallel
        group contains the first label and first text field, and
        the second group consists of the second label and second
        text field.
</ul>
There are a couple of things to notice in this code:
<ul>
  <li>You need not explicitly add the components to the container; this
      is indirectly done by using one of the {@code add} methods of
      {@code Group}.
  <li>The various {@code add} methods return
      the caller.  This allows for easy chaining of invocations.  For
      example, {@code group.addComponent(label1).addComponent(label2);} is
      equivalent to
      {@code group.addComponent(label1); group.addComponent(label2);}.
  <li>There are no public constructors for {@code Group}s; instead
      use the create methods of {@code GroupLayout}.
</ul>

@author Tomas Pavek
@author Jan Stola
@author Scott Violet
@since 1.6
"
      classrelation 4082306 // <realization>
	relation 4082306 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4082306 // <realization>
	  b parent class_ref 406402 // LayoutManager2
      end

      attribute 2393090 "MIN_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used in size calculations
"
      end

      attribute 2393218 "PREF_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2393346 "MAX_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2393474 "SPECIFIC_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used by prepare, indicates min, pref or max isn't going to be used.
"
      end

      attribute 2393602 "UNSET"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MIN_VALUE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2393730 "DEFAULT_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates the size from the component or gap should be used for a
particular range value.

@see Group

"
      end

      attribute 2393858 "PREFERRED_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates the preferred size from the component or gap should
be used for a particular range value.

@see Group

"
      end

      attribute 2393986 "autocreatePadding"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not we automatically try and create the preferred
 padding between components.
"
      end

      attribute 2394114 "autocreateContainerPadding"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not we automatically try and create the preferred
 padding between components the touch the edge of the container and
 the container.
"
      end

      class 1272322 "Group"
	abstract visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4083458 // <generalisation>
	  relation 4083458 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4083458 // <generalisation>
	    b parent class_ref 1272450 // Spring
	end

	classrelation 4083586 // springs (<unidirectional association>)
	  relation 4083586 --->
	    a role_name "springs" package
	      comment " private int origin;
 private int size;
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Spring> ${name}${value};
"
	      classrelation_ref 4083586 // springs (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 10517890 "Group"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10518018 "addGroup"
	  public return_type class_ref 1272322 // Group
	  nparams 1
	    param inout name "group" type class_ref 1272322 // Group
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Group} to this {@code Group}.

@param group the {@code Group} to add
@return this {@code Group}
"
	end

	operation 10518146 "addComponent"
	  public return_type class_ref 1272322 // Group
	  nparams 1
	    param inout name "component" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Component} to this {@code Group}.

@param component the {@code Component} to add
@return this {@code Group}
"
	end

	operation 10518274 "addComponent"
	  public return_type class_ref 1272322 // Group
	  nparams 4
	    param inout name "component" type class_ref 338818 // Component
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Component} to this {@code Group}
with the specified size.

@param component the {@code Component} to add
@param min the minimum size or one of {@code DEFAULT_SIZE} or
           {@code PREFERRED_SIZE}
@param pref the preferred size or one of {@code DEFAULT_SIZE} or
           {@code PREFERRED_SIZE}
@param max the maximum size or one of {@code DEFAULT_SIZE} or
           {@code PREFERRED_SIZE}
@return this {@code Group}
"
	end

	operation 10518402 "addGap"
	  public return_type class_ref 1272322 // Group
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a rigid gap to this {@code Group}.

@param size the size of the gap
@return this {@code Group}
@throws IllegalArgumentException if {@code size} is less than
        {@code 0}
"
	end

	operation 10518530 "addGap"
	  public return_type class_ref 1272322 // Group
	  nparams 3
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a gap to this {@code Group} with the specified size.

@param min the minimum size of the gap
@param pref the preferred size of the gap
@param max the maximum size of the gap
@throws IllegalArgumentException if any of the values are
        less than {@code 0}
@return this {@code Group}
"
	end

	operation 10518658 "getSpring"
	  package return_type class_ref 1272450 // Spring
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10518786 "indexOf"
	  package explicit_return_type "int"
	  nparams 1
	    param inout name "spring" type class_ref 1272450 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10518914 "addSpring"
	  package return_type class_ref 1272322 // Group
	  nparams 1
	    param inout name "spring" type class_ref 1272450 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the Spring to the list of {@code Spring}s and returns
the receiver.
"
	end

	operation 10519042 "setSize"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Spring methods
"
	end

	operation 10519170 "setValidSize"
	  abstract package explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This is invoked from {@code setSize} if passed a value
other than UNSET.
"
	end

	operation 10519298 "calculateMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10519426 "calculatePreferredSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10519554 "calculateMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10519682 "calculateSize"
	  package explicit_return_type "int"
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calculates the specified size.  This is called from
one of the {@code getMinimumSize0},
{@code getPreferredSize0} or
{@code getMaximumSize0} methods.  This will invoke
to {@code operator} to combine the values.
"
	end

	operation 10519810 "getSpringSize"
	  package explicit_return_type "int"
	  nparams 3
	    param inout name "spring" type class_ref 1272450 // Spring
	    param in name "axis" explicit_type "int"
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10519938 "operator"
	  abstract package explicit_return_type "int"
	  nparams 2
	    param in name "a" explicit_type "int"
	    param in name "b" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Used to compute how the two values representing two springs
will be combined.  For example, a group that layed things out
one after the next would return {@code a + b}.
"
	end

	operation 10520066 "insertAutopadding"
	  abstract package explicit_return_type "void"
	  nparams 6
	    param in name "axis" explicit_type "int"
	    param inout name "leadingPadding" type class_ref 175362 // List
	    param inout name "trailingPadding" type class_ref 175362 // List
	    param inout name "leading" type class_ref 175362 // List
	    param inout name "trailing" type class_ref 175362 // List
	    param inout name "insert" explicit_type "boolean"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<AutoPreferredGapSpring> ${p1}, ${t2}<AutoPreferredGapSpring> ${p2}, ${t3}<ComponentSpring> ${p3}, ${t4}<ComponentSpring> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Padding


Adjusts the autopadding springs in this group and its children.
If {@code insert} is true this will insert auto padding
springs, otherwise this will only adjust the springs that
comprise auto preferred padding springs.

@param axis the axis of the springs; HORIZONTAL or VERTICAL
@param leadingPadding List of AutopaddingSprings that occur before
                      this Group
@param trailingPadding any trailing autopadding springs are added
                       to this on exit
@param leading List of ComponentSprings that occur before this Group
@param trailing any trailing ComponentSpring are added to this
                List
@param insert Whether or not to insert AutopaddingSprings or just
              adjust any existing AutopaddingSprings.
"
	end

	operation 10520194 "removeAutopadding"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes any AutopaddingSprings for this Group and its children.
"
	end

	operation 10520322 "unsetAutopadding"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10520450 "calculateAutopadding"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10520578 "willHaveZeroSize"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "treatAutopaddingAsZeroSized" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 4082434 // horizontalGroup (<unidirectional association>)
	relation 4082434 --->
	  a role_name "horizontalGroup" private
	    comment "
Group responsible for layout along the horizontal axis.  This is NOT
the user specified group, use getHorizontalGroup to dig that out.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4082434 // horizontalGroup (<unidirectional association>)
	  b parent class_ref 1272322 // Group
      end

      classrelation 4082562 // verticalGroup (<unidirectional association>)
	relation 4082562 --->
	  a role_name "verticalGroup" private
	    comment "
Group responsible for layout along the vertical axis.  This is NOT
the user specified group, use getVerticalGroup to dig that out.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4082562 // verticalGroup (<unidirectional association>)
	  b parent class_ref 1272322 // Group
      end

      classrelation 4082690 // componentInfos (<unidirectional association>)
	relation 4082690 --->
	  a role_name "componentInfos" private
	    comment " Maps from Component to ComponentInfo.  This is used for tracking
 information specific to a Component.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component,ComponentInfo> ${name}${value};
"
	    classrelation_ref 4082690 // componentInfos (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 4082818 // host (<unidirectional association>)
	relation 4082818 --->
	  a role_name "host" private
	    comment " Container we're doing layout for.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4082818 // host (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      class 1272450 "Spring"
	abstract visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2395266 "size"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2395394 "min"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2395522 "max"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2395650 "pref"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4083202 // parent (<unidirectional association>)
	  relation 4083202 --->
	    a role_name "parent" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4083202 // parent (<unidirectional association>)
	    b parent class_ref 1272450 // Spring
	end

	classrelation 4083330 // alignment (<unidirectional association>)
	  relation 4083330 --->
	    a role_name "alignment" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4083330 // alignment (<unidirectional association>)
	    b parent class_ref 1272578 // Alignment
	end

	operation 10515458 "Spring"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10515586 "calculateMinimumSize"
	  abstract package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calculates and returns the minimum size.

@param axis the axis of layout; one of HORIZONTAL or VERTICAL
@return the minimum size
"
	end

	operation 10515714 "calculatePreferredSize"
	  abstract package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calculates and returns the preferred size.

@param axis the axis of layout; one of HORIZONTAL or VERTICAL
@return the preferred size
"
	end

	operation 10515842 "calculateMaximumSize"
	  abstract package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Calculates and returns the minimum size.

@param axis the axis of layout; one of HORIZONTAL or VERTICAL
@return the minimum size
"
	end

	operation 10515970 "setParent"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "parent" type class_ref 1272450 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the parent of this Spring.
"
	end

	operation 10516098 "getParent"
	  package return_type class_ref 1272450 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the parent of this spring.
"
	end

	operation 10516226 "setAlignment"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "alignment" type class_ref 1272578 // Alignment
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This is here purely as a convenience for ParallelGroup to avoid
 having to track alignment separately."
	end

	operation 10516354 "getAlignment"
	  package return_type class_ref 1272578 // Alignment
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Alignment for this Spring, this may be null.
"
	end

	operation 10516482 "getMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the minimum size.
"
	end

	operation 10516610 "getPreferredSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the preferred size.
"
	end

	operation 10516738 "getMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the maximum size.
"
	end

	operation 10516866 "setSize"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the value and location of the spring.  Subclasses
will want to invoke super, then do any additional sizing.

@param axis HORIZONTAL or VERTICAL
@param origin of this Spring
@param size of the Spring.  If size is UNSET, this invokes
       clear.
"
	end

	operation 10516994 "unset"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets the cached min/max/pref.
"
	end

	operation 10517122 "getSize"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the current size.
"
	end

	operation 10517250 "constrain"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "value" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10517378 "getBaseline"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10517506 "getBaselineResizeBehavior"
	  package explicit_return_type "BaselineResizeBehavior"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10517634 "isResizable"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10517762 "willHaveZeroSize"
	  abstract package explicit_return_type "boolean"
	  nparams 1
	    param inout name "treatAutopaddingAsZeroSized" explicit_type "boolean"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns {@code true} if this spring will ALWAYS have a zero
size. This should NOT check the current size, rather it's
meant to quickly test if this Spring will always have a
zero size.

@param treatAutopaddingAsZeroSized if {@code true}, auto padding
       springs should be treated as having a size of {@code 0}
@return {@code true} if this spring will have a zero size,
        {@code false} otherwise
"
	end
      end

      classrelation 4082946 // tmpParallelSet (<unidirectional association>)
	relation 4082946 --->
	  a role_name "tmpParallelSet" private
	    comment " Used by areParallelSiblings, cached to avoid excessive garbage.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Spring> ${name}${value};
"
	    classrelation_ref 4082946 // tmpParallelSet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      attribute 2394242 "springsChanged"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates Springs have changed in some way since last change.
"
      end

      attribute 2394370 "isValid"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicates invalidateLayout has been invoked.
"
      end

      attribute 2394498 "hasPreferredPaddingSprings"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not any preferred padding (or container padding) springs
 exist
"
      end

      classrelation 4083074 // layoutStyle (<unidirectional association>)
	relation 4083074 --->
	  a role_name "layoutStyle" private
	    comment "
The LayoutStyle instance to use, if null the sharedInstance is used.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4083074 // layoutStyle (<unidirectional association>)
	  b parent class_ref 371330 // LayoutStyle
      end

      attribute 2394626 "honorsVisibility"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, components that are not visible are treated as though they
aren't there.

"
      end

      class 1272578 "Alignment"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2394754 "LEADING"
	  public type class_ref 1272578 // Alignment
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the elements should be
aligned to the origin.  For the horizontal axis with a left to
right orientation this means aligned to the left edge. For the
vertical axis leading means aligned to the top edge.

@see #createParallelGroup(Alignment)

"
	end

	attribute 2394882 "TRAILING"
	  public type class_ref 1272578 // Alignment
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the elements should be aligned to the end of the
region.  For the horizontal axis with a left to right
orientation this means aligned to the right edge. For the
vertical axis trailing means aligned to the bottom edge.

@see #createParallelGroup(Alignment)

"
	end

	attribute 2395010 "CENTER"
	  public type class_ref 1272578 // Alignment
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the elements should be centered in
the region.

@see #createParallelGroup(Alignment)

"
	end

	attribute 2395138 "BASELINE"
	  public type class_ref 1272578 // Alignment
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the elements should be aligned along
their baseline.

@see #createParallelGroup(Alignment)
@see #createBaselineGroup(boolean,boolean)
"
	end
      end

      operation 10509058 "checkSize"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "min" explicit_type "int"
	  param in name "pref" explicit_type "int"
	  param in name "max" explicit_type "int"
	  param inout name "isComponentSpring" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10509186 "checkResizeType"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "isComponentSpring" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10509314 "checkLessThan"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10509442 "GroupLayout"
	public explicit_return_type ""
	nparams 1
	  param inout name "host" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code GroupLayout} for the specified {@code Container}.

@param host the {@code Container} the {@code GroupLayout} is
       the {@code LayoutManager} for
@throws IllegalArgumentException if host is {@code null}
"
      end

      operation 10509570 "setHonorsVisibility"
	public explicit_return_type "void"
	nparams 1
	  param inout name "honorsVisibility" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether component visibility is considered when sizing and
positioning components. A value of {@code true} indicates that
non-visible components should not be treated as part of the
layout. A value of {@code false} indicates that components should be
positioned and sized regardless of visibility.
<p>
A value of {@code false} is useful when the visibility of components
is dynamically adjusted and you don't want surrounding components and
the sizing to change.
<p>
The specified value is used for components that do not have an
explicit visibility specified.
<p>
The default is {@code true}.

@param honorsVisibility whether component visibility is considered when
                        sizing and positioning components
@see #setHonorsVisibility(Component,Boolean)
"
      end

      operation 10509698 "getHonorsVisibility"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether component visibility is considered when sizing and
positioning components.

@return whether component visibility is considered when sizing and
        positioning components
"
      end

      operation 10509826 "setHonorsVisibility"
	public explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "honorsVisibility" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the component's visibility is considered for
sizing and positioning. A value of {@code Boolean.TRUE}
indicates that if {@code component} is not visible it should
not be treated as part of the layout. A value of {@code false}
indicates that {@code component} is positioned and sized
regardless of it's visibility.  A value of {@code null}
indicates the value specified by the single argument method {@code
setHonorsVisibility} should be used.
<p>
If {@code component} is not a child of the {@code Container} this
{@code GroupLayout} is managing, it will be added to the
{@code Container}.

@param component the component
@param honorsVisibility whether visibility of this {@code component} should be
             considered for sizing and positioning
@throws IllegalArgumentException if {@code component} is {@code null}
@see #setHonorsVisibility(Component,Boolean)
"
      end

      operation 10509954 "setAutoCreateGaps"
	public explicit_return_type "void"
	nparams 1
	  param inout name "autoCreatePadding" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether a gap between components should automatically be
created.  For example, if this is {@code true} and you add two
components to a {@code SequentialGroup} a gap between the
two components is automatically be created.  The default is
{@code false}.

@param autoCreatePadding whether a gap between components is
       automatically created
"
      end

      operation 10510082 "getAutoCreateGaps"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if gaps between components are automatically
created.

@return {@code true} if gaps between components are automatically
        created
"
      end

      operation 10510210 "setAutoCreateContainerGaps"
	public explicit_return_type "void"
	nparams 1
	  param inout name "autoCreateContainerPadding" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether a gap between the container and components that
touch the border of the container should automatically be
created. The default is {@code false}.

@param autoCreateContainerPadding whether a gap between the container and
       components that touch the border of the container should
       automatically be created
"
      end

      operation 10510338 "getAutoCreateContainerGaps"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if gaps between the container and components that
border the container are automatically created.

@return {@code true} if gaps between the container and components that
        border the container are automatically created
"
      end

      operation 10510466 "setHorizontalGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "group" type class_ref 1272322 // Group
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code Group} that positions and sizes
components along the horizontal axis.

@param group the {@code Group} that positions and sizes
       components along the horizontal axis
@throws IllegalArgumentException if group is {@code null}
"
      end

      operation 10510594 "getHorizontalGroup"
	private return_type class_ref 1272322 // Group
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Group} that positions and sizes components
along the horizontal axis.

@return the {@code Group} responsible for positioning and
        sizing component along the horizontal axis
"
      end

      operation 10510722 "setVerticalGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "group" type class_ref 1272322 // Group
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code Group} that positions and sizes
components along the vertical axis.

@param group the {@code Group} that positions and sizes
       components along the vertical axis
@throws IllegalArgumentException if group is {@code null}
"
      end

      operation 10510850 "getVerticalGroup"
	private return_type class_ref 1272322 // Group
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Group} that positions and sizes components
along the vertical axis.

@return the {@code Group} responsible for positioning and
        sizing component along the vertical axis
"
      end

      operation 10510978 "createTopLevelGroup"
	private return_type class_ref 1272322 // Group
	nparams 1
	  param inout name "specifiedGroup" type class_ref 1272322 // Group
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps the user specified group in a sequential group.  If
container gaps should be generated the necessary springs are
added.
"
      end

      class 1272706 "SequentialGroup"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4083714 // <generalisation>
	  relation 4083714 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4083714 // <generalisation>
	    b parent class_ref 1272322 // Group
	end

	classrelation 4083842 // baselineSpring (<unidirectional association>)
	  relation 4083842 --->
	    a role_name "baselineSpring" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4083842 // baselineSpring (<unidirectional association>)
	    b parent class_ref 1272450 // Spring
	end

	operation 10520706 "SequentialGroup"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10520834 "addGroup"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 1
	    param inout name "group" type class_ref 1272322 // Group
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10520962 "addGroup"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 2
	    param inout name "useAsBaseline" explicit_type "boolean"
	    param inout name "group" type class_ref 1272322 // Group
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Group} to this {@code Group}.

@param group the {@code Group} to add
@param useAsBaseline whether the specified {@code Group} should
       be used to calculate the baseline for this {@code Group}
@return this {@code Group}
"
	end

	operation 10521090 "addComponent"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 1
	    param inout name "component" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10521218 "addComponent"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 2
	    param inout name "useAsBaseline" explicit_type "boolean"
	    param inout name "component" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Component} to this {@code Group}.

@param useAsBaseline whether the specified {@code Component} should
       be used to calculate the baseline for this {@code Group}
@param component the {@code Component} to add
@return this {@code Group}
"
	end

	operation 10521346 "addComponent"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 4
	    param inout name "component" type class_ref 338818 // Component
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10521474 "addComponent"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 5
	    param inout name "useAsBaseline" explicit_type "boolean"
	    param inout name "component" type class_ref 338818 // Component
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Component} to this {@code Group}
with the specified size.

@param useAsBaseline whether the specified {@code Component} should
       be used to calculate the baseline for this {@code Group}
@param component the {@code Component} to add
@param min the minimum size or one of {@code DEFAULT_SIZE} or
           {@code PREFERRED_SIZE}
@param pref the preferred size or one of {@code DEFAULT_SIZE} or
           {@code PREFERRED_SIZE}
@param max the maximum size or one of {@code DEFAULT_SIZE} or
           {@code PREFERRED_SIZE}
@return this {@code Group}
"
	end

	operation 10521602 "addGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10521730 "addGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 3
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10521858 "addPreferredGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 3
	    param inout name "comp1" type class_ref 338434 // JComponent
	    param inout name "comp2" type class_ref 338434 // JComponent
	    param inout name "type" explicit_type "ComponentPlacement"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an element representing the preferred gap between two
components. The element created to represent the gap is not
resizable.

@param comp1 the first component
@param comp2 the second component
@param type the type of gap; one of the constants defined by
       {@code LayoutStyle}
@return this {@code SequentialGroup}
@throws IllegalArgumentException if {@code type}, {@code comp1} or
        {@code comp2} is {@code null}
@see LayoutStyle
"
	end

	operation 10521986 "addPreferredGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 5
	    param inout name "comp1" type class_ref 338434 // JComponent
	    param inout name "comp2" type class_ref 338434 // JComponent
	    param inout name "type" explicit_type "ComponentPlacement"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an element representing the preferred gap between two
components.

@param comp1 the first component
@param comp2 the second component
@param type the type of gap
@param pref the preferred size of the grap; one of
       {@code DEFAULT_SIZE} or a value &gt;= 0
@param max the maximum size of the gap; one of
       {@code DEFAULT_SIZE}, {@code PREFERRED_SIZE}
       or a value &gt;= 0
@return this {@code SequentialGroup}
@throws IllegalArgumentException if {@code type}, {@code comp1} or
        {@code comp2} is {@code null}
@see LayoutStyle
"
	end

	operation 10522114 "addPreferredGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 1
	    param inout name "type" explicit_type "ComponentPlacement"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an element representing the preferred gap between the
nearest components.  During layout, neighboring
components are found, and the size of the added gap is set
based on the preferred gap between the components.  If no
neighboring components are found the gap has a size of {@code 0}.
<p>
The element created to represent the gap is not
resizable.

@param type the type of gap; one of
       {@code LayoutStyle.ComponentPlacement.RELATED} or
       {@code LayoutStyle.ComponentPlacement.UNRELATED}
@return this {@code SequentialGroup}
@see LayoutStyle
@throws IllegalArgumentException if {@code type} is not one of
        {@code LayoutStyle.ComponentPlacement.RELATED} or
        {@code LayoutStyle.ComponentPlacement.UNRELATED}
"
	end

	operation 10522242 "addPreferredGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 3
	    param inout name "type" explicit_type "ComponentPlacement"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an element representing the preferred gap between the
nearest components.  During layout, neighboring
components are found, and the minimum of this
gap is set based on the size of the preferred gap between the
neighboring components.  If no neighboring components are found the
minimum size is set to 0.

@param type the type of gap; one of
       {@code LayoutStyle.ComponentPlacement.RELATED} or
       {@code LayoutStyle.ComponentPlacement.UNRELATED}
@param pref the preferred size of the grap; one of
       {@code DEFAULT_SIZE} or a value &gt;= 0
@param max the maximum size of the gap; one of
       {@code DEFAULT_SIZE}, {@code PREFERRED_SIZE}
       or a value &gt;= 0
@return this {@code SequentialGroup}
@throws IllegalArgumentException if {@code type} is not one of
        {@code LayoutStyle.ComponentPlacement.RELATED} or
        {@code LayoutStyle.ComponentPlacement.UNRELATED}
@see LayoutStyle
"
	end

	operation 10522370 "addContainerGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an element representing the preferred gap between an edge
the container and components that touch the border of the
container. This has no effect if the added gap does not
touch an edge of the parent container.
<p>
The element created to represent the gap is not
resizable.

@return this {@code SequentialGroup}
"
	end

	operation 10522498 "addContainerGap"
	  public return_type class_ref 1272706 // SequentialGroup
	  nparams 2
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an element representing the preferred gap between one
edge of the container and the next or previous {@code
Component} with the specified size. This has no
effect if the next or previous element is not a {@code
Component} and does not touch one edge of the parent
container.

@param pref the preferred size; one of {@code DEFAULT_SIZE} or a
             value &gt;= 0
@param max the maximum size; one of {@code DEFAULT_SIZE},
       {@code PREFERRED_SIZE} or a value &gt;= 0
@return this {@code SequentialGroup}
"
	end

	operation 10522626 "operator"
	  package explicit_return_type "int"
	  nparams 2
	    param in name "a" explicit_type "int"
	    param in name "b" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10522754 "setValidSize"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10522882 "setValidSizeNotPreferred"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10523010 "buildResizableList"
	  private return_type class_ref 175362 // List
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param inout name "useMin" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SpringDelta> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the sorted list of SpringDelta's for the current set of
Springs. The list is ordered based on the amount of flexibility of
the springs.
"
	end

	operation 10523138 "indexOfNextNonZeroSpring"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "treatAutopaddingAsZeroSized" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10523266 "insertAutopadding"
	  package explicit_return_type "void"
	  nparams 6
	    param in name "axis" explicit_type "int"
	    param inout name "leadingPadding" type class_ref 175362 // List
	    param inout name "trailingPadding" type class_ref 175362 // List
	    param inout name "leading" type class_ref 175362 // List
	    param inout name "trailing" type class_ref 175362 // List
	    param inout name "insert" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<AutoPreferredGapSpring> ${p1}, ${t2}<AutoPreferredGapSpring> ${p2}, ${t3}<ComponentSpring> ${p3}, ${t4}<ComponentSpring> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10523394 "getBaseline"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10523522 "getBaselineResizeBehavior"
	  package explicit_return_type "BaselineResizeBehavior"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10523650 "checkPreferredGapValues"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10511106 "createSequentialGroup"
	public return_type class_ref 1272706 // SequentialGroup
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@code SequentialGroup}.

@return a new {@code SequentialGroup}
"
      end

      class 1272834 "ParallelGroup"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4084098 // <generalisation>
	  relation 4084098 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4084098 // <generalisation>
	    b parent class_ref 1272322 // Group
	end

	classrelation 4084226 // childAlignment (<unidirectional association>)
	  relation 4084226 --->
	    a role_name "childAlignment" const_relation private
	      comment " How children are layed out.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4084226 // childAlignment (<unidirectional association>)
	    b parent class_ref 1272578 // Alignment
	end

	attribute 2396034 "resizable"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether or not we're resizable.
"
	end

	operation 10524162 "ParallelGroup"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "childAlignment" type class_ref 1272578 // Alignment
	    param inout name "resizable" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10524290 "addGroup"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 1
	    param inout name "group" type class_ref 1272322 // Group
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10524418 "addComponent"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 1
	    param inout name "component" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10524546 "addComponent"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 4
	    param inout name "component" type class_ref 338818 // Component
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10524674 "addGap"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 1
	    param in name "pref" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10524802 "addGap"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 3
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end

	operation 10524930 "addGroup"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 2
	    param inout name "alignment" type class_ref 1272578 // Alignment
	    param inout name "group" type class_ref 1272322 // Group
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Group} to this {@code ParallelGroup} with the
specified alignment. If the child is smaller than the
{@code Group} it is aligned based on the specified
alignment.

@param alignment the alignment
@param group the {@code Group} to add
@return this {@code ParallelGroup}
@throws IllegalArgumentException if {@code alignment} is
        {@code null}
"
	end

	operation 10525058 "addComponent"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 2
	    param inout name "component" type class_ref 338818 // Component
	    param inout name "alignment" type class_ref 1272578 // Alignment
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Component} to this {@code ParallelGroup} with
the specified alignment.

@param alignment the alignment
@param component the {@code Component} to add
@return this {@code Group}
@throws IllegalArgumentException if {@code alignment} is
        {@code null}
"
	end

	operation 10525186 "addComponent"
	  public return_type class_ref 1272834 // ParallelGroup
	  nparams 5
	    param inout name "component" type class_ref 338818 // Component
	    param inout name "alignment" type class_ref 1272578 // Alignment
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a {@code Component} to this {@code ParallelGroup} with the
specified alignment and size.

@param alignment the alignment
@param component the {@code Component} to add
@param min the minimum size
@param pref the preferred size
@param max the maximum size
@throws IllegalArgumentException if {@code alignment} is
        {@code null}
@return this {@code Group}
"
	end

	operation 10525314 "isResizable"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10525442 "operator"
	  package explicit_return_type "int"
	  nparams 2
	    param in name "a" explicit_type "int"
	    param in name "b" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10525570 "calculateMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10525698 "calculateMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10525826 "setValidSize"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10525954 "setChildSize"
	  package explicit_return_type "void"
	  nparams 4
	    param inout name "spring" type class_ref 1272450 // Spring
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10526082 "insertAutopadding"
	  package explicit_return_type "void"
	  nparams 6
	    param in name "axis" explicit_type "int"
	    param inout name "leadingPadding" type class_ref 175362 // List
	    param inout name "trailingPadding" type class_ref 175362 // List
	    param inout name "leading" type class_ref 175362 // List
	    param inout name "trailing" type class_ref 175362 // List
	    param inout name "insert" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<AutoPreferredGapSpring> ${p1}, ${t2}<AutoPreferredGapSpring> ${p2}, ${t3}<ComponentSpring> ${p3}, ${t4}<ComponentSpring> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10526210 "checkChildAlignment"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "alignment" type class_ref 1272578 // Alignment
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10526338 "checkChildAlignment"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "alignment" type class_ref 1272578 // Alignment
	    param inout name "allowsBaseline" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10511234 "createParallelGroup"
	public return_type class_ref 1272834 // ParallelGroup
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@code ParallelGroup} with an alignment of
{@code Alignment.LEADING}.  This is a cover method for the more
general {@code createParallelGroup(Alignment)} method.

@return a new {@code ParallelGroup}
@see #createParallelGroup(Alignment)
"
      end

      operation 10511362 "createParallelGroup"
	public return_type class_ref 1272834 // ParallelGroup
	nparams 1
	  param inout name "alignment" type class_ref 1272578 // Alignment
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@code ParallelGroup} with the specified
alignment.  This is a cover method for the more general {@code
createParallelGroup(Alignment,boolean)} method with {@code true}
supplied for the second argument.

@param alignment the alignment for the elements of the group
@throws IllegalArgumentException if {@code alignment} is {@code null}
@return a new {@code ParallelGroup}
@see #createBaselineGroup
@see ParallelGroup
"
      end

      operation 10511490 "createParallelGroup"
	public return_type class_ref 1272834 // ParallelGroup
	nparams 2
	  param inout name "alignment" type class_ref 1272578 // Alignment
	  param inout name "resizable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@code ParallelGroup} with the specified
alignment and resize behavior. The {@code
alignment} argument specifies how children elements are
positioned that do not fill the group. For example, if a {@code
ParallelGroup} with an alignment of {@code TRAILING} is given
100 and a child only needs 50, the child is
positioned at the position 50 (with a component orientation of
left-to-right).
<p>
Baseline alignment is only useful when used along the vertical
axis. A {@code ParallelGroup} created with a baseline alignment
along the horizontal axis is treated as {@code LEADING}.
<p>
Refer to {@link GroupLayout.ParallelGroup ParallelGroup} for details on
the behavior of baseline groups.

@param alignment the alignment for the elements of the group
@param resizable {@code true} if the group is resizable; if the group
       is not resizable the preferred size is used for the
       minimum and maximum size of the group
@throws IllegalArgumentException if {@code alignment} is {@code null}
@return a new {@code ParallelGroup}
@see #createBaselineGroup
@see GroupLayout.ParallelGroup
"
      end

      operation 10511618 "createBaselineGroup"
	public return_type class_ref 1272834 // ParallelGroup
	nparams 2
	  param inout name "resizable" explicit_type "boolean"
	  param inout name "anchorBaselineToTop" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@code ParallelGroup} that aligns it's
elements along the baseline.

@param resizable whether the group is resizable
@param anchorBaselineToTop whether the baseline is anchored to
       the top or bottom of the group
@see #createBaselineGroup
@see ParallelGroup
"
      end

      operation 10511746 "linkSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "Component...components"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the specified components to have the same size
regardless of their preferred, minimum or maximum sizes. Components that
are linked are given the maximum of the preferred size of each of
the linked components. For example, if you link two components with
a preferred width of 10 and 20, both components are given a width of 20.
<p>
This can be used multiple times to force any number of
components to share the same size.
<p>
Linked Components are not be resizable.

@param components the {@code Component}s that are to have the same size
@throws IllegalArgumentException if {@code components} is
        {@code null}, or contains {@code null}
@see #linkSize(int,Component[])
"
      end

      operation 10511874 "linkSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "axis" explicit_type "int"
	  param inout name "" explicit_type "Component...components"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the specified components to have the same size along the
specified axis regardless of their preferred, minimum or
maximum sizes. Components that are linked are given the maximum
of the preferred size of each of the linked components. For
example, if you link two components along the horizontal axis
and the preferred width is 10 and 20, both components are given
a width of 20.
<p>
This can be used multiple times to force any number of
components to share the same size.
<p>
Linked {@code Component}s are not be resizable.

@param components the {@code Component}s that are to have the same size
@param axis the axis to link the size along; one of
            {@code SwingConstants.HORIZONTAL} or
            {@code SwingConstans.VERTICAL}
@throws IllegalArgumentException if {@code components} is
        {@code null}, or contains {@code null}; or {@code axis}
         is not {@code SwingConstants.HORIZONTAL} or
         {@code SwingConstants.VERTICAL}
"
      end

      operation 10512002 "replace"
	public explicit_return_type "void"
	nparams 2
	  param inout name "existingComponent" type class_ref 338818 // Component
	  param inout name "newComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces an existing component with a new one.

@param existingComponent the component that should be removed
       and replaced with {@code newComponent}
@param newComponent the component to put in
       {@code existingComponent}'s place
@throws IllegalArgumentException if either of the components are
        {@code null} or {@code existingComponent} is not being managed
        by this layout manager
"
      end

      operation 10512130 "setLayoutStyle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layoutStyle" type class_ref 371330 // LayoutStyle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code LayoutStyle} used to calculate the preferred
gaps between components. A value of {@code null} indicates the
shared instance of {@code LayoutStyle} should be used.

@param layoutStyle the {@code LayoutStyle} to use
@see LayoutStyle
"
      end

      operation 10512258 "getLayoutStyle"
	public return_type class_ref 371330 // LayoutStyle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code LayoutStyle} used for calculating the preferred
gap between components. This returns the value specified to
{@code setLayoutStyle}, which may be {@code null}.

@return the {@code LayoutStyle} used for calculating the preferred
        gap between components
"
      end

      operation 10512386 "getLayoutStyle0"
	private return_type class_ref 371330 // LayoutStyle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10512514 "invalidateHost"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10512642 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " LayoutManager


Notification that a {@code Component} has been added to
the parent container.  You should not invoke this method
directly, instead you should use one of the {@code Group}
methods to add a {@code Component}.

@param name the string to be associated with the component
@param component the {@code Component} to be added
"
      end

      operation 10512770 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification that a {@code Component} has been removed from
the parent container.  You should not invoke this method
directly, instead invoke {@code remove} on the parent
{@code Container}.

@param component the component to be removed
@see java.awt.Component#remove
"
      end

      operation 10512898 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size for the specified container.

@param parent the container to return the preferred size for
@return the preferred size for {@code parent}
@throws IllegalArgumentException if {@code parent} is not
        the same {@code Container} this was created with
@throws IllegalStateException if any of the components added to
        this layout are not in both a horizontal and vertical group
@see java.awt.Container#getPreferredSize
"
      end

      operation 10513026 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum size for the specified container.

@param parent the container to return the size for
@return the minimum size for {@code parent}
@throws IllegalArgumentException if {@code parent} is not
        the same {@code Container} that this was created with
@throws IllegalStateException if any of the components added to
        this layout are not in both a horizontal and vertical group
@see java.awt.Container#getMinimumSize
"
      end

      operation 10513154 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the specified container.

@param parent the container to be laid out
@throws IllegalStateException if any of the components added to
        this layout are not in both a horizontal and vertical group
"
      end

      operation 10513282 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " LayoutManager2


Notification that a {@code Component} has been added to
the parent container.  You should not invoke this method
directly, instead you should use one of the {@code Group}
methods to add a {@code Component}.

@param component the component added
@param constraints description of where to place the component
"
      end

      operation 10513410 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum size for the specified container.

@param parent the container to return the size for
@return the maximum size for {@code parent}
@throws IllegalArgumentException if {@code parent} is not
        the same {@code Container} that this was created with
@throws IllegalStateException if any of the components added to
        this layout are not in both a horizontal and vertical group
@see java.awt.Container#getMaximumSize
"
      end

      operation 10513538 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.

@param parent the {@code Container} hosting this {@code LayoutManager}
@throws IllegalArgumentException if {@code parent} is not
        the same {@code Container} that this was created with
@return the alignment; this implementation returns {@code .5}
"
      end

      operation 10513666 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.

@param parent the {@code Container} hosting this {@code LayoutManager}
@throws IllegalArgumentException if {@code parent} is not
        the same {@code Container} that this was created with
@return alignment; this implementation returns {@code .5}
"
      end

      operation 10513794 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the layout, indicating that if the layout manager
has cached information it should be discarded.

@param parent the {@code Container} hosting this LayoutManager
@throws IllegalArgumentException if {@code parent} is not
        the same {@code Container} that this was created with
"
      end

      operation 10513922 "prepare"
	private explicit_return_type "void"
	nparams 1
	  param in name "sizeType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10514050 "calculateAutopadding"
	private explicit_return_type "void"
	nparams 5
	  param inout name "group" type class_ref 1272322 // Group
	  param in name "axis" explicit_type "int"
	  param in name "sizeType" explicit_type "int"
	  param in name "origin" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10514178 "checkComponents"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10514306 "registerComponents"
	private explicit_return_type "void"
	nparams 2
	  param inout name "group" type class_ref 1272322 // Group
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10514434 "adjustSize"
	private return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10514562 "checkParent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1272962 "ComponentInfo"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4086402 // component (<unidirectional association>)
	  relation 4086402 --->
	    a role_name "component" private
	      comment " Component being layed out
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4086402 // component (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	classrelation 4086530 // horizontalSpring (<unidirectional association>)
	  relation 4086530 --->
	    a role_name "horizontalSpring" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4086530 // horizontalSpring (<unidirectional association>)
	    b parent class_ref 1273346 // ComponentSpring
	end

	classrelation 4086658 // verticalSpring (<unidirectional association>)
	  relation 4086658 --->
	    a role_name "verticalSpring" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4086658 // verticalSpring (<unidirectional association>)
	    b parent class_ref 1273346 // ComponentSpring
	end

	classrelation 4086786 // horizontalMaster (<unidirectional association>)
	  relation 4086786 --->
	    a role_name "horizontalMaster" private
	      comment " If the component's size is linked to other components, the
 horizontalMaster and/or verticalMaster reference the group of
 linked components.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4086786 // horizontalMaster (<unidirectional association>)
	    b parent class_ref 1274114 // LinkInfo
	end

	classrelation 4086914 // verticalMaster (<unidirectional association>)
	  relation 4086914 --->
	    a role_name "verticalMaster" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4086914 // verticalMaster (<unidirectional association>)
	    b parent class_ref 1274114 // LinkInfo
	end

	attribute 2399490 "visible"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4087042 // honorsVisibility (<unidirectional association>)
	  relation 4087042 --->
	    a role_name "honorsVisibility" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4087042 // honorsVisibility (<unidirectional association>)
	    b parent class_ref 315010 // Boolean
	end

	operation 10536194 "ComponentInfo"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "component" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10536322 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10536450 "setHonorsVisibility"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "honorsVisibility" type class_ref 315010 // Boolean
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10536578 "removeSpring"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "spring" type class_ref 1272450 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10536706 "isVisible"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10536834 "updateVisibility"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Updates the cached visibility.

@return true if the visibility changed
"
	end

	operation 10536962 "setBounds"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "insets" type class_ref 343938 // Insets
	    param in name "parentWidth" explicit_type "int"
	    param inout name "ltr" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10537090 "setComponent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "component" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10537218 "getComponent"
	  public return_type class_ref 338818 // Component
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10537346 "isLinked"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if this component has its size linked to
other components.
"
	end

	operation 10537474 "setLinkInfo"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param inout name "linkInfo" type class_ref 1274114 // LinkInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10537602 "getLinkInfo"
	  public return_type class_ref 1274114 // LinkInfo
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10537730 "getLinkInfo"
	  private return_type class_ref 1274114 // LinkInfo
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param inout name "create" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10537858 "clearCachedSize"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10537986 "getLinkSize"
	  package explicit_return_type "int"
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10514690 "getComponentInfo"
	private return_type class_ref 1272962 // ComponentInfo
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code ComponentInfo} for the specified Component,
creating one if necessary.
"
      end

      operation 10514818 "insertAutopadding"
	private explicit_return_type "void"
	nparams 1
	  param inout name "insert" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adjusts the autopadding springs for the horizontal and vertical
groups.  If {@code insert} is {@code true} this will insert auto padding
springs, otherwise this will only adjust the springs that
comprise auto preferred padding springs.
"
      end

      operation 10514946 "areParallelSiblings"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "source" type class_ref 338818 // Component
	  param inout name "target" type class_ref 338818 // Component
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the two Components have a common ParallelGroup
ancestor along the particular axis.
"
      end

      operation 10515074 "isLeftToRight"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10515202 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code GroupLayout}.
This method is intended to be used for debugging purposes,
and the content and format of the returned string may vary
between implementations.

@return a string representation of this {@code GroupLayout}
"
      end

      operation 10515330 "createSpringDescription"
	private explicit_return_type "void"
	nparams 4
	  param inout name "buffer" type class_ref 166018 // StringBuffer
	  param inout name "spring" type class_ref 1272450 // Spring
	  param inout name "indent" type class_ref 128130 // String
	  param in name "axis" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1273090 "SpringDelta"
	visibility private 
	nactuals 1
	actual class class_ref 194946 // Comparable
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4083970 // <realization>
	  relation 4083970 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4083970 // <realization>
	    b parent class_ref 194946 // Comparable
	end

	attribute 2395778 "index"
	  const_attribute public explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Original index.
"
	end

	attribute 2395906 "delta"
	  public explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Delta, one of pref - min or max - pref.
"
	end

	operation 10523778 "SpringDelta"
	  public explicit_return_type ""
	  nparams 2
	    param in name "index" explicit_type "int"
	    param in name "delta" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10523906 "compareTo"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "o" type class_ref 1273090 // SpringDelta
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10524034 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1273218 "BaselineGroup"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4084354 // <generalisation>
	  relation 4084354 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4084354 // <generalisation>
	    b parent class_ref 1272834 // ParallelGroup
	end

	attribute 2396162 "allSpringsHaveBaseline"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether or not all child springs have a baseline
"
	end

	attribute 2396290 "prefAscent"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " max(spring.getBaseline()) of all springs aligned along the baseline
 that have a baseline
"
	end

	attribute 2396418 "prefDescent"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " max(spring.getPreferredSize().height - spring.getBaseline()) of all
 springs aligned along the baseline that have a baseline
"
	end

	attribute 2396546 "baselineAnchorSet"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether baselineAnchoredToTop was explicitly set
"
	end

	attribute 2396674 "baselineAnchoredToTop"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether the baseline is anchored to the top or the bottom.
 If anchored to the top the baseline is always at prefAscent,
 otherwise the baseline is at (height - prefDescent)
"
	end

	attribute 2396802 "calcedBaseline"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether or not the baseline has been calculated.
"
	end

	operation 10526466 "BaselineGroup"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "resizable" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10526594 "BaselineGroup"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "resizable" explicit_type "boolean"
	    param inout name "baselineAnchoredToTop" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10526722 "unset"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10526850 "setValidSize"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10526978 "calculateSize"
	  package explicit_return_type "int"
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10527106 "calculateBaselineAndResizeBehavior"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10527234 "calculateMaxSize"
	  private explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10527362 "calculateMinSize"
	  private explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10527490 "baselineLayout"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Lays out springs that have a baseline along the baseline.  All
others are centered.
"
	end

	operation 10527618 "getBaseline"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10527746 "getBaselineResizeBehavior"
	  package explicit_return_type "BaselineResizeBehavior"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10527874 "checkAxis"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " If the axis is VERTICAL, throws an IllegalStateException"
	end
      end

      class 1273346 "ComponentSpring"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4084482 // <generalisation>
	  relation 4084482 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4084482 // <generalisation>
	    b parent class_ref 1272450 // Spring
	end

	classrelation 4084610 // component (<unidirectional association>)
	  relation 4084610 --->
	    a role_name "component" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4084610 // component (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	attribute 2396930 "origin"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2397058 "min"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " min/pref/max are either a value >= 0 or one of
 DEFAULT_SIZE or PREFERRED_SIZE
"
	end

	attribute 2397186 "pref"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2397314 "max"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2397442 "baseline"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Baseline for the component, computed as necessary.
"
	end

	attribute 2397570 "installed"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Whether or not the size has been requested yet.
"
	end

	operation 10528002 "ComponentSpring"
	  private explicit_return_type ""
	  nparams 4
	    param inout name "component" type class_ref 338818 // Component
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10528130 "calculateMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10528258 "calculatePreferredSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10528386 "calculateMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10528514 "isVisible"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10528642 "calculateNonlinkedMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10528770 "calculateNonlinkedPreferredSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10528898 "calculateNonlinkedMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529026 "getSizeAlongAxis"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param inout name "size" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529154 "getLinkSize"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "axis" explicit_type "int"
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529282 "setSize"
	  package explicit_return_type "void"
	  nparams 3
	    param in name "axis" explicit_type "int"
	    param in name "origin" explicit_type "int"
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529410 "getOrigin"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529538 "setComponent"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "component" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529666 "getComponent"
	  package return_type class_ref 338818 // Component
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529794 "getBaseline"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10529922 "getBaselineResizeBehavior"
	  package explicit_return_type "BaselineResizeBehavior"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10530050 "isLinked"
	  private explicit_return_type "boolean"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10530178 "installIfNecessary"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10530306 "willHaveZeroSize"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "treatAutopaddingAsZeroSized" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1273474 "PreferredGapSpring"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4084738 // <generalisation>
	  relation 4084738 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4084738 // <generalisation>
	    b parent class_ref 1272450 // Spring
	end

	classrelation 4084866 // source (<unidirectional association>)
	  relation 4084866 --->
	    a role_name "source" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4084866 // source (<unidirectional association>)
	    b parent class_ref 338434 // JComponent
	end

	classrelation 4084994 // target (<unidirectional association>)
	  relation 4084994 --->
	    a role_name "target" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4084994 // target (<unidirectional association>)
	    b parent class_ref 338434 // JComponent
	end

	attribute 2397698 "type"
	  const_attribute private explicit_type "ComponentPlacement"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2397826 "pref"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2397954 "max"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10530434 "PreferredGapSpring"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "source" type class_ref 338434 // JComponent
	    param inout name "target" type class_ref 338434 // JComponent
	    param inout name "type" explicit_type "ComponentPlacement"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10530562 "calculateMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10530690 "calculatePreferredSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10530818 "calculateMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10530946 "getPadding"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10531074 "willHaveZeroSize"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "treatAutopaddingAsZeroSized" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1273602 "GapSpring"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4085122 // <generalisation>
	  relation 4085122 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4085122 // <generalisation>
	    b parent class_ref 1272450 // Spring
	end

	attribute 2398082 "min"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2398210 "pref"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2398338 "max"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10531202 "GapSpring"
	  package explicit_return_type ""
	  nparams 3
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10531330 "calculateMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10531458 "calculatePreferredSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10531586 "calculateMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10531714 "willHaveZeroSize"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "treatAutopaddingAsZeroSized" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1273730 "AutoPreferredGapSpring"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4085250 // <generalisation>
	  relation 4085250 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4085250 // <generalisation>
	    b parent class_ref 1272450 // Spring
	end

	classrelation 4085378 // sources (<unidirectional association>)
	  relation 4085378 --->
	    a role_name "sources" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ComponentSpring> ${name}${value};
"
	      classrelation_ref 4085378 // sources (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 4085506 // source (<unidirectional association>)
	  relation 4085506 --->
	    a role_name "source" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4085506 // source (<unidirectional association>)
	    b parent class_ref 1273346 // ComponentSpring
	end

	classrelation 4085634 // matches (<unidirectional association>)
	  relation 4085634 --->
	    a role_name "matches" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AutoPreferredGapMatch> ${name}${value};
"
	      classrelation_ref 4085634 // matches (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	attribute 2398466 "size"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2398594 "lastSize"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2398722 "pref"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2398850 "max"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2398978 "type"
	  private explicit_type "ComponentPlacement"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Type of gap
"
	end

	attribute 2399106 "userCreated"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10531842 "AutoPreferredGapSpring"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10531970 "AutoPreferredGapSpring"
	  package explicit_return_type ""
	  nparams 2
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532098 "AutoPreferredGapSpring"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "type" explicit_type "ComponentPlacement"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532226 "setSource"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "source" type class_ref 1273346 // ComponentSpring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532354 "setSources"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "sources" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<ComponentSpring> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532482 "setUserCreated"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "userCreated" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532610 "getUserCreated"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532738 "unset"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532866 "reset"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10532994 "calculatePadding"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10533122 "calculatePadding"
	  private explicit_return_type "int"
	  nparams 4
	    param inout name "p" type class_ref 371330 // LayoutStyle
	    param in name "position" explicit_type "int"
	    param inout name "source" type class_ref 1273346 // ComponentSpring
	    param inout name "target" type class_ref 1273346 // ComponentSpring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10533250 "addTarget"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "spring" type class_ref 1273346 // ComponentSpring
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10533378 "addValidTarget"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "source" type class_ref 1273346 // ComponentSpring
	    param inout name "target" type class_ref 1273346 // ComponentSpring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10533506 "calculateMinimumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10533634 "calculatePreferredSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10533762 "calculateMaximumSize"
	  package explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10533890 "getMatchDescription"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10534018 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10534146 "willHaveZeroSize"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "treatAutopaddingAsZeroSized" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1273858 "AutoPreferredGapMatch"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4085762 // source (<unidirectional association>)
	  relation 4085762 --->
	    a role_name "source" const_relation public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4085762 // source (<unidirectional association>)
	    b parent class_ref 1273346 // ComponentSpring
	end

	classrelation 4085890 // target (<unidirectional association>)
	  relation 4085890 --->
	    a role_name "target" const_relation public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4085890 // target (<unidirectional association>)
	    b parent class_ref 1273346 // ComponentSpring
	end

	operation 10534274 "AutoPreferredGapMatch"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "source" type class_ref 1273346 // ComponentSpring
	    param inout name "target" type class_ref 1273346 // ComponentSpring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10534402 "toString"
	  private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "spring" type class_ref 1273346 // ComponentSpring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10534530 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1273986 "ContainerAutoPreferredGapSpring"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4086018 // <generalisation>
	  relation 4086018 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4086018 // <generalisation>
	    b parent class_ref 1273730 // AutoPreferredGapSpring
	end

	classrelation 4086146 // targets (<unidirectional association>)
	  relation 4086146 --->
	    a role_name "targets" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ComponentSpring> ${name}${value};
"
	      classrelation_ref 4086146 // targets (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 10534658 "ContainerAutoPreferredGapSpring"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10534786 "ContainerAutoPreferredGapSpring"
	  package explicit_return_type ""
	  nparams 2
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10534914 "addTarget"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "spring" type class_ref 1273346 // ComponentSpring
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10535042 "calculatePadding"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10535170 "updateSize"
	  private explicit_return_type "int"
	  nparams 3
	    param inout name "p" type class_ref 371330 // LayoutStyle
	    param inout name "sourceSpring" type class_ref 1273346 // ComponentSpring
	    param in name "position" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10535298 "getMatchDescription"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1274114 "LinkInfo"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2399234 "axis"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4086274 // linked (<unidirectional association>)
	  relation 4086274 --->
	    a role_name "linked" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ComponentInfo> ${name}${value};
"
	      classrelation_ref 4086274 // linked (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	attribute 2399362 "size"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10535426 "LinkInfo"
	  package explicit_return_type ""
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10535554 "add"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "child" type class_ref 1272962 // ComponentInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10535682 "remove"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "info" type class_ref 1272962 // ComponentInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10535810 "clearCachedSize"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10535938 "getSize"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10536066 "calculateLinkedSize"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "axis" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1274370 "JApplet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An extended version of <code>java.applet.Applet</code> that adds support for
the JFC/Swing component architecture.
You can find task-oriented documentation about using <code>JApplet</code>
in <em>The Java Tutorial</em>,
in the section
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/applet.html\">How to Make Applets</a>.
<p>
The <code>JApplet</code> class is slightly incompatible with
<code>java.applet.Applet</code>.  <code>JApplet</code> contains a
<code>JRootPane</code> as its only child.  The <code>contentPane</code>
should be the parent of any children of the <code>JApplet</code>.
As a convenience, the {@code add}, {@code remove}, and {@code setLayout}
methods of this class are overridden, so that they delegate calls
to the corresponding methods of the {@code ContentPane}.
For example, you can add a child component to an applet as follows:
<pre>
      applet.add(child);
</pre>

And the child will be added to the <code>contentPane</code>.
The <code>contentPane</code> will always be non-<code>null</code>.
Attempting to set it to <code>null</code> will cause the
<code>JApplet</code> to throw an exception. The default
<code>contentPane</code> will have a <code>BorderLayout</code>
manager set on it.
Refer to {@link javax.swing.RootPaneContainer}
for details on adding, removing and setting the <code>LayoutManager</code>
of a <code>JApplet</code>.
<p>
Please see the <code>JRootPane</code> documentation for a
complete description of the <code>contentPane</code>, <code>glassPane</code>,
and <code>layeredPane</code> properties.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see javax.swing.RootPaneContainer
@beaninfo
     attribute: isContainer true
     attribute: containerDelegate getContentPane
   description: Swing's Applet subclass.

@author Arnaud Weber
"
      classrelation 4089090 // <generalisation>
	relation 4089090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4089090 // <generalisation>
	  b parent class_ref 240258 // Applet
      end

      classrelation 4089218 // <realization>
	relation 4089218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4089218 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4089346 // <realization>
	relation 4089346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4089346 // <realization>
	  b parent class_ref 469762 // RootPaneContainer
      end

      classrelation 4089474 // <realization>
	relation 4089474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4089474 // <realization>
	  b parent class_ref 351490 // HasGetTransferHandler
      end

      classrelation 4089602 // rootPane (<unidirectional association>)
	relation 4089602 --->
	  a role_name "rootPane" protected
	    comment "
@see #getRootPane
@see #setRootPane

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4089602 // rootPane (<unidirectional association>)
	  b parent class_ref 434050 // JRootPane
      end

      attribute 2400130 "rootPaneCheckingEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then calls to <code>add</code> and <code>setLayout</code>
will be forwarded to the <code>contentPane</code>. This is initially
false, but is set to true when the <code>JApplet</code> is constructed.

@see #isRootPaneCheckingEnabled
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer

"
      end

      classrelation 4089730 // transferHandler (<unidirectional association>)
	relation 4089730 --->
	  a role_name "transferHandler" private
	    comment "
The <code>TransferHandler</code> for this applet.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4089730 // transferHandler (<unidirectional association>)
	  b parent class_ref 351362 // TransferHandler
      end

      operation 10543490 "JApplet"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a swing applet instance.
<p>
This constructor sets the component's locale property to the value
returned by <code>JComponent.getDefaultLocale</code>.

@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10543618 "createRootPane"
	protected return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called by the constructor methods to create the default rootPane. "
      end

      operation 10543746 "setTransferHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newHandler" type class_ref 351362 // TransferHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code transferHandler} property, which is a mechanism to
support transfer of data into this component. Use {@code null}
if the component does not support data transfer operations.
<p>
If the system property {@code suppressSwingDropSupport} is {@code false}
(the default) and the current drop target on this component is either
{@code null} or not a user-set drop target, this method will change the
drop target as follows: If {@code newHandler} is {@code null} it will
clear the drop target. If not {@code null} it will install a new
{@code DropTarget}.
<p>
Note: When used with {@code JApplet}, {@code TransferHandler} only
provides data import capability, as the data export related methods
are currently typed to {@code JComponent}.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html\">
How to Use Drag and Drop and Data Transfer</a>, a section in
<em>The Java Tutorial</em>, for more information.

@param newHandler the new {@code TransferHandler}

@see TransferHandler
@see #getTransferHandler
@see java.awt.Component#setDropTarget
@since 1.6

@beaninfo
       bound: true
      hidden: true
 description: Mechanism for transfer of data into the component
"
      end

      operation 10543874 "getTransferHandler"
	public return_type class_ref 351362 // TransferHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>transferHandler</code> property.

@return the value of the <code>transferHandler</code> property

@see TransferHandler
@see #setTransferHandler
@since 1.6
"
      end

      operation 10544002 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Just calls <code>paint(g)</code>.  This method was overridden to
prevent an unnecessary call to clear the background.
"
      end

      operation 10544130 "setJMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menuBar" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the menubar for this applet.
@param menuBar the menubar being placed in the applet

@see #getJMenuBar

@beaninfo
     hidden: true
description: The menubar for accessing pulldown menus from this applet.
"
      end

      operation 10544258 "getJMenuBar"
	public return_type class_ref 419586 // JMenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the menubar set on this applet.

@see #setJMenuBar
"
      end

      operation 10544386 "isRootPaneCheckingEnabled"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@return true if <code>add</code> and <code>setLayout</code>
        are forwarded; false otherwise

@see #addImpl
@see #setLayout
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10544514 "setRootPaneCheckingEnabled"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether calls to <code>add</code> and
<code>setLayout</code> are forwarded to the <code>contentPane</code>.

@param enabled  true if <code>add</code> and <code>setLayout</code>
       are forwarded, false if they should operate directly on the
       <code>JApplet</code>.

@see #addImpl
@see #setLayout
@see #isRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
@beaninfo
     hidden: true
description: Whether the add and setLayout methods are forwarded
"
      end

      operation 10544642 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified child <code>Component</code>.
This method is overridden to conditionally forward calls to the
<code>contentPane</code>.
By default, children are added to the <code>contentPane</code> instead
of the frame, refer to {@link javax.swing.RootPaneContainer} for
details.

@param comp the component to be enhanced
@param constraints the constraints to be respected
@param index the index
@exception IllegalArgumentException if <code>index</code> is invalid
@exception IllegalArgumentException if adding the container's parent
                 to itself
@exception IllegalArgumentException if adding a window to a container

@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10544770 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the container. If
<code>comp</code> is not the <code>rootPane</code>, this will forward
the call to the <code>contentPane</code>. This will do nothing if
<code>comp</code> is not a child of the <code>JFrame</code> or
<code>contentPane</code>.

@param comp the component to be removed
@throws NullPointerException if <code>comp</code> is null
@see #add
@see javax.swing.RootPaneContainer
"
      end

      operation 10544898 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "manager" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>LayoutManager</code>.
Overridden to conditionally forward the call to the
<code>contentPane</code>.
Refer to {@link javax.swing.RootPaneContainer} for
more information.

@param manager the <code>LayoutManager</code>
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10545026 "getRootPane"
	public return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the rootPane object for this applet.

@see #setRootPane
@see RootPaneContainer#getRootPane
"
      end

      operation 10545154 "setRootPane"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rootPane property.  This method is called by the constructor.
@param root the rootPane object for this applet

@see #getRootPane

@beaninfo
  hidden: true
description: the RootPane object for this applet.
"
      end

      operation 10545282 "getContentPane"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the contentPane object for this applet.

@see #setContentPane
@see RootPaneContainer#getContentPane
"
      end

      operation 10545410 "setContentPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentPane" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the contentPane property.  This method is called by the constructor.
@param contentPane the contentPane object for this applet

@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the content pane parameter is null
@see #getContentPane
@see RootPaneContainer#setContentPane

@beaninfo
    hidden: true
    description: The client area of the applet where child
                 components are normally inserted.
"
      end

      operation 10545538 "getLayeredPane"
	public return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the layeredPane object for this applet.

@exception java.awt.IllegalComponentStateException (a runtime
           exception) if the layered pane parameter is null
@see #setLayeredPane
@see RootPaneContainer#getLayeredPane
"
      end

      operation 10545666 "setLayeredPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layeredPane" type class_ref 400642 // JLayeredPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the layeredPane property.  This method is called by the constructor.
@param layeredPane the layeredPane object for this applet

@see #getLayeredPane
@see RootPaneContainer#setLayeredPane

@beaninfo
    hidden: true
    description: The pane which holds the various applet layers.
"
      end

      operation 10545794 "getGlassPane"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the glassPane object for this applet.

@see #setGlassPane
@see RootPaneContainer#getGlassPane
"
      end

      operation 10545922 "setGlassPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "glassPane" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the glassPane property.
This method is called by the constructor.
@param glassPane the glassPane object for this applet

@see #getGlassPane
@see RootPaneContainer#setGlassPane

@beaninfo
    hidden: true
    description: A transparent pane used for menu rendering.
"
      end

      operation 10546050 "getGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@since 1.6
"
      end

      operation 10546178 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "time" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the specified rectangle of this component within
<code>time</code> milliseconds.  Refer to <code>RepaintManager</code>
for details on how the repaint is handled.

@param     time   maximum time in milliseconds before update
@param     x    the <i>x</i> coordinate
@param     y    the <i>y</i> coordinate
@param     width    the width
@param     height   the height
@see       RepaintManager
@since     1.6
"
      end

      operation 10546306 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JApplet. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JApplet.
"
      end

      classrelation 4089858 // accessibleContext (<unidirectional association>)
	relation 4089858 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4089858 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 10546434 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this JApplet.
For JApplets, the AccessibleContext takes the form of an
AccessibleJApplet.
A new AccessibleJApplet instance is created if necessary.

@return an AccessibleJApplet that serves as the
        AccessibleContext of this JApplet
"
      end

      class 1274498 "AccessibleJApplet"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4089986 // <generalisation>
	  relation 4089986 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4089986 // <generalisation>
	    b parent class_ref 855682 // AccessibleApplet
	end
      end
    end

    class 1274626 "JToggleButton"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a two-state button.
The <code>JRadioButton</code> and <code>JCheckBox</code> classes
are subclasses of this class.
For information on using them see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/button.html\">How to Use Buttons, Check Boxes, and Radio Buttons</a>,
a section in <em>The Java Tutorial</em>.
<p>
Buttons can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a button has many benefits beyond directly
configuring a button.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: An implementation of a two-state button.

@see JRadioButton
@see JCheckBox
@author Jeff Dinkins
"
      classrelation 4090114 // <generalisation>
	relation 4090114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4090114 // <generalisation>
	  b parent class_ref 384898 // AbstractButton
      end

      classrelation 4090242 // <realization>
	relation 4090242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4090242 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4090370 // uiClassID (<unidirectional association>)
	relation 4090370 --->
	  a role_name "uiClassID" init_value " \"ToggleButtonUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4090370 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10546562 "JToggleButton"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected toggle button
without setting the text or image.
"
      end

      operation 10546690 "JToggleButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected toggle button
with the specified image but no text.

@param icon  the image that the button should display
"
      end

      operation 10546818 "JToggleButton"
	public explicit_return_type ""
	nparams 2
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a toggle button with the specified image
and selection state, but no text.

@param icon  the image that the button should display
@param selected  if true, the button is initially selected;
                 otherwise, the button is initially unselected
"
      end

      operation 10546946 "JToggleButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unselected toggle button with the specified text.

@param text  the string displayed on the toggle button
"
      end

      operation 10547074 "JToggleButton"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a toggle button with the specified text
and selection state.

@param text  the string displayed on the toggle button
@param selected  if true, the button is initially selected;
                 otherwise, the button is initially unselected
"
      end

      operation 10547202 "JToggleButton"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a toggle button where properties are taken from the
Action supplied.

@since 1.3
"
      end

      operation 10547330 "JToggleButton"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a toggle button that has the specified text and image,
and that is initially unselected.

@param text the string displayed on the button
@param icon  the image that the button should display
"
      end

      operation 10547458 "JToggleButton"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a toggle button with the specified text, image, and
selection state.

@param text the text of the toggle button
@param icon  the image that the button should display
@param selected  if true, the button is initially selected;
                 otherwise, the button is initially unselected
"
      end

      operation 10547586 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the UI property to a value from the current look and feel.

@see JComponent#updateUI
"
      end

      operation 10547714 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that specifies the name of the l&amp;f class
that renders this component.

@return String \"ToggleButtonUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo
 description: A string that specifies the name of the L&amp;F class
"
      end

      operation 10547842 "shouldUpdateSelectedStateFromAction"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overriden to return true, JToggleButton supports
the selected state.
"
      end

      class 1274754 "ToggleButtonModel"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4090498 // <generalisation>
	  relation 4090498 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4090498 // <generalisation>
	    b parent class_ref 1266690 // DefaultButtonModel
	end

	operation 10547970 "ToggleButtonModel"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new ToggleButton Model
"
	end

	operation 10548098 "isSelected"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks if the button is selected.
"
	end

	operation 10548226 "setSelected"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the selected state of the button.
@param b true selects the toggle button,
         false deselects the toggle button.
"
	end

	operation 10548354 "setPressed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the pressed state of the toggle button.
"
	end
      end

      operation 10548482 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10548610 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JToggleButton. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JToggleButton.
"
      end

      operation 10548738 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JToggleButton.
For toggle buttons, the AccessibleContext takes the form of an
AccessibleJToggleButton.
A new AccessibleJToggleButton instance is created if necessary.

@return an AccessibleJToggleButton that serves as the
        AccessibleContext of this JToggleButton
@beaninfo
      expert: true
 description: The AccessibleContext associated with this ToggleButton.
"
      end

      class 1274882 "AccessibleJToggleButton"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4090626 // <generalisation>
	  relation 4090626 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4090626 // <generalisation>
	    b parent class_ref 398082 // AccessibleAbstractButton
	end

	classrelation 4090754 // <realization>
	  relation 4090754 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4090754 // <realization>
	    b parent class_ref 389506 // ItemListener
	end

	operation 10548866 "AccessibleJToggleButton"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10548994 "itemStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 390658 // ItemEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Fire accessible property change events when the state of the
toggle button changes.
"
	end

	operation 10549122 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 1275138 "JCheckBoxMenuItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A menu item that can be selected or deselected. If selected, the menu
item typically appears with a checkmark next to it. If unselected or
deselected, the menu item appears without a checkmark. Like a regular
menu item, a check box menu item can have either text or a graphic
icon associated with it, or both.
<p>
Either <code>isSelected</code>/<code>setSelected</code> or
<code>getState</code>/<code>setState</code> can be used
to determine/specify the menu item's selection state. The
preferred methods are <code>isSelected</code> and
<code>setSelected</code>, which work for all menus and buttons.
The <code>getState</code> and <code>setState</code> methods exist for
compatibility with other component sets.
<p>
Menu items can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a menu item has many benefits beyond directly
configuring a menu item.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
For further information and examples of using check box menu items,
see <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\">How to Use Menus</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A menu item which can be selected or deselected.

@author Georges Saab
@author David Karlton
"
      classrelation 4092674 // <generalisation>
	relation 4092674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4092674 // <generalisation>
	  b parent class_ref 386050 // JMenuItem
      end

      classrelation 4092802 // <realization>
	relation 4092802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4092802 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      classrelation 4092930 // <realization>
	relation 4092930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4092930 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4093058 // uiClassID (<unidirectional association>)
	relation 4093058 --->
	  a role_name "uiClassID" init_value " \"CheckBoxMenuItemUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4093058 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10558466 "JCheckBoxMenuItem"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box menu item with no set text or icon.
"
      end

      operation 10558594 "JCheckBoxMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box menu item with an icon.

@param icon the icon of the CheckBoxMenuItem.
"
      end

      operation 10558722 "JCheckBoxMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box menu item with text.

@param text the text of the CheckBoxMenuItem
"
      end

      operation 10558850 "JCheckBoxMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a menu item whose properties are taken from the
Action supplied.

@since 1.3
"
      end

      operation 10558978 "JCheckBoxMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an initially unselected check box menu item with the specified text and icon.

@param text the text of the CheckBoxMenuItem
@param icon the icon of the CheckBoxMenuItem
"
      end

      operation 10559106 "JCheckBoxMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box menu item with the specified text and selection state.

@param text the text of the check box menu item.
@param b the selected state of the check box menu item
"
      end

      operation 10559234 "JCheckBoxMenuItem"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box menu item with the specified text, icon, and selection state.

@param text the text of the check box menu item
@param icon the icon of the check box menu item
@param b the selected state of the check box menu item
"
      end

      operation 10559362 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class
that renders this component.

@return \"CheckBoxMenuItemUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10559490 "getState"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected-state of the item. This method
exists for AWT compatibility only.  New code should
use isSelected() instead.

@return true  if the item is selected
"
      end

      operation 10559618 "setState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected-state of the item. This method
exists for AWT compatibility only.  New code should
use setSelected() instead.

@param b  a boolean value indicating the item's
          selected-state, where true=selected
@beaninfo
description: The selection state of the check box menu item
     hidden: true
"
      end

      operation 10559746 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array (length 1) containing the check box menu item
label or null if the check box is not selected.

@return an array containing one Object -- the text of the menu item
        -- if the item is selected; otherwise null
"
      end

      operation 10559874 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10560002 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JCheckBoxMenuItem. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JCheckBoxMenuItem.
"
      end

      operation 10560130 "shouldUpdateSelectedStateFromAction"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overriden to return true, JCheckBoxMenuItem supports
the selected state.
"
      end

      operation 10560258 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JCheckBoxMenuItem.
For JCheckBoxMenuItems, the AccessibleContext takes the form of an
AccessibleJCheckBoxMenuItem.
A new AccessibleJCheckBoxMenuItem instance is created if necessary.

@return an AccessibleJCheckBoxMenuItem that serves as the
        AccessibleContext of this AccessibleJCheckBoxMenuItem
"
      end

      class 1275522 "AccessibleJCheckBoxMenuItem"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4093186 // <generalisation>
	  relation 4093186 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4093186 // <generalisation>
	    b parent class_ref 1275394 // AccessibleJMenuItem
	end

	operation 10560386 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 1275650 "JDialog"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The main class for creating a dialog window. You can use this class
to create a custom dialog, or invoke the many class methods
in {@link JOptionPane} to create a variety of standard dialogs.
For information about creating dialogs, see
<em>The Java Tutorial</em> section
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html\">How
to Make Dialogs</a>.

<p>

The {@code JDialog} component contains a {@code JRootPane}
as its only child.
The {@code contentPane} should be the parent of any children of the
{@code JDialog}.
As a convenience, the {@code add}, {@code remove}, and {@code setLayout}
methods of this class are overridden, so that they delegate calls
to the corresponding methods of the {@code ContentPane}.
For example, you can add a child component to a dialog as follows:
<pre>
      dialog.add(child);
</pre>
And the child will be added to the contentPane.
The {@code contentPane} is always non-{@code null}.
Attempting to set it to {@code null} generates an exception.
The default {@code contentPane} has a {@code BorderLayout}
manager set on it.
Refer to {@link javax.swing.RootPaneContainer}
for details on adding, removing and setting the {@code LayoutManager}
of a {@code JDialog}.
<p>
Please see the {@code JRootPane} documentation for a complete
description of the {@code contentPane}, {@code glassPane},
and {@code layeredPane} components.
<p>
In a multi-screen environment, you can create a {@code JDialog}
on a different screen device than its owner.  See {@link java.awt.Frame} for
more information.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the {@code java.beans} package.
Please see {@link java.beans.XMLEncoder}.

@see JOptionPane
@see JRootPane
@see javax.swing.RootPaneContainer

@beaninfo
     attribute: isContainer true
     attribute: containerDelegate getContentPane
   description: A toplevel window for creating dialog boxes.

@author David Kloba
@author James Gosling
@author Scott Violet
"
      classrelation 4094722 // <generalisation>
	relation 4094722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4094722 // <generalisation>
	  b parent class_ref 469122 // Dialog
      end

      classrelation 4094850 // <realization>
	relation 4094850 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4094850 // <realization>
	  b parent class_ref 1276162 // WindowConstants
      end

      classrelation 4094978 // <realization>
	relation 4094978 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4094978 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4095106 // <realization>
	relation 4095106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4095106 // <realization>
	  b parent class_ref 469762 // RootPaneContainer
      end

      classrelation 4095234 // <realization>
	relation 4095234 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4095234 // <realization>
	  b parent class_ref 351490 // HasGetTransferHandler
      end

      classrelation 4095362 // defaultLookAndFeelDecoratedKey (<unidirectional association>)
	relation 4095362 --->
	  a role_name "defaultLookAndFeelDecoratedKey" init_value "
            new StringBuffer(\"JDialog.defaultLookAndFeelDecorated\")" class_relation const_relation private
	    comment "
Key into the AppContext, used to check if should provide decorations
by default.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4095362 // defaultLookAndFeelDecoratedKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2402050 "defaultCloseOperation"
	private explicit_type "int"
	init_value " HIDE_ON_CLOSE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4095490 // rootPane (<unidirectional association>)
	relation 4095490 --->
	  a role_name "rootPane" protected
	    comment "
@see #getRootPane
@see #setRootPane

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4095490 // rootPane (<unidirectional association>)
	  b parent class_ref 434050 // JRootPane
      end

      attribute 2402178 "rootPaneCheckingEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true then calls to {@code add} and {@code setLayout}
will be forwarded to the {@code contentPane}. This is initially
false, but is set to true when the {@code JDialog} is constructed.

@see #isRootPaneCheckingEnabled
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer

"
      end

      classrelation 4095618 // transferHandler (<unidirectional association>)
	relation 4095618 --->
	  a role_name "transferHandler" private
	    comment "
The {@code TransferHandler} for this dialog.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4095618 // transferHandler (<unidirectional association>)
	  b parent class_ref 351362 // TransferHandler
      end

      operation 10563970 "JDialog"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a modeless dialog without a title and without a specified
{@code Frame} owner.  A shared, hidden frame will be
set as the owner of the dialog.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.
<p>
NOTE: This constructor does not allow you to create an unowned
{@code JDialog}. To create an unowned {@code JDialog}
you must use either the {@code JDialog(Window)} or
{@code JDialog(Dialog)} constructor with an argument of
{@code null}.

@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10564098 "JDialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 393346 // Frame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a modeless dialog with the specified {@code Frame}
as its owner and an empty title. If {@code owner}
is {@code null}, a shared, hidden frame will be set as the
owner of the dialog.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.
<p>
NOTE: This constructor does not allow you to create an unowned
{@code JDialog}. To create an unowned {@code JDialog}
you must use either the {@code JDialog(Window)} or
{@code JDialog(Dialog)} constructor with an argument of
{@code null}.

@param owner the {@code Frame} from which the dialog is displayed
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10564226 "JDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with an empty title and the specified modality and
{@code Frame} as its owner. If {@code owner} is {@code null},
a shared, hidden frame will be set as the owner of the dialog.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.
<p>
NOTE: This constructor does not allow you to create an unowned
{@code JDialog}. To create an unowned {@code JDialog}
you must use either the {@code JDialog(Window)} or
{@code JDialog(Dialog)} constructor with an argument of
{@code null}.

@param owner the {@code Frame} from which the dialog is displayed
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If {@code true}, the modality type property is set to
    {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog is modeless.
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10564354 "JDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a modeless dialog with the specified title and
with the specified owner frame.  If {@code owner}
is {@code null}, a shared, hidden frame will be set as the
owner of the dialog.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.
<p>
NOTE: This constructor does not allow you to create an unowned
{@code JDialog}. To create an unowned {@code JDialog}
you must use either the {@code JDialog(Window)} or
{@code JDialog(Dialog)} constructor with an argument of
{@code null}.

@param owner the {@code Frame} from which the dialog is displayed
@param title  the {@code String} to display in the dialog's
                 title bar
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10564482 "JDialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with the specified title, owner {@code Frame}
and modality. If {@code owner} is {@code null},
a shared, hidden frame will be set as the owner of this dialog.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.
<p>
NOTE: Any popup components ({@code JComboBox},
{@code JPopupMenu}, {@code JMenuBar})
created within a modal dialog will be forced to be lightweight.
<p>
NOTE: This constructor does not allow you to create an unowned
{@code JDialog}. To create an unowned {@code JDialog}
you must use either the {@code JDialog(Window)} or
{@code JDialog(Dialog)} constructor with an argument of
{@code null}.

@param owner the {@code Frame} from which the dialog is displayed
@param title  the {@code String} to display in the dialog's
    title bar
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If {@code true}, the modality type property is set to
    {@code DEFAULT_MODALITY_TYPE} otherwise the dialog is modeless
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10564610 "JDialog"
	public explicit_return_type ""
	nparams 4
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with the specified title,
owner {@code Frame}, modality and {@code GraphicsConfiguration}.
If {@code owner} is {@code null},
a shared, hidden frame will be set as the owner of this dialog.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.
<p>
NOTE: Any popup components ({@code JComboBox},
{@code JPopupMenu}, {@code JMenuBar})
created within a modal dialog will be forced to be lightweight.
<p>
NOTE: This constructor does not allow you to create an unowned
{@code JDialog}. To create an unowned {@code JDialog}
you must use either the {@code JDialog(Window)} or
{@code JDialog(Dialog)} constructor with an argument of
{@code null}.

@param owner the {@code Frame} from which the dialog is displayed
@param title  the {@code String} to display in the dialog's
    title bar
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If {@code true}, the modality type property is set to
    {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog is modeless.
@param gc the {@code GraphicsConfiguration} of the target screen device;
    if {@code null}, the default system {@code GraphicsConfiguration}
    is assumed
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
@since 1.4
"
      end

      operation 10564738 "JDialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 469122 // Dialog
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a modeless dialog with the specified {@code Dialog}
as its owner and an empty title.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the owner {@code Dialog} from which the dialog is displayed
    or {@code null} if this dialog has no owner
@throws HeadlessException {@code if GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10564866 "JDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with an empty title and the specified modality and
{@code Dialog} as its owner.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the owner {@code Dialog} from which the dialog is displayed
    or {@code null} if this dialog has no owner
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If {@code true}, the modality type property is set to
    {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog is modeless.
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10564994 "JDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a modeless dialog with the specified title and
with the specified owner dialog.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the owner {@code Dialog} from which the dialog is displayed
    or {@code null} if this dialog has no owner
@param title  the {@code String} to display in the dialog's
                 title bar
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10565122 "JDialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with the specified title, modality
and the specified owner {@code Dialog}.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the owner {@code Dialog} from which the dialog is displayed
    or {@code null} if this dialog has no owner
@param title  the {@code String} to display in the dialog's
    title bar
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If {@code true}, the modality type property is set to
    {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog is modeless
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
"
      end

      operation 10565250 "JDialog"
	public explicit_return_type ""
	nparams 4
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with the specified title, owner {@code Dialog},
modality and {@code GraphicsConfiguration}.

<p>
NOTE: Any popup components ({@code JComboBox},
{@code JPopupMenu}, {@code JMenuBar})
created within a modal dialog will be forced to be lightweight.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the owner {@code Dialog} from which the dialog is displayed
    or {@code null} if this dialog has no owner
@param title  the {@code String} to display in the dialog's
    title bar
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If {@code true}, the modality type property is set to
    {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog is modeless
@param gc the {@code GraphicsConfiguration} of the target screen device;
    if {@code null}, the default system {@code GraphicsConfiguration}
    is assumed
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
    returns {@code true}.
@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale
@since 1.4
"
      end

      operation 10565378 "JDialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a modeless dialog with the specified {@code Window}
as its owner and an empty title.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the {@code Window} from which the dialog is displayed or
    {@code null} if this dialog has no owner

@throws IllegalArgumentException
    if the {@code owner} is not an instance of {@link java.awt.Dialog Dialog}
    or {@link java.awt.Frame Frame}
@throws IllegalArgumentException
    if the {@code owner}'s {@code GraphicsConfiguration} is not from a screen device
@throws HeadlessException
    when {@code GraphicsEnvironment.isHeadless()} returns {@code true}

@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale

@since 1.6
"
      end

      operation 10565506 "JDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "modalityType" type class_ref 863362 // ModalityType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with an empty title and the specified modality and
{@code Window} as its owner.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the {@code Window} from which the dialog is displayed or
    {@code null} if this dialog has no owner
@param modalityType specifies whether dialog blocks input to other
    windows when shown. {@code null} value and unsupported modality
    types are equivalent to {@code MODELESS}

@throws IllegalArgumentException
    if the {@code owner} is not an instance of {@link java.awt.Dialog Dialog}
    or {@link java.awt.Frame Frame}
@throws IllegalArgumentException
    if the {@code owner}'s {@code GraphicsConfiguration} is not from a screen device
@throws HeadlessException
    when {@code GraphicsEnvironment.isHeadless()} returns {@code true}
@throws SecurityException
    if the calling thread does not have permission to create modal dialogs
    with the given {@code modalityType}

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale

@since 1.6
"
      end

      operation 10565634 "JDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a modeless dialog with the specified title and owner
{@code Window}.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the {@code Window} from which the dialog is displayed or
    {@code null} if this dialog has no owner
@param title the {@code String} to display in the dialog's
    title bar or {@code null} if the dialog has no title

@throws IllegalArgumentException
    if the {@code owner} is not an instance of {@link java.awt.Dialog Dialog}
    or {@link java.awt.Frame Frame}
@throws IllegalArgumentException
    if the {@code owner}'s {@code GraphicsConfiguration} is not from a screen device
@throws HeadlessException
    when {@code GraphicsEnvironment.isHeadless()} returns {@code true}

@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale

@since 1.6
"
      end

      operation 10565762 "JDialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modalityType" type class_ref 863362 // ModalityType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with the specified title, owner {@code Window} and
modality.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the {@code Window} from which the dialog is displayed or
    {@code null} if this dialog has no owner
@param title the {@code String} to display in the dialog's
    title bar or {@code null} if the dialog has no title
@param modalityType specifies whether dialog blocks input to other
    windows when shown. {@code null} value and unsupported modality
    types are equivalent to {@code MODELESS}

@throws IllegalArgumentException
    if the {@code owner} is not an instance of {@link java.awt.Dialog Dialog}
    or {@link java.awt.Frame Frame}
@throws IllegalArgumentException
    if the {@code owner}'s {@code GraphicsConfiguration} is not from a screen device
@throws HeadlessException
    when {@code GraphicsEnvironment.isHeadless()} returns {@code true}
@throws SecurityException
    if the calling thread does not have permission to create modal dialogs
    with the given {@code modalityType}

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale

@since 1.6
"
      end

      operation 10565890 "JDialog"
	public explicit_return_type ""
	nparams 4
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modalityType" type class_ref 863362 // ModalityType
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a dialog with the specified title, owner {@code Window},
modality and {@code GraphicsConfiguration}.
<p>
NOTE: Any popup components ({@code JComboBox},
{@code JPopupMenu}, {@code JMenuBar})
created within a modal dialog will be forced to be lightweight.
<p>
This constructor sets the component's locale property to the value
returned by {@code JComponent.getDefaultLocale}.

@param owner the {@code Window} from which the dialog is displayed or
    {@code null} if this dialog has no owner
@param title the {@code String} to display in the dialog's
    title bar or {@code null} if the dialog has no title
@param modalityType specifies whether dialog blocks input to other
    windows when shown. {@code null} value and unsupported modality
    types are equivalent to {@code MODELESS}
@param gc the {@code GraphicsConfiguration} of the target screen device;
    if {@code null}, the default system {@code GraphicsConfiguration}
    is assumed
@throws IllegalArgumentException
    if the {@code owner} is not an instance of {@link java.awt.Dialog Dialog}
    or {@link java.awt.Frame Frame}
@throws IllegalArgumentException
    if the {@code owner}'s {@code GraphicsConfiguration} is not from a screen device
@throws HeadlessException
    when {@code GraphicsEnvironment.isHeadless()} returns {@code true}
@throws SecurityException
    if the calling thread does not have permission to create modal dialogs
    with the given {@code modalityType}

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see JComponent#getDefaultLocale

@since 1.6
"
      end

      operation 10566018 "dialogInit"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructors to init the {@code JDialog} properly.
"
      end

      operation 10566146 "createRootPane"
	protected return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create the default
{@code rootPane}.
"
      end

      operation 10566274 "processWindowEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles window events depending on the state of the
{@code defaultCloseOperation} property.

@see #setDefaultCloseOperation
"
      end

      operation 10566402 "setDefaultCloseOperation"
	public explicit_return_type "void"
	nparams 1
	  param in name "operation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the operation that will happen by default when
the user initiates a \"close\" on this dialog.
You must specify one of the following choices:
<br><br>
<ul>
<li>{@code DO_NOTHING_ON_CLOSE}
(defined in {@code WindowConstants}):
Don't do anything; require the
program to handle the operation in the {@code windowClosing}
method of a registered {@code WindowListener} object.

<li>{@code HIDE_ON_CLOSE}
(defined in {@code WindowConstants}):
Automatically hide the dialog after
invoking any registered {@code WindowListener}
objects.

<li>{@code DISPOSE_ON_CLOSE}
(defined in {@code WindowConstants}):
Automatically hide and dispose the
dialog after invoking any registered {@code WindowListener}
objects.
</ul>
<p>
The value is set to {@code HIDE_ON_CLOSE} by default. Changes
to the value of this property cause the firing of a property
change event, with property name \"defaultCloseOperation\".
<p>
<b>Note</b>: When the last displayable window within the
Java virtual machine (VM) is disposed of, the VM may
terminate.  See <a href=\"../../java/awt/doc-files/AWTThreadIssues.html\">
AWT Threading Issues</a> for more information.

@param operation the operation which should be performed when the
       user closes the dialog
@throws IllegalArgumentException if defaultCloseOperation value
        isn't one of the above valid values
@see #addWindowListener
@see #getDefaultCloseOperation
@see WindowConstants

@beaninfo
  preferred: true
      bound: true
       enum: DO_NOTHING_ON_CLOSE WindowConstants.DO_NOTHING_ON_CLOSE
             HIDE_ON_CLOSE       WindowConstants.HIDE_ON_CLOSE
             DISPOSE_ON_CLOSE    WindowConstants.DISPOSE_ON_CLOSE
description: The dialog's default close operation.
"
      end

      operation 10566530 "getDefaultCloseOperation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the operation which occurs when the user
initiates a \"close\" on this dialog.

@return an integer indicating the window-close operation
@see #setDefaultCloseOperation
"
      end

      operation 10566658 "setTransferHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newHandler" type class_ref 351362 // TransferHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code transferHandler} property, which is a mechanism to
support transfer of data into this component. Use {@code null}
if the component does not support data transfer operations.
<p>
If the system property {@code suppressSwingDropSupport} is {@code false}
(the default) and the current drop target on this component is either
{@code null} or not a user-set drop target, this method will change the
drop target as follows: If {@code newHandler} is {@code null} it will
clear the drop target. If not {@code null} it will install a new
{@code DropTarget}.
<p>
Note: When used with {@code JDialog}, {@code TransferHandler} only
provides data import capability, as the data export related methods
are currently typed to {@code JComponent}.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html\">
How to Use Drag and Drop and Data Transfer</a>, a section in
<em>The Java Tutorial</em>, for more information.

@param newHandler the new {@code TransferHandler}

@see TransferHandler
@see #getTransferHandler
@see java.awt.Component#setDropTarget
@since 1.6

@beaninfo
       bound: true
      hidden: true
 description: Mechanism for transfer of data into the component
"
      end

      operation 10566786 "getTransferHandler"
	public return_type class_ref 351362 // TransferHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code transferHandler} property.

@return the value of the {@code transferHandler} property

@see TransferHandler
@see #setTransferHandler
@since 1.6
"
      end

      operation 10566914 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@code paint(g)}.  This method was overridden to
prevent an unnecessary call to clear the background.

@param g  the {@code Graphics} context in which to paint
"
      end

      operation 10567042 "setJMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menu" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the menubar for this dialog.

@param menu the menubar being placed in the dialog

@see #getJMenuBar

@beaninfo
     hidden: true
description: The menubar for accessing pulldown menus from this dialog.
"
      end

      operation 10567170 "getJMenuBar"
	public return_type class_ref 419586 // JMenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the menubar set on this dialog.

@see #setJMenuBar
"
      end

      operation 10567298 "isRootPaneCheckingEnabled"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether calls to {@code add} and
{@code setLayout} are forwarded to the {@code contentPane}.

@return true if {@code add} and {@code setLayout}
        are forwarded; false otherwise

@see #addImpl
@see #setLayout
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10567426 "setRootPaneCheckingEnabled"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether calls to {@code add} and
{@code setLayout} are forwarded to the {@code contentPane}.

@param enabled  true if {@code add} and {@code setLayout}
       are forwarded, false if they should operate directly on the
       {@code JDialog}.

@see #addImpl
@see #setLayout
@see #isRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
@beaninfo
     hidden: true
description: Whether the add and setLayout methods are forwarded
"
      end

      operation 10567554 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified child {@code Component}.
This method is overridden to conditionally forward calls to the
{@code contentPane}.
By default, children are added to the {@code contentPane} instead
of the frame, refer to {@link javax.swing.RootPaneContainer} for
details.

@param comp the component to be enhanced
@param constraints the constraints to be respected
@param index the index
@throws IllegalArgumentException if {@code index} is invalid
@throws IllegalArgumentException if adding the container's parent
                 to itself
@throws IllegalArgumentException if adding a window to a container

@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10567682 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the container. If
{@code comp} is not the {@code rootPane}, this will forward
the call to the {@code contentPane}. This will do nothing if
{@code comp} is not a child of the {@code JDialog} or
{@code contentPane}.

@param comp the component to be removed
@throws NullPointerException if {@code comp} is null
@see #add
@see javax.swing.RootPaneContainer
"
      end

      operation 10567810 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "manager" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code LayoutManager}.
Overridden to conditionally forward the call to the
{@code contentPane}.
Refer to {@link javax.swing.RootPaneContainer} for
more information.

@param manager the {@code LayoutManager}
@see #setRootPaneCheckingEnabled
@see javax.swing.RootPaneContainer
"
      end

      operation 10567938 "getRootPane"
	public return_type class_ref 434050 // JRootPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code rootPane} object for this dialog.

@see #setRootPane
@see RootPaneContainer#getRootPane
"
      end

      operation 10568066 "setRootPane"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "root" type class_ref 434050 // JRootPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code rootPane} property.
This method is called by the constructor.

@param root the {@code rootPane} object for this dialog

@see #getRootPane

@beaninfo
  hidden: true
description: the RootPane object for this dialog.
"
      end

      operation 10568194 "getContentPane"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code contentPane} object for this dialog.

@return the {@code contentPane} property

@see #setContentPane
@see RootPaneContainer#getContentPane
"
      end

      operation 10568322 "setContentPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentPane" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code contentPane} property.
This method is called by the constructor.
<p>
Swing's painting architecture requires an opaque {@code JComponent}
in the containment hierarchy. This is typically provided by the
content pane. If you replace the content pane it is recommended you
replace it with an opaque {@code JComponent}.
@see JRootPane

@param contentPane the {@code contentPane} object for this dialog

@throws java.awt.IllegalComponentStateException (a runtime
           exception) if the content pane parameter is {@code null}
@see #getContentPane
@see RootPaneContainer#setContentPane

@beaninfo
    hidden: true
    description: The client area of the dialog where child
                 components are normally inserted.
"
      end

      operation 10568450 "getLayeredPane"
	public return_type class_ref 400642 // JLayeredPane
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code layeredPane} object for this dialog.

@return the {@code layeredPane} property

@see #setLayeredPane
@see RootPaneContainer#getLayeredPane
"
      end

      operation 10568578 "setLayeredPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "layeredPane" type class_ref 400642 // JLayeredPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code layeredPane} property.
This method is called by the constructor.

@param layeredPane the new {@code layeredPane} property

@throws java.awt.IllegalComponentStateException (a runtime
           exception) if the layered pane parameter is null
@see #getLayeredPane
@see RootPaneContainer#setLayeredPane

@beaninfo
    hidden: true
    description: The pane which holds the various dialog layers.
"
      end

      operation 10568706 "getGlassPane"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code glassPane} object for this dialog.

@return the {@code glassPane} property

@see #setGlassPane
@see RootPaneContainer#getGlassPane
"
      end

      operation 10568834 "setGlassPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "glassPane" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code glassPane} property.
This method is called by the constructor.

@param glassPane the {@code glassPane} object for this dialog
@see #getGlassPane
@see RootPaneContainer#setGlassPane

@beaninfo
    hidden: true
    description: A transparent pane used for menu rendering.
"
      end

      operation 10568962 "getGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@since 1.6
"
      end

      operation 10569090 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "time" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the specified rectangle of this component within
{@code time} milliseconds.  Refer to {@code RepaintManager}
for details on how the repaint is handled.

@param     time   maximum time in milliseconds before update
@param     x    the <i>x</i> coordinate
@param     y    the <i>y</i> coordinate
@param     width    the width
@param     height   the height
@see       RepaintManager
@since     1.6
"
      end

      operation 10569218 "setDefaultLookAndFeelDecorated"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "defaultLookAndFeelDecorated" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint as to whether or not newly created {@code JDialog}s
should have their Window decorations (such as borders, widgets to
close the window, title...) provided by the current look
and feel. If {@code defaultLookAndFeelDecorated} is true,
the current {@code LookAndFeel} supports providing window
decorations, and the current window manager supports undecorated
windows, then newly created {@code JDialog}s will have their
Window decorations provided by the current {@code LookAndFeel}.
Otherwise, newly created {@code JDialog}s will have their
Window decorations provided by the current window manager.
<p>
You can get the same effect on a single JDialog by doing the following:
<pre>
   JDialog dialog = new JDialog();
   dialog.setUndecorated(true);
   dialog.getRootPane().setWindowDecorationStyle(JRootPane.PLAIN_DIALOG);
</pre>

@param defaultLookAndFeelDecorated A hint as to whether or not current
       look and feel should provide window decorations
@see javax.swing.LookAndFeel#getSupportsWindowDecorations
@since 1.4
"
      end

      operation 10569346 "isDefaultLookAndFeelDecorated"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if newly created {@code JDialog}s should have their
Window decorations provided by the current look and feel. This is only
a hint, as certain look and feels may not support this feature.

@return true if look and feel should provide Window decorations.
@since 1.4
"
      end

      operation 10569474 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code JDialog}.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be {@code null}.

@return  a string representation of this {@code JDialog}.
"
      end

      classrelation 4095746 // accessibleContext (<unidirectional association>)
	relation 4095746 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4095746 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 10569602 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this JDialog.
For JDialogs, the AccessibleContext takes the form of an
AccessibleJDialog.
A new AccessibleJDialog instance is created if necessary.

@return an AccessibleJDialog that serves as the
        AccessibleContext of this JDialog
"
      end

      class 1276290 "AccessibleJDialog"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4095874 // <generalisation>
	  relation 4095874 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4095874 // <generalisation>
	    b parent class_ref 863746 // AccessibleAWTDialog
	end

	operation 10569730 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleContext methods


Get the accessible name of this object.

@return the localized name of the object -- can be null if this
object does not have a name
"
	end

	operation 10569858 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see AccessibleState
"
	end
      end
    end

    class 1276034 "ColorChooserDialog"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " inner class AccessibleJColorChooser

Class which builds a color chooser dialog consisting of
a JColorChooser with \"Ok\", \"Cancel\", and \"Reset\" buttons.

Note: This needs to be fixed to deal with localization!
"
      classrelation 4096002 // <generalisation>
	relation 4096002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4096002 // <generalisation>
	  b parent class_ref 1275650 // JDialog
      end

      classrelation 4096130 // initialColor (<unidirectional association>)
	relation 4096130 --->
	  a role_name "initialColor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4096130 // initialColor (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 4096258 // chooserPane (<unidirectional association>)
	relation 4096258 --->
	  a role_name "chooserPane" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4096258 // chooserPane (<unidirectional association>)
	  b parent class_ref 359170 // JColorChooser
      end

      classrelation 4096386 // cancelButton (<unidirectional association>)
	relation 4096386 --->
	  a role_name "cancelButton" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4096386 // cancelButton (<unidirectional association>)
	  b parent class_ref 389378 // JButton
      end

      operation 10569986 "ColorChooserDialog"
	public explicit_return_type ""
	nparams 7
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "chooserPane" type class_ref 359170 // JColorChooser
	  param inout name "okListener" type class_ref 354306 // ActionListener
	  param inout name "cancelListener" type class_ref 354306 // ActionListener
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10570114 "ColorChooserDialog"
	public explicit_return_type ""
	nparams 7
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "chooserPane" type class_ref 359170 // JColorChooser
	  param inout name "okListener" type class_ref 354306 // ActionListener
	  param inout name "cancelListener" type class_ref 354306 // ActionListener
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10570242 "initColorChooserDialog"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "chooserPane" type class_ref 359170 // JColorChooser
	  param inout name "okListener" type class_ref 354306 // ActionListener
	  param inout name "cancelListener" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10570370 "show"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10570498 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1276418 "Closer"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4096514 // <generalisation>
	  relation 4096514 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4096514 // <generalisation>
	    b parent class_ref 477570 // WindowAdapter
	end

	classrelation 4096642 // <realization>
	  relation 4096642 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4096642 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10570626 "windowClosing"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1276546 "DisposeOnClose"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4096770 // <generalisation>
	  relation 4096770 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4096770 // <generalisation>
	    b parent class_ref 440194 // ComponentAdapter
	end

	classrelation 4096898 // <realization>
	  relation 4096898 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4096898 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	operation 10570754 "componentHidden"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 346242 // ComponentEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1276162 "WindowConstants"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Constants used to control the window-closing operation.
The <code>setDefaultCloseOperation</code> and
<code>getDefaultCloseOperation</code> methods
provided by <code>JFrame</code>,
<code>JInternalFrame</code>, and
<code>JDialog</code>
use these constants.
For examples of setting the default window-closing operation, see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/frame.html#windowevents\">Responding to Window-Closing Events</a>,
a section in <em>The Java Tutorial</em>.
@see JFrame#setDefaultCloseOperation(int)
@see JDialog#setDefaultCloseOperation(int)
@see JInternalFrame#setDefaultCloseOperation(int)


@author Amy Fowler
"
      attribute 2401538 "DO_NOTHING_ON_CLOSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The do-nothing default window close operation.

"
      end

      attribute 2401666 "HIDE_ON_CLOSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The hide-window default window close operation

"
      end

      attribute 2401794 "DISPOSE_ON_CLOSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The dispose-window default window close operation.
<p>
<b>Note</b>: When the last displayable window
within the Java virtual machine (VM) is disposed of, the VM may
terminate.  See <a href=\"../../java/awt/doc-files/AWTThreadIssues.html\">
AWT Threading Issues</a> for more information.
@see java.awt.Window#dispose()
@see JInternalFrame#dispose()

"
      end

      attribute 2401922 "EXIT_ON_CLOSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The exit application default window close operation. Attempting
to set this on Windows that support this, such as
<code>JFrame</code>, may throw a <code>SecurityException</code> based
on the <code>SecurityManager</code>.
It is recommended you only use this in an application.

@since 1.4
@see JFrame#setDefaultCloseOperation

"
      end
    end

    class 1276674 "ColorTracker"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 4097026 // <realization>
	relation 4097026 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4097026 // <realization>
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 4097154 // <realization>
	relation 4097154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4097154 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4097282 // chooser (<unidirectional association>)
	relation 4097282 --->
	  a role_name "chooser" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4097282 // chooser (<unidirectional association>)
	  b parent class_ref 359170 // JColorChooser
      end

      classrelation 4097410 // color (<unidirectional association>)
	relation 4097410 --->
	  a role_name "color" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4097410 // color (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      operation 10570882 "ColorTracker"
	public explicit_return_type ""
	nparams 1
	  param inout name "c" type class_ref 359170 // JColorChooser
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10571010 "actionPerformed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10571138 "getColor"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1277186 "JEditorPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A text component to edit various kinds of content.
You can find how-to information and examples of using editor panes in
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/text.html\">Using Text Components</a>,
a section in <em>The Java Tutorial.</em>

<p>
This component uses implementations of the
<code>EditorKit</code> to accomplish its behavior. It effectively
morphs into the proper kind of text editor for the kind
of content it is given.  The content type that editor is bound
to at any given time is determined by the <code>EditorKit</code> currently
installed.  If the content is set to a new URL, its type is used
to determine the <code>EditorKit</code> that should be used to
load the content.
<p>
By default, the following types of content are known:
<dl>
<dt><b>text/plain</b>
<dd>Plain text, which is the default the type given isn't
recognized.  The kit used in this case is an extension of
<code>DefaultEditorKit</code> that produces a wrapped plain text view.
<dt><b>text/html</b>
<dd>HTML text.  The kit used in this case is the class
<code>javax.swing.text.html.HTMLEditorKit</code>
which provides HTML 3.2 support.
<dt><b>text/rtf</b>
<dd>RTF text.  The kit used in this case is the class
<code>javax.swing.text.rtf.RTFEditorKit</code>
which provides a limited support of the Rich Text Format.
</dl>
<p>
There are several ways to load content into this component.
<ol>
<li>
The {@link #setText setText} method can be used to initialize
the component from a string.  In this case the current
<code>EditorKit</code> will be used, and the content type will be
expected to be of this type.
<li>
The {@link #read read} method can be used to initialize the
component from a <code>Reader</code>.  Note that if the content type is HTML,
relative references (e.g. for things like images) can't be resolved
unless the &lt;base&gt; tag is used or the <em>Base</em> property
on <code>HTMLDocument</code> is set.
In this case the current <code>EditorKit</code> will be used,
and the content type will be expected to be of this type.
<li>
The {@link #setPage setPage} method can be used to initialize
the component from a URL.  In this case, the content type will be
determined from the URL, and the registered <code>EditorKit</code>
for that content type will be set.
</ol>
<p>
Some kinds of content may provide hyperlink support by generating
hyperlink events.  The HTML <code>EditorKit</code> will generate
hyperlink events if the <code>JEditorPane</code> is <em>not editable</em>
(<code>JEditorPane.setEditable(false);</code> has been called).
If HTML frames are embedded in the document, the typical response would be
to change a portion of the current document.  The following code
fragment is a possible hyperlink listener implementation, that treats
HTML frame events specially, and simply displays any other activated
hyperlinks.
<pre>

&nbsp;    class Hyperactive implements HyperlinkListener {
&nbsp;
&nbsp;        public void hyperlinkUpdate(HyperlinkEvent e) {
&nbsp;            if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
&nbsp;                JEditorPane pane = (JEditorPane) e.getSource();
&nbsp;                if (e instanceof HTMLFrameHyperlinkEvent) {
&nbsp;                    HTMLFrameHyperlinkEvent  evt = (HTMLFrameHyperlinkEvent)e;
&nbsp;                    HTMLDocument doc = (HTMLDocument)pane.getDocument();
&nbsp;                    doc.processHTMLFrameHyperlinkEvent(evt);
&nbsp;                } else {
&nbsp;                    try {
&nbsp;                        pane.setPage(e.getURL());
&nbsp;                    } catch (Throwable t) {
&nbsp;                        t.printStackTrace();
&nbsp;                    }
&nbsp;                }
&nbsp;            }
&nbsp;        }
&nbsp;    }

</pre>
<p>
For information on customizing how <b>text/html</b> is rendered please see
{@link #W3C_LENGTH_UNITS} and {@link #HONOR_DISPLAY_PROPERTIES}
<p>
Culturally dependent information in some documents is handled through
a mechanism called character encoding.  Character encoding is an
unambiguous mapping of the members of a character set (letters, ideographs,
digits, symbols, or control functions) to specific numeric code values. It
represents the way the file is stored. Example character encodings are
ISO-8859-1, ISO-8859-5, Shift-jis, Euc-jp, and UTF-8. When the file is
passed to an user agent (<code>JEditorPane</code>) it is converted to
the document character set (ISO-10646 aka Unicode).
<p>
There are multiple ways to get a character set mapping to happen
with <code>JEditorPane</code>.
<ol>
<li>
One way is to specify the character set as a parameter of the MIME
type.  This will be established by a call to the
{@link #setContentType setContentType} method.  If the content
is loaded by the {@link #setPage setPage} method the content
type will have been set according to the specification of the URL.
It the file is loaded directly, the content type would be expected to
have been set prior to loading.
<li>
Another way the character set can be specified is in the document itself.
This requires reading the document prior to determining the character set
that is desired.  To handle this, it is expected that the
<code>EditorKit</code>.read operation throw a
<code>ChangedCharSetException</code> which will
be caught.  The read is then restarted with a new Reader that uses
the character set specified in the <code>ChangedCharSetException</code>
(which is an <code>IOException</code>).
</ol>
<p>
<dl>
<dt><b><font size=+1>Newlines</font></b>
<dd>
For a discussion on how newlines are handled, see
<a href=\"text/DefaultEditorKit.html\">DefaultEditorKit</a>.
</dl>

<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A text component to edit various types of content.

@author  Timothy Prinzing
"
      classrelation 4100098 // <generalisation>
	relation 4100098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4100098 // <generalisation>
	  b parent class_ref 371074 // JTextComponent
      end

      operation 10579330 "JEditorPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JEditorPane</code>.
The document model is set to <code>null</code>.
"
      end

      operation 10579458 "JEditorPane"
	public explicit_return_type ""
	nparams 1
	  param inout name "initialPage" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JEditorPane</code> based on a specified URL for input.

@param initialPage the URL
@exception IOException if the URL is <code>null</code>
         or cannot be accessed
"
      end

      operation 10579586 "JEditorPane"
	public explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JEditorPane</code> based on a string containing
a URL specification.

@param url the URL
@exception IOException if the URL is <code>null</code> or
         cannot be accessed
"
      end

      operation 10579714 "JEditorPane"
	public explicit_return_type ""
	nparams 2
	  param inout name "type" type class_ref 128130 // String
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JEditorPane</code> that has been initialized
to the given text.  This is a convenience constructor that calls the
<code>setContentType</code> and <code>setText</code> methods.

@param type mime type of the given text
@param text the text to initialize with; may be <code>null</code>
@exception NullPointerException if the <code>type</code> parameter
         is <code>null</code>
"
      end

      operation 10579842 "addHyperlinkListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1277314 // HyperlinkListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a hyperlink listener for notification of any changes, for example
when a link is selected and entered.

@param listener the listener
"
      end

      operation 10579970 "removeHyperlinkListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1277314 // HyperlinkListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a hyperlink listener.

@param listener the listener
"
      end

      operation 10580098 "getHyperlinkListeners"
	public return_type class_ref 1277314 // HyperlinkListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>HyperLinkListener</code>s added
to this JEditorPane with addHyperlinkListener().

@return all of the <code>HyperLinkListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10580226 "fireHyperlinkUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1277442 // HyperlinkEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  This is normally called
by the currently installed <code>EditorKit</code> if a content type
that supports hyperlinks is currently active and there
was activity with a link.  The listener list is processed
last to first.

@param e the event
@see EventListenerList
"
      end

      operation 10580354 "setPage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "page" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current URL being displayed.  The content type of the
pane is set, and if the editor kit for the pane is
non-<code>null</code>, then
a new default document is created and the URL is read into it.
If the URL contains and reference location, the location will
be scrolled to by calling the <code>scrollToReference</code>
method. If the desired URL is the one currently being displayed,
the document will not be reloaded. To force a document
reload it is necessary to clear the stream description property
of the document. The following code shows how this can be done:

<pre>
  Document doc = jEditorPane.getDocument();
  doc.putProperty(Document.StreamDescriptionProperty, null);
</pre>

If the desired URL is not the one currently being
displayed, the <code>getStream</code> method is called to
give subclasses control over the stream provided.
<p>
This may load either synchronously or asynchronously
depending upon the document returned by the <code>EditorKit</code>.
If the <code>Document</code> is of type
<code>AbstractDocument</code> and has a value returned by
<code>AbstractDocument.getAsynchronousLoadPriority</code>
that is greater than or equal to zero, the page will be
loaded on a separate thread using that priority.
<p>
If the document is loaded synchronously, it will be
filled in with the stream prior to being installed into
the editor with a call to <code>setDocument</code>, which
is bound and will fire a property change event.  If an
<code>IOException</code> is thrown the partially loaded
document will
be discarded and neither the document or page property
change events will be fired.  If the document is
successfully loaded and installed, a view will be
built for it by the UI which will then be scrolled if
necessary, and then the page property change event
will be fired.
<p>
If the document is loaded asynchronously, the document
will be installed into the editor immediately using a
call to <code>setDocument</code> which will fire a
document property change event, then a thread will be
created which will begin doing the actual loading.
In this case, the page property change event will not be
fired by the call to this method directly, but rather will be
fired when the thread doing the loading has finished.
It will also be fired on the event-dispatch thread.
Since the calling thread can not throw an <code>IOException</code>
in the event of failure on the other thread, the page
property change event will be fired when the other
thread is done whether the load was successful or not.

@param page the URL of the page
@exception IOException for a <code>null</code> or invalid
         page specification, or exception from the stream being read
@see #getPage
@beaninfo
 description: the URL used to set content
       bound: true
      expert: true
"
      end

      operation 10580482 "initializeModel"
	private return_type class_ref 405378 // Document
	nparams 2
	  param inout name "kit" type class_ref 401538 // EditorKit
	  param inout name "page" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create model and initialize document properties from page properties.
"
      end

      operation 10580610 "getAsynchronousLoadPriority"
	private explicit_return_type "int"
	nparams 1
	  param inout name "doc" type class_ref 405378 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return load priority for the document or -1 if priority not supported.
"
      end

      operation 10580738 "read"
	public explicit_return_type "void"
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "desc" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method initializes from a stream.  If the kit is
set to be of type <code>HTMLEditorKit</code>, and the
<code>desc</code> parameter is an <code>HTMLDocument</code>,
then it invokes the <code>HTMLEditorKit</code> to initiate
the read. Otherwise it calls the superclass
method which loads the model as plain text.

@param in the stream from which to read
@param desc an object describing the stream
@exception IOException as thrown by the stream being
         used to initialize
@see JTextComponent#read
@see #setDocument
"
      end

      operation 10580866 "read"
	package explicit_return_type "void"
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "doc" type class_ref 405378 // Document
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method invokes the <code>EditorKit</code> to initiate a
read.  In the case where a <code>ChangedCharSetException</code>
is thrown this exception will contain the new CharSet.
Therefore the <code>read</code> operation
is then restarted after building a new Reader with the new charset.

@param in the inputstream to use
@param doc the document to load

"
      end

      class 1277570 "PageLoader"
	visibility package 
	nactuals 2
	actual class class_ref 1277698 // SwingWorker
	  rank 0 explicit_value ""
	actual class class_ref 1277698 // SwingWorker
	  rank 1 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4101506 // <realization>
	  relation 4101506 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4101506 // <realization>
	    b parent class_ref 1277698 // SwingWorker
	end

	operation 10584578 "PageLoader"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "doc" type class_ref 405378 // Document
	    param inout name "in" type class_ref 146434 // InputStream
	    param inout name "old" type class_ref 243458 // URL
	    param inout name "page" type class_ref 243458 // URL
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct an asynchronous page loader.
"
	end

	operation 10584706 "doInBackground"
	  protected return_type class_ref 243458 // URL
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Try to load the document, then scroll the view
to the reference (if specified).  When done, fire
a page property change event.
"
	end

	classrelation 4101634 // in (<unidirectional association>)
	  relation 4101634 --->
	    a role_name "in" package
	      comment "
The stream to load the document with

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4101634 // in (<unidirectional association>)
	    b parent class_ref 146434 // InputStream
	end

	classrelation 4101762 // old (<unidirectional association>)
	  relation 4101762 --->
	    a role_name "old" package
	      comment "
URL of the old page that was replaced (for the property change event)

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4101762 // old (<unidirectional association>)
	    b parent class_ref 243458 // URL
	end

	classrelation 4101890 // page (<unidirectional association>)
	  relation 4101890 --->
	    a role_name "page" package
	      comment "
URL of the page being loaded (for the property change event)

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4101890 // page (<unidirectional association>)
	    b parent class_ref 243458 // URL
	end

	classrelation 4102018 // doc (<unidirectional association>)
	  relation 4102018 --->
	    a role_name "doc" package
	      comment "
The Document instance to load into. This is cached in case a
new Document is created between the time the thread this is created
and run.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4102018 // doc (<unidirectional association>)
	    b parent class_ref 405378 // Document
	end
      end

      operation 10584834 "getStream"
	protected return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "page" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches a stream for the given URL, which is about to
be loaded by the <code>setPage</code> method.  By
default, this simply opens the URL and returns the
stream.  This can be reimplemented to do useful things
like fetch the stream from a cache, monitor the progress
of the stream, etc.
<p>
This method is expected to have the the side effect of
establishing the content type, and therefore setting the
appropriate <code>EditorKit</code> to use for loading the stream.
<p>
If this the stream was an http connection, redirects
will be followed and the resulting URL will be set as
the <code>Document.StreamDescriptionProperty</code> so that relative
URL's can be properly resolved.

@param page  the URL of the page
"
      end

      operation 10584962 "handleConnectionProperties"
	private explicit_return_type "void"
	nparams 1
	  param inout name "conn" type class_ref 783746 // URLConnection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle URL connection properties (most notably, content type).
"
      end

      operation 10585090 "getPostData"
	private return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10585218 "handlePostData"
	private explicit_return_type "void"
	nparams 2
	  param inout name "conn" type class_ref 672514 // HttpURLConnection
	  param inout name "postData" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10585346 "scrollToReference"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reference" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scrolls the view to the given reference location
(that is, the value returned by the <code>UL.getRef</code>
method for the URL being displayed).  By default, this
method only knows how to locate a reference in an
HTMLDocument.  The implementation calls the
<code>scrollRectToVisible</code> method to
accomplish the actual scrolling.  If scrolling to a
reference location is needed for document types other
than HTML, this method should be reimplemented.
This method will have no effect if the component
is not visible.

@param reference the named location to scroll to
"
      end

      operation 10585474 "getPage"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current URL being displayed.  If a URL was
not specified in the creation of the document, this
will return <code>null</code>, and relative URL's will not be
resolved.

@return the URL, or <code>null</code> if none
"
      end

      operation 10585602 "setPage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current URL being displayed.

@param url the URL for display
@exception IOException for a <code>null</code> or invalid URL
         specification
"
      end

      operation 10585730 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the class ID for the UI.

@return the string \"EditorPaneUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10585858 "createDefaultEditorKit"
	protected return_type class_ref 401538 // EditorKit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the default editor kit (<code>PlainEditorKit</code>) for when
the component is first created.

@return the editor kit
"
      end

      operation 10585986 "getEditorKit"
	public return_type class_ref 401538 // EditorKit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the currently installed kit for handling content.
<code>createDefaultEditorKit</code> is called to set up a default
if necessary.

@return the editor kit
"
      end

      operation 10586114 "getContentType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type of content that this editor
is currently set to deal with.  This is
defined to be the type associated with the
currently installed <code>EditorKit</code>.

@return the content type, <code>null</code> if no editor kit set
"
      end

      operation 10586242 "setContentType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of content that this editor
handles.  This calls <code>getEditorKitForContentType</code>,
and then <code>setEditorKit</code> if an editor kit can
be successfully located.  This is mostly convenience method
that can be used as an alternative to calling
<code>setEditorKit</code> directly.
<p>
If there is a charset definition specified as a parameter
of the content type specification, it will be used when
loading input streams using the associated <code>EditorKit</code>.
For example if the type is specified as
<code>text/html; charset=EUC-JP</code> the content
will be loaded using the <code>EditorKit</code> registered for
<code>text/html</code> and the Reader provided to
the <code>EditorKit</code> to load unicode into the document will
use the <code>EUC-JP</code> charset for translating
to unicode.  If the type is not recognized, the content
will be loaded using the <code>EditorKit</code> registered
for plain text, <code>text/plain</code>.

@param type the non-<code>null</code> mime type for the content editing
  support
@see #getContentType
@beaninfo
 description: the type of content
@throws NullPointerException if the <code>type</code> parameter
         is <code>null</code>
"
      end

      operation 10586370 "setCharsetFromContentTypeParameters"
	private explicit_return_type "void"
	nparams 1
	  param inout name "paramlist" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets the charset information specified as part
of the content type in the http header information.
"
      end

      operation 10586498 "setEditorKit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "kit" type class_ref 401538 // EditorKit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the currently installed kit for handling
content.  This is the bound property that
establishes the content type of the editor.
Any old kit is first deinstalled, then if kit is
non-<code>null</code>,
the new kit is installed, and a default document created for it.
A <code>PropertyChange</code> event (\"editorKit\") is always fired when
<code>setEditorKit</code> is called.
<p>
<em>NOTE: This has the side effect of changing the model,
because the <code>EditorKit</code> is the source of how a
particular type
of content is modeled.  This method will cause <code>setDocument</code>
to be called on behalf of the caller to ensure integrity
of the internal state.</em>

@param kit the desired editor behavior
@see #getEditorKit
@beaninfo
 description: the currently installed kit for handling content
       bound: true
      expert: true
"
      end

      operation 10586626 "getEditorKitForContentType"
	public return_type class_ref 401538 // EditorKit
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the editor kit to use for the given type
of content.  This is called when a type is requested
that doesn't match the currently installed type.
If the component doesn't have an <code>EditorKit</code> registered
for the given type, it will try to create an
<code>EditorKit</code> from the default <code>EditorKit</code> registry.
If that fails, a <code>PlainEditorKit</code> is used on the
assumption that all text documents can be represented
as plain text.
<p>
This method can be reimplemented to use some
other kind of type registry.  This can
be reimplemented to use the Java Activation
Framework, for example.

@param type the non-<code>null</code> content type
@return the editor kit
"
      end

      operation 10586754 "setEditorKitForContentType"
	public explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 128130 // String
	  param inout name "k" type class_ref 401538 // EditorKit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly sets the editor kit to use for the given type.  A
look-and-feel implementation might use this in conjunction
with <code>createEditorKitForContentType</code> to install handlers for
content types with a look-and-feel bias.

@param type the non-<code>null</code> content type
@param k the editor kit to be set
"
      end

      operation 10586882 "replaceSelection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "content" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Replaces the currently selected content with new content
represented by the given string.  If there is no selection
this amounts to an insert of the given text.  If there
is no replacement text (i.e. the content string is empty
or <code>null</code>) this amounts to a removal of the
current selection.  The replacement text will have the
attributes currently defined for input.  If the component is not
editable, beep and return.

@param content  the content to replace the selection with.  This
  value can be <code>null</code>
"
      end

      operation 10587010 "createEditorKitForContentType"
	class_operation public return_type class_ref 401538 // EditorKit
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a handler for the given type from the default registry
of editor kits.  The registry is created if necessary.  If the
registered class has not yet been loaded, an attempt
is made to dynamically load the prototype of the kit for the
given type.  If the type was registered with a <code>ClassLoader</code>,
that <code>ClassLoader</code> will be used to load the prototype.
If there was no registered <code>ClassLoader</code>,
<code>Class.forName</code> will be used to load the prototype.
<p>
Once a prototype <code>EditorKit</code> instance is successfully
located, it is cloned and the clone is returned.

@param type the content type
@return the editor kit, or <code>null</code> if there is nothing
  registered for the given type
"
      end

      operation 10587138 "registerEditorKitForContentType"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 128130 // String
	  param inout name "classname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establishes the default bindings of <code>type</code> to
<code>classname</code>.
The class will be dynamically loaded later when actually
needed, and can be safely changed before attempted uses
to avoid loading unwanted classes.  The prototype
<code>EditorKit</code> will be loaded with <code>Class.forName</code>
when registered with this method.

@param type the non-<code>null</code> content type
@param classname the class to load later
"
      end

      operation 10587266 "registerEditorKitForContentType"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "type" type class_ref 128130 // String
	  param inout name "classname" type class_ref 128130 // String
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Establishes the default bindings of <code>type</code> to
<code>classname</code>.
The class will be dynamically loaded later when actually
needed using the given <code>ClassLoader</code>,
and can be safely changed
before attempted uses to avoid loading unwanted classes.

@param type the non-<code>null</code> content type
@param classname the class to load later
@param loader the <code>ClassLoader</code> to use to load the name
"
      end

      operation 10587394 "getEditorKitClassNameForContentType"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently registered <code>EditorKit</code>
class name for the type <code>type</code>.

@param type  the non-<code>null</code> content type

@since 1.3
"
      end

      operation 10587522 "getKitTypeRegistry"
	class_operation private return_type class_ref 137090 // Hashtable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10587650 "getKitLoaderRegistry"
	class_operation private return_type class_ref 137090 // Hashtable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ClassLoader> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10587778 "getKitRegisty"
	class_operation private return_type class_ref 137090 // Hashtable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, EditorKit> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10587906 "loadDefaultKitsIfNecessary"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is invoked every time the registries are accessed. Loading
is done this way instead of via a static as the static is only
called once when running in plugin resulting in the entries only
appearing in the first applet.
"
      end

      operation 10588034 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- java.awt.Component methods --------------------------

Returns the preferred size for the <code>JEditorPane</code>.
The preferred size for <code>JEditorPane</code> is slightly altered
from the preferred size of the superclass.  If the size
of the viewport has become smaller than the minimum size
of the component, the scrollable definition for tracking
width or height will turn to false.  The default viewport
layout will give the preferred size, and that is not desired
in the case where the scrollable is tracking.  In that case
the <em>normal</em> preferred size is adjusted to the
minimum size.  This allows things like HTML tables to
shrink down to their minimum size and then be laid out at
their minimum size, refusing to shrink any further.

@return a <code>Dimension</code> containing the preferred size
"
      end

      operation 10588162 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- JTextComponent methods -----------------------------

Sets the text of this <code>TextComponent</code> to the specified
content,
which is expected to be in the format of the content type of
this editor.  For example, if the type is set to <code>text/html</code>
the string should be specified in terms of HTML.
<p>
This is implemented to remove the contents of the current document,
and replace them by parsing the given string using the current
<code>EditorKit</code>.  This gives the semantics of the
superclass by not changing
out the model, while supporting the content type currently set on
this component.  The assumption is that the previous content is
relatively
small, and that the previous content doesn't have side effects.
Both of those assumptions can be violated and cause undesirable results.
To avoid this, create a new document,
<code>getEditorKit().createDefaultDocument()</code>, and replace the
existing <code>Document</code> with the new one. You are then assured the
previous <code>Document</code> won't have any lingering state.
<ol>
<li>
Leaving the existing model in place means that the old view will be
torn down, and a new view created, where replacing the document would
avoid the tear down of the old view.
<li>
Some formats (such as HTML) can install things into the document that
can influence future contents.  HTML can have style information embedded
that would influence the next content installed unexpectedly.
</ol>
<p>
An alternative way to load this component with a string would be to
create a StringReader and call the read method.  In this case the model
would be replaced after it was initialized with the contents of the
string.

@param t the new text to be set; if <code>null</code> the old
   text will be deleted
@see #getText
@beaninfo
description: the text of this component
"
      end

      operation 10588290 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text contained in this <code>TextComponent</code>
in terms of the
content type of this editor.  If an exception is thrown while
attempting to retrieve the text, <code>null</code> will be returned.
This is implemented to call <code>JTextComponent.write</code> with
a <code>StringWriter</code>.

@return the text
@see #setText
"
      end

      operation 10588418 "getScrollableTracksViewportWidth"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Scrollable  ----------------------------------------

Returns true if a viewport should always force the width of this
<code>Scrollable</code> to match the width of the viewport.

@return true if a viewport should force the Scrollables width to
match its own, false otherwise
"
      end

      operation 10588546 "getScrollableTracksViewportHeight"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a viewport should always force the height of this
<code>Scrollable</code> to match the height of the viewport.

@return true if a viewport should force the
         <code>Scrollable</code>'s height to match its own,
         false otherwise
"
      end

      operation 10588674 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Serialization ------------------------------------

See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      classrelation 4102146 // pageLoader (<unidirectional association>)
	relation 4102146 --->
	  a role_name "pageLoader" private
	    comment " --- variables ---------------------------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL, Object> ${name}${value};
"
	    classrelation_ref 4102146 // pageLoader (<unidirectional association>)
	  b parent class_ref 1277698 // SwingWorker
      end

      classrelation 4102274 // kit (<unidirectional association>)
	relation 4102274 --->
	  a role_name "kit" private
	    comment "
Current content binding of the editor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4102274 // kit (<unidirectional association>)
	  b parent class_ref 401538 // EditorKit
      end

      attribute 2404354 "isUserSetEditorKit"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4102402 // pageProperties (<unidirectional association>)
	relation 4102402 --->
	  a role_name "pageProperties" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 4102402 // pageProperties (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 4102530 // PostDataProperty (<unidirectional association>)
	relation 4102530 --->
	  a role_name "PostDataProperty" init_value " \"javax.swing.JEditorPane.postdata\"" class_relation const_relation package
	    comment " Should be kept in sync with javax.swing.text.html.FormView counterpart. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4102530 // PostDataProperty (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4102658 // typeHandlers (<unidirectional association>)
	relation 4102658 --->
	  a role_name "typeHandlers" private
	    comment "
Table of registered type handlers for this editor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, EditorKit> ${name}${value};
"
	    classrelation_ref 4102658 // typeHandlers (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 4102786 // kitRegistryKey (<unidirectional association>)
	relation 4102786 --->
	  a role_name "kitRegistryKey" init_value "
        new StringBuffer(\"JEditorPane.kitRegistry\")" class_relation const_relation private
	    comment "
Private AppContext keys for this class's static variables.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4102786 // kitRegistryKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4102914 // kitTypeRegistryKey (<unidirectional association>)
	relation 4102914 --->
	  a role_name "kitTypeRegistryKey" init_value "
        new StringBuffer(\"JEditorPane.kitTypeRegistry\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4102914 // kitTypeRegistryKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4103042 // kitLoaderRegistryKey (<unidirectional association>)
	relation 4103042 --->
	  a role_name "kitLoaderRegistryKey" init_value "
        new StringBuffer(\"JEditorPane.kitLoaderRegistry\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4103042 // kitLoaderRegistryKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4103170 // uiClassID (<unidirectional association>)
	relation 4103170 --->
	  a role_name "uiClassID" init_value " \"EditorPaneUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4103170 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4103298 // W3C_LENGTH_UNITS (<unidirectional association>)
	relation 4103298 --->
	  a role_name "W3C_LENGTH_UNITS" init_value " \"JEditorPane.w3cLengthUnits\"" class_relation const_relation public
	    comment "
Key for a client property used to indicate whether
<a href=\"http://www.w3.org/TR/CSS21/syndata.html#length-units\">
w3c compliant</a> length units are used for html rendering.
<p>
By default this is not enabled; to enable
it set the client {@link #putClientProperty property} with this name
to <code>Boolean.TRUE</code>.

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4103298 // W3C_LENGTH_UNITS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4103426 // HONOR_DISPLAY_PROPERTIES (<unidirectional association>)
	relation 4103426 --->
	  a role_name "HONOR_DISPLAY_PROPERTIES" init_value " \"JEditorPane.honorDisplayProperties\"" class_relation const_relation public
	    comment "
Key for a client property used to indicate whether
the default font and foreground color from the component are
used if a font or foreground color is not specified in the styled
text.
<p>
The default varies based on the look and feel;
to enable it set the client {@link #putClientProperty property} with
this name to <code>Boolean.TRUE</code>.

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4103426 // HONOR_DISPLAY_PROPERTIES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4103554 // defaultEditorKitMap (<unidirectional association>)
	relation 4103554 --->
	  a role_name "defaultEditorKitMap" init_value " new HashMap<String, String>(0)" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 4103554 // defaultEditorKitMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 10588802 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JEditorPane</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JEditorPane</code>
"
      end

      operation 10588930 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JEditorPane.
For editor panes, the AccessibleContext takes the form of an
AccessibleJEditorPane.
A new AccessibleJEditorPane instance is created if necessary.

@return an AccessibleJEditorPane that serves as the
        AccessibleContext of this JEditorPane
"
      end

      class 1278338 "AccessibleJEditorPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4103682 // <generalisation>
	  relation 4103682 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4103682 // <generalisation>
	    b parent class_ref 428802 // AccessibleJTextComponent
	end

	operation 10589058 "getAccessibleDescription"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the accessibleDescription property of this object.  If this
property isn't set, returns the content type of this
<code>JEditorPane</code> instead (e.g. \"plain/text\", \"html/text\").

@return the localized description of the object; <code>null</code>
     if this object does not have a description

@see #setAccessibleName
"
	end

	operation 10589186 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.

@return an instance of AccessibleStateSet describing the states
of the object
@see AccessibleStateSet
"
	end
      end

      class 1278466 "AccessibleJEditorPaneHTML"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4103810 // <generalisation>
	  relation 4103810 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4103810 // <generalisation>
	    b parent class_ref 1278338 // AccessibleJEditorPane
	end

	classrelation 4103938 // accessibleContext (<unidirectional association>)
	  relation 4103938 --->
	    a role_name "accessibleContext" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4103938 // accessibleContext (<unidirectional association>)
	    b parent class_ref 347522 // AccessibleContext
	end

	operation 10589314 "getAccessibleText"
	  public return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10589442 "AccessibleJEditorPaneHTML"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10589570 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children of the object.

@return the number of accessible children of the object.
"
	end

	operation 10589698 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the specified Accessible child of the object.  The Accessible
children of an Accessible object are zero-based, so the first child
of an Accessible child is at index 0, the second child is at index 1,
and so on.

@param i zero-based index of child
@return the Accessible child of the object
@see #getAccessibleChildrenCount
"
	end

	operation 10589826 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the Accessible child, if one exists, contained at the local
coordinate Point.

@param p The point relative to the coordinate system of this object.
@return the Accessible, if it exists, at the specified location;
otherwise null
"
	end
      end

      class 1278594 "JEditorPaneAccessibleHypertextSupport"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4104066 // <generalisation>
	  relation 4104066 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4104066 // <generalisation>
	    b parent class_ref 1278338 // AccessibleJEditorPane
	end

	classrelation 4104194 // <realization>
	  relation 4104194 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4104194 // <realization>
	    b parent class_ref 1170946 // AccessibleHypertext
	end

	class 1278722 "HTMLLink"
	  visibility public 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4104322 // <generalisation>
	    relation 4104322 ---|>
	      a public
		java "${type}"
		classrelation_ref 4104322 // <generalisation>
	      b parent class_ref 1170818 // AccessibleHyperlink
	  end

	  classrelation 4104450 // element (<unidirectional association>)
	    relation 4104450 --->
	      a role_name "element" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 4104450 // element (<unidirectional association>)
	      b parent class_ref 401922 // Element
	  end

	  operation 10589954 "HTMLLink"
	    public explicit_return_type ""
	    nparams 1
	      param inout name "e" type class_ref 401922 // Element
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10590082 "isValid"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Since the document a link is associated with may have
changed, this method returns whether this Link is valid
anymore (with respect to the document it references).

@return a flag indicating whether this link is still valid with
        respect to the AccessibleHypertext it belongs to
"
	  end

	  operation 10590210 "getAccessibleActionCount"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of accessible actions available in this Link
If there are more than one, the first one is NOT considered the
\"default\" action of this LINK object (e.g. in an HTML imagemap).
In general, links will have only one AccessibleAction in them.

@return the zero-based number of Actions in this object
"
	  end

	  operation 10590338 "doAccessibleAction"
	    public explicit_return_type "boolean"
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the the action was performed; else false.
@see #getAccessibleActionCount
"
	  end

	  operation 10590466 "getAccessibleActionDescription"
	    public return_type class_ref 128130 // String
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Return a String description of this particular
link action.  The string returned is the text
within the document associated with the element
which contains this link.

@param i zero-based index of the actions
@return a String description of the action
@see #getAccessibleActionCount
"
	  end

	  operation 10590594 "getAccessibleActionObject"
	    public return_type class_ref 129538 // Object
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns a URL object that represents the link.

@param i zero-based index of the actions
@return an URL representing the HTML link itself
@see #getAccessibleActionCount
"
	  end

	  operation 10590722 "getAccessibleActionAnchor"
	    public return_type class_ref 129538 // Object
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Return an object that represents the link anchor,
as appropriate for that link.  E.g. from HTML:
  <a href=\"http://www.sun.com/access\">Accessibility</a>
this method would return a String containing the text:
'Accessibility'.

Similarly, from this HTML:
  &lt;a HREF=\"#top\"&gt;&lt;img src=\"top-hat.gif\" alt=\"top hat\"&gt;&lt;/a&gt;
this might return the object ImageIcon(\"top-hat.gif\", \"top hat\");

@param i zero-based index of the actions
@return an Object representing the hypertext anchor
@see #getAccessibleActionCount
"
	  end

	  operation 10590850 "getStartIndex"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the index with the hypertext document at which this
link begins

@return index of start of link
"
	  end

	  operation 10590978 "getEndIndex"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the index with the hypertext document at which this
link ends

@return index of end of link
"
	  end
	end

	class 1278850 "LinkVector"
	  visibility private 
	  nactuals 1
	  actual class class_ref 141442 // Vector
	    rank 0 explicit_value ""
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4104578 // <realization>
	    relation 4104578 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 4104578 // <realization>
	      b parent class_ref 141442 // Vector
	  end

	  operation 10591106 "baseElementIndex"
	    public explicit_return_type "int"
	    nparams 1
	      param inout name "e" type class_ref 401922 // Element
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	classrelation 4104706 // hyperlinks (<unidirectional association>)
	  relation 4104706 --->
	    a role_name "hyperlinks" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4104706 // hyperlinks (<unidirectional association>)
	    b parent class_ref 1278850 // LinkVector
	end

	attribute 2404482 "linksValid"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10591234 "buildLinkTable"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build the private table mapping links to locations in the text
"
	end

	operation 10591362 "JEditorPaneAccessibleHypertextSupport"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Make one of these puppies
"
	end

	operation 10591490 "getLinkCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of links within this hypertext doc.

@return number of links in this hypertext doc.
"
	end

	operation 10591618 "getLinkIndex"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "charIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the index into an array of hyperlinks that
is associated with this character index, or -1 if there
is no hyperlink associated with this index.

@param  charIndex index within the text
@return index into the set of hyperlinks for this hypertext doc.
"
	end

	operation 10591746 "getLink"
	  public return_type class_ref 1170818 // AccessibleHyperlink
	  nparams 1
	    param in name "linkIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the index into an array of hyperlinks that
index.  If there is no hyperlink at this index, it returns
null.

@param linkIndex into the set of hyperlinks for this hypertext doc.
@return string representation of the hyperlink
"
	end

	operation 10591874 "getLinkText"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "linkIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the contiguous text within the document that
is associated with this hyperlink.

@param linkIndex into the set of hyperlinks for this hypertext doc.
@return the contiguous text sharing the link at this index
"
	end
      end

      class 1278978 "PlainEditorKit"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4117378 // <generalisation>
	  relation 4117378 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4117378 // <generalisation>
	    b parent class_ref 1279106 // DefaultEditorKit
	end

	classrelation 4117506 // <realization>
	  relation 4117506 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4117506 // <realization>
	    b parent class_ref 401794 // ViewFactory
	end

	operation 10603906 "getViewFactory"
	  public return_type class_ref 401794 // ViewFactory
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Fetches a factory that is suitable for producing
views of any models that are produced by this
kit.  The default is to have the UI produce the
factory, so this method has no implementation.

@return the view factory
"
	end

	operation 10604034 "create"
	  public return_type class_ref 401666 // View
	  nparams 1
	    param inout name "elem" type class_ref 401922 // Element
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a view from the given structural element of a
document.

@param elem  the piece of the document to build a view of
@return the view
@see View
"
	end

	operation 10604162 "createI18N"
	  package return_type class_ref 401666 // View
	  nparams 1
	    param inout name "elem" type class_ref 401922 // Element
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 1283458 "PlainParagraph"
	  visibility package 
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4117634 // <generalisation>
	    relation 4117634 ---|>
	      a public
		java "${type}"
		classrelation_ref 4117634 // <generalisation>
	      b parent class_ref 431362 // ParagraphView
	  end

	  operation 10604290 "PlainParagraph"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "elem" type class_ref 401922 // Element
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10604418 "setPropertiesFromAttributes"
	    protected explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10604546 "getFlowSpan"
	    public explicit_return_type "int"
	    nparams 1
	      param in name "index" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Fetch the constraining span to flow against for
the given child index.
"
	  end

	  operation 10604674 "calculateMinorAxisRequirements"
	    protected return_type class_ref 431874 // SizeRequirements
	    nparams 2
	      param in name "axis" explicit_type "int"
	      param inout name "r" type class_ref 431874 // SizeRequirements
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end
    end

    class 1277698 "SwingWorker"
      abstract visibility public 
      nformals 2
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 1066114 // RunnableFuture
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class to perform lengthy GUI-interaction tasks in a
background thread. Several background threads can be used to execute such
tasks. However, the exact strategy of choosing a thread for any particular
{@code SwingWorker} is unspecified and should not be relied on.
<p>
When writing a multi-threaded application using Swing, there are
two constraints to keep in mind:
(refer to
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/concurrency/index.html\">
  Concurrency in Swing
</a> for more details):
<ul>
  <li> Time-consuming tasks should not be run on the <i>Event
       Dispatch Thread</i>. Otherwise the application becomes unresponsive.
  </li>
  <li> Swing components should be accessed  on the <i>Event
       Dispatch Thread</i> only.
  </li>
</ul>


<p>
These constraints mean that a GUI application with time intensive
computing needs at least two threads:  1) a thread to perform the lengthy
task and 2) the <i>Event Dispatch Thread</i> (EDT) for all GUI-related
activities.  This involves inter-thread communication which can be
tricky to implement.

<p>
{@code SwingWorker} is designed for situations where you need to have a long
running task run in a background thread and provide updates to the UI
either when done, or while processing.
Subclasses of {@code SwingWorker} must implement
the {@link #doInBackground} method to perform the background computation.


<p>
<b>Workflow</b>
<p>
There are three threads involved in the life cycle of a
{@code SwingWorker} :
<ul>
<li>
<p>
<i>Current</i> thread: The {@link #execute} method is
called on this thread. It schedules {@code SwingWorker} for the execution on a
<i>worker</i>
thread and returns immediately. One can wait for the {@code SwingWorker} to
complete using the {@link #get get} methods.
<li>
<p>
<i>Worker</i> thread: The {@link #doInBackground}
method is called on this thread.
This is where all background activities should happen. To notify
{@code PropertyChangeListeners} about bound properties changes use the
{@link #firePropertyChange firePropertyChange} and
{@link #getPropertyChangeSupport} methods. By default there are two bound
properties available: {@code state} and {@code progress}.
<li>
<p>
<i>Event Dispatch Thread</i>:  All Swing related activities occur
on this thread. {@code SwingWorker} invokes the
{@link #process process} and {@link #done} methods and notifies
any {@code PropertyChangeListeners} on this thread.
</ul>

<p>
Often, the <i>Current</i> thread is the <i>Event Dispatch
Thread</i>.


<p>
Before the {@code doInBackground} method is invoked on a <i>worker</i> thread,
{@code SwingWorker} notifies any {@code PropertyChangeListeners} about the
{@code state} property change to {@code StateValue.STARTED}.  After the
{@code doInBackground} method is finished the {@code done} method is
executed.  Then {@code SwingWorker} notifies any {@code PropertyChangeListeners}
about the {@code state} property change to {@code StateValue.DONE}.

<p>
{@code SwingWorker} is only designed to be executed once.  Executing a
{@code SwingWorker} more than once will not result in invoking the
{@code doInBackground} method twice.

<p>
<b>Sample Usage</b>
<p>
The following example illustrates the simplest use case.  Some
processing is done in the background and when done you update a Swing
component.

<p>
Say we want to find the \"Meaning of Life\" and display the result in
a {@code JLabel}.

<pre>
  final JLabel label;
  class MeaningOfLifeFinder extends SwingWorker&lt;String, Object&gt; {
      {@code @Override}
      public String doInBackground() {
          return findTheMeaningOfLife();
      }

      {@code @Override}
      protected void done() {
          try {
              label.setText(get());
          } catch (Exception ignore) {
          }
      }
  }

  (new MeaningOfLifeFinder()).execute();
</pre>

<p>
The next example is useful in situations where you wish to process data
as it is ready on the <i>Event Dispatch Thread</i>.

<p>
Now we want to find the first N prime numbers and display the results in a
{@code JTextArea}.  While this is computing, we want to update our
progress in a {@code JProgressBar}.  Finally, we also want to print
the prime numbers to {@code System.out}.
<pre>
class PrimeNumbersTask extends
        SwingWorker&lt;List&lt;Integer&gt;, Integer&gt; {
    PrimeNumbersTask(JTextArea textArea, int numbersToFind) {
        //initialize
    }

    {@code @Override}
    public List&lt;Integer&gt; doInBackground() {
        while (! enough &amp;&amp; ! isCancelled()) {
                number = nextPrimeNumber();
                publish(number);
                setProgress(100 * numbers.size() / numbersToFind);
            }
        }
        return numbers;
    }

    {@code @Override}
    protected void process(List&lt;Integer&gt; chunks) {
        for (int number : chunks) {
            textArea.append(number + &quot;\\n&quot;);
        }
    }
}

JTextArea textArea = new JTextArea();
final JProgressBar progressBar = new JProgressBar(0, 100);
PrimeNumbersTask task = new PrimeNumbersTask(textArea, N);
task.addPropertyChangeListener(
    new PropertyChangeListener() {
        public  void propertyChange(PropertyChangeEvent evt) {
            if (&quot;progress&quot;.equals(evt.getPropertyName())) {
                progressBar.setValue((Integer)evt.getNewValue());
            }
        }
    });

task.execute();
System.out.println(task.get()); //prints all prime numbers we have got
</pre>

<p>
Because {@code SwingWorker} implements {@code Runnable}, a
{@code SwingWorker} can be submitted to an
{@link java.util.concurrent.Executor} for execution.

@author Igor Kushnirskiy

@param <T> the result type returned by this {@code SwingWorker's}
       {@code doInBackground} and {@code get} methods
@param <V> the type used for carrying out intermediate results by this
       {@code SwingWorker's} {@code publish} and {@code process} methods

@since 1.6
"
      classrelation 4100226 // <realization>
	relation 4100226 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4100226 // <realization>
	  b parent class_ref 1066114 // RunnableFuture
      end

      attribute 2403458 "MAX_WORKER_THREADS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "number of worker threads.

"
      end

      attribute 2403586 "progress"
	volatile private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "current progress.

"
      end

      class 1277826 "StateValue"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2403842 "PENDING"
	  public type class_ref 1277826 // StateValue
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Initial {@code SwingWorker} state.

"
	end

	attribute 2403970 "STARTED"
	  public type class_ref 1277826 // StateValue
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "{@code SwingWorker} is {@code STARTED}
before invoking {@code doInBackground}.

"
	end

	attribute 2404098 "DONE"
	  public type class_ref 1277826 // StateValue
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "{@code SwingWorker} is {@code DONE}
after {@code doInBackground} method
is finished.
"
	end
      end

      classrelation 4100354 // state (<unidirectional association>)
	relation 4100354 --->
	  a role_name "state" volatile private
	    comment "
current state.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4100354 // state (<unidirectional association>)
	  b parent class_ref 1277826 // StateValue
      end

      classrelation 4100482 // future (<unidirectional association>)
	relation 4100482 --->
	  a role_name "future" const_relation private
	    comment "
everything is run inside this FutureTask. Also it is used as
a delegatee for the Future API.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	    classrelation_ref 4100482 // future (<unidirectional association>)
	  b parent class_ref 1119362 // FutureTask
      end

      classrelation 4100610 // propertyChangeSupport (<unidirectional association>)
	relation 4100610 --->
	  a role_name "propertyChangeSupport" const_relation private
	    comment "
all propertyChangeSupport goes through this.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4100610 // propertyChangeSupport (<unidirectional association>)
	  b parent class_ref 343042 // PropertyChangeSupport
      end

      attribute 2403714 "doProcess"
	private explicit_type "V"
	stereotype "AccumulativeRunnable"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "handler for {@code process} mehtod.

"
      end

      classrelation 4100738 // doNotifyProgressChange (<unidirectional association>)
	relation 4100738 --->
	  stereotype "AccumulativeRunnable"
	  a role_name "doNotifyProgressChange" private
	    comment "handler for progress property change notifications.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 4100738 // doNotifyProgressChange (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      classrelation 4100866 // doSubmit (<unidirectional association>)
	relation 4100866 --->
	  stereotype "AccumulativeRunnable"
	  a role_name "doSubmit" init_value " getDoSubmit()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 4100866 // doSubmit (<unidirectional association>)
	  b parent class_ref 128770 // Runnable
      end

      operation 10580994 "SwingWorker"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs this {@code SwingWorker}.
"
      end

      operation 10581122 "doInBackground"
	abstract cpp_inline protected explicit_return_type "T"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes a result, or throws an exception if unable to do so.

<p>
Note that this method is executed only once.

<p>
Note: this method is executed in a background thread.


@return the computed result
@throws Exception if unable to compute a result

"
      end

      operation 10581250 "run"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this {@code Future} to the result of computation unless
it has been cancelled.
"
      end

      operation 10581378 "publish"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "V...chunks"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SafeVarargs
@SuppressWarnings(\"varargs\")
"
	
	
	
	comment "Sends data chunks to the {@link #process} method. This method is to be
used from inside the {@code doInBackground} method to deliver
intermediate results
for processing on the <i>Event Dispatch Thread</i> inside the
{@code process} method.

<p>
Because the {@code process} method is invoked asynchronously on
the <i>Event Dispatch Thread</i>
multiple invocations to the {@code publish} method
might occur before the {@code process} method is executed. For
performance purposes all these invocations are coalesced into one
invocation with concatenated arguments.

<p>
For example:

<pre>
publish(&quot;1&quot;);
publish(&quot;2&quot;, &quot;3&quot;);
publish(&quot;4&quot;, &quot;5&quot;, &quot;6&quot;);
</pre>

might result in:

<pre>
process(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;)
</pre>

<p>
<b>Sample Usage</b>. This code snippet loads some tabular data and
updates {@code DefaultTableModel} with it. Note that it safe to mutate
the tableModel from inside the {@code process} method because it is
invoked on the <i>Event Dispatch Thread</i>.

<pre>
class TableSwingWorker extends
        SwingWorker&lt;DefaultTableModel, Object[]&gt; {
    private final DefaultTableModel tableModel;

    public TableSwingWorker(DefaultTableModel tableModel) {
        this.tableModel = tableModel;
    }

    {@code @Override}
    protected DefaultTableModel doInBackground() throws Exception {
        for (Object[] row = loadData();
                 ! isCancelled() &amp;&amp; row != null;
                 row = loadData()) {
            publish((Object[]) row);
        }
        return tableModel;
    }

    {@code @Override}
    protected void process(List&lt;Object[]&gt; chunks) {
        for (Object[] row : chunks) {
            tableModel.addRow(row);
        }
    }
}
</pre>

@param chunks intermediate results to process

@see #process

"
      end

      operation 10581506 "process"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "chunks" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives data chunks from the {@code publish} method asynchronously on the
<i>Event Dispatch Thread</i>.

<p>
Please refer to the {@link #publish} method for more details.

@param chunks intermediate results to process

@see #publish

"
      end

      operation 10581634 "done"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executed on the <i>Event Dispatch Thread</i> after the {@code doInBackground}
method is finished. The default
implementation does nothing. Subclasses may override this method to
perform completion actions on the <i>Event Dispatch Thread</i>. Note
that you can query status inside the implementation of this method to
determine the result of this task or whether this task has been cancelled.

@see #doInBackground
@see #isCancelled()
@see #get
"
      end

      operation 10581762 "setProgress"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param in name "progress" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code progress} bound property.
The value should be from 0 to 100.

<p>
Because {@code PropertyChangeListener}s are notified asynchronously on
the <i>Event Dispatch Thread</i> multiple invocations to the
{@code setProgress} method might occur before any
{@code PropertyChangeListeners} are invoked. For performance purposes
all these invocations are coalesced into one invocation with the last
invocation argument only.

<p>
For example, the following invokations:

<pre>
setProgress(1);
setProgress(2);
setProgress(3);
</pre>

might result in a single {@code PropertyChangeListener} notification with
the value {@code 3}.

@param progress the progress value to set
@throws IllegalArgumentException is value not from 0 to 100
"
      end

      operation 10581890 "getProgress"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code progress} bound property.

@return the progress bound property.
"
      end

      operation 10582018 "execute"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedules this {@code SwingWorker} for execution on a <i>worker</i>
thread. There are a number of <i>worker</i> threads available. In the
event all <i>worker</i> threads are busy handling other
{@code SwingWorkers} this {@code SwingWorker} is placed in a waiting
queue.

<p>
Note:
{@code SwingWorker} is only designed to be executed once.  Executing a
{@code SwingWorker} more than once will not result in invoking the
{@code doInBackground} method twice.
"
      end

      operation 10582146 "cancel"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "mayInterruptIfRunning" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Future methods START

{@inheritDoc}
"
      end

      operation 10582274 "isCancelled"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10582402 "isDone"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10582530 "get"
	cpp_inline public explicit_return_type "T"
	nparams 0
	nexceptions 2
	  exception class_ref 129666 // InterruptedException
	  exception class_ref 1065474 // ExecutionException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
Note: calling {@code get} on the <i>Event Dispatch Thread</i> blocks
<i>all</i> events, including repaints, from being processed until this
{@code SwingWorker} is complete.

<p>
When you want the {@code SwingWorker} to block on the <i>Event
Dispatch Thread</i> we recommend that you use a <i>modal dialog</i>.

<p>
For example:

<pre>
class SwingWorkerCompletionWaiter extends PropertyChangeListener {
    private JDialog dialog;

    public SwingWorkerCompletionWaiter(JDialog dialog) {
        this.dialog = dialog;
    }

    public void propertyChange(PropertyChangeEvent event) {
        if (&quot;state&quot;.equals(event.getPropertyName())
                &amp;&amp; SwingWorker.StateValue.DONE == event.getNewValue()) {
            dialog.setVisible(false);
            dialog.dispose();
        }
    }
}
JDialog dialog = new JDialog(owner, true);
swingWorker.addPropertyChangeListener(
    new SwingWorkerCompletionWaiter(dialog));
swingWorker.execute();
//the dialog will be visible until the SwingWorker is done
dialog.setVisible(true);
</pre>
"
      end

      operation 10582658 "get"
	cpp_inline public explicit_return_type "T"
	nparams 2
	  param in name "timeout" explicit_type "long"
	  param inout name "unit" type class_ref 935938 // TimeUnit
	nexceptions 3
	  exception class_ref 129666 // InterruptedException
	  exception class_ref 1065474 // ExecutionException
	  exception class_ref 1065602 // TimeoutException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
Please refer to {@link #get} for more details.
"
      end

      operation 10582786 "addPropertyChangeListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Future methods END
 PropertyChangeSupports methods START

Adds a {@code PropertyChangeListener} to the listener list. The listener
is registered for all properties. The same listener object may be added
more than once, and will be called as many times as it is added. If
{@code listener} is {@code null}, no exception is thrown and no action is taken.

<p>
Note: This is merely a convenience wrapper. All work is delegated to
{@code PropertyChangeSupport} from {@link #getPropertyChangeSupport}.

@param listener the {@code PropertyChangeListener} to be added
"
      end

      operation 10582914 "removePropertyChangeListener"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a {@code PropertyChangeListener} from the listener list. This
removes a {@code PropertyChangeListener} that was registered for all
properties. If {@code listener} was added more than once to the same
event source, it will be notified one less time after being removed. If
{@code listener} is {@code null}, or was never added, no exception is
thrown and no action is taken.

<p>
Note: This is merely a convenience wrapper. All work is delegated to
{@code PropertyChangeSupport} from {@link #getPropertyChangeSupport}.

@param listener the {@code PropertyChangeListener} to be removed
"
      end

      operation 10583042 "firePropertyChange"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property update to any registered listeners. No event is
fired if {@code old} and {@code new} are equal and non-null.

<p>
This {@code SwingWorker} will be the source for
any generated events.

<p>
When called off the <i>Event Dispatch Thread</i>
{@code PropertyChangeListeners} are notified asynchronously on
the <i>Event Dispatch Thread</i>.
<p>
Note: This is merely a convenience wrapper. All work is delegated to
{@code PropertyChangeSupport} from {@link #getPropertyChangeSupport}.


@param propertyName the programmatic name of the property that was
       changed
@param oldValue the old value of the property
@param newValue the new value of the property
"
      end

      operation 10583170 "getPropertyChangeSupport"
	cpp_inline public return_type class_ref 343042 // PropertyChangeSupport
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code PropertyChangeSupport} for this {@code SwingWorker}.
This method is used when flexible access to bound properties support is
needed.
<p>
This {@code SwingWorker} will be the source for
any generated events.

<p>
Note: The returned {@code PropertyChangeSupport} notifies any
{@code PropertyChangeListener}s asynchronously on the <i>Event Dispatch
Thread</i> in the event that {@code firePropertyChange} or
{@code fireIndexedPropertyChange} are called off the <i>Event Dispatch
Thread</i>.

@return {@code PropertyChangeSupport} for this {@code SwingWorker}
"
      end

      operation 10583298 "getState"
	cpp_inline public return_type class_ref 1277826 // StateValue
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " PropertyChangeSupports methods END

Returns the {@code SwingWorker} state bound property.

@return the current state
"
      end

      operation 10583426 "setState"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 1277826 // StateValue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this {@code SwingWorker} state bound property.
@param state the state to set
"
      end

      operation 10583554 "doneEDT"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes {@code done} on the EDT.
"
      end

      operation 10583682 "getWorkersExecutorService"
	class_operation cpp_inline private return_type class_ref 985218 // ExecutorService
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "returns workersExecutorService.

returns the service stored in the appContext or creates it if
necessary.

@return ExecutorService for the {@code SwingWorkers}
"
      end

      classrelation 4100994 // DO_SUBMIT_KEY (<unidirectional association>)
	relation 4100994 --->
	  a role_name "DO_SUBMIT_KEY" init_value " new StringBuilder(\"doSubmit\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4100994 // DO_SUBMIT_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10583810 "getDoSubmit"
	class_operation cpp_inline private return_type class_ref 128770 // Runnable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}AccumulativeRunnable<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1277954 "DoSubmitAccumulativeRunnable"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4101250 // <realization>
	  relation 4101250 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4101250 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	attribute 2404226 "DELAY"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1000 / 30"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10583938 "run"
	  cpp_inline protected explicit_return_type "void"
	  nparams 1
	    param inout name "args" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Runnable> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10584066 "submit"
	  cpp_inline protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10584194 "actionPerformed"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1278210 "SwingWorkerPropertyChangeSupport"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4101378 // <generalisation>
	  relation 4101378 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4101378 // <generalisation>
	    b parent class_ref 343042 // PropertyChangeSupport
	end

	operation 10584322 "SwingWorkerPropertyChangeSupport"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "source" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10584450 "firePropertyChange"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param in name "evt" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1285122 "JLayer"
      visibility public 
      nformals 1
      formal name "V" type "" explicit_default_value ""
        extends class_ref 338818 // Component
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code JLayer} is a universal decorator for Swing components
which enables you to implement various advanced painting effects as well as
receive notifications of all {@code AWTEvent}s generated within its borders.
<p>
{@code JLayer} delegates the handling of painting and input events to a
{@link javax.swing.plaf.LayerUI} object, which performs the actual decoration.
<p>
The custom painting implemented in the {@code LayerUI} and events notification
work for the JLayer itself and all its subcomponents.
This combination enables you to enrich existing components
by adding new advanced functionality such as temporary locking of a hierarchy,
data tips for compound components, enhanced mouse scrolling etc and so on.
<p>
{@code JLayer} is a good solution if you only need to do custom painting
over compound component or catch input events from its subcomponents.
<pre>
import javax.swing.*;
import javax.swing.plaf.LayerUI;
import java.awt.*;

public class JLayerSample {

    private static JLayer&lt;JComponent&gt; createLayer() {
        // This custom layerUI will fill the layer with translucent green
        // and print out all mouseMotion events generated within its borders
        LayerUI&lt;JComponent&gt; layerUI = new LayerUI&lt;JComponent&gt;() {

            public void paint(Graphics g, JComponent c) {
                // paint the layer as is
                super.paint(g, c);
                // fill it with the translucent green
                g.setColor(new Color(0, 128, 0, 128));
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }

            public void installUI(JComponent c) {
                super.installUI(c);
                // enable mouse motion events for the layer's subcomponents
                ((JLayer) c).setLayerEventMask(AWTEvent.MOUSE_MOTION_EVENT_MASK);
            }

            public void uninstallUI(JComponent c) {
                super.uninstallUI(c);
                // reset the layer event mask
                ((JLayer) c).setLayerEventMask(0);
            }

            // overridden method which catches MouseMotion events
            public void eventDispatched(AWTEvent e, JLayer&lt;? extends JComponent&gt; l) {
                System.out.println(\"AWTEvent detected: \" + e);
            }
        };
        // create a component to be decorated with the layer
        JPanel panel = new JPanel();
        panel.add(new JButton(\"JButton\"));

        // create the layer for the panel using our custom layerUI
        return new JLayer&lt;JComponent&gt;(panel, layerUI);
    }

    private static void createAndShowGUI() {
        final JFrame frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // work with the layer as with any other Swing component
        frame.add(createLayer());

        frame.setSize(200, 200);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    public static void main(String[] args) throws Exception {
        SwingUtilities.invokeAndWait(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
}
</pre>

<b>Note:</b> {@code JLayer} doesn't support the following methods:
<ul>
<li>{@link Container#add(java.awt.Component)}</li>
<li>{@link Container#add(String, java.awt.Component)}</li>
<li>{@link Container#add(java.awt.Component, int)}</li>
<li>{@link Container#add(java.awt.Component, Object)}</li>
<li>{@link Container#add(java.awt.Component, Object, int)}</li>
</ul>
using any of of them will cause {@code UnsupportedOperationException} to be thrown,
to add a component to {@code JLayer}
use {@link #setView(Component)} or {@link #setGlassPane(JPanel)}.

@param <V> the type of {@code JLayer}'s view component

@see #JLayer(Component)
@see #setView(Component)
@see #getView()
@see javax.swing.plaf.LayerUI
@see #JLayer(Component, LayerUI)
@see #setUI(javax.swing.plaf.LayerUI)
@see #getUI()
@since 1.7

@author Alexander Potochkin
"
      classrelation 4130690 // <generalisation>
	relation 4130690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4130690 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4130818 // <realization>
	relation 4130818 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4130818 // <realization>
	  b parent class_ref 427522 // Scrollable
      end

      classrelation 4130946 // <realization>
	relation 4130946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4130946 // <realization>
	  b parent class_ref 347266 // PropertyChangeListener
      end

      classrelation 4131074 // <realization>
	relation 4131074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4131074 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      attribute 2412034 "view"
	private explicit_type "V"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4131202 // layerUI (<unidirectional association>)
	relation 4131202 --->
	  a role_name "layerUI" private
	    comment " this field is necessary because JComponent.ui is transient
 when layerUI is serializable
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super V> ${name}${value};
"
	    classrelation_ref 4131202 // layerUI (<unidirectional association>)
	  b parent class_ref 1285250 // LayerUI
      end

      classrelation 4131330 // glassPane (<unidirectional association>)
	relation 4131330 --->
	  a role_name "glassPane" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4131330 // glassPane (<unidirectional association>)
	  b parent class_ref 339842 // JPanel
      end

      attribute 2412162 "eventMask"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2412290 "isPainting"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2412418 "isPaintingImmediately"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1285378 "LayerEventController"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4131586 // <realization>
	  relation 4131586 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4131586 // <realization>
	    b parent class_ref 351234 // AWTEventListener
	end

	classrelation 4131714 // layerMaskList (<unidirectional association>)
	  relation 4131714 --->
	    a role_name "layerMaskList" init_value "
                new ArrayList<Long>()" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Long> ${name}${value};
"
	      classrelation_ref 4131714 // layerMaskList (<unidirectional association>)
	    b parent class_ref 186498 // ArrayList
	end

	attribute 2412546 "currentEventMask"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2412674 "ACCEPTED_EVENTS"
	  class_attribute const_attribute private explicit_type "long"
	  init_value "
                AWTEvent.COMPONENT_EVENT_MASK |
                        AWTEvent.CONTAINER_EVENT_MASK |
                        AWTEvent.FOCUS_EVENT_MASK |
                        AWTEvent.KEY_EVENT_MASK |
                        AWTEvent.MOUSE_WHEEL_EVENT_MASK |
                        AWTEvent.MOUSE_MOTION_EVENT_MASK |
                        AWTEvent.MOUSE_EVENT_MASK |
                        AWTEvent.INPUT_METHOD_EVENT_MASK |
                        AWTEvent.HIERARCHY_EVENT_MASK |
                        AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10645506 "eventDispatched"
	  cpp_inline public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 339202 // AWTEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 10645634 "updateAWTEventListener"
	  cpp_inline private explicit_return_type "void"
	  nparams 2
	    param in name "oldEventMask" explicit_type "long"
	    param in name "newEventMask" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10645762 "getCurrentEventMask"
	  cpp_inline private explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10645890 "addAWTEventListener"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param in name "eventMask" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10646018 "removeAWTEventListener"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10646146 "isEventEnabled"
	  cpp_inline private explicit_return_type "boolean"
	  nparams 2
	    param in name "eventMask" explicit_type "long"
	    param in name "id" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4131458 // eventController (<unidirectional association>)
	relation 4131458 --->
	  a role_name "eventController" init_value "
            new LayerEventController()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4131458 // eventController (<unidirectional association>)
	  b parent class_ref 1285378 // LayerEventController
      end

      operation 10641154 "JLayer"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code JLayer} object with a {@code null} view component
and default {@link javax.swing.plaf.LayerUI}.

@see #setView
@see #setUI
"
      end

      operation 10641282 "JLayer"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "view" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code JLayer} object
with default {@link javax.swing.plaf.LayerUI}.

@param view the component to be decorated by this {@code JLayer}

@see #setUI
"
      end

      operation 10641410 "JLayer"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "view" explicit_type "V"
	  param inout name "ui" type class_ref 1285250 // LayerUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<V> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code JLayer} object with the specified view component
and {@link javax.swing.plaf.LayerUI} object.

@param view the component to be decorated
@param ui the {@link javax.swing.plaf.LayerUI} delegate
to be used by this {@code JLayer}
"
      end

      operation 10641538 "getView"
	cpp_inline public explicit_return_type "V"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code JLayer}'s view component or {@code null}.
<br>This is a bound property.

@return the {@code JLayer}'s view component
        or {@code null} if none exists

@see #setView(Component)
"
      end

      operation 10641666 "setView"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "view" explicit_type "V"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code JLayer}'s view component, which can be {@code null}.
<br>This is a bound property.

@param view the view component for this {@code JLayer}

@see #getView()
"
      end

      operation 10641794 "setUI"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 1285250 // LayerUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link javax.swing.plaf.LayerUI} which will perform painting
and receive input events for this {@code JLayer}.

@param ui the {@link javax.swing.plaf.LayerUI} for this {@code JLayer}
"
      end

      operation 10641922 "getUI"
	cpp_inline public return_type class_ref 1285250 // LayerUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super V> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link javax.swing.plaf.LayerUI} for this {@code JLayer}.

@return the {@code LayerUI} for this {@code JLayer}
"
      end

      operation 10642050 "getGlassPane"
	cpp_inline public return_type class_ref 339842 // JPanel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code JLayer}'s glassPane component or {@code null}.
<br>This is a bound property.

@return the {@code JLayer}'s glassPane component
        or {@code null} if none exists

@see #setGlassPane(JPanel)
"
      end

      operation 10642178 "setGlassPane"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "glassPane" type class_ref 339842 // JPanel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@code JLayer}'s glassPane component, which can be {@code null}.
<br>This is a bound property.

@param glassPane the glassPane component of this {@code JLayer}

@see #getGlassPane()
"
      end

      operation 10642306 "createGlassPane"
	cpp_inline public return_type class_ref 339842 // JPanel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the constructor methods to create a default {@code glassPane}.
By default this method creates a new JPanel with visibility set to true
and opacity set to false.

@return the default {@code glassPane}
"
      end

      operation 10642434 "setLayout"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "mgr" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the layout manager for this container.  This method is
overridden to prevent the layout manager from being set.
<p>Note:  If {@code mgr} is non-{@code null}, this
method will throw an exception as layout managers are not supported on
a {@code JLayer}.

@param mgr the specified layout manager
@exception IllegalArgumentException this method is not supported
"
      end

      operation 10642562 "setBorder"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "border" type class_ref 357122 // Border
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A non-{@code null} border, or non-zero insets, isn't supported, to prevent the geometry
of this component from becoming complex enough to inhibit
subclassing of {@code LayerUI} class.  To create a {@code JLayer} with a border,
add it to a {@code JPanel} that has a border.
<p>Note:  If {@code border} is non-{@code null}, this
method will throw an exception as borders are not supported on
a {@code JLayer}.

@param border the {@code Border} to set
@exception IllegalArgumentException this method is not supported
"
      end

      operation 10642690 "addImpl"
	cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is not supported by {@code JLayer}
and always throws {@code UnsupportedOperationException}

@throws UnsupportedOperationException this method is not supported

@see #setView(Component)
@see #setGlassPane(JPanel)
"
      end

      operation 10642818 "remove"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10642946 "removeAll"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10643074 "isPaintingOrigin"
	cpp_inline protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns {@code true} to cause painting to originate from {@code JLayer},
or one of its ancestors.

@return true
@see JComponent#isPaintingOrigin()
"
      end

      operation 10643202 "paintImmediately"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delegates its functionality to the
{@link javax.swing.plaf.LayerUI#paintImmediately(int, int, int, int, JLayer)} method,
if {@code LayerUI} is set.

@param x  the x value of the region to be painted
@param y  the y value of the region to be painted
@param w  the width of the region to be painted
@param h  the height of the region to be painted
"
      end

      operation 10643330 "paint"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delegates all painting to the {@link javax.swing.plaf.LayerUI} object.

@param g the {@code Graphics} to render to
"
      end

      operation 10643458 "paintComponent"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is empty, because all painting is done by
{@link #paint(Graphics)} and
{@link javax.swing.plaf.LayerUI#update(Graphics, JComponent)} methods
"
      end

      operation 10643586 "isOptimizedDrawingEnabled"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The {@code JLayer} overrides the default implementation of
this method (in {@code JComponent}) to return {@code false}.
This ensures
that the drawing machinery will call the {@code JLayer}'s
{@code paint}
implementation rather than messaging the {@code JLayer}'s
children directly.

@return false
"
      end

      operation 10643714 "propertyChange"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10643842 "setLayerEventMask"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "layerEventMask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the events from JLayer and <b>all its descendants</b>
defined by the specified event mask parameter
to be delivered to the
{@link LayerUI#eventDispatched(AWTEvent, JLayer)} method.
<p>
Events are delivered provided that {@code LayerUI} is set
for this {@code JLayer} and the {@code JLayer}
is displayable.
<p>
The following example shows how to correctly use this method
in the {@code LayerUI} implementations:
<pre>
   public void installUI(JComponent c) {
      super.installUI(c);
      JLayer l = (JLayer) c;
      // this LayerUI will receive only key and focus events
      l.setLayerEventMask(AWTEvent.KEY_EVENT_MASK | AWTEvent.FOCUS_EVENT_MASK);
   }

   public void uninstallUI(JComponent c) {
      super.uninstallUI(c);
      JLayer l = (JLayer) c;
      // JLayer must be returned to its initial state
      l.setLayerEventMask(0);
   }
</pre>

By default {@code JLayer} receives no events and its event mask is {@code 0}.

@param layerEventMask the bitmask of event types to receive

@see #getLayerEventMask()
@see LayerUI#eventDispatched(AWTEvent, JLayer)
@see Component#isDisplayable()
"
      end

      operation 10643970 "getLayerEventMask"
	cpp_inline public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bitmap of event mask to receive by this {@code JLayer}
and its {@code LayerUI}.
<p>
It means that {@link javax.swing.plaf.LayerUI#eventDispatched(AWTEvent, JLayer)} method
will only receive events that match the event mask.
<p>
By default {@code JLayer} receives no events.

@return the bitmask of event types to receive for this {@code JLayer}
"
      end

      operation 10644098 "updateUI"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delegates its functionality to the {@link javax.swing.plaf.LayerUI#updateUI(JLayer)} method,
if {@code LayerUI} is set.
"
      end

      operation 10644226 "getPreferredScrollableViewportSize"
	cpp_inline public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size of the viewport for a view component.
<p>
If the view component of this layer implements {@link Scrollable}, this method delegates its
implementation to the view component.

@return the preferred size of the viewport for a view component

@see Scrollable
"
      end

      operation 10644354 "getScrollableBlockIncrement"
	cpp_inline public explicit_return_type "int"
	nparams 3
	  param inout name "visibleRect" type class_ref 314114 // Rectangle
	  param in name "orientation" explicit_type "int"
	  param in name "direction" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a scroll increment, which is required for components
that display logical rows or columns in order to completely expose
one block of rows or columns, depending on the value of orientation.
<p>
If the view component of this layer implements {@link Scrollable}, this method delegates its
implementation to the view component.

@return the \"block\" increment for scrolling in the specified direction

@see Scrollable
"
      end

      operation 10644482 "getScrollableTracksViewportHeight"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code false} to indicate that the height of the viewport does not
determine the height of the layer, unless the preferred height
of the layer is smaller than the height of the viewport.
<p>
If the view component of this layer implements {@link Scrollable}, this method delegates its
implementation to the view component.

@return whether the layer should track the height of the viewport

@see Scrollable
"
      end

      operation 10644610 "getScrollableTracksViewportWidth"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code false} to indicate that the width of the viewport does not
determine the width of the layer, unless the preferred width
of the layer is smaller than the width of the viewport.
<p>
If the view component of this layer implements {@link Scrollable}, this method delegates its
implementation to the view component.

@return whether the layer should track the width of the viewport

@see Scrollable
"
      end

      operation 10644738 "getScrollableUnitIncrement"
	cpp_inline public explicit_return_type "int"
	nparams 3
	  param inout name "visibleRect" type class_ref 314114 // Rectangle
	  param in name "orientation" explicit_type "int"
	  param in name "direction" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a scroll increment, which is required for components
that display logical rows or columns in order to completely expose
one new row or column, depending on the value of orientation.
Ideally, components should handle a partially exposed row or column
by returning the distance required to completely expose the item.
<p>
Scrolling containers, like {@code JScrollPane}, will use this method
each time the user requests a unit scroll.
<p>
If the view component of this layer implements {@link Scrollable}, this method delegates its
implementation to the view component.

@return The \"unit\" increment for scrolling in the specified direction.
        This value should always be positive.

@see Scrollable
"
      end

      operation 10644866 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10644994 "addNotify"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10645122 "removeNotify"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 10645250 "doLayout"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delegates its functionality to the {@link javax.swing.plaf.LayerUI#doLayout(JLayer)} method,
if {@code LayerUI} is set.
"
      end

      operation 10645378 "getAccessibleContext"
	cpp_inline public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this {@code JLayer}.

@return the AccessibleContext associated with this {@code JLayer}.
"
      end

      class 1285506 "DefaultLayerGlassPane"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4131842 // <generalisation>
	  relation 4131842 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4131842 // <generalisation>
	    b parent class_ref 339842 // JPanel
	end

	operation 10646274 "DefaultLayerGlassPane"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new {@link DefaultLayerGlassPane}
"
	end

	operation 10646402 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 2
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "First, implementation of this method iterates through
glassPane's child components and returns {@code true}
if any of them is visible and contains passed x,y point.
After that it checks if no mouseListeners is attached to this component
and no mouse cursor is set, then it returns {@code false},
otherwise calls the super implementation of this method.

@param x the <i>x</i> coordinate of the point
@param y the <i>y</i> coordinate of the point
@return true if this component logically contains x,y
"
	end
      end
    end

    class 1286402 "JPasswordField"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>JPasswordField</code> is a lightweight component that allows
the editing of a single line of text where the view indicates
something was typed, but does not show the original characters.
You can find further information and examples in
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html\">How to Use Text Fields</a>,
a section in <em>The Java Tutorial.</em>
<p>
<code>JPasswordField</code> is intended
to be source-compatible with <code>java.awt.TextField</code>
used with <code>echoChar</code> set.  It is provided separately
to make it easier to safely change the UI for the
<code>JTextField</code> without affecting password entries.
<p>
<strong>NOTE:</strong>
By default, JPasswordField disables input methods; otherwise, input
characters could be visible while they were composed using input methods.
If an application needs the input methods support, please use the
inherited method, <code>enableInputMethods(true)</code>.
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
 attribute: isContainer false
description: Allows the editing of a line of text but doesn't show the characters.

@author  Timothy Prinzing
"
      classrelation 4139138 // <generalisation>
	relation 4139138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4139138 // <generalisation>
	  b parent class_ref 360066 // JTextField
      end

      operation 10666754 "JPasswordField"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JPasswordField</code>,
with a default document, <code>null</code> starting
text string, and 0 column width.
"
      end

      operation 10666882 "JPasswordField"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JPasswordField</code> initialized
with the specified text.  The document model is set to the
default, and the number of columns to 0.

@param text the text to be displayed, <code>null</code> if none
"
      end

      operation 10667010 "JPasswordField"
	public explicit_return_type ""
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty <code>JPasswordField</code> with the specified
number of columns.  A default model is created, and the initial string
is set to <code>null</code>.

@param columns the number of columns &gt;= 0
"
      end

      operation 10667138 "JPasswordField"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JPasswordField</code> initialized with
the specified text and columns.  The document model is set to
the default.

@param text the text to be displayed, <code>null</code> if none
@param columns the number of columns &gt;= 0
"
      end

      operation 10667266 "JPasswordField"
	public explicit_return_type ""
	nparams 3
	  param inout name "doc" type class_ref 405378 // Document
	  param inout name "txt" type class_ref 128130 // String
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>JPasswordField</code> that uses the
given text storage model and the given number of columns.
This is the constructor through which the other constructors feed.
The echo character is set to '*', but may be changed by the current
Look and Feel.  If the document model is
<code>null</code>, a default one will be created.

@param doc  the text storage to use
@param txt the text to be displayed, <code>null</code> if none
@param columns  the number of columns to use to calculate
  the preferred width &gt;= 0; if columns is set to zero, the
  preferred width will be whatever naturally results from
  the component implementation
"
      end

      operation 10667394 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"PasswordFieldUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10667522 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.6
"
      end

      operation 10667650 "getEchoChar"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character to be used for echoing.  The default is '*'.
The default may be different depending on the currently running Look
and Feel. For example, Metal/Ocean's default is a bullet character.

@return the echo character, 0 if unset
@see #setEchoChar
@see #echoCharIsSet
"
      end

      operation 10667778 "setEchoChar"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the echo character for this <code>JPasswordField</code>.
Note that this is largely a suggestion, since the
view that gets installed can use whatever graphic techniques
it desires to represent the field.  Setting a value of 0 indicates
that you wish to see the text as it is typed, similar to
the behavior of a standard <code>JTextField</code>.

@param c the echo character to display
@see #echoCharIsSet
@see #getEchoChar
@beaninfo
description: character to display in place of the real characters
  attribute: visualUpdate true
"
      end

      operation 10667906 "echoCharIsSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this <code>JPasswordField</code> has a character
set for echoing.  A character is considered to be set if the echo
character is not 0.

@return true if a character is set for echoing
@see #setEchoChar
@see #getEchoChar
"
      end

      operation 10668034 "cut"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- JTextComponent methods ----------------------------------

Invokes <code>provideErrorFeedback</code> on the current
look and feel, which typically initiates an error beep.
The normal behavior of transferring the
currently selected range in the associated text model
to the system clipboard, and removing the contents from
the model, is not acceptable for a password field.
"
      end

      operation 10668162 "copy"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes <code>provideErrorFeedback</code> on the current
look and feel, which typically initiates an error beep.
The normal behavior of transferring the
currently selected range in the associated text model
to the system clipboard, and leaving the contents from
the model, is not acceptable for a password field.
"
      end

      operation 10668290 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the text contained in this <code>TextComponent</code>.
If the underlying document is <code>null</code>, will give a
<code>NullPointerException</code>.
<p>
For security reasons, this method is deprecated.  Use the
<code>* getPassword</code> method instead.
@deprecated As of Java 2 platform v1.2,
replaced by <code>getPassword</code>.
@return the text
"
      end

      operation 10668418 "getText"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "offs" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 361346 // BadLocationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Fetches a portion of the text represented by the
component.  Returns an empty string if length is 0.
<p>
For security reasons, this method is deprecated.  Use the
<code>getPassword</code> method instead.
@deprecated As of Java 2 platform v1.2,
replaced by <code>getPassword</code>.
@param offs the offset &gt;= 0
@param len the length &gt;= 0
@return the text
@exception BadLocationException if the offset or length are invalid
"
      end

      operation 10668546 "getPassword"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text contained in this <code>TextComponent</code>.
If the underlying document is <code>null</code>, will give a
<code>NullPointerException</code>.  For stronger
security, it is recommended that the returned character array be
cleared after use by setting each character to zero.

@return the text
"
      end

      operation 10668674 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      classrelation 4139266 // uiClassID (<unidirectional association>)
	relation 4139266 --->
	  a role_name "uiClassID" init_value " \"PasswordFieldUI\"" class_relation const_relation private
	    comment " --- variables -----------------------------------------------

@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4139266 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2416898 "echoChar"
	private explicit_type "char"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2417026 "echoCharSet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10668802 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JPasswordField</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JPasswordField</code>
"
      end

      operation 10668930 "customSetUIProperty"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is a hack to get around the fact that we cannot
directly override setUIProperty because part of the inheritance hierarchy
goes outside of the javax.swing package, and therefore calling a package
private method isn't allowed. This method should return true if the property
was handled, and false otherwise.
"
      end

      operation 10669058 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Returns the <code>AccessibleContext</code> associated with this
<code>JPasswordField</code>. For password fields, the
<code>AccessibleContext</code> takes the form of an
<code>AccessibleJPasswordField</code>.
A new <code>AccessibleJPasswordField</code> instance is created
if necessary.

@return an <code>AccessibleJPasswordField</code> that serves as the
        <code>AccessibleContext</code> of this
        <code>JPasswordField</code>
"
      end

      class 1286530 "AccessibleJPasswordField"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4139394 // <generalisation>
	  relation 4139394 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4139394 // <generalisation>
	    b parent class_ref 430338 // AccessibleJTextField
	end

	operation 10669186 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.

@return an instance of AccessibleRole describing the role of the
  object (AccessibleRole.PASSWORD_TEXT)
@see AccessibleRole
"
	end

	operation 10669314 "getAccessibleText"
	  public return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>AccessibleText</code> for the <code>JPasswordField</code>.
The returned object also implements the
<code>AccessibleExtendedText</code> interface.

@return <code>AccessibleText</code> for the JPasswordField
@see javax.accessibility.AccessibleContext
@see javax.accessibility.AccessibleContext#getAccessibleText
@see javax.accessibility.AccessibleText
@see javax.accessibility.AccessibleExtendedText

@since 1.6
"
	end

	operation 10669442 "getEchoString"
	  private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "str" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a String filled with password echo characters. The String
contains one echo character for each character (including whitespace)
that the user entered in the JPasswordField.
"
	end

	operation 10669570 "getAtIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>String</code> at a given <code>index</code>.

@param part the <code>CHARACTER</code>, <code>WORD</code> or
<code>SENTENCE</code> to retrieve
@param index an index within the text
@return a <code>String</code> if <code>part</code> and
<code>index</code> are valid.
Otherwise, <code>null</code> is returned

@see javax.accessibility.AccessibleText#CHARACTER
@see javax.accessibility.AccessibleText#WORD
@see javax.accessibility.AccessibleText#SENTENCE

@since 1.6
"
	end

	operation 10669698 "getAfterIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>String</code> after a given <code>index</code>.

@param part the <code>CHARACTER</code>, <code>WORD</code> or
<code>SENTENCE</code> to retrieve
@param index an index within the text
@return a <code>String</code> if <code>part</code> and
<code>index</code> are valid.
Otherwise, <code>null</code> is returned

@see javax.accessibility.AccessibleText#CHARACTER
@see javax.accessibility.AccessibleText#WORD
@see javax.accessibility.AccessibleText#SENTENCE

@since 1.6
"
	end

	operation 10669826 "getBeforeIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>String</code> before a given <code>index</code>.

@param part the <code>CHARACTER</code>, <code>WORD</code> or
<code>SENTENCE</code> to retrieve
@param index an index within the text
@return a <code>String</code> if <code>part</code> and
<code>index</code> are valid.
Otherwise, <code>null</code> is returned

@see javax.accessibility.AccessibleText#CHARACTER
@see javax.accessibility.AccessibleText#WORD
@see javax.accessibility.AccessibleText#SENTENCE

@since 1.6
"
	end

	operation 10669954 "getTextRange"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "startIndex" explicit_type "int"
	    param in name "endIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the text between two <code>indices</code>.

@param startIndex the start index in the text
@param endIndex the end index in the text
@return the text string if the indices are valid.
Otherwise, <code>null</code> is returned

@since 1.6
"
	end

	operation 10670082 "getTextSequenceAt"
	  public return_type class_ref 429058 // AccessibleTextSequence
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>AccessibleTextSequence</code> at a given
<code>index</code>.

@param part the <code>CHARACTER</code>, <code>WORD</code>,
<code>SENTENCE</code>, <code>LINE</code> or <code>ATTRIBUTE_RUN</code> to
retrieve
@param index an index within the text
@return an <code>AccessibleTextSequence</code> specifying the text if
<code>part</code> and <code>index</code> are valid.  Otherwise,
<code>null</code> is returned

@see javax.accessibility.AccessibleText#CHARACTER
@see javax.accessibility.AccessibleText#WORD
@see javax.accessibility.AccessibleText#SENTENCE
@see javax.accessibility.AccessibleExtendedText#LINE
@see javax.accessibility.AccessibleExtendedText#ATTRIBUTE_RUN

@since 1.6
"
	end

	operation 10670210 "getTextSequenceAfter"
	  public return_type class_ref 429058 // AccessibleTextSequence
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>AccessibleTextSequence</code> after a given
<code>index</code>.

@param part the <code>CHARACTER</code>, <code>WORD</code>,
<code>SENTENCE</code>, <code>LINE</code> or <code>ATTRIBUTE_RUN</code> to
retrieve
@param index an index within the text
@return an <code>AccessibleTextSequence</code> specifying the text if
<code>part</code> and <code>index</code> are valid.  Otherwise,
<code>null</code> is returned

@see javax.accessibility.AccessibleText#CHARACTER
@see javax.accessibility.AccessibleText#WORD
@see javax.accessibility.AccessibleText#SENTENCE
@see javax.accessibility.AccessibleExtendedText#LINE
@see javax.accessibility.AccessibleExtendedText#ATTRIBUTE_RUN

@since 1.6
"
	end

	operation 10670338 "getTextSequenceBefore"
	  public return_type class_ref 429058 // AccessibleTextSequence
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>AccessibleTextSequence</code> before a given
<code>index</code>.

@param part the <code>CHARACTER</code>, <code>WORD</code>,
<code>SENTENCE</code>, <code>LINE</code> or <code>ATTRIBUTE_RUN</code> to
retrieve
@param index an index within the text
@return an <code>AccessibleTextSequence</code> specifying the text if
<code>part</code> and <code>index</code> are valid.  Otherwise,
<code>null</code> is returned

@see javax.accessibility.AccessibleText#CHARACTER
@see javax.accessibility.AccessibleText#WORD
@see javax.accessibility.AccessibleText#SENTENCE
@see javax.accessibility.AccessibleExtendedText#LINE
@see javax.accessibility.AccessibleExtendedText#ATTRIBUTE_RUN

@since 1.6
"
	end
      end
    end

    class 1287042 "JRadioButtonMenuItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of a radio button menu item.
A <code>JRadioButtonMenuItem</code> is
a menu item that is part of a group of menu items in which only one
item in the group can be selected. The selected item displays its
selected state. Selecting it causes any other selected item to
switch to the unselected state.
To control the selected state of a group of radio button menu items,
use a <code>ButtonGroup</code> object.
<p>
Menu items can be configured, and to some degree controlled, by
<code><a href=\"Action.html\">Action</a></code>s.  Using an
<code>Action</code> with a menu item has many benefits beyond directly
configuring a menu item.  Refer to <a href=\"Action.html#buttonActions\">
Swing Components Supporting <code>Action</code></a> for more
details, and you can find more information in <a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\">How
to Use Actions</a>, a section in <em>The Java Tutorial</em>.
<p>
For further documentation and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\">How to Use Menus</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A component within a group of menu items which can be selected.

@author Georges Saab
@author David Karlton
@see ButtonGroup
"
      classrelation 4141698 // <generalisation>
	relation 4141698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4141698 // <generalisation>
	  b parent class_ref 386050 // JMenuItem
      end

      classrelation 4141826 // <realization>
	relation 4141826 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4141826 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4141954 // uiClassID (<unidirectional association>)
	relation 4141954 --->
	  a role_name "uiClassID" init_value " \"RadioButtonMenuItemUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4141954 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10678146 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JRadioButtonMenuItem</code> with no set text or icon.
"
      end

      operation 10678274 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JRadioButtonMenuItem</code> with an icon.

@param icon the <code>Icon</code> to display on the
         <code>JRadioButtonMenuItem</code>
"
      end

      operation 10678402 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>JRadioButtonMenuItem</code> with text.

@param text the text of the <code>JRadioButtonMenuItem</code>
"
      end

      operation 10678530 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 352258 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button menu item whose properties are taken from the
<code>Action</code> supplied.

@param  a the <code>Action</code> on which to base the radio
         button menu item

@since 1.3
"
      end

      operation 10678658 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button menu item with the specified text
and <code>Icon</code>.

@param text the text of the <code>JRadioButtonMenuItem</code>
@param icon the icon to display on the <code>JRadioButtonMenuItem</code>
"
      end

      operation 10678786 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button menu item with the specified text
and selection state.

@param text the text of the <code>CheckBoxMenuItem</code>
@param selected the selected state of the <code>CheckBoxMenuItem</code>
"
      end

      operation 10678914 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button menu item with the specified image
and selection state, but no text.

@param icon  the image that the button should display
@param selected  if true, the button is initially selected;
                 otherwise, the button is initially unselected
"
      end

      operation 10679042 "JRadioButtonMenuItem"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "selected" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a radio button menu item that has the specified
text, image, and selection state.  All other constructors
defer to this one.

@param text  the string displayed on the radio button
@param icon  the image that the button should display
"
      end

      operation 10679170 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the L&amp;F class that renders this component.

@return the string \"RadioButtonMenuItemUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10679298 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 10679426 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this
<code>JRadioButtonMenuItem</code>.  This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this
         <code>JRadioButtonMenuItem</code>
"
      end

      operation 10679554 "shouldUpdateSelectedStateFromAction"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overriden to return true, JRadioButtonMenuItem supports
the selected state.
"
      end

      operation 10679682 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JRadioButtonMenuItem.
For JRadioButtonMenuItems, the AccessibleContext takes the form of an
AccessibleJRadioButtonMenuItem.
A new AccessibleJRadioButtonMenuItem instance is created if necessary.

@return an AccessibleJRadioButtonMenuItem that serves as the
        AccessibleContext of this JRadioButtonMenuItem
"
      end

      class 1287170 "AccessibleJRadioButtonMenuItem"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4142082 // <generalisation>
	  relation 4142082 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4142082 // <generalisation>
	    b parent class_ref 1275394 // AccessibleJMenuItem
	end

	operation 10679810 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 1289858 "SpinnerDateModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>SpinnerModel</code> for sequences of <code>Date</code>s.
The upper and lower bounds of the sequence are defined by properties called
<code>start</code> and <code>end</code> and the size
of the increase or decrease computed by the <code>nextValue</code>
and <code>previousValue</code> methods is defined by a property
called <code>calendarField</code>.  The <code>start</code>
and <code>end</code> properties can be <code>null</code> to
indicate that the sequence has no lower or upper limit.
<p>
The value of the <code>calendarField</code> property must be one of the
<code>java.util.Calendar</code> constants that specify a field
within a <code>Calendar</code>.  The <code>getNextValue</code>
and <code>getPreviousValue</code>
methods change the date forward or backwards by this amount.
For example, if <code>calendarField</code> is <code>Calendar.DAY_OF_WEEK</code>,
then <code>nextValue</code> produces a <code>Date</code> that's 24
hours after the current <code>value</code>, and <code>previousValue</code>
produces a <code>Date</code> that's 24 hours earlier.
<p>
The legal values for <code>calendarField</code> are:
<ul>
  <li><code>Calendar.ERA</code>
  <li><code>Calendar.YEAR</code>
  <li><code>Calendar.MONTH</code>
  <li><code>Calendar.WEEK_OF_YEAR</code>
  <li><code>Calendar.WEEK_OF_MONTH</code>
  <li><code>Calendar.DAY_OF_MONTH</code>
  <li><code>Calendar.DAY_OF_YEAR</code>
  <li><code>Calendar.DAY_OF_WEEK</code>
  <li><code>Calendar.DAY_OF_WEEK_IN_MONTH</code>
  <li><code>Calendar.AM_PM</code>
  <li><code>Calendar.HOUR</code>
  <li><code>Calendar.HOUR_OF_DAY</code>
  <li><code>Calendar.MINUTE</code>
  <li><code>Calendar.SECOND</code>
  <li><code>Calendar.MILLISECOND</code>
</ul>
However some UIs may set the calendarField before committing the edit
to spin the field under the cursor. If you only want one field to
spin you can subclass and ignore the setCalendarField calls.
<p>
This model inherits a <code>ChangeListener</code>.  The
<code>ChangeListeners</code> are notified whenever the models
<code>value</code>, <code>calendarField</code>,
<code>start</code>, or <code>end</code> properties changes.

@see JSpinner
@see SpinnerModel
@see AbstractSpinnerModel
@see SpinnerListModel
@see SpinnerNumberModel
@see Calendar#add

@author Hans Muller
@since 1.4
"
      classrelation 4182786 // <generalisation>
	relation 4182786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4182786 // <generalisation>
	  b parent class_ref 1262978 // AbstractSpinnerModel
      end

      classrelation 4182914 // <realization>
	relation 4182914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4182914 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4183042 // start (<unidirectional association>)
	relation 4183042 --->
	  a role_name "start" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4183042 // start (<unidirectional association>)
	  b parent class_ref 194946 // Comparable
      end

      classrelation 4183170 // end (<unidirectional association>)
	relation 4183170 --->
	  a role_name "end" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4183170 // end (<unidirectional association>)
	  b parent class_ref 194946 // Comparable
      end

      classrelation 4183298 // value (<unidirectional association>)
	relation 4183298 --->
	  a role_name "value" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4183298 // value (<unidirectional association>)
	  b parent class_ref 723586 // Calendar
      end

      attribute 2437506 "calendarField"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10810882 "calendarFieldOK"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "calendarField" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10811010 "SpinnerDateModel"
	public explicit_return_type ""
	nparams 4
	  param inout name "value" type class_ref 521474 // Date
	  param inout name "start" type class_ref 194946 // Comparable
	  param inout name "end" type class_ref 194946 // Comparable
	  param in name "calendarField" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>SpinnerDateModel</code> that represents a sequence of dates
between <code>start</code> and <code>end</code>.  The
<code>nextValue</code> and <code>previousValue</code> methods
compute elements of the sequence by advancing or reversing
the current date <code>value</code> by the
<code>calendarField</code> time unit.  For a precise description
of what it means to increment or decrement a <code>Calendar</code>
<code>field</code>, see the <code>add</code> method in
<code>java.util.Calendar</code>.
<p>
The <code>start</code> and <code>end</code> parameters can be
<code>null</code> to indicate that the range doesn't have an
upper or lower bound.  If <code>value</code> or
<code>calendarField</code> is <code>null</code>, or if both
<code>start</code> and <code>end</code> are specified and
<code>minimum &gt; maximum</code> then an
<code>IllegalArgumentException</code> is thrown.
Similarly if <code>(minimum &lt;= value &lt;= maximum)</code> is false,
an IllegalArgumentException is thrown.

@param value the current (non <code>null</code>) value of the model
@param start the first date in the sequence or <code>null</code>
@param end the last date in the sequence or <code>null</code>
@param calendarField one of
  <ul>
   <li><code>Calendar.ERA</code>
   <li><code>Calendar.YEAR</code>
   <li><code>Calendar.MONTH</code>
   <li><code>Calendar.WEEK_OF_YEAR</code>
   <li><code>Calendar.WEEK_OF_MONTH</code>
   <li><code>Calendar.DAY_OF_MONTH</code>
   <li><code>Calendar.DAY_OF_YEAR</code>
   <li><code>Calendar.DAY_OF_WEEK</code>
   <li><code>Calendar.DAY_OF_WEEK_IN_MONTH</code>
   <li><code>Calendar.AM_PM</code>
   <li><code>Calendar.HOUR</code>
   <li><code>Calendar.HOUR_OF_DAY</code>
   <li><code>Calendar.MINUTE</code>
   <li><code>Calendar.SECOND</code>
   <li><code>Calendar.MILLISECOND</code>
  </ul>

@throws IllegalArgumentException if <code>value</code> or
   <code>calendarField</code> are <code>null</code>,
   if <code>calendarField</code> isn't valid,
   or if the following expression is
   false: <code>(start &lt;= value &lt;= end)</code>.

@see Calendar#add
@see #setValue
@see #setStart
@see #setEnd
@see #setCalendarField
"
      end

      operation 10811138 "SpinnerDateModel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SpinnerDateModel</code> whose initial
<code>value</code> is the current date, <code>calendarField</code>
is equal to <code>Calendar.DAY_OF_MONTH</code>, and for which
there are no <code>start</code>/<code>end</code> limits.
"
      end

      operation 10811266 "setStart"
	public explicit_return_type "void"
	nparams 1
	  param inout name "start" type class_ref 194946 // Comparable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the lower limit for Dates in this sequence.
If <code>start</code> is <code>null</code>,
then there is no lower limit.  No bounds checking is done here:
the new start value may invalidate the
<code>(start &lt;= value &lt;= end)</code>
invariant enforced by the constructors.  This is to simplify updating
the model.  Naturally one should ensure that the invariant is true
before calling the <code>nextValue</code>, <code>previousValue</code>,
or <code>setValue</code> methods.
<p>
Typically this property is a <code>Date</code> however it's possible to use
a <code>Comparable</code> with a <code>compareTo</code> method for Dates.
For example <code>start</code> might be an instance of a class like this:
<pre>
MyStartDate implements Comparable {
    long t = 12345;
    public int compareTo(Date d) {
           return (t &lt; d.getTime() ? -1 : (t == d.getTime() ? 0 : 1));
    }
    public int compareTo(Object o) {
           return compareTo((Date)o);
    }
}
</pre>
Note that the above example will throw a <code>ClassCastException</code>
if the <code>Object</code> passed to <code>compareTo(Object)</code>
is not a <code>Date</code>.
<p>
This method fires a <code>ChangeEvent</code> if the
<code>start</code> has changed.

@param start defines the first date in the sequence
@see #getStart
@see #setEnd
@see #addChangeListener
"
      end

      operation 10811394 "getStart"
	public return_type class_ref 194946 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first <code>Date</code> in the sequence.

@return the value of the <code>start</code> property
@see #setStart
"
      end

      operation 10811522 "setEnd"
	public explicit_return_type "void"
	nparams 1
	  param inout name "end" type class_ref 194946 // Comparable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the upper limit for <code>Date</code>s in this sequence.
If <code>start</code> is <code>null</code>, then there is no upper
limit.  No bounds checking is done here: the new
start value may invalidate the <code>(start &lt;= value &lt;= end)</code>
invariant enforced by the constructors.  This is to simplify updating
the model.  Naturally, one should ensure that the invariant is true
before calling the <code>nextValue</code>, <code>previousValue</code>,
or <code>setValue</code> methods.
<p>
Typically this property is a <code>Date</code> however it's possible to use
<code>Comparable</code> with a <code>compareTo</code> method for
<code>Date</code>s.  See <code>setStart</code> for an example.
<p>
This method fires a <code>ChangeEvent</code> if the <code>end</code>
has changed.

@param end defines the last date in the sequence
@see #getEnd
@see #setStart
@see #addChangeListener
"
      end

      operation 10811650 "getEnd"
	public return_type class_ref 194946 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last <code>Date</code> in the sequence.

@return the value of the <code>end</code> property
@see #setEnd
"
      end

      operation 10811778 "setCalendarField"
	public explicit_return_type "void"
	nparams 1
	  param in name "calendarField" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the size of the date value change computed
by the <code>nextValue</code> and <code>previousValue</code> methods.
The <code>calendarField</code> parameter must be one of the
<code>Calendar</code> field constants like <code>Calendar.MONTH</code>
or <code>Calendar.MINUTE</code>.
The <code>nextValue</code> and <code>previousValue</code> methods
simply move the specified <code>Calendar</code> field forward or backward
by one unit with the <code>Calendar.add</code> method.
You should use this method with care as some UIs may set the
calendarField before committing the edit to spin the field under
the cursor. If you only want one field to spin you can subclass
and ignore the setCalendarField calls.

@param calendarField one of
 <ul>
   <li><code>Calendar.ERA</code>
   <li><code>Calendar.YEAR</code>
   <li><code>Calendar.MONTH</code>
   <li><code>Calendar.WEEK_OF_YEAR</code>
   <li><code>Calendar.WEEK_OF_MONTH</code>
   <li><code>Calendar.DAY_OF_MONTH</code>
   <li><code>Calendar.DAY_OF_YEAR</code>
   <li><code>Calendar.DAY_OF_WEEK</code>
   <li><code>Calendar.DAY_OF_WEEK_IN_MONTH</code>
   <li><code>Calendar.AM_PM</code>
   <li><code>Calendar.HOUR</code>
   <li><code>Calendar.HOUR_OF_DAY</code>
   <li><code>Calendar.MINUTE</code>
   <li><code>Calendar.SECOND</code>
   <li><code>Calendar.MILLISECOND</code>
 </ul>
<p>
This method fires a <code>ChangeEvent</code> if the
<code>calendarField</code> has changed.

@see #getCalendarField
@see #getNextValue
@see #getPreviousValue
@see Calendar#add
@see #addChangeListener
"
      end

      operation 10811906 "getCalendarField"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Calendar</code> field that is added to or subtracted from
by the <code>nextValue</code> and <code>previousValue</code> methods.

@return the value of the <code>calendarField</code> property
@see #setCalendarField
"
      end

      operation 10812034 "getNextValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next <code>Date</code> in the sequence, or <code>null</code> if
the next date is after <code>end</code>.

@return the next <code>Date</code> in the sequence, or <code>null</code> if
    the next date is after <code>end</code>.

@see SpinnerModel#getNextValue
@see #getPreviousValue
@see #setCalendarField
"
      end

      operation 10812162 "getPreviousValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previous <code>Date</code> in the sequence, or <code>null</code>
if the previous date is before <code>start</code>.

@return the previous <code>Date</code> in the sequence, or
    <code>null</code> if the previous date
    is before <code>start</code>

@see SpinnerModel#getPreviousValue
@see #getNextValue
@see #setCalendarField
"
      end

      operation 10812290 "getDate"
	public return_type class_ref 521474 // Date
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current element in this sequence of <code>Date</code>s.
This method is equivalent to <code>(Date)getValue</code>.

@return the <code>value</code> property
@see #setValue
"
      end

      operation 10812418 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current element in this sequence of <code>Date</code>s.

@return the <code>value</code> property
@see #setValue
@see #getDate
"
      end

      operation 10812546 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current <code>Date</code> for this sequence.
If <code>value</code> is <code>null</code>,
an <code>IllegalArgumentException</code> is thrown.  No bounds
checking is done here:
the new value may invalidate the <code>(start &lt;= value &lt; end)</code>
invariant enforced by the constructors.  Naturally, one should ensure
that the <code>(start &lt;= value &lt;= maximum)</code> invariant is true
before calling the <code>nextValue</code>, <code>previousValue</code>,
or <code>setValue</code> methods.
<p>
This method fires a <code>ChangeEvent</code> if the
<code>value</code> has changed.

@param value the current (non <code>null</code>)
   <code>Date</code> for this sequence
@throws IllegalArgumentException if value is <code>null</code>
   or not a <code>Date</code>
@see #getDate
@see #getValue
@see #addChangeListener
"
      end
    end

    class 1290498 "SpinnerNumberModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>SpinnerModel</code> for sequences of numbers.
The upper and lower bounds of the sequence are defined
by properties called <code>minimum</code> and
<code>maximum</code>. The size of the increase or decrease
computed by the <code>nextValue</code> and
<code>previousValue</code> methods is defined by a property called
<code>stepSize</code>.  The <code>minimum</code> and
<code>maximum</code> properties can be <code>null</code>
to indicate that the sequence has no lower or upper limit.
All of the properties in this class are defined in terms of two
generic types: <code>Number</code> and
<code>Comparable</code>, so that all Java numeric types
may be accommodated.  Internally, there's only support for
values whose type is one of the primitive <code>Number</code> types:
<code>Double</code>, <code>Float</code>, <code>Long</code>,
<code>Integer</code>, <code>Short</code>, or <code>Byte</code>.
<p>
To create a <code>SpinnerNumberModel</code> for the integer
range zero to one hundred, with
fifty as the initial value, one could write:
<pre>
Integer value = new Integer(50);
Integer min = new Integer(0);
Integer max = new Integer(100);
Integer step = new Integer(1);
SpinnerNumberModel model = new SpinnerNumberModel(value, min, max, step);
int fifty = model.getNumber().intValue();
</pre>
<p>
Spinners for integers and doubles are common, so special constructors
for these cases are provided.  For example to create the model in
the previous example, one could also write:
<pre>
SpinnerNumberModel model = new SpinnerNumberModel(50, 0, 100, 1);
</pre>
<p>
This model inherits a <code>ChangeListener</code>.
The <code>ChangeListeners</code> are notified
whenever the model's <code>value</code>, <code>stepSize</code>,
<code>minimum</code>, or <code>maximum</code> properties changes.

@see JSpinner
@see SpinnerModel
@see AbstractSpinnerModel
@see SpinnerListModel
@see SpinnerDateModel

@author Hans Muller
@since 1.4
"
      classrelation 4183810 // <generalisation>
	relation 4183810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4183810 // <generalisation>
	  b parent class_ref 1262978 // AbstractSpinnerModel
      end

      classrelation 4183938 // <realization>
	relation 4183938 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4183938 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4184066 // stepSize (<unidirectional association>)
	relation 4184066 --->
	  a role_name "stepSize" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4184066 // stepSize (<unidirectional association>)
	  b parent class_ref 398210 // Number
      end

      classrelation 4184194 // value (<unidirectional association>)
	relation 4184194 --->
	  a role_name "value" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4184194 // value (<unidirectional association>)
	  b parent class_ref 398210 // Number
      end

      classrelation 4184322 // minimum (<unidirectional association>)
	relation 4184322 --->
	  a role_name "minimum" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4184322 // minimum (<unidirectional association>)
	  b parent class_ref 194946 // Comparable
      end

      classrelation 4184450 // maximum (<unidirectional association>)
	relation 4184450 --->
	  a role_name "maximum" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4184450 // maximum (<unidirectional association>)
	  b parent class_ref 194946 // Comparable
      end

      operation 10813954 "SpinnerNumberModel"
	public explicit_return_type ""
	nparams 4
	  param inout name "value" type class_ref 398210 // Number
	  param inout name "minimum" type class_ref 194946 // Comparable
	  param inout name "maximum" type class_ref 194946 // Comparable
	  param inout name "stepSize" type class_ref 398210 // Number
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SpinnerModel</code> that represents
a closed sequence of
numbers from <code>minimum</code> to <code>maximum</code>.  The
<code>nextValue</code> and <code>previousValue</code> methods
compute elements of the sequence by adding or subtracting
<code>stepSize</code> respectively.  All of the parameters
must be mutually <code>Comparable</code>, <code>value</code>
and <code>stepSize</code> must be instances of <code>Integer</code>
<code>Long</code>, <code>Float</code>, or <code>Double</code>.
<p>
The <code>minimum</code> and <code>maximum</code> parameters
can be <code>null</code> to indicate that the range doesn't
have an upper or lower bound.
If <code>value</code> or <code>stepSize</code> is <code>null</code>,
or if both <code>minimum</code> and <code>maximum</code>
are specified and <code>minimum &gt; maximum</code> then an
<code>IllegalArgumentException</code> is thrown.
Similarly if <code>(minimum &lt;= value &lt;= maximum</code>) is false,
an <code>IllegalArgumentException</code> is thrown.

@param value the current (non <code>null</code>) value of the model
@param minimum the first number in the sequence or <code>null</code>
@param maximum the last number in the sequence or <code>null</code>
@param stepSize the difference between elements of the sequence

@throws IllegalArgumentException if stepSize or value is
    <code>null</code> or if the following expression is false:
    <code>minimum &lt;= value &lt;= maximum</code>
"
      end

      operation 10814082 "SpinnerNumberModel"
	public explicit_return_type ""
	nparams 4
	  param in name "value" explicit_type "int"
	  param in name "minimum" explicit_type "int"
	  param in name "maximum" explicit_type "int"
	  param in name "stepSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SpinnerNumberModel</code> with the specified
<code>value</code>, <code>minimum</code>/<code>maximum</code> bounds,
and <code>stepSize</code>.

@param value the current value of the model
@param minimum the first number in the sequence
@param maximum the last number in the sequence
@param stepSize the difference between elements of the sequence
@throws IllegalArgumentException if the following expression is false:
    <code>minimum &lt;= value &lt;= maximum</code>
"
      end

      operation 10814210 "SpinnerNumberModel"
	public explicit_return_type ""
	nparams 4
	  param in name "value" explicit_type "double"
	  param in name "minimum" explicit_type "double"
	  param in name "maximum" explicit_type "double"
	  param in name "stepSize" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SpinnerNumberModel</code> with the specified
<code>value</code>, <code>minimum</code>/<code>maximum</code> bounds,
and <code>stepSize</code>.

@param value the current value of the model
@param minimum the first number in the sequence
@param maximum the last number in the sequence
@param stepSize the difference between elements of the sequence
@throws IllegalArgumentException   if the following expression is false:
    <code>minimum &lt;= value &lt;= maximum</code>
"
      end

      operation 10814338 "SpinnerNumberModel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SpinnerNumberModel</code> with no
<code>minimum</code> or <code>maximum</code> value,
<code>stepSize</code> equal to one, and an initial value of zero.
"
      end

      operation 10814466 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param inout name "minimum" type class_ref 194946 // Comparable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the lower bound for numbers in this sequence.
If <code>minimum</code> is <code>null</code>,
then there is no lower bound.  No bounds checking is done here;
the new <code>minimum</code> value may invalidate the
<code>(minimum &lt;= value &lt;= maximum)</code>
invariant enforced by the constructors.  This is to simplify updating
the model, naturally one should ensure that the invariant is true
before calling the <code>getNextValue</code>,
<code>getPreviousValue</code>, or <code>setValue</code> methods.
<p>
Typically this property is a <code>Number</code> of the same type
as the <code>value</code> however it's possible to use any
<code>Comparable</code> with a <code>compareTo</code>
method for a <code>Number</code> with the same type as the value.
For example if value was a <code>Long</code>,
<code>minimum</code> might be a Date subclass defined like this:
<pre>
MyDate extends Date {  // Date already implements Comparable
    public int compareTo(Long o) {
        long t = getTime();
        return (t &lt; o.longValue() ? -1 : (t == o.longValue() ? 0 : 1));
    }
}
</pre>
<p>
This method fires a <code>ChangeEvent</code>
if the <code>minimum</code> has changed.

@param minimum a <code>Comparable</code> that has a
    <code>compareTo</code> method for <code>Number</code>s with
    the same type as <code>value</code>
@see #getMinimum
@see #setMaximum
@see SpinnerModel#addChangeListener
"
      end

      operation 10814594 "getMinimum"
	public return_type class_ref 194946 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first number in this sequence.

@return the value of the <code>minimum</code> property
@see #setMinimum
"
      end

      operation 10814722 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param inout name "maximum" type class_ref 194946 // Comparable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the upper bound for numbers in this sequence.
If <code>maximum</code> is <code>null</code>, then there
is no upper bound.  No bounds checking is done here; the new
<code>maximum</code> value may invalidate the
<code>(minimum &lt;= value &lt; maximum)</code>
invariant enforced by the constructors.  This is to simplify updating
the model, naturally one should ensure that the invariant is true
before calling the <code>next</code>, <code>previous</code>,
or <code>setValue</code> methods.
<p>
Typically this property is a <code>Number</code> of the same type
as the <code>value</code> however it's possible to use any
<code>Comparable</code> with a <code>compareTo</code>
method for a <code>Number</code> with the same type as the value.
See <a href=\"#setMinimum(java.lang.Comparable)\">
<code>setMinimum</code></a> for an example.
<p>
This method fires a <code>ChangeEvent</code> if the
<code>maximum</code> has changed.

@param maximum a <code>Comparable</code> that has a
    <code>compareTo</code> method for <code>Number</code>s with
    the same type as <code>value</code>
@see #getMaximum
@see #setMinimum
@see SpinnerModel#addChangeListener
"
      end

      operation 10814850 "getMaximum"
	public return_type class_ref 194946 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last number in the sequence.

@return the value of the <code>maximum</code> property
@see #setMaximum
"
      end

      operation 10814978 "setStepSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stepSize" type class_ref 398210 // Number
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the size of the value change computed by the
<code>getNextValue</code> and <code>getPreviousValue</code>
methods.  An <code>IllegalArgumentException</code>
is thrown if <code>stepSize</code> is <code>null</code>.
<p>
This method fires a <code>ChangeEvent</code> if the
<code>stepSize</code> has changed.

@param stepSize the size of the value change computed by the
    <code>getNextValue</code> and <code>getPreviousValue</code> methods
@see #getNextValue
@see #getPreviousValue
@see #getStepSize
@see SpinnerModel#addChangeListener
"
      end

      operation 10815106 "getStepSize"
	public return_type class_ref 398210 // Number
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the value change computed by the
<code>getNextValue</code>
and <code>getPreviousValue</code> methods.

@return the value of the <code>stepSize</code> property
@see #setStepSize
"
      end

      operation 10815234 "incrValue"
	private return_type class_ref 398210 // Number
	nparams 1
	  param in name "dir" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10815362 "getNextValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next number in the sequence.

@return <code>value + stepSize</code> or <code>null</code> if the sum
    exceeds <code>maximum</code>.

@see SpinnerModel#getNextValue
@see #getPreviousValue
@see #setStepSize
"
      end

      operation 10815490 "getPreviousValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previous number in the sequence.

@return <code>value - stepSize</code>, or
    <code>null</code> if the sum is less
    than <code>minimum</code>.

@see SpinnerModel#getPreviousValue
@see #getNextValue
@see #setStepSize
"
      end

      operation 10815618 "getNumber"
	public return_type class_ref 398210 // Number
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the current element of the sequence.

@return the value property
@see #setValue
"
      end

      operation 10815746 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the current element of the sequence.

@return the value property
@see #setValue
@see #getNumber
"
      end

      operation 10815874 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current value for this sequence.  If <code>value</code> is
<code>null</code>, or not a <code>Number</code>, an
<code>IllegalArgumentException</code> is thrown.  No
bounds checking is done here; the new value may invalidate the
<code>(minimum &lt;= value &lt;= maximum)</code>
invariant enforced by the constructors.   It's also possible to set
the value to be something that wouldn't naturally occur in the sequence,
i.e. a value that's not modulo the <code>stepSize</code>.
This is to simplify updating the model, and to accommodate
spinners that don't want to restrict values that have been
directly entered by the user. Naturally, one should ensure that the
<code>(minimum &lt;= value &lt;= maximum)</code> invariant is true
before calling the <code>next</code>, <code>previous</code>, or
<code>setValue</code> methods.
<p>
This method fires a <code>ChangeEvent</code> if the value has changed.

@param value the current (non <code>null</code>) <code>Number</code>
        for this sequence
@throws IllegalArgumentException if <code>value</code> is
        <code>null</code> or not a <code>Number</code>
@see #getNumber
@see #getValue
@see SpinnerModel#addChangeListener
"
      end
    end

    class 1290882 "SpinnerListModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A simple implementation of <code>SpinnerModel</code> whose
values are defined by an array or a <code>List</code>.
For example to create a model defined by
an array of the names of the days of the week:
<pre>
String[] days = new DateFormatSymbols().getWeekdays();
SpinnerModel model = new SpinnerListModel(Arrays.asList(days).subList(1, 8));
</pre>
This class only stores a reference to the array or <code>List</code>
so if an element of the underlying sequence changes, it's up
to the application to notify the <code>ChangeListeners</code> by calling
<code>fireStateChanged</code>.
<p>
This model inherits a <code>ChangeListener</code>.
The <code>ChangeListener</code>s are notified whenever the
model's <code>value</code> or <code>list</code> properties changes.

@see JSpinner
@see SpinnerModel
@see AbstractSpinnerModel
@see SpinnerNumberModel
@see SpinnerDateModel

@author Hans Muller
@since 1.4
"
      classrelation 4183426 // <generalisation>
	relation 4183426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4183426 // <generalisation>
	  b parent class_ref 1262978 // AbstractSpinnerModel
      end

      classrelation 4183554 // <realization>
	relation 4183554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4183554 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4183682 // list (<unidirectional association>)
	relation 4183682 --->
	  a role_name "list" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4183682 // list (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      attribute 2437634 "index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10812674 "SpinnerListModel"
	public explicit_return_type ""
	nparams 1
	  param inout name "values" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SpinnerModel</code> whose sequence of
values is defined by the specified <code>List</code>.
The initial value (<i>current element</i>)
of the model will be <code>values.get(0)</code>.
If <code>values</code> is <code>null</code> or has zero
size, an <code>IllegalArugmentException</code> is thrown.

@param values the sequence this model represents
@throws IllegalArgumentException if <code>values</code> is
   <code>null</code> or zero size
"
      end

      operation 10812802 "SpinnerListModel"
	public explicit_return_type ""
	nparams 1
	  param inout name "values" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SpinnerModel</code> whose sequence of values
is defined by the specified array.  The initial value of the model
will be <code>values[0]</code>.  If <code>values</code> is
<code>null</code> or has zero length, an
<code>IllegalArgumentException</code> is thrown.

@param values the sequence this model represents
@throws IllegalArgumentException if <code>values</code> is
   <code>null</code> or zero length
"
      end

      operation 10812930 "SpinnerListModel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an effectively empty <code>SpinnerListModel</code>.
The model's list will contain a single
<code>\"empty\"</code> string element.
"
      end

      operation 10813058 "getList"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>List</code> that defines the sequence for this model.

@return the value of the <code>list</code> property
@see #setList
"
      end

      operation 10813186 "setList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "list" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the list that defines this sequence and resets the index
of the models <code>value</code> to zero.  Note that <code>list</code>
is not copied, the model just stores a reference to it.
<p>
This method fires a <code>ChangeEvent</code> if <code>list</code> is
not equal to the current list.

@param list the sequence that this model represents
@throws IllegalArgumentException if <code>list</code> is
   <code>null</code> or zero length
@see #getList
"
      end

      operation 10813314 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current element of the sequence.

@return the <code>value</code> property
@see SpinnerModel#getValue
@see #setValue
"
      end

      operation 10813442 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elt" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the current element of the sequence and notifies
<code>ChangeListeners</code>.  If the specified
value is not equal to an element of the underlying sequence
then an <code>IllegalArgumentException</code> is thrown.
In the following example the <code>setValue</code> call
would cause an exception to be thrown:
<pre>
String[] values = {\"one\", \"two\", \"free\", \"four\"};
SpinnerModel model = new SpinnerListModel(values);
model.setValue(\"TWO\");
</pre>

@param elt the sequence element that will be model's current value
@throws IllegalArgumentException if the specified value isn't allowed
@see SpinnerModel#setValue
@see #getValue
"
      end

      operation 10813570 "getNextValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next legal value of the underlying sequence or
<code>null</code> if value is already the last element.

@return the next legal value of the underlying sequence or
    <code>null</code> if value is already the last element
@see SpinnerModel#getNextValue
@see #getPreviousValue
"
      end

      operation 10813698 "getPreviousValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previous element of the underlying sequence or
<code>null</code> if value is already the first element.

@return the previous element of the underlying sequence or
    <code>null</code> if value is already the first element
@see SpinnerModel#getPreviousValue
@see #getNextValue
"
      end

      operation 10813826 "findNextMatch"
	package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "substring" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next object that starts with <code>substring</code>.

@param substring the string to be matched
@return the match
"
      end
    end

    class 1292930 "SizeSequence"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>SizeSequence</code> object
efficiently maintains an ordered list
of sizes and corresponding positions.
One situation for which <code>SizeSequence</code>
might be appropriate is in a component
that displays multiple rows of unequal size.
In this case, a single <code>SizeSequence</code>
object could be used to track the heights
and Y positions of all rows.
<p>
Another example would be a multi-column component,
such as a <code>JTable</code>,
in which the column sizes are not all equal.
The <code>JTable</code> might use a single
<code>SizeSequence</code> object
to store the widths and X positions of all the columns.
The <code>JTable</code> could then use the
<code>SizeSequence</code> object
to find the column corresponding to a certain position.
The <code>JTable</code> could update the
<code>SizeSequence</code> object
whenever one or more column sizes changed.

<p>
The following figure shows the relationship between size and position data
for a multi-column component.

<center>
<img src=\"doc-files/SizeSequence-1.gif\" width=384 height = 100
alt=\"The first item begins at position 0, the second at the position equal
to the size of the previous item, and so on.\">
</center>
<p>
In the figure, the first index (0) corresponds to the first column,
the second index (1) to the second column, and so on.
The first column's position starts at 0,
and the column occupies <em>size<sub>0</sub></em> pixels,
where <em>size<sub>0</sub></em> is the value returned by
<code>getSize(0)</code>.
Thus, the first column ends at <em>size<sub>0</sub></em> - 1.
The second column then begins at
the position <em>size<sub>0</sub></em>
and occupies <em>size<sub>1</sub></em> (<code>getSize(1)</code>) pixels.
<p>
Note that a <code>SizeSequence</code> object simply represents intervals
along an axis.
In our examples, the intervals represent height or width in pixels.
However, any other unit of measure (for example, time in days)
could be just as valid.


<h3>Implementation Notes</h3>

Normally when storing the size and position of entries,
one would choose between
storing the sizes or storing their positions
instead. The two common operations that are needed during
rendering are: <code>getIndex(position)</code>
and <code>setSize(index, size)</code>.
Whichever choice of internal format is made one of these
operations is costly when the number of entries becomes large.
If sizes are stored, finding the index of the entry
that encloses a particular position is linear in the
number of entries. If positions are stored instead, setting
the size of an entry at a particular index requires updating
the positions of the affected entries, which is also a linear
calculation.
<p>
Like the above techniques this class holds an array of N integers
internally but uses a hybrid encoding, which is halfway
between the size-based and positional-based approaches.
The result is a data structure that takes the same space to store
the information but can perform most operations in Log(N) time
instead of O(N), where N is the number of entries in the list.
<p>
Two operations that remain O(N) in the number of entries are
the <code>insertEntries</code>
and <code>removeEntries</code> methods, both
of which are implemented by converting the internal array to
a set of integer sizes, copying it into the new array, and then
reforming the hybrid representation in place.

@author Philip Milne
@since 1.3


  Each method is implemented by taking the minimum and
  maximum of the range of integers that need to be operated
  upon. All the algorithms work by dividing this range
  into two smaller ranges and recursing. The recursion
  is terminated when the upper and lower bounds are equal.
"
      attribute 2436866 "emptyArray"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2436994 "a"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10808450 "SizeSequence"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SizeSequence</code> object
that contains no entries.  To add entries, you
can use <code>insertEntries</code> or <code>setSizes</code>.

@see #insertEntries
@see #setSizes(int[])
"
      end

      operation 10808578 "SizeSequence"
	public explicit_return_type ""
	nparams 1
	  param in name "numEntries" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SizeSequence</code> object
that contains the specified number of entries,
all initialized to have size 0.

@param numEntries  the number of sizes to track
@exception NegativeArraySizeException if
   <code>numEntries &lt; 0</code>
"
      end

      operation 10808706 "SizeSequence"
	public explicit_return_type ""
	nparams 2
	  param in name "numEntries" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SizeSequence</code> object
that contains the specified number of entries,
all initialized to have size <code>value</code>.

@param numEntries  the number of sizes to track
@param value       the initial value of each size
"
      end

      operation 10808834 "SizeSequence"
	public explicit_return_type ""
	nparams 1
	  param inout name "sizes" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SizeSequence</code> object
that contains the specified sizes.

@param sizes  the array of sizes to be contained in
              the <code>SizeSequence</code>
"
      end

      operation 10808962 "setSizes"
	package explicit_return_type "void"
	nparams 2
	  param in name "length" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the size sequence to contain <code>length</code> items
all with a size of <code>size</code>.
"
      end

      operation 10809090 "setSizes"
	private explicit_return_type "int"
	nparams 3
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10809218 "setSizes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sizes" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this <code>SizeSequence</code> object,
using the data in the <code>sizes</code> argument.
This method reinitializes this object so that it
contains as many entries as the <code>sizes</code> array.
Each entry's size is initialized to the value of the
corresponding item in <code>sizes</code>.

@param sizes  the array of sizes to be contained in
              this <code>SizeSequence</code>
"
      end

      operation 10809346 "setSizes"
	private explicit_return_type "int"
	nparams 3
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param inout name "sizes" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10809474 "getSizes"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of all entries.

@return  a new array containing the sizes in this object
"
      end

      operation 10809602 "getSizes"
	private explicit_return_type "int"
	nparams 3
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param inout name "sizes" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10809730 "getPosition"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start position for the specified entry.
For example, <code>getPosition(0)</code> returns 0,
<code>getPosition(1)</code> is equal to
  <code>getSize(0)</code>,
<code>getPosition(2)</code> is equal to
  <code>getSize(0)</code> + <code>getSize(1)</code>,
and so on.
<p>Note that if <code>index</code> is greater than
<code>length</code> the value returned may
be meaningless.

@param index  the index of the entry whose position is desired
@return       the starting position of the specified entry
"
      end

      operation 10809858 "getPosition"
	private explicit_return_type "int"
	nparams 3
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10809986 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the entry
that corresponds to the specified position.
For example, <code>getIndex(0)</code> is 0,
since the first entry always starts at position 0.

@param position  the position of the entry
@return  the index of the entry that occupies the specified position
"
      end

      operation 10810114 "getIndex"
	private explicit_return_type "int"
	nparams 3
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10810242 "getSize"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the specified entry.
If <code>index</code> is out of the range
<code>(0 &lt;= index &lt; getSizes().length)</code>
the behavior is unspecified.

@param index  the index corresponding to the entry
@return  the size of the entry
"
      end

      operation 10810370 "setSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the specified entry.
Note that if the value of <code>index</code>
does not fall in the range:
<code>(0 &lt;= index &lt; getSizes().length)</code>
the behavior is unspecified.

@param index  the index corresponding to the entry
@param size   the size of the entry
"
      end

      operation 10810498 "changeSize"
	private explicit_return_type "void"
	nparams 4
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param in name "delta" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10810626 "insertEntries"
	public explicit_return_type "void"
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a contiguous group of entries to this <code>SizeSequence</code>.
Note that the values of <code>start</code> and
<code>length</code> must satisfy the following
conditions:  <code>(0 &lt;= start &lt; getSizes().length)
AND (length &gt;= 0)</code>.  If these conditions are
not met, the behavior is unspecified and an exception
may be thrown.

@param start   the index to be assigned to the first entry
               in the group
@param length  the number of entries in the group
@param value   the size to be assigned to each new entry
@exception ArrayIndexOutOfBoundsException if the parameters
  are outside of the range:
  (<code>0 &lt;= start &lt; (getSizes().length)) AND (length &gt;= 0)</code>
"
      end

      operation 10810754 "removeEntries"
	public explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a contiguous group of entries
from this <code>SizeSequence</code>.
Note that the values of <code>start</code> and
<code>length</code> must satisfy the following
conditions:  <code>(0 &lt;= start &lt; getSizes().length)
AND (length &gt;= 0)</code>.  If these conditions are
not met, the behavior is unspecified and an exception
may be thrown.

@param start   the index of the first entry to be removed
@param length  the number of entries to be removed
"
      end
    end

    class 1293186 "JTextArea"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>JTextArea</code> is a multi-line area that displays plain text.
It is intended to be a lightweight component that provides source
compatibility with the <code>java.awt.TextArea</code> class where it can
reasonably do so.
You can find information and examples of using all the text components in
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/text.html\">Using Text Components</a>,
a section in <em>The Java Tutorial.</em>

<p>
This component has capabilities not found in the
<code>java.awt.TextArea</code> class.  The superclass should be
consulted for additional capabilities.
Alternative multi-line text classes with
more capabilities are <code>JTextPane</code> and <code>JEditorPane</code>.
<p>
The <code>java.awt.TextArea</code> internally handles scrolling.
<code>JTextArea</code> is different in that it doesn't manage scrolling,
but implements the swing <code>Scrollable</code> interface.  This allows it
to be placed inside a <code>JScrollPane</code> if scrolling
behavior is desired, and used directly if scrolling is not desired.
<p>
The <code>java.awt.TextArea</code> has the ability to do line wrapping.
This was controlled by the horizontal scrolling policy.  Since
scrolling is not done by <code>JTextArea</code> directly, backward
compatibility must be provided another way.  <code>JTextArea</code> has
a bound property for line wrapping that controls whether or
not it will wrap lines.  By default, the line wrapping property
is set to false (not wrapped).
<p>
<code>java.awt.TextArea</code> has two properties <code>rows</code>
and <code>columns</code> that are used to determine the preferred size.
<code>JTextArea</code> uses these properties to indicate the
preferred size of the viewport when placed inside a <code>JScrollPane</code>
to match the functionality provided by <code>java.awt.TextArea</code>.
<code>JTextArea</code> has a preferred size of what is needed to
display all of the text, so that it functions properly inside of
a <code>JScrollPane</code>.  If the value for <code>rows</code>
or <code>columns</code> is equal to zero,
the preferred size along that axis is used for
the viewport preferred size along the same axis.
<p>
The <code>java.awt.TextArea</code> could be monitored for changes by adding
a <code>TextListener</code> for <code>TextEvent</code>s.
In the <code>JTextComponent</code> based
components, changes are broadcasted from the model via a
<code>DocumentEvent</code> to <code>DocumentListeners</code>.
The <code>DocumentEvent</code> gives
the location of the change and the kind of change if desired.
The code fragment might look something like:
<pre>
   DocumentListener myListener = ??;
   JTextArea myArea = ??;
   myArea.getDocument().addDocumentListener(myListener);
</pre>

<dl>
<dt><b><font size=+1>Newlines</font></b>
<dd>
For a discussion on how newlines are handled, see
<a href=\"text/DefaultEditorKit.html\">DefaultEditorKit</a>.
</dl>

<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer false
description: A multi-line area that displays plain text.

@author  Timothy Prinzing
@see JTextPane
@see JEditorPane
"
      classrelation 4167170 // <generalisation>
	relation 4167170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4167170 // <generalisation>
	  b parent class_ref 371074 // JTextComponent
      end

      classrelation 4167298 // uiClassID (<unidirectional association>)
	relation 4167298 --->
	  a role_name "uiClassID" init_value " \"TextAreaUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4167298 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10761218 "JTextArea"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new TextArea.  A default model is set, the initial string
is null, and rows/columns are set to 0.
"
      end

      operation 10761346 "JTextArea"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new TextArea with the specified text displayed.
A default model is created and rows/columns are set to 0.

@param text the text to be displayed, or null
"
      end

      operation 10761474 "JTextArea"
	public explicit_return_type ""
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty TextArea with the specified number of
rows and columns.  A default model is created, and the initial
string is null.

@param rows the number of rows &gt;= 0
@param columns the number of columns &gt;= 0
@exception IllegalArgumentException if the rows or columns
 arguments are negative.
"
      end

      operation 10761602 "JTextArea"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new TextArea with the specified text and number
of rows and columns.  A default model is created.

@param text the text to be displayed, or null
@param rows the number of rows &gt;= 0
@param columns the number of columns &gt;= 0
@exception IllegalArgumentException if the rows or columns
 arguments are negative.
"
      end

      operation 10761730 "JTextArea"
	public explicit_return_type ""
	nparams 1
	  param inout name "doc" type class_ref 405378 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new JTextArea with the given document model, and defaults
for all of the other arguments (null, 0, 0).

@param doc  the model to use
"
      end

      operation 10761858 "JTextArea"
	public explicit_return_type ""
	nparams 4
	  param inout name "doc" type class_ref 405378 // Document
	  param inout name "text" type class_ref 128130 // String
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new JTextArea with the specified number of rows
and columns, and the given model.  All of the constructors
feed through this constructor.

@param doc the model to use, or create a default one if null
@param text the text to be displayed, null if none
@param rows the number of rows &gt;= 0
@param columns the number of columns &gt;= 0
@exception IllegalArgumentException if the rows or columns
 arguments are negative.
"
      end

      operation 10761986 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class ID for the UI.

@return the ID (\"TextAreaUI\")
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10762114 "createDefaultModel"
	protected return_type class_ref 405378 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the default implementation of the model
to be used at construction if one isn't explicitly
given.  A new instance of PlainDocument is returned.

@return the default document model
"
      end

      operation 10762242 "setTabSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of characters to expand tabs to.
This will be multiplied by the maximum advance for
variable width fonts.  A PropertyChange event (\"tabSize\") is fired
when the tab size changes.

@param size number of characters to expand to
@see #getTabSize
@beaninfo
  preferred: true
      bound: true
description: the number of characters to expand tabs to
"
      end

      operation 10762370 "getTabSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of characters used to expand tabs.  If the document is
null or doesn't have a tab setting, return a default of 8.

@return the number of characters
"
      end

      operation 10762498 "setLineWrap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "wrap" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the line-wrapping policy of the text area.  If set
to true the lines will be wrapped if they are too long
to fit within the allocated width.  If set to false,
the lines will always be unwrapped.  A <code>PropertyChange</code>
event (\"lineWrap\") is fired when the policy is changed.
By default this property is false.

@param wrap indicates if lines should be wrapped
@see #getLineWrap
@beaninfo
  preferred: true
      bound: true
description: should lines be wrapped
"
      end

      operation 10762626 "getLineWrap"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the line-wrapping policy of the text area.  If set
to true the lines will be wrapped if they are too long
to fit within the allocated width.  If set to false,
the lines will always be unwrapped.

@return if lines will be wrapped
"
      end

      operation 10762754 "setWrapStyleWord"
	public explicit_return_type "void"
	nparams 1
	  param inout name "word" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the style of wrapping used if the text area is wrapping
lines.  If set to true the lines will be wrapped at word
boundaries (whitespace) if they are too long
to fit within the allocated width.  If set to false,
the lines will be wrapped at character boundaries.
By default this property is false.

@param word indicates if word boundaries should be used
  for line wrapping
@see #getWrapStyleWord
@beaninfo
  preferred: false
      bound: true
description: should wrapping occur at word boundaries
"
      end

      operation 10762882 "getWrapStyleWord"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the style of wrapping used if the text area is wrapping
lines.  If set to true the lines will be wrapped at word
boundaries (ie whitespace) if they are too long
to fit within the allocated width.  If set to false,
the lines will be wrapped at character boundaries.

@return if the wrap style should be word boundaries
 instead of character boundaries
@see #setWrapStyleWord
"
      end

      operation 10763010 "getLineOfOffset"
	public explicit_return_type "int"
	nparams 1
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 361346 // BadLocationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates an offset into the components text to a
line number.

@param offset the offset &gt;= 0
@return the line number &gt;= 0
@exception BadLocationException thrown if the offset is
  less than zero or greater than the document length.
"
      end

      operation 10763138 "getLineCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the number of lines contained in the area.

@return the number of lines &gt; 0
"
      end

      operation 10763266 "getLineStartOffset"
	public explicit_return_type "int"
	nparams 1
	  param in name "line" explicit_type "int"
	nexceptions 1
	  exception class_ref 361346 // BadLocationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the offset of the start of the given line.

@param line  the line number to translate &gt;= 0
@return the offset &gt;= 0
@exception BadLocationException thrown if the line is
less than zero or greater or equal to the number of
lines contained in the document (as reported by
getLineCount).
"
      end

      operation 10763394 "getLineEndOffset"
	public explicit_return_type "int"
	nparams 1
	  param in name "line" explicit_type "int"
	nexceptions 1
	  exception class_ref 361346 // BadLocationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the offset of the end of the given line.

@param line  the line &gt;= 0
@return the offset &gt;= 0
@exception BadLocationException Thrown if the line is
less than zero or greater or equal to the number of
lines contained in the document (as reported by
getLineCount).
"
      end

      operation 10763522 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- java.awt.TextArea methods ---------------------------------

Inserts the specified text at the specified position.  Does nothing
if the model is null or if the text is null or empty.

@param str the text to insert
@param pos the position at which to insert &gt;= 0
@exception IllegalArgumentException  if pos is an
 invalid position in the model
@see TextComponent#setText
@see #replaceRange
"
      end

      operation 10763650 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the given text to the end of the document.  Does nothing if
the model is null or the string is null or empty.

@param str the text to insert
@see #insert
"
      end

      operation 10763778 "replaceRange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "str" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces text from the indicated start to end position with the
new text specified.  Does nothing if the model is null.  Simply
does a delete if the new string is null or empty.

@param str the text to use as the replacement
@param start the start position &gt;= 0
@param end the end position &gt;= start
@exception IllegalArgumentException  if part of the range is an
 invalid position in the model
@see #insert
"
      end

      operation 10763906 "getRows"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows in the TextArea.

@return the number of rows &gt;= 0
"
      end

      operation 10764034 "setRows"
	public explicit_return_type "void"
	nparams 1
	  param in name "rows" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of rows for this TextArea.  Calls invalidate() after
setting the new value.

@param rows the number of rows &gt;= 0
@exception IllegalArgumentException if rows is less than 0
@see #getRows
@beaninfo
description: the number of rows preferred for display
"
      end

      operation 10764162 "getRowHeight"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines the meaning of the height of a row.  This defaults to
the height of the font.

@return the height &gt;= 1
"
      end

      operation 10764290 "getColumns"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of columns in the TextArea.

@return number of columns &gt;= 0
"
      end

      operation 10764418 "setColumns"
	public explicit_return_type "void"
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of columns for this TextArea.  Does an invalidate()
after setting the new value.

@param columns the number of columns &gt;= 0
@exception IllegalArgumentException if columns is less than 0
@see #getColumns
@beaninfo
description: the number of columns preferred for display
"
      end

      operation 10764546 "getColumnWidth"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets column width.
The meaning of what a column is can be considered a fairly weak
notion for some fonts.  This method is used to define the width
of a column.  By default this is defined to be the width of the
character <em>m</em> for the font used.  This method can be
redefined to be some alternative amount.

@return the column width &gt;= 1
"
      end

      operation 10764674 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Component methods -----------------------------------------

Returns the preferred size of the TextArea.  This is the
maximum of the size needed to display the text and the
size requested for the viewport.

@return the size
"
      end

      operation 10764802 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current font.  This removes cached row height and column
width so the new font will be reflected, and calls revalidate().

@param f the font to use as the current font
"
      end

      operation 10764930 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JTextArea. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this JTextArea.
"
      end

      operation 10765058 "getScrollableTracksViewportWidth"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Scrollable methods ----------------------------------------

Returns true if a viewport should always force the width of this
Scrollable to match the width of the viewport.  This is implemented
to return true if the line wrapping policy is true, and false
if lines are not being wrapped.

@return true if a viewport should force the Scrollables width
to match its own.
"
      end

      operation 10765186 "getPreferredScrollableViewportSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size of the viewport if this component
is embedded in a JScrollPane.  This uses the desired column
and row settings if they have been set, otherwise the superclass
behavior is used.

@return The preferredSize of a JViewport whose view is this Scrollable.
@see JViewport#getPreferredSize
"
      end

      operation 10765314 "getScrollableUnitIncrement"
	public explicit_return_type "int"
	nparams 3
	  param inout name "visibleRect" type class_ref 314114 // Rectangle
	  param in name "orientation" explicit_type "int"
	  param in name "direction" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Components that display logical rows or columns should compute
the scroll increment that will completely expose one new row
or column, depending on the value of orientation.  This is implemented
to use the values returned by the <code>getRowHeight</code> and
<code>getColumnWidth</code> methods.
<p>
Scrolling containers, like JScrollPane, will use this method
each time the user requests a unit scroll.

@param visibleRect the view area visible within the viewport
@param orientation Either SwingConstants.VERTICAL or
  SwingConstants.HORIZONTAL.
@param direction Less than zero to scroll up/left,
  greater than zero for down/right.
@return The \"unit\" increment for scrolling in the specified direction
@exception IllegalArgumentException for an invalid orientation
@see JScrollBar#setUnitIncrement
@see #getRowHeight
@see #getColumnWidth
"
      end

      operation 10765442 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See readObject() and writeObject() in JComponent for more
information about serialization in Swing.
"
      end

      operation 10765570 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JTextArea.
For JTextAreas, the AccessibleContext takes the form of an
AccessibleJTextArea.
A new AccessibleJTextArea instance is created if necessary.

@return an AccessibleJTextArea that serves as the
        AccessibleContext of this JTextArea
"
      end

      class 1293314 "AccessibleJTextArea"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4167426 // <generalisation>
	  relation 4167426 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4167426 // <generalisation>
	    b parent class_ref 428802 // AccessibleJTextComponent
	end

	operation 10765698 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.

@return an instance of AccessibleStateSet describing the states
of the object
@see AccessibleStateSet
"
	end
      end

      attribute 2429570 "rows"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " --- variables -------------------------------------------------
"
      end

      attribute 2429698 "columns"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2429826 "columnWidth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2429954 "rowHeight"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2430082 "wrap"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2430210 "word"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1293442 "JTextPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A text component that can be marked up with attributes that are
represented graphically.
You can find how-to information and examples of using text panes in
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/text.html\">Using Text Components</a>,
a section in <em>The Java Tutorial.</em>

<p>
This component models paragraphs
that are composed of runs of character level attributes.  Each
paragraph may have a logical style attached to it which contains
the default attributes to use if not overridden by attributes set
on the paragraph or character run.  Components and images may
be embedded in the flow of text.

<dl>
<dt><b><font size=+1>Newlines</font></b>
<dd>
For a discussion on how newlines are handled, see
<a href=\"text/DefaultEditorKit.html\">DefaultEditorKit</a>.
</dl>

<p>
<strong>Warning:</strong> Swing is not thread safe. For more
information see <a
href=\"package-summary.html#threading\">Swing's Threading
Policy</a>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@beaninfo
  attribute: isContainer true
description: A text component that can be marked up with attributes that are graphically represented.

@author  Timothy Prinzing
@see javax.swing.text.StyledEditorKit
"
      classrelation 4167554 // <generalisation>
	relation 4167554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4167554 // <generalisation>
	  b parent class_ref 1277186 // JEditorPane
      end

      operation 10765826 "JTextPane"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JTextPane</code>.  A new instance of
<code>StyledEditorKit</code> is
created and set, and the document model set to <code>null</code>.
"
      end

      operation 10765954 "JTextPane"
	public explicit_return_type ""
	nparams 1
	  param inout name "doc" type class_ref 1293570 // StyledDocument
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JTextPane</code>, with a specified document model.
A new instance of <code>javax.swing.text.StyledEditorKit</code>
 is created and set.

@param doc the document model
"
      end

      operation 10766082 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class ID for the UI.

@return the string \"TextPaneUI\"

@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 10766210 "setDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 405378 // Document
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the editor with a text document.  This
must be a <code>StyledDocument</code>.

@param doc  the document to display/edit
@exception IllegalArgumentException  if <code>doc</code> can't
  be narrowed to a <code>StyledDocument</code> which is the
  required type of model for this text component
"
      end

      operation 10766338 "setStyledDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 1293570 // StyledDocument
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the editor with a text document.
The currently registered factory is used to build a view for
the document, which gets displayed by the editor.

@param doc  the document to display/edit
"
      end

      operation 10766466 "getStyledDocument"
	public return_type class_ref 1293570 // StyledDocument
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the model associated with the editor.

@return the model
"
      end

      operation 10766594 "replaceSelection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "content" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Replaces the currently selected content with new content
represented by the given string.  If there is no selection
this amounts to an insert of the given text.  If there
is no replacement text this amounts to a removal of the
current selection.  The replacement text will have the
attributes currently defined for input at the point of
insertion.  If the document is not editable, beep and return.

@param content  the content to replace the selection with
"
      end

      operation 10766722 "replaceSelection"
	private explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "checkEditable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10766850 "insertComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a component into the document as a replacement
for the currently selected content.  If there is no
selection the component is effectively inserted at the
current position of the caret.  This is represented in
the associated document as an attribute of one character
of content.
<p>
The component given is the actual component used by the
JTextPane.  Since components cannot be a child of more than
one container, this method should not be used in situations
where the model is shared by text components.
<p>
The component is placed relative to the text baseline
according to the value returned by
<code>Component.getAlignmentY</code>.  For Swing components
this value can be conveniently set using the method
<code>JComponent.setAlignmentY</code>.  For example, setting
a value of <code>0.75</code> will cause 75 percent of the
component to be above the baseline, and 25 percent of the
component to be below the baseline.

@param c    the component to insert
"
      end

      operation 10766978 "insertIcon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 352642 // Icon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an icon into the document as a replacement
for the currently selected content.  If there is no
selection the icon is effectively inserted at the
current position of the caret.  This is represented in
the associated document as an attribute of one character
of content.

@param g    the icon to insert
@see Icon
"
      end

      operation 10767106 "addStyle"
	public return_type class_ref 411778 // Style
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param inout name "parent" type class_ref 411778 // Style
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new style into the logical style hierarchy.  Style attributes
resolve from bottom up so an attribute specified in a child
will override an attribute specified in the parent.

@param nm   the name of the style (must be unique within the
  collection of named styles).  The name may be <code>null</code>
  if the style is unnamed, but the caller is responsible
  for managing the reference returned as an unnamed style can't
  be fetched by name.  An unnamed style may be useful for things
  like character attribute overrides such as found in a style
  run.
@param parent the parent style.  This may be <code>null</code>
  if unspecified
  attributes need not be resolved in some other style.
@return the new <code>Style</code>
"
      end

      operation 10767234 "removeStyle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a named non-<code>null</code> style previously added to
the document.

@param nm  the name of the style to remove
"
      end

      operation 10767362 "getStyle"
	public return_type class_ref 411778 // Style
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches a named non-<code>null</code> style previously added.

@param nm  the name of the style
@return the <code>Style</code>
"
      end

      operation 10767490 "setLogicalStyle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 411778 // Style
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the logical style to use for the paragraph at the
current caret position.  If attributes aren't explicitly set
for character and paragraph attributes they will resolve
through the logical style assigned to the paragraph, which
in term may resolve through some hierarchy completely
independent of the element hierarchy in the document.

@param s  the logical style to assign to the paragraph,
         or <code>null</code> for no style
"
      end

      operation 10767618 "getLogicalStyle"
	public return_type class_ref 411778 // Style
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the logical style assigned to the paragraph represented
by the current position of the caret, or <code>null</code>.

@return the <code>Style</code>
"
      end

      operation 10767746 "getCharacterAttributes"
	public return_type class_ref 361218 // AttributeSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the character attributes in effect at the
current location of the caret, or <code>null</code>.

@return the attributes, or <code>null</code>
"
      end

      operation 10767874 "setCharacterAttributes"
	public explicit_return_type "void"
	nparams 2
	  param inout name "attr" type class_ref 361218 // AttributeSet
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the given attributes to character
content.  If there is a selection, the attributes
are applied to the selection range.  If there
is no selection, the attributes are applied to
the input attribute set which defines the attributes
for any new text that gets inserted.

@param attr the attributes
@param replace if true, then replace the existing attributes first
"
      end

      operation 10768002 "getParagraphAttributes"
	public return_type class_ref 361218 // AttributeSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the current paragraph attributes in effect
at the location of the caret, or <code>null</code> if none.

@return the attributes
"
      end

      operation 10768130 "setParagraphAttributes"
	public explicit_return_type "void"
	nparams 2
	  param inout name "attr" type class_ref 361218 // AttributeSet
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the given attributes to paragraphs.  If
there is a selection, the attributes are applied
to the paragraphs that intersect the selection.
If there is no selection, the attributes are applied
to the paragraph at the current caret position.

@param attr the non-<code>null</code> attributes
@param replace if true, replace the existing attributes first
"
      end

      operation 10768258 "getInputAttributes"
	public return_type class_ref 409602 // MutableAttributeSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the input attributes for the pane.

@return the attributes
"
      end

      operation 10768386 "getStyledEditorKit"
	protected return_type class_ref 1293698 // StyledEditorKit
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the editor kit.

@return the editor kit
"
      end

      classrelation 4167682 // uiClassID (<unidirectional association>)
	relation 4167682 --->
	  a role_name "uiClassID" init_value " \"TextPaneUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4167682 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10768514 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.

@param s the output stream
"
      end

      operation 10768642 "createDefaultEditorKit"
	protected return_type class_ref 401538 // EditorKit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- JEditorPane ------------------------------------

Creates the <code>EditorKit</code> to use by default.  This
is implemented to return <code>javax.swing.text.StyledEditorKit</code>.

@return the editor kit
"
      end

      operation 10768770 "setEditorKit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "kit" type class_ref 401538 // EditorKit
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the currently installed kit for handling
content.  This is the bound property that
establishes the content type of the editor.

@param kit the desired editor behavior
@exception IllegalArgumentException if kit is not a
         <code>StyledEditorKit</code>
"
      end

      operation 10768898 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JTextPane</code>.
This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.

@return  a string representation of this <code>JTextPane</code>
"
      end
    end

    class 1294594 "KeyboardManager"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The KeyboardManager class is used to help dispatch keyboard actions for the
WHEN_IN_FOCUSED_WINDOW style actions.  Actions with other conditions are handled
directly in JComponent.

Here's a description of the symantics of how keyboard dispatching should work
atleast as I understand it.

KeyEvents are dispatched to the focused component.  The focus manager gets first
crack at processing this event.  If the focus manager doesn't want it, then
the JComponent calls super.processKeyEvent() this allows listeners a chance
to process the event.

If none of the listeners \"consumes\" the event then the keybindings get a shot.
This is where things start to get interesting.  First, KeyStokes defined with the
WHEN_FOCUSED condition get a chance.  If none of these want the event, then the component
walks though it's parents looked for actions of type WHEN_ANCESTOR_OF_FOCUSED_COMPONENT.

If no one has taken it yet, then it winds up here.  We then look for components registered
for WHEN_IN_FOCUSED_WINDOW events and fire to them.  Note that if none of those are found
then we pass the event to the menubars and let them have a crack at it.  They're handled differently.

Lastly, we check if we're looking at an internal frame.  If we are and no one wanted the event
then we move up to the InternalFrame's creator and see if anyone wants the event (and so on and so on).


@see InputMap
"
      classrelation 4172290 // currentManager (<unidirectional association>)
	relation 4172290 --->
	  a role_name "currentManager" init_value " new KeyboardManager()" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4172290 // currentManager (<unidirectional association>)
	  b parent class_ref 1294594 // KeyboardManager
      end

      classrelation 4172418 // containerMap (<unidirectional association>)
	relation 4172418 --->
	  a role_name "containerMap" init_value " new Hashtable<Container, Hashtable>()" package
	    comment "
maps top-level containers to a sub-hashtable full of keystrokes

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Container, Hashtable> ${name}${value};
"
	    classrelation_ref 4172418 // containerMap (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      class 1294722 "ComponentKeyStrokePair"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4172674 // component (<unidirectional association>)
	  relation 4172674 --->
	    a role_name "component" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4172674 // component (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 4172802 // keyStroke (<unidirectional association>)
	  relation 4172802 --->
	    a role_name "keyStroke" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4172802 // keyStroke (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 10779010 "ComponentKeyStrokePair"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "comp" type class_ref 129538 // Object
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10779138 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10779266 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4172546 // componentKeyStrokeMap (<unidirectional association>)
	relation 4172546 --->
	  a role_name "componentKeyStrokeMap" init_value " new Hashtable<ComponentKeyStrokePair, Container>()" package
	    comment "
Maps component/keystroke pairs to a topLevel container
This is mainly used for fast unregister operations

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ComponentKeyStrokePair, Container> ${name}${value};
"
	    classrelation_ref 4172546 // componentKeyStrokeMap (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      operation 10777730 "getCurrentManager"
	class_operation public return_type class_ref 1294594 // KeyboardManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10777858 "setCurrentManager"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "km" type class_ref 1294594 // KeyboardManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10777986 "registerKeyStroke"
	public explicit_return_type "void"
	nparams 2
	  param inout name "k" type class_ref 356610 // KeyStroke
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "register keystrokes here which are for the WHEN_IN_FOCUSED_WINDOW
case.
Other types of keystrokes will be handled by walking the hierarchy
That simplifies some potentially hairy stuff.
"
      end

      operation 10778114 "getTopAncestor"
	class_operation private return_type class_ref 338690 // Container
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the top focusable Window, Applet, or InternalFrame
"
      end

      operation 10778242 "unregisterKeyStroke"
	public explicit_return_type "void"
	nparams 2
	  param inout name "ks" type class_ref 356610 // KeyStroke
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10778370 "fireKeyboardAction"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "pressed" explicit_type "boolean"
	  param inout name "topAncestor" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when the focused component (and none of
its ancestors) want the key event.  This will look up the keystroke
to see if any chidren (or subchildren) of the specified container
want a crack at the event.
If one of them wants it, then it will \"DO-THE-RIGHT-THING\"
"
      end

      operation 10778498 "fireBinding"
	package explicit_return_type "void"
	nparams 4
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "ks" type class_ref 356610 // KeyStroke
	  param inout name "e" type class_ref 346498 // KeyEvent
	  param inout name "pressed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10778626 "registerMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mb" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10778754 "unregisterMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mb" type class_ref 419586 // JMenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10778882 "registerNewTopContainer"
	protected return_type class_ref 137090 // Hashtable
	nparams 1
	  param inout name "topContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1294978 "LegacyGlueFocusTraversalPolicy"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A FocusTraversalPolicy which provides support for legacy applications which
handle focus traversal via JComponent.setNextFocusableComponent or by
installing a custom DefaultFocusManager. If a specific traversal has not
been hard coded, then that traversal is provided either by the custom
DefaultFocusManager, or by a wrapped FocusTraversalPolicy instance.

@author David Mendenhall
"
      classrelation 4173314 // <generalisation>
	relation 4173314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4173314 // <generalisation>
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      classrelation 4173442 // <realization>
	relation 4173442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4173442 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4173570 // delegatePolicy (<unidirectional association>)
	relation 4173570 --->
	  a role_name "delegatePolicy" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4173570 // delegatePolicy (<unidirectional association>)
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      classrelation 4173698 // delegateManager (<unidirectional association>)
	relation 4173698 --->
	  a role_name "delegateManager" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4173698 // delegateManager (<unidirectional association>)
	  b parent class_ref 1267586 // DefaultFocusManager
      end

      classrelation 4173826 // forwardMap (<unidirectional association>)
	relation 4173826 --->
	  a role_name "forwardMap" init_value " new HashMap<Component, Component>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component, Component> ${name}${value};
"
	    classrelation_ref 4173826 // forwardMap (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 4173954 // backwardMap (<unidirectional association>)
	relation 4173954 --->
	  a role_name "backwardMap" init_value " new HashMap<Component, Component>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component, Component> ${name}${value};
"
	    classrelation_ref 4173954 // backwardMap (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      operation 10781442 "LegacyGlueFocusTraversalPolicy"
	package explicit_return_type ""
	nparams 1
	  param inout name "delegatePolicy" type class_ref 349954 // FocusTraversalPolicy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10781570 "LegacyGlueFocusTraversalPolicy"
	package explicit_return_type ""
	nparams 1
	  param inout name "delegateManager" type class_ref 1267586 // DefaultFocusManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10781698 "setNextFocusableComponent"
	package explicit_return_type "void"
	nparams 2
	  param inout name "left" type class_ref 338818 // Component
	  param inout name "right" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10781826 "unsetNextFocusableComponent"
	package explicit_return_type "void"
	nparams 2
	  param inout name "left" type class_ref 338818 // Component
	  param inout name "right" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10781954 "getComponentAfter"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10782082 "getComponentBefore"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10782210 "getFirstComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10782338 "getLastComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10782466 "getDefaultComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10782594 "accept"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10782722 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10782850 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1295106 "MultiUIDefaults"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
@author Hans Muller
"
      classrelation 4174594 // <generalisation>
	relation 4174594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4174594 // <generalisation>
	  b parent class_ref 363650 // UIDefaults
      end

      classrelation 4174722 // tables (<unidirectional association>)
	relation 4174722 --->
	  a role_name "tables" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4174722 // tables (<unidirectional association>)
	  b parent class_ref 363650 // UIDefaults
      end

      operation 10784898 "MultiUIDefaults"
	public explicit_return_type ""
	nparams 1
	  param inout name "defaults" type class_ref 363650 // UIDefaults
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10785026 "MultiUIDefaults"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10785154 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10785282 "get"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10785410 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10785538 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10785666 "keys"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10785794 "elements"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10785922 "entrySet"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<Object, Object>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10786050 "getUIError"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1295234 "MultiUIDefaultsEnumerator"
	visibility private 
	nactuals 1
	actual class class_ref 185986 // Enumeration
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4174850 // <realization>
	  relation 4174850 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4174850 // <realization>
	    b parent class_ref 185986 // Enumeration
	end

	class 1295362 "Type"
	  visibility public stereotype "enum"
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  attribute 2433922 "KEYS"
	    public type class_ref 1295362 // Type
	    cpp_decl ""
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  attribute 2434050 "ELEMENTS"
	    public type class_ref 1295362 // Type
	    cpp_decl ""
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end
	end

	classrelation 4174978 // iterator (<unidirectional association>)
	  relation 4174978 --->
	    a role_name "iterator" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Entry<Object, Object>> ${name}${value};
"
	      classrelation_ref 4174978 // iterator (<unidirectional association>)
	    b parent class_ref 132994 // Iterator
	end

	classrelation 4175106 // type (<unidirectional association>)
	  relation 4175106 --->
	    a role_name "type" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4175106 // type (<unidirectional association>)
	    b parent class_ref 1295362 // Type
	end

	operation 10786178 "MultiUIDefaultsEnumerator"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "type" type class_ref 1295362 // Type
	    param inout name "entries" type class_ref 192258 // Set
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<Entry<Object, Object>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10786306 "hasMoreElements"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10786434 "nextElement"
	  public return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10786562 "remove"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10786690 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 10786818 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1295490 "OverlayLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A layout manager to arrange components over the top
of each other.  The requested size of the container
will be the largest requested size of the children,
taking alignment needs into consideration.

The alignment is based upon what is needed to properly
fit the children in the allocation area.  The children
will be placed such that their alignment points are all
on top of each other.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author   Timothy Prinzing
"
      classrelation 4175234 // <realization>
	relation 4175234 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4175234 // <realization>
	  b parent class_ref 406402 // LayoutManager2
      end

      classrelation 4175362 // <realization>
	relation 4175362 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4175362 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 10786946 "OverlayLayout"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"target\"})
"
	
	
	
	comment "Constructs a layout manager that performs overlay
arrangement of the children.  The layout manager
created is dedicated to the given container.

@param target  the container to do layout against
"
      end

      operation 10787074 "getTarget"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the container that uses this layout manager.

@return the container that uses this layout manager

@since 1.6
"
      end

      operation 10787202 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates a child has changed its layout related information,
which causes any cached calculations to be flushed.

@param target the container
"
      end

      operation 10787330 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout. Used by
this class to know when to invalidate layout.

@param name the name of the component
@param comp the the component to be added
"
      end

      operation 10787458 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the layout. Used by
this class to know when to invalidate layout.

@param comp the component to remove
"
      end

      operation 10787586 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout, using the specified
constraint object. Used by this class to know when to invalidate
layout.

@param comp the component to be added
@param constraints  where/how the component is added to the layout.
"
      end

      operation 10787714 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred dimensions for this layout given the components
in the specified target container.  Recomputes the layout if it
has been invalidated.  Factors in the current inset setting returned
by getInsets().

@param target the component which needs to be laid out
@return a Dimension object containing the preferred dimensions
@see #minimumLayoutSize
"
      end

      operation 10787842 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum dimensions needed to lay out the components
contained in the specified target container.  Recomputes the layout
if it has been invalidated, and factors in the current inset setting.

@param target the component which needs to be laid out
@return a Dimension object containing the minimum dimensions
@see #preferredLayoutSize
"
      end

      operation 10787970 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum dimensions needed to lay out the components
contained in the specified target container.  Recomputes the
layout if it has been invalidated, and factors in the inset setting
returned by <code>getInset</code>.

@param target the component that needs to be laid out
@return a <code>Dimension</code> object containing the maximum
        dimensions
@see #preferredLayoutSize
"
      end

      operation 10788098 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis for the container.

@param target the container
@return the alignment &gt;= 0.0f &amp;&amp; &lt;= 1.0f
"
      end

      operation 10788226 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis for the container.

@param target the container
@return the alignment &gt;= 0.0f &amp;&amp; &lt;= 1.0f
"
      end

      operation 10788354 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the AWT when the specified container needs to be laid out.

@param target  the container to lay out

@exception AWTError  if the target isn't the container specified to the
                     constructor
"
      end

      operation 10788482 "checkContainer"
	package explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10788610 "checkRequests"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 4175490 // target (<unidirectional association>)
	relation 4175490 --->
	  a role_name "target" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4175490 // target (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 4175618 // xChildren (<unidirectional association>)
	relation 4175618 --->
	  a role_name "xChildren" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4175618 // xChildren (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end

      classrelation 4175746 // yChildren (<unidirectional association>)
	relation 4175746 --->
	  a role_name "yChildren" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4175746 // yChildren (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end

      classrelation 4175874 // xTotal (<unidirectional association>)
	relation 4175874 --->
	  a role_name "xTotal" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4175874 // xTotal (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end

      classrelation 4176002 // yTotal (<unidirectional association>)
	relation 4176002 --->
	  a role_name "yTotal" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4176002 // yTotal (<unidirectional association>)
	  b parent class_ref 431874 // SizeRequirements
      end
    end

    class 1296002 "PopupFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>PopupFactory</code>, as the name implies, is used to obtain
instances of <code>Popup</code>s. <code>Popup</code>s are used to
display a <code>Component</code> above all other <code>Component</code>s
in a particular containment hierarchy. The general contract is that
once you have obtained a <code>Popup</code> from a
<code>PopupFactory</code>, you must invoke <code>hide</code> on the
<code>Popup</code>. The typical usage is:
<pre>
  PopupFactory factory = PopupFactory.getSharedInstance();
  Popup popup = factory.getPopup(owner, contents, x, y);
  popup.show();
  ...
  popup.hide();
</pre>

@see Popup

@since 1.4
"
      classrelation 4176642 // SharedInstanceKey (<unidirectional association>)
	relation 4176642 --->
	  a role_name "SharedInstanceKey" init_value "
        new StringBuffer(\"PopupFactory.SharedInstanceKey\")" class_relation const_relation private
	    comment "
The shared instanceof <code>PopupFactory</code> is per
<code>AppContext</code>. This is the key used in the
<code>AppContext</code> to locate the <code>PopupFactory</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4176642 // SharedInstanceKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2434178 "MAX_CACHE_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Max number of items to store in any one particular cache.

"
      end

      attribute 2434306 "LIGHT_WEIGHT_POPUP"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key used to indicate a light weight popup should be used.

"
      end

      attribute 2434434 "MEDIUM_WEIGHT_POPUP"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key used to indicate a medium weight Popup should be used.

"
      end

      attribute 2434562 "HEAVY_WEIGHT_POPUP"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Key used to indicate a heavy weight Popup should be used.

"
      end

      attribute 2434690 "popupType"
	private explicit_type "int"
	init_value " LIGHT_WEIGHT_POPUP"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default type of Popup to create.

"
      end

      operation 10790402 "setSharedInstance"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 1296002 // PopupFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>PopupFactory</code> that will be used to obtain
<code>Popup</code>s.
This will throw an <code>IllegalArgumentException</code> if
<code>factory</code> is null.

@param factory Shared PopupFactory
@exception IllegalArgumentException if <code>factory</code> is null
@see #getPopup
"
      end

      operation 10790530 "getSharedInstance"
	class_operation public return_type class_ref 1296002 // PopupFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the shared <code>PopupFactory</code> which can be used
to obtain <code>Popup</code>s.

@return Shared PopupFactory
"
      end

      operation 10790658 "setPopupType"
	package explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint as to the type of <code>Popup</code> that should
be created.
"
      end

      operation 10790786 "getPopupType"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred type of Popup to create.
"
      end

      operation 10790914 "getPopup"
	public return_type class_ref 393218 // Popup
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Popup</code> for the Component <code>owner</code>
containing the Component <code>contents</code>. <code>owner</code>
is used to determine which <code>Window</code> the new
<code>Popup</code> will parent the <code>Component</code> the
<code>Popup</code> creates to. A null <code>owner</code> implies there
is no valid parent. <code>x</code> and
<code>y</code> specify the preferred initial location to place
the <code>Popup</code> at. Based on screen size, or other paramaters,
the <code>Popup</code> may not display at <code>x</code> and
<code>y</code>.

@param owner    Component mouse coordinates are relative to, may be null
@param contents Contents of the Popup
@param x        Initial x screen coordinate
@param y        Initial y screen coordinate
@exception IllegalArgumentException if contents is null
@return Popup containing Contents
"
      end

      operation 10791042 "getPopupType"
	private explicit_return_type "int"
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "ownerX" explicit_type "int"
	  param in name "ownerY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the popup type to use for the specified parameters.
"
      end

      operation 10791170 "getPopup"
	private return_type class_ref 393218 // Popup
	nparams 5
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "ownerX" explicit_type "int"
	  param in name "ownerY" explicit_type "int"
	  param in name "popupType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the appropriate <code>Popup</code> based on
<code>popupType</code>.
"
      end

      operation 10791298 "getHeadlessPopup"
	private return_type class_ref 393218 // Popup
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "ownerX" explicit_type "int"
	  param in name "ownerY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a headless popup
"
      end

      operation 10791426 "getLightWeightPopup"
	private return_type class_ref 393218 // Popup
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "ownerX" explicit_type "int"
	  param in name "ownerY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a light weight popup.
"
      end

      operation 10791554 "getMediumWeightPopup"
	private return_type class_ref 393218 // Popup
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "ownerX" explicit_type "int"
	  param in name "ownerY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a medium weight popup.
"
      end

      operation 10791682 "getHeavyWeightPopup"
	private return_type class_ref 393218 // Popup
	nparams 4
	  param inout name "owner" type class_ref 338818 // Component
	  param inout name "contents" type class_ref 338818 // Component
	  param in name "ownerX" explicit_type "int"
	  param in name "ownerY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a heavy weight popup.
"
      end

      operation 10791810 "invokerInHeavyWeightPopup"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "i" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the Component <code>i</code> inside a heavy weight
<code>Popup</code>.
"
      end

      class 1296130 "HeavyWeightPopup"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4176770 // <generalisation>
	  relation 4176770 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4176770 // <generalisation>
	    b parent class_ref 393218 // Popup
	end

	classrelation 4176898 // heavyWeightPopupCacheKey (<unidirectional association>)
	  relation 4176898 --->
	    a role_name "heavyWeightPopupCacheKey" init_value "
                 new StringBuffer(\"PopupFactory.heavyWeightPopupCache\")" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4176898 // heavyWeightPopupCacheKey (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	attribute 2434818 "isCacheEnabled"
	  volatile private explicit_type "boolean"
	  init_value " true"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10791938 "getHeavyWeightPopup"
	  class_operation package return_type class_ref 393218 // Popup
	  nparams 4
	    param inout name "owner" type class_ref 338818 // Component
	    param inout name "contents" type class_ref 338818 // Component
	    param in name "ownerX" explicit_type "int"
	    param in name "ownerY" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns either a new or recycled <code>Popup</code> containing
the specified children.
"
	end

	operation 10792066 "getRecycledHeavyWeightPopup"
	  class_operation private return_type class_ref 1296130 // HeavyWeightPopup
	  nparams 1
	    param inout name "w" type class_ref 347394 // Window
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a previously disposed heavy weight <code>Popup</code>
associated with <code>window</code>. This will return null if
there is no <code>HeavyWeightPopup</code> associated with
<code>window</code>.
"
	end

	operation 10792194 "getHeavyWeightPopupCache"
	  class_operation private return_type class_ref 130178 // Map
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Window, List<HeavyWeightPopup>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the cache to use for heavy weight popups. Maps from
<code>Window</code> to a <code>List</code> of
<code>HeavyWeightPopup</code>s.
"
	end

	operation 10792322 "recycleHeavyWeightPopup"
	  class_operation private explicit_return_type "void"
	  nparams 1
	    param inout name "popup" type class_ref 1296130 // HeavyWeightPopup
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles the passed in <code>HeavyWeightPopup</code>.
"
	end

	operation 10792450 "setCacheEnabled"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "enable" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Enables or disables cache for current object.
"
	end

	operation 10792578 "hide"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Popup methods
"
	end

	operation 10792706 "dispose"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "As we recycle the <code>Window</code>, we don't want to dispose it,
thus this method does nothing, instead use <code>_dipose</code>
which will handle the disposing.
"
	end

	operation 10792834 "_dispose"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1296258 "ContainerPopup"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4177026 // <generalisation>
	  relation 4177026 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4177026 // <generalisation>
	    b parent class_ref 393218 // Popup
	end

	classrelation 4177154 // owner (<unidirectional association>)
	  relation 4177154 --->
	    a role_name "owner" package
	      comment " Component we are to be added to. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4177154 // owner (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	attribute 2434946 "x"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Desired x location. 
"
	end

	attribute 2435074 "y"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Desired y location. 
"
	end

	operation 10792962 "hide"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10793090 "pack"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10793218 "reset"
	  package explicit_return_type "void"
	  nparams 4
	    param inout name "owner" type class_ref 338818 // Component
	    param inout name "contents" type class_ref 338818 // Component
	    param in name "ownerX" explicit_type "int"
	    param in name "ownerY" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10793346 "overlappedByOwnedWindow"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10793474 "fitsOnScreen"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if popup can fit the screen and the owner's top parent.
It determines can popup be lightweight or mediumweight.
"
	end

	operation 10793602 "getContainerPopupArea"
	  package return_type class_ref 314114 // Rectangle
	  nparams 1
	    param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1296386 "HeadlessPopup"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4177282 // <generalisation>
	  relation 4177282 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4177282 // <generalisation>
	    b parent class_ref 1296258 // ContainerPopup
	end

	operation 10793730 "getHeadlessPopup"
	  class_operation package return_type class_ref 393218 // Popup
	  nparams 4
	    param inout name "owner" type class_ref 338818 // Component
	    param inout name "contents" type class_ref 338818 // Component
	    param in name "ownerX" explicit_type "int"
	    param in name "ownerY" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10793858 "createComponent"
	  package return_type class_ref 338818 // Component
	  nparams 1
	    param inout name "owner" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10793986 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10794114 "hide"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1296514 "LightWeightPopup"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4177410 // <generalisation>
	  relation 4177410 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4177410 // <generalisation>
	    b parent class_ref 1296258 // ContainerPopup
	end

	classrelation 4177538 // lightWeightPopupCacheKey (<unidirectional association>)
	  relation 4177538 --->
	    a role_name "lightWeightPopupCacheKey" init_value "
                         new StringBuffer(\"PopupFactory.lightPopupCache\")" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4177538 // lightWeightPopupCacheKey (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 10794242 "getLightWeightPopup"
	  class_operation package return_type class_ref 393218 // Popup
	  nparams 4
	    param inout name "owner" type class_ref 338818 // Component
	    param inout name "contents" type class_ref 338818 // Component
	    param in name "ownerX" explicit_type "int"
	    param in name "ownerY" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a light weight <code>Popup</code> implementation. If
the <code>Popup</code> needs more space that in available in
<code>owner</code>, this will return null.
"
	end

	operation 10794370 "getLightWeightPopupCache"
	  class_operation private return_type class_ref 861186 // List
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<LightWeightPopup> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the cache to use for heavy weight popups.
"
	end

	operation 10794498 "recycleLightWeightPopup"
	  class_operation private explicit_return_type "void"
	  nparams 1
	    param inout name "popup" type class_ref 1296514 // LightWeightPopup
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles the LightWeightPopup <code>popup</code>.
"
	end

	operation 10794626 "getRecycledLightWeightPopup"
	  class_operation private return_type class_ref 1296514 // LightWeightPopup
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a previously used <code>LightWeightPopup</code>, or null
if none of the popups have been recycled.
"
	end

	operation 10794754 "hide"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Popup methods
"
	end

	operation 10794882 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10795010 "createComponent"
	  package return_type class_ref 338818 // Component
	  nparams 1
	    param inout name "owner" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10795138 "reset"
	  package explicit_return_type "void"
	  nparams 4
	    param inout name "owner" type class_ref 338818 // Component
	    param inout name "contents" type class_ref 338818 // Component
	    param in name "ownerX" explicit_type "int"
	    param in name "ownerY" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Local methods


Resets the <code>Popup</code> to an initial state.
"
	end
      end

      class 1296642 "MediumWeightPopup"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4177666 // <generalisation>
	  relation 4177666 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4177666 // <generalisation>
	    b parent class_ref 1296258 // ContainerPopup
	end

	classrelation 4177794 // mediumWeightPopupCacheKey (<unidirectional association>)
	  relation 4177794 --->
	    a role_name "mediumWeightPopupCacheKey" init_value "
                             new StringBuffer(\"PopupFactory.mediumPopupCache\")" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4177794 // mediumWeightPopupCacheKey (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 4177922 // rootPane (<unidirectional association>)
	  relation 4177922 --->
	    a role_name "rootPane" private
	      comment " Child of the panel. The contents are added to this. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4177922 // rootPane (<unidirectional association>)
	    b parent class_ref 434050 // JRootPane
	end

	operation 10795266 "getMediumWeightPopup"
	  class_operation package return_type class_ref 393218 // Popup
	  nparams 4
	    param inout name "owner" type class_ref 338818 // Component
	    param inout name "contents" type class_ref 338818 // Component
	    param in name "ownerX" explicit_type "int"
	    param in name "ownerY" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a medium weight <code>Popup</code> implementation. If
the <code>Popup</code> needs more space that in available in
<code>owner</code>, this will return null.
"
	end

	operation 10795394 "getMediumWeightPopupCache"
	  class_operation private return_type class_ref 861186 // List
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<MediumWeightPopup> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the cache to use for medium weight popups.
"
	end

	operation 10795522 "recycleMediumWeightPopup"
	  class_operation private explicit_return_type "void"
	  nparams 1
	    param inout name "popup" type class_ref 1296642 // MediumWeightPopup
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycles the MediumWeightPopup <code>popup</code>.
"
	end

	operation 10795650 "getRecycledMediumWeightPopup"
	  class_operation private return_type class_ref 1296642 // MediumWeightPopup
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a previously used <code>MediumWeightPopup</code>, or null
if none of the popups have been recycled.
"
	end

	operation 10795778 "hide"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Popup
"
	end

	operation 10795906 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10796034 "createComponent"
	  package return_type class_ref 338818 // Component
	  nparams 1
	    param inout name "owner" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10796162 "reset"
	  package explicit_return_type "void"
	  nparams 4
	    param inout name "owner" type class_ref 338818 // Component
	    param inout name "contents" type class_ref 338818 // Component
	    param in name "ownerX" explicit_type "int"
	    param in name "ownerY" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets the <code>Popup</code> to an initial state.
"
	end

	class 1296770 "MediumWeightComponent"
	  visibility private 
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4178050 // <generalisation>
	    relation 4178050 ---|>
	      a public
		java "${type}"
		classrelation_ref 4178050 // <generalisation>
	      b parent class_ref 855042 // Panel
	  end

	  classrelation 4178178 // <realization>
	    relation 4178178 -_-|>
	      a public
		java "${type}"
		classrelation_ref 4178178 // <realization>
	      b parent class_ref 1296898 // SwingHeavyWeight
	  end

	  operation 10796290 "MediumWeightComponent"
	    package explicit_return_type ""
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end
    end

    class 1296898 "SwingHeavyWeight"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface used to tag heavy weight components that we want processed
by Swing's RepaintManager.

@author Scott Violet
"
    end

    class 1297026 "ProgressMonitor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A class to monitor the progress of some operation. If it looks
like the operation will take a while, a progress dialog will be popped up.
When the ProgressMonitor is created it is given a numeric range and a
descriptive string. As the operation progresses, call the setProgress method
to indicate how far along the [min,max] range the operation is.
Initially, there is no ProgressDialog. After the first millisToDecideToPopup
milliseconds (default 500) the progress monitor will predict how long
the operation will take.  If it is longer than millisToPopup (default 2000,
2 seconds) a ProgressDialog will be popped up.
<p>
From time to time, when the Dialog box is visible, the progress bar will
be updated when setProgress is called.  setProgress won't always update
the progress bar, it will only be done if the amount of progress is
visibly significant.

<p>

For further documentation and examples see
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html\">How to Monitor Progress</a>,
a section in <em>The Java Tutorial.</em>

@see ProgressMonitorInputStream
@author James Gosling
@author Lynn Monsanto (accessibility)
"
      classrelation 4178306 // <realization>
	relation 4178306 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4178306 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4178434 // root (<unidirectional association>)
	relation 4178434 --->
	  a role_name "root" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4178434 // root (<unidirectional association>)
	  b parent class_ref 1297026 // ProgressMonitor
      end

      classrelation 4178562 // dialog (<unidirectional association>)
	relation 4178562 --->
	  a role_name "dialog" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4178562 // dialog (<unidirectional association>)
	  b parent class_ref 1275650 // JDialog
      end

      classrelation 4178690 // pane (<unidirectional association>)
	relation 4178690 --->
	  a role_name "pane" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4178690 // pane (<unidirectional association>)
	  b parent class_ref 426626 // JOptionPane
      end

      classrelation 4178818 // myBar (<unidirectional association>)
	relation 4178818 --->
	  a role_name "myBar" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4178818 // myBar (<unidirectional association>)
	  b parent class_ref 434690 // JProgressBar
      end

      classrelation 4178946 // noteLabel (<unidirectional association>)
	relation 4178946 --->
	  a role_name "noteLabel" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4178946 // noteLabel (<unidirectional association>)
	  b parent class_ref 359810 // JLabel
      end

      classrelation 4179074 // parentComponent (<unidirectional association>)
	relation 4179074 --->
	  a role_name "parentComponent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4179074 // parentComponent (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4179202 // note (<unidirectional association>)
	relation 4179202 --->
	  a role_name "note" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4179202 // note (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4179330 // cancelOption (<unidirectional association>)
	relation 4179330 --->
	  a role_name "cancelOption" multiplicity "[]" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4179330 // cancelOption (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4179458 // message (<unidirectional association>)
	relation 4179458 --->
	  a role_name "message" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4179458 // message (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2435202 "T0"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2435330 "millisToDecideToPopup"
	private explicit_type "int"
	init_value " 500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2435458 "millisToPopup"
	private explicit_type "int"
	init_value " 2000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2435586 "min"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2435714 "max"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10796418 "ProgressMonitor"
	public explicit_return_type ""
	nparams 5
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "note" type class_ref 128130 // String
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a graphic object that shows progress, typically by filling
in a rectangular bar as the process nears completion.

@param parentComponent the parent component for the dialog box
@param message a descriptive message that will be shown
       to the user to indicate what operation is being monitored.
       This does not change as the operation progresses.
       See the message parameters to methods in
       {@link JOptionPane#message}
       for the range of values.
@param note a short note describing the state of the
       operation.  As the operation progresses, you can call
       setNote to change the note displayed.  This is used,
       for example, in operations that iterate through a
       list of files to show the name of the file being processes.
       If note is initially null, there will be no note line
       in the dialog box and setNote will be ineffective
@param min the lower bound of the range
@param max the upper bound of the range
@see JDialog
@see JOptionPane
"
      end

      operation 10796546 "ProgressMonitor"
	private explicit_return_type ""
	nparams 6
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "note" type class_ref 128130 // String
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	  param inout name "group" type class_ref 1297026 // ProgressMonitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1297154 "ProgressOptionPane"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4179586 // <generalisation>
	  relation 4179586 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4179586 // <generalisation>
	    b parent class_ref 426626 // JOptionPane
	end

	operation 10796674 "ProgressOptionPane"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "messageList" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10796802 "getMaxCharactersPerLineCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10796930 "createDialog"
	  public return_type class_ref 1275650 // JDialog
	  nparams 2
	    param inout name "parentComponent" type class_ref 338818 // Component
	    param inout name "title" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Equivalent to JOptionPane.createDialog,
 but create a modeless dialog.
 This is necessary because the Solaris implementation doesn't
 support Dialog.setModal yet."
	end

	operation 10797058 "getAccessibleContext"
	  public return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "///////////////
 Accessibility support for ProgressOptionPane
//////////////

Gets the AccessibleContext for the ProgressOptionPane

@return the AccessibleContext for the ProgressOptionPane
@since 1.5
"
	end

	operation 10797186 "getAccessibleJOptionPane"
	  private return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AccessibleJOptionPane
"
	end
      end

      operation 10797314 "setProgress"
	public explicit_return_type "void"
	nparams 1
	  param in name "nv" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicate the progress of the operation being monitored.
If the specified value is &gt;= the maximum, the progress
monitor is closed.
@param nv an int specifying the current value, between the
       maximum and minimum specified for this component
@see #setMinimum
@see #setMaximum
@see #close
"
      end

      operation 10797442 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicate that the operation is complete.  This happens automatically
when the value set by setProgress is &gt;= max, but it may be called
earlier if the operation ends early.
"
      end

      operation 10797570 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum value -- the lower end of the progress value.

@return an int representing the minimum value
@see #setMinimum
"
      end

      operation 10797698 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "m" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the minimum value.

@param m  an int specifying the minimum value
@see #getMinimum
"
      end

      operation 10797826 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum value -- the higher end of the progress value.

@return an int representing the maximum value
@see #setMaximum
"
      end

      operation 10797954 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "m" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the maximum value.

@param m  an int specifying the maximum value
@see #getMaximum
"
      end

      operation 10798082 "isCanceled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the user hits the Cancel button in the progress dialog.
"
      end

      operation 10798210 "setMillisToDecideToPopup"
	public explicit_return_type "void"
	nparams 1
	  param in name "millisToDecideToPopup" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the amount of time to wait before deciding whether or
not to popup a progress monitor.

@param millisToDecideToPopup  an int specifying the time to wait,
       in milliseconds
@see #getMillisToDecideToPopup
"
      end

      operation 10798338 "getMillisToDecideToPopup"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of time this object waits before deciding whether
or not to popup a progress monitor.

@see #setMillisToDecideToPopup
"
      end

      operation 10798466 "setMillisToPopup"
	public explicit_return_type "void"
	nparams 1
	  param in name "millisToPopup" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the amount of time it will take for the popup to appear.
(If the predicted time remaining is less than this time, the popup
won't be displayed.)

@param millisToPopup  an int specifying the time in milliseconds
@see #getMillisToPopup
"
      end

      operation 10798594 "getMillisToPopup"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of time it will take for the popup to appear.

@see #setMillisToPopup
"
      end

      operation 10798722 "setNote"
	public explicit_return_type "void"
	nparams 1
	  param inout name "note" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the additional note that is displayed along with the
progress message. Used, for example, to show which file the
is currently being copied during a multiple-file copy.

@param note  a String specifying the note to display
@see #getNote
"
      end

      operation 10798850 "getNote"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the additional note that is displayed along with the
progress message.

@return a String specifying the note to display
@see #setNote
"
      end

      classrelation 4179714 // accessibleContext (<unidirectional association>)
	relation 4179714 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "///////////////
 Accessibility support
//////////////

The <code>AccessibleContext</code> for the <code>ProgressMonitor</code>
@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4179714 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      classrelation 4179842 // accessibleJOptionPane (<unidirectional association>)
	relation 4179842 --->
	  a role_name "accessibleJOptionPane" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4179842 // accessibleJOptionPane (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 10798978 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>AccessibleContext</code> for the
<code>ProgressMonitor</code>

@return the <code>AccessibleContext</code> for the
<code>ProgressMonitor</code>
@since 1.5
"
      end

      class 1297282 "AccessibleProgressMonitor"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4179970 // <generalisation>
	  relation 4179970 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4179970 // <generalisation>
	    b parent class_ref 347522 // AccessibleContext
	end

	classrelation 4180098 // <realization>
	  relation 4180098 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4180098 // <realization>
	    b parent class_ref 348802 // AccessibleText
	end

	classrelation 4180226 // <realization>
	  relation 4180226 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4180226 // <realization>
	    b parent class_ref 359426 // ChangeListener
	end

	classrelation 4180354 // <realization>
	  relation 4180354 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4180354 // <realization>
	    b parent class_ref 347266 // PropertyChangeListener
	end

	classrelation 4180482 // oldModelValue (<unidirectional association>)
	  relation 4180482 --->
	    a role_name "oldModelValue" private
	      comment "
The accessibility hierarchy for ProgressMonitor is a flattened
version of the ProgressOptionPane component hierarchy.

The ProgressOptionPane component hierarchy is:
  JDialog
    ProgressOptionPane
      JPanel
        JPanel
          JLabel
          JLabel
          JProgressBar

The AccessibleProgessMonitor accessibility hierarchy is:
  AccessibleJDialog
    AccessibleProgressMonitor
      AccessibleJLabel
      AccessibleJLabel
      AccessibleJProgressBar

The abstraction presented to assitive technologies by
the AccessibleProgressMonitor is that a dialog contains a
progress monitor with three children: a message, a note
label and a progress bar.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4180482 // oldModelValue (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 10799106 "AccessibleProgressMonitor"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "AccessibleProgressMonitor constructor
"
	end

	operation 10799234 "optionPaneCreated"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Initializes the AccessibleContext now that the ProgressOptionPane
has been created. Because the ProgressMonitor is not a Component
implementing the Accessible interface, an AccessibleContext
must be synthesized from the ProgressOptionPane and its children.

For other AWT and Swing classes, the inner class that implements
accessibility for the class extends the inner class that implements
implements accessibility for the super class. AccessibleProgressMonitor
cannot extend AccessibleJOptionPane and must therefore delegate calls
to the AccessibleJOptionPane.
"
	end

	operation 10799362 "stateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 359554 // ChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoked when the target of the listener has changed its state.

@param e  a <code>ChangeEvent</code> object. Must not be null.
@throws NullPointerException if the parameter is null.
"
	end

	operation 10799490 "propertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method gets called when a bound property is changed.

@param e A <code>PropertyChangeEvent</code> object describing
the event source and the property that has changed. Must not be null.
@throws NullPointerException if the parameter is null.
"
	end

	operation 10799618 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== Begin AccessileContext ===== 

Gets the accessibleName property of this object.  The accessibleName
property of an object is a localized String that designates the purpose
of the object.  For example, the accessibleName property of a label
or button might be the text of the label or button itself.  In the
case of an object that doesn't display its name, the accessibleName
should still be set.  For example, in the case of a text field used
to enter the name of a city, the accessibleName for the en_US locale
could be 'city.'

@return the localized name of the object; null if this
object does not have a name

@see #setAccessibleName
"
	end

	operation 10799746 "getAccessibleDescription"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the accessibleDescription property of this object.  The
accessibleDescription property of this object is a short localized
phrase describing the purpose of the object.  For example, in the
case of a 'Cancel' button, the accessibleDescription could be
'Ignore changes and close dialog box.'

@return the localized description of the object; null if
this object does not have a description

@see #setAccessibleDescription
"
	end

	operation 10799874 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.  The role of the object is the generic
purpose or use of the class of this object.  For example, the role
of a push button is AccessibleRole.PUSH_BUTTON.  The roles in
AccessibleRole are provided so component developers can pick from
a set of predefined roles.  This enables assistive technologies to
provide a consistent interface to various tweaked subclasses of
components (e.g., use AccessibleRole.PUSH_BUTTON for all components
that act like a push button) as well as distinguish between subclasses
that behave differently (e.g., AccessibleRole.CHECK_BOX for check boxes
and AccessibleRole.RADIO_BUTTON for radio buttons).
<p>Note that the AccessibleRole class is also extensible, so
custom component developers can define their own AccessibleRole's
if the set of predefined roles is inadequate.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole
"
	end

	operation 10800002 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.  The AccessibleStateSet of an object
is composed of a set of unique AccessibleStates.  A change in the
AccessibleStateSet of an object will cause a PropertyChangeEvent to
be fired for the ACCESSIBLE_STATE_PROPERTY property.

@return an instance of AccessibleStateSet containing the
current state set of the object
@see AccessibleStateSet
@see AccessibleState
@see #addPropertyChangeListener
"
	end

	operation 10800130 "getAccessibleParent"
	  public return_type class_ref 347778 // Accessible
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the Accessible parent of this object.

@return the Accessible parent of this object; null if this
object does not have an Accessible parent
"
	end

	operation 10800258 "getParentAccessibleContext"
	  private return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the parent AccessibleContext
"
	end

	operation 10800386 "getAccessibleIndexInParent"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the 0-based index of this object in its accessible parent.

@return the 0-based index of this object in its parent; -1 if this
object does not have an accessible parent.

@see #getAccessibleParent
@see #getAccessibleChildrenCount
@see #getAccessibleChild
"
	end

	operation 10800514 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children of the object.

@return the number of accessible children of the object.
"
	end

	operation 10800642 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the specified Accessible child of the object.  The Accessible
children of an Accessible object are zero-based, so the first child
of an Accessible child is at index 0, the second child is at index 1,
and so on.

@param i zero-based index of child
@return the Accessible child of the object
@see #getAccessibleChildrenCount
"
	end

	operation 10800770 "getPanelAccessibleContext"
	  private return_type class_ref 347522 // AccessibleContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AccessibleContext for the JPanel containing the
message, note label and progress bar
"
	end

	operation 10800898 "getLocale"
	  public return_type class_ref 312962 // Locale
	  nparams 0
	  nexceptions 1
	    exception class_ref 348290 // IllegalComponentStateException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the locale of the component. If the component does not have a
locale, then the locale of its parent is returned.

@return this component's locale.  If this component does not have
a locale, the locale of its parent is returned.

@exception IllegalComponentStateException
If the Component does not have its own locale and has not yet been
added to a containment hierarchy such that the locale can be
determined from the containing parent.
"
	end

	operation 10801026 "getAccessibleComponent"
	  public return_type class_ref 348546 // AccessibleComponent
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== end AccessibleContext ===== 

Gets the AccessibleComponent associated with this object that has a
graphical representation.

@return AccessibleComponent if supported by object; else return null
@see AccessibleComponent
"
	end

	operation 10801154 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the AccessibleValue associated with this object that supports a
Numerical value.

@return AccessibleValue if supported by object; else return null
@see AccessibleValue
"
	end

	operation 10801282 "getAccessibleText"
	  public return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the AccessibleText associated with this object presenting
text on the display.

@return AccessibleText if supported by object; else return null
@see AccessibleText
"
	end

	operation 10801410 "getNoteLabelAccessibleText"
	  private return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the note label AccessibleText
"
	end

	operation 10801538 "getIndexAtPoint"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " ===== Begin AccessibleText impl ===== 

Given a point in local coordinates, return the zero-based index
of the character under that Point.  If the point is invalid,
this method returns -1.

@param p the Point in local coordinates
@return the zero-based index of the character under Point p; if
Point is invalid return -1.
"
	end

	operation 10801666 "getCharacterBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines the bounding box of the character at the given
index into the string.  The bounds are returned in local
coordinates.  If the index is invalid an empty rectangle is returned.

@param i the index into the String
@return the screen coordinates of the character's bounding box,
if index is invalid return an empty rectangle.
"
	end

	operation 10801794 "sameWindowAncestor"
	  private explicit_return_type "boolean"
	  nparams 2
	    param inout name "src" type class_ref 338818 // Component
	    param inout name "dest" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether source and destination components have the
same window ancestor
"
	end

	operation 10801922 "getCharCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of characters (valid indicies)

@return the number of characters
"
	end

	operation 10802050 "getCaretPosition"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the zero-based offset of the caret.

Note: That to the right of the caret will have the same index
value as the offset (the caret is between two characters).
@return the zero-based offset of the caret.
"
	end

	operation 10802178 "getAtIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String at a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence
"
	end

	operation 10802306 "getAfterIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String after a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence
"
	end

	operation 10802434 "getBeforeIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String before a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence
"
	end

	operation 10802562 "getCharacterAttribute"
	  public return_type class_ref 361218 // AttributeSet
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AttributeSet for a given character at a given index

@param i the zero-based index into the text
@return the AttributeSet of the character
"
	end

	operation 10802690 "getSelectionStart"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the start offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the start of the selection
"
	end

	operation 10802818 "getSelectionEnd"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the end offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the end of the selection
"
	end

	operation 10802946 "getSelectedText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the portion of the text that is selected.

@return the String portion of the text that is selected
"
	end
      end
    end

    class 1297410 "ProgressMonitorInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Monitors the progress of reading from some InputStream. This ProgressMonitor
is normally invoked in roughly this form:
<pre>
InputStream in = new BufferedInputStream(
                         new ProgressMonitorInputStream(
                                 parentComponent,
                                 \"Reading \" + fileName,
                                 new FileInputStream(fileName)));
</pre><p>
This creates a progress monitor to monitor the progress of reading
the input stream.  If it's taking a while, a ProgressDialog will
be popped up to inform the user.  If the user hits the Cancel button
an InterruptedIOException will be thrown on the next read.
All the right cleanup is done when the stream is closed.


<p>

For further documentation and examples see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html\">How to Monitor Progress</a>,
a section in <em>The Java Tutorial.</em>

@see ProgressMonitor
@see JOptionPane
@author James Gosling
"
      classrelation 4180610 // <generalisation>
	relation 4180610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4180610 // <generalisation>
	  b parent class_ref 577922 // FilterInputStream
      end

      classrelation 4180738 // monitor (<unidirectional association>)
	relation 4180738 --->
	  a role_name "monitor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4180738 // monitor (<unidirectional association>)
	  b parent class_ref 1297026 // ProgressMonitor
      end

      attribute 2435842 "nread"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2435970 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10803074 "ProgressMonitorInputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "parentComponent" type class_ref 338818 // Component
	  param inout name "message" type class_ref 129538 // Object
	  param inout name "in" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an object to monitor the progress of an input stream.

@param message Descriptive text to be placed in the dialog box
               if one is popped up.
@param parentComponent The component triggering the operation
                       being monitored.
@param in The input stream to be monitored.
"
      end

      operation 10803202 "getProgressMonitor"
	public return_type class_ref 1297026 // ProgressMonitor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ProgressMonitor object being used by this stream. Normally
this isn't needed unless you want to do something like change the
descriptive text partway through reading the file.
@return the ProgressMonitor object used by this object
"
      end

      operation 10803330 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>FilterInputStream.read</code>
to update the progress monitor after the read.
"
      end

      operation 10803458 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>FilterInputStream.read</code>
to update the progress monitor after the read.
"
      end

      operation 10803586 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>FilterInputStream.read</code>
to update the progress monitor after the read.
"
      end

      operation 10803714 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>FilterInputStream.skip</code>
to update the progress monitor after the skip.
"
      end

      operation 10803842 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>FilterInputStream.close</code>
to close the progress monitor as well as the stream.
"
      end

      operation 10803970 "reset"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>FilterInputStream.reset</code>
to reset the progress monitor as well as the stream.
"
      end
    end

    class 1297538 "Renderer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the requirements for an object responsible for
\"rendering\" (displaying) a value.

@author Arnaud Weber
"
      operation 10804098 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "aValue" type class_ref 129538 // Object
	  param inout name "isSelected" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the value to display and whether or not the
value should be portrayed as \"currently selected\".

@param aValue      an Object object
@param isSelected  a boolean
"
      end

      operation 10804226 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component used to render the value.

@return the Component responsible for displaying the value
"
      end
    end

    class 1297666 "ScrollPaneLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The layout manager used by <code>JScrollPane</code>.
<code>JScrollPaneLayout</code> is
responsible for nine components: a viewport, two scrollbars,
a row header, a column header, and four \"corner\" components.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see JScrollPane
@see JViewport

@author Hans Muller
"
      classrelation 4180866 // <realization>
	relation 4180866 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4180866 // <realization>
	  b parent class_ref 349698 // LayoutManager
      end

      classrelation 4180994 // <realization>
	relation 4180994 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4180994 // <realization>
	  b parent class_ref 437506 // ScrollPaneConstants
      end

      classrelation 4181122 // <realization>
	relation 4181122 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4181122 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4181250 // viewport (<unidirectional association>)
	relation 4181250 --->
	  a role_name "viewport" protected
	    comment "
The scrollpane's viewport child.
Default is an empty <code>JViewport</code>.
@see JScrollPane#setViewport

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4181250 // viewport (<unidirectional association>)
	  b parent class_ref 438530 // JViewport
      end

      classrelation 4181378 // vsb (<unidirectional association>)
	relation 4181378 --->
	  a role_name "vsb" protected
	    comment "
The scrollpane's vertical scrollbar child.
Default is a <code>JScrollBar</code>.
@see JScrollPane#setVerticalScrollBar

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4181378 // vsb (<unidirectional association>)
	  b parent class_ref 436098 // JScrollBar
      end

      classrelation 4181506 // hsb (<unidirectional association>)
	relation 4181506 --->
	  a role_name "hsb" protected
	    comment "
The scrollpane's horizontal scrollbar child.
Default is a <code>JScrollBar</code>.
@see JScrollPane#setHorizontalScrollBar

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4181506 // hsb (<unidirectional association>)
	  b parent class_ref 436098 // JScrollBar
      end

      classrelation 4181634 // rowHead (<unidirectional association>)
	relation 4181634 --->
	  a role_name "rowHead" protected
	    comment "
The row header child.  Default is <code>null</code>.
@see JScrollPane#setRowHeader

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4181634 // rowHead (<unidirectional association>)
	  b parent class_ref 438530 // JViewport
      end

      classrelation 4181762 // colHead (<unidirectional association>)
	relation 4181762 --->
	  a role_name "colHead" protected
	    comment "
The column header child.  Default is <code>null</code>.
@see JScrollPane#setColumnHeader

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4181762 // colHead (<unidirectional association>)
	  b parent class_ref 438530 // JViewport
      end

      classrelation 4181890 // lowerLeft (<unidirectional association>)
	relation 4181890 --->
	  a role_name "lowerLeft" protected
	    comment "
The component to display in the lower left corner.
Default is <code>null</code>.
@see JScrollPane#setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4181890 // lowerLeft (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4182018 // lowerRight (<unidirectional association>)
	relation 4182018 --->
	  a role_name "lowerRight" protected
	    comment "
The component to display in the lower right corner.
Default is <code>null</code>.
@see JScrollPane#setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4182018 // lowerRight (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4182146 // upperLeft (<unidirectional association>)
	relation 4182146 --->
	  a role_name "upperLeft" protected
	    comment "
The component to display in the upper left corner.
Default is <code>null</code>.
@see JScrollPane#setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4182146 // upperLeft (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 4182274 // upperRight (<unidirectional association>)
	relation 4182274 --->
	  a role_name "upperRight" protected
	    comment "
The component to display in the upper right corner.
Default is <code>null</code>.
@see JScrollPane#setCorner

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4182274 // upperRight (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 2436098 "vsbPolicy"
	protected explicit_type "int"
	init_value " VERTICAL_SCROLLBAR_AS_NEEDED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The display policy for the vertical scrollbar.
The default is <code>ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED</code>.
<p>
This field is obsolete, please use the <code>JScrollPane</code> field instead.

@see JScrollPane#setVerticalScrollBarPolicy

"
      end

      attribute 2436226 "hsbPolicy"
	protected explicit_type "int"
	init_value " HORIZONTAL_SCROLLBAR_AS_NEEDED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The display policy for the horizontal scrollbar.
The default is <code>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED</code>.
<p>
This field is obsolete, please use the <code>JScrollPane</code> field instead.

@see JScrollPane#setHorizontalScrollBarPolicy

"
      end

      operation 10804354 "syncWithScrollPane"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sp" type class_ref 366210 // JScrollPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is invoked after the ScrollPaneLayout is set as the
LayoutManager of a <code>JScrollPane</code>.
It initializes all of the internal fields that
are ordinarily set by <code>addLayoutComponent</code>.  For example:
<pre>
ScrollPaneLayout mySPLayout = new ScrollPanelLayout() {
    public void layoutContainer(Container p) {
        super.layoutContainer(p);
        // do some extra work here ...
    }
};
scrollpane.setLayout(mySPLayout):
</pre>
"
      end

      operation 10804482 "addSingletonComponent"
	protected return_type class_ref 338818 // Component
	nparams 2
	  param inout name "oldC" type class_ref 338818 // Component
	  param inout name "newC" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an existing component.  When a new component, such as
the left corner, or vertical scrollbar, is added, the old one,
if it exists, must be removed.
<p>
This method returns <code>newC</code>. If <code>oldC</code> is
not equal to <code>newC</code> and is non-<code>null</code>,
it will be removed from its parent.

@param oldC the <code>Component</code> to replace
@param newC the <code>Component</code> to add
@return the <code>newC</code>
"
      end

      operation 10804610 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout. The layout is
identified using one of:
<ul>
<li>ScrollPaneConstants.VIEWPORT
<li>ScrollPaneConstants.VERTICAL_SCROLLBAR
<li>ScrollPaneConstants.HORIZONTAL_SCROLLBAR
<li>ScrollPaneConstants.ROW_HEADER
<li>ScrollPaneConstants.COLUMN_HEADER
<li>ScrollPaneConstants.LOWER_LEFT_CORNER
<li>ScrollPaneConstants.LOWER_RIGHT_CORNER
<li>ScrollPaneConstants.UPPER_LEFT_CORNER
<li>ScrollPaneConstants.UPPER_RIGHT_CORNER
</ul>

@param s the component identifier
@param c the the component to be added
@exception IllegalArgumentException if <code>s</code> is an invalid key
"
      end

      operation 10804738 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the layout.

@param c the component to remove
"
      end

      operation 10804866 "getVerticalScrollBarPolicy"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vertical scrollbar-display policy.

@return an integer giving the display policy
@see #setVerticalScrollBarPolicy
"
      end

      operation 10804994 "setVerticalScrollBarPolicy"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical scrollbar-display policy. The options
are:
<ul>
<li>ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED
<li>ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER
<li>ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS
</ul>
Note: Applications should use the <code>JScrollPane</code> version
of this method.  It only exists for backwards compatibility
with the Swing 1.0.2 (and earlier) versions of this class.

@param x an integer giving the display policy
@exception IllegalArgumentException if <code>x</code> is an invalid
         vertical scroll bar policy, as listed above
"
      end

      operation 10805122 "getHorizontalScrollBarPolicy"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the horizontal scrollbar-display policy.

@return an integer giving the display policy
@see #setHorizontalScrollBarPolicy
"
      end

      operation 10805250 "setHorizontalScrollBarPolicy"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal scrollbar-display policy.
The options are:<ul>
<li>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED
<li>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER
<li>ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS
</ul>
Note: Applications should use the <code>JScrollPane</code> version
of this method.  It only exists for backwards compatibility
with the Swing 1.0.2 (and earlier) versions of this class.

@param x an int giving the display policy
@exception IllegalArgumentException if <code>x</code> is not a valid
         horizontal scrollbar policy, as listed above
"
      end

      operation 10805378 "getViewport"
	public return_type class_ref 438530 // JViewport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JViewport</code> object that displays the
scrollable contents.
@return the <code>JViewport</code> object that displays the scrollable contents
@see JScrollPane#getViewport
"
      end

      operation 10805506 "getHorizontalScrollBar"
	public return_type class_ref 436098 // JScrollBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JScrollBar</code> object that handles horizontal scrolling.
@return the <code>JScrollBar</code> object that handles horizontal scrolling
@see JScrollPane#getHorizontalScrollBar
"
      end

      operation 10805634 "getVerticalScrollBar"
	public return_type class_ref 436098 // JScrollBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JScrollBar</code> object that handles vertical scrolling.
@return the <code>JScrollBar</code> object that handles vertical scrolling
@see JScrollPane#getVerticalScrollBar
"
      end

      operation 10805762 "getRowHeader"
	public return_type class_ref 438530 // JViewport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JViewport</code> object that is the row header.
@return the <code>JViewport</code> object that is the row header
@see JScrollPane#getRowHeader
"
      end

      operation 10805890 "getColumnHeader"
	public return_type class_ref 438530 // JViewport
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JViewport</code> object that is the column header.
@return the <code>JViewport</code> object that is the column header
@see JScrollPane#getColumnHeader
"
      end

      operation 10806018 "getCorner"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Component</code> at the specified corner.
@param key the <code>String</code> specifying the corner
@return the <code>Component</code> at the specified corner, as defined in
        {@link ScrollPaneConstants}; if <code>key</code> is not one of the
         four corners, <code>null</code> is returned
@see JScrollPane#getCorner
"
      end

      operation 10806146 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The preferred size of a <code>ScrollPane</code> is the size of the insets,
plus the preferred size of the viewport, plus the preferred size of
the visible headers, plus the preferred size of the scrollbars
that will appear given the current view and the current
scrollbar displayPolicies.
<p>Note that the rowHeader is calculated as part of the preferred width
and the colHeader is calculated as part of the preferred size.

@param parent the <code>Container</code> that will be laid out
@return a <code>Dimension</code> object specifying the preferred size of the
        viewport and any scrollbars
@see ViewportLayout
@see LayoutManager
"
      end

      operation 10806274 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The minimum size of a <code>ScrollPane</code> is the size of the insets
plus minimum size of the viewport, plus the scrollpane's
viewportBorder insets, plus the minimum size
of the visible headers, plus the minimum size of the
scrollbars whose displayPolicy isn't NEVER.

@param parent the <code>Container</code> that will be laid out
@return a <code>Dimension</code> object specifying the minimum size
"
      end

      operation 10806402 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the scrollpane. The positioning of components depends on
the following constraints:
<ul>
<li> The row header, if present and visible, gets its preferred
width and the viewport's height.

<li> The column header, if present and visible, gets its preferred
height and the viewport's width.

<li> If a vertical scrollbar is needed, i.e. if the viewport's extent
height is smaller than its view height or if the <code>displayPolicy</code>
is ALWAYS, it's treated like the row header with respect to its
dimensions and is made visible.

<li> If a horizontal scrollbar is needed, it is treated like the
column header (see the paragraph above regarding the vertical scrollbar).

<li> If the scrollpane has a non-<code>null</code>
<code>viewportBorder</code>, then space is allocated for that.

<li> The viewport gets the space available after accounting for
the previous constraints.

<li> The corner components, if provided, are aligned with the
ends of the scrollbars and headers. If there is a vertical
scrollbar, the right corners appear; if there is a horizontal
scrollbar, the lower corners appear; a row header gets left
corners, and a column header gets upper corners.
</ul>

@param parent the <code>Container</code> to lay out
"
      end

      operation 10806530 "adjustForVSB"
	private explicit_return_type "void"
	nparams 5
	  param inout name "wantsVSB" explicit_type "boolean"
	  param inout name "available" type class_ref 314114 // Rectangle
	  param inout name "vsbR" type class_ref 314114 // Rectangle
	  param inout name "vpbInsets" type class_ref 343938 // Insets
	  param inout name "leftToRight" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adjusts the <code>Rectangle</code> <code>available</code> based on if
the vertical scrollbar is needed (<code>wantsVSB</code>).
The location of the vsb is updated in <code>vsbR</code>, and
the viewport border insets (<code>vpbInsets</code>) are used to offset
the vsb. This is only called when <code>wantsVSB</code> has
changed, eg you shouldn't invoke adjustForVSB(true) twice.
"
      end

      operation 10806658 "adjustForHSB"
	private explicit_return_type "void"
	nparams 4
	  param inout name "wantsHSB" explicit_type "boolean"
	  param inout name "available" type class_ref 314114 // Rectangle
	  param inout name "hsbR" type class_ref 314114 // Rectangle
	  param inout name "vpbInsets" type class_ref 343938 // Insets
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adjusts the <code>Rectangle</code> <code>available</code> based on if
the horizontal scrollbar is needed (<code>wantsHSB</code>).
The location of the hsb is updated in <code>hsbR</code>, and
the viewport border insets (<code>vpbInsets</code>) are used to offset
the hsb.  This is only called when <code>wantsHSB</code> has
changed, eg you shouldn't invoked adjustForHSB(true) twice.
"
      end

      operation 10806786 "getViewportBorderBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "scrollpane" type class_ref 366210 // JScrollPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the bounds of the border around the specified scroll pane's
viewport.

@return the size and position of the viewport border
@deprecated As of JDK version Swing1.1
   replaced by <code>JScrollPane.getViewportBorderBounds()</code>.
"
      end

      class 1297794 "UIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4182402 // <generalisation>
	  relation 4182402 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4182402 // <generalisation>
	    b parent class_ref 1297666 // ScrollPaneLayout
	end

	classrelation 4182530 // <realization>
	  relation 4182530 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4182530 // <realization>
	    b parent class_ref 354818 // UIResource
	end
      end
    end

    class 1297922 "Spring"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An instance of the <code>Spring</code> class holds three properties that
 characterize its behavior: the <em>minimum</em>, <em>preferred</em>, and
 <em>maximum</em> values. Each of these properties may be involved in
 defining its fourth, <em>value</em>, property based on a series of rules.
 <p>
 An instance of the <code>Spring</code> class can be visualized as a
 mechanical spring that provides a corrective force as the spring is compressed
 or stretched away from its preferred value. This force is modelled
 as linear function of the distance from the preferred value, but with
 two different constants -- one for the compressional force and one for the
 tensional one. Those constants are specified by the minimum and maximum
 values of the spring such that a spring at its minimum value produces an
 equal and opposite force to that which is created when it is at its
 maximum value. The difference between the <em>preferred</em> and
 <em>minimum</em> values, therefore, represents the ease with which the
 spring can be compressed and the difference between its <em>maximum</em>
 and <em>preferred</em> values, indicates the ease with which the
 <code>Spring</code> can be extended.
 See the {@link #sum} method for details.

 <p>
 By defining simple arithmetic operations on <code>Spring</code>s,
 the behavior of a collection of <code>Spring</code>s
 can be reduced to that of an ordinary (non-compound) <code>Spring</code>. We define
 the \"+\", \"-\", <em>max</em>, and <em>min</em> operators on
 <code>Spring</code>s so that, in each case, the result is a <code>Spring</code>
 whose characteristics bear a useful mathematical relationship to its constituent
 springs.

 <p>
 A <code>Spring</code> can be treated as a pair of intervals
 with a single common point: the preferred value.
 The following rules define some of the
 arithmetic operators that can be applied to intervals
 (<code>[a, b]</code> refers to the interval
 from <code>a</code>
 to <code>b</code>,
 where <code>a &lt;= b</code>).

 <pre>
         [a1, b1] + [a2, b2] = [a1 + a2, b1 + b2]

                     -[a, b] = [-b, -a]

     max([a1, b1], [a2, b2]) = [max(a1, a2), max(b1, b2)]
 </pre>
 <p>

 If we denote <code>Spring</code>s as <code>[a, b, c]</code>,
 where <code>a &lt;= b &lt;= c</code>, we can define the same
 arithmetic operators on <code>Spring</code>s:

 <pre>
         [a1, b1, c1] + [a2, b2, c2] = [a1 + a2, b1 + b2, c1 + c2]

                          -[a, b, c] = [-c, -b, -a]

     max([a1, b1, c1], [a2, b2, c2]) = [max(a1, a2), max(b1, b2), max(c1, c2)]
 </pre>
 <p>
 With both intervals and <code>Spring</code>s we can define \"-\" and <em>min</em>
 in terms of negation:

 <pre>
     X - Y = X + (-Y)

     min(X, Y) = -max(-X, -Y)
 </pre>
 <p>
 For the static methods in this class that embody the arithmetic
 operators, we do not actually perform the operation in question as
 that would snapshot the values of the properties of the method's arguments
 at the time the static method is called. Instead, the static methods
 create a new <code>Spring</code> instance containing references to
 the method's arguments so that the characteristics of the new spring track the
 potentially changing characteristics of the springs from which it
 was made. This is a little like the idea of a <em>lazy value</em>
 in a functional language.
<p>
If you are implementing a <code>SpringLayout</code> you
can find further information and examples in
<a
href=\"https://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html\">How to Use SpringLayout</a>,
a section in <em>The Java Tutorial.</em>
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see SpringLayout
@see SpringLayout.Constraints

@author      Philip Milne
@since       1.4
"
      attribute 2437762 "UNSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " Integer.MIN_VALUE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An integer value signifying that a property value has not yet been calculated.

"
      end

      operation 10816002 "Spring"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by factory methods to create a <code>Spring</code>.

@see #constant(int)
@see #constant(int, int, int)
@see #max
@see #minus
@see #sum
@see SpringLayout.Constraints
"
      end

      operation 10816130 "getMinimumValue"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <em>minimum</em> value of this <code>Spring</code>.

@return the <code>minimumValue</code> property of this <code>Spring</code>
"
      end

      operation 10816258 "getPreferredValue"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <em>preferred</em> value of this <code>Spring</code>.

@return the <code>preferredValue</code> of this <code>Spring</code>
"
      end

      operation 10816386 "getMaximumValue"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <em>maximum</em> value of this <code>Spring</code>.

@return the <code>maximumValue</code> property of this <code>Spring</code>
"
      end

      operation 10816514 "getValue"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <em>value</em> of this <code>Spring</code>.

@return  the <code>value</code> property of this <code>Spring</code>

@see #setValue
"
      end

      operation 10816642 "setValue"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current <em>value</em> of this <code>Spring</code> to <code>value</code>.

@param   value the new setting of the <code>value</code> property

@see #getValue
"
      end

      operation 10816770 "range"
	private explicit_return_type "double"
	nparams 1
	  param inout name "contract" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10816898 "getStrain"
	package explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "pp"
      end

      operation 10817026 "setStrain"
	package explicit_return_type "void"
	nparams 1
	  param in name "strain" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "pp"
      end

      operation 10817154 "isCyclic"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "l" type class_ref 1298050 // SpringLayout
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "pp"
      end

      class 1298178 "AbstractSpring"
	abstract visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4184578 // <generalisation>
	  relation 4184578 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4184578 // <generalisation>
	    b parent class_ref 1297922 // Spring
	end

	attribute 2437890 "size"
	  protected explicit_type "int"
	  init_value " UNSET"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10817282 "getValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10817410 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10817538 "clear"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10817666 "setNonClearValue"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1298306 "StaticSpring"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4184706 // <generalisation>
	  relation 4184706 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4184706 // <generalisation>
	    b parent class_ref 1298178 // AbstractSpring
	end

	attribute 2438018 "min"
	  protected explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2438146 "pref"
	  protected explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2438274 "max"
	  protected explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10817794 "StaticSpring"
	  public explicit_return_type ""
	  nparams 1
	    param in name "pref" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10817922 "StaticSpring"
	  public explicit_return_type ""
	  nparams 3
	    param in name "min" explicit_type "int"
	    param in name "pref" explicit_type "int"
	    param in name "max" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10818050 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10818178 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10818306 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10818434 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1298434 "NegativeSpring"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4184834 // <generalisation>
	  relation 4184834 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4184834 // <generalisation>
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4184962 // s (<unidirectional association>)
	  relation 4184962 --->
	    a role_name "s" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4184962 // s (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	operation 10818562 "NegativeSpring"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10818690 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Note the use of max value rather than minimum value here.
 See the opening preamble on arithmetic with springs."
	end

	operation 10818818 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10818946 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10819074 "getValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10819202 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10819330 "isCyclic"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "l" type class_ref 1298050 // SpringLayout
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "pp"
	end
      end

      class 1298562 "ScaleSpring"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4185090 // <generalisation>
	  relation 4185090 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4185090 // <generalisation>
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4185218 // s (<unidirectional association>)
	  relation 4185218 --->
	    a role_name "s" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4185218 // s (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	attribute 2438402 "factor"
	  private explicit_type "float"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 10819458 "ScaleSpring"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "s" type class_ref 1297922 // Spring
	    param in name "factor" explicit_type "float"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10819586 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10819714 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10819842 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10819970 "getValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10820098 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10820226 "isCyclic"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "l" type class_ref 1298050 // SpringLayout
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "pp"
	end
      end

      class 1298690 "WidthSpring"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4185346 // <generalisation>
	  relation 4185346 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4185346 // <generalisation>
	    b parent class_ref 1298178 // AbstractSpring
	end

	classrelation 4185474 // c (<unidirectional association>)
	  relation 4185474 --->
	    a role_name "c" package
	      comment "pp
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4185474 // c (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	operation 10820354 "WidthSpring"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10820482 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10820610 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10820738 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1298818 "HeightSpring"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4185602 // <generalisation>
	  relation 4185602 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4185602 // <generalisation>
	    b parent class_ref 1298178 // AbstractSpring
	end

	classrelation 4185730 // c (<unidirectional association>)
	  relation 4185730 --->
	    a role_name "c" package
	      comment "pp
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4185730 // c (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	operation 10820866 "HeightSpring"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10820994 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10821122 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10821250 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1298946 "SpringMap"
	abstract visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4185858 // <generalisation>
	  relation 4185858 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4185858 // <generalisation>
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4185986 // s (<unidirectional association>)
	  relation 4185986 --->
	    a role_name "s" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4185986 // s (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	operation 10821378 "SpringMap"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10821506 "map"
	  abstract protected explicit_return_type "int"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10821634 "inv"
	  abstract protected explicit_return_type "int"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10821762 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10821890 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10822018 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10822146 "getValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10822274 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10822402 "isCyclic"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "l" type class_ref 1298050 // SpringLayout
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "pp"
	end
      end

      class 1299074 "CompoundSpring"
	abstract visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4186114 // <generalisation>
	  relation 4186114 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4186114 // <generalisation>
	    b parent class_ref 1298306 // StaticSpring
	end

	classrelation 4186242 // s1 (<unidirectional association>)
	  relation 4186242 --->
	    a role_name "s1" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4186242 // s1 (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4186370 // s2 (<unidirectional association>)
	  relation 4186370 --->
	    a role_name "s2" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4186370 // s2 (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	operation 10822530 "CompoundSpring"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "s1" type class_ref 1297922 // Spring
	    param inout name "s2" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10822658 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10822786 "clear"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10822914 "op"
	  abstract protected explicit_return_type "int"
	  nparams 2
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10823042 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10823170 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10823298 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10823426 "getValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10823554 "isCyclic"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "l" type class_ref 1298050 // SpringLayout
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "pp"
	end
      end

      class 1299202 "SumSpring"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4186498 // <generalisation>
	  relation 4186498 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4186498 // <generalisation>
	    b parent class_ref 1299074 // CompoundSpring
	end

	operation 10823682 "SumSpring"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "s1" type class_ref 1297922 // Spring
	    param inout name "s2" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10823810 "op"
	  protected explicit_return_type "int"
	  nparams 2
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10823938 "setNonClearValue"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1299330 "MaxSpring"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4186626 // <generalisation>
	  relation 4186626 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4186626 // <generalisation>
	    b parent class_ref 1299074 // CompoundSpring
	end

	operation 10824066 "MaxSpring"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "s1" type class_ref 1297922 // Spring
	    param inout name "s2" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10824194 "op"
	  protected explicit_return_type "int"
	  nparams 2
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10824322 "setNonClearValue"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10824450 "constant"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 1
	  param in name "pref" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a strut -- a spring whose <em>minimum</em>, <em>preferred</em>, and
<em>maximum</em> values each have the value <code>pref</code>.

@param  pref the <em>minimum</em>, <em>preferred</em>, and
        <em>maximum</em> values of the new spring
@return a spring whose <em>minimum</em>, <em>preferred</em>, and
        <em>maximum</em> values each have the value <code>pref</code>

@see Spring
"
      end

      operation 10824578 "constant"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 3
	  param in name "min" explicit_type "int"
	  param in name "pref" explicit_type "int"
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a spring whose <em>minimum</em>, <em>preferred</em>, and
<em>maximum</em> values have the values: <code>min</code>, <code>pref</code>,
and <code>max</code> respectively.

@param  min the <em>minimum</em> value of the new spring
@param  pref the <em>preferred</em> value of the new spring
@param  max the <em>maximum</em> value of the new spring
@return a spring whose <em>minimum</em>, <em>preferred</em>, and
        <em>maximum</em> values have the values: <code>min</code>, <code>pref</code>,
        and <code>max</code> respectively

@see Spring
"
      end

      operation 10824706 "minus"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 1
	  param inout name "s" type class_ref 1297922 // Spring
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>-s</code>: a spring running in the opposite direction to <code>s</code>.

@return <code>-s</code>: a spring running in the opposite direction to <code>s</code>

@see Spring
"
      end

      operation 10824834 "sum"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 2
	  param inout name "s1" type class_ref 1297922 // Spring
	  param inout name "s2" type class_ref 1297922 // Spring
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>s1+s2</code>: a spring representing <code>s1</code> and <code>s2</code>
in series. In a sum, <code>s3</code>, of two springs, <code>s1</code> and <code>s2</code>,
the <em>strains</em> of <code>s1</code>, <code>s2</code>, and <code>s3</code> are maintained
at the same level (to within the precision implied by their integer <em>value</em>s).
The strain of a spring in compression is:
<pre>
        value - pref
        ------------
         pref - min
</pre>
and the strain of a spring in tension is:
<pre>
        value - pref
        ------------
         max - pref
</pre>
When <code>setValue</code> is called on the sum spring, <code>s3</code>, the strain
in <code>s3</code> is calculated using one of the formulas above. Once the strain of
the sum is known, the <em>value</em>s of <code>s1</code> and <code>s2</code> are
then set so that they are have a strain equal to that of the sum. The formulas are
evaluated so as to take rounding errors into account and ensure that the sum of
the <em>value</em>s of <code>s1</code> and <code>s2</code> is exactly equal to
the <em>value</em> of <code>s3</code>.

@return <code>s1+s2</code>: a spring representing <code>s1</code> and <code>s2</code> in series

@see Spring
"
      end

      operation 10824962 "max"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 2
	  param inout name "s1" type class_ref 1297922 // Spring
	  param inout name "s2" type class_ref 1297922 // Spring
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>max(s1, s2)</code>: a spring whose value is always greater than (or equal to)
        the values of both <code>s1</code> and <code>s2</code>.

@return <code>max(s1, s2)</code>: a spring whose value is always greater than (or equal to)
        the values of both <code>s1</code> and <code>s2</code>
@see Spring
"
      end

      operation 10825090 "difference"
	class_operation package return_type class_ref 1297922 // Spring
	nparams 2
	  param inout name "s1" type class_ref 1297922 // Spring
	  param inout name "s2" type class_ref 1297922 // Spring
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove these, they're not used often and can be created using minus -
 as per these implementations.
pp"
      end

      operation 10825218 "scale"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 2
	  param inout name "s" type class_ref 1297922 // Spring
	  param in name "factor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "public static Spring min(Spring s1, Spring s2) {
return minus(max(minus(s1), minus(s2)));
}


Returns a spring whose <em>minimum</em>, <em>preferred</em>, <em>maximum</em>
and <em>value</em> properties are each multiples of the properties of the
argument spring, <code>s</code>. Minimum and maximum properties are
swapped when <code>factor</code> is negative (in accordance with the
rules of interval arithmetic).
<p>
When factor is, for example, 0.5f the result represents 'the mid-point'
of its input - an operation that is useful for centering components in
a container.

@param s the spring to scale
@param factor amount to scale by.
@return  a spring whose properties are those of the input spring <code>s</code>
multiplied by <code>factor</code>
@throws NullPointerException if <code>s</code> is null
@since 1.5
"
      end

      operation 10825346 "width"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a spring whose <em>minimum</em>, <em>preferred</em>, <em>maximum</em>
and <em>value</em> properties are defined by the widths of the <em>minimumSize</em>,
<em>preferredSize</em>, <em>maximumSize</em> and <em>size</em> properties
of the supplied component. The returned spring is a 'wrapper' implementation
whose methods call the appropriate size methods of the supplied component.
The minimum, preferred, maximum and value properties of the returned spring
therefore report the current state of the appropriate properties in the
component and track them as they change.

@param c Component used for calculating size
@return  a spring whose properties are defined by the horizontal component
of the component's size methods.
@throws NullPointerException if <code>c</code> is null
@since 1.5
"
      end

      operation 10825474 "height"
	class_operation public return_type class_ref 1297922 // Spring
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a spring whose <em>minimum</em>, <em>preferred</em>, <em>maximum</em>
and <em>value</em> properties are defined by the heights of the <em>minimumSize</em>,
<em>preferredSize</em>, <em>maximumSize</em> and <em>size</em> properties
of the supplied component. The returned spring is a 'wrapper' implementation
whose methods call the appropriate size methods of the supplied component.
The minimum, preferred, maximum and value properties of the returned spring
therefore report the current state of the appropriate properties in the
component and track them as they change.

@param c Component used for calculating size
@return  a spring whose properties are defined by the vertical component
of the component's size methods.
@throws NullPointerException if <code>c</code> is null
@since 1.5
"
      end

      operation 10825602 "checkArg"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If <code>s</code> is null, this throws an NullPointerException.
"
      end
    end

    class 1298050 "SpringLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>SpringLayout</code> lays out the children of its associated container
according to a set of constraints.
See <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html\">How to Use SpringLayout</a>
in <em>The Java Tutorial</em> for examples of using
<code>SpringLayout</code>.

<p>
Each constraint,
represented by a <code>Spring</code> object,
controls the vertical or horizontal distance
between two component edges.
The edges can belong to
any child of the container,
or to the container itself.
For example,
the allowable width of a component
can be expressed using a constraint
that controls the distance between the west (left) and east (right)
edges of the component.
The allowable <em>y</em> coordinates for a component
can be expressed by constraining the distance between
the north (top) edge of the component
and the north edge of its container.

<P>
Every child of a <code>SpringLayout</code>-controlled container,
as well as the container itself,
has exactly one set of constraints
associated with it.
These constraints are represented by
a <code>SpringLayout.Constraints</code> object.
By default,
<code>SpringLayout</code> creates constraints
that make their associated component
have the minimum, preferred, and maximum sizes
returned by the component's
{@link java.awt.Component#getMinimumSize},
{@link java.awt.Component#getPreferredSize}, and
{@link java.awt.Component#getMaximumSize}
methods. The <em>x</em> and <em>y</em> positions are initially not
constrained, so that until you constrain them the <code>Component</code>
will be positioned at 0,0 relative to the <code>Insets</code> of the
parent <code>Container</code>.

<p>
You can change
a component's constraints in several ways.
You can
use one of the
{@link #putConstraint putConstraint}
methods
to establish a spring
linking the edges of two components within the same container.
Or you can get the appropriate <code>SpringLayout.Constraints</code>
object using
{@link #getConstraints getConstraints}
and then modify one or more of its springs.
Or you can get the spring for a particular edge of a component
using {@link #getConstraint getConstraint},
and modify it.
You can also associate
your own <code>SpringLayout.Constraints</code> object
with a component by specifying the constraints object
when you add the component to its container
(using
{@link Container#add(Component, Object)}).

<p>
The <code>Spring</code> object representing each constraint
has a minimum, preferred, maximum, and current value.
The current value of the spring
is somewhere between the minimum and maximum values,
according to the formula given in the
{@link Spring#sum} method description.
When the minimum, preferred, and maximum values are the same,
the current value is always equal to them;
this inflexible spring is called a <em>strut</em>.
You can create struts using the factory method
{@link Spring#constant(int)}.
The <code>Spring</code> class also provides factory methods
for creating other kinds of springs,
including springs that depend on other springs.

<p>
In a <code>SpringLayout</code>, the position of each edge is dependent on
the position of just one other edge. If a constraint is subsequently added
to create a new binding for an edge, the previous binding is discarded
and the edge remains dependent on a single edge.
Springs should only be attached
between edges of the container and its immediate children; the behavior
of the <code>SpringLayout</code> when presented with constraints linking
the edges of components from different containers (either internal or
external) is undefined.

<h3>
SpringLayout vs. Other Layout Managers
</h3>

<blockquote>
<hr>
<strong>Note:</strong>
Unlike many layout managers,
<code>SpringLayout</code> doesn't automatically set the location of
the components it manages.
If you hand-code a GUI that uses <code>SpringLayout</code>,
remember to initialize component locations by constraining the west/east
and north/south locations.
<p>
Depending on the constraints you use,
you may also need to set the size of the container explicitly.
<hr>
</blockquote>

<p>
Despite the simplicity of <code>SpringLayout</code>,
it can emulate the behavior of most other layout managers.
For some features,
such as the line breaking provided by <code>FlowLayout</code>,
you'll need to
create a special-purpose subclass of the <code>Spring</code> class.

<p>
<code>SpringLayout</code> also provides a way to solve
many of the difficult layout
problems that cannot be solved by nesting combinations
of <code>Box</code>es. That said, <code>SpringLayout</code> honors the
<code>LayoutManager2</code> contract correctly and so can be nested with
other layout managers -- a technique that can be preferable to
creating the constraints implied by the other layout managers.
<p>
The asymptotic complexity of the layout operation of a <code>SpringLayout</code>
is linear in the number of constraints (and/or components).
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@see Spring
@see SpringLayout.Constraints

@author      Philip Milne
@author      Scott Violet
@author      Joe Winchester
@since       1.4
"
      classrelation 4186754 // <realization>
	relation 4186754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4186754 // <realization>
	  b parent class_ref 406402 // LayoutManager2
      end

      classrelation 4186882 // componentConstraints (<unidirectional association>)
	relation 4186882 --->
	  a role_name "componentConstraints" init_value " new HashMap<Component, Constraints>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component, Constraints> ${name}${value};
"
	    classrelation_ref 4186882 // componentConstraints (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 4187010 // cyclicReference (<unidirectional association>)
	relation 4187010 --->
	  a role_name "cyclicReference" init_value " Spring.constant(Spring.UNSET)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4187010 // cyclicReference (<unidirectional association>)
	  b parent class_ref 1297922 // Spring
      end

      classrelation 4187138 // cyclicSprings (<unidirectional association>)
	relation 4187138 --->
	  a role_name "cyclicSprings" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Spring> ${name}${value};
"
	    classrelation_ref 4187138 // cyclicSprings (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 4187266 // acyclicSprings (<unidirectional association>)
	relation 4187266 --->
	  a role_name "acyclicSprings" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Spring> ${name}${value};
"
	    classrelation_ref 4187266 // acyclicSprings (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 4187394 // NORTH (<unidirectional association>)
	relation 4187394 --->
	  a role_name "NORTH" init_value " \"North\"" class_relation const_relation public
	    comment "
Specifies the top edge of a component's bounding rectangle.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4187394 // NORTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4187522 // SOUTH (<unidirectional association>)
	relation 4187522 --->
	  a role_name "SOUTH" init_value " \"South\"" class_relation const_relation public
	    comment "
Specifies the bottom edge of a component's bounding rectangle.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4187522 // SOUTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4187650 // EAST (<unidirectional association>)
	relation 4187650 --->
	  a role_name "EAST" init_value " \"East\"" class_relation const_relation public
	    comment "
Specifies the right edge of a component's bounding rectangle.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4187650 // EAST (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4187778 // WEST (<unidirectional association>)
	relation 4187778 --->
	  a role_name "WEST" init_value " \"West\"" class_relation const_relation public
	    comment "
Specifies the left edge of a component's bounding rectangle.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4187778 // WEST (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4187906 // HORIZONTAL_CENTER (<unidirectional association>)
	relation 4187906 --->
	  a role_name "HORIZONTAL_CENTER" init_value " \"HorizontalCenter\"" class_relation const_relation public
	    comment "
Specifies the horizontal center of a component's bounding rectangle.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4187906 // HORIZONTAL_CENTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4188034 // VERTICAL_CENTER (<unidirectional association>)
	relation 4188034 --->
	  a role_name "VERTICAL_CENTER" init_value " \"VerticalCenter\"" class_relation const_relation public
	    comment "
Specifies the vertical center of a component's bounding rectangle.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4188034 // VERTICAL_CENTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4188162 // BASELINE (<unidirectional association>)
	relation 4188162 --->
	  a role_name "BASELINE" init_value " \"Baseline\"" class_relation const_relation public
	    comment "
Specifies the baseline of a component.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4188162 // BASELINE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4188290 // WIDTH (<unidirectional association>)
	relation 4188290 --->
	  a role_name "WIDTH" init_value " \"Width\"" class_relation const_relation public
	    comment "
Specifies the width of a component's bounding rectangle.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4188290 // WIDTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4188418 // HEIGHT (<unidirectional association>)
	relation 4188418 --->
	  a role_name "HEIGHT" init_value " \"Height\"" class_relation const_relation public
	    comment "
Specifies the height of a component's bounding rectangle.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4188418 // HEIGHT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4188546 // ALL_HORIZONTAL (<unidirectional association>)
	relation 4188546 --->
	  a role_name "ALL_HORIZONTAL" multiplicity "[]" init_value " {WEST, WIDTH, EAST, HORIZONTAL_CENTER}" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4188546 // ALL_HORIZONTAL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4188674 // ALL_VERTICAL (<unidirectional association>)
	relation 4188674 --->
	  a role_name "ALL_VERTICAL" multiplicity "[]" init_value " {NORTH, HEIGHT, SOUTH, VERTICAL_CENTER, BASELINE}" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4188674 // ALL_VERTICAL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 1299458 "Constraints"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4188802 // x (<unidirectional association>)
	  relation 4188802 --->
	    a role_name "x" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4188802 // x (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4188930 // y (<unidirectional association>)
	  relation 4188930 --->
	    a role_name "y" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4188930 // y (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189058 // width (<unidirectional association>)
	  relation 4189058 --->
	    a role_name "width" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4189058 // width (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189186 // height (<unidirectional association>)
	  relation 4189186 --->
	    a role_name "height" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4189186 // height (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189314 // east (<unidirectional association>)
	  relation 4189314 --->
	    a role_name "east" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4189314 // east (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189442 // south (<unidirectional association>)
	  relation 4189442 --->
	    a role_name "south" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4189442 // south (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189570 // horizontalCenter (<unidirectional association>)
	  relation 4189570 --->
	    a role_name "horizontalCenter" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4189570 // horizontalCenter (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189698 // verticalCenter (<unidirectional association>)
	  relation 4189698 --->
	    a role_name "verticalCenter" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4189698 // verticalCenter (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189826 // baseline (<unidirectional association>)
	  relation 4189826 --->
	    a role_name "baseline" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4189826 // baseline (<unidirectional association>)
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4189954 // horizontalHistory (<unidirectional association>)
	  relation 4189954 --->
	    a role_name "horizontalHistory" init_value " new ArrayList<String>(2)" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 4189954 // horizontalHistory (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 4190082 // verticalHistory (<unidirectional association>)
	  relation 4190082 --->
	    a role_name "verticalHistory" init_value " new ArrayList<String>(2)" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 4190082 // verticalHistory (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 4190210 // c (<unidirectional association>)
	  relation 4190210 --->
	    a role_name "c" private
	      comment " Used for baseline calculations
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4190210 // c (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	operation 10825730 "Constraints"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an empty <code>Constraints</code> object.
"
	end

	operation 10825858 "Constraints"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "x" type class_ref 1297922 // Spring
	    param inout name "y" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>Constraints</code> object with the
specified values for its
<code>x</code> and <code>y</code> properties.
The <code>height</code> and <code>width</code> springs
have <code>null</code> values.

@param x  the spring controlling the component's <em>x</em> value
@param y  the spring controlling the component's <em>y</em> value
"
	end

	operation 10825986 "Constraints"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "x" type class_ref 1297922 // Spring
	    param inout name "y" type class_ref 1297922 // Spring
	    param inout name "width" type class_ref 1297922 // Spring
	    param inout name "height" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>Constraints</code> object with the
specified values for its
<code>x</code>, <code>y</code>, <code>width</code>,
and <code>height</code> properties.
Note: If the <code>SpringLayout</code> class
encounters <code>null</code> values in the
<code>Constraints</code> object of a given component,
it replaces them with suitable defaults.

@param x  the spring value for the <code>x</code> property
@param y  the spring value for the <code>y</code> property
@param width  the spring value for the <code>width</code> property
@param height  the spring value for the <code>height</code> property
"
	end

	operation 10826114 "Constraints"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a <code>Constraints</code> object with
suitable <code>x</code>, <code>y</code>, <code>width</code> and
<code>height</code> springs for component, <code>c</code>.
The <code>x</code> and <code>y</code> springs are constant
springs  initialised with the component's location at
the time this method is called. The <code>width</code> and
<code>height</code> springs are special springs, created by
the <code>Spring.width()</code> and <code>Spring.height()</code>
methods, which track the size characteristics of the component
when they change.

@param c  the component whose characteristics will be reflected by this Constraints object
@throws NullPointerException if <code>c</code> is null.
@since 1.5
"
	end

	operation 10826242 "pushConstraint"
	  private explicit_return_type "void"
	  nparams 3
	    param inout name "name" type class_ref 128130 // String
	    param inout name "value" type class_ref 1297922 // Spring
	    param inout name "horizontal" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10826370 "sum"
	  private return_type class_ref 1297922 // Spring
	  nparams 2
	    param inout name "s1" type class_ref 1297922 // Spring
	    param inout name "s2" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10826498 "difference"
	  private return_type class_ref 1297922 // Spring
	  nparams 2
	    param inout name "s1" type class_ref 1297922 // Spring
	    param inout name "s2" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10826626 "scale"
	  private return_type class_ref 1297922 // Spring
	  nparams 2
	    param inout name "s" type class_ref 1297922 // Spring
	    param in name "factor" explicit_type "float"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10826754 "getBaselineFromHeight"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "height" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10826882 "getHeightFromBaseLine"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "baseline" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10827010 "heightToRelativeBaseline"
	  private return_type class_ref 1297922 // Spring
	  nparams 1
	    param inout name "s" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10827138 "relativeBaselineToHeight"
	  private return_type class_ref 1297922 // Spring
	  nparams 1
	    param inout name "s" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10827266 "defined"
	  private explicit_return_type "boolean"
	  nparams 3
	    param inout name "history" type class_ref 175362 // List
	    param inout name "s1" type class_ref 128130 // String
	    param inout name "s2" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10827394 "setX"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "x" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>x</code> property,
which controls the <code>x</code> value
of a component's location.

@param x the spring controlling the <code>x</code> value
         of a component's location

@see #getX
@see SpringLayout.Constraints
"
	end

	operation 10827522 "getX"
	  public return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of the <code>x</code> property.

@return the spring controlling the <code>x</code> value
        of a component's location

@see #setX
@see SpringLayout.Constraints
"
	end

	operation 10827650 "setY"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "y" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>y</code> property,
which controls the <code>y</code> value
of a component's location.

@param y the spring controlling the <code>y</code> value
         of a component's location

@see #getY
@see SpringLayout.Constraints
"
	end

	operation 10827778 "getY"
	  public return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of the <code>y</code> property.

@return the spring controlling the <code>y</code> value
        of a component's location

@see #setY
@see SpringLayout.Constraints
"
	end

	operation 10827906 "setWidth"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "width" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>width</code> property,
which controls the width of a component.

@param width the spring controlling the width of this
<code>Constraints</code> object

@see #getWidth
@see SpringLayout.Constraints
"
	end

	operation 10828034 "getWidth"
	  public return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of the <code>width</code> property.

@return the spring controlling the width of a component

@see #setWidth
@see SpringLayout.Constraints
"
	end

	operation 10828162 "setHeight"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "height" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>height</code> property,
which controls the height of a component.

@param height the spring controlling the height of this <code>Constraints</code>
object

@see #getHeight
@see SpringLayout.Constraints
"
	end

	operation 10828290 "getHeight"
	  public return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of the <code>height</code> property.

@return the spring controlling the height of a component

@see #setHeight
@see SpringLayout.Constraints
"
	end

	operation 10828418 "setEast"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "east" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10828546 "getEast"
	  private return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10828674 "setSouth"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "south" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10828802 "getSouth"
	  private return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10828930 "getHorizontalCenter"
	  private return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10829058 "setHorizontalCenter"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "horizontalCenter" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10829186 "getVerticalCenter"
	  private return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10829314 "setVerticalCenter"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "verticalCenter" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10829442 "getBaseline"
	  private return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10829570 "setBaseline"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "baseline" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10829698 "setConstraint"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "edgeName" type class_ref 128130 // String
	    param inout name "s" type class_ref 1297922 // Spring
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the spring controlling the specified edge.
The edge must have one of the following values:
<code>SpringLayout.NORTH</code>,
<code>SpringLayout.SOUTH</code>,
<code>SpringLayout.EAST</code>,
<code>SpringLayout.WEST</code>,
<code>SpringLayout.HORIZONTAL_CENTER</code>,
<code>SpringLayout.VERTICAL_CENTER</code>,
<code>SpringLayout.BASELINE</code>,
<code>SpringLayout.WIDTH</code> or
<code>SpringLayout.HEIGHT</code>.
For any other <code>String</code> value passed as the edge,
no action is taken. For a <code>null</code> edge, a
<code>NullPointerException</code> is thrown.
<p>
<b>Note:</b> This method can affect {@code x} and {@code y} values
previously set for this {@code Constraints}.

@param edgeName the edge to be set
@param s the spring controlling the specified edge

@throws NullPointerException if <code>edgeName</code> is <code>null</code>

@see #getConstraint
@see #NORTH
@see #SOUTH
@see #EAST
@see #WEST
@see #HORIZONTAL_CENTER
@see #VERTICAL_CENTER
@see #BASELINE
@see #WIDTH
@see #HEIGHT
@see SpringLayout.Constraints
"
	end

	operation 10829826 "getConstraint"
	  public return_type class_ref 1297922 // Spring
	  nparams 1
	    param inout name "edgeName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of the specified edge, which may be
a derived value, or even <code>null</code>.
The edge must have one of the following values:
<code>SpringLayout.NORTH</code>,
<code>SpringLayout.SOUTH</code>,
<code>SpringLayout.EAST</code>,
<code>SpringLayout.WEST</code>,
<code>SpringLayout.HORIZONTAL_CENTER</code>,
<code>SpringLayout.VERTICAL_CENTER</code>,
<code>SpringLayout.BASELINE</code>,
<code>SpringLayout.WIDTH</code> or
<code>SpringLayout.HEIGHT</code>.
For any other <code>String</code> value passed as the edge,
<code>null</code> will be returned. Throws
<code>NullPointerException</code> for a <code>null</code> edge.

@param edgeName the edge whose value
                is to be returned

@return the spring controlling the specified edge, may be <code>null</code>

@throws NullPointerException if <code>edgeName</code> is <code>null</code>

@see #setConstraint
@see #NORTH
@see #SOUTH
@see #EAST
@see #WEST
@see #HORIZONTAL_CENTER
@see #VERTICAL_CENTER
@see #BASELINE
@see #WIDTH
@see #HEIGHT
@see SpringLayout.Constraints
"
	end

	operation 10829954 "reset"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "pp"
	end
      end

      class 1299586 "SpringProxy"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4190338 // <generalisation>
	  relation 4190338 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4190338 // <generalisation>
	    b parent class_ref 1297922 // Spring
	end

	classrelation 4190466 // edgeName (<unidirectional association>)
	  relation 4190466 --->
	    a role_name "edgeName" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4190466 // edgeName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 4190594 // c (<unidirectional association>)
	  relation 4190594 --->
	    a role_name "c" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4190594 // c (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	classrelation 4190722 // l (<unidirectional association>)
	  relation 4190722 --->
	    a role_name "l" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4190722 // l (<unidirectional association>)
	    b parent class_ref 1298050 // SpringLayout
	end

	operation 10830082 "SpringProxy"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "edgeName" type class_ref 128130 // String
	    param inout name "c" type class_ref 338818 // Component
	    param inout name "l" type class_ref 1298050 // SpringLayout
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10830210 "getConstraint"
	  private return_type class_ref 1297922 // Spring
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10830338 "getMinimumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10830466 "getPreferredValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10830594 "getMaximumValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10830722 "getValue"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10830850 "setValue"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10830978 "isCyclic"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "l" type class_ref 1298050 // SpringLayout
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "pp"
	end

	operation 10831106 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10831234 "SpringLayout"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SpringLayout</code>.
"
      end

      operation 10831362 "resetCyclicStatuses"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10831490 "setParent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10831618 "isCyclic"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 1297922 // Spring
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "pp"
      end

      operation 10831746 "abandonCycles"
	private return_type class_ref 1297922 // Spring
	nparams 1
	  param inout name "s" type class_ref 1297922 // Spring
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10831874 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " LayoutManager methods.

Has no effect,
since this layout manager does not
use a per-component string.
"
      end

      operation 10832002 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the constraints associated with the specified component.

@param c the component being removed from the container
"
      end

      operation 10832130 "addInsets"
	class_operation private return_type class_ref 316802 // Dimension
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "p" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10832258 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10832386 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10832514 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " LayoutManager2 methods."
      end

      operation 10832642 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If <code>constraints</code> is an instance of
<code>SpringLayout.Constraints</code>,
associates the constraints with the specified component.
<p>
@param   component the component being added
@param   constraints the component's constraints

@see SpringLayout.Constraints
"
      end

      operation 10832770 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "p" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0.5f (centered).
"
      end

      operation 10832898 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "p" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0.5f (centered).
"
      end

      operation 10833026 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10833154 "putConstraint"
	public explicit_return_type "void"
	nparams 5
	  param inout name "e1" type class_ref 128130 // String
	  param inout name "c1" type class_ref 338818 // Component
	  param in name "pad" explicit_type "int"
	  param inout name "e2" type class_ref 128130 // String
	  param inout name "c2" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " End of LayoutManger2 methods

Links edge <code>e1</code> of component <code>c1</code> to
edge <code>e2</code> of component <code>c2</code>,
with a fixed distance between the edges. This
constraint will cause the assignment
<pre>
    value(e1, c1) = value(e2, c2) + pad</pre>
to take place during all subsequent layout operations.
<p>
@param   e1 the edge of the dependent
@param   c1 the component of the dependent
@param   pad the fixed distance between dependent and anchor
@param   e2 the edge of the anchor
@param   c2 the component of the anchor

@see #putConstraint(String, Component, Spring, String, Component)
"
      end

      operation 10833282 "putConstraint"
	public explicit_return_type "void"
	nparams 5
	  param inout name "e1" type class_ref 128130 // String
	  param inout name "c1" type class_ref 338818 // Component
	  param inout name "s" type class_ref 1297922 // Spring
	  param inout name "e2" type class_ref 128130 // String
	  param inout name "c2" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Links edge <code>e1</code> of component <code>c1</code> to
edge <code>e2</code> of component <code>c2</code>. As edge
<code>(e2, c2)</code> changes value, edge <code>(e1, c1)</code> will
be calculated by taking the (spring) sum of <code>(e2, c2)</code>
and <code>s</code>.
Each edge must have one of the following values:
<code>SpringLayout.NORTH</code>,
<code>SpringLayout.SOUTH</code>,
<code>SpringLayout.EAST</code>,
<code>SpringLayout.WEST</code>,
<code>SpringLayout.VERTICAL_CENTER</code>,
<code>SpringLayout.HORIZONTAL_CENTER</code> or
<code>SpringLayout.BASELINE</code>.
<p>
@param   e1 the edge of the dependent
@param   c1 the component of the dependent
@param   s the spring linking dependent and anchor
@param   e2 the edge of the anchor
@param   c2 the component of the anchor

@see #putConstraint(String, Component, int, String, Component)
@see #NORTH
@see #SOUTH
@see #EAST
@see #WEST
@see #VERTICAL_CENTER
@see #HORIZONTAL_CENTER
@see #BASELINE
"
      end

      operation 10833410 "putConstraint"
	private explicit_return_type "void"
	nparams 3
	  param inout name "e" type class_ref 128130 // String
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "s" type class_ref 1297922 // Spring
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10833538 "applyDefaults"
	private return_type class_ref 1299458 // Constraints
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 1299458 // Constraints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10833666 "applyDefaults"
	private explicit_return_type "void"
	nparams 6
	  param inout name "constraints" type class_ref 1299458 // Constraints
	  param inout name "name1" type class_ref 128130 // String
	  param inout name "spring1" type class_ref 1297922 // Spring
	  param inout name "name2" type class_ref 128130 // String
	  param inout name "spring2" type class_ref 1297922 // Spring
	  param inout name "history" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<String> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10833794 "putConstraints"
	private explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 1299458 // Constraints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10833922 "getConstraints"
	public return_type class_ref 1299458 // Constraints
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the constraints for the specified component.
Note that,
unlike the <code>GridBagLayout</code>
<code>getConstraints</code> method,
this method does not clone constraints.
If no constraints
have been associated with this component,
this method
returns a default constraints object positioned at
0,0 relative to the parent's Insets and its width/height
constrained to the minimum, maximum, and preferred sizes of the
component. The size characteristics
are not frozen at the time this method is called;
instead this method returns a constraints object
whose characteristics track the characteristics
of the component as they change.

@param       c the component whose constraints will be returned

@return      the constraints for the specified component
"
      end

      operation 10834050 "getConstraint"
	public return_type class_ref 1297922 // Spring
	nparams 2
	  param inout name "edgeName" type class_ref 128130 // String
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the spring controlling the distance between
the specified edge of
the component and the top or left edge of its parent. This
method, instead of returning the current binding for the
edge, returns a proxy that tracks the characteristics
of the edge even if the edge is subsequently rebound.
Proxies are intended to be used in builder environments
where it is useful to allow the user to define the
constraints for a layout in any order. Proxies do, however,
provide the means to create cyclic dependencies amongst
the constraints of a layout. Such cycles are detected
internally by <code>SpringLayout</code> so that
the layout operation always terminates.

@param edgeName must be one of
<code>SpringLayout.NORTH</code>,
<code>SpringLayout.SOUTH</code>,
<code>SpringLayout.EAST</code>,
<code>SpringLayout.WEST</code>,
<code>SpringLayout.VERTICAL_CENTER</code>,
<code>SpringLayout.HORIZONTAL_CENTER</code> or
<code>SpringLayout.BASELINE</code>
@param c the component whose edge spring is desired

@return a proxy for the spring controlling the distance between the
        specified edge and the top or left edge of its parent

@see #NORTH
@see #SOUTH
@see #EAST
@see #WEST
@see #VERTICAL_CENTER
@see #HORIZONTAL_CENTER
@see #BASELINE
"
      end

      operation 10834178 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1299714 "SwingPaintEventDispatcher"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Swing's PaintEventDispatcher.  If the component specified by the PaintEvent
is a top level Swing component (JFrame, JWindow, JDialog, JApplet), this
will forward the request to the RepaintManager for eventual painting.

"
      attribute 2438530 "SHOW_FROM_DOUBLE_BUFFER"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2438658 "ERASE_BACKGROUND"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 185346 "initialization"
	
	cpp "" ""
	java "  static {
        SHOW_FROM_DOUBLE_BUFFER = \"true\".equals(AccessController.doPrivileged(
              new GetPropertyAction(\"swing.showFromDoubleBuffer\", \"true\")));
        ERASE_BACKGROUND = AccessController.doPrivileged(
                                 new GetBooleanAction(\"swing.nativeErase\"));
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10834306 "createPaintEvent"
	public return_type class_ref 864898 // PaintEvent
	nparams 5
	  param inout name "component" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10834434 "shouldDoNativeBackgroundErase"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10834562 "queueSurfaceDataReplacing"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "r" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1299970 "SwingUtilities"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A collection of utility methods for Swing.

@author unknown
"
      classrelation 4190978 // <realization>
	relation 4190978 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4190978 // <realization>
	  b parent class_ref 360834 // SwingConstants
      end

      attribute 2438786 "canAccessEventQueue"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These states are system-wide, rather than AppContext wide.
"
      end

      attribute 2438914 "eventQueueTested"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2439042 "suppressDropSupport"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates if we should change the drop target when a
{@code TransferHandler} is set.

"
      end

      attribute 2439170 "checkedSuppressDropSupport"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indiciates if we've checked the system property for suppressing
drop support.

"
      end

      operation 10834690 "getSuppressDropTarget"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if <code>setTransferHandler</code> should change the
<code>DropTarget</code>.
"
      end

      operation 10834818 "installSwingDropTargetAsNecessary"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "t" type class_ref 351362 // TransferHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Installs a {@code DropTarget} on the component as necessary for a
{@code TransferHandler} change.
"
      end

      operation 10834946 "isRectangleContainingRectangle"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 314114 // Rectangle
	  param inout name "b" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if <code>a</code> contains <code>b</code>
"
      end

      operation 10835074 "getLocalBounds"
	class_operation public return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the rectangle (0,0,bounds.width,bounds.height) for the component <code>aComponent</code>
"
      end

      operation 10835202 "getWindowAncestor"
	class_operation public return_type class_ref 347394 // Window
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first <code>Window </code> ancestor of <code>c</code>, or
{@code null} if <code>c</code> is not contained inside a <code>Window</code>.

@param c <code>Component</code> to get <code>Window</code> ancestor
       of.
@return the first <code>Window </code> ancestor of <code>c</code>, or
        {@code null} if <code>c</code> is not contained inside a
        <code>Window</code>.
@since 1.3
"
      end

      operation 10835330 "convertScreenLocationToParent"
	class_operation package return_type class_ref 323714 // Point
	nparams 3
	  param inout name "parent" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the location <code>x</code> <code>y</code> to the
parents coordinate system, returning the location.
"
      end

      operation 10835458 "convertPoint"
	class_operation public return_type class_ref 323714 // Point
	nparams 3
	  param inout name "source" type class_ref 338818 // Component
	  param inout name "aPoint" type class_ref 323714 // Point
	  param inout name "destination" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a <code>aPoint</code> in <code>source</code> coordinate system to
<code>destination</code> coordinate system.
If <code>source</code> is {@code null}, <code>aPoint</code> is assumed to be in <code>destination</code>'s
root component coordinate system.
If <code>destination</code> is {@code null}, <code>aPoint</code> will be converted to <code>source</code>'s
root component coordinate system.
If both <code>source</code> and <code>destination</code> are {@code null}, return <code>aPoint</code>
without any conversion.
"
      end

      operation 10835586 "convertPoint"
	class_operation public return_type class_ref 323714 // Point
	nparams 4
	  param inout name "source" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "destination" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert the point <code>(x,y)</code> in <code>source</code> coordinate system to
<code>destination</code> coordinate system.
If <code>source</code> is {@code null}, <code>(x,y)</code> is assumed to be in <code>destination</code>'s
root component coordinate system.
If <code>destination</code> is {@code null}, <code>(x,y)</code> will be converted to <code>source</code>'s
root component coordinate system.
If both <code>source</code> and <code>destination</code> are {@code null}, return <code>(x,y)</code>
without any conversion.
"
      end

      operation 10835714 "convertRectangle"
	class_operation public return_type class_ref 314114 // Rectangle
	nparams 3
	  param inout name "source" type class_ref 338818 // Component
	  param inout name "aRectangle" type class_ref 314114 // Rectangle
	  param inout name "destination" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert the rectangle <code>aRectangle</code> in <code>source</code> coordinate system to
<code>destination</code> coordinate system.
If <code>source</code> is {@code null}, <code>aRectangle</code> is assumed to be in <code>destination</code>'s
root component coordinate system.
If <code>destination</code> is {@code null}, <code>aRectangle</code> will be converted to <code>source</code>'s
root component coordinate system.
If both <code>source</code> and <code>destination</code> are {@code null}, return <code>aRectangle</code>
without any conversion.
"
      end

      operation 10835842 "getAncestorOfClass"
	class_operation public return_type class_ref 338690 // Container
	nparams 2
	  param inout name "c" type class_ref 130818 // Class
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for searching above <code>comp</code> in the
component hierarchy and returns the first object of class <code>c</code> it
finds. Can return {@code null}, if a class <code>c</code> cannot be found.
"
      end

      operation 10835970 "getAncestorNamed"
	class_operation public return_type class_ref 338690 // Container
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for searching above <code>comp</code> in the
component hierarchy and returns the first object of <code>name</code> it
finds. Can return {@code null}, if <code>name</code> cannot be found.
"
      end

      operation 10836098 "getDeepestComponentAt"
	class_operation public return_type class_ref 338818 // Component
	nparams 3
	  param inout name "parent" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the deepest visible descendent Component of <code>parent</code>
that contains the location <code>x</code>, <code>y</code>.
If <code>parent</code> does not contain the specified location,
then <code>null</code> is returned.  If <code>parent</code> is not a
container, or none of <code>parent</code>'s visible descendents
contain the specified location, <code>parent</code> is returned.

@param parent the root component to begin the search
@param x the x target location
@param y the y target location
"
      end

      operation 10836226 "convertMouseEvent"
	class_operation public return_type class_ref 346626 // MouseEvent
	nparams 3
	  param inout name "source" type class_ref 338818 // Component
	  param inout name "sourceEvent" type class_ref 346626 // MouseEvent
	  param inout name "destination" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a MouseEvent similar to <code>sourceEvent</code> except that its x
and y members have been converted to <code>destination</code>'s coordinate
system.  If <code>source</code> is {@code null}, <code>sourceEvent</code> x and y members
are assumed to be into <code>destination</code>'s root component coordinate system.
If <code>destination</code> is <code>null</code>, the
returned MouseEvent will be in <code>source</code>'s coordinate system.
<code>sourceEvent</code> will not be changed. A new event is returned.
the <code>source</code> field of the returned event will be set
to <code>destination</code> if destination is non-{@code null}
use the translateMouseEvent() method to translate a mouse event from
one component to another without changing the source.
"
      end

      operation 10836354 "convertPointToScreen"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 323714 // Point
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a point from a component's coordinate system to
screen coordinates.

@param p  a Point object (converted to the new coordinate system)
@param c  a Component object
"
      end

      operation 10836482 "convertPointFromScreen"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 323714 // Point
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a point from a screen coordinates to a component's
coordinate system

@param p  a Point object (converted to the new coordinate system)
@param c  a Component object
"
      end

      operation 10836610 "windowForComponent"
	class_operation public return_type class_ref 347394 // Window
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first <code>Window </code> ancestor of <code>c</code>, or
{@code null} if <code>c</code> is not contained inside a <code>Window</code>.
<p>
Note: This method provides the same functionality as
<code>getWindowAncestor</code>.

@param c <code>Component</code> to get <code>Window</code> ancestor
       of.
@return the first <code>Window </code> ancestor of <code>c</code>, or
        {@code null} if <code>c</code> is not contained inside a
        <code>Window</code>.
"
      end

      operation 10836738 "isDescendingFrom"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 338818 // Component
	  param inout name "b" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return <code>true</code> if a component <code>a</code> descends from a component <code>b</code>
"
      end

      operation 10836866 "computeIntersection"
	class_operation public return_type class_ref 314114 // Rectangle
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "dest" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience to calculate the intersection of two rectangles
without allocating a new rectangle.
If the two rectangles don't intersect,
then the returned rectangle begins at (0,0)
and has zero width and height.

@param x       the X coordinate of the first rectangle's top-left point
@param y       the Y coordinate of the first rectangle's top-left point
@param width   the width of the first rectangle
@param height  the height of the first rectangle
@param dest    the second rectangle

@return <code>dest</code>, modified to specify the intersection
"
      end

      operation 10836994 "computeUnion"
	class_operation public return_type class_ref 314114 // Rectangle
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "dest" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that calculates the union of two rectangles
without allocating a new rectangle.

@param x the x-coordinate of the first rectangle
@param y the y-coordinate of the first rectangle
@param width the width of the first rectangle
@param height the height of the first rectangle
@param dest  the coordinates of the second rectangle; the union
   of the two rectangles is returned in this rectangle
@return the <code>dest</code> <code>Rectangle</code>
"
      end

      operation 10837122 "computeDifference"
	class_operation public return_type class_ref 314114 // Rectangle
	nparams 2
	  param inout name "rectA" type class_ref 314114 // Rectangle
	  param inout name "rectB" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience returning an array of rect representing the regions within
<code>rectA</code> that do not overlap with <code>rectB</code>. If the
two Rects do not overlap, returns an empty array
"
      end

      operation 10837250 "isLeftMouseButton"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the mouse event specifies the left mouse button.

@param anEvent  a MouseEvent object
@return true if the left mouse button was active
"
      end

      operation 10837378 "isMiddleMouseButton"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the mouse event specifies the middle mouse button.

@param anEvent  a MouseEvent object
@return true if the middle mouse button was active
"
      end

      operation 10837506 "isRightMouseButton"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEvent" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the mouse event specifies the right mouse button.

@param anEvent  a MouseEvent object
@return true if the right mouse button was active
"
      end

      operation 10837634 "computeStringWidth"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "fm" type class_ref 343810 // FontMetrics
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute the width of the string using a font with the specified
\"metrics\" (sizes).

@param fm   a FontMetrics object to compute with
@param str  the String to compute
@return an int containing the string width
"
      end

      operation 10837762 "layoutCompoundLabel"
	class_operation public return_type class_ref 128130 // String
	nparams 12
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "fm" type class_ref 343810 // FontMetrics
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param in name "verticalAlignment" explicit_type "int"
	  param in name "horizontalAlignment" explicit_type "int"
	  param in name "verticalTextPosition" explicit_type "int"
	  param in name "horizontalTextPosition" explicit_type "int"
	  param inout name "viewR" type class_ref 314114 // Rectangle
	  param inout name "iconR" type class_ref 314114 // Rectangle
	  param inout name "textR" type class_ref 314114 // Rectangle
	  param in name "textIconGap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute and return the location of the icons origin, the
location of origin of the text baseline, and a possibly clipped
version of the compound labels string.  Locations are computed
relative to the viewR rectangle.
The JComponents orientation (LEADING/TRAILING) will also be taken
into account and translated into LEFT/RIGHT values accordingly.
"
      end

      operation 10837890 "layoutCompoundLabel"
	class_operation public return_type class_ref 128130 // String
	nparams 11
	  param inout name "fm" type class_ref 343810 // FontMetrics
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param in name "verticalAlignment" explicit_type "int"
	  param in name "horizontalAlignment" explicit_type "int"
	  param in name "verticalTextPosition" explicit_type "int"
	  param in name "horizontalTextPosition" explicit_type "int"
	  param inout name "viewR" type class_ref 314114 // Rectangle
	  param inout name "iconR" type class_ref 314114 // Rectangle
	  param inout name "textR" type class_ref 314114 // Rectangle
	  param in name "textIconGap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute and return the location of the icons origin, the
location of origin of the text baseline, and a possibly clipped
version of the compound labels string.  Locations are computed
relative to the viewR rectangle.
This layoutCompoundLabel() does not know how to handle LEADING/TRAILING
values in horizontalTextPosition (they will default to RIGHT) and in
horizontalAlignment (they will default to CENTER).
Use the other version of layoutCompoundLabel() instead.
"
      end

      operation 10838018 "layoutCompoundLabelImpl"
	class_operation private return_type class_ref 128130 // String
	nparams 12
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "fm" type class_ref 343810 // FontMetrics
	  param inout name "text" type class_ref 128130 // String
	  param inout name "icon" type class_ref 352642 // Icon
	  param in name "verticalAlignment" explicit_type "int"
	  param in name "horizontalAlignment" explicit_type "int"
	  param in name "verticalTextPosition" explicit_type "int"
	  param in name "horizontalTextPosition" explicit_type "int"
	  param inout name "viewR" type class_ref 314114 // Rectangle
	  param inout name "iconR" type class_ref 314114 // Rectangle
	  param inout name "textR" type class_ref 314114 // Rectangle
	  param in name "textIconGap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute and return the location of the icons origin, the
location of origin of the text baseline, and a possibly clipped
version of the compound labels string.  Locations are computed
relative to the viewR rectangle.
This layoutCompoundLabel() does not know how to handle LEADING/TRAILING
values in horizontalTextPosition (they will default to RIGHT) and in
horizontalAlignment (they will default to CENTER).
Use the other version of layoutCompoundLabel() instead.
"
      end

      operation 10838146 "paintComponent"
	class_operation public explicit_return_type "void"
	nparams 7
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints a component to the specified <code>Graphics</code>.
This method is primarily useful to render
<code>Component</code>s that don't exist as part of the visible
containment hierarchy, but are used for rendering.  For
example, if you are doing your own rendering and want to render
some text (or even HTML), you could make use of
<code>JLabel</code>'s text rendering support and have it paint
directly by way of this method, without adding the label to the
visible containment hierarchy.
<p>
This method makes use of <code>CellRendererPane</code> to handle
the actual painting, and is only recommended if you use one
component for rendering.  If you make use of multiple components
to handle the rendering, as <code>JTable</code> does, use
<code>CellRendererPane</code> directly.  Otherwise, as described
below, you could end up with a <code>CellRendererPane</code>
per <code>Component</code>.
<p>
If <code>c</code>'s parent is not a <code>CellRendererPane</code>,
a new <code>CellRendererPane</code> is created, <code>c</code> is
added to it, and the <code>CellRendererPane</code> is added to
<code>p</code>.  If <code>c</code>'s parent is a
<code>CellRendererPane</code> and the <code>CellRendererPane</code>s
parent is not <code>p</code>, it is added to <code>p</code>.
<p>
The component should either descend from <code>JComponent</code>
or be another kind of lightweight component.
A lightweight component is one whose \"lightweight\" property
(returned by the <code>Component</code>
<code>isLightweight</code> method)
is true. If the Component is not lightweight, bad things map happen:
crashes, exceptions, painting problems...

@param g  the <code>Graphics</code> object to draw on
@param c  the <code>Component</code> to draw
@param p  the intermediate <code>Container</code>
@param x  an int specifying the left side of the area draw in, in pixels,
          measured from the left edge of the graphics context
@param y  an int specifying the top of the area to draw in, in pixels
          measured down from the top edge of the graphics context
@param w  an int specifying the width of the area draw in, in pixels
@param h  an int specifying the height of the area draw in, in pixels

@see CellRendererPane
@see java.awt.Component#isLightweight
"
      end

      operation 10838274 "paintComponent"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "g" type class_ref 343682 // Graphics
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 338690 // Container
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints a component to the specified <code>Graphics</code>.  This
is a cover method for
{@link #paintComponent(Graphics,Component,Container,int,int,int,int)}.
Refer to it for more information.

@param g  the <code>Graphics</code> object to draw on
@param c  the <code>Component</code> to draw
@param p  the intermediate <code>Container</code>
@param r  the <code>Rectangle</code> to draw in

@see #paintComponent(Graphics,Component,Container,int,int,int,int)
@see CellRendererPane
"
      end

      operation 10838402 "getCellRendererPane"
	class_operation private return_type class_ref 389122 // CellRendererPane
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that cell renderer <code>c</code> has a
<code>ComponentShell</code> parent and that
the shell's parent is p.
"
      end

      operation 10838530 "updateComponentTreeUI"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A simple minded look and feel change: ask each node in the tree
to <code>updateUI()</code> -- that is, to initialize its UI property
with the current look and feel.
"
      end

      operation 10838658 "updateComponentTreeUI0"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10838786 "invokeLater"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "doRun" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes <i>doRun.run()</i> to be executed asynchronously on the
AWT event dispatching thread.  This will happen after all
pending AWT events have been processed.  This method should
be used when an application thread needs to update the GUI.
In the following example the <code>invokeLater</code> call queues
the <code>Runnable</code> object <code>doHelloWorld</code>
on the event dispatching thread and
then prints a message.
<pre>
Runnable doHelloWorld = new Runnable() {
    public void run() {
        System.out.println(\"Hello World on \" + Thread.currentThread());
    }
};

SwingUtilities.invokeLater(doHelloWorld);
System.out.println(\"This might well be displayed before the other message.\");
</pre>
If invokeLater is called from the event dispatching thread --
for example, from a JButton's ActionListener -- the <i>doRun.run()</i> will
still be deferred until all pending events have been processed.
Note that if the <i>doRun.run()</i> throws an uncaught exception
the event dispatching thread will unwind (not the current thread).
<p>
Additional documentation and examples for this method can be
found in
<A HREF=\"https://docs.oracle.com/javase/tutorial/uiswing/concurrency/index.html\">Concurrency in Swing</a>.
<p>
As of 1.3 this method is just a cover for <code>java.awt.EventQueue.invokeLater()</code>.
<p>
Unlike the rest of Swing, this method can be invoked from any thread.

@see #invokeAndWait
"
      end

      operation 10838914 "invokeAndWait"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "doRun" type class_ref 128770 // Runnable
	nexceptions 2
	  exception class_ref 129666 // InterruptedException
	  exception class_ref 193410 // InvocationTargetException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes <code>doRun.run()</code> to be executed synchronously on the
AWT event dispatching thread.  This call blocks until
all pending AWT events have been processed and (then)
<code>doRun.run()</code> returns. This method should
be used when an application thread needs to update the GUI.
It shouldn't be called from the event dispatching thread.
Here's an example that creates a new application thread
that uses <code>invokeAndWait</code> to print a string from the event
dispatching thread and then, when that's finished, print
a string from the application thread.
<pre>
final Runnable doHelloWorld = new Runnable() {
    public void run() {
        System.out.println(\"Hello World on \" + Thread.currentThread());
    }
};

Thread appThread = new Thread() {
    public void run() {
        try {
            SwingUtilities.invokeAndWait(doHelloWorld);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println(\"Finished on \" + Thread.currentThread());
    }
};
appThread.start();
</pre>
Note that if the <code>Runnable.run</code> method throws an
uncaught exception
(on the event dispatching thread) it's caught and rethrown, as
an <code>InvocationTargetException</code>, on the caller's thread.
<p>
Additional documentation and examples for this method can be
found in
<A HREF=\"https://docs.oracle.com/javase/tutorial/uiswing/concurrency/index.html\">Concurrency in Swing</a>.
<p>
As of 1.3 this method is just a cover for
<code>java.awt.EventQueue.invokeAndWait()</code>.

@exception  InterruptedException if we're interrupted while waiting for
            the event dispatching thread to finish executing
            <code>doRun.run()</code>
@exception  InvocationTargetException  if an exception is thrown
            while running <code>doRun</code>

@see #invokeLater
"
      end

      operation 10839042 "isEventDispatchThread"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current thread is an AWT event dispatching thread.
<p>
As of 1.3 this method is just a cover for
<code>java.awt.EventQueue.isDispatchThread()</code>.

@return true if the current thread is an AWT event dispatching thread
"
      end

      operation 10839170 "getAccessibleIndexInParent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--- Accessibility Support ---



Get the index of this object in its accessible parent.<p>

Note: as of the Java 2 platform v1.3, it is recommended that developers call
Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead
of using this method.

@return -1 of this object does not have an accessible parent.
Otherwise, the index of the child in its accessible parent.
"
      end

      operation 10839298 "getAccessibleAt"
	class_operation public return_type class_ref 347778 // Accessible
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Accessible</code> child contained at the
local coordinate <code>Point</code>, if one exists.
Otherwise returns <code>null</code>.

@return the <code>Accessible</code> at the specified location,
   if it exists; otherwise <code>null</code>
"
      end

      operation 10839426 "getAccessibleStateSet"
	class_operation public return_type class_ref 348162 // AccessibleStateSet
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the state of this object. <p>

Note: as of the Java 2 platform v1.3, it is recommended that developers call
Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead
of using this method.

@return an instance of AccessibleStateSet containing the current state
set of the object
@see AccessibleState
"
      end

      operation 10839554 "getAccessibleChildrenCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of accessible children in the object.  If all
of the children of this object implement Accessible, than this
method should return the number of children of this object. <p>

Note: as of the Java 2 platform v1.3, it is recommended that developers call
Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead
of using this method.

@return the number of accessible children in the object.
"
      end

      operation 10839682 "getAccessibleChild"
	class_operation public return_type class_ref 347778 // Accessible
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the nth Accessible child of the object. <p>

Note: as of the Java 2 platform v1.3, it is recommended that developers call
Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead
of using this method.

@param i zero-based index of child
@return the nth Accessible child of the object
"
      end

      operation 10839810 "findFocusOwner"
	class_operation public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Return the child <code>Component</code> of the specified
<code>Component</code> that is the focus owner, if any.

@param c the root of the <code>Component</code> hierarchy to
       search for the focus owner
@return the focus owner, or <code>null</code> if there is no focus
        owner, or if the focus owner is not <code>comp</code>, or a
        descendant of <code>comp</code>

@see java.awt.KeyboardFocusManager#getFocusOwner
@deprecated As of 1.4, replaced by
  <code>KeyboardFocusManager.getFocusOwner()</code>.
"
      end

      operation 10839938 "getRootPane"
	class_operation public return_type class_ref 434050 // JRootPane
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If c is a JRootPane descendant return its JRootPane ancestor.
If c is a RootPaneContainer then return its JRootPane.
@return the JRootPane for Component c or {@code null}.
"
      end

      operation 10840066 "getRoot"
	class_operation public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the root component for the current component tree.
@return the first ancestor of c that's a Window or the last Applet ancestor
"
      end

      operation 10840194 "getPaintingOrigin"
	class_operation package return_type class_ref 338434 // JComponent
	nparams 1
	  param inout name "c" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10840322 "processKeyBindings"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process the key bindings for the <code>Component</code> associated with
<code>event</code>. This method is only useful if
<code>event.getComponent()</code> does not descend from
<code>JComponent</code>, or your are not invoking
<code>super.processKeyEvent</code> from within your
<code>JComponent</code> subclass. <code>JComponent</code>
automatically processes bindings from within its
<code>processKeyEvent</code> method, hence you rarely need
to directly invoke this method.

@param event KeyEvent used to identify which bindings to process, as
             well as which Component has focus.
@return true if a binding has found and processed
@since 1.4
"
      end

      operation 10840450 "isValidKeyEventForKeyBindings"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the <code>e</code> is a valid KeyEvent to use in
processing the key bindings associated with JComponents.
"
      end

      operation 10840578 "notifyAction"
	class_operation public explicit_return_type "boolean"
	nparams 5
	  param inout name "action" type class_ref 352258 // Action
	  param inout name "ks" type class_ref 356610 // KeyStroke
	  param inout name "event" type class_ref 346498 // KeyEvent
	  param inout name "sender" type class_ref 129538 // Object
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes <code>actionPerformed</code> on <code>action</code> if
<code>action</code> is enabled (and non-{@code null}). The command for the
ActionEvent is determined by:
<ol>
  <li>If the action was registered via
      <code>registerKeyboardAction</code>, then the command string
      passed in ({@code null} will be used if {@code null} was passed in).
  <li>Action value with name Action.ACTION_COMMAND_KEY, unless {@code null}.
  <li>String value of the KeyEvent, unless <code>getKeyChar</code>
      returns KeyEvent.CHAR_UNDEFINED..
</ol>
This will return true if <code>action</code> is non-{@code null} and
actionPerformed is invoked on it.

@since 1.3
"
      end

      operation 10840706 "replaceUIInputMap"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "component" type class_ref 338434 // JComponent
	  param in name "type" explicit_type "int"
	  param inout name "uiInputMap" type class_ref 357634 // InputMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to change the UI InputMap for <code>component</code>
to <code>uiInputMap</code>. If <code>uiInputMap</code> is {@code null},
this removes any previously installed UI InputMap.

@since 1.3
"
      end

      operation 10840834 "replaceUIActionMap"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338434 // JComponent
	  param inout name "uiActionMap" type class_ref 357890 // ActionMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to change the UI ActionMap for <code>component</code>
to <code>uiActionMap</code>. If <code>uiActionMap</code> is {@code null},
this removes any previously installed UI ActionMap.

@since 1.3
"
      end

      operation 10840962 "getUIInputMap"
	class_operation public return_type class_ref 357634 // InputMap
	nparams 2
	  param inout name "component" type class_ref 338434 // JComponent
	  param in name "condition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the InputMap provided by the UI for condition
<code>condition</code> in component <code>component</code>.
<p>This will return {@code null} if the UI has not installed a InputMap
of the specified type.

@since 1.3
"
      end

      operation 10841090 "getUIActionMap"
	class_operation public return_type class_ref 357890 // ActionMap
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ActionMap provided by the UI
in component <code>component</code>.
<p>This will return {@code null} if the UI has not installed an ActionMap.

@since 1.3
"
      end

      classrelation 4191106 // sharedOwnerFrameKey (<unidirectional association>)
	relation 4191106 --->
	  a role_name "sharedOwnerFrameKey" init_value "
       new StringBuffer(\"SwingUtilities.sharedOwnerFrame\")" class_relation const_relation private
	    comment " Don't use String, as it's not guaranteed to be unique in a Hashtable.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4191106 // sharedOwnerFrameKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      class 1300098 "SharedOwnerFrame"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4191234 // <generalisation>
	  relation 4191234 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4191234 // <generalisation>
	    b parent class_ref 393346 // Frame
	end

	classrelation 4191362 // <realization>
	  relation 4191362 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4191362 // <realization>
	    b parent class_ref 433794 // WindowListener
	end

	operation 10841218 "addNotify"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10841346 "installListeners"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Install window listeners on owned windows to watch for displayability changes
"
	end

	operation 10841474 "windowClosed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Watches for displayability changes and disposes shared instance if there are no
displayable children left.
"
	end

	operation 10841602 "windowOpened"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10841730 "windowClosing"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10841858 "windowIconified"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10841986 "windowDeiconified"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10842114 "windowActivated"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10842242 "windowDeactivated"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 423938 // WindowEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10842370 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10842498 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10842626 "getSharedOwnerFrame"
	class_operation package return_type class_ref 393346 // Frame
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a toolkit-private, shared, invisible Frame
to be the owner for JDialogs and JWindows created with
{@code null} owners.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10842754 "getSharedOwnerFrameShutdownListener"
	class_operation package return_type class_ref 433794 // WindowListener
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a SharedOwnerFrame's shutdown listener to dispose the SharedOwnerFrame
if it has no more displayable children.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 10842882 "appContextGet"
	class_operation package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Don't make these AppContext accessors public or protected --
since AppContext is in sun.awt in 1.2, we shouldn't expose it
even indirectly with a public API.

 REMIND(aim): phase out use of 4 methods below since they
 are just private covers for AWT methods (?)"
      end

      operation 10843010 "appContextPut"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10843138 "appContextRemove"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10843266 "loadSystemClass"
	class_operation package return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10843394 "isLeftToRight"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for determining ComponentOrientation.  Helps us
avoid having Munge directives throughout the code.
"
      end

      operation 10843522 "SwingUtilities"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10843650 "doesIconReferenceImage"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "icon" type class_ref 352642 // Icon
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the Icon <code>icon</code> is an instance of
ImageIcon, and the image it contains is the same as <code>image</code>.
"
      end

      operation 10843778 "findDisplayedMnemonicIndex"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "mnemonic" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns index of the first occurrence of <code>mnemonic</code>
within string <code>text</code>. Matching algorithm is not
case-sensitive.

@param text The text to search through, may be {@code null}
@param mnemonic The mnemonic to find the character for.
@return index into the string if exists, otherwise -1
"
      end

      operation 10843906 "calculateInnerArea"
	class_operation public return_type class_ref 314114 // Rectangle
	nparams 2
	  param inout name "c" type class_ref 338434 // JComponent
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the position and size of
the inner painting area of the specified component
in <code>r</code> and returns <code>r</code>.
The position and size specify the bounds of the component,
adjusted so as not to include the border area (the insets).
This method is useful for classes
that implement painting code.

@param c  the JComponent in question; if {@code null}, this method returns {@code null}
@param r  the Rectangle instance to be modified;
          may be {@code null}
@return {@code null} if the Component is {@code null};
        otherwise, returns the passed-in rectangle (if non-{@code null})
        or a new rectangle specifying position and size information

@since 1.4
"
      end

      operation 10844034 "updateRendererOrEditorUI"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "rendererOrEditor" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10844162 "getUnwrappedParent"
	class_operation public return_type class_ref 338690 // Container
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first ancestor of the {@code component}
which is not an instance of {@link JLayer}.

@param component {@code Component} to get
the first ancestor of, which is not a {@link JLayer} instance.

@return the first ancestor of the {@code component}
which is not an instance of {@link JLayer}.
If such an ancestor can not be found, {@code null} is returned.

@throws NullPointerException if {@code component} is {@code null}
@see JLayer

@since 1.7
"
      end

      operation 10844290 "getUnwrappedView"
	class_operation public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "viewport" type class_ref 438530 // JViewport
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first {@code JViewport}'s descendant
which is not an instance of {@code JLayer}.
If such a descendant can not be found, {@code null} is returned.

If the {@code viewport}'s view component is not a {@code JLayer},
this method is equivalent to {@link JViewport#getView()}
otherwise {@link JLayer#getView()} will be recursively
called on all descending {@code JLayer}s.

@param viewport {@code JViewport} to get the first descendant of,
which in not a {@code JLayer} instance.

@return the first {@code JViewport}'s descendant
which is not an instance of {@code JLayer}.
If such a descendant can not be found, {@code null} is returned.

@throws NullPointerException if {@code viewport} is {@code null}
@see JViewport#getView()
@see JLayer

@since 1.7
"
      end

      operation 10844418 "getValidateRoot"
	class_operation package return_type class_ref 338690 // Container
	nparams 2
	  param inout name "c" type class_ref 338690 // Container
	  param inout name "visibleOnly" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the validate root of a given container.

If the container is contained within a {@code CellRendererPane}, this
method returns {@code null} due to the synthetic nature of the {@code
CellRendererPane}.
<p>
The component hierarchy must be displayable up to the toplevel component
(either a {@code Frame} or an {@code Applet} object.) Otherwise this
method returns {@code null}.
<p>
If the {@code visibleOnly} argument is {@code true}, the found validate
root and all its parents up to the toplevel component must also be
visible. Otherwise this method returns {@code null}.

@return the validate root of the given container or null
@see java.awt.Component#isDisplayable()
@see java.awt.Component#isVisible()
@since 1.7
"
      end
    end

    class 1300226 "TablePrintable"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of <code>Printable</code> for printing
<code>JTable</code>s.
<p>
This implementation spreads table rows naturally in sequence
across multiple pages, fitting as many rows as possible per page.
The distribution of columns, on the other hand, is controlled by a
printing mode parameter passed to the constructor. When
<code>JTable.PrintMode.NORMAL</code> is used, the implementation
handles columns in a similar manner to how it handles rows, spreading them
across multiple pages (in an order consistent with the table's
<code>ComponentOrientation</code>).
When <code>JTable.PrintMode.FIT_WIDTH</code> is given, the implementation
scales the output smaller if necessary, to ensure that all columns fit on
the page. (Note that width and height are scaled equally, ensuring that the
aspect ratio remains the same).
<p>
The portion of table printed on each page is headed by the
appropriate section of the table's <code>JTableHeader</code>.
<p>
Header and footer text can be added to the output by providing
<code>MessageFormat</code> instances to the constructor. The
printing code requests Strings from the formats by calling
their <code>format</code> method with a single parameter:
an <code>Object</code> array containing a single element of type
<code>Integer</code>, representing the current page number.
<p>
There are certain circumstances where this <code>Printable</code>
cannot fit items appropriately, resulting in clipped output.
These are:
<ul>
  <li>In any mode, when the header or footer text is too wide to
      fit completely in the printable area. The implementation
      prints as much of the text as possible starting from the beginning,
      as determined by the table's <code>ComponentOrientation</code>.
  <li>In any mode, when a row is too tall to fit in the
      printable area. The upper most portion of the row
      is printed and no lower border is shown.
  <li>In <code>JTable.PrintMode.NORMAL</code> when a column
      is too wide to fit in the printable area. The center of the
      column is printed and no left and right borders are shown.
</ul>
<p>
It is entirely valid for a developer to wrap this <code>Printable</code>
inside another in order to create complex reports and documents. They may
even request that different pages be rendered into different sized
printable areas. The implementation was designed to handle this by
performing most of its calculations on the fly. However, providing different
sizes works best when <code>JTable.PrintMode.FIT_WIDTH</code> is used, or
when only the printable width is changed between pages. This is because when
it is printing a set of rows in <code>JTable.PrintMode.NORMAL</code> and the
implementation determines a need to distribute columns across pages,
it assumes that all of those rows will fit on each subsequent page needed
to fit the columns.
<p>
It is the responsibility of the developer to ensure that the table is not
modified in any way after this <code>Printable</code> is created (invalid
modifications include changes in: size, renderers, or underlying data).
The behavior of this <code>Printable</code> is undefined if the table is
changed at any time after creation.

@author  Shannon Hickey
"
      classrelation 4191490 // <realization>
	relation 4191490 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4191490 // <realization>
	  b parent class_ref 428674 // Printable
      end

      classrelation 4191618 // table (<unidirectional association>)
	relation 4191618 --->
	  a role_name "table" private
	    comment " The table to print. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4191618 // table (<unidirectional association>)
	  b parent class_ref 475010 // JTable
      end

      classrelation 4191746 // header (<unidirectional association>)
	relation 4191746 --->
	  a role_name "header" private
	    comment " For quick reference to the table's header. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4191746 // header (<unidirectional association>)
	  b parent class_ref 474114 // JTableHeader
      end

      classrelation 4191874 // colModel (<unidirectional association>)
	relation 4191874 --->
	  a role_name "colModel" private
	    comment " For quick reference to the table's column model. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4191874 // colModel (<unidirectional association>)
	  b parent class_ref 1292802 // TableColumnModel
      end

      attribute 2439298 "totalColWidth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " To save multiple calculations of total column width. 
"
      end

      classrelation 4192002 // printMode (<unidirectional association>)
	relation 4192002 --->
	  a role_name "printMode" private
	    comment " The printing mode of this printable. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192002 // printMode (<unidirectional association>)
	  b parent class_ref 1292546 // PrintMode
      end

      classrelation 4192130 // headerFormat (<unidirectional association>)
	relation 4192130 --->
	  a role_name "headerFormat" private
	    comment " Provides the header text for the table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192130 // headerFormat (<unidirectional association>)
	  b parent class_ref 428290 // MessageFormat
      end

      classrelation 4192258 // footerFormat (<unidirectional association>)
	relation 4192258 --->
	  a role_name "footerFormat" private
	    comment " Provides the footer text for the table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192258 // footerFormat (<unidirectional association>)
	  b parent class_ref 428290 // MessageFormat
      end

      attribute 2439426 "last"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The most recent page index asked to print. 
"
      end

      attribute 2439554 "row"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The next row to print. 
"
      end

      attribute 2439682 "col"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The next column to print. 
"
      end

      classrelation 4192386 // clip (<unidirectional association>)
	relation 4192386 --->
	  a role_name "clip" init_value " new Rectangle(0, 0, 0, 0)" const_relation private
	    comment " Used to store an area of the table to be printed. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192386 // clip (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      classrelation 4192514 // hclip (<unidirectional association>)
	relation 4192514 --->
	  a role_name "hclip" init_value " new Rectangle(0, 0, 0, 0)" const_relation private
	    comment " Used to store an area of the table's header to be printed. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192514 // hclip (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      classrelation 4192642 // tempRect (<unidirectional association>)
	relation 4192642 --->
	  a role_name "tempRect" init_value " new Rectangle(0, 0, 0, 0)" const_relation private
	    comment " Saves the creation of multiple rectangles. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192642 // tempRect (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      attribute 2439810 "H_F_SPACE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Vertical space to leave between table and header/footer text. 
"
      end

      attribute 2439938 "HEADER_FONT_SIZE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 18.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Font size for the header text. 
"
      end

      attribute 2440066 "FOOTER_FONT_SIZE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 12.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Font size for the footer text. 
"
      end

      classrelation 4192770 // headerFont (<unidirectional association>)
	relation 4192770 --->
	  a role_name "headerFont" private
	    comment " The font to use in rendering header text. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192770 // headerFont (<unidirectional association>)
	  b parent class_ref 340354 // Font
      end

      classrelation 4192898 // footerFont (<unidirectional association>)
	relation 4192898 --->
	  a role_name "footerFont" private
	    comment " The font to use in rendering footer text. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4192898 // footerFont (<unidirectional association>)
	  b parent class_ref 340354 // Font
      end

      operation 10844546 "TablePrintable"
	public explicit_return_type ""
	nparams 4
	  param inout name "table" type class_ref 475010 // JTable
	  param inout name "printMode" type class_ref 1292546 // PrintMode
	  param inout name "headerFormat" type class_ref 428290 // MessageFormat
	  param inout name "footerFormat" type class_ref 428290 // MessageFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>TablePrintable</code> for the given
<code>JTable</code>. Header and footer text can be specified using the
two <code>MessageFormat</code> parameters. When called upon to provide
a String, each format is given the current page number.

@param  table         the table to print
@param  printMode     the printing mode for this printable
@param  headerFormat  a <code>MessageFormat</code> specifying the text to
                      be used in printing a header, or null for none
@param  footerFormat  a <code>MessageFormat</code> specifying the text to
                      be used in printing a footer, or null for none
@throws IllegalArgumentException if passed an invalid print mode
"
      end

      operation 10844674 "print"
	public explicit_return_type "int"
	nparams 3
	  param inout name "graphics" type class_ref 343682 // Graphics
	  param inout name "pageFormat" type class_ref 901634 // PageFormat
	  param in name "pageIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 428162 // PrinterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the specified page of the table into the given {@link Graphics}
context, in the specified format.

@param   graphics    the context into which the page is drawn
@param   pageFormat  the size and orientation of the page being drawn
@param   pageIndex   the zero based index of the page to be drawn
@return  PAGE_EXISTS if the page is rendered successfully, or
         NO_SUCH_PAGE if a non-existent page index is specified
@throws  PrinterException if an error causes printing to be aborted
"
      end

      operation 10844802 "printText"
	private explicit_return_type "void"
	nparams 5
	  param inout name "g2d" type class_ref 338178 // Graphics2D
	  param inout name "text" type class_ref 128130 // String
	  param inout name "rect" type class_ref 380674 // Rectangle2D
	  param inout name "font" type class_ref 340354 // Font
	  param in name "imgWidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A helper method that encapsulates common code for rendering the
header and footer text.

@param  g2d       the graphics to draw into
@param  text      the text to draw, non null
@param  rect      the bounding rectangle for this text,
                  as calculated at the given font, non null
@param  font      the font to draw the text in, non null
@param  imgWidth  the width of the area to draw into
"
      end

      operation 10844930 "findNextClip"
	private explicit_return_type "void"
	nparams 2
	  param in name "pw" explicit_type "int"
	  param in name "ph" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculate the area of the table to be printed for
the next page. This should only be called if there
are rows and columns left to print.

To avoid an infinite loop in printing, this will
always put at least one cell on each page.

@param  pw  the width of the area to print in
@param  ph  the height of the area to print in
"
      end
    end

    class 1300354 "TimerQueue"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Internal class to manage all Timers using one thread.
TimerQueue manages a queue of Timers. The Timers are chained
together in a linked list sorted by the order in which they will expire.

@author Dave Moore
@author Igor Kushnirskiy
"
      class 1300482 "DelayedTimer"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4194946 // <realization>
	  relation 4194946 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4194946 // <realization>
	    b parent class_ref 1118338 // Delayed
	end

	classrelation 4195074 // sequencer (<unidirectional association>)
	  relation 4195074 --->
	    a role_name "sequencer" init_value " new AtomicLong(0)" class_relation const_relation private
	      comment " most of it copied from
 java.util.concurrent.ScheduledThreadPoolExecutor

Sequence number to break scheduling ties, and in turn to
guarantee FIFO order among tied entries.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4195074 // sequencer (<unidirectional association>)
	    b parent class_ref 256386 // AtomicLong
	end

	attribute 2441090 "sequenceNumber"
	  const_attribute private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Sequence number to break ties FIFO 
"
	end

	attribute 2441218 "time"
	  volatile private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " The time the task is enabled to execute in nanoTime units 
"
	end

	classrelation 4195202 // timer (<unidirectional association>)
	  relation 4195202 --->
	    a role_name "timer" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4195202 // timer (<unidirectional association>)
	    b parent class_ref 354690 // Timer
	end

	operation 10850306 "DelayedTimer"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "timer" type class_ref 354690 // Timer
	    param in name "nanos" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10850434 "getDelay"
	  public explicit_return_type "long"
	  nparams 1
	    param inout name "unit" type class_ref 935938 // TimeUnit
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10850562 "setTime"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "nanos" explicit_type "long"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10850690 "getTimer"
	  package return_type class_ref 354690 // Timer
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10850818 "compareTo"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "other" type class_ref 1118338 // Delayed
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4194178 // <realization>
	relation 4194178 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4194178 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      classrelation 4194306 // sharedInstanceKey (<unidirectional association>)
	relation 4194306 --->
	  a role_name "sharedInstanceKey" init_value "
        new StringBuffer(\"TimerQueue.sharedInstanceKey\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4194306 // sharedInstanceKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4194434 // expiredTimersKey (<unidirectional association>)
	relation 4194434 --->
	  a role_name "expiredTimersKey" init_value "
        new StringBuffer(\"TimerQueue.expiredTimersKey\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4194434 // expiredTimersKey (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4194562 // queue (<unidirectional association>)
	relation 4194562 --->
	  a role_name "queue" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<DelayedTimer> ${name}${value};
"
	    classrelation_ref 4194562 // queue (<unidirectional association>)
	  b parent class_ref 1118466 // DelayQueue
      end

      attribute 2440834 "running"
	volatile private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4194690 // runningLock (<unidirectional association>)
	relation 4194690 --->
	  a role_name "runningLock" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4194690 // runningLock (<unidirectional association>)
	  b parent class_ref 864642 // Lock
      end

      classrelation 4194818 // classLock (<unidirectional association>)
	relation 4194818 --->
	  a role_name "classLock" init_value " new Object()" class_relation const_relation private
	    comment " Lock object used in place of class object for synchronization.
(4187686)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4194818 // classLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2440962 "NANO_ORIGIN"
	class_attribute const_attribute private explicit_type "long"
	init_value " System.nanoTime()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Base of nanosecond timings, to avoid wrapping 
"
      end

      operation 10849026 "TimerQueue"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for TimerQueue.
"
      end

      operation 10849154 "sharedInstance"
	class_operation public return_type class_ref 1300354 // TimerQueue
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10849282 "startIfNeeded"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10849410 "addTimer"
	package explicit_return_type "void"
	nparams 2
	  param inout name "timer" type class_ref 354690 // Timer
	  param in name "delayMillis" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10849538 "addTimer"
	private explicit_return_type "void"
	nparams 1
	  param inout name "delayedTimer" type class_ref 1300482 // DelayedTimer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10849666 "removeTimer"
	package explicit_return_type "void"
	nparams 1
	  param inout name "timer" type class_ref 354690 // Timer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10849794 "containsTimer"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "timer" type class_ref 354690 // Timer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10849922 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10850050 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10850178 "now"
	class_operation private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns nanosecond time offset by origin
"
      end
    end

    class 1300738 "ToolTipManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Manages all the <code>ToolTips</code> in the system.
<p>
ToolTipManager contains numerous properties for configuring how long it
will take for the tooltips to become visible, and how long till they
hide. Consider a component that has a different tooltip based on where
the mouse is, such as JTree. When the mouse moves into the JTree and
over a region that has a valid tooltip, the tooltip will become
visible after <code>initialDelay</code> milliseconds. After
<code>dismissDelay</code> milliseconds the tooltip will be hidden. If
the mouse is over a region that has a valid tooltip, and the tooltip
is currently visible, when the mouse moves to a region that doesn't have
a valid tooltip the tooltip will be hidden. If the mouse then moves back
into a region that has a valid tooltip within <code>reshowDelay</code>
milliseconds, the tooltip will immediately be shown, otherwise the
tooltip will be shown again after <code>initialDelay</code> milliseconds.

@see JComponent#createToolTip
@author Dave Moore
@author Rich Schiavi
"
      classrelation 4195330 // <generalisation>
	relation 4195330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4195330 // <generalisation>
	  b parent class_ref 365698 // MouseAdapter
      end

      classrelation 4195458 // <realization>
	relation 4195458 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4195458 // <realization>
	  b parent class_ref 342658 // MouseMotionListener
      end

      classrelation 4195586 // enterTimer (<unidirectional association>)
	relation 4195586 --->
	  a role_name "enterTimer" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4195586 // enterTimer (<unidirectional association>)
	  b parent class_ref 354690 // Timer
      end

      classrelation 4195714 // exitTimer (<unidirectional association>)
	relation 4195714 --->
	  a role_name "exitTimer" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4195714 // exitTimer (<unidirectional association>)
	  b parent class_ref 354690 // Timer
      end

      classrelation 4195842 // insideTimer (<unidirectional association>)
	relation 4195842 --->
	  a role_name "insideTimer" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4195842 // insideTimer (<unidirectional association>)
	  b parent class_ref 354690 // Timer
      end

      classrelation 4195970 // toolTipText (<unidirectional association>)
	relation 4195970 --->
	  a role_name "toolTipText" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4195970 // toolTipText (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4196098 // preferredLocation (<unidirectional association>)
	relation 4196098 --->
	  a role_name "preferredLocation" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196098 // preferredLocation (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      classrelation 4196226 // insideComponent (<unidirectional association>)
	relation 4196226 --->
	  a role_name "insideComponent" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196226 // insideComponent (<unidirectional association>)
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4196354 // mouseEvent (<unidirectional association>)
	relation 4196354 --->
	  a role_name "mouseEvent" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196354 // mouseEvent (<unidirectional association>)
	  b parent class_ref 346626 // MouseEvent
      end

      attribute 2441346 "showImmediately"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4196482 // TOOL_TIP_MANAGER_KEY (<unidirectional association>)
	relation 4196482 --->
	  a role_name "TOOL_TIP_MANAGER_KEY" init_value " new Object()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196482 // TOOL_TIP_MANAGER_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4196610 // tipWindow (<unidirectional association>)
	relation 4196610 --->
	  a role_name "tipWindow" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196610 // tipWindow (<unidirectional association>)
	  b parent class_ref 393218 // Popup
      end

      classrelation 4196738 // window (<unidirectional association>)
	relation 4196738 --->
	  a role_name "window" private
	    comment " The Window tip is being displayed in. This will be non-null if
the Window tip is in differs from that of insideComponent's Window.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196738 // window (<unidirectional association>)
	  b parent class_ref 347394 // Window
      end

      classrelation 4196866 // tip (<unidirectional association>)
	relation 4196866 --->
	  a role_name "tip" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196866 // tip (<unidirectional association>)
	  b parent class_ref 358018 // JToolTip
      end

      classrelation 4196994 // popupRect (<unidirectional association>)
	relation 4196994 --->
	  a role_name "popupRect" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4196994 // popupRect (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      classrelation 4197122 // popupFrameRect (<unidirectional association>)
	relation 4197122 --->
	  a role_name "popupFrameRect" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4197122 // popupFrameRect (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      attribute 2441474 "enabled"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2441602 "tipShowing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4197250 // focusChangeListener (<unidirectional association>)
	relation 4197250 --->
	  a role_name "focusChangeListener" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4197250 // focusChangeListener (<unidirectional association>)
	  b parent class_ref 342018 // FocusListener
      end

      classrelation 4197378 // moveBeforeEnterListener (<unidirectional association>)
	relation 4197378 --->
	  a role_name "moveBeforeEnterListener" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4197378 // moveBeforeEnterListener (<unidirectional association>)
	  b parent class_ref 342658 // MouseMotionListener
      end

      classrelation 4197506 // accessibilityKeyListener (<unidirectional association>)
	relation 4197506 --->
	  a role_name "accessibilityKeyListener" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4197506 // accessibilityKeyListener (<unidirectional association>)
	  b parent class_ref 342402 // KeyListener
      end

      classrelation 4197634 // postTip (<unidirectional association>)
	relation 4197634 --->
	  a role_name "postTip" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4197634 // postTip (<unidirectional association>)
	  b parent class_ref 356610 // KeyStroke
      end

      classrelation 4197762 // hideTip (<unidirectional association>)
	relation 4197762 --->
	  a role_name "hideTip" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4197762 // hideTip (<unidirectional association>)
	  b parent class_ref 356610 // KeyStroke
      end

      attribute 2441730 "lightWeightPopupEnabled"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " PENDING(ges)
"
      end

      attribute 2441858 "heavyWeightPopupEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10850946 "ToolTipManager"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10851074 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables the tooltip.

@param flag  true to enable the tip, false otherwise
"
      end

      operation 10851202 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this object is enabled.

@return true if this object is enabled, false otherwise
"
      end

      operation 10851330 "setLightWeightPopupEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aFlag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When displaying the <code>JToolTip</code>, the
<code>ToolTipManager</code> chooses to use a lightweight
<code>JPanel</code> if it fits. This method allows you to
disable this feature. You have to do disable it if your
application mixes light weight and heavy weights components.

@param aFlag true if a lightweight panel is desired, false otherwise

"
      end

      operation 10851458 "isLightWeightPopupEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if lightweight (all-Java) <code>Tooltips</code>
are in use, or false if heavyweight (native peer)
<code>Tooltips</code> are being used.

@return true if lightweight <code>ToolTips</code> are in use
"
      end

      operation 10851586 "setInitialDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "milliseconds" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the initial delay value.

@param milliseconds  the number of milliseconds to delay
       (after the cursor has paused) before displaying the
       tooltip
@see #getInitialDelay
"
      end

      operation 10851714 "getInitialDelay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the initial delay value.

@return an integer representing the initial delay value,
         in milliseconds
@see #setInitialDelay
"
      end

      operation 10851842 "setDismissDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "milliseconds" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the dismissal delay value.

@param milliseconds  the number of milliseconds to delay
       before taking away the tooltip
@see #getDismissDelay
"
      end

      operation 10851970 "getDismissDelay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the dismissal delay value.

@return an integer representing the dismissal delay value,
         in milliseconds
@see #setDismissDelay
"
      end

      operation 10852098 "setReshowDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "milliseconds" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to specify the amount of time before the user has to wait
<code>initialDelay</code> milliseconds before a tooltip will be
shown. That is, if the tooltip is hidden, and the user moves into
a region of the same Component that has a valid tooltip within
<code>milliseconds</code> milliseconds the tooltip will immediately
be shown. Otherwise, if the user moves into a region with a valid
tooltip after <code>milliseconds</code> milliseconds, the user
will have to wait an additional <code>initialDelay</code>
milliseconds before the tooltip is shown again.

@param milliseconds time in milliseconds
@see #getReshowDelay
"
      end

      operation 10852226 "getReshowDelay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the reshow delay property.

@return reshown delay property
@see #setReshowDelay
"
      end

      operation 10852354 "getDrawingGC"
	private return_type class_ref 340994 // GraphicsConfiguration
	nparams 1
	  param inout name "toFind" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns GraphicsConfiguration instance that toFind belongs to or null
 if drawing point is set to a point beyond visible screen area (e.g.
 Point(20000, 20000))"
      end

      operation 10852482 "showTipWindow"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10852610 "hideTipWindow"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10852738 "sharedInstance"
	class_operation public return_type class_ref 1300738 // ToolTipManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared <code>ToolTipManager</code> instance.

@return a shared <code>ToolTipManager</code> object
"
      end

      operation 10852866 "registerComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " add keylistener here to trigger tip for access

Registers a component for tooltip management.
<p>
This will register key bindings to show and hide the tooltip text
only if <code>component</code> has focus bindings. This is done
so that components that are not normally focus traversable, such
as <code>JLabel</code>, are not made focus traversable as a result
of invoking this method.

@param component  a <code>JComponent</code> object to add
@see JComponent#isFocusTraversable
"
      end

      operation 10852994 "unregisterComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a component from tooltip control.

@param component  a <code>JComponent</code> object to remove
"
      end

      operation 10853122 "mouseEntered"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements java.awt.event.MouseListener

 Called when the mouse enters the region of a component.
 This determines whether the tool tip should be shown.

 @param event  the event in question
"
      end

      operation 10853250 "initiateToolTip"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10853378 "mouseExited"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements java.awt.event.MouseListener

 Called when the mouse exits the region of a component.
 Any tool tip showing should be hidden.

 @param event  the event in question
"
      end

      operation 10853506 "mousePressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements java.awt.event.MouseListener

 Called when the mouse is pressed.
 Any tool tip showing should be hidden.

 @param event  the event in question
"
      end

      operation 10853634 "mouseDragged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements java.awt.event.MouseMotionListener

 Called when the mouse is pressed and dragged.
 Does nothing.

 @param event  the event in question
"
      end

      operation 10853762 "mouseMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements java.awt.event.MouseMotionListener

 Called when the mouse is moved.
 Determines whether the tool tip should be displayed.

 @param event  the event in question
"
      end

      operation 10853890 "checkForTipChange"
	private explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the tooltip needs to be changed in response to
the MouseMoved event <code>event</code>.
"
      end

      class 1300866 "insideTimerAction"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4197890 // <realization>
	  relation 4197890 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4197890 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	operation 10854018 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1300994 "outsideTimerAction"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4198018 // <realization>
	  relation 4198018 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4198018 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	operation 10854146 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1301122 "stillInsideTimerAction"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4198146 // <realization>
	  relation 4198146 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4198146 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	operation 10854274 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1301250 "MoveBeforeEnterListener"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4198274 // <generalisation>
	  relation 4198274 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4198274 // <generalisation>
	    b parent class_ref 395010 // MouseMotionAdapter
	end

	operation 10854402 "mouseMoved"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 346626 // MouseEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10854530 "frameForComponent"
	class_operation package return_type class_ref 393346 // Frame
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10854658 "createFocusChangeListener"
	private return_type class_ref 342018 // FocusListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10854786 "getPopupFitWidth"
	private explicit_return_type "int"
	nparams 2
	  param inout name "popupRectInScreen" type class_ref 314114 // Rectangle
	  param inout name "invoker" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns: 0 no adjust
         -1 can't fit
         >0 adjust value by amount returned"
      end

      operation 10854914 "getPopupFitHeight"
	private explicit_return_type "int"
	nparams 2
	  param inout name "popupRectInScreen" type class_ref 314114 // Rectangle
	  param inout name "invoker" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns:  0 no adjust
          >0 adjust by value return"
      end

      operation 10855042 "getHeightAdjust"
	private explicit_return_type "int"
	nparams 2
	  param inout name "a" type class_ref 314114 // Rectangle
	  param inout name "b" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10855170 "getWidthAdjust"
	private explicit_return_type "int"
	nparams 2
	  param inout name "a" type class_ref 314114 // Rectangle
	  param inout name "b" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the number of pixels over the edge we are extending.
 If we are over the edge the ToolTipManager can adjust.
 REMIND: what if the Tooltip is just too big to fit at all - we currently will just clip"
      end

      operation 10855298 "show"
	private explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Actions
"
      end

      operation 10855426 "hide"
	private explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1301378 "AccessibilityKeyListener"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4198402 // <generalisation>
	  relation 4198402 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4198402 // <generalisation>
	    b parent class_ref 390146 // KeyAdapter
	end

	operation 10855554 "keyPressed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 346498 // KeyEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1301506 "UIManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code UIManager} manages the current look and feel, the set of
available look and feels, {@code PropertyChangeListeners} that
are notified when the look and feel changes, look and feel defaults, and
convenience methods for obtaining various default values.

<h3>Specifying the look and feel</h3>

The look and feel can be specified in two distinct ways: by
specifying the fully qualified name of the class for the look and
feel, or by creating an instance of {@code LookAndFeel} and passing
it to {@code setLookAndFeel}. The following example illustrates
setting the look and feel to the system look and feel:
<pre>
  UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
</pre>
The following example illustrates setting the look and feel based on
class name:
<pre>
  UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");
</pre>
Once the look and feel has been changed it is imperative to invoke
{@code updateUI} on all {@code JComponents}. The method {@link
SwingUtilities#updateComponentTreeUI} makes it easy to apply {@code
updateUI} to a containment hierarchy. Refer to it for
details. The exact behavior of not invoking {@code
updateUI} after changing the look and feel is
unspecified. It is very possible to receive unexpected exceptions,
painting problems, or worse.

<h3>Default look and feel</h3>

The class used for the default look and feel is chosen in the following
manner:
<ol>
  <li>If the system property <code>swing.defaultlaf</code> is
      {@code non-null}, use its value as the default look and feel class
      name.
  <li>If the {@link java.util.Properties} file <code>swing.properties</code>
      exists and contains the key <code>swing.defaultlaf</code>,
      use its value as the default look and feel class name. The location
      that is checked for <code>swing.properties</code> may vary depending
      upon the implementation of the Java platform. Typically the
      <code>swing.properties</code> file is located in the <code>lib</code>
      subdirectory of the Java installation directory.
      Refer to the release notes of the implementation being used for
      further details.
  <li>Otherwise use the cross platform look and feel.
</ol>

<h3>Defaults</h3>

{@code UIManager} manages three sets of {@code UIDefaults}. In order, they
are:
<ol>
  <li>Developer defaults. With few exceptions Swing does not
      alter the developer defaults; these are intended to be modified
      and used by the developer.
  <li>Look and feel defaults. The look and feel defaults are
      supplied by the look and feel at the time it is installed as the
      current look and feel ({@code setLookAndFeel()} is invoked). The
      look and feel defaults can be obtained using the {@code
      getLookAndFeelDefaults()} method.
  <li>System defaults. The system defaults are provided by Swing.
</ol>
Invoking any of the various {@code get} methods
results in checking each of the defaults, in order, returning
the first {@code non-null} value. For example, invoking
{@code UIManager.getString(\"Table.foreground\")} results in first
checking developer defaults. If the developer defaults contain
a value for {@code \"Table.foreground\"} it is returned, otherwise
the look and feel defaults are checked, followed by the system defaults.
<p>
It's important to note that {@code getDefaults} returns a custom
instance of {@code UIDefaults} with this resolution logic built into it.
For example, {@code UIManager.getDefaults().getString(\"Table.foreground\")}
is equivalent to {@code UIManager.getString(\"Table.foreground\")}. Both
resolve using the algorithm just described. In many places the
documentation uses the word defaults to refer to the custom instance
of {@code UIDefaults} with the resolution logic as previously described.
<p>
When the look and feel is changed, {@code UIManager} alters only the
look and feel defaults; the developer and system defaults are not
altered by the {@code UIManager} in any way.
<p>
The set of defaults a particular look and feel supports is defined
and documented by that look and feel. In addition, each look and
feel, or {@code ComponentUI} provided by a look and feel, may
access the defaults at different times in their life cycle. Some
look and feels may aggressively look up defaults, so that changing a
default may not have an effect after installing the look and feel.
Other look and feels may lazily access defaults so that a change to
the defaults may effect an existing look and feel. Finally, other look
and feels might not configure themselves from the defaults table in
any way. None-the-less it is usually the case that a look and feel
expects certain defaults, so that in general
a {@code ComponentUI} provided by one look and feel will not
work with another look and feel.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Thomas Ball
@author Hans Muller
"
      classrelation 4198530 // <realization>
	relation 4198530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4198530 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      class 1301634 "LAFState"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4198658 // swingProps (<unidirectional association>)
	  relation 4198658 --->
	    a role_name "swingProps" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4198658 // swingProps (<unidirectional association>)
	    b parent class_ref 240130 // Properties
	end

	classrelation 4198786 // tables (<unidirectional association>)
	  relation 4198786 --->
	    a role_name "tables" multiplicity "[]" init_value " new UIDefaults[2]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 4198786 // tables (<unidirectional association>)
	    b parent class_ref 363650 // UIDefaults
	end

	attribute 2441986 "initialized"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2442114 "focusPolicyInitialized"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4198914 // multiUIDefaults (<unidirectional association>)
	  relation 4198914 --->
	    a role_name "multiUIDefaults" init_value " new MultiUIDefaults(tables)" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4198914 // multiUIDefaults (<unidirectional association>)
	    b parent class_ref 1295106 // MultiUIDefaults
	end

	classrelation 4199042 // lookAndFeel (<unidirectional association>)
	  relation 4199042 --->
	    a role_name "lookAndFeel" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4199042 // lookAndFeel (<unidirectional association>)
	    b parent class_ref 370946 // LookAndFeel
	end

	classrelation 4199170 // multiLookAndFeel (<unidirectional association>)
	  relation 4199170 --->
	    a role_name "multiLookAndFeel" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4199170 // multiLookAndFeel (<unidirectional association>)
	    b parent class_ref 370946 // LookAndFeel
	end

	classrelation 4199298 // auxLookAndFeels (<unidirectional association>)
	  relation 4199298 --->
	    a role_name "auxLookAndFeels" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<LookAndFeel> ${name}${value};
"
	      classrelation_ref 4199298 // auxLookAndFeels (<unidirectional association>)
	    b parent class_ref 141442 // Vector
	end

	classrelation 4199426 // changeSupport (<unidirectional association>)
	  relation 4199426 --->
	    a role_name "changeSupport" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4199426 // changeSupport (<unidirectional association>)
	    b parent class_ref 360578 // SwingPropertyChangeSupport
	end

	classrelation 4199554 // installedLAFs (<unidirectional association>)
	  relation 4199554 --->
	    a role_name "installedLAFs" multiplicity "[]" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 4199554 // installedLAFs (<unidirectional association>)
	    b parent class_ref 1301762 // LookAndFeelInfo
	end

	operation 10855682 "getLookAndFeelDefaults"
	  package return_type class_ref 363650 // UIDefaults
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10855810 "setLookAndFeelDefaults"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "x" type class_ref 363650 // UIDefaults
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10855938 "getSystemDefaults"
	  package return_type class_ref 363650 // UIDefaults
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10856066 "setSystemDefaults"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "x" type class_ref 363650 // UIDefaults
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10856194 "getPropertyChangeSupport"
	  public return_type class_ref 360578 // SwingPropertyChangeSupport
	  nparams 1
	    param inout name "create" explicit_type "boolean"
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the SwingPropertyChangeSupport for the current
AppContext.  If <code>create</code> is a true, a non-null
<code>SwingPropertyChangeSupport</code> will be returned, if
<code>create</code> is false and this has not been invoked
with true, null will be returned.
"
	end
      end

      class 1301762 "LookAndFeelInfo"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4200450 // name (<unidirectional association>)
	  relation 4200450 --->
	    a role_name "name" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4200450 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 4200578 // className (<unidirectional association>)
	  relation 4200578 --->
	    a role_name "className" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4200578 // className (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 10856706 "LookAndFeelInfo"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "className" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>UIManager</code>s
<code>LookAndFeelInfo</code> object.

@param name      a <code>String</code> specifying the name of
                     the look and feel
@param className a <code>String</code> specifying the name of
                     the class that implements the look and feel
"
	end

	operation 10856834 "getName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of the look and feel in a form suitable
for a menu or other presentation
@return a <code>String</code> containing the name
@see LookAndFeel#getName
"
	end

	operation 10856962 "getClassName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of the class that implements this look and feel.
@return the name of the class that implements this
             <code>LookAndFeel</code>
@see LookAndFeel
"
	end

	operation 10857090 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a string that displays and identifies this
object's properties.

@return a <code>String</code> representation of this object
"
	end
      end

      classrelation 4199682 // classLock (<unidirectional association>)
	relation 4199682 --->
	  a role_name "classLock" init_value " new Object()" class_relation const_relation private
	    comment " Lock object used in place of class object for synchronization. (4187686)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4199682 // classLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10856322 "getLAFState"
	class_operation private return_type class_ref 1301634 // LAFState
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the <code>LAFState</code> object, lazily create one if necessary.
All access to the <code>LAFState</code> fields is done via this method,
for example:
<pre>
    getLAFState().initialized = true;
</pre>
"
      end

      classrelation 4199810 // defaultLAFKey (<unidirectional association>)
	relation 4199810 --->
	  a role_name "defaultLAFKey" init_value " \"swing.defaultlaf\"" class_relation const_relation private
	    comment " Keys used in the <code>swing.properties</code> properties file.
See loadUserProperties(), initialize().

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4199810 // defaultLAFKey (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4199938 // auxiliaryLAFsKey (<unidirectional association>)
	relation 4199938 --->
	  a role_name "auxiliaryLAFsKey" init_value " \"swing.auxiliarylaf\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4199938 // auxiliaryLAFsKey (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4200066 // multiplexingLAFKey (<unidirectional association>)
	relation 4200066 --->
	  a role_name "multiplexingLAFKey" init_value " \"swing.plaf.multiplexinglaf\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4200066 // multiplexingLAFKey (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4200194 // installedLAFsKey (<unidirectional association>)
	relation 4200194 --->
	  a role_name "installedLAFsKey" init_value " \"swing.installedlafs\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4200194 // installedLAFsKey (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4200322 // disableMnemonicKey (<unidirectional association>)
	relation 4200322 --->
	  a role_name "disableMnemonicKey" init_value " \"swing.disablenavaids\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4200322 // disableMnemonicKey (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10856450 "makeInstalledLAFKey"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "laf" type class_ref 128130 // String
	  param inout name "attr" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a <code>swing.properties</code> file key for the attribute of specified
look and feel.  The attr is either \"name\" or \"class\", a typical
key would be: \"swing.installedlaf.windows.name\"
"
      end

      operation 10856578 "makeSwingPropertiesFilename"
	class_operation private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The location of the <code>swing.properties</code> property file is
implementation-specific.
It is typically located in the <code>lib</code> subdirectory of the Java
installation directory. This method returns a bogus filename
if <code>java.home</code> isn't defined.
"
      end

      classrelation 4200706 // installedLAFs (<unidirectional association>)
	relation 4200706 --->
	  a role_name "installedLAFs" multiplicity "[]" class_relation private
	    comment "
The default value of <code>installedLAFS</code> is used when no
<code>swing.properties</code>
file is available or if the file doesn't contain a \"swing.installedlafs\"
property.

@see #initializeInstalledLAFs

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4200706 // installedLAFs (<unidirectional association>)
	  b parent class_ref 1301762 // LookAndFeelInfo
      end

      extra_member 185474 "initialization"
	
	cpp "" ""
	java "  static {
        ArrayList<LookAndFeelInfo> iLAFs = new ArrayList<LookAndFeelInfo>(4);
        iLAFs.add(new LookAndFeelInfo(
                      \"Metal\", \"javax.swing.plaf.metal.MetalLookAndFeel\"));
        iLAFs.add(new LookAndFeelInfo(
                      \"Nimbus\", \"javax.swing.plaf.nimbus.NimbusLookAndFeel\"));
        iLAFs.add(new LookAndFeelInfo(\"CDE/Motif\",
                  \"com.sun.java.swing.plaf.motif.MotifLookAndFeel\"));

        // Only include windows on Windows boxs.
        OSInfo.OSType osType = AccessController.doPrivileged(OSInfo.getOSTypeAction());
        if (osType == OSInfo.OSType.WINDOWS) {
            iLAFs.add(new LookAndFeelInfo(\"Windows\",
                        \"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\"));
            if (Toolkit.getDefaultToolkit().getDesktopProperty(
                    \"win.xpstyle.themeActive\") != null) {
                iLAFs.add(new LookAndFeelInfo(\"Windows Classic\",
                 \"com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel\"));
            }
        }
        else if (osType == OSInfo.OSType.MACOSX) {
            iLAFs.add(new LookAndFeelInfo(\"Mac OS X\", \"com.apple.laf.AquaLookAndFeel\"));
        }
        else {
            // GTK is not shipped on Windows.
            iLAFs.add(new LookAndFeelInfo(\"GTK+\",
                  \"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\"));
        }
        installedLAFs = iLAFs.toArray(new LookAndFeelInfo[iLAFs.size()]);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 10857218 "getInstalledLookAndFeels"
	class_operation public return_type class_ref 1301762 // LookAndFeelInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of {@code LookAndFeelInfo}s representing the
{@code LookAndFeel} implementations currently available. The
<code>LookAndFeelInfo</code> objects can be used by an
application to construct a menu of look and feel options for
the user, or to determine which look and feel to set at startup
time. To avoid the penalty of creating numerous {@code
LookAndFeel} objects, {@code LookAndFeelInfo} maintains the
class name of the {@code LookAndFeel} class, not the actual
{@code LookAndFeel} instance.
<p>
The following example illustrates setting the current look and feel
from an instance of {@code LookAndFeelInfo}:
<pre>
  UIManager.setLookAndFeel(info.getClassName());
</pre>

@return an array of <code>LookAndFeelInfo</code> objects
@see #setLookAndFeel
"
      end

      operation 10857346 "setInstalledLookAndFeels"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "infos" type class_ref 1301762 // LookAndFeelInfo
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the set of available look and feels. While this method does
not check to ensure all of the {@code LookAndFeelInfos} are
{@code non-null}, it is strongly recommended that only {@code non-null}
values are supplied in the {@code infos} array.

@param infos set of <code>LookAndFeelInfo</code> objects specifying
       the available look and feels

@see #getInstalledLookAndFeels
@throws NullPointerException if {@code infos} is {@code null}
"
      end

      operation 10857474 "installLookAndFeel"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 1301762 // LookAndFeelInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified look and feel to the set of available look
and feels. While this method allows a {@code null} {@code info},
it is strongly recommended that a {@code non-null} value be used.

@param info a <code>LookAndFeelInfo</code> object that names the
         look and feel and identifies the class that implements it
@see #setInstalledLookAndFeels
"
      end

      operation 10857602 "installLookAndFeel"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified look and feel to the set of available look
and feels. While this method does not check the
arguments in any way, it is strongly recommended that {@code
non-null} values be supplied.

@param name descriptive name of the look and feel
@param className name of the class that implements the look and feel
@see #setInstalledLookAndFeels
"
      end

      operation 10857730 "getLookAndFeel"
	class_operation public return_type class_ref 370946 // LookAndFeel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current look and feel or <code>null</code>.

@return current look and feel, or <code>null</code>
@see #setLookAndFeel
"
      end

      operation 10857858 "setLookAndFeel"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "newLookAndFeel" type class_ref 370946 // LookAndFeel
	nexceptions 1
	  exception class_ref 1301890 // UnsupportedLookAndFeelException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current look and feel to {@code newLookAndFeel}.
If the current look and feel is {@code non-null} {@code
uninitialize} is invoked on it. If {@code newLookAndFeel} is
{@code non-null}, {@code initialize} is invoked on it followed
by {@code getDefaults}. The defaults returned from {@code
newLookAndFeel.getDefaults()} replace those of the defaults
from the previous look and feel. If the {@code newLookAndFeel} is
{@code null}, the look and feel defaults are set to {@code null}.
<p>
A value of {@code null} can be used to set the look and feel
to {@code null}. As the {@code LookAndFeel} is required for
most of Swing to function, setting the {@code LookAndFeel} to
{@code null} is strongly discouraged.
<p>
This is a JavaBeans bound property.

@param newLookAndFeel {@code LookAndFeel} to install
@throws UnsupportedLookAndFeelException if
         {@code newLookAndFeel} is {@code non-null} and
         {@code newLookAndFeel.isSupportedLookAndFeel()} returns
         {@code false}
@see #getLookAndFeel
"
      end

      operation 10857986 "setLookAndFeel"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 4
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 193282 // InstantiationException
	  exception class_ref 321538 // IllegalAccessException
	  exception class_ref 1301890 // UnsupportedLookAndFeelException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the {@code LookAndFeel} specified by the given class
name, using the current thread's context class loader, and
passes it to {@code setLookAndFeel(LookAndFeel)}.

@param className  a string specifying the name of the class that implements
       the look and feel
@exception ClassNotFoundException if the <code>LookAndFeel</code>
          class could not be found
@exception InstantiationException if a new instance of the class
         couldn't be created
@exception IllegalAccessException if the class or initializer isn't accessible
@exception UnsupportedLookAndFeelException if
         <code>lnf.isSupportedLookAndFeel()</code> is false
@throws ClassCastException if {@code className} does not identify
        a class that extends {@code LookAndFeel}
"
      end

      operation 10858114 "getSystemLookAndFeelClassName"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the <code>LookAndFeel</code> class that implements
the native system look and feel if there is one, otherwise
the name of the default cross platform <code>LookAndFeel</code>
class. This value can be overriden by setting the
<code>swing.systemlaf</code> system property.

@return the <code>String</code> of the <code>LookAndFeel</code>
         class

@see #setLookAndFeel
@see #getCrossPlatformLookAndFeelClassName
"
      end

      operation 10858242 "getCrossPlatformLookAndFeelClassName"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the <code>LookAndFeel</code> class that implements
the default cross platform look and feel -- the Java
Look and Feel (JLF).  This value can be overriden by setting the
<code>swing.crossplatformlaf</code> system property.

@return  a string with the JLF implementation-class
@see #setLookAndFeel
@see #getSystemLookAndFeelClassName
"
      end

      operation 10858370 "getDefaults"
	class_operation public return_type class_ref 363650 // UIDefaults
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the defaults. The returned defaults resolve using the
logic specified in the class documentation.

@return a <code>UIDefaults</code> object containing the default values
"
      end

      operation 10858498 "getFont"
	class_operation public return_type class_ref 340354 // Font
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a font from the defaults. If the value for {@code key} is
not a {@code Font}, {@code null} is returned.

@param key  an <code>Object</code> specifying the font
@return the <code>Font</code> object
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10858626 "getFont"
	class_operation public return_type class_ref 340354 // Font
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a font from the defaults that is appropriate
for the given locale. If the value for {@code key} is
not a {@code Font}, {@code null} is returned.

@param key  an <code>Object</code> specifying the font
@param l the <code>Locale</code> for which the font is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>Font</code> object
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10858754 "getColor"
	class_operation public return_type class_ref 323458 // Color
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a color from the defaults. If the value for {@code key} is
not a {@code Color}, {@code null} is returned.

@param key  an <code>Object</code> specifying the color
@return the <code>Color</code> object
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10858882 "getColor"
	class_operation public return_type class_ref 323458 // Color
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a color from the defaults that is appropriate
for the given locale. If the value for {@code key} is
not a {@code Color}, {@code null} is returned.

@param key  an <code>Object</code> specifying the color
@param l the <code>Locale</code> for which the color is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>Color</code> object
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10859010 "getIcon"
	class_operation public return_type class_ref 352642 // Icon
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Icon</code> from the defaults. If the value for
{@code key} is not an {@code Icon}, {@code null} is returned.

@param key  an <code>Object</code> specifying the icon
@return the <code>Icon</code> object
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10859138 "getIcon"
	class_operation public return_type class_ref 352642 // Icon
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Icon</code> from the defaults that is appropriate
for the given locale. If the value for
{@code key} is not an {@code Icon}, {@code null} is returned.

@param key  an <code>Object</code> specifying the icon
@param l the <code>Locale</code> for which the icon is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>Icon</code> object
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10859266 "getBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a border from the defaults. If the value for
{@code key} is not a {@code Border}, {@code null} is returned.

@param key  an <code>Object</code> specifying the border
@return the <code>Border</code> object
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10859394 "getBorder"
	class_operation public return_type class_ref 357122 // Border
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a border from the defaults that is appropriate
for the given locale.  If the value for
{@code key} is not a {@code Border}, {@code null} is returned.

@param key  an <code>Object</code> specifying the border
@param l the <code>Locale</code> for which the border is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>Border</code> object
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10859522 "getString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string from the defaults. If the value for
{@code key} is not a {@code String}, {@code null} is returned.

@param key  an <code>Object</code> specifying the string
@return the <code>String</code>
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10859650 "getString"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string from the defaults that is appropriate for the
given locale.  If the value for
{@code key} is not a {@code String}, {@code null} is returned.

@param key  an <code>Object</code> specifying the string
@param l the <code>Locale</code> for which the string is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>String</code>
@since 1.4
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10859778 "getString"
	class_operation package return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string from the defaults that is appropriate for the
given locale.  If the value for
{@code key} is not a {@code String}, {@code null} is returned.

@param key  an <code>Object</code> specifying the string
@param c {@code Component} used to determine the locale;
         {@code null} implies the default locale as
         returned by {@code Locale.getDefault()}
@return the <code>String</code>
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10859906 "getInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer from the defaults. If the value for
{@code key} is not an {@code Integer}, or does not exist,
{@code 0} is returned.

@param key  an <code>Object</code> specifying the int
@return the int
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10860034 "getInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer from the defaults that is appropriate
for the given locale. If the value for
{@code key} is not an {@code Integer}, or does not exist,
{@code 0} is returned.

@param key  an <code>Object</code> specifying the int
@param l the <code>Locale</code> for which the int is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the int
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10860162 "getBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a boolean from the defaults which is associated with
the key value. If the key is not found or the key doesn't represent
a boolean value then {@code false} is returned.

@param key  an <code>Object</code> specifying the key for the desired boolean value
@return the boolean value corresponding to the key
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10860290 "getBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a boolean from the defaults which is associated with
the key value and the given <code>Locale</code>. If the key is not
found or the key doesn't represent
a boolean value then {@code false} will be returned.

@param key  an <code>Object</code> specifying the key for the desired
            boolean value
@param l the <code>Locale</code> for which the boolean is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the boolean value corresponding to the key
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10860418 "getInsets"
	class_operation public return_type class_ref 343938 // Insets
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Insets</code> object from the defaults. If the value
for {@code key} is not an {@code Insets}, {@code null} is returned.

@param key  an <code>Object</code> specifying the <code>Insets</code> object
@return the <code>Insets</code> object
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10860546 "getInsets"
	class_operation public return_type class_ref 343938 // Insets
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Insets</code> object from the defaults that is
appropriate for the given locale. If the value
for {@code key} is not an {@code Insets}, {@code null} is returned.

@param key  an <code>Object</code> specifying the <code>Insets</code> object
@param l the <code>Locale</code> for which the object is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>Insets</code> object
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10860674 "getDimension"
	class_operation public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dimension from the defaults. If the value
for {@code key} is not a {@code Dimension}, {@code null} is returned.

@param key  an <code>Object</code> specifying the dimension object
@return the <code>Dimension</code> object
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10860802 "getDimension"
	class_operation public return_type class_ref 316802 // Dimension
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a dimension from the defaults that is appropriate
for the given locale. If the value
for {@code key} is not a {@code Dimension}, {@code null} is returned.

@param key  an <code>Object</code> specifying the dimension object
@param l the <code>Locale</code> for which the object is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>Dimension</code> object
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10860930 "get"
	class_operation public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object from the defaults.

@param key  an <code>Object</code> specifying the desired object
@return the <code>Object</code>
@throws NullPointerException if {@code key} is {@code null}
"
      end

      operation 10861058 "get"
	class_operation public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object from the defaults that is appropriate for
the given locale.

@param key  an <code>Object</code> specifying the desired object
@param l the <code>Locale</code> for which the object is desired; refer
       to {@code UIDefaults} for details on how a {@code null}
       {@code Locale} is handled
@return the <code>Object</code>
@throws NullPointerException if {@code key} is {@code null}
@since 1.4
"
      end

      operation 10861186 "put"
	class_operation public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores an object in the developer defaults. This is a cover method
for {@code getDefaults().put(key, value)}. This only effects the
developer defaults, not the system or look and feel defaults.

@param key    an <code>Object</code> specifying the retrieval key
@param value  the <code>Object</code> to store; refer to
              {@code UIDefaults} for details on how {@code null} is
              handled
@return the <code>Object</code> returned by {@link UIDefaults#put}
@throws NullPointerException if {@code key} is {@code null}
@see UIDefaults#put
"
      end

      operation 10861314 "getUI"
	class_operation public return_type class_ref 356738 // ComponentUI
	nparams 1
	  param inout name "target" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code ComponentUI} implementation for
{@code target}. Typically, this is a cover for
{@code getDefaults().getUI(target)}. However, if an auxiliary
look and feel has been installed, this first invokes
{@code getUI(target)} on the multiplexing look and feel's
defaults, and returns that value if it is {@code non-null}.

@param target the <code>JComponent</code> to return the
       {@code ComponentUI} for
@return the <code>ComponentUI</code> object for {@code target}
@throws NullPointerException if {@code target} is {@code null}
@see UIDefaults#getUI
"
      end

      operation 10861442 "getLookAndFeelDefaults"
	class_operation public return_type class_ref 363650 // UIDefaults
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code UIDefaults} from the current look and feel,
that were obtained at the time the look and feel was installed.
<p>
In general, developers should use the {@code UIDefaults} returned from
{@code getDefaults()}. As the current look and feel may expect
certain values to exist, altering the {@code UIDefaults} returned
from this method could have unexpected results.

@return <code>UIDefaults</code> from the current look and feel
@see #getDefaults
@see #setLookAndFeel(LookAndFeel)
@see LookAndFeel#getDefaults
"
      end

      operation 10861570 "getMultiLookAndFeel"
	class_operation private return_type class_ref 370946 // LookAndFeel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the Multiplexing <code>LookAndFeel</code>.
"
      end

      operation 10861698 "addAuxiliaryLookAndFeel"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "laf" type class_ref 370946 // LookAndFeel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>LookAndFeel</code> to the list of auxiliary look and feels.
The auxiliary look and feels tell the multiplexing look and feel what
other <code>LookAndFeel</code> classes for a component instance are to be used
in addition to the default <code>LookAndFeel</code> class when creating a
multiplexing UI.  The change will only take effect when a new
UI class is created or when the default look and feel is changed
on a component instance.
<p>Note these are not the same as the installed look and feels.

@param laf the <code>LookAndFeel</code> object
@see #removeAuxiliaryLookAndFeel
@see #setLookAndFeel
@see #getAuxiliaryLookAndFeels
@see #getInstalledLookAndFeels
"
      end

      operation 10861826 "removeAuxiliaryLookAndFeel"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "laf" type class_ref 370946 // LookAndFeel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>LookAndFeel</code> from the list of auxiliary look and feels.
The auxiliary look and feels tell the multiplexing look and feel what
other <code>LookAndFeel</code> classes for a component instance are to be used
in addition to the default <code>LookAndFeel</code> class when creating a
multiplexing UI.  The change will only take effect when a new
UI class is created or when the default look and feel is changed
on a component instance.
<p>Note these are not the same as the installed look and feels.
@return true if the <code>LookAndFeel</code> was removed from the list
@see #removeAuxiliaryLookAndFeel
@see #getAuxiliaryLookAndFeels
@see #setLookAndFeel
@see #getInstalledLookAndFeels
"
      end

      operation 10861954 "getAuxiliaryLookAndFeels"
	class_operation public return_type class_ref 370946 // LookAndFeel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of auxiliary look and feels (can be <code>null</code>).
The auxiliary look and feels tell the multiplexing look and feel what
other <code>LookAndFeel</code> classes for a component instance are
to be used in addition to the default LookAndFeel class when creating a
multiplexing UI.
<p>Note these are not the same as the installed look and feels.

@return list of auxiliary <code>LookAndFeel</code>s or <code>null</code>
@see #addAuxiliaryLookAndFeel
@see #removeAuxiliaryLookAndFeel
@see #setLookAndFeel
@see #getInstalledLookAndFeels
"
      end

      operation 10862082 "addPropertyChangeListener"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>PropertyChangeListener</code> to the listener list.
The listener is registered for all properties.

@param listener  the <code>PropertyChangeListener</code> to be added
@see java.beans.PropertyChangeSupport
"
      end

      operation 10862210 "removePropertyChangeListener"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PropertyChangeListener</code> from the listener list.
This removes a <code>PropertyChangeListener</code> that was registered
for all properties.

@param listener  the <code>PropertyChangeListener</code> to be removed
@see java.beans.PropertyChangeSupport
"
      end

      operation 10862338 "getPropertyChangeListeners"
	class_operation public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>PropertyChangeListener</code>s added
to this UIManager with addPropertyChangeListener().

@return all of the <code>PropertyChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 10862466 "loadSwingProperties"
	class_operation private return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10862594 "checkProperty"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "props" type class_ref 240130 // Properties
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10862722 "initializeInstalledLAFs"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "swingProps" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a <code>swing.properties</code> file exist and it has a
<code>swing.installedlafs</code> property
then initialize the <code>installedLAFs</code> field.

@see #getInstalledLookAndFeels
"
      end

      operation 10862850 "initializeDefaultLAF"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "swingProps" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the user has specified a default look and feel, use that.
Otherwise use the look and feel that's native to this platform.
If this code is called after the application has explicitly
set it's look and feel, do nothing.

@see #maybeInitialize
"
      end

      operation 10862978 "initializeAuxiliaryLAFs"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "swingProps" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10863106 "initializeSystemDefaults"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "swingProps" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10863234 "maybeInitialize"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called before any code that depends on the
<code>AppContext</code> specific LAFState object runs.  When the AppContext
corresponds to a set of applets it's possible for this method
to be re-entered, which is why we grab a lock before calling
initialize().
"
      end

      operation 10863362 "maybeInitializeFocusPolicy"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338434 // JComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets default swing focus traversal policy.
"
      end

      operation 10863490 "initialize"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only called by maybeInitialize().
"
      end
    end

    class 1301890 "UnsupportedLookAndFeelException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An exception that indicates the requested look &amp; feel
management classes are not present on the user's system.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author unattributed
"
      classrelation 4200834 // <generalisation>
	relation 4200834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4200834 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      operation 10863618 "UnsupportedLookAndFeelException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UnsupportedLookAndFeelException object.
@param s a message String
"
      end
    end

    class 1302018 "ViewportLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The default layout manager for <code>JViewport</code>.
<code>ViewportLayout</code> defines
a policy for layout that should be useful for most applications.
The viewport makes its view the same size as the viewport,
however it will not make the view smaller than its minimum size.
As the viewport grows the view is kept bottom justified until
the entire view is visible, subsequently the view is kept top
justified.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Hans Muller
"
      classrelation 4200962 // <realization>
	relation 4200962 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4200962 // <realization>
	  b parent class_ref 349698 // LayoutManager
      end

      classrelation 4201090 // <realization>
	relation 4201090 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4201090 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4201218 // SHARED_INSTANCE (<unidirectional association>)
	relation 4201218 --->
	  a role_name "SHARED_INSTANCE" init_value " new ViewportLayout()" class_relation package
	    comment " Single instance used by JViewport.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4201218 // SHARED_INSTANCE (<unidirectional association>)
	  b parent class_ref 1302018 // ViewportLayout
      end

      operation 10863746 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout. Not used by this class.
@param name the name of the component
@param c the the component to be added
"
      end

      operation 10863874 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the layout. Not used by
this class.
@param c the component to remove
"
      end

      operation 10864002 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred dimensions for this layout given the components
in the specified target container.
@param parent the component which needs to be laid out
@return a <code>Dimension</code> object containing the
         preferred dimensions
@see #minimumLayoutSize
"
      end

      operation 10864130 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum dimensions needed to layout the components
contained in the specified target container.

@param parent the component which needs to be laid out
@return a <code>Dimension</code> object containing the minimum
         dimensions
@see #preferredLayoutSize
"
      end

      operation 10864258 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the AWT when the specified container needs to be laid out.

@param parent  the container to lay out

@throws AWTError if the target isn't the container specified to the
                     <code>BoxLayout</code> constructor
"
      end
    end
  end

  deploymentview 141314 "swing"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 270594 "Painter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Graphics2D;
${definition}"
      associated_elems
	class_ref 338050 // Painter
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 273410 "TransferHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.awt.datatransfer.*;
import java.awt.dnd.*;
import java.beans.*;
import java.lang.reflect.*;
import java.io.*;
import java.util.TooManyListenersException;
import javax.swing.plaf.UIResource;
import javax.swing.event.*;
import javax.swing.text.JTextComponent;
import sun.reflect.misc.MethodUtil;
import sun.swing.SwingUtilities2;
import sun.awt.AppContext;
import sun.swing.*;
import sun.awt.SunToolkit;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.AccessControlContext;
import java.security.ProtectionDomain;
import sun.misc.SharedSecrets;
import sun.misc.JavaSecurityAccess;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 351362 // TransferHandler
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 273538 "Action"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
${definition}"
      associated_elems
	class_ref 352258 // Action
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 273922 "JPanel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 339842 // JPanel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 274306 "AbstractAction"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
import java.util.Hashtable;
import java.util.Enumeration;
import java.io.Serializable;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.AccessController;
import javax.swing.event.SwingPropertyChangeSupport;
import sun.security.action.GetPropertyAction;
${definition}"
      associated_elems
	class_ref 360322 // AbstractAction
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 274434 "SwingConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 360834 // SwingConstants
      end
      comment "Copyright (c) 1997, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 274818 "JLabel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Font;
import java.awt.Image;
import java.awt.*;
import java.text.*;
import java.awt.geom.*;
import java.beans.Transient;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.plaf.LabelUI;
import javax.accessibility.*;
import javax.swing.text.*;
import javax.swing.text.html.*;
import javax.swing.plaf.basic.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 359810 // JLabel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 276482 "ListModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.ListDataListener;
${definition}"
      associated_elems
	class_ref 366594 // ListModel
      end
      comment "Copyright (c) 1997, 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 276610 "AbstractListModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import java.io.Serializable;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 366466 // AbstractListModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 276994 "ListCellRenderer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
${definition}"
      associated_elems
	class_ref 367746 // ListCellRenderer
      end
      comment "Copyright (c) 1997, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 277122 "DefaultListCellRenderer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;
import java.awt.Component;
import java.awt.Color;
import java.awt.Rectangle;
import java.io.Serializable;
import sun.swing.DefaultLookup;
${definition}"
      associated_elems
	class_ref 367618 // DefaultListCellRenderer
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 277250 "ComboBoxModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 368130 // ComboBoxModel
      end
      comment "Copyright (c) 1997, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 277506 "Icon"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Graphics;
import java.awt.Component;
${definition}"
      associated_elems
	class_ref 352642 // Icon
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 278018 "LookAndFeel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Font;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.Color;
import java.awt.Component;
import java.awt.SystemColor;
import java.awt.Toolkit;
import sun.awt.SunToolkit;
import javax.swing.text.*;
import javax.swing.border.*;
import javax.swing.plaf.*;
import java.net.URL;
import sun.swing.SwingUtilities2;
import sun.swing.DefaultLayoutStyle;
import sun.swing.ImageIconUIResource;
import java.util.StringTokenizer;
${definition}"
      associated_elems
	class_ref 370946 // LookAndFeel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 279682 "UIDefaults"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.plaf.ComponentUI;
import javax.swing.border.*;
import javax.swing.event.SwingPropertyChangeSupport;
import java.lang.reflect.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.ResourceBundle;
import java.util.ResourceBundle.Control;
import java.util.Locale;
import java.util.Vector;
import java.util.MissingResourceException;
import java.awt.Font;
import java.awt.Color;
import java.awt.Insets;
import java.awt.Dimension;
import java.beans.PropertyChangeListener;
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.PrivilegedAction;
import sun.reflect.misc.MethodUtil;
import sun.reflect.misc.ReflectUtil;
import sun.swing.SwingUtilities2;
import sun.util.CoreResourceBundleControl;
${definition}"
      associated_elems
	class_ref 363650 // UIDefaults
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 285954 "ActionPropertyChangeListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.*;
import java.lang.ref.WeakReference;
import java.lang.ref.ReferenceQueue;
${definition}"
      associated_elems
	class_ref 391682 // ActionPropertyChangeListener
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 286466 "JComboBox"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.Transient;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.IOException;
import javax.swing.event.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 364162 // JComboBox
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 286722 "MenuElement"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
${definition}"
      associated_elems
	class_ref 386690 // MenuElement
      end
      comment "Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 286850 "JSeparator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 394114 // JSeparator
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 286978 "JPopupMenu"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.beans.*;
import java.util.Locale;
import java.util.Vector;
import java.util.Hashtable;
import javax.accessibility.*;
import javax.swing.plaf.PopupMenuUI;
import javax.swing.plaf.ComponentUI;
import javax.swing.plaf.basic.BasicComboPopup;
import javax.swing.event.*;
import sun.awt.SunToolkit;
import sun.security.util.SecurityConstants;
import java.applet.Applet;
${definition}"
      associated_elems
	class_ref 357378 // JPopupMenu
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 288002 "AbstractButton"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.text.*;
import java.awt.geom.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.Transient;
import java.util.Enumeration;
import java.util.Vector;
import java.io.Serializable;
import javax.swing.event.*;
import javax.swing.border.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import javax.swing.text.*;
import javax.swing.text.html.*;
import javax.swing.plaf.basic.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 384898 // AbstractButton
      end
      comment "Copyright (c) 1997, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 288130 "JButton"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.ConstructorProperties;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import javax.swing.plaf.*;
import javax.swing.event.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 389378 // JButton
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 288514 "DesktopManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 399362 // DesktopManager
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 288642 "DefaultDesktopManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.awt.AWTUtilities;
import sun.awt.AWTAccessor;
import sun.awt.SunToolkit;
import java.awt.*;
import java.beans.PropertyVetoException;
${definition}"
      associated_elems
	class_ref 399618 // DefaultDesktopManager
      end
      comment "Copyright (c) 1997, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 294786 "JMenuBar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.*;
import java.beans.Transient;
import java.util.Vector;
import java.util.Enumeration;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.event.*;
import javax.swing.border.Border;
import javax.swing.plaf.*;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 419586 // JMenuBar
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 297090 "Scrollable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Dimension;
import java.awt.Rectangle;
${definition}"
      associated_elems
	class_ref 427522 // Scrollable
      end
      comment "Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 297986 "JTextField"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.swing.SwingUtilities2;
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
import javax.swing.text.*;
import javax.swing.plaf.*;
import javax.swing.event.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 360066 // JTextField
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 301954 "ScrollPaneConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 437506 // ScrollPaneConstants
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 303746 "JViewport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.awt.peer.ComponentPeer;
import java.beans.Transient;
import javax.swing.plaf.ViewportUI;
import javax.swing.event.*;
import javax.swing.border.*;
import javax.accessibility.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 438530 // JViewport
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 312834 "RootPaneContainer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
${definition}"
      associated_elems
	class_ref 469762 // RootPaneContainer
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 312962 "JWindow"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.PropertyChangeListener;
import java.util.Locale;
import java.util.Vector;
import java.io.Serializable;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 468738 // JWindow
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 313602 "InputMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Set;
${definition}"
      associated_elems
	class_ref 357634 // InputMap
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 313730 "ComponentInputMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 357762 // ComponentInputMap
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 922882 "CellEditor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 1262850 // CellEditor
      end
      comment "Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923010 "AbstractCellEditor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import java.util.EventObject;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1262722 // AbstractCellEditor
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923138 "SpinnerModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 1263106 // SpinnerModel
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923266 "AbstractSpinnerModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import javax.swing.event.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1262978 // AbstractSpinnerModel
      end
      comment "Copyright (c) 2000, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923394 "ActionMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Set;
${definition}"
      associated_elems
	class_ref 357890 // ActionMap
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923522 "AncestorNotifier"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import java.awt.event.*;
import java.awt.Component;
import java.awt.Container;
import java.awt.Window;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1263234 // AncestorNotifier
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923650 "ArrayTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Enumeration;
import java.util.Hashtable;
${definition}"
      associated_elems
	class_ref 356866 // ArrayTable
      end
      comment "Copyright (c) 2003, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923778 "Autoscroller"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
${definition}"
      associated_elems
	class_ref 1263490 // Autoscroller
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 923906 "BorderFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import javax.swing.border.*;
${definition}"
      associated_elems
	class_ref 1263618 // BorderFactory
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924034 "BoundedRangeModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 429954 // BoundedRangeModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924162 "Box"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.ConstructorProperties;
import java.util.Locale;
import java.io.Serializable;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 1264002 // Box
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924290 "BoxLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.io.PrintStream;
${definition}"
      associated_elems
	class_ref 1264514 // BoxLayout
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924418 "RepaintManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.awt.image.VolatileImage;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.applet.*;
import sun.awt.AWTAccessor;
import sun.awt.AppContext;
import sun.awt.DisplayChangedListener;
import sun.awt.SunToolkit;
import sun.java2d.SunGraphicsEnvironment;
import sun.misc.JavaSecurityAccess;
import sun.misc.SharedSecrets;
import sun.security.action.GetPropertyAction;
import com.sun.java.swing.SwingUtilities3;
import sun.swing.SwingAccessor;
import sun.swing.SwingUtilities2.RepaintListener;
${definition}"
      associated_elems
	class_ref 338562 // RepaintManager
      end
      comment "Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924546 "BufferStrategyPaintManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.lang.reflect.*;
import java.lang.ref.WeakReference;
import java.util.*;
import com.sun.java.swing.SwingUtilities3;
import sun.awt.SubRegionShowable;
import sun.java2d.SunGraphics2D;
import sun.java2d.pipe.hw.ExtendedBufferCapabilities;
import sun.awt.SunToolkit;
import sun.util.logging.PlatformLogger;
${definition}"
      associated_elems
	class_ref 1264642 // BufferStrategyPaintManager
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924674 "ButtonGroup"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.util.Vector;
import java.util.Enumeration;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1265666 // ButtonGroup
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924802 "ButtonModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.awt.*;
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 397570 // ButtonModel
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 924930 "CellRendererPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.beans.PropertyChangeListener;
import java.util.Locale;
import java.util.Vector;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 389122 // CellRendererPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925058 "ClientPropertyKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 1265922 // ClientPropertyKey
      end
      comment "Copyright (c) 2006, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925186 "ComboBoxEditor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
${definition}"
      associated_elems
	class_ref 389890 // ComboBoxEditor
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925314 "DebugGraphics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.image.*;
import java.text.AttributedCharacterIterator;
${definition}"
      associated_elems
	class_ref 1266050 // DebugGraphics
      end
      comment "Copyright (c) 1997, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925442 "DebugGraphicsFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.image.*;
${definition}"
      associated_elems
	class_ref 1266306 // DebugGraphicsFilter
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925570 "DebugGraphicsInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 1266178 // DebugGraphicsInfo
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925698 "DebugGraphicsObserver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.image.*;
${definition}"
      associated_elems
	class_ref 1266434 // DebugGraphicsObserver
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925826 "DefaultBoundedRangeModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import java.io.Serializable;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 1266562 // DefaultBoundedRangeModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 925954 "DefaultButtonModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.io.Serializable;
import java.util.EventListener;
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 1266690 // DefaultButtonModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 926338 "DefaultCellEditor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.event.*;
import java.beans.ConstructorProperties;
import java.lang.Boolean;
import javax.swing.table.*;
import javax.swing.event.*;
import java.util.EventObject;
import javax.swing.tree.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1266818 // DefaultCellEditor
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 926466 "MutableComboBoxModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1267458 // MutableComboBoxModel
      end
      comment "Copyright (c) 1998, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 926594 "DefaultComboBoxModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1267330 // DefaultComboBoxModel
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 926722 "FocusManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
${definition}"
      associated_elems
	class_ref 1267714 // FocusManager
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 926850 "DefaultFocusManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.util.Comparator;
${definition}"
      associated_elems
	class_ref 1267586 // DefaultFocusManager
	class_ref 1267970 // LegacyLayoutFocusTraversalPolicy
	class_ref 1268738 // CompareTabOrderComparator
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 926978 "InternalFrameFocusTraversalPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.FocusTraversalPolicy;
${definition}"
      associated_elems
	class_ref 1268354 // InternalFrameFocusTraversalPolicy
      end
      comment "Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 927106 "SortingFocusTraversalPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
import java.awt.Window;
import java.util.*;
import java.awt.FocusTraversalPolicy;
import sun.util.logging.PlatformLogger;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import sun.security.action.GetPropertyAction;
import java.security.AccessController;
import java.security.PrivilegedAction;
${definition}"
      associated_elems
	class_ref 1268226 // SortingFocusTraversalPolicy
	class_ref 1268482 // SwingContainerOrderFocusTraversalPolicy
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 927234 "LayoutFocusTraversalPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
import java.awt.ComponentOrientation;
import java.util.Comparator;
import java.io.*;
import sun.awt.SunToolkit;
${definition}"
      associated_elems
	class_ref 1268098 // LayoutFocusTraversalPolicy
	class_ref 1268610 // SwingDefaultFocusTraversalPolicy
      end
      comment "Copyright (c) 2000, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 927362 "DefaultListModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Enumeration;
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 1268866 // DefaultListModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 927490 "ListSelectionModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 1269122 // ListSelectionModel
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 927618 "DefaultListSelectionModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
import java.util.BitSet;
import java.io.Serializable;
import java.beans.Transient;
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 1268994 // DefaultListSelectionModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 927746 "RowSorter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.SortOrder;
import javax.swing.event.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 1269378 // RowSorter
      end
      comment "Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 927874 "RowFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
${definition}"
      associated_elems
	class_ref 1270146 // RowFilter
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928002 "DefaultRowSorter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.Collator;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.SortOrder;
${definition}"
      associated_elems
	class_ref 1269250 // DefaultRowSorter
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928130 "SingleSelectionModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 393474 // SingleSelectionModel
      end
      comment "Copyright (c) 1997, 2002, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928258 "DefaultSingleSelectionModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import java.io.Serializable;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 1271682 // DefaultSingleSelectionModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928386 "DelegatingDefaultFocusManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
import java.util.Set;
${definition}"
      associated_elems
	class_ref 1271810 // DelegatingDefaultFocusManager
      end
      comment "Copyright (c) 2001, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928514 "DropMode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 427906 // DropMode
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928642 "GraphicsWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
${definition}"
      associated_elems
	class_ref 1271938 // GraphicsWrapper
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928770 "GrayFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.image.*;
${definition}"
      associated_elems
	class_ref 1272066 // GrayFilter
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 928898 "GroupLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.LayoutManager2;
import java.util.*;
import static java.awt.Component.BaselineResizeBehavior;
import static javax.swing.LayoutStyle.ComponentPlacement;
import static javax.swing.SwingConstants.HORIZONTAL;
import static javax.swing.SwingConstants.VERTICAL;
${definition}"
      associated_elems
	class_ref 1272194 // GroupLayout
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929026 "ImageIcon"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.image.*;
import java.beans.ConstructorProperties;
import java.beans.Transient;
import java.net.URL;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Locale;
import javax.accessibility.*;
import sun.awt.AppContext;
import java.lang.reflect.Field;
import java.security.*;
${definition}"
      associated_elems
	class_ref 413826 // ImageIcon
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929154 "InputVerifier"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
${definition}"
      associated_elems
	class_ref 357250 // InputVerifier
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929282 "JApplet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.applet.Applet;
import java.beans.PropertyChangeListener;
import java.util.Locale;
import java.util.Vector;
import java.io.Serializable;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 1274370 // JApplet
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929410 "JToggleButton"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import javax.swing.event.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1274626 // JToggleButton
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929538 "JCheckBox"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1267202 // JCheckBox
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929666 "JMenuItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.plaf.*;
import javax.swing.plaf.basic.*;
import javax.swing.event.*;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 386050 // JMenuItem
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929794 "JCheckBoxMenuItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.plaf.*;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 1275138 // JCheckBoxMenuItem
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 929922 "JColorChooser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import javax.swing.colorchooser.*;
import javax.swing.plaf.ColorChooserUI;
import javax.accessibility.*;
import sun.swing.SwingUtilities2;
${definition}"
      associated_elems
	class_ref 359170 // JColorChooser
	class_ref 1276034 // ColorChooserDialog
	class_ref 1276674 // ColorTracker
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 930050 "WindowConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1276162 // WindowConstants
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 930178 "JDialog"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 1275650 // JDialog
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 930306 "JLayeredPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.util.ArrayList;
import java.util.Hashtable;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import sun.awt.SunToolkit;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 400642 // JLayeredPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 930434 "JDesktopPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.awt.Component;
import java.awt.Container;
import java.awt.DefaultFocusTraversalPolicy;
import java.awt.FocusTraversalPolicy;
import java.awt.Window;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.beans.PropertyVetoException;
import java.util.Set;
import java.util.TreeSet;
import java.util.LinkedHashSet;
${definition}"
      associated_elems
	class_ref 399234 // JDesktopPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 930562 "SwingWorker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.WeakReference;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.PropertyChangeEvent;
import java.util.List;
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
import java.awt.event.*;
import javax.swing.SwingUtilities;
import sun.awt.AppContext;
import sun.swing.AccumulativeRunnable;
${definition}"
      associated_elems
	class_ref 1277698 // SwingWorker
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 930946 "JFileChooser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import javax.swing.filechooser.*;
import javax.swing.plaf.FileChooserUI;
import javax.accessibility.*;
import java.io.File;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.util.Vector;
import java.awt.AWTEvent;
import java.awt.Component;
import java.awt.Container;
import java.awt.BorderLayout;
import java.awt.Window;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.awt.event.*;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.lang.ref.WeakReference;
${definition}"
      associated_elems
	class_ref 365058 // JFileChooser
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931074 "JFormattedTextField"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.awt.im.InputContext;
import java.io.*;
import java.text.*;
import java.util.*;
import javax.swing.event.*;
import javax.swing.plaf.UIResource;
import javax.swing.text.*;
${definition}"
      associated_elems
	class_ref 472834 // JFormattedTextField
      end
      comment "Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931202 "JFrame"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.AWTEvent;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Container;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.GraphicsConfiguration;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.event.WindowEvent;
import javax.accessibility.Accessible;
import javax.accessibility.AccessibleContext;
import javax.accessibility.AccessibleState;
import javax.accessibility.AccessibleStateSet;
${definition}"
      associated_elems
	class_ref 476930 // JFrame
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931330 "JInternalFrame"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.beans.PropertyVetoException;
import java.beans.PropertyChangeEvent;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.beans.PropertyChangeListener;
import sun.awt.AppContext;
import sun.swing.SwingUtilities2;
${definition}"
      associated_elems
	class_ref 379522 // JInternalFrame
      end
      comment "Copyright (c) 1997, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931458 "JLayer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.awt.AWTAccessor;
import javax.swing.plaf.LayerUI;
import javax.swing.border.Border;
import javax.accessibility.*;
import java.awt.*;
import java.awt.event.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.security.AccessController;
import java.security.PrivilegedAction;
${definition}"
      associated_elems
	class_ref 1285122 // JLayer
      end
      comment "Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931586 "JMenu"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.AWTEvent;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.*;
import java.beans.*;
import java.util.*;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.event.*;
import javax.swing.plaf.*;
import javax.swing.plaf.basic.*;
import javax.accessibility.*;
import java.lang.ref.WeakReference;
${definition}"
      associated_elems
	class_ref 419714 // JMenu
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931714 "JOptionPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.KeyboardFocusManager;
import java.awt.Frame;
import java.awt.Point;
import java.awt.HeadlessException;
import java.awt.Window;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Vector;
import javax.swing.plaf.OptionPaneUI;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameAdapter;
import javax.accessibility.*;
import static javax.swing.ClientPropertyKey.PopupFactory_FORCE_HEAVYWEIGHT_POPUP;
${definition}"
      associated_elems
	class_ref 426626 // JOptionPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931842 "JPasswordField"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.text.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.io.*;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 1286402 // JPasswordField
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 931970 "JProgressBar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Color;
import java.awt.Graphics;
import java.text.Format;
import java.text.NumberFormat;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.event.*;
import javax.accessibility.*;
import javax.swing.plaf.ProgressBarUI;
${definition}"
      associated_elems
	class_ref 434690 // JProgressBar
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 932098 "JRadioButton"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 388354 // JRadioButton
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 932226 "JRadioButtonMenuItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.plaf.*;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 1287042 // JRadioButtonMenuItem
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 932354 "JRootPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.applet.Applet;
import java.awt.*;
import java.awt.event.*;
import java.beans.*;
import java.security.AccessController;
import javax.accessibility.*;
import javax.swing.plaf.RootPaneUI;
import java.util.Vector;
import java.io.Serializable;
import javax.swing.border.*;
import sun.awt.AWTAccessor;
import sun.security.action.GetBooleanAction;
${definition}"
      associated_elems
	class_ref 434050 // JRootPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 932482 "JScrollBar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.awt.Component;
import java.awt.Adjustable;
import java.awt.Dimension;
import java.awt.event.AdjustmentListener;
import java.awt.event.AdjustmentEvent;
import java.awt.Graphics;
import javax.swing.event.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 436098 // JScrollBar
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 932610 "JScrollPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.plaf.*;
import javax.swing.border.*;
import javax.swing.event.*;
import javax.accessibility.*;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Rectangle;
import java.awt.Insets;
import java.awt.LayoutManager;
import java.awt.Point;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.Transient;
${definition}"
      associated_elems
	class_ref 366210 // JScrollPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 932738 "JSlider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.awt.*;
import java.util.*;
import java.beans.*;
${definition}"
      associated_elems
	class_ref 439298 // JSlider
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 933378 "JSpinner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import javax.swing.event.*;
import javax.swing.text.*;
import javax.swing.plaf.SpinnerUI;
import java.util.*;
import java.beans.*;
import java.text.*;
import java.io.*;
import java.text.spi.DateFormatProvider;
import java.text.spi.NumberFormatProvider;
import javax.accessibility.*;
import sun.util.locale.provider.LocaleProviderAdapter;
import sun.util.locale.provider.LocaleResources;
${definition}"
      associated_elems
	class_ref 359938 // JSpinner
      end
      comment "Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 933506 "JSplitPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.ConstructorProperties;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.awt.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 441218 // JSplitPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 933634 "JTabbedPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import java.beans.Transient;
import java.util.*;
import javax.swing.event.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import sun.swing.SwingUtilities2;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 444162 // JTabbedPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934146 "JTextArea"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
import javax.swing.text.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.util.Collections;
import java.util.Set;
import java.util.StringTokenizer;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 1293186 // JTextArea
      end
      comment "Copyright (c) 1997, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934274 "JTextPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.swing.text.*;
import javax.swing.event.*;
import javax.swing.plaf.*;
${definition}"
      associated_elems
	class_ref 1293442 // JTextPane
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934402 "JToolBar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Color;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Insets;
import java.awt.LayoutManager;
import java.awt.LayoutManager2;
import java.awt.event.*;
import java.beans.*;
import javax.swing.border.Border;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Hashtable;
${definition}"
      associated_elems
	class_ref 456578 // JToolBar
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934530 "JToolTip"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Objects;
${definition}"
      associated_elems
	class_ref 358018 // JToolTip
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934658 "KeyboardManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import java.applet.*;
import java.beans.*;
import javax.swing.event.*;
import sun.awt.EmbeddedFrame;
${definition}"
      associated_elems
	class_ref 1294594 // KeyboardManager
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934786 "KeyStroke"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.AWTKeyStroke;
import java.awt.event.KeyEvent;
${definition}"
      associated_elems
	class_ref 356610 // KeyStroke
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 934914 "LayoutComparator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Comparator;
import java.util.LinkedList;
import java.util.ListIterator;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Window;
${definition}"
      associated_elems
	class_ref 1267842 // LayoutComparator
      end
      comment "Copyright (c) 2000, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935042 "LayoutStyle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Container;
import javax.swing.plaf.ComponentUI;
import sun.awt.AppContext;
${definition}"
      associated_elems
	class_ref 371330 // LayoutStyle
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935170 "LegacyGlueFocusTraversalPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.FocusTraversalPolicy;
import java.awt.Component;
import java.awt.Container;
import java.awt.Window;
import java.util.HashMap;
import java.util.HashSet;
import java.io.*;
${definition}"
      associated_elems
	class_ref 1294978 // LegacyGlueFocusTraversalPolicy
      end
      comment "Copyright (c) 2000, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935298 "MenuSelectionManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.util.*;
import java.awt.event.*;
import javax.swing.event.*;
import sun.awt.AppContext;
import sun.swing.SwingUtilities2;
${definition}"
      associated_elems
	class_ref 387074 // MenuSelectionManager
      end
      comment "Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935426 "MultiUIDefaults"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Locale;
import java.util.Map.Entry;
import java.util.Set;
${definition}"
      associated_elems
	class_ref 1295106 // MultiUIDefaults
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935554 "OverlayLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.beans.ConstructorProperties;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1295490 // OverlayLayout
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935682 "Popup"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import sun.awt.ModalExclude;
import sun.awt.SunToolkit;
${definition}"
      associated_elems
	class_ref 393218 // Popup
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935810 "SwingHeavyWeight"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1296898 // SwingHeavyWeight
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 935938 "PopupFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.awt.EmbeddedFrame;
import sun.awt.OSInfo;
import java.applet.Applet;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.security.AccessController;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 1296002 // PopupFactory
      end
      comment "Copyright (c) 1999, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936066 "ProgressMonitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.awt.BorderLayout;
import java.awt.Frame;
import java.awt.Dialog;
import java.awt.Window;
import java.awt.Component;
import java.awt.Container;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.IllegalComponentStateException;
import java.awt.Point;
import java.awt.Rectangle;
import java.text.*;
import java.util.Locale;
import javax.accessibility.*;
import javax.swing.event.*;
import javax.swing.text.*;
${definition}"
      associated_elems
	class_ref 1297026 // ProgressMonitor
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936194 "ProgressMonitorInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.awt.Component;
${definition}"
      associated_elems
	class_ref 1297410 // ProgressMonitorInputStream
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936322 "Renderer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
${definition}"
      associated_elems
	class_ref 1297538 // Renderer
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936450 "ScrollPaneLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.border.*;
import java.awt.LayoutManager;
import java.awt.Component;
import java.awt.Container;
import java.awt.Rectangle;
import java.awt.Dimension;
import java.awt.Insets;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1297666 // ScrollPaneLayout
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936578 "SizeRequirements"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 431874 // SizeRequirements
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936706 "SizeSequence"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1292930 // SizeSequence
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936834 "SortOrder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1269890 // SortOrder
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 936962 "SpinnerDateModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1289858 // SpinnerDateModel
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937090 "SpinnerListModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1290882 // SpinnerListModel
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937218 "SpinnerNumberModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1290498 // SpinnerNumberModel
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937346 "Spring"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
${definition}"
      associated_elems
	class_ref 1297922 // Spring
      end
      comment "Copyright (c) 2001, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937474 "SpringLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FontMetrics;
import java.awt.Insets;
import java.awt.LayoutManager2;
import java.awt.Rectangle;
import java.util.*;
${definition}"
      associated_elems
	class_ref 1298050 // SpringLayout
      end
      comment "Copyright (c) 2001, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937602 "SwingPaintEventDispatcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
import java.awt.Rectangle;
import java.awt.event.PaintEvent;
import java.security.AccessController;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import sun.awt.event.IgnorePaintEvent;
import sun.security.action.GetBooleanAction;
import sun.security.action.GetPropertyAction;
${definition}"
      associated_elems
	class_ref 1299714 // SwingPaintEventDispatcher
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937730 "SwingUtilities"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.reflect.misc.ReflectUtil;
import sun.swing.SwingUtilities2;
import sun.swing.UIAction;
import java.applet.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.dnd.DropTarget;
import java.lang.reflect.*;
import javax.accessibility.*;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.plaf.UIResource;
import javax.swing.text.View;
import java.security.AccessController;
import sun.security.action.GetPropertyAction;
import sun.awt.AppContext;
${definition}"
      associated_elems
	class_ref 1299970 // SwingUtilities
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937858 "TablePrintable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.table.*;
import java.awt.*;
import java.awt.print.*;
import java.awt.geom.*;
import java.text.MessageFormat;
${definition}"
      associated_elems
	class_ref 1300226 // TablePrintable
      end
      comment "Copyright (c) 2003, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 937986 "Timer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.locks.*;
import java.awt.*;
import java.awt.event.*;
import java.io.Serializable;
import java.io.*;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import javax.swing.event.EventListenerList;
${definition}"
      associated_elems
	class_ref 354690 // Timer
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 938114 "TimerQueue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicLong;
import sun.awt.AppContext;
${definition}"
      associated_elems
	class_ref 1300354 // TimerQueue
      end
      comment "Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 938242 "ToolTipManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.awt.*;
${definition}"
      associated_elems
	class_ref 1300738 // ToolTipManager
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 938370 "UIManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Font;
import java.awt.Color;
import java.awt.Insets;
import java.awt.Dimension;
import java.awt.KeyboardFocusManager;
import java.awt.KeyEventPostProcessor;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.security.AccessController;
import javax.swing.plaf.ComponentUI;
import javax.swing.border.Border;
import javax.swing.event.SwingPropertyChangeSupport;
import java.beans.PropertyChangeListener;
import java.io.Serializable;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.Locale;
import sun.awt.SunToolkit;
import sun.awt.OSInfo;
import sun.security.action.GetPropertyAction;
import sun.swing.SwingUtilities2;
import java.lang.reflect.Method;
import java.util.HashMap;
import sun.awt.AppContext;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 1301506 // UIManager
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 938498 "UnsupportedLookAndFeelException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1301890 // UnsupportedLookAndFeelException
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 938626 "ViewportLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.AWTError;
import java.awt.LayoutManager;
import java.awt.Component;
import java.awt.Container;
import java.awt.Rectangle;
import java.awt.Point;
import java.awt.Dimension;
import java.awt.Insets;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1302018 // ViewportLayout
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 150530 // colorchooser

  package_ref 151554 // plaf

  package_ref 151682 // event

  package_ref 151810 // border

  package_ref 151938 // text

  package_ref 152194 // filechooser

  package_ref 154114 // undo

  package_ref 154242 // tree

  package_ref 155522 // table
end
