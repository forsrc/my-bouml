class GetFieldImpl
!!!414722.java!!!	GetFieldImpl(inout desc : ObjectStreamClass)
            this.desc = desc;
            primVals = new byte[desc.getPrimDataSize()];
            objVals = new Object[desc.getNumObjFields()];
            objHandles = new int[objVals.length];
!!!414850.java!!!	getObjectStreamClass() : ObjectStreamClass
            return desc;
!!!414978.java!!!	defaulted(inout name : String) : boolean
            return (getFieldOffset(name, null) < 0);
!!!415106.java!!!	get(inout name : String, inout val : boolean) : boolean
            int off = getFieldOffset(name, Boolean.TYPE);
            return (off >= 0) ? Bits.getBoolean(primVals, off) : val;
!!!415234.java!!!	get(inout name : String, in val : byte) : byte
            int off = getFieldOffset(name, Byte.TYPE);
            return (off >= 0) ? primVals[off] : val;
!!!415362.java!!!	get(inout name : String, in val : char) : char
            int off = getFieldOffset(name, Character.TYPE);
            return (off >= 0) ? Bits.getChar(primVals, off) : val;
!!!415490.java!!!	get(inout name : String, in val : short) : short
            int off = getFieldOffset(name, Short.TYPE);
            return (off >= 0) ? Bits.getShort(primVals, off) : val;
!!!415618.java!!!	get(inout name : String, in val : int) : int
            int off = getFieldOffset(name, Integer.TYPE);
            return (off >= 0) ? Bits.getInt(primVals, off) : val;
!!!415746.java!!!	get(inout name : String, in val : float) : float
            int off = getFieldOffset(name, Float.TYPE);
            return (off >= 0) ? Bits.getFloat(primVals, off) : val;
!!!415874.java!!!	get(inout name : String, in val : long) : long
            int off = getFieldOffset(name, Long.TYPE);
            return (off >= 0) ? Bits.getLong(primVals, off) : val;
!!!416002.java!!!	get(inout name : String, in val : double) : double
            int off = getFieldOffset(name, Double.TYPE);
            return (off >= 0) ? Bits.getDouble(primVals, off) : val;
!!!416130.java!!!	get(inout name : String, inout val : Object) : Object
            int off = getFieldOffset(name, Object.class);
            if (off >= 0) {
                int objHandle = objHandles[off];
                handles.markDependency(passHandle, objHandle);
                return (handles.lookupException(objHandle) == null) ?
                    objVals[off] : null;
            } else {
                return val;
            }
!!!416258.java!!!	readFields() : void
            bin.readFully(primVals, 0, primVals.length, false);

            int oldHandle = passHandle;
            ObjectStreamField[] fields = desc.getFields(false);
            int numPrimFields = fields.length - objVals.length;
            for (int i = 0; i < objVals.length; i++) {
                objVals[i] =
                    readObject0(fields[numPrimFields + i].isUnshared());
                objHandles[i] = passHandle;
            }
            passHandle = oldHandle;
!!!416386.java!!!	getFieldOffset(inout name : String, inout type : Class) : int
            ObjectStreamField field = desc.getField(name, type);
            if (field != null) {
                return field.getOffset();
            } else if (desc.getLocalDesc().getField(name, type) != null) {
                return -1;
            } else {
                throw new IllegalArgumentException("no such field " + name +
                                                   " with type " + type);
            }
