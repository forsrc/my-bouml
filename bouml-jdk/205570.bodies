class IIOPProfileTemplateImpl
!!!671746.java!!!	equals(inout obj : Object) : boolean
        if (!(obj instanceof IIOPProfileTemplateImpl))
            return false ;

        IIOPProfileTemplateImpl other = (IIOPProfileTemplateImpl)obj ;

        return super.equals( obj ) && giopVersion.equals( other.giopVersion ) &&
            primary.equals( other.primary ) ;
!!!671874.java!!!	hashCode() : int
        return super.hashCode() ^ giopVersion.hashCode() ^ primary.hashCode() ;
!!!672002.java!!!	create(inout oktemp : ObjectKeyTemplate, inout id : ObjectId) : TaggedProfile
        return IIOPFactories.makeIIOPProfile( orb, oktemp, id, this ) ;
!!!672130.java!!!	getGIOPVersion() : GIOPVersion
        return giopVersion ;
!!!672258.java!!!	getPrimaryAddress() : IIOPAddress
        return primary ;
!!!672386.java!!!	IIOPProfileTemplateImpl(inout orb : ORB, inout version : GIOPVersion, inout primary : IIOPAddress)
        this.orb = orb ;
        this.giopVersion = version ;
        this.primary = primary ;
        if (giopVersion.getMinor() == 0)
            // Adding tagged components is not allowed for IIOP 1.0,
            // so this template is complete and should be made immutable.
            makeImmutable() ;
!!!672514.java!!!	IIOPProfileTemplateImpl(inout istr : InputStream)
        byte major = istr.read_octet() ;
        byte minor = istr.read_octet() ;
        giopVersion = GIOPVersion.getInstance( major, minor ) ;
        primary = new IIOPAddressImpl( istr ) ;
        orb = (ORB)(istr.orb()) ;
        // Handle any tagged components (if applicable)
        if (minor > 0)
            EncapsulationUtility.readIdentifiableSequence(
                this, orb.getTaggedComponentFactoryFinder(), istr ) ;

        makeImmutable() ;
!!!672642.java!!!	write(inout okeyTemplate : ObjectKeyTemplate, inout id : ObjectId, inout os : OutputStream) : void
        giopVersion.write( os ) ;
        primary.write( os ) ;

        // Note that this is NOT an encapsulation: do not marshal
        // the endianness flag.  However, the length is required.
        // Note that this cannot be accomplished with a codec!

        // Use the byte order of the given stream
        OutputStream encapsulatedOS =
            sun.corba.OutputStreamFactory.newEncapsOutputStream(
                (ORB)os.orb(), ((CDROutputStream)os).isLittleEndian() ) ;

        okeyTemplate.write( id, encapsulatedOS ) ;
        EncapsulationUtility.writeOutputStream( encapsulatedOS, os ) ;

        if (giopVersion.getMinor() > 0)
            EncapsulationUtility.writeIdentifiableSequence( this, os ) ;
!!!672770.java!!!	writeContents(inout os : OutputStream) : void
        giopVersion.write( os ) ;
        primary.write( os ) ;

        if (giopVersion.getMinor() > 0)
            EncapsulationUtility.writeIdentifiableSequence( this, os ) ;
!!!672898.java!!!	getId() : int
        return TAG_INTERNET_IOP.value ;
!!!673026.java!!!	isEquivalent(inout temp : TaggedProfileTemplate) : boolean
        if (!(temp instanceof IIOPProfileTemplateImpl))
            return false ;

        IIOPProfileTemplateImpl tempimp = (IIOPProfileTemplateImpl)temp ;

        return primary.equals( tempimp.primary )  ;
