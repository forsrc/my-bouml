class KeyBuilder
!!!2409346.java!!!	initialize(inout a : AttributeSet) : void
            if (a instanceof SmallAttributeSet) {
                initialize(((SmallAttributeSet)a).attributes);
            } else {
                keys.removeAllElements();
                data.removeAllElements();
                Enumeration names = a.getAttributeNames();
                while (names.hasMoreElements()) {
                    Object name = names.nextElement();
                    addAttribute(name, a.getAttribute(name));
                }
            }
!!!2409474.java!!!	initialize(inout sorted : Object [[]]) : void
            keys.removeAllElements();
            data.removeAllElements();
            int n = sorted.length;
            for (int i = 0; i < n; i += 2) {
                keys.addElement(sorted[i]);
                data.addElement(sorted[i+1]);
            }
!!!2409602.java!!!	createTable() : Object
            int n = keys.size();
            Object[] tbl = new Object[2 * n];
            for (int i = 0; i < n; i ++) {
                int offs = 2 * i;
                tbl[offs] = keys.elementAt(i);
                tbl[offs + 1] = data.elementAt(i);
            }
            return tbl;
!!!2409730.java!!!	getCount() : int
            return keys.size();
!!!2409858.java!!!	addAttribute(inout key : Object, inout value : Object) : void
            keys.addElement(key);
            data.addElement(value);
!!!2409986.java!!!	addAttributes(inout attr : AttributeSet) : void
            if (attr instanceof SmallAttributeSet) {
                // avoid searching the keys, they are already interned.
                Object[] tbl = ((SmallAttributeSet)attr).attributes;
                int n = tbl.length;
                for (int i = 0; i < n; i += 2) {
                    addAttribute(tbl[i], tbl[i+1]);
                }
            } else {
                Enumeration names = attr.getAttributeNames();
                while (names.hasMoreElements()) {
                    Object name = names.nextElement();
                    addAttribute(name, attr.getAttribute(name));
                }
            }
!!!2410114.java!!!	removeAttribute(inout key : Object) : void
            int n = keys.size();
            for (int i = 0; i < n; i++) {
                if (keys.elementAt(i).equals(key)) {
                    keys.removeElementAt(i);
                    data.removeElementAt(i);
                    return;
                }
            }
!!!2410242.java!!!	removeAttributes(inout names : Enumeration) : void
            while (names.hasMoreElements()) {
                Object name = names.nextElement();
                removeAttribute(name);
            }
!!!2410370.java!!!	removeAttributes(inout attr : AttributeSet) : void
            Enumeration names = attr.getAttributeNames();
            while (names.hasMoreElements()) {
                Object name = names.nextElement();
                Object value = attr.getAttribute(name);
                removeSearchAttribute(name, value);
            }
!!!2410498.java!!!	removeSearchAttribute(inout ikey : Object, inout value : Object) : void
            int n = keys.size();
            for (int i = 0; i < n; i++) {
                if (keys.elementAt(i).equals(ikey)) {
                    if (data.elementAt(i).equals(value)) {
                        keys.removeElementAt(i);
                        data.removeElementAt(i);
                    }
                    return;
                }
            }
