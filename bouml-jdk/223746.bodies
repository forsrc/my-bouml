class TransientBindingIterator
!!!1076738.java!!!	TransientBindingIterator(inout orb : ORB, inout aTable : Hashtable, inout thePOA : POA)
        super(orb);
        theHashtable = aTable;
        theEnumeration = this.theHashtable.elements();
        currentSize = this.theHashtable.size();
        this.nsPOA = thePOA;
!!!1076866.java!!!	NextOne(inout b : BindingHolder) : boolean
        // If there are more elements get the next element
        boolean hasMore = theEnumeration.hasMoreElements();
        if (hasMore) {
            b.value =
                ((InternalBindingValue)theEnumeration.nextElement()).theBinding;
            currentSize--;
        } else {
            // Return empty but marshalable binding
            b.value = new Binding(new NameComponent[0],BindingType.nobject);
        }
        return hasMore;
!!!1076994.java!!!	Destroy() : void
        // Remove the object from the Active Object Map.
        try {
            byte[] objectId = nsPOA.servant_to_id( this );
            if( objectId != null ) {
                nsPOA.deactivate_object( objectId );
            }
        }
        catch( Exception e ) {
            NamingUtils.errprint("BindingIterator.Destroy():caught exception:");
            NamingUtils.printException(e);
        }
!!!1077122.java!!!	RemainingElements() : int
        return currentSize;
