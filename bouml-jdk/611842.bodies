class StringType
!!!3880834.java!!!	toString() : String
        return "string";
!!!3880962.java!!!	identicalTo(inout other : Type) : boolean
        return this == other;
!!!3881090.java!!!	toSignature() : String
        return "Ljava/lang/String;";
!!!3881218.java!!!	isSimple() : boolean
        return true;
!!!3881346.java!!!	toJCType() : Type
        return com.sun.org.apache.bcel.internal.generic.Type.STRING;
!!!3881474.java!!!	translateTo(inout classGen : ClassGenerator, inout methodGen : MethodGenerator, inout type : Type) : void
        if (type == Type.Boolean) {
            translateTo(classGen, methodGen, (BooleanType) type);
        }
        else if (type == Type.Real) {
            translateTo(classGen, methodGen, (RealType) type);
        }
        else if (type == Type.Reference) {
            translateTo(classGen, methodGen, (ReferenceType) type);
        }
        else if (type == Type.ObjectString) {
            // NOP -> same representation
        }
        else {
            ErrorMsg err = new ErrorMsg(ErrorMsg.DATA_CONVERSION_ERR,
                                        toString(), type.toString());
            classGen.getParser().reportError(Constants.FATAL, err);
        }
!!!3881602.java!!!	translateTo(inout classGen : ClassGenerator, inout methodGen : MethodGenerator, inout type : BooleanType) : void
        final InstructionList il = methodGen.getInstructionList();
        FlowList falsel = translateToDesynthesized(classGen, methodGen, type);
        il.append(ICONST_1);
        final BranchHandle truec = il.append(new GOTO(null));
        falsel.backPatch(il.append(ICONST_0));
        truec.setTarget(il.append(NOP));
!!!3881730.java!!!	translateTo(inout classGen : ClassGenerator, inout methodGen : MethodGenerator, inout type : RealType) : void
        final ConstantPoolGen cpg = classGen.getConstantPool();
        final InstructionList il = methodGen.getInstructionList();
        il.append(new INVOKESTATIC(cpg.addMethodref(BASIS_LIBRARY_CLASS,
                                                    STRING_TO_REAL,
                                                    STRING_TO_REAL_SIG)));
!!!3881858.java!!!	translateToDesynthesized(inout classGen : ClassGenerator, inout methodGen : MethodGenerator, inout type : BooleanType) : FlowList
        final ConstantPoolGen cpg = classGen.getConstantPool();
        final InstructionList il = methodGen.getInstructionList();

        il.append(new INVOKEVIRTUAL(cpg.addMethodref(STRING_CLASS,
                                                     "length", "()I")));
        return new FlowList(il.append(new IFEQ(null)));
!!!3881986.java!!!	translateTo(inout classGen : ClassGenerator, inout methodGen : MethodGenerator, inout type : ReferenceType) : void
        methodGen.getInstructionList().append(NOP);
!!!3882114.java!!!	translateTo(inout classGen : ClassGenerator, inout methodGen : MethodGenerator, inout clazz : Class) : void
        // Is String <: clazz? I.e. clazz in { String, Object }
        if (clazz.isAssignableFrom(java.lang.String.class)) {
            methodGen.getInstructionList().append(NOP);
        }
        else {
            ErrorMsg err = new ErrorMsg(ErrorMsg.DATA_CONVERSION_ERR,
                                        toString(), clazz.getName());
            classGen.getParser().reportError(Constants.FATAL, err);
        }
!!!3882242.java!!!	translateFrom(inout classGen : ClassGenerator, inout methodGen : MethodGenerator, inout clazz : Class) : void
        final ConstantPoolGen cpg = classGen.getConstantPool();
        final InstructionList il = methodGen.getInstructionList();

        if (clazz.getName().equals("java.lang.String")) {
            // same internal representation, convert null to ""
            il.append(DUP);
            final BranchHandle ifNonNull = il.append(new IFNONNULL(null));
            il.append(POP);
            il.append(new PUSH(cpg, ""));
            ifNonNull.setTarget(il.append(NOP));
        }
        else {
            ErrorMsg err = new ErrorMsg(ErrorMsg.DATA_CONVERSION_ERR,
                                        toString(), clazz.getName());
            classGen.getParser().reportError(Constants.FATAL, err);
        }
!!!3882370.java!!!	translateBox(inout classGen : ClassGenerator, inout methodGen : MethodGenerator) : void
        translateTo(classGen, methodGen, Type.Reference);
!!!3882498.java!!!	translateUnBox(inout classGen : ClassGenerator, inout methodGen : MethodGenerator) : void
        methodGen.getInstructionList().append(NOP);
!!!3882626.java!!!	getClassName() : String
        return(STRING_CLASS);
!!!3882754.java!!!	LOAD(in slot : int) : Instruction
        return new ALOAD(slot);
!!!3882882.java!!!	STORE(in slot : int) : Instruction
        return new ASTORE(slot);
