format 222
"internal" // jdk1.8::com::sun::naming::internal
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/naming/internal/"
  java_package "com.sun.naming.internal"
  classview 155138 "internal"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 539522 "FactoryEnumeration"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The FactoryEnumeration is used for returning factory instances.

@author Rosanna Lee
@author Scott Seligman

 no need to implement Enumeration since this is only for internal use"
      classrelation 1068290 // factories (<unidirectional association>)
	relation 1068290 --->
	  a role_name "factories" private
	    comment " List<NamedWeakReference<Class | Object>>
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NamedWeakReference<Object>> ${name}${value};
"
	    classrelation_ref 1068290 // factories (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      attribute 702850 "posn"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1068418 // loader (<unidirectional association>)
	relation 1068418 --->
	  a role_name "loader" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1068418 // loader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      operation 3310210 "FactoryEnumeration"
	package explicit_return_type ""
	nparams 2
	  param inout name "factories" type class_ref 175362 // List
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<NamedWeakReference<Object>> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records the input list and uses it directly to satisfy
hasMore()/next() requests. An alternative would have been to use
an enumeration/iterator from the list, but we want to update the
list so we keep the
original list. The list initially contains Class objects.
As each element is used, the Class object is replaced by an
instance of the Class itself; eventually, the list contains
only a list of factory instances and no more updates are required.

<p> Both Class objects and factories are wrapped in weak
references so as not to prevent GC of the class loader.  Each
weak reference is tagged with the factory's class name so the
class can be reloaded if the reference is cleared.

@param factories A non-null list
@param loader    The class loader of the list's contents

This internal method is used with Thread Context Class Loader (TCCL),
please don't expose this method as public.
"
      end

      operation 3310338 "next"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3310466 "hasMore"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 539650 "NamedWeakReference"
      visibility package 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 131330 // WeakReference
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A NamedWeakReference is a WeakReference with an immutable string name.

@author Scott Seligman
"
      classrelation 1068546 // <realization>
	relation 1068546 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1068546 // <realization>
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 1068674 // name (<unidirectional association>)
	relation 1068674 --->
	  a role_name "name" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1068674 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 3310594 "NamedWeakReference"
	cpp_inline package explicit_return_type ""
	nparams 2
	  param inout name "referent" explicit_type "T"
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3310722 "getName"
	cpp_inline package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 539778 "ResourceManager"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The ResourceManager class facilitates the reading of JNDI resource files.

@author Rosanna Lee
@author Scott Seligman
"
      classrelation 1068802 // PROVIDER_RESOURCE_FILE_NAME (<unidirectional association>)
	relation 1068802 --->
	  a role_name "PROVIDER_RESOURCE_FILE_NAME" init_value "
            \"jndiprovider.properties\"" class_relation const_relation private
	    comment "
Name of provider resource files (without the package-name prefix.)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1068802 // PROVIDER_RESOURCE_FILE_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1068930 // APP_RESOURCE_FILE_NAME (<unidirectional association>)
	relation 1068930 --->
	  a role_name "APP_RESOURCE_FILE_NAME" init_value " \"jndi.properties\"" class_relation const_relation private
	    comment "
Name of application resource files.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1068930 // APP_RESOURCE_FILE_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1069058 // JRELIB_PROPERTY_FILE_NAME (<unidirectional association>)
	relation 1069058 --->
	  a role_name "JRELIB_PROPERTY_FILE_NAME" init_value " \"jndi.properties\"" class_relation const_relation private
	    comment "
Name of properties file in <java.home>/lib.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1069058 // JRELIB_PROPERTY_FILE_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1069186 // DISABLE_APP_RESOURCE_FILES (<unidirectional association>)
	relation 1069186 --->
	  a role_name "DISABLE_APP_RESOURCE_FILES" init_value "
        \"com.sun.naming.disable.app.resource.files\"" class_relation const_relation private
	    comment "
Internal environment property, that when set to \"true\", disables
application resource files lookup to prevent recursion issues
when validating signed JARs.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1069186 // DISABLE_APP_RESOURCE_FILES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1069314 // listProperties (<unidirectional association>)
	relation 1069314 --->
	  a role_name "listProperties" multiplicity "[]" init_value " {
        Context.OBJECT_FACTORIES,
        Context.URL_PKG_PREFIXES,
        Context.STATE_FACTORIES,
        // The following shouldn't create a runtime dependence on ldap package.
        javax.naming.ldap.LdapContext.CONTROL_FACTORIES
    }" class_relation const_relation private
	    comment "
The standard JNDI properties that specify colon-separated lists.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1069314 // listProperties (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1069442 // helper (<unidirectional association>)
	relation 1069442 --->
	  a role_name "helper" init_value "
            VersionHelper.getVersionHelper()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1069442 // helper (<unidirectional association>)
	  b parent class_ref 539906 // VersionHelper
      end

      classrelation 1069570 // propertiesCache (<unidirectional association>)
	relation 1069570 --->
	  a role_name "propertiesCache" init_value " new WeakHashMap<>(11)" class_relation const_relation private
	    comment "
A cache of the properties that have been constructed by
the ResourceManager.  A Hashtable from a provider resource
file is keyed on a class in the resource file's package.
One from application resource files is keyed on the thread's
context class loader.

 WeakHashMap<Class | ClassLoader, Hashtable>
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Hashtable<? super String, Object>> ${name}${value};
"
	    classrelation_ref 1069570 // propertiesCache (<unidirectional association>)
	  b parent class_ref 192002 // WeakHashMap
      end

      classrelation 1069698 // factoryCache (<unidirectional association>)
	relation 1069698 --->
	  a role_name "factoryCache" init_value " new WeakHashMap<>(11)" class_relation const_relation private
	    comment "
A cache of factory objects (ObjectFactory, StateFactory, ControlFactory).

A two-level cache keyed first on context class loader and then
on propValue.  Value is a list of class or factory objects,
weakly referenced so as not to prevent GC of the class loader.
Used in getFactories().

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ClassLoader, Map<String, List<NamedWeakReference<Object>>>> ${name}${value};
"
	    classrelation_ref 1069698 // factoryCache (<unidirectional association>)
	  b parent class_ref 192002 // WeakHashMap
      end

      classrelation 1069826 // urlFactoryCache (<unidirectional association>)
	relation 1069826 --->
	  a role_name "urlFactoryCache" init_value " new WeakHashMap<>(11)" class_relation const_relation private
	    comment "
A cache of URL factory objects (ObjectFactory).

A two-level cache keyed first on context class loader and then
on classSuffix+propValue.  Value is the factory itself (weakly
referenced so as not to prevent GC of the class loader) or
NO_FACTORY if a previous search revealed no factory.  Used in
getFactory().

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ClassLoader, Map<String, WeakReference<Object>>> ${name}${value};
"
	    classrelation_ref 1069826 // urlFactoryCache (<unidirectional association>)
	  b parent class_ref 192002 // WeakHashMap
      end

      classrelation 1069954 // NO_FACTORY (<unidirectional association>)
	relation 1069954 --->
	  a role_name "NO_FACTORY" init_value "
            new WeakReference<>(null)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 1069954 // NO_FACTORY (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      class 540034 "AppletParameter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1070082 // clazz (<unidirectional association>)
	  relation 1070082 --->
	    a role_name "clazz" init_value " getClass(\"java.applet.Applet\")" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 1070082 // clazz (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 1070210 // getMethod (<unidirectional association>)
	  relation 1070210 --->
	    a role_name "getMethod" init_value "
            getMethod(clazz, \"getParameter\", String.class)" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1070210 // getMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	operation 3310850 "getClass"
	  class_operation private return_type class_ref 130818 // Class
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3310978 "getMethod"
	  class_operation private return_type class_ref 137858 // Method
	  nparams 3
	    param inout name "clazz" type class_ref 130818 // Class
	    param inout name "name" type class_ref 128130 // String
	    param inout name "paramTypes" explicit_type "Class<?>..."
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3311106 "get"
	  class_operation package return_type class_ref 129538 // Object
	  nparams 2
	    param inout name "applet" type class_ref 129538 // Object
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of the applet's named parameter.
"
	end
      end

      operation 3311234 "ResourceManager"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " There should be no instances of this class."
      end

      operation 3311362 "getInitialEnvironment"
	class_operation public return_type class_ref 137090 // Hashtable
	nparams 1
	  param inout name "env" type class_ref 137090 // Hashtable
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?, ?> ${name}${(}${t0}<?, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " ---------- Public methods ----------

Given the environment parameter passed to the initial context
constructor, returns the full environment for that initial
context (never null).  This is based on the environment
parameter, the applet parameters (where appropriate), the
system properties, and all application resource files.

<p> This method will modify <tt>env</tt> and save
a reference to it.  The caller may no longer modify it.

@param env       environment passed to initial context constructor.
                 Null indicates an empty environment.

@throws NamingException if an error occurs while reading a
         resource file
"
      end

      operation 3311490 "getProperty"
	class_operation public return_type class_ref 128130 // String
	nparams 4
	  param inout name "propName" type class_ref 128130 // String
	  param inout name "env" type class_ref 137090 // Hashtable
	  param inout name "ctx" type class_ref 262018 // Context
	  param inout name "concat" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?,?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the property from the environment, or from the provider
resource file associated with the given context.  The environment
may in turn contain values that come from applet parameters,
system properties, or application resource files.

If <tt>concat</tt> is true and both the environment and the provider
resource file contain the property, the two values are concatenated
(with a ':' separator).

Returns null if no value is found.

@param propName The non-null property name
@param env      The possibly null environment properties
@param ctx      The possibly null context
@param concat   True if multiple values should be concatenated
@return the property value, or null is there is none.
@throws NamingException if an error occurs while reading the provider
resource file.
"
      end

      operation 3311618 "getFactories"
	class_operation public return_type class_ref 539522 // FactoryEnumeration
	nparams 3
	  param inout name "propName" type class_ref 128130 // String
	  param inout name "env" type class_ref 137090 // Hashtable
	  param inout name "ctx" type class_ref 262018 // Context
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?,?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves an enumeration of factory classes/object specified by a
property.

The property is gotten from the environment and the provider
resource file associated with the given context and concantenated.
See getProperty(). The resulting property value is a list of class names.
<p>
This method then loads each class using the current thread's context
class loader and keeps them in a list. Any class that cannot be loaded
is ignored. The resulting list is then cached in a two-level
hash table, keyed first by the context class loader and then by
the property's value.
The next time threads of the same context class loader call this
method, they can use the cached list.
<p>
After obtaining the list either from the cache or by creating one from
the property value, this method then creates and returns a
FactoryEnumeration using the list. As the FactoryEnumeration is
traversed, the cached Class object in the list is instantiated and
replaced by an instance of the factory object itself.  Both class
objects and factories are wrapped in weak references so as not to
prevent GC of the class loader.
<p>
Note that multiple threads can be accessing the same cached list
via FactoryEnumeration, which locks the list during each next().
The size of the list will not change,
but a cached Class object might be replaced by an instantiated factory
object.

@param propName  The non-null property name
@param env       The possibly null environment properties
@param ctx       The possibly null context
@return An enumeration of factory classes/objects; null if none.
@exception NamingException If encounter problem while reading the provider
property file.
@see javax.naming.spi.NamingManager#getObjectInstance
@see javax.naming.spi.NamingManager#getStateToBind
@see javax.naming.spi.DirectoryManager#getObjectInstance
@see javax.naming.spi.DirectoryManager#getStateToBind
@see javax.naming.ldap.ControlFactory#getControlInstance
"
      end

      operation 3311746 "getFactory"
	class_operation public return_type class_ref 129538 // Object
	nparams 5
	  param inout name "propName" type class_ref 128130 // String
	  param inout name "env" type class_ref 137090 // Hashtable
	  param inout name "ctx" type class_ref 262018 // Context
	  param inout name "classSuffix" type class_ref 128130 // String
	  param inout name "defaultPkgPrefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?,?> ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a factory from a list of packages specified in a
property.

The property is gotten from the environment and the provider
resource file associated with the given context and concatenated.
classSuffix is added to the end of this list.
See getProperty(). The resulting property value is a list of package
prefixes.
<p>
This method then constructs a list of class names by concatenating
each package prefix with classSuffix and attempts to load and
instantiate the class until one succeeds.
Any class that cannot be loaded is ignored.
The resulting object is then cached in a two-level hash table,
keyed first by the context class loader and then by the property's
value and classSuffix.
The next time threads of the same context class loader call this
method, they use the cached factory.
If no factory can be loaded, NO_FACTORY is recorded in the table
so that next time it'll return quickly.

@param propName  The non-null property name
@param env       The possibly null environment properties
@param ctx       The possibly null context
@param classSuffix The non-null class name
                 (e.g. \".ldap.ldapURLContextFactory).
@param defaultPkgPrefix The non-null default package prefix.
       (e.g., \"com.sun.jndi.url\").
@return An factory object; null if none.
@exception NamingException If encounter problem while reading the provider
property file, or problem instantiating the factory.

@see javax.naming.spi.NamingManager#getURLContext
@see javax.naming.spi.NamingManager#getURLObject
"
      end

      operation 3311874 "getProviderResource"
	class_operation private return_type class_ref 137090 // Hashtable
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super String, Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------- Private methods ----------

Returns the properties contained in the provider resource file
of an object's package.  Returns an empty hash table if the
object is null or the resource file cannot be found.  The
results are cached.

@throws NamingException if an error occurs while reading the file.
"
      end

      operation 3312002 "getApplicationResources"
	class_operation private return_type class_ref 137090 // Hashtable
	nparams 0
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? super String, Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Hashtable (never null) that results from merging
all application resource files available to this thread's
context class loader.  The properties file in <java.home>/lib
is also merged in.  The results are cached.

SECURITY NOTES:
1.  JNDI needs permission to read the application resource files.
2.  Any class will be able to use JNDI to view the contents of
the application resource files in its own classpath.  Give
careful consideration to this before storing sensitive
information there.

@throws NamingException if an error occurs while reading a resource
 file.
"
      end

      operation 3312130 "mergeTables"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "props1" type class_ref 137090 // Hashtable
	  param inout name "props2" type class_ref 137090 // Hashtable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super String, Object> ${p0}, ${t1}<? super String, Object> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merge the properties from one hash table into another.  Each
property in props2 that is not in props1 is added to props1.
For each property in both hash tables that is one of the
standard JNDI properties that specify colon-separated lists,
the values are concatenated and stored in props1.
"
      end

      operation 3312258 "isListProperty"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "prop" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is a property one of the standard JNDI properties that specify
colon-separated lists?
"
      end
    end

    class 539906 "VersionHelper"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "VersionHelper was used by JNDI to accommodate differences between
JDK 1.1.x and the Java 2 platform. As this is no longer necessary
since JNDI's inclusion in the platform, this class currently
serves as a set of utilities for performing system-level things,
such as class-loading and reading system properties.

@author Rosanna Lee
@author Scott Seligman
"
      classrelation 1070338 // helper (<unidirectional association>)
	relation 1070338 --->
	  a role_name "helper" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1070338 // helper (<unidirectional association>)
	  b parent class_ref 539906 // VersionHelper
      end

      classrelation 1070466 // PROPS (<unidirectional association>)
	relation 1070466 --->
	  a role_name "PROPS" multiplicity "[]" init_value " new String[] {
        javax.naming.Context.INITIAL_CONTEXT_FACTORY,
        javax.naming.Context.OBJECT_FACTORIES,
        javax.naming.Context.URL_PKG_PREFIXES,
        javax.naming.Context.STATE_FACTORIES,
        javax.naming.Context.PROVIDER_URL,
        javax.naming.Context.DNS_URL,
        // The following shouldn't create a runtime dependence on ldap package.
        javax.naming.ldap.LdapContext.CONTROL_FACTORIES
    }" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1070466 // PROPS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 702978 "INITIAL_CONTEXT_FACTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 703106 "OBJECT_FACTORIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 703234 "URL_PKG_PREFIXES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 703362 "STATE_FACTORIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 703490 "PROVIDER_URL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 703618 "DNS_URL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 703746 "CONTROL_FACTORIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3312386 "VersionHelper"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 139906 "initialization"
	
	cpp "" ""
	java "  static {
        helper = new VersionHelper12();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 3312514 "getVersionHelper"
	class_operation public return_type class_ref 539906 // VersionHelper
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3312642 "loadClass"
	abstract public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3312770 "loadClass"
	abstract package return_type class_ref 130818 // Class
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "cl" type class_ref 129026 // ClassLoader
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3312898 "loadClass"
	abstract public return_type class_ref 130818 // Class
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "codebase" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 253442 // MalformedURLException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3313026 "getJndiProperty"
	abstract package return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a JNDI property from the system properties.  Returns
null if the property is not set, or if there is no permission
to read it.
"
      end

      operation 3313154 "getJndiProperties"
	abstract package return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads each property in PROPS from the system properties, and
returns their values -- in order -- in an array.  For each
unset property, the corresponding array element is set to null.
Returns null if there is no permission to call System.getProperties().
"
      end

      operation 3313282 "getResourceAsStream"
	abstract package return_type class_ref 146434 // InputStream
	nparams 2
	  param inout name "c" type class_ref 130818 // Class
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resource of a given name associated with a particular
class (never null), or null if none can be found.
"
      end

      operation 3313410 "getJavaHomeLibStream"
	abstract package return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "filename" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for a file in <java.home>/lib,
or null if it cannot be located or opened.

@param filename  The file name, sans directory.
"
      end

      operation 3313538 "getResources"
	abstract package return_type class_ref 540162 // NamingEnumeration
	nparams 2
	  param inout name "cl" type class_ref 129026 // ClassLoader
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<InputStream> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration (never null) of InputStreams of the
resources of a given name associated with a particular class
loader.  Null represents the bootstrap class loader in some
Java implementations.
"
      end

      operation 3313666 "getContextClassLoader"
	abstract package return_type class_ref 129026 // ClassLoader
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the context class loader associated with the current thread.
Null indicates the bootstrap class loader in some Java implementations.

@throws SecurityException if the class loader is not accessible.
"
      end

      operation 3313794 "getUrlArray"
	class_operation protected return_type class_ref 243458 // URL
	nparams 1
	  param inout name "codebase" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 540290 "VersionHelper12"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "VersionHelper was used by JNDI to accommodate differences between
JDK 1.1.x and the Java 2 platform. As this is no longer necessary
since JNDI's inclusion in the platform, this class currently
serves as a set of utilities for performing system-level things,
such as class-loading and reading system properties.

@author Rosanna Lee
@author Scott Seligman
"
      classrelation 1070594 // <generalisation>
	relation 1070594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1070594 // <generalisation>
	  b parent class_ref 539906 // VersionHelper
      end

      operation 3313922 "VersionHelper12"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disallow external from creating one of these."
      end

      operation 3314050 "loadClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3314178 "loadClass"
	package return_type class_ref 130818 // Class
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "cl" type class_ref 129026 // ClassLoader
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private.

This internal method is used with Thread Context Class Loader (TCCL),
please don't expose this method as public.
"
      end

      operation 3314306 "loadClass"
	public return_type class_ref 130818 // Class
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "codebase" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param className A non-null fully qualified class name.
@param codebase A non-null, space-separated list of URL strings.
"
      end

      operation 3314434 "getJndiProperty"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3314562 "getJndiProperties"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3314690 "getResourceAsStream"
	package return_type class_ref 146434 // InputStream
	nparams 2
	  param in name "c" type class_ref 130818 // Class
	  param in name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}<?> ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3314818 "getJavaHomeLibStream"
	package return_type class_ref 146434 // InputStream
	nparams 1
	  param in name "filename" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3314946 "getResources"
	package return_type class_ref 540162 // NamingEnumeration
	nparams 2
	  param in name "cl" type class_ref 129026 // ClassLoader
	  param in name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<InputStream> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3315074 "getContextClassLoader"
	package return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private.

This internal method returns Thread Context Class Loader (TCCL),
if null, returns the system Class Loader.

Please don't expose this method as public.
"
      end

      class 540418 "InputStreamEnumeration"
	visibility package 
	nactuals 1
	actual class class_ref 540162 // NamingEnumeration
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1070850 // <realization>
	  relation 1070850 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 1070850 // <realization>
	    b parent class_ref 540162 // NamingEnumeration
	end

	classrelation 1070978 // urls (<unidirectional association>)
	  relation 1070978 --->
	    a role_name "urls" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	      classrelation_ref 1070978 // urls (<unidirectional association>)
	    b parent class_ref 185986 // Enumeration
	end

	classrelation 1071106 // nextElement (<unidirectional association>)
	  relation 1071106 --->
	    a role_name "nextElement" init_value " null" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1071106 // nextElement (<unidirectional association>)
	    b parent class_ref 146434 // InputStream
	end

	operation 3315586 "InputStreamEnumeration"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "urls" type class_ref 185986 // Enumeration
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<URL> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3315714 "getNextElement"
	  private return_type class_ref 146434 // InputStream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the next InputStream, or null if there are no more.
An InputStream that cannot be opened is skipped.
"
	end

	operation 3315842 "hasMore"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3315970 "hasMoreElements"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3316098 "next"
	  public return_type class_ref 146434 // InputStream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3316226 "nextElement"
	  public return_type class_ref 146434 // InputStream
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3316354 "close"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end
  end

  deploymentview 148866 "internal"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 359810 "FactoryEnumeration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import javax.naming.NamingException;
${definition}"
      associated_elems
	class_ref 539522 // FactoryEnumeration
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 359938 "NamedWeakReference"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 539650 // NamedWeakReference
      end
      comment "Copyright (c) 2001, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 360066 "ResourceManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.List;
import java.util.ArrayList;
import java.util.WeakHashMap;
import javax.naming.*;
${definition}"
      associated_elems
	class_ref 539778 // ResourceManager
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 360194 "VersionHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.naming.NamingEnumeration;
${definition}"
      associated_elems
	class_ref 539906 // VersionHelper
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 360450 "VersionHelper12"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URLClassLoader;
import java.net.URL;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.Enumeration;
import java.util.NoSuchElementException;
import java.util.Properties;
import javax.naming.*;
${definition}"
      associated_elems
	class_ref 540290 // VersionHelper12
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
