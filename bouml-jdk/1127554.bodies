class AtomicIntegerFieldUpdater
!!!9256450.java!!!	newUpdater(inout tclass : Class, inout fieldName : String) : AtomicIntegerFieldUpdater
        return new AtomicIntegerFieldUpdaterImpl<U>
            (tclass, fieldName, Reflection.getCallerClass());
!!!9257346.java!!!	getAndSet(inout obj : T, in newValue : int) : int
        int prev;
        do {
            prev = get(obj);
        } while (!compareAndSet(obj, prev, newValue));
        return prev;
!!!9257474.java!!!	getAndIncrement(inout obj : T) : int
        int prev, next;
        do {
            prev = get(obj);
            next = prev + 1;
        } while (!compareAndSet(obj, prev, next));
        return prev;
!!!9257602.java!!!	getAndDecrement(inout obj : T) : int
        int prev, next;
        do {
            prev = get(obj);
            next = prev - 1;
        } while (!compareAndSet(obj, prev, next));
        return prev;
!!!9257730.java!!!	getAndAdd(inout obj : T, in delta : int) : int
        int prev, next;
        do {
            prev = get(obj);
            next = prev + delta;
        } while (!compareAndSet(obj, prev, next));
        return prev;
!!!9257858.java!!!	incrementAndGet(inout obj : T) : int
        int prev, next;
        do {
            prev = get(obj);
            next = prev + 1;
        } while (!compareAndSet(obj, prev, next));
        return next;
!!!9257986.java!!!	decrementAndGet(inout obj : T) : int
        int prev, next;
        do {
            prev = get(obj);
            next = prev - 1;
        } while (!compareAndSet(obj, prev, next));
        return next;
!!!9258114.java!!!	addAndGet(inout obj : T, in delta : int) : int
        int prev, next;
        do {
            prev = get(obj);
            next = prev + delta;
        } while (!compareAndSet(obj, prev, next));
        return next;
!!!9258242.java!!!	getAndUpdate(inout obj : T, inout updateFunction : IntUnaryOperator) : int
        int prev, next;
        do {
            prev = get(obj);
            next = updateFunction.applyAsInt(prev);
        } while (!compareAndSet(obj, prev, next));
        return prev;
!!!9258370.java!!!	updateAndGet(inout obj : T, inout updateFunction : IntUnaryOperator) : int
        int prev, next;
        do {
            prev = get(obj);
            next = updateFunction.applyAsInt(prev);
        } while (!compareAndSet(obj, prev, next));
        return next;
!!!9258498.java!!!	getAndAccumulate(inout obj : T, in x : int, inout accumulatorFunction : IntBinaryOperator) : int
        int prev, next;
        do {
            prev = get(obj);
            next = accumulatorFunction.applyAsInt(prev, x);
        } while (!compareAndSet(obj, prev, next));
        return prev;
!!!9258626.java!!!	accumulateAndGet(inout obj : T, in x : int, inout accumulatorFunction : IntBinaryOperator) : int
        int prev, next;
        do {
            prev = get(obj);
            next = accumulatorFunction.applyAsInt(prev, x);
        } while (!compareAndSet(obj, prev, next));
        return next;
