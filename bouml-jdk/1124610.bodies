class Worker
!!!9213954.java!!!	Worker(inout firstTask : Runnable)
            setState(-1); // inhibit interrupts until runWorker
            this.firstTask = firstTask;
            this.thread = getThreadFactory().newThread(this);
!!!9214082.java!!!	run() : void
            runWorker(this);
!!!9214210.java!!!	isHeldExclusively() : boolean
            return getState() != 0;
!!!9214338.java!!!	tryAcquire(in unused : int) : boolean
            if (compareAndSetState(0, 1)) {
                setExclusiveOwnerThread(Thread.currentThread());
                return true;
            }
            return false;
!!!9214466.java!!!	tryRelease(in unused : int) : boolean
            setExclusiveOwnerThread(null);
            setState(0);
            return true;
!!!9214594.java!!!	lock() : void
 acquire(1);
!!!9214722.java!!!	tryLock() : boolean
 return tryAcquire(1);
!!!9214850.java!!!	unlock() : void
 release(1);
!!!9214978.java!!!	isLocked() : boolean
 return isHeldExclusively();
!!!9215106.java!!!	interruptIfStarted() : void
            Thread t;
            if (getState() >= 0 && (t = thread) != null && !t.isInterrupted()) {
                try {
                    t.interrupt();
                } catch (SecurityException ignore) {
                }
            }
