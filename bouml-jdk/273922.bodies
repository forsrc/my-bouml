class CorbaInboundConnectionCacheImpl
!!!1435906.java!!!	CorbaInboundConnectionCacheImpl(inout orb : ORB, inout acceptor : Acceptor)
        super(orb, acceptor.getConnectionCacheType(),
              ((CorbaAcceptor)acceptor).getMonitoringName());
        this.connectionCache = new ArrayList();
        this.acceptor = acceptor;
        if (orb.transportDebugFlag) {
            dprint(": " + acceptor );
        }
!!!1436034.java!!!	close() : void

        super.close();
        if (orb.transportDebugFlag) {
            dprint(".close: " + acceptor );
        }
        this.acceptor.close();

!!!1436162.java!!!	get(inout acceptor : Acceptor) : Connection
        throw wrapper.methodShouldNotBeCalled();
!!!1436290.java!!!	getAcceptor() : Acceptor
        return acceptor;
!!!1436418.java!!!	put(inout acceptor : Acceptor, inout connection : Connection) : void
        if (orb.transportDebugFlag) {
            dprint(".put: " + acceptor + " " + connection);
        }
        synchronized (backingStore()) {
            connectionCache.add(connection);
            connection.setConnectionCache(this);
            dprintStatistics();
        }
!!!1436546.java!!!	remove(inout connection : Connection) : void
        if (orb.transportDebugFlag) {
            dprint(".remove: " +  connection);
        }
        synchronized (backingStore()) {
            connectionCache.remove(connection);
            dprintStatistics();
        }
!!!1436674.java!!!	values() : Collection
        return connectionCache;
!!!1436802.java!!!	backingStore() : Object
        return connectionCache;
!!!1436930.java!!!	registerWithMonitoring() : void
        // ORB
        MonitoredObject orbMO =
            orb.getMonitoringManager().getRootMonitoredObject();

        // REVISIT - add ORBUtil mkdir -p like operation for this.

        // CONNECTION
        MonitoredObject connectionMO =
            orbMO.getChild(MonitoringConstants.CONNECTION_MONITORING_ROOT);
        if (connectionMO == null) {
            connectionMO =
                MonitoringFactories.getMonitoredObjectFactory()
                    .createMonitoredObject(
                        MonitoringConstants.CONNECTION_MONITORING_ROOT,
                        MonitoringConstants.CONNECTION_MONITORING_ROOT_DESCRIPTION);
            orbMO.addChild(connectionMO);
        }

        // INBOUND CONNECTION
        MonitoredObject inboundConnectionMO =
            connectionMO.getChild(
                MonitoringConstants.INBOUND_CONNECTION_MONITORING_ROOT);
        if (inboundConnectionMO == null) {
            inboundConnectionMO =
                MonitoringFactories.getMonitoredObjectFactory()
                    .createMonitoredObject(
                        MonitoringConstants.INBOUND_CONNECTION_MONITORING_ROOT,
                        MonitoringConstants.INBOUND_CONNECTION_MONITORING_ROOT_DESCRIPTION);
            connectionMO.addChild(inboundConnectionMO);
        }

        // NODE FOR THIS CACHE
        MonitoredObject thisMO =
            inboundConnectionMO.getChild(getMonitoringName());
        if (thisMO == null) {
            thisMO =
                MonitoringFactories.getMonitoredObjectFactory()
                    .createMonitoredObject(
                        getMonitoringName(),
                        MonitoringConstants.CONNECTION_MONITORING_DESCRIPTION);
            inboundConnectionMO.addChild(thisMO);
        }

        LongMonitoredAttributeBase attribute;

        // ATTRIBUTE
        attribute = new
            LongMonitoredAttributeBase(
                MonitoringConstants.CONNECTION_TOTAL_NUMBER_OF_CONNECTIONS,
                MonitoringConstants.CONNECTION_TOTAL_NUMBER_OF_CONNECTIONS_DESCRIPTION)
            {
                public Object getValue() {
                    return new Long(CorbaInboundConnectionCacheImpl.this.numberOfConnections());
                }
            };
        thisMO.addAttribute(attribute);

        // ATTRIBUTE
        attribute = new
            LongMonitoredAttributeBase(
                MonitoringConstants.CONNECTION_NUMBER_OF_IDLE_CONNECTIONS,
                MonitoringConstants.CONNECTION_NUMBER_OF_IDLE_CONNECTIONS_DESCRIPTION)
            {
                public Object getValue() {
                    return new Long(CorbaInboundConnectionCacheImpl.this.numberOfIdleConnections());
                }
            };
        thisMO.addAttribute(attribute);

        // ATTRIBUTE
        attribute = new
            LongMonitoredAttributeBase(
                MonitoringConstants.CONNECTION_NUMBER_OF_BUSY_CONNECTIONS,
                MonitoringConstants.CONNECTION_NUMBER_OF_BUSY_CONNECTIONS_DESCRIPTION)
            {
                public Object getValue() {
                    return new Long(CorbaInboundConnectionCacheImpl.this.numberOfBusyConnections());
                }
            };
        thisMO.addAttribute(attribute);
!!!1437058.java!!!	dprint(inout msg : String) : void
        ORBUtility.dprint("CorbaInboundConnectionCacheImpl", msg);
