class RadioButtonMenuItemPainter
!!!11310338.java!!!	RadioButtonMenuItemPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11310466.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_MOUSEOVER: paintBackgroundMouseOver(g); break;
            case BACKGROUND_SELECTED_MOUSEOVER: paintBackgroundSelectedAndMouseOver(g); break;
            case CHECKICON_DISABLED_SELECTED: paintcheckIconDisabledAndSelected(g); break;
            case CHECKICON_ENABLED_SELECTED: paintcheckIconEnabledAndSelected(g); break;
            case CHECKICON_SELECTED_MOUSEOVER: paintcheckIconSelectedAndMouseOver(g); break;

        }
!!!11310594.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11310722.java!!!	paintBackgroundMouseOver(inout g : Graphics2D) : void
        rect = decodeRect1();
        g.setPaint(color1);
        g.fill(rect);

!!!11310850.java!!!	paintBackgroundSelectedAndMouseOver(inout g : Graphics2D) : void
        rect = decodeRect1();
        g.setPaint(color1);
        g.fill(rect);

!!!11310978.java!!!	paintcheckIconDisabledAndSelected(inout g : Graphics2D) : void
        path = decodePath1();
        g.setPaint(color2);
        g.fill(path);

!!!11311106.java!!!	paintcheckIconEnabledAndSelected(inout g : Graphics2D) : void
        path = decodePath2();
        g.setPaint(color3);
        g.fill(path);

!!!11311234.java!!!	paintcheckIconSelectedAndMouseOver(inout g : Graphics2D) : void
        path = decodePath2();
        g.setPaint(color4);
        g.fill(path);

!!!11311362.java!!!	decodeRect1() : Rectangle2D
            rect.setRect(decodeX(1.0f), //x
                         decodeY(1.0f), //y
                         decodeX(2.0f) - decodeX(1.0f), //width
                         decodeY(2.0f) - decodeY(1.0f)); //height
        return rect;
!!!11311490.java!!!	decodePath1() : Path2D
        path.reset();
        path.moveTo(decodeX(0.0f), decodeY(2.097561f));
        path.lineTo(decodeX(0.90975606f), decodeY(0.20243903f));
        path.lineTo(decodeX(3.0f), decodeY(2.102439f));
        path.lineTo(decodeX(0.90731704f), decodeY(3.0f));
        path.lineTo(decodeX(0.0f), decodeY(2.097561f));
        path.closePath();
        return path;
!!!11311618.java!!!	decodePath2() : Path2D
        path.reset();
        path.moveTo(decodeX(0.0024390244f), decodeY(2.097561f));
        path.lineTo(decodeX(0.90975606f), decodeY(0.20243903f));
        path.lineTo(decodeX(3.0f), decodeY(2.102439f));
        path.lineTo(decodeX(0.90731704f), decodeY(3.0f));
        path.lineTo(decodeX(0.0024390244f), decodeY(2.097561f));
        path.closePath();
        return path;
