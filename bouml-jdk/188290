format 222
"crypto" // jdk1.8::javax::xml::crypto
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/crypto/"
  java_package "javax.xml.crypto"
  classview 181378 "crypto"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1417602 "AlgorithmMethod"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract representation of an algorithm defined in the XML Security
specifications. Subclasses represent specific types of XML security
algorithms, such as a {@link javax.xml.crypto.dsig.Transform}.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      operation 12011266 "getAlgorithm"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm URI of this <code>AlgorithmMethod</code>.

@return the algorithm URI of this <code>AlgorithmMethod</code>
"
      end

      operation 12011394 "getParameterSpec"
	public return_type class_ref 753282 // AlgorithmParameterSpec
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm parameters of this <code>AlgorithmMethod</code>.

@return the algorithm parameters of this <code>AlgorithmMethod</code>.
   Returns <code>null</code> if this <code>AlgorithmMethod</code> does
   not require parameters and they are not specified.
"
      end
    end

    class 1417730 "Data"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract representation of the result of dereferencing a
{@link URIReference} or the input/output of subsequent {@link Transform}s.
The primary purpose of this interface is to group and provide type safety
for all <code>Data</code> subtypes.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
    end

    class 1417858 "KeySelector"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A selector that finds and returns a key using the data contained in a
{@link KeyInfo} object. An example of an implementation of
this class is one that searches a {@link java.security.KeyStore} for
trusted keys that match information contained in a <code>KeyInfo</code>.

<p>Whether or not the returned key is trusted and the mechanisms
used to determine that is implementation-specific.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      class 1417986 "Purpose"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4765314 // name (<unidirectional association>)
	  relation 4765314 --->
	    a role_name "name" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4765314 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 12011522 "Purpose"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12011650 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a string representation of this purpose (\"sign\",
\"verify\", \"encrypt\", or \"decrypt\").

@return a string representation of this purpose
"
	end

	classrelation 4765442 // SIGN (<unidirectional association>)
	  relation 4765442 --->
	    a role_name "SIGN" init_value " new Purpose(\"sign\")" class_relation const_relation public
	      comment "
A key for signing.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4765442 // SIGN (<unidirectional association>)
	    b parent class_ref 1417986 // Purpose
	end

	classrelation 4765570 // VERIFY (<unidirectional association>)
	  relation 4765570 --->
	    a role_name "VERIFY" init_value " new Purpose(\"verify\")" class_relation const_relation public
	      comment "
A key for verifying.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4765570 // VERIFY (<unidirectional association>)
	    b parent class_ref 1417986 // Purpose
	end

	classrelation 4765698 // ENCRYPT (<unidirectional association>)
	  relation 4765698 --->
	    a role_name "ENCRYPT" init_value " new Purpose(\"encrypt\")" class_relation const_relation public
	      comment "
A key for encrypting.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4765698 // ENCRYPT (<unidirectional association>)
	    b parent class_ref 1417986 // Purpose
	end

	classrelation 4765826 // DECRYPT (<unidirectional association>)
	  relation 4765826 --->
	    a role_name "DECRYPT" init_value " new Purpose(\"decrypt\")" class_relation const_relation public
	      comment "
A key for decrypting.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4765826 // DECRYPT (<unidirectional association>)
	    b parent class_ref 1417986 // Purpose
	end
      end

      operation 12011778 "KeySelector"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default no-args constructor; intended for invocation by subclasses only.
"
      end

      operation 12011906 "select"
	abstract public return_type class_ref 1418114 // KeySelectorResult
	nparams 4
	  param inout name "keyInfo" type class_ref 1418242 // KeyInfo
	  param inout name "purpose" type class_ref 1417986 // Purpose
	  param inout name "method" type class_ref 1417602 // AlgorithmMethod
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	nexceptions 1
	  exception class_ref 1418498 // KeySelectorException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to find a key that satisfies the specified constraints.

@param keyInfo a <code>KeyInfo</code> (may be <code>null</code>)
@param purpose the key's purpose ({@link Purpose#SIGN},
   {@link Purpose#VERIFY}, {@link Purpose#ENCRYPT}, or
   {@link Purpose#DECRYPT})
@param method the algorithm method that this key is to be used for.
   Only keys that are compatible with the algorithm and meet the
   constraints of the specified algorithm should be returned.
@param context an <code>XMLCryptoContext</code> that may contain
   useful information for finding an appropriate key. If this key
   selector supports resolving {@link RetrievalMethod} types, the
   context's <code>baseURI</code> and <code>dereferencer</code>
   parameters (if specified) should be used by the selector to
   resolve and dereference the URI.
@return the result of the key selector
@throws KeySelectorException if an exceptional condition occurs while
   attempting to find a key. Note that an inability to find a key is not
   considered an exception (<code>null</code> should be
   returned in that case). However, an error condition (ex: network
   communications failure) that prevented the <code>KeySelector</code>
   from finding a potential key should be considered an exception.
@throws ClassCastException if the data type of <code>method</code>
   is not supported by this key selector
"
      end

      operation 12012034 "singletonKeySelector"
	class_operation public return_type class_ref 1417858 // KeySelector
	nparams 1
	  param inout name "key" type class_ref 753026 // Key
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>KeySelector</code> that always selects the specified
key, regardless of the <code>KeyInfo</code> passed to it.

@param key the sole key to be stored in the key selector
@return a key selector that always selects the specified key
@throws NullPointerException if <code>key</code> is <code>null</code>
"
      end

      class 1418626 "SingletonKeySelector"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4765954 // <generalisation>
	  relation 4765954 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4765954 // <generalisation>
	    b parent class_ref 1417858 // KeySelector
	end

	classrelation 4766082 // key (<unidirectional association>)
	  relation 4766082 --->
	    a role_name "key" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4766082 // key (<unidirectional association>)
	    b parent class_ref 753026 // Key
	end

	operation 12012162 "SingletonKeySelector"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "key" type class_ref 753026 // Key
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 12012290 "select"
	  public return_type class_ref 1418114 // KeySelectorResult
	  nparams 4
	    param inout name "keyInfo" type class_ref 1418242 // KeyInfo
	    param inout name "purpose" type class_ref 1417986 // Purpose
	    param inout name "method" type class_ref 1417602 // AlgorithmMethod
	    param inout name "context" type class_ref 1418370 // XMLCryptoContext
	  nexceptions 1
	    exception class_ref 1418498 // KeySelectorException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1418114 "KeySelectorResult"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The result returned by the {@link KeySelector#select KeySelector.select}
method.
<p>
At a minimum, a <code>KeySelectorResult</code> contains the <code>Key</code>
selected by the <code>KeySelector</code>. Implementations of this interface
may add methods to return implementation or algorithm specific information,
such as a chain of certificates or debugging information.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeySelector
"
      operation 12013442 "getKey"
	public return_type class_ref 753026 // Key
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected key.

@return the selected key, or <code>null</code> if none can be found
"
      end
    end

    class 1418370 "XMLCryptoContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Contains common context information for XML cryptographic operations.

<p>This interface contains methods for setting and retrieving properties
that affect the processing of XML signatures or XML encrypted structures.

<p>Note that <code>XMLCryptoContext</code> instances can contain information
and state specific to the XML cryptographic structure it is used with.
The results are unpredictable if an <code>XMLCryptoContext</code> is
used with multiple structures (for example, you should not use the same
{@link javax.xml.crypto.dsig.XMLValidateContext} instance to validate two
different {@link javax.xml.crypto.dsig.XMLSignature} objects).

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      operation 12018050 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base URI.

@return the base URI, or <code>null</code> if not specified
@see #setBaseURI(String)
"
      end

      operation 12018178 "setBaseURI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "baseURI" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the base URI.

@param baseURI the base URI, or <code>null</code> to remove current
   value
@throws IllegalArgumentException if <code>baseURI</code> is not RFC
   2396 compliant
@see #getBaseURI
"
      end

      operation 12018306 "getKeySelector"
	public return_type class_ref 1417858 // KeySelector
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key selector for finding a key.

@return the key selector, or <code>null</code> if not specified
@see #setKeySelector(KeySelector)
"
      end

      operation 12018434 "setKeySelector"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ks" type class_ref 1417858 // KeySelector
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the key selector for finding a key.

@param ks the key selector, or <code>null</code> to remove the current
   setting
@see #getKeySelector
"
      end

      operation 12018562 "getURIDereferencer"
	public return_type class_ref 1419266 // URIDereferencer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>URIDereferencer</code> that is used to dereference
{@link URIReference}s.

@return the <code>URIDereferencer</code>, or <code>null</code> if not
   specified
@see #setURIDereferencer(URIDereferencer)
"
      end

      operation 12018690 "setURIDereferencer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dereferencer" type class_ref 1419266 // URIDereferencer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a <code>URIDereferencer</code> that is used to dereference
{@link URIReference}s. The specified <code>URIDereferencer</code>
is used in place of an implementation's default
<code>URIDereferencer</code>.

@param dereferencer the <code>URIDereferencer</code>, or
   <code>null</code> to remove any current setting
@see #getURIDereferencer
"
      end

      operation 12018818 "getNamespacePrefix"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "defaultPrefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the namespace prefix that the specified namespace URI is
associated with. Returns the specified default prefix if the specified
namespace URI has not been bound to a prefix. To bind a namespace URI
to a prefix, call the {@link #putNamespacePrefix putNamespacePrefix}
method.

@param namespaceURI a namespace URI
@param defaultPrefix the prefix to be returned in the event that the
   the specified namespace URI has not been bound to a prefix.
@return the prefix that is associated with the specified namespace URI,
   or <code>defaultPrefix</code> if the URI is not registered. If
   the namespace URI is registered but has no prefix, an empty string
   (<code>\"\"</code>) is returned.
@throws NullPointerException if <code>namespaceURI</code> is
   <code>null</code>
@see #putNamespacePrefix(String, String)
"
      end

      operation 12018946 "putNamespacePrefix"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps the specified namespace URI to the specified prefix. If there is
already a prefix associated with the specified namespace URI, the old
prefix is replaced by the specified prefix.

@param namespaceURI a namespace URI
@param prefix a namespace prefix (or <code>null</code> to remove any
   existing mapping). Specifying the empty string (<code>\"\"</code>)
   binds no prefix to the namespace URI.
@return the previous prefix associated with the specified namespace
   URI, or <code>null</code> if there was none
@throws NullPointerException if <code>namespaceURI</code> is
   <code>null</code>
@see #getNamespacePrefix(String, String)
"
      end

      operation 12019074 "getDefaultNamespacePrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default namespace prefix. The default namespace prefix
is the prefix for all namespace URIs not explicitly set by the
{@link #putNamespacePrefix putNamespacePrefix} method.

@return the default namespace prefix, or <code>null</code> if none has
   been set.
@see #setDefaultNamespacePrefix(String)
"
      end

      operation 12019202 "setDefaultNamespacePrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultPrefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default namespace prefix. This sets the namespace prefix for
all namespace URIs not explicitly set by the {@link #putNamespacePrefix
putNamespacePrefix} method.

@param defaultPrefix the default namespace prefix, or <code>null</code>
   to remove the current setting. Specify the empty string
   (<code>\"\"</code>) to bind no prefix.
@see #getDefaultNamespacePrefix
"
      end

      operation 12019330 "setProperty"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the specified property.

@param name the name of the property
@param value the value of the property to be set
@return the previous value of the specified property, or
   <code>null</code> if it did not have a value
@throws NullPointerException if <code>name</code> is <code>null</code>
@see #getProperty(String)
"
      end

      operation 12019458 "getProperty"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified property.

@param name the name of the property
@return the current value of the specified property, or
   <code>null</code> if it does not have a value
@throws NullPointerException if <code>name</code> is <code>null</code>
@see #setProperty(String, Object)
"
      end

      operation 12019586 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which this context maps the specified key.

<p>More formally, if this context contains a mapping from a key
<code>k</code> to a value <code>v</code> such that
<code>(key==null ? k==null : key.equals(k))</code>, then this method
returns <code>v</code>; otherwise it returns <code>null</code>. (There
can be at most one such mapping.)

<p>This method is useful for retrieving arbitrary information that is
specific to the cryptographic operation that this context is used for.

@param key the key whose associated value is to be returned
@return the value to which this context maps the specified key, or
   <code>null</code> if there is no mapping for the key
@see #put(Object, Object)
"
      end

      operation 12019714 "put"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified value with the specified key in this context.
If the context previously contained a mapping for this key, the old
value is replaced by the specified value.

<p>This method is useful for storing arbitrary information that is
specific to the cryptographic operation that this context is used for.

@param key key with which the specified value is to be associated with
@param value value to be associated with the specified key
@return the previous value associated with the key, or <code>null</code>
   if there was no mapping for the key
@throws IllegalArgumentException if some aspect of this key or value
   prevents it from being stored in this context
@see #get(Object)
"
      end
    end

    class 1418498 "KeySelectorException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates an exceptional condition thrown by a {@link KeySelector}.

<p>A <code>KeySelectorException</code> can contain a cause: another
throwable that caused this <code>KeySelectorException</code> to get thrown.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      classrelation 4766210 // <generalisation>
	relation 4766210 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4766210 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2619778 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7480033639322531109L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4766338 // cause (<unidirectional association>)
	relation 4766338 --->
	  a role_name "cause" private
	    comment "
The throwable that caused this exception to get thrown, or
<code>null</code> if this exception was not caused by another throwable
or if the causative throwable is unknown.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4766338 // cause (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 12012418 "KeySelectorException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>KeySelectorException</code> with
<code>null</code> as its detail message.
"
      end

      operation 12012546 "KeySelectorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>KeySelectorException</code> with the specified
detail message.

@param message the detail message
"
      end

      operation 12012674 "KeySelectorException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>KeySelectorException</code> with the
specified detail message and cause.
<p>Note that the detail message associated with
<code>cause</code> is <i>not</i> automatically incorporated in
this exception's detail message.

@param message the detail message
@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12012802 "KeySelectorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>KeySelectorException</code> with the specified
cause and a detail message of
<code>(cause==null ? null : cause.toString())</code>
(which typically contains the class and detail message of
<code>cause</code>).

@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12012930 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this <code>KeySelectorException</code> or
<code>null</code> if the cause is nonexistent or unknown.  (The
cause is the throwable that caused this
<code>KeySelectorException</code> to get thrown.)

@return the cause of this <code>KeySelectorException</code> or
        <code>null</code> if the cause is nonexistent or unknown.
"
      end

      operation 12013058 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>KeySelectorException</code>, its backtrace and
the cause's backtrace to the standard error stream.
"
      end

      operation 12013186 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>KeySelectorException</code>, its backtrace and
the cause's backtrace to the specified print stream.

@param s <code>PrintStream</code> to use for output
"
      end

      operation 12013314 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>KeySelectorException</code>, its backtrace and
the cause's backtrace to the specified print writer.

@param s <code>PrintWriter</code> to use for output
"
      end
    end

    class 1418754 "MarshalException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates an exceptional condition that occurred during the XML
marshalling or unmarshalling process.

<p>A <code>MarshalException</code> can contain a cause: another
throwable that caused this <code>MarshalException</code> to get thrown.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignature#sign(XMLSignContext)
@see XMLSignatureFactory#unmarshalXMLSignature(XMLValidateContext)
"
      classrelation 4766466 // <generalisation>
	relation 4766466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4766466 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2619906 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -863185580332643547L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4766594 // cause (<unidirectional association>)
	relation 4766594 --->
	  a role_name "cause" private
	    comment "
The throwable that caused this exception to get thrown, or null if this
exception was not caused by another throwable or if the causative
throwable is unknown.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4766594 // cause (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 12013570 "MarshalException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>MarshalException</code> with
<code>null</code> as its detail message.
"
      end

      operation 12013698 "MarshalException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>MarshalException</code> with the specified
detail message.

@param message the detail message
"
      end

      operation 12013826 "MarshalException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>MarshalException</code> with the
specified detail message and cause.
<p>Note that the detail message associated with
<code>cause</code> is <i>not</i> automatically incorporated in
this exception's detail message.

@param message the detail message
@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12013954 "MarshalException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>MarshalException</code> with the specified cause
and a detail message of <code>(cause==null ? null : cause.toString())
</code> (which typically contains the class and detail message of
<code>cause</code>).

@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12014082 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this <code>MarshalException</code> or
<code>null</code> if the cause is nonexistent or unknown.  (The
cause is the throwable that caused this
<code>MarshalException</code> to get thrown.)

@return the cause of this <code>MarshalException</code> or
        <code>null</code> if the cause is nonexistent or unknown.
"
      end

      operation 12014210 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>MarshalException</code>, its backtrace and
the cause's backtrace to the standard error stream.
"
      end

      operation 12014338 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>MarshalException</code>, its backtrace and
the cause's backtrace to the specified print stream.

@param s <code>PrintStream</code> to use for output
"
      end

      operation 12014466 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>MarshalException</code>, its backtrace and
the cause's backtrace to the specified print writer.

@param s <code>PrintWriter</code> to use for output
"
      end
    end

    class 1418882 "NodeSetData"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract representation of a <code>Data</code> type containing a
node-set. The type (class) and ordering of the nodes contained in the set
are not defined by this class; instead that behavior should be
defined by <code>NodeSetData</code> subclasses.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      classrelation 4766722 // <generalisation>
	relation 4766722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4766722 // <generalisation>
	  b parent class_ref 1417730 // Data
      end

      operation 12014594 "iterator"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns a read-only iterator over the nodes contained in this
<code>NodeSetData</code> in
<a href=\"http://www.w3.org/TR/1999/REC-xpath-19991116#dt-document-order\">
document order</a>. Attempts to modify the returned iterator
via the <code>remove</code> method throw
<code>UnsupportedOperationException</code>.

@return an <code>Iterator</code> over the nodes in this
   <code>NodeSetData</code> in document order
"
      end
    end

    class 1419010 "NoSuchMechanismException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is thrown when a particular XML mechanism is requested but
is not available in the environment.

<p>A <code>NoSuchMechanismException</code> can contain a cause: another
throwable that caused this <code>NoSuchMechanismException</code> to get
thrown.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#getInstance XMLSignatureFactory.getInstance
@see KeyInfoFactory#getInstance KeyInfoFactory.getInstance
"
      classrelation 4766850 // <generalisation>
	relation 4766850 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4766850 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 2620034 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4189669069570660166L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4766978 // cause (<unidirectional association>)
	relation 4766978 --->
	  a role_name "cause" private
	    comment "
The throwable that caused this exception to get thrown, or null if this
exception was not caused by another throwable or if the causative
throwable is unknown.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4766978 // cause (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 12014722 "NoSuchMechanismException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>NoSuchMechanismException</code> with
<code>null</code> as its detail message.
"
      end

      operation 12014850 "NoSuchMechanismException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>NoSuchMechanismException</code> with the
specified detail message.

@param message the detail message
"
      end

      operation 12014978 "NoSuchMechanismException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>NoSuchMechanismException</code> with the
specified detail message and cause.
<p>Note that the detail message associated with
<code>cause</code> is <i>not</i> automatically incorporated in
this exception's detail message.

@param message the detail message
@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12015106 "NoSuchMechanismException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>NoSuchMechanismException</code> with the
specified cause and a detail message of
<code>(cause==null ? null : cause.toString())</code> (which typically
contains the class and detail message of <code>cause</code>).

@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12015234 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this <code>NoSuchMechanismException</code> or
<code>null</code> if the cause is nonexistent or unknown.  (The
cause is the throwable that caused this
<code>NoSuchMechanismException</code> to get thrown.)

@return the cause of this <code>NoSuchMechanismException</code> or
        <code>null</code> if the cause is nonexistent or unknown.
"
      end

      operation 12015362 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>NoSuchMechanismException</code>, its backtrace and
the cause's backtrace to the standard error stream.
"
      end

      operation 12015490 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>NoSuchMechanismException</code>, its backtrace and
the cause's backtrace to the specified print stream.

@param s <code>PrintStream</code> to use for output
"
      end

      operation 12015618 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>NoSuchMechanismException</code>, its backtrace and
the cause's backtrace to the specified print writer.

@param s <code>PrintWriter</code> to use for output
"
      end
    end

    class 1419138 "OctetStreamData"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of a <code>Data</code> type containing an octet stream.

@since 1.6
"
      classrelation 4767106 // <realization>
	relation 4767106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4767106 // <realization>
	  b parent class_ref 1417730 // Data
      end

      classrelation 4767234 // octetStream (<unidirectional association>)
	relation 4767234 --->
	  a role_name "octetStream" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4767234 // octetStream (<unidirectional association>)
	  b parent class_ref 146434 // InputStream
      end

      classrelation 4767362 // uri (<unidirectional association>)
	relation 4767362 --->
	  a role_name "uri" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4767362 // uri (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4767490 // mimeType (<unidirectional association>)
	relation 4767490 --->
	  a role_name "mimeType" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4767490 // mimeType (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12015746 "OctetStreamData"
	public explicit_return_type ""
	nparams 1
	  param inout name "octetStream" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>OctetStreamData</code>.

@param octetStream the input stream containing the octets
@throws NullPointerException if <code>octetStream</code> is
   <code>null</code>
"
      end

      operation 12015874 "OctetStreamData"
	public explicit_return_type ""
	nparams 3
	  param inout name "octetStream" type class_ref 146434 // InputStream
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "mimeType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>OctetStreamData</code>.

@param octetStream the input stream containing the octets
@param uri the URI String identifying the data object (may be
   <code>null</code>)
@param mimeType the MIME type associated with the data object (may be
   <code>null</code>)
@throws NullPointerException if <code>octetStream</code> is
   <code>null</code>
"
      end

      operation 12016002 "getOctetStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input stream of this <code>OctetStreamData</code>.

@return the input stream of this <code>OctetStreamData</code>.
"
      end

      operation 12016130 "getURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI String identifying the data object represented by this
<code>OctetStreamData</code>.

@return the URI String or <code>null</code> if not applicable
"
      end

      operation 12016258 "getMimeType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the MIME type associated with the data object represented by this
<code>OctetStreamData</code>.

@return the MIME type or <code>null</code> if not applicable
"
      end
    end

    class 1419266 "URIDereferencer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A dereferencer of {@link URIReference}s.
<p>
The result of dereferencing a <code>URIReference</code> is either an
instance of {@link OctetStreamData} or {@link NodeSetData}. Unless the
<code>URIReference</code> is a <i>same-document reference</i> as defined
in section 4.2 of the W3C Recommendation for XML-Signature Syntax and
Processing, the result of dereferencing the <code>URIReference</code>
MUST be an <code>OctetStreamData</code>.

@author Sean Mullan
@author Joyce Leung
@author JSR 105 Expert Group
@since 1.6
@see XMLCryptoContext#setURIDereferencer(URIDereferencer)
@see XMLCryptoContext#getURIDereferencer
"
      operation 12016386 "dereference"
	public return_type class_ref 1417730 // Data
	nparams 2
	  param inout name "uriReference" type class_ref 1419394 // URIReference
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	nexceptions 1
	  exception class_ref 1419522 // URIReferenceException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dereferences the specified <code>URIReference</code> and returns the
dereferenced data.

@param uriReference the <code>URIReference</code>
@param context an <code>XMLCryptoContext</code> that may
   contain additional useful information for dereferencing the URI. This
   implementation should dereference the specified
   <code>URIReference</code> against the context's <code>baseURI</code>
   parameter, if specified.
@return the dereferenced data
@throws NullPointerException if <code>uriReference</code> or
   <code>context</code> are <code>null</code>
@throws URIReferenceException if an exception occurs while
   dereferencing the specified <code>uriReference</code>
"
      end
    end

    class 1419394 "URIReference"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Identifies a data object via a URI-Reference, as specified by
<a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC 2396</a>.

<p>Note that some subclasses may not have a <code>type</code> attribute
and for objects of those types, the {@link #getType} method always returns
<code>null</code>.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see URIDereferencer
"
      operation 12016514 "getURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI of the referenced data object.

@return the URI of the data object in RFC 2396 format (may be
   <code>null</code> if not specified)
"
      end

      operation 12016642 "getType"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of data referenced by this URI.

@return the type (a URI) of the data object (may be <code>null</code>
   if not specified)
"
      end
    end

    class 1419522 "URIReferenceException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates an exceptional condition thrown while dereferencing a
{@link URIReference}.

<p>A <code>URIReferenceException</code> can contain a cause: another
throwable that caused this <code>URIReferenceException</code> to get thrown.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see URIDereferencer#dereference(URIReference, XMLCryptoContext)
@see RetrievalMethod#dereference(XMLCryptoContext)
"
      classrelation 4767618 // <generalisation>
	relation 4767618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4767618 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2620162 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7173469703932561419L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4767746 // cause (<unidirectional association>)
	relation 4767746 --->
	  a role_name "cause" private
	    comment "
The throwable that caused this exception to get thrown, or null if this
exception was not caused by another throwable or if the causative
throwable is unknown.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4767746 // cause (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      classrelation 4767874 // uriReference (<unidirectional association>)
	relation 4767874 --->
	  a role_name "uriReference" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4767874 // uriReference (<unidirectional association>)
	  b parent class_ref 1419394 // URIReference
      end

      operation 12016770 "URIReferenceException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>URIReferenceException</code> with
<code>null</code> as its detail message.
"
      end

      operation 12016898 "URIReferenceException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>URIReferenceException</code> with the specified
detail message.

@param message the detail message
"
      end

      operation 12017026 "URIReferenceException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>URIReferenceException</code> with the
specified detail message and cause.
<p>Note that the detail message associated with
<code>cause</code> is <i>not</i> automatically incorporated in
this exception's detail message.

@param message the detail message
@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12017154 "URIReferenceException"
	public explicit_return_type ""
	nparams 3
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	  param inout name "uriReference" type class_ref 1419394 // URIReference
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>URIReferenceException</code> with the
specified detail message, cause and <code>URIReference</code>.
<p>Note that the detail message associated with
<code>cause</code> is <i>not</i> automatically incorporated in
this exception's detail message.

@param message the detail message
@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
@param uriReference the <code>URIReference</code> that was being
   dereferenced when the error was encountered
@throws NullPointerException if <code>uriReference</code> is
   <code>null</code>
"
      end

      operation 12017282 "URIReferenceException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>URIReferenceException</code> with the specified
cause and a detail message of <code>(cause==null ? null :
cause.toString())</code> (which typically contains the class and detail
message of <code>cause</code>).

@param cause the cause (A <tt>null</tt> value is permitted, and
       indicates that the cause is nonexistent or unknown.)
"
      end

      operation 12017410 "getURIReference"
	public return_type class_ref 1419394 // URIReference
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>URIReference</code> that was being dereferenced
when the exception was thrown.

@return the <code>URIReference</code> that was being dereferenced
when the exception was thrown, or <code>null</code> if not specified
"
      end

      operation 12017538 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this <code>URIReferenceException</code> or
<code>null</code> if the cause is nonexistent or unknown.  (The
cause is the throwable that caused this
<code>URIReferenceException</code> to get thrown.)

@return the cause of this <code>URIReferenceException</code> or
   <code>null</code> if the cause is nonexistent or unknown.
"
      end

      operation 12017666 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>URIReferenceException</code>, its backtrace and
the cause's backtrace to the standard error stream.
"
      end

      operation 12017794 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>URIReferenceException</code>, its backtrace and
the cause's backtrace to the specified print stream.

@param s <code>PrintStream</code> to use for output
"
      end

      operation 12017922 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this <code>URIReferenceException</code>, its backtrace and
the cause's backtrace to the specified print writer.

@param s <code>PrintWriter</code> to use for output
"
      end
    end

    class 1419650 "XMLStructure"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of an XML structure from any namespace. The purpose of
this interface is to group (and provide type safety for) all
representations of XML structures.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      operation 12019842 "isFeatureSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "feature" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether a specified feature is supported.

@param feature the feature name (as an absolute URI)
@return <code>true</code> if the specified feature is supported,
   <code>false</code> otherwise
@throws NullPointerException if <code>feature</code> is <code>null</code>
"
      end
    end
  end

  deploymentview 177794 "crypto"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1007362 "AlgorithmMethod"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_elems
	class_ref 1417602 // AlgorithmMethod
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: AlgorithmMethod.java,v 1.4 2005/05/10 15:47:41 mullan Exp $
"
    end

    artifact 1007490 "Data"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.dsig.Transform;
${definition}"
      associated_elems
	class_ref 1417730 // Data
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: Data.java,v 1.4 2005/05/10 15:47:41 mullan Exp $
"
    end

    artifact 1007618 "KeySelector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.Key;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import javax.xml.crypto.dsig.keyinfo.RetrievalMethod;
${definition}"
      associated_elems
	class_ref 1417858 // KeySelector
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: KeySelector.java,v 1.6 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1007746 "KeySelectorException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
${definition}"
      associated_elems
	class_ref 1418498 // KeySelectorException
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: KeySelectorException.java,v 1.3 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1007874 "KeySelectorResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.Key;
${definition}"
      associated_elems
	class_ref 1418114 // KeySelectorResult
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: KeySelectorResult.java,v 1.3 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008002 "MarshalException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
import javax.xml.crypto.dsig.Manifest;
import javax.xml.crypto.dsig.XMLSignature;
import javax.xml.crypto.dsig.XMLSignatureFactory;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import javax.xml.crypto.dsig.keyinfo.KeyInfoFactory;
${definition}"
      associated_elems
	class_ref 1418754 // MarshalException
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: MarshalException.java,v 1.5 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008130 "NodeSetData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
${definition}"
      associated_elems
	class_ref 1418882 // NodeSetData
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: NodeSetData.java,v 1.5 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008258 "NoSuchMechanismException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
import javax.xml.crypto.dsig.Manifest;
import javax.xml.crypto.dsig.XMLSignature;
import javax.xml.crypto.dsig.XMLSignatureFactory;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import javax.xml.crypto.dsig.keyinfo.KeyInfoFactory;
${definition}"
      associated_elems
	class_ref 1419010 // NoSuchMechanismException
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: NoSuchMechanismException.java,v 1.4 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008386 "OctetStreamData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
${definition}"
      associated_elems
	class_ref 1419138 // OctetStreamData
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: OctetStreamData.java,v 1.3 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008514 "URIDereferencer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1419266 // URIDereferencer
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















===========================================================================

(C) Copyright IBM Corp. 2003 All Rights Reserved.

===========================================================================


$Id: URIDereferencer.java,v 1.5 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008642 "URIReference"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1419394 // URIReference
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: URIReference.java,v 1.4 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008770 "URIReferenceException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
import javax.xml.crypto.dsig.keyinfo.RetrievalMethod;
${definition}"
      associated_elems
	class_ref 1419522 // URIReferenceException
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: URIReferenceException.java,v 1.4 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1008898 "XMLCryptoContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1418370 // XMLCryptoContext
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: XMLCryptoContext.java,v 1.6 2005/05/10 15:47:42 mullan Exp $
"
    end

    artifact 1009026 "XMLStructure"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1419650 // XMLStructure
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: XMLStructure.java,v 1.3 2005/05/10 15:47:42 mullan Exp $
"
    end
  end

  package_ref 188418 // dsig

  package_ref 188674 // dom
end
