class VisibleTreeStateNodeEnumeration
!!!11912450.java!!!	VisibleTreeStateNodeEnumeration(inout node : VariableHeightLayoutCache::TreeStateNode)
            this(node, -1);
!!!11912578.java!!!	VisibleTreeStateNodeEnumeration(inout parent : VariableHeightLayoutCache::TreeStateNode, in startIndex : int)
            this.parent = parent;
            this.nextIndex = startIndex;
            this.childCount = this.parent.getChildCount();
!!!11912706.java!!!	hasMoreElements() : boolean
            return (parent != null);
!!!11912834.java!!!	nextElement() : TreePath
            if(!hasMoreElements())
                throw new NoSuchElementException("No more visible paths");

            TreePath                retObject;

            if(nextIndex == -1) {
                retObject = parent.getTreePath();
            }
            else {
                TreeStateNode   node = (TreeStateNode)parent.
                                        getChildAt(nextIndex);

                retObject = node.getTreePath();
            }
            updateNextObject();
            return retObject;
!!!11912962.java!!!	updateNextObject() : void
            if(!updateNextIndex()) {
                findNextValidParent();
            }
!!!11913090.java!!!	findNextValidParent() : boolean
            if(parent == root) {
                // mark as invalid!
                parent = null;
                return false;
            }
            while(parent != null) {
                TreeStateNode      newParent = (TreeStateNode)parent.
                                                  getParent();

                if(newParent != null) {
                    nextIndex = newParent.getIndex(parent);
                    parent = newParent;
                    childCount = parent.getChildCount();
                    if(updateNextIndex())
                        return true;
                }
                else
                    parent = null;
            }
            return false;
!!!11913218.java!!!	updateNextIndex() : boolean
            // nextIndex == -1 identifies receiver, make sure is expanded
            // before descend.
            if(nextIndex == -1 && !parent.isExpanded())
                return false;

            // Check that it can have kids
            if(childCount == 0)
                return false;
            // Make sure next index not beyond child count.
            else if(++nextIndex >= childCount)
                return false;

            TreeStateNode       child = (TreeStateNode)parent.
                                        getChildAt(nextIndex);

            if(child != null && child.isExpanded()) {
                parent = child;
                nextIndex = -1;
                childCount = child.getChildCount();
            }
            return true;
