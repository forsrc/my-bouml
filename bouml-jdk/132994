format 222
"nio" // jdk1.8::java::nio
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/nio/"
  java_package "java.nio"
  classview 131458 "nio"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 149890 "ByteBuffer"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A byte buffer.

<p> This class defines six categories of operations upon
byte buffers:

<ul>

  <li><p> Absolute and relative {@link #get() <i>get</i>} and
  {@link #put(byte) <i>put</i>} methods that read and write
  single bytes; </p></li>

  <li><p> Relative {@link #get(byte[]) <i>bulk get</i>}
  methods that transfer contiguous sequences of bytes from this buffer
  into an array; </p></li>

  <li><p> Relative {@link #put(byte[]) <i>bulk put</i>}
  methods that transfer contiguous sequences of bytes from a
  byte array or some other byte
  buffer into this buffer; </p></li>



  <li><p> Absolute and relative {@link #getChar() <i>get</i>}
  and {@link #putChar(char) <i>put</i>} methods that read and
  write values of other primitive types, translating them to and from
  sequences of bytes in a particular byte order; </p></li>

  <li><p> Methods for creating <i><a href=\"#views\">view buffers</a></i>,
  which allow a byte buffer to be viewed as a buffer containing values of
  some other primitive type; and </p></li>



  <li><p> Methods for {@link #compact compacting}, {@link
  #duplicate duplicating}, and {@link #slice slicing}
  a byte buffer.  </p></li>

</ul>

<p> Byte buffers can be created either by {@link #allocate
<i>allocation</i>}, which allocates space for the buffer's



content, or by {@link #wrap(byte[]) <i>wrapping</i>} an
existing byte array  into a buffer.











<a name=\"direct\"></a>
<h2> Direct <i>vs.</i> non-direct buffers </h2>

<p> A byte buffer is either <i>direct</i> or <i>non-direct</i>.  Given a
direct byte buffer, the Java virtual machine will make a best effort to
perform native I/O operations directly upon it.  That is, it will attempt to
avoid copying the buffer's content to (or from) an intermediate buffer
before (or after) each invocation of one of the underlying operating
system's native I/O operations.

<p> A direct byte buffer may be created by invoking the {@link
#allocateDirect(int) allocateDirect} factory method of this class.  The
buffers returned by this method typically have somewhat higher allocation
and deallocation costs than non-direct buffers.  The contents of direct
buffers may reside outside of the normal garbage-collected heap, and so
their impact upon the memory footprint of an application might not be
obvious.  It is therefore recommended that direct buffers be allocated
primarily for large, long-lived buffers that are subject to the underlying
system's native I/O operations.  In general it is best to allocate direct
buffers only when they yield a measureable gain in program performance.

<p> A direct byte buffer may also be created by {@link
java.nio.channels.FileChannel#map mapping} a region of a file
directly into memory.  An implementation of the Java platform may optionally
support the creation of direct byte buffers from native code via JNI.  If an
instance of one of these kinds of buffers refers to an inaccessible region
of memory then an attempt to access that region will not change the buffer's
content and will cause an unspecified exception to be thrown either at the
time of the access or at some later time.

<p> Whether a byte buffer is direct or non-direct may be determined by
invoking its {@link #isDirect isDirect} method.  This method is provided so
that explicit buffer management can be done in performance-critical code.


<a name=\"bin\"></a>
<h2> Access to binary data </h2>

<p> This class defines methods for reading and writing values of all other
primitive types, except <tt>boolean</tt>.  Primitive values are translated
to (or from) sequences of bytes according to the buffer's current byte
order, which may be retrieved and modified via the {@link #order order}
methods.  Specific byte orders are represented by instances of the {@link
ByteOrder} class.  The initial order of a byte buffer is always {@link
ByteOrder#BIG_ENDIAN BIG_ENDIAN}.

<p> For access to heterogeneous binary data, that is, sequences of values of
different types, this class defines a family of absolute and relative
<i>get</i> and <i>put</i> methods for each type.  For 32-bit floating-point
values, for example, this class defines:

<blockquote><pre>
float  {@link #getFloat()}
float  {@link #getFloat(int) getFloat(int index)}
 void  {@link #putFloat(float) putFloat(float f)}
 void  {@link #putFloat(int,float) putFloat(int index, float f)}</pre></blockquote>

<p> Corresponding methods are defined for the types <tt>char</tt>,
<tt>short</tt>, <tt>int</tt>, <tt>long</tt>, and <tt>double</tt>.  The index
parameters of the absolute <i>get</i> and <i>put</i> methods are in terms of
bytes rather than of the type being read or written.

<a name=\"views\"></a>

<p> For access to homogeneous binary data, that is, sequences of values of
the same type, this class defines methods that can create <i>views</i> of a
given byte buffer.  A <i>view buffer</i> is simply another buffer whose
content is backed by the byte buffer.  Changes to the byte buffer's content
will be visible in the view buffer, and vice versa; the two buffers'
position, limit, and mark values are independent.  The {@link
#asFloatBuffer() asFloatBuffer} method, for example, creates an instance of
the {@link FloatBuffer} class that is backed by the byte buffer upon which
the method is invoked.  Corresponding view-creation methods are defined for
the types <tt>char</tt>, <tt>short</tt>, <tt>int</tt>, <tt>long</tt>, and
<tt>double</tt>.

<p> View buffers have three important advantages over the families of
type-specific <i>get</i> and <i>put</i> methods described above:

<ul>

  <li><p> A view buffer is indexed not in terms of bytes but rather in terms
  of the type-specific size of its values;  </p></li>

  <li><p> A view buffer provides relative bulk <i>get</i> and <i>put</i>
  methods that can transfer contiguous sequences of values between a buffer
  and an array or some other buffer of the same type; and  </p></li>

  <li><p> A view buffer is potentially much more efficient because it will
  be direct if, and only if, its backing byte buffer is direct.  </p></li>

</ul>

<p> The byte order of a view buffer is fixed to be that of its byte buffer
at the time that the view is created.  </p>

























<h2> Invocation chaining </h2>


<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.



The sequence of statements

<blockquote><pre>
bb.putInt(0xCAFEBABE);
bb.putShort(3);
bb.putShort(45);</pre></blockquote>

can, for example, be replaced by the single statement

<blockquote><pre>
bb.putInt(0xCAFEBABE).putShort(3).putShort(45);</pre></blockquote>




















@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3271042 // <generalisation>
	relation 3271042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3271042 // <generalisation>
	  b parent class_ref 973826 // Buffer
      end

      classrelation 3271170 // <realization>
	relation 3271170 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3271170 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1796866 "hb"
	const_attribute package explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 1796994 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1797122 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid only for heap buffers"
      end

      operation 7592706 "ByteBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "hb" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7592834 "ByteBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7592962 "allocateDirect"
	class_operation public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new direct byte buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  Whether or not it has a
{@link #hasArray backing array} is unspecified.

@param  capacity
        The new buffer's capacity, in bytes

@return  The new byte buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7593090 "allocate"
	class_operation public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new byte buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  It will have a {@link #array backing array},
and its {@link #arrayOffset array offset} will be zero.

@param  capacity
        The new buffer's capacity, in bytes

@return  The new byte buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7593218 "wrap"
	class_operation public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array into a buffer.

<p> The new buffer will be backed by the given byte array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array backing array} will be the given array, and
its {@link #arrayOffset array offset} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new byte buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7593346 "wrap"
	class_operation public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array into a buffer.

<p> The new buffer will be backed by the given byte array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array backing array} will be the
given array, and its {@link #arrayOffset array offset>} will
be zero.  </p>

@param  array
        The array that will back this buffer

@return  The new byte buffer
"
      end

      operation 7593474 "slice"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new byte buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new byte buffer
"
      end

      operation 7593602 "duplicate"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new byte buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new byte buffer
"
      end

      operation 7593730 "asReadOnlyBuffer"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only byte buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only byte buffer
"
      end

      operation 7593858 "get"
	abstract public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the byte at this buffer's
current position, and then increments the position.

@return  The byte at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit
"
      end

      operation 7593986 "put"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "b" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given byte into this buffer at the current
position, and then increments the position. </p>

@param  b
        The byte to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7594114 "get"
	abstract public explicit_return_type "byte"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the byte at the given
index.

@param  index
        The index from which the byte will be read

@return  The byte at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit
"
      end

      operation 7594242 "put"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given byte into this buffer at the given
index. </p>

@param  index
        The index at which the byte will be written

@param  b
        The byte value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7594370 "get"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "dst" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers bytes from this buffer into the given
destination array.  If there are fewer bytes remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
bytes are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> bytes from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst[i] = src.get():
}</pre>

except that it first checks that there are sufficient bytes in
this buffer and it is potentially much more efficient.

@param  dst
        The array into which bytes are to be written

@param  offset
        The offset within the array of the first byte to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of bytes to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> bytes
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7594498 "get"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "dst" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers bytes from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@param   dst
         The destination array

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> bytes
         remaining in this buffer
"
      end

      operation 7594626 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the bytes remaining in the given source
buffer into this buffer.  If there are more bytes remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no bytes are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> bytes from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The source buffer from which bytes are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining bytes in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7594754 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "src" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers bytes into this buffer from the given
source array.  If there are more bytes to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
bytes are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> bytes from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst.put(a[i]);
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The array from which bytes are to be read

@param  offset
        The offset within the array of the first byte to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of bytes to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7594882 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "src" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
byte array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@param   src
         The source array

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7595010 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible byte
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only
"
      end

      operation 7595138 "array"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the byte array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7595266 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7595394 "compact"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The bytes between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
byte at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the byte at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the byte at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of bytes copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



<p> Invoke this method after writing data from a buffer in case the
write was incomplete.  The following loop, for example, copies bytes
from one channel to another via the buffer <tt>buf</tt>:

<blockquote><pre>{@code
  buf.clear();          // Prepare buffer for use
  while (in.read(buf) >= 0 || buf.position != 0) {
      buf.flip();
      out.write(buf);
      buf.compact();    // In case of partial write
  }
}</pre></blockquote>



@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7595522 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this byte buffer is direct.

@return  <tt>true</tt> if, and only if, this buffer is direct
"
      end

      operation 7595650 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.

@return  A summary string
"
      end

      operation 7595778 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a byte buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer
"
      end

      operation 7595906 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two byte buffers are equal if, and only if,

<ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.







  </p></li>

</ol>

<p> A byte buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object
"
      end

      operation 7596034 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "byte"
	  param in name "y" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7596162 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two byte buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.








Pairs of {@code byte} elements are compared as if by invoking
{@link Byte#compare(byte,byte)}.


<p> A byte buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
         is less than, equal to, or greater than the given buffer
"
      end

      operation 7596290 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "byte"
	  param in name "y" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1797250 "bigEndian"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --
"
      end

      attribute 1797378 "nativeByteOrder"
	package explicit_type "boolean"
	init_value " (Bits.byteOrder() == ByteOrder.BIG_ENDIAN)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7596418 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves this buffer's byte order.

<p> The byte order is used when reading or writing multibyte values, and
when creating buffers that are views of this byte buffer.  The order of
a newly-created byte buffer is always {@link ByteOrder#BIG_ENDIAN
BIG_ENDIAN}.  </p>

@return  This buffer's byte order
"
      end

      operation 7596546 "order"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "bo" type class_ref 324354 // ByteOrder
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Modifies this buffer's byte order.

@param  bo
        The new byte order,
        either {@link ByteOrder#BIG_ENDIAN BIG_ENDIAN}
        or {@link ByteOrder#LITTLE_ENDIAN LITTLE_ENDIAN}

@return  This buffer
"
      end

      operation 7596674 "_get"
	abstract package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unchecked accessors, for use by ByteBufferAs-X-Buffer classes
"
      end

      operation 7596802 "_put"
	abstract package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7596930 "getChar"
	abstract public explicit_return_type "char"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private

Relative <i>get</i> method for reading a char value.

<p> Reads the next two bytes at this buffer's current position,
composing them into a char value according to the current byte order,
and then increments the position by two.  </p>

@return  The char value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than two bytes
         remaining in this buffer
"
      end

      operation 7597058 "putChar"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a char
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given char value, in the
current byte order, into this buffer at the current position, and then
increments the position by two.  </p>

@param  value
        The char value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than two bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7597186 "getChar"
	abstract public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a char value.

<p> Reads two bytes at the given index, composing them into a
char value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The char value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one
"
      end

      operation 7597314 "putChar"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a char
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given char value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The char value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7597442 "asCharBuffer"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a char buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
two, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new char buffer
"
      end

      operation 7597570 "getShort"
	abstract public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a short value.

<p> Reads the next two bytes at this buffer's current position,
composing them into a short value according to the current byte order,
and then increments the position by two.  </p>

@return  The short value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than two bytes
         remaining in this buffer
"
      end

      operation 7597698 "putShort"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a short
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given short value, in the
current byte order, into this buffer at the current position, and then
increments the position by two.  </p>

@param  value
        The short value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than two bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7597826 "getShort"
	abstract public explicit_return_type "short"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a short value.

<p> Reads two bytes at the given index, composing them into a
short value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The short value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one
"
      end

      operation 7597954 "putShort"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a short
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given short value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The short value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7598082 "asShortBuffer"
	abstract public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a short buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
two, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new short buffer
"
      end

      operation 7598210 "getInt"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading an int value.

<p> Reads the next four bytes at this buffer's current position,
composing them into an int value according to the current byte order,
and then increments the position by four.  </p>

@return  The int value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than four bytes
         remaining in this buffer
"
      end

      operation 7598338 "putInt"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing an int
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given int value, in the
current byte order, into this buffer at the current position, and then
increments the position by four.  </p>

@param  value
        The int value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than four bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7598466 "getInt"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading an int value.

<p> Reads four bytes at the given index, composing them into a
int value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The int value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three
"
      end

      operation 7598594 "putInt"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing an int
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given int value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The int value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7598722 "asIntBuffer"
	abstract public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as an int buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
four, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new int buffer
"
      end

      operation 7598850 "getLong"
	abstract public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a long value.

<p> Reads the next eight bytes at this buffer's current position,
composing them into a long value according to the current byte order,
and then increments the position by eight.  </p>

@return  The long value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than eight bytes
         remaining in this buffer
"
      end

      operation 7598978 "putLong"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a long
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given long value, in the
current byte order, into this buffer at the current position, and then
increments the position by eight.  </p>

@param  value
        The long value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than eight bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7599106 "getLong"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a long value.

<p> Reads eight bytes at the given index, composing them into a
long value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The long value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven
"
      end

      operation 7599234 "putLong"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a long
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given long value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The long value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7599362 "asLongBuffer"
	abstract public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a long buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
eight, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new long buffer
"
      end

      operation 7599490 "getFloat"
	abstract public explicit_return_type "float"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a float value.

<p> Reads the next four bytes at this buffer's current position,
composing them into a float value according to the current byte order,
and then increments the position by four.  </p>

@return  The float value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than four bytes
         remaining in this buffer
"
      end

      operation 7599618 "putFloat"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a float
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given float value, in the
current byte order, into this buffer at the current position, and then
increments the position by four.  </p>

@param  value
        The float value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than four bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7599746 "getFloat"
	abstract public explicit_return_type "float"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a float value.

<p> Reads four bytes at the given index, composing them into a
float value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The float value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three
"
      end

      operation 7599874 "putFloat"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a float
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given float value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The float value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7600002 "asFloatBuffer"
	abstract public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a float buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
four, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new float buffer
"
      end

      operation 7600130 "getDouble"
	abstract public explicit_return_type "double"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a double value.

<p> Reads the next eight bytes at this buffer's current position,
composing them into a double value according to the current byte order,
and then increments the position by eight.  </p>

@return  The double value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than eight bytes
         remaining in this buffer
"
      end

      operation 7600258 "putDouble"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a double
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given double value, in the
current byte order, into this buffer at the current position, and then
increments the position by eight.  </p>

@param  value
        The double value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than eight bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7600386 "getDouble"
	abstract public explicit_return_type "double"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a double value.

<p> Reads eight bytes at the given index, composing them into a
double value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The double value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven
"
      end

      operation 7600514 "putDouble"
	abstract public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a double
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given double value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The double value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7600642 "asDoubleBuffer"
	abstract public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a double buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
eight, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new double buffer
"
      end
    end

    class 324354 "ByteOrder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A typesafe enumeration for byte orders.

@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3277826 // name (<unidirectional association>)
	relation 3277826 --->
	  a role_name "name" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3277826 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 7664514 "ByteOrder"
	private explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3277954 // BIG_ENDIAN (<unidirectional association>)
	relation 3277954 --->
	  a role_name "BIG_ENDIAN" init_value " new ByteOrder(\"BIG_ENDIAN\")" class_relation const_relation public
	    comment "
Constant denoting big-endian byte order.  In this order, the bytes of a
multibyte value are ordered from most significant to least significant.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3277954 // BIG_ENDIAN (<unidirectional association>)
	  b parent class_ref 324354 // ByteOrder
      end

      classrelation 3278082 // LITTLE_ENDIAN (<unidirectional association>)
	relation 3278082 --->
	  a role_name "LITTLE_ENDIAN" init_value " new ByteOrder(\"LITTLE_ENDIAN\")" class_relation const_relation public
	    comment "
Constant denoting little-endian byte order.  In this order, the bytes of
a multibyte value are ordered from least significant to most
significant.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3278082 // LITTLE_ENDIAN (<unidirectional association>)
	  b parent class_ref 324354 // ByteOrder
      end

      operation 7664642 "nativeOrder"
	class_operation public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the native byte order of the underlying platform.

<p> This method is defined so that performance-sensitive Java code can
allocate direct buffers with the same byte order as the hardware.
Native code libraries are often more efficient when such buffers are
used.  </p>

@return  The native byte order of the hardware upon which this Java
         virtual machine is running
"
      end

      operation 7664770 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string describing this object.

<p> This method returns the string <tt>\"BIG_ENDIAN\"</tt> for {@link
#BIG_ENDIAN} and <tt>\"LITTLE_ENDIAN\"</tt> for {@link #LITTLE_ENDIAN}.
</p>

@return  The specified string
"
      end
    end

    class 548482 "CharBuffer"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A char buffer.

<p> This class defines four categories of operations upon
char buffers:

<ul>

  <li><p> Absolute and relative {@link #get() <i>get</i>} and
  {@link #put(char) <i>put</i>} methods that read and write
  single chars; </p></li>

  <li><p> Relative {@link #get(char[]) <i>bulk get</i>}
  methods that transfer contiguous sequences of chars from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(char[]) <i>bulk put</i>}
  methods that transfer contiguous sequences of chars from a
  char array,&#32;a&#32;string, or some other char
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact compacting}, {@link
  #duplicate duplicating}, and {@link #slice slicing}
  a char buffer.  </p></li>

</ul>

<p> Char buffers can be created either by {@link #allocate
<i>allocation</i>}, which allocates space for the buffer's








content, by {@link #wrap(char[]) <i>wrapping</i>} an existing
char array or&#32;string into a buffer, or by creating a
<a href=\"ByteBuffer.html#views\"><i>view</i></a> of an existing byte buffer.









































































































<p> Like a byte buffer, a char buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
char buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A char buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a char buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>





<p> This class implements the {@link CharSequence} interface so that
character buffers may be used wherever character sequences are accepted, for
example in the regular-expression package <tt>{@link java.util.regex}</tt>.
</p>







<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


















The sequence of statements

<blockquote><pre>
cb.put(\"text/\");
cb.put(subtype);
cb.put(\"; charset=\");
cb.put(enc);</pre></blockquote>

can, for example, be replaced by the single statement

<blockquote><pre>
cb.put(\"text/\").put(subtype).put(\"; charset=\").put(enc);</pre></blockquote>




@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3271298 // <generalisation>
	relation 3271298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3271298 // <generalisation>
	  b parent class_ref 973826 // Buffer
      end

      classrelation 3271426 // <realization>
	relation 3271426 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3271426 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      classrelation 3271554 // <realization>
	relation 3271554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3271554 // <realization>
	  b parent class_ref 548866 // Appendable
      end

      classrelation 3271682 // <realization>
	relation 3271682 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3271682 // <realization>
	  b parent class_ref 429442 // CharSequence
      end

      classrelation 3271810 // <realization>
	relation 3271810 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3271810 // <realization>
	  b parent class_ref 548354 // Readable
      end

      attribute 1797506 "hb"
	const_attribute package explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 1797634 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1797762 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid only for heap buffers"
      end

      operation 7600770 "CharBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "hb" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7600898 "CharBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7601026 "allocate"
	class_operation public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new char buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  It will have a {@link #array backing array},
and its {@link #arrayOffset array offset} will be zero.

@param  capacity
        The new buffer's capacity, in chars

@return  The new char buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7601154 "wrap"
	class_operation public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "array" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a char array into a buffer.

<p> The new buffer will be backed by the given char array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array backing array} will be the given array, and
its {@link #arrayOffset array offset} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new char buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7601282 "wrap"
	class_operation public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "array" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a char array into a buffer.

<p> The new buffer will be backed by the given char array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array backing array} will be the
given array, and its {@link #arrayOffset array offset>} will
be zero.  </p>

@param  array
        The array that will back this buffer

@return  The new char buffer
"
      end

      operation 7601410 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "target" type class_ref 548482 // CharBuffer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to read characters into the specified character buffer.
The buffer is used as a repository of characters as-is: the only
changes made are the results of a put operation. No flipping or
rewinding of the buffer is performed.

@param target the buffer to read characters into
@return The number of characters added to the buffer, or
        -1 if this source of characters is at its end
@throws IOException if an I/O error occurs
@throws NullPointerException if target is null
@throws ReadOnlyBufferException if target is a read only buffer
@since 1.5
"
      end

      operation 7601538 "wrap"
	class_operation public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "csq" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a character sequence into a buffer.

<p> The content of the new, read-only buffer will be the content of the
given character sequence.  The buffer's capacity will be
<tt>csq.length()</tt>, its position will be <tt>start</tt>, its limit
will be <tt>end</tt>, and its mark will be undefined.  </p>

@param  csq
        The character sequence from which the new character buffer is to
        be created

@param  start
        The index of the first character to be used;
        must be non-negative and no larger than <tt>csq.length()</tt>.
        The new buffer's position will be set to this value.

@param  end
        The index of the character following the last character to be
        used; must be no smaller than <tt>start</tt> and no larger
        than <tt>csq.length()</tt>.
        The new buffer's limit will be set to this value.

@return  The new character buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>start</tt> and <tt>end</tt>
         parameters do not hold
"
      end

      operation 7601666 "wrap"
	class_operation public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "csq" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a character sequence into a buffer.

<p> The content of the new, read-only buffer will be the content of the
given character sequence.  The new buffer's capacity and limit will be
<tt>csq.length()</tt>, its position will be zero, and its mark will be
undefined.  </p>

@param  csq
        The character sequence from which the new character buffer is to
        be created

@return  The new character buffer
"
      end

      operation 7601794 "slice"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new char buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of chars remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new char buffer
"
      end

      operation 7601922 "duplicate"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new char buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new char buffer
"
      end

      operation 7602050 "asReadOnlyBuffer"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only char buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only char buffer
"
      end

      operation 7602178 "get"
	abstract public explicit_return_type "char"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the char at this buffer's
current position, and then increments the position.

@return  The char at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit
"
      end

      operation 7602306 "put"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "c" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given char into this buffer at the current
position, and then increments the position. </p>

@param  c
        The char to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7602434 "get"
	abstract public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the char at the given
index.

@param  index
        The index from which the char will be read

@return  The char at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit
"
      end

      operation 7602562 "getUnchecked"
	abstract package explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the char at the given
index without any validation of the index.

@param  index
        The index from which the char will be read

@return  The char at the given index
"
      end

      operation 7602690 "put"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "c" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private

Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given char into this buffer at the given
index. </p>

@param  index
        The index at which the char will be written

@param  c
        The char value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7602818 "get"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers chars from this buffer into the given
destination array.  If there are fewer chars remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
chars are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> chars from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst[i] = src.get():
}</pre>

except that it first checks that there are sufficient chars in
this buffer and it is potentially much more efficient.

@param  dst
        The array into which chars are to be written

@param  offset
        The offset within the array of the first char to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of chars to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> chars
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7602946 "get"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers chars from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@param   dst
         The destination array

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> chars
         remaining in this buffer
"
      end

      operation 7603074 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the chars remaining in the given source
buffer into this buffer.  If there are more chars remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no chars are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> chars from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The source buffer from which chars are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining chars in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7603202 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers chars into this buffer from the given
source array.  If there are more chars to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
chars are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> chars from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst.put(a[i]);
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The array from which chars are to be read

@param  offset
        The offset within the array of the first char to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of chars to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7603330 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
char array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@param   src
         The source array

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7603458 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers chars from the given string into this
buffer.  If there are more chars to be copied from the string than
remain in this buffer, that is, if
<tt>end&nbsp;-&nbsp;start</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no chars are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>end</tt>&nbsp;-&nbsp;<tt>start</tt> chars
from the given string into this buffer, starting at the given
<tt>start</tt> index and at the current position of this buffer.  The
position of this buffer is then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;start,&nbsp;end)</tt> has exactly the same effect
as the loop

<pre>{@code
    for (int i = start; i < end; i++)
        dst.put(src.charAt(i));
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The string from which chars are to be read

@param  start
        The offset within the string of the first char to be read;
        must be non-negative and no larger than
        <tt>string.length()</tt>

@param  end
        The offset within the string of the last char to be read,
        plus one; must be non-negative and no larger than
        <tt>string.length()</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>start</tt> and <tt>end</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7603586 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source string
into this buffer.  An invocation of this method of the form
<tt>dst.put(s)</tt> behaves in exactly the same way as the invocation

<pre>
    dst.put(s, 0, s.length()) </pre>

@param   src
         The source string

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7603714 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible char
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only
"
      end

      operation 7603842 "array"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the char array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7603970 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7604098 "compact"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The chars between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
char at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the char at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the char at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of chars copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>


















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7604226 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this char buffer is direct.

@return  <tt>true</tt> if, and only if, this buffer is direct
"
      end

      operation 7604354 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a char buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer
"
      end

      operation 7604482 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two char buffers are equal if, and only if,

<ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.







  </p></li>

</ol>

<p> A char buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object
"
      end

      operation 7604610 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "char"
	  param in name "y" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7604738 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two char buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.








Pairs of {@code char} elements are compared as if by invoking
{@link Character#compare(char,char)}.


<p> A char buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
         is less than, equal to, or greater than the given buffer
"
      end

      operation 7604866 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "char"
	  param in name "y" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7604994 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --

Returns a string containing the characters in this buffer.

<p> The first character of the resulting string will be the character at
this buffer's position, while the last character will be the character
at index <tt>limit()</tt>&nbsp;-&nbsp;1.  Invoking this method does not
change the buffer's position. </p>

@return  The specified string
"
      end

      operation 7605122 "toString"
	abstract package return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7605250 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private
 --- Methods to support CharSequence ---

Returns the length of this character buffer.

<p> When viewed as a character sequence, the length of a character
buffer is simply the number of characters between the position
(inclusive) and the limit (exclusive); that is, it is equivalent to
<tt>remaining()</tt>. </p>

@return  The length of this character buffer
"
      end

      operation 7605378 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the character at the given index relative to the current
position.

@param  index
        The index of the character to be read, relative to the position;
        must be non-negative and smaller than <tt>remaining()</tt>

@return  The character at index
         <tt>position()&nbsp;+&nbsp;index</tt>

@throws  IndexOutOfBoundsException
         If the preconditions on <tt>index</tt> do not hold
"
      end

      operation 7605506 "subSequence"
	abstract public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new character buffer that represents the specified subsequence
of this buffer, relative to the current position.

<p> The new buffer will share this buffer's content; that is, if the
content of this buffer is mutable then modifications to one buffer will
cause the other to be modified.  The new buffer's capacity will be that
of this buffer, its position will be
<tt>position()</tt>&nbsp;+&nbsp;<tt>start</tt>, and its limit will be
<tt>position()</tt>&nbsp;+&nbsp;<tt>end</tt>.  The new buffer will be
direct if, and only if, this buffer is direct, and it will be read-only
if, and only if, this buffer is read-only.  </p>

@param  start
        The index, relative to the current position, of the first
        character in the subsequence; must be non-negative and no larger
        than <tt>remaining()</tt>

@param  end
        The index, relative to the current position, of the character
        following the last character in the subsequence; must be no
        smaller than <tt>start</tt> and no larger than
        <tt>remaining()</tt>

@return  The new character buffer

@throws  IndexOutOfBoundsException
         If the preconditions on <tt>start</tt> and <tt>end</tt>
         do not hold
"
      end

      operation 7605634 "append"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "csq" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support Appendable ---

Appends the specified character sequence  to this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> An invocation of this method of the form <tt>dst.append(csq)</tt>
behaves in exactly the same way as the invocation

<pre>
    dst.put(csq.toString()) </pre>

<p> Depending on the specification of <tt>toString</tt> for the
character sequence <tt>csq</tt>, the entire sequence may not be
appended.  For instance, invoking the {@link CharBuffer#toString()
toString} method of a character buffer will return a subsequence whose
content depends upon the buffer's position and limit.

@param  csq
        The character sequence to append.  If <tt>csq</tt> is
        <tt>null</tt>, then the four characters <tt>\"null\"</tt> are
        appended to this character buffer.

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only

@since  1.5
"
      end

      operation 7605762 "append"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "csq" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a subsequence of the  specified character sequence  to this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> An invocation of this method of the form <tt>dst.append(csq, start,
end)</tt> when <tt>csq</tt> is not <tt>null</tt>, behaves in exactly the
same way as the invocation

<pre>
    dst.put(csq.subSequence(start, end).toString()) </pre>

@param  csq
        The character sequence from which a subsequence will be
        appended.  If <tt>csq</tt> is <tt>null</tt>, then characters
        will be appended as if <tt>csq</tt> contained the four
        characters <tt>\"null\"</tt>.

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If <tt>start</tt> or <tt>end</tt> are negative, <tt>start</tt>
         is greater than <tt>end</tt>, or <tt>end</tt> is greater than
         <tt>csq.length()</tt>

@throws  ReadOnlyBufferException
         If this buffer is read-only

@since  1.5
"
      end

      operation 7605890 "append"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified char  to this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> An invocation of this method of the form <tt>dst.append(c)</tt>
behaves in exactly the same way as the invocation

<pre>
    dst.put(c) </pre>

@param  c
        The 16-bit char to append

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only

@since  1.5
"
      end

      operation 7606018 "order"
	abstract public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a char buffer created by allocation or by
wrapping an existing <tt>char</tt> array is the {@link
ByteOrder#nativeOrder native order} of the underlying
hardware.  The byte order of a char buffer created as a <a
href=\"ByteBuffer.html#views\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order
"
      end

      operation 7606146 "chars"
	public return_type class_ref 429570 // IntStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 973698 "Bits"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Access to bits, native and otherwise.
"
      operation 7573890 "Bits"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7574018 "swap"
	class_operation package explicit_return_type "short"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Swapping --"
      end

      operation 7574146 "swap"
	class_operation package explicit_return_type "char"
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7574274 "swap"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7574402 "swap"
	class_operation package explicit_return_type "long"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7574530 "makeChar"
	class_operation private explicit_return_type "char"
	nparams 2
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put char --"
      end

      operation 7574658 "getCharL"
	class_operation package explicit_return_type "char"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7574786 "getCharL"
	class_operation package explicit_return_type "char"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7574914 "getCharB"
	class_operation package explicit_return_type "char"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575042 "getCharB"
	class_operation package explicit_return_type "char"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575170 "getChar"
	class_operation package explicit_return_type "char"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575298 "getChar"
	class_operation package explicit_return_type "char"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575426 "char1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575554 "char0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575682 "putCharL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575810 "putCharL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7575938 "putCharB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7576066 "putCharB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7576194 "putChar"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "char"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7576322 "putChar"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7576450 "makeShort"
	class_operation private explicit_return_type "short"
	nparams 2
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put short --"
      end

      operation 7576578 "getShortL"
	class_operation package explicit_return_type "short"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7576706 "getShortL"
	class_operation package explicit_return_type "short"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7576834 "getShortB"
	class_operation package explicit_return_type "short"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7576962 "getShortB"
	class_operation package explicit_return_type "short"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577090 "getShort"
	class_operation package explicit_return_type "short"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577218 "getShort"
	class_operation package explicit_return_type "short"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577346 "short1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577474 "short0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577602 "putShortL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577730 "putShortL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577858 "putShortB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7577986 "putShortB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7578114 "putShort"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "short"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7578242 "putShort"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7578370 "makeInt"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "b3" explicit_type "byte"
	  param in name "b2" explicit_type "byte"
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put int --"
      end

      operation 7578498 "getIntL"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7578626 "getIntL"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7578754 "getIntB"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7578882 "getIntB"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579010 "getInt"
	class_operation package explicit_return_type "int"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579138 "getInt"
	class_operation package explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579266 "int3"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579394 "int2"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579522 "int1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579650 "int0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579778 "putIntL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579906 "putIntL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7580034 "putIntB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7580162 "putIntB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7580290 "putInt"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7580418 "putInt"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7580546 "makeLong"
	class_operation private explicit_return_type "long"
	nparams 8
	  param in name "b7" explicit_type "byte"
	  param in name "b6" explicit_type "byte"
	  param in name "b5" explicit_type "byte"
	  param in name "b4" explicit_type "byte"
	  param in name "b3" explicit_type "byte"
	  param in name "b2" explicit_type "byte"
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put long --"
      end

      operation 7580674 "getLongL"
	class_operation package explicit_return_type "long"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7580802 "getLongL"
	class_operation package explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7580930 "getLongB"
	class_operation package explicit_return_type "long"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581058 "getLongB"
	class_operation package explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581186 "getLong"
	class_operation package explicit_return_type "long"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581314 "getLong"
	class_operation package explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581442 "long7"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581570 "long6"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581698 "long5"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581826 "long4"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7581954 "long3"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582082 "long2"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582210 "long1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582338 "long0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582466 "putLongL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582594 "putLongL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582722 "putLongB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582850 "putLongB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582978 "putLong"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7583106 "putLong"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7583234 "getFloatL"
	class_operation package explicit_return_type "float"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put float --"
      end

      operation 7583362 "getFloatL"
	class_operation package explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7583490 "getFloatB"
	class_operation package explicit_return_type "float"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7583618 "getFloatB"
	class_operation package explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7583746 "getFloat"
	class_operation package explicit_return_type "float"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7583874 "getFloat"
	class_operation package explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7584002 "putFloatL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7584130 "putFloatL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7584258 "putFloatB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7584386 "putFloatB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7584514 "putFloat"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "float"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7584642 "putFloat"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7584770 "getDoubleL"
	class_operation package explicit_return_type "double"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put double --"
      end

      operation 7584898 "getDoubleL"
	class_operation package explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585026 "getDoubleB"
	class_operation package explicit_return_type "double"
	nparams 2
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585154 "getDoubleB"
	class_operation package explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585282 "getDouble"
	class_operation package explicit_return_type "double"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585410 "getDouble"
	class_operation package explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585538 "putDoubleL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585666 "putDoubleL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585794 "putDoubleB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7585922 "putDoubleB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7586050 "putDouble"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "double"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7586178 "putDouble"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1794562 "unsafe"
	class_attribute const_attribute private explicit_type "Unsafe"
	init_value " Unsafe.getUnsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " -- Unsafe access --
"
      end

      operation 7586306 "_get"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7586434 "_put"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7586562 "unsafe"
	class_operation package explicit_return_type "Unsafe"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3270274 // byteOrder (<unidirectional association>)
	relation 3270274 --->
	  a role_name "byteOrder" class_relation const_relation private
	    comment " -- Processor and memory-system properties --
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3270274 // byteOrder (<unidirectional association>)
	  b parent class_ref 324354 // ByteOrder
      end

      operation 7586690 "byteOrder"
	class_operation package return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 166530 "initialization"
	
	cpp "" ""
	java "  static {
        long a = unsafe.allocateMemory(8);
        try {
            unsafe.putLong(a, 0x0102030405060708L);
            byte b = unsafe.getByte(a);
            switch (b) {
            case 0x01: byteOrder = ByteOrder.BIG_ENDIAN;     break;
            case 0x08: byteOrder = ByteOrder.LITTLE_ENDIAN;  break;
            default:
                assert false;
                byteOrder = null;
            }
        } finally {
            unsafe.freeMemory(a);
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1794690 "pageSize"
	class_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7586818 "pageSize"
	class_operation package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7586946 "pageCount"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1794818 "unaligned"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1794946 "unalignedKnown"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7587074 "unaligned"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1795074 "maxMemory"
	class_attribute volatile private explicit_type "long"
	init_value " VM.maxDirectMemory()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " -- Direct memory management --
 A user-settable upper limit on the maximum amount of allocatable
 direct buffer memory.  This value may be changed during VM
 initialization if it is launched with \"-XX:MaxDirectMemorySize=<size>\".
"
      end

      classrelation 3270402 // reservedMemory (<unidirectional association>)
	relation 3270402 --->
	  a role_name "reservedMemory" init_value " new AtomicLong()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3270402 // reservedMemory (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      classrelation 3270530 // totalCapacity (<unidirectional association>)
	relation 3270530 --->
	  a role_name "totalCapacity" init_value " new AtomicLong()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3270530 // totalCapacity (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      classrelation 3270658 // count (<unidirectional association>)
	relation 3270658 --->
	  a role_name "count" init_value " new AtomicLong()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3270658 // count (<unidirectional association>)
	  b parent class_ref 256386 // AtomicLong
      end

      attribute 1795202 "memoryLimitSet"
	class_attribute volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1795330 "MAX_SLEEPS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " max. number of sleeps during try-reserving with exponentially
 increasing delay before throwing OutOfMemoryError:
 1, 2, 4, 8, 16, 32, 64, 128, 256 (total 511 ms ~ 0.5 s)
 which means that OOME will be thrown after 0.5 s of trying
"
      end

      operation 7587202 "reserveMemory"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "long"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These methods should be called whenever direct memory is allocated or
 freed.  They allow the user to control the amount of direct memory
 which a process may access.  All sizes are specified in bytes."
      end

      operation 7587330 "tryReserveMemory"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "size" explicit_type "long"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7587458 "unreserveMemory"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "long"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 166658 "initialization"
	
	cpp "" ""
	java "  static {
        // setup access to this package in SharedSecrets
        sun.misc.SharedSecrets.setJavaNioAccess(
            new sun.misc.JavaNioAccess() {
                @Override
                public sun.misc.JavaNioAccess.BufferPool getDirectBufferPool() {
                    return new sun.misc.JavaNioAccess.BufferPool() {
                        @Override
                        public String getName() {
                            return \"direct\";
                        }
                        @Override
                        public long getCount() {
                            return Bits.count.get();
                        }
                        @Override
                        public long getTotalCapacity() {
                            return Bits.totalCapacity.get();
                        }
                        @Override
                        public long getMemoryUsed() {
                            return Bits.reservedMemory.get();
                        }
                    };
                }
                @Override
                public ByteBuffer newDirectByteBuffer(long addr, int cap, Object ob) {
                    return new DirectByteBuffer(addr, cap, ob);
                }
                @Override
                public void truncate(Buffer buf) {
                    buf.truncate();
                }
        });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1795458 "JNI_COPY_TO_ARRAY_THRESHOLD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " -- Bulk get/put acceleration --
 These numbers represent the point at which we have empirically
 determined that the average cost of a JNI call exceeds the expense
 of an element by element copy.  These numbers may change over time.
"
      end

      attribute 1795586 "JNI_COPY_FROM_ARRAY_THRESHOLD"
	class_attribute const_attribute package explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1795714 "UNSAFE_COPY_THRESHOLD"
	class_attribute const_attribute package explicit_type "long"
	init_value " 1024L * 1024L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " This number limits the number of bytes to copy per call to Unsafe's
 copyMemory method. A limit is imposed to allow for safepoint polling
 during a large copy
"
      end

      operation 7587586 "copyFromArray"
	class_operation package explicit_return_type "void"
	nparams 5
	  param inout name "src" type class_ref 129538 // Object
	  param in name "srcBaseOffset" explicit_type "long"
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These methods do no bounds checking.  Verification that the copy will not
 result in memory corruption should be done prior to invocation.
 All positions and lengths are specified in bytes.

Copy from given source array to destination address.

@param   src
         source array
@param   srcBaseOffset
         offset of first element of storage in source array
@param   srcPos
         offset within source array of the first element to read
@param   dstAddr
         destination address
@param   length
         number of bytes to copy
"
      end

      operation 7587714 "copyToArray"
	class_operation package explicit_return_type "void"
	nparams 5
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" type class_ref 129538 // Object
	  param in name "dstBaseOffset" explicit_type "long"
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy from source address into given destination array.

@param   srcAddr
         source address
@param   dst
         destination array
@param   dstBaseOffset
         offset of first element of storage in destination array
@param   dstPos
         offset within destination array of the first element to write
@param   length
         number of bytes to copy
"
      end

      operation 7587842 "copyFromCharArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" type class_ref 129538 // Object
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7587970 "copyToCharArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" type class_ref 129538 // Object
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7588098 "copyFromShortArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" type class_ref 129538 // Object
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 7588226 "copyToShortArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" type class_ref 129538 // Object
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 7588354 "copyFromIntArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" type class_ref 129538 // Object
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 7588482 "copyToIntArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" type class_ref 129538 // Object
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 7588610 "copyFromLongArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" type class_ref 129538 // Object
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end

      operation 7588738 "copyToLongArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" type class_ref 129538 // Object
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	
      end
    end

    class 973826 "Buffer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A container for data of a specific primitive type.

<p> A buffer is a linear, finite sequence of elements of a specific
primitive type.  Aside from its content, the essential properties of a
buffer are its capacity, limit, and position: </p>

<blockquote>

  <p> A buffer's <i>capacity</i> is the number of elements it contains.  The
  capacity of a buffer is never negative and never changes.  </p>

  <p> A buffer's <i>limit</i> is the index of the first element that should
  not be read or written.  A buffer's limit is never negative and is never
  greater than its capacity.  </p>

  <p> A buffer's <i>position</i> is the index of the next element to be
  read or written.  A buffer's position is never negative and is never
  greater than its limit.  </p>

</blockquote>

<p> There is one subclass of this class for each non-boolean primitive type.


<h2> Transferring data </h2>

<p> Each subclass of this class defines two categories of <i>get</i> and
<i>put</i> operations: </p>

<blockquote>

  <p> <i>Relative</i> operations read or write one or more elements starting
  at the current position and then increment the position by the number of
  elements transferred.  If the requested transfer exceeds the limit then a
  relative <i>get</i> operation throws a {@link BufferUnderflowException}
  and a relative <i>put</i> operation throws a {@link
  BufferOverflowException}; in either case, no data is transferred.  </p>

  <p> <i>Absolute</i> operations take an explicit element index and do not
  affect the position.  Absolute <i>get</i> and <i>put</i> operations throw
  an {@link IndexOutOfBoundsException} if the index argument exceeds the
  limit.  </p>

</blockquote>

<p> Data may also, of course, be transferred in to or out of a buffer by the
I/O operations of an appropriate channel, which are always relative to the
current position.


<h2> Marking and resetting </h2>

<p> A buffer's <i>mark</i> is the index to which its position will be reset
when the {@link #reset reset} method is invoked.  The mark is not always
defined, but when it is defined it is never negative and is never greater
than the position.  If the mark is defined then it is discarded when the
position or the limit is adjusted to a value smaller than the mark.  If the
mark is not defined then invoking the {@link #reset reset} method causes an
{@link InvalidMarkException} to be thrown.


<h2> Invariants </h2>

<p> The following invariant holds for the mark, position, limit, and
capacity values:

<blockquote>
    <tt>0</tt> <tt>&lt;=</tt>
    <i>mark</i> <tt>&lt;=</tt>
    <i>position</i> <tt>&lt;=</tt>
    <i>limit</i> <tt>&lt;=</tt>
    <i>capacity</i>
</blockquote>

<p> A newly-created buffer always has a position of zero and a mark that is
undefined.  The initial limit may be zero, or it may be some other value
that depends upon the type of the buffer and the manner in which it is
constructed.  Each element of a newly-allocated buffer is initialized
to zero.


<h2> Clearing, flipping, and rewinding </h2>

<p> In addition to methods for accessing the position, limit, and capacity
values and for marking and resetting, this class also defines the following
operations upon buffers:

<ul>

  <li><p> {@link #clear} makes a buffer ready for a new sequence of
  channel-read or relative <i>put</i> operations: It sets the limit to the
  capacity and the position to zero.  </p></li>

  <li><p> {@link #flip} makes a buffer ready for a new sequence of
  channel-write or relative <i>get</i> operations: It sets the limit to the
  current position and then sets the position to zero.  </p></li>

  <li><p> {@link #rewind} makes a buffer ready for re-reading the data that
  it already contains: It leaves the limit unchanged and sets the position
  to zero.  </p></li>

</ul>


<h2> Read-only buffers </h2>

<p> Every buffer is readable, but not every buffer is writable.  The
mutation methods of each buffer class are specified as <i>optional
operations</i> that will throw a {@link ReadOnlyBufferException} when
invoked upon a read-only buffer.  A read-only buffer does not allow its
content to be changed, but its mark, position, and limit values are mutable.
Whether or not a buffer is read-only may be determined by invoking its
{@link #isReadOnly isReadOnly} method.


<h2> Thread safety </h2>

<p> Buffers are not safe for use by multiple concurrent threads.  If a
buffer is to be used by more than one thread then access to the buffer
should be controlled by appropriate synchronization.


<h2> Invocation chaining </h2>

<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained; for example, the sequence of statements

<blockquote><pre>
b.flip();
b.position(23);
b.limit(42);</pre></blockquote>

can be replaced by the single, more compact statement

<blockquote><pre>
b.flip().position(23).limit(42);</pre></blockquote>


@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      attribute 1795842 "SPLITERATOR_CHARACTERISTICS"
	class_attribute const_attribute package explicit_type "int"
	init_value "
        Spliterator.SIZED | Spliterator.SUBSIZED | Spliterator.ORDERED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The characteristics of Spliterators that traverse and split elements
maintained in Buffers.

"
      end

      attribute 1795970 "mark"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Invariants: mark <= position <= limit <= capacity
"
      end

      attribute 1796098 "position"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1796226 "limit"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1796354 "capacity"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1796482 "address"
	package explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used only by direct buffers
 NOTE: hoisted here for speed in JNI GetDirectBufferAddress
"
      end

      operation 7588866 "Buffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity,
 after checking invariants.
"
      end

      operation 7588994 "capacity"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this buffer's capacity.

@return  The capacity of this buffer
"
      end

      operation 7589122 "position"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this buffer's position.

@return  The position of this buffer
"
      end

      operation 7589250 "position"
	public return_type class_ref 973826 // Buffer
	nparams 1
	  param in name "newPosition" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this buffer's position.  If the mark is defined and larger than the
new position then it is discarded.

@param  newPosition
        The new position value; must be non-negative
        and no larger than the current limit

@return  This buffer

@throws  IllegalArgumentException
         If the preconditions on <tt>newPosition</tt> do not hold
"
      end

      operation 7589378 "limit"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this buffer's limit.

@return  The limit of this buffer
"
      end

      operation 7589506 "limit"
	public return_type class_ref 973826 // Buffer
	nparams 1
	  param in name "newLimit" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this buffer's limit.  If the position is larger than the new limit
then it is set to the new limit.  If the mark is defined and larger than
the new limit then it is discarded.

@param  newLimit
        The new limit value; must be non-negative
        and no larger than this buffer's capacity

@return  This buffer

@throws  IllegalArgumentException
         If the preconditions on <tt>newLimit</tt> do not hold
"
      end

      operation 7589634 "mark"
	public return_type class_ref 973826 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this buffer's mark at its position.

@return  This buffer
"
      end

      operation 7589762 "reset"
	public return_type class_ref 973826 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this buffer's position to the previously-marked position.

<p> Invoking this method neither changes nor discards the mark's
value. </p>

@return  This buffer

@throws  InvalidMarkException
         If the mark has not been set
"
      end

      operation 7589890 "clear"
	public return_type class_ref 973826 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears this buffer.  The position is set to zero, the limit is set to
the capacity, and the mark is discarded.

<p> Invoke this method before using a sequence of channel-read or
<i>put</i> operations to fill this buffer.  For example:

<blockquote><pre>
buf.clear();     // Prepare buffer for reading
in.read(buf);    // Read data</pre></blockquote>

<p> This method does not actually erase the data in the buffer, but it
is named as if it did because it will most often be used in situations
in which that might as well be the case. </p>

@return  This buffer
"
      end

      operation 7590018 "flip"
	public return_type class_ref 973826 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips this buffer.  The limit is set to the current position and then
the position is set to zero.  If the mark is defined then it is
discarded.

<p> After a sequence of channel-read or <i>put</i> operations, invoke
this method to prepare for a sequence of channel-write or relative
<i>get</i> operations.  For example:

<blockquote><pre>
buf.put(magic);    // Prepend header
in.read(buf);      // Read data into rest of buffer
buf.flip();        // Flip buffer
out.write(buf);    // Write header + data to channel</pre></blockquote>

<p> This method is often used in conjunction with the {@link
java.nio.ByteBuffer#compact compact} method when transferring data from
one place to another.  </p>

@return  This buffer
"
      end

      operation 7590146 "rewind"
	public return_type class_ref 973826 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rewinds this buffer.  The position is set to zero and the mark is
discarded.

<p> Invoke this method before a sequence of channel-write or <i>get</i>
operations, assuming that the limit has already been set
appropriately.  For example:

<blockquote><pre>
out.write(buf);    // Write remaining data
buf.rewind();      // Rewind buffer
buf.get(array);    // Copy data into array</pre></blockquote>

@return  This buffer
"
      end

      operation 7590274 "remaining"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements between the current position and the
limit.

@return  The number of elements remaining in this buffer
"
      end

      operation 7590402 "hasRemaining"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether there are any elements between the current position and
the limit.

@return  <tt>true</tt> if, and only if, there is at least one element
         remaining in this buffer
"
      end

      operation 7590530 "isReadOnly"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is read-only.

@return  <tt>true</tt> if, and only if, this buffer is read-only
"
      end

      operation 7590658 "hasArray"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is backed by an accessible
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only

@since 1.6
"
      end

      operation 7590786 "array"
	abstract public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method is intended to allow array-backed buffers to be
passed to native code more efficiently. Concrete subclasses
provide more strongly-typed return values for this method.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array

@since 1.6
"
      end

      operation 7590914 "arrayOffset"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array

@since 1.6
"
      end

      operation 7591042 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is
<a href=\"ByteBuffer.html#direct\"><i>direct</i></a>.

@return  <tt>true</tt> if, and only if, this buffer is direct

@since 1.6
"
      end

      operation 7591170 "nextGetIndex"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Package-private methods for bounds checking, etc. --

Checks the current position against the limit, throwing a {@link
BufferUnderflowException} if it is not smaller than the limit, and then
increments the position.

@return  The current position value, before it is incremented
"
      end

      operation 7591298 "nextGetIndex"
	package explicit_return_type "int"
	nparams 1
	  param in name "nb" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7591426 "nextPutIndex"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the current position against the limit, throwing a {@link
BufferOverflowException} if it is not smaller than the limit, and then
increments the position.

@return  The current position value, before it is incremented
"
      end

      operation 7591554 "nextPutIndex"
	package explicit_return_type "int"
	nparams 1
	  param in name "nb" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7591682 "checkIndex"
	package explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the given index against the limit, throwing an {@link
IndexOutOfBoundsException} if it is not smaller than the limit
or is smaller than zero.
"
      end

      operation 7591810 "checkIndex"
	package explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "nb" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7591938 "markValue"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7592066 "truncate"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7592194 "discardMark"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7592322 "checkBounds"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 973954 "BufferOverflowException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when a relative <i>put</i> operation reaches
the target buffer's limit.

@since 1.4
"
      classrelation 3270786 // <generalisation>
	relation 3270786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3270786 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1796610 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5484897634319144535L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7592450 "BufferOverflowException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class.
"
      end
    end

    class 974082 "BufferUnderflowException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when a relative <i>get</i> operation reaches
the source buffer's limit.

@since 1.4
"
      classrelation 3270914 // <generalisation>
	relation 3270914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3270914 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1796738 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1713313658691622206L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7592578 "BufferUnderflowException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class.
"
      end
    end

    class 974210 "ShortBuffer"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A short buffer.

<p> This class defines four categories of operations upon
short buffers:

<ul>

  <li><p> Absolute and relative {@link #get() <i>get</i>} and
  {@link #put(short) <i>put</i>} methods that read and write
  single shorts; </p></li>

  <li><p> Relative {@link #get(short[]) <i>bulk get</i>}
  methods that transfer contiguous sequences of shorts from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(short[]) <i>bulk put</i>}
  methods that transfer contiguous sequences of shorts from a
  short array or some other short
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact compacting}, {@link
  #duplicate duplicating}, and {@link #slice slicing}
  a short buffer.  </p></li>

</ul>

<p> Short buffers can be created either by {@link #allocate
<i>allocation</i>}, which allocates space for the buffer's








content, by {@link #wrap(short[]) <i>wrapping</i>} an existing
short array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#views\"><i>view</i></a> of an existing byte buffer.









































































































<p> Like a byte buffer, a short buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
short buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A short buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a short buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3276802 // <generalisation>
	relation 3276802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3276802 // <generalisation>
	  b parent class_ref 973826 // Buffer
      end

      classrelation 3276930 // <realization>
	relation 3276930 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3276930 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1800706 "hb"
	const_attribute package explicit_type "short"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 1800834 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1800962 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid only for heap buffers"
      end

      operation 7654402 "ShortBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "hb" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7654530 "ShortBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7654658 "allocate"
	class_operation public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new short buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  It will have a {@link #array backing array},
and its {@link #arrayOffset array offset} will be zero.

@param  capacity
        The new buffer's capacity, in shorts

@return  The new short buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7654786 "wrap"
	class_operation public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "array" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a short array into a buffer.

<p> The new buffer will be backed by the given short array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array backing array} will be the given array, and
its {@link #arrayOffset array offset} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new short buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7654914 "wrap"
	class_operation public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "array" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a short array into a buffer.

<p> The new buffer will be backed by the given short array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array backing array} will be the
given array, and its {@link #arrayOffset array offset>} will
be zero.  </p>

@param  array
        The array that will back this buffer

@return  The new short buffer
"
      end

      operation 7655042 "slice"
	abstract public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new short buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of shorts remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new short buffer
"
      end

      operation 7655170 "duplicate"
	abstract public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new short buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new short buffer
"
      end

      operation 7655298 "asReadOnlyBuffer"
	abstract public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only short buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only short buffer
"
      end

      operation 7655426 "get"
	abstract public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the short at this buffer's
current position, and then increments the position.

@return  The short at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit
"
      end

      operation 7655554 "put"
	abstract public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "s" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given short into this buffer at the current
position, and then increments the position. </p>

@param  s
        The short to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7655682 "get"
	abstract public explicit_return_type "short"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the short at the given
index.

@param  index
        The index from which the short will be read

@return  The short at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit
"
      end

      operation 7655810 "put"
	abstract public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "s" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given short into this buffer at the given
index. </p>

@param  index
        The index at which the short will be written

@param  s
        The short value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7655938 "get"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "dst" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers shorts from this buffer into the given
destination array.  If there are fewer shorts remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
shorts are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> shorts from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst[i] = src.get():
}</pre>

except that it first checks that there are sufficient shorts in
this buffer and it is potentially much more efficient.

@param  dst
        The array into which shorts are to be written

@param  offset
        The offset within the array of the first short to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of shorts to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> shorts
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7656066 "get"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "dst" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers shorts from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@param   dst
         The destination array

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> shorts
         remaining in this buffer
"
      end

      operation 7656194 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the shorts remaining in the given source
buffer into this buffer.  If there are more shorts remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no shorts are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> shorts from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The source buffer from which shorts are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining shorts in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7656322 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers shorts into this buffer from the given
source array.  If there are more shorts to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
shorts are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> shorts from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst.put(a[i]);
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The array from which shorts are to be read

@param  offset
        The offset within the array of the first short to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of shorts to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7656450 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
short array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@param   src
         The source array

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7656578 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible short
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only
"
      end

      operation 7656706 "array"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the short array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7656834 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7656962 "compact"
	abstract public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The shorts between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
short at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the short at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the short at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of shorts copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>


















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7657090 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this short buffer is direct.

@return  <tt>true</tt> if, and only if, this buffer is direct
"
      end

      operation 7657218 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.

@return  A summary string
"
      end

      operation 7657346 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a short buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer
"
      end

      operation 7657474 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two short buffers are equal if, and only if,

<ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.







  </p></li>

</ol>

<p> A short buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object
"
      end

      operation 7657602 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "short"
	  param in name "y" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7657730 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two short buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.








Pairs of {@code short} elements are compared as if by invoking
{@link Short#compare(short,short)}.


<p> A short buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
         is less than, equal to, or greater than the given buffer
"
      end

      operation 7657858 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "short"
	  param in name "y" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7657986 "order"
	abstract public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a short buffer created by allocation or by
wrapping an existing <tt>short</tt> array is the {@link
ByteOrder#nativeOrder native order} of the underlying
hardware.  The byte order of a short buffer created as a <a
href=\"ByteBuffer.html#views\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order
"
      end
    end

    class 974338 "IntBuffer"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An int buffer.

<p> This class defines four categories of operations upon
int buffers:

<ul>

  <li><p> Absolute and relative {@link #get() <i>get</i>} and
  {@link #put(int) <i>put</i>} methods that read and write
  single ints; </p></li>

  <li><p> Relative {@link #get(int[]) <i>bulk get</i>}
  methods that transfer contiguous sequences of ints from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(int[]) <i>bulk put</i>}
  methods that transfer contiguous sequences of ints from an
  int array or some other int
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact compacting}, {@link
  #duplicate duplicating}, and {@link #slice slicing}
  an int buffer.  </p></li>

</ul>

<p> Int buffers can be created either by {@link #allocate
<i>allocation</i>}, which allocates space for the buffer's








content, by {@link #wrap(int[]) <i>wrapping</i>} an existing
int array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#views\"><i>view</i></a> of an existing byte buffer.









































































































<p> Like a byte buffer, an int buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
int buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  An int buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
an int buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3274754 // <generalisation>
	relation 3274754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3274754 // <generalisation>
	  b parent class_ref 973826 // Buffer
      end

      classrelation 3274882 // <realization>
	relation 3274882 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3274882 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1799426 "hb"
	const_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 1799554 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1799682 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid only for heap buffers"
      end

      operation 7634178 "IntBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "hb" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7634306 "IntBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7634434 "allocate"
	class_operation public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new int buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  It will have a {@link #array backing array},
and its {@link #arrayOffset array offset} will be zero.

@param  capacity
        The new buffer's capacity, in ints

@return  The new int buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7634562 "wrap"
	class_operation public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps an int array into a buffer.

<p> The new buffer will be backed by the given int array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array backing array} will be the given array, and
its {@link #arrayOffset array offset} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new int buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7634690 "wrap"
	class_operation public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps an int array into a buffer.

<p> The new buffer will be backed by the given int array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array backing array} will be the
given array, and its {@link #arrayOffset array offset>} will
be zero.  </p>

@param  array
        The array that will back this buffer

@return  The new int buffer
"
      end

      operation 7634818 "slice"
	abstract public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new int buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of ints remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new int buffer
"
      end

      operation 7634946 "duplicate"
	abstract public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new int buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new int buffer
"
      end

      operation 7635074 "asReadOnlyBuffer"
	abstract public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only int buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only int buffer
"
      end

      operation 7635202 "get"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the int at this buffer's
current position, and then increments the position.

@return  The int at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit
"
      end

      operation 7635330 "put"
	abstract public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given int into this buffer at the current
position, and then increments the position. </p>

@param  i
        The int to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7635458 "get"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the int at the given
index.

@param  index
        The index from which the int will be read

@return  The int at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit
"
      end

      operation 7635586 "put"
	abstract public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given int into this buffer at the given
index. </p>

@param  index
        The index at which the int will be written

@param  i
        The int value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7635714 "get"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "dst" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers ints from this buffer into the given
destination array.  If there are fewer ints remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
ints are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> ints from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst[i] = src.get():
}</pre>

except that it first checks that there are sufficient ints in
this buffer and it is potentially much more efficient.

@param  dst
        The array into which ints are to be written

@param  offset
        The offset within the array of the first int to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of ints to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> ints
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7635842 "get"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "dst" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers ints from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@param   dst
         The destination array

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> ints
         remaining in this buffer
"
      end

      operation 7635970 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the ints remaining in the given source
buffer into this buffer.  If there are more ints remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no ints are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> ints from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The source buffer from which ints are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining ints in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7636098 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers ints into this buffer from the given
source array.  If there are more ints to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
ints are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> ints from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst.put(a[i]);
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The array from which ints are to be read

@param  offset
        The offset within the array of the first int to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of ints to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7636226 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
int array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@param   src
         The source array

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7636354 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible int
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only
"
      end

      operation 7636482 "array"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the int array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7636610 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7636738 "compact"
	abstract public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The ints between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
int at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the int at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the int at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of ints copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>


















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7636866 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this int buffer is direct.

@return  <tt>true</tt> if, and only if, this buffer is direct
"
      end

      operation 7636994 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.

@return  A summary string
"
      end

      operation 7637122 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a int buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer
"
      end

      operation 7637250 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two int buffers are equal if, and only if,

<ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.







  </p></li>

</ol>

<p> A int buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object
"
      end

      operation 7637378 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7637506 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two int buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.








Pairs of {@code int} elements are compared as if by invoking
{@link Integer#compare(int,int)}.


<p> A int buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
         is less than, equal to, or greater than the given buffer
"
      end

      operation 7637634 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7637762 "order"
	abstract public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of an int buffer created by allocation or by
wrapping an existing <tt>int</tt> array is the {@link
ByteOrder#nativeOrder native order} of the underlying
hardware.  The byte order of an int buffer created as a <a
href=\"ByteBuffer.html#views\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order
"
      end
    end

    class 974466 "LongBuffer"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A long buffer.

<p> This class defines four categories of operations upon
long buffers:

<ul>

  <li><p> Absolute and relative {@link #get() <i>get</i>} and
  {@link #put(long) <i>put</i>} methods that read and write
  single longs; </p></li>

  <li><p> Relative {@link #get(long[]) <i>bulk get</i>}
  methods that transfer contiguous sequences of longs from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(long[]) <i>bulk put</i>}
  methods that transfer contiguous sequences of longs from a
  long array or some other long
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact compacting}, {@link
  #duplicate duplicating}, and {@link #slice slicing}
  a long buffer.  </p></li>

</ul>

<p> Long buffers can be created either by {@link #allocate
<i>allocation</i>}, which allocates space for the buffer's








content, by {@link #wrap(long[]) <i>wrapping</i>} an existing
long array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#views\"><i>view</i></a> of an existing byte buffer.









































































































<p> Like a byte buffer, a long buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
long buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A long buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a long buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3275778 // <generalisation>
	relation 3275778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3275778 // <generalisation>
	  b parent class_ref 973826 // Buffer
      end

      classrelation 3275906 // <realization>
	relation 3275906 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3275906 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1800066 "hb"
	const_attribute package explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 1800194 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1800322 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid only for heap buffers"
      end

      operation 7644290 "LongBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "hb" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7644418 "LongBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7644546 "allocate"
	class_operation public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new long buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  It will have a {@link #array backing array},
and its {@link #arrayOffset array offset} will be zero.

@param  capacity
        The new buffer's capacity, in longs

@return  The new long buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7644674 "wrap"
	class_operation public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a long array into a buffer.

<p> The new buffer will be backed by the given long array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array backing array} will be the given array, and
its {@link #arrayOffset array offset} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new long buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7644802 "wrap"
	class_operation public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a long array into a buffer.

<p> The new buffer will be backed by the given long array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array backing array} will be the
given array, and its {@link #arrayOffset array offset>} will
be zero.  </p>

@param  array
        The array that will back this buffer

@return  The new long buffer
"
      end

      operation 7644930 "slice"
	abstract public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new long buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of longs remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new long buffer
"
      end

      operation 7645058 "duplicate"
	abstract public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new long buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new long buffer
"
      end

      operation 7645186 "asReadOnlyBuffer"
	abstract public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only long buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only long buffer
"
      end

      operation 7645314 "get"
	abstract public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the long at this buffer's
current position, and then increments the position.

@return  The long at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit
"
      end

      operation 7645442 "put"
	abstract public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "l" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given long into this buffer at the current
position, and then increments the position. </p>

@param  l
        The long to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7645570 "get"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the long at the given
index.

@param  index
        The index from which the long will be read

@return  The long at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit
"
      end

      operation 7645698 "put"
	abstract public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "l" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given long into this buffer at the given
index. </p>

@param  index
        The index at which the long will be written

@param  l
        The long value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7645826 "get"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "dst" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers longs from this buffer into the given
destination array.  If there are fewer longs remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
longs are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> longs from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst[i] = src.get():
}</pre>

except that it first checks that there are sufficient longs in
this buffer and it is potentially much more efficient.

@param  dst
        The array into which longs are to be written

@param  offset
        The offset within the array of the first long to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of longs to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> longs
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7645954 "get"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "dst" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers longs from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@param   dst
         The destination array

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> longs
         remaining in this buffer
"
      end

      operation 7646082 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the longs remaining in the given source
buffer into this buffer.  If there are more longs remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no longs are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> longs from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The source buffer from which longs are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining longs in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7646210 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers longs into this buffer from the given
source array.  If there are more longs to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
longs are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> longs from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst.put(a[i]);
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The array from which longs are to be read

@param  offset
        The offset within the array of the first long to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of longs to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7646338 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
long array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@param   src
         The source array

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7646466 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible long
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only
"
      end

      operation 7646594 "array"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the long array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7646722 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7646850 "compact"
	abstract public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The longs between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
long at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the long at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the long at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of longs copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>


















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7646978 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this long buffer is direct.

@return  <tt>true</tt> if, and only if, this buffer is direct
"
      end

      operation 7647106 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.

@return  A summary string
"
      end

      operation 7647234 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a long buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer
"
      end

      operation 7647362 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two long buffers are equal if, and only if,

<ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.







  </p></li>

</ol>

<p> A long buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object
"
      end

      operation 7647490 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7647618 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two long buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.








Pairs of {@code long} elements are compared as if by invoking
{@link Long#compare(long,long)}.


<p> A long buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
         is less than, equal to, or greater than the given buffer
"
      end

      operation 7647746 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7647874 "order"
	abstract public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a long buffer created by allocation or by
wrapping an existing <tt>long</tt> array is the {@link
ByteOrder#nativeOrder native order} of the underlying
hardware.  The byte order of a long buffer created as a <a
href=\"ByteBuffer.html#views\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order
"
      end
    end

    class 974594 "FloatBuffer"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A float buffer.

<p> This class defines four categories of operations upon
float buffers:

<ul>

  <li><p> Absolute and relative {@link #get() <i>get</i>} and
  {@link #put(float) <i>put</i>} methods that read and write
  single floats; </p></li>

  <li><p> Relative {@link #get(float[]) <i>bulk get</i>}
  methods that transfer contiguous sequences of floats from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(float[]) <i>bulk put</i>}
  methods that transfer contiguous sequences of floats from a
  float array or some other float
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact compacting}, {@link
  #duplicate duplicating}, and {@link #slice slicing}
  a float buffer.  </p></li>

</ul>

<p> Float buffers can be created either by {@link #allocate
<i>allocation</i>}, which allocates space for the buffer's








content, by {@link #wrap(float[]) <i>wrapping</i>} an existing
float array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#views\"><i>view</i></a> of an existing byte buffer.









































































































<p> Like a byte buffer, a float buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
float buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A float buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a float buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3273730 // <generalisation>
	relation 3273730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3273730 // <generalisation>
	  b parent class_ref 973826 // Buffer
      end

      classrelation 3273858 // <realization>
	relation 3273858 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3273858 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1798786 "hb"
	const_attribute package explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 1798914 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1799042 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid only for heap buffers"
      end

      operation 7624066 "FloatBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "hb" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7624194 "FloatBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7624322 "allocate"
	class_operation public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new float buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  It will have a {@link #array backing array},
and its {@link #arrayOffset array offset} will be zero.

@param  capacity
        The new buffer's capacity, in floats

@return  The new float buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7624450 "wrap"
	class_operation public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "array" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a float array into a buffer.

<p> The new buffer will be backed by the given float array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array backing array} will be the given array, and
its {@link #arrayOffset array offset} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new float buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7624578 "wrap"
	class_operation public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "array" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a float array into a buffer.

<p> The new buffer will be backed by the given float array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array backing array} will be the
given array, and its {@link #arrayOffset array offset>} will
be zero.  </p>

@param  array
        The array that will back this buffer

@return  The new float buffer
"
      end

      operation 7624706 "slice"
	abstract public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new float buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of floats remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new float buffer
"
      end

      operation 7624834 "duplicate"
	abstract public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new float buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new float buffer
"
      end

      operation 7624962 "asReadOnlyBuffer"
	abstract public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only float buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only float buffer
"
      end

      operation 7625090 "get"
	abstract public explicit_return_type "float"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the float at this buffer's
current position, and then increments the position.

@return  The float at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit
"
      end

      operation 7625218 "put"
	abstract public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "f" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given float into this buffer at the current
position, and then increments the position. </p>

@param  f
        The float to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7625346 "get"
	abstract public explicit_return_type "float"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the float at the given
index.

@param  index
        The index from which the float will be read

@return  The float at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit
"
      end

      operation 7625474 "put"
	abstract public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "f" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given float into this buffer at the given
index. </p>

@param  index
        The index at which the float will be written

@param  f
        The float value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7625602 "get"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "dst" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers floats from this buffer into the given
destination array.  If there are fewer floats remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
floats are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> floats from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst[i] = src.get():
}</pre>

except that it first checks that there are sufficient floats in
this buffer and it is potentially much more efficient.

@param  dst
        The array into which floats are to be written

@param  offset
        The offset within the array of the first float to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of floats to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> floats
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7625730 "get"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "dst" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers floats from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@param   dst
         The destination array

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> floats
         remaining in this buffer
"
      end

      operation 7625858 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the floats remaining in the given source
buffer into this buffer.  If there are more floats remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no floats are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> floats from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The source buffer from which floats are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining floats in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7625986 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers floats into this buffer from the given
source array.  If there are more floats to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
floats are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> floats from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst.put(a[i]);
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The array from which floats are to be read

@param  offset
        The offset within the array of the first float to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of floats to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7626114 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
float array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@param   src
         The source array

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7626242 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible float
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only
"
      end

      operation 7626370 "array"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the float array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7626498 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7626626 "compact"
	abstract public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The floats between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
float at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the float at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the float at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of floats copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>


















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7626754 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this float buffer is direct.

@return  <tt>true</tt> if, and only if, this buffer is direct
"
      end

      operation 7626882 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.

@return  A summary string
"
      end

      operation 7627010 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a float buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer
"
      end

      operation 7627138 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two float buffers are equal if, and only if,

<ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.

  This method considers two float elements {@code a} and {@code b}
  to be equal if
  {@code (a == b) || (Float.isNaN(a) && Float.isNaN(b))}.
  The values {@code -0.0} and {@code +0.0} are considered to be
  equal, unlike {@link Float#equals(Object)}.

  </p></li>

</ol>

<p> A float buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object
"
      end

      operation 7627266 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7627394 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two float buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

Pairs of {@code float} elements are compared as if by invoking
{@link Float#compare(float,float)}, except that
{@code -0.0} and {@code 0.0} are considered to be equal.
{@code Float.NaN} is considered by this method to be equal
to itself and greater than all other {@code float} values
(including {@code Float.POSITIVE_INFINITY}).





<p> A float buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
         is less than, equal to, or greater than the given buffer
"
      end

      operation 7627522 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7627650 "order"
	abstract public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a float buffer created by allocation or by
wrapping an existing <tt>float</tt> array is the {@link
ByteOrder#nativeOrder native order} of the underlying
hardware.  The byte order of a float buffer created as a <a
href=\"ByteBuffer.html#views\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order
"
      end
    end

    class 974722 "DoubleBuffer"
      abstract visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A double buffer.

<p> This class defines four categories of operations upon
double buffers:

<ul>

  <li><p> Absolute and relative {@link #get() <i>get</i>} and
  {@link #put(double) <i>put</i>} methods that read and write
  single doubles; </p></li>

  <li><p> Relative {@link #get(double[]) <i>bulk get</i>}
  methods that transfer contiguous sequences of doubles from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(double[]) <i>bulk put</i>}
  methods that transfer contiguous sequences of doubles from a
  double array or some other double
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact compacting}, {@link
  #duplicate duplicating}, and {@link #slice slicing}
  a double buffer.  </p></li>

</ul>

<p> Double buffers can be created either by {@link #allocate
<i>allocation</i>}, which allocates space for the buffer's








content, by {@link #wrap(double[]) <i>wrapping</i>} an existing
double array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#views\"><i>view</i></a> of an existing byte buffer.









































































































<p> Like a byte buffer, a double buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
double buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A double buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a double buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3272706 // <generalisation>
	relation 3272706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3272706 // <generalisation>
	  b parent class_ref 973826 // Buffer
      end

      classrelation 3272834 // <realization>
	relation 3272834 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3272834 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1798146 "hb"
	const_attribute package explicit_type "double"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 1798274 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1798402 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valid only for heap buffers"
      end

      operation 7613954 "DoubleBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "hb" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7614082 "DoubleBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7614210 "allocate"
	class_operation public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new double buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, its mark will be undefined, and each of its elements will be
initialized to zero.  It will have a {@link #array backing array},
and its {@link #arrayOffset array offset} will be zero.

@param  capacity
        The new buffer's capacity, in doubles

@return  The new double buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer
"
      end

      operation 7614338 "wrap"
	class_operation public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a double array into a buffer.

<p> The new buffer will be backed by the given double array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array backing array} will be the given array, and
its {@link #arrayOffset array offset} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new double buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7614466 "wrap"
	class_operation public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a double array into a buffer.

<p> The new buffer will be backed by the given double array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array backing array} will be the
given array, and its {@link #arrayOffset array offset>} will
be zero.  </p>

@param  array
        The array that will back this buffer

@return  The new double buffer
"
      end

      operation 7614594 "slice"
	abstract public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new double buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of doubles remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new double buffer
"
      end

      operation 7614722 "duplicate"
	abstract public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new double buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new double buffer
"
      end

      operation 7614850 "asReadOnlyBuffer"
	abstract public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only double buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only double buffer
"
      end

      operation 7614978 "get"
	abstract public explicit_return_type "double"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the double at this buffer's
current position, and then increments the position.

@return  The double at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit
"
      end

      operation 7615106 "put"
	abstract public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "d" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given double into this buffer at the current
position, and then increments the position. </p>

@param  d
        The double to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7615234 "get"
	abstract public explicit_return_type "double"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the double at the given
index.

@param  index
        The index from which the double will be read

@return  The double at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit
"
      end

      operation 7615362 "put"
	abstract public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "d" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given double into this buffer at the given
index. </p>

@param  index
        The index at which the double will be written

@param  d
        The double value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7615490 "get"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "dst" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers doubles from this buffer into the given
destination array.  If there are fewer doubles remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
doubles are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> doubles from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst[i] = src.get():
}</pre>

except that it first checks that there are sufficient doubles in
this buffer and it is potentially much more efficient.

@param  dst
        The array into which doubles are to be written

@param  offset
        The offset within the array of the first double to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of doubles to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> doubles
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold
"
      end

      operation 7615618 "get"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "dst" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers doubles from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@param   dst
         The destination array

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> doubles
         remaining in this buffer
"
      end

      operation 7615746 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the doubles remaining in the given source
buffer into this buffer.  If there are more doubles remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no doubles are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> doubles from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The source buffer from which doubles are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining doubles in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7615874 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers doubles into this buffer from the given
source array.  If there are more doubles to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
doubles are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> doubles from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>{@code
    for (int i = off; i < off + len; i++)
        dst.put(a[i]);
}</pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient.

@param  src
        The array from which doubles are to be read

@param  offset
        The offset within the array of the first double to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of doubles to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7616002 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
double array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@param   src
         The source array

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7616130 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible double
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only
"
      end

      operation 7616258 "array"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the double array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7616386 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array
"
      end

      operation 7616514 "compact"
	abstract public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The doubles between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
double at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the double at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the double at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of doubles copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>


















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only
"
      end

      operation 7616642 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this double buffer is direct.

@return  <tt>true</tt> if, and only if, this buffer is direct
"
      end

      operation 7616770 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.

@return  A summary string
"
      end

      operation 7616898 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a double buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer
"
      end

      operation 7617026 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two double buffers are equal if, and only if,

<ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.

  This method considers two double elements {@code a} and {@code b}
  to be equal if
  {@code (a == b) || (Double.isNaN(a) && Double.isNaN(b))}.
  The values {@code -0.0} and {@code +0.0} are considered to be
  equal, unlike {@link Double#equals(Object)}.

  </p></li>

</ol>

<p> A double buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object
"
      end

      operation 7617154 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7617282 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two double buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

Pairs of {@code double} elements are compared as if by invoking
{@link Double#compare(double,double)}, except that
{@code -0.0} and {@code 0.0} are considered to be equal.
{@code Double.NaN} is considered by this method to be equal
to itself and greater than all other {@code double} values
(including {@code Double.POSITIVE_INFINITY}).





<p> A double buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
         is less than, equal to, or greater than the given buffer
"
      end

      operation 7617410 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7617538 "order"
	abstract public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a double buffer created by allocation or by
wrapping an existing <tt>double</tt> array is the {@link
ByteOrder#nativeOrder native order} of the underlying
hardware.  The byte order of a double buffer created as a <a
href=\"ByteBuffer.html#views\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order
"
      end
    end

    class 974850 "ByteBufferAsCharBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3271938 // <generalisation>
	relation 3271938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3271938 // <generalisation>
	  b parent class_ref 548482 // CharBuffer
      end

      classrelation 3272066 // bb (<unidirectional association>)
	relation 3272066 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3272066 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1797890 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7606274 "ByteBufferAsCharBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7606402 "ByteBufferAsCharBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7606530 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7606658 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7606786 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7606914 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607042 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607170 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607298 "getUnchecked"
	package explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607426 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607554 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607682 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607810 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607938 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7608066 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7608194 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7608322 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 974978 "ByteBufferAsCharBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3272194 // <generalisation>
	relation 3272194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3272194 // <generalisation>
	  b parent class_ref 548482 // CharBuffer
      end

      classrelation 3272322 // bb (<unidirectional association>)
	relation 3272322 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3272322 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1798018 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7608450 "ByteBufferAsCharBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7608578 "ByteBufferAsCharBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7608706 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7608834 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7608962 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609090 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609218 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609346 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609474 "getUnchecked"
	package explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609602 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609730 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609858 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609986 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7610114 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7610242 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7610370 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7610498 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 975106 "ByteBufferAsCharBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3272450 // <generalisation>
	relation 3272450 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3272450 // <generalisation>
	  b parent class_ref 974850 // ByteBufferAsCharBufferB
      end

      operation 7610626 "ByteBufferAsCharBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7610754 "ByteBufferAsCharBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7610882 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611010 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611138 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611266 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611394 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611522 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611650 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611778 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611906 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612034 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7612162 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 975234 "ByteBufferAsCharBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3272578 // <generalisation>
	relation 3272578 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3272578 // <generalisation>
	  b parent class_ref 974978 // ByteBufferAsCharBufferL
      end

      operation 7612290 "ByteBufferAsCharBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7612418 "ByteBufferAsCharBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612546 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612674 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612802 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612930 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7613058 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7613186 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7613314 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7613442 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7613570 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7613698 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7613826 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 975362 "ByteBufferAsDoubleBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3272962 // <generalisation>
	relation 3272962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3272962 // <generalisation>
	  b parent class_ref 974722 // DoubleBuffer
      end

      classrelation 3273090 // bb (<unidirectional association>)
	relation 3273090 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3273090 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1798530 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7617666 "ByteBufferAsDoubleBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7617794 "ByteBufferAsDoubleBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7617922 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618050 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618178 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618306 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618434 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618562 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618690 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618818 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7618946 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7619074 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7619202 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7619330 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 975490 "ByteBufferAsDoubleBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3273218 // <generalisation>
	relation 3273218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3273218 // <generalisation>
	  b parent class_ref 974722 // DoubleBuffer
      end

      classrelation 3273346 // bb (<unidirectional association>)
	relation 3273346 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3273346 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1798658 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7619458 "ByteBufferAsDoubleBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7619586 "ByteBufferAsDoubleBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7619714 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7619842 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7619970 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620098 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620226 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620354 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620482 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620610 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620738 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620866 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7620994 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7621122 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 975618 "ByteBufferAsDoubleBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3273474 // <generalisation>
	relation 3273474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3273474 // <generalisation>
	  b parent class_ref 975362 // ByteBufferAsDoubleBufferB
      end

      operation 7621250 "ByteBufferAsDoubleBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7621378 "ByteBufferAsDoubleBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7621506 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7621634 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7621762 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7621890 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7622018 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7622146 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7622274 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7622402 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7622530 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 975746 "ByteBufferAsDoubleBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3273602 // <generalisation>
	relation 3273602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3273602 // <generalisation>
	  b parent class_ref 975490 // ByteBufferAsDoubleBufferL
      end

      operation 7622658 "ByteBufferAsDoubleBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7622786 "ByteBufferAsDoubleBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7622914 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623042 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623170 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623298 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623426 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623554 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623682 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623810 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7623938 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 975874 "ByteBufferAsFloatBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3273986 // <generalisation>
	relation 3273986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3273986 // <generalisation>
	  b parent class_ref 974594 // FloatBuffer
      end

      classrelation 3274114 // bb (<unidirectional association>)
	relation 3274114 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3274114 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1799170 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7627778 "ByteBufferAsFloatBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7627906 "ByteBufferAsFloatBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628034 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628162 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628290 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628418 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628546 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628674 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628802 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7628930 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7629058 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7629186 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7629314 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7629442 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976002 "ByteBufferAsFloatBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3274242 // <generalisation>
	relation 3274242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3274242 // <generalisation>
	  b parent class_ref 974594 // FloatBuffer
      end

      classrelation 3274370 // bb (<unidirectional association>)
	relation 3274370 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3274370 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1799298 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7629570 "ByteBufferAsFloatBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7629698 "ByteBufferAsFloatBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7629826 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7629954 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630082 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630210 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630338 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630466 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630594 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630722 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630850 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7630978 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7631106 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7631234 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976130 "ByteBufferAsFloatBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3274498 // <generalisation>
	relation 3274498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3274498 // <generalisation>
	  b parent class_ref 975874 // ByteBufferAsFloatBufferB
      end

      operation 7631362 "ByteBufferAsFloatBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7631490 "ByteBufferAsFloatBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7631618 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7631746 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7631874 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7632002 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7632130 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7632258 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7632386 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7632514 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7632642 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976258 "ByteBufferAsFloatBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3274626 // <generalisation>
	relation 3274626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3274626 // <generalisation>
	  b parent class_ref 976002 // ByteBufferAsFloatBufferL
      end

      operation 7632770 "ByteBufferAsFloatBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7632898 "ByteBufferAsFloatBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633026 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633154 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633282 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633410 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633538 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633666 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633794 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7633922 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7634050 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976386 "ByteBufferAsIntBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3275010 // <generalisation>
	relation 3275010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3275010 // <generalisation>
	  b parent class_ref 974338 // IntBuffer
      end

      classrelation 3275138 // bb (<unidirectional association>)
	relation 3275138 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3275138 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1799810 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7637890 "ByteBufferAsIntBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638018 "ByteBufferAsIntBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638146 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638274 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638402 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638530 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638658 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638786 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7638914 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7639042 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7639170 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7639298 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7639426 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7639554 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976514 "ByteBufferAsIntBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3275266 // <generalisation>
	relation 3275266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3275266 // <generalisation>
	  b parent class_ref 974338 // IntBuffer
      end

      classrelation 3275394 // bb (<unidirectional association>)
	relation 3275394 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3275394 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1799938 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7639682 "ByteBufferAsIntBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7639810 "ByteBufferAsIntBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7639938 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640066 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640194 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640322 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640450 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640578 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640706 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640834 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7640962 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7641090 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7641218 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7641346 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976642 "ByteBufferAsIntBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3275522 // <generalisation>
	relation 3275522 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3275522 // <generalisation>
	  b parent class_ref 976386 // ByteBufferAsIntBufferB
      end

      operation 7641474 "ByteBufferAsIntBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7641602 "ByteBufferAsIntBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7641730 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7641858 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7641986 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7642114 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7642242 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7642370 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7642498 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7642626 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7642754 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976770 "ByteBufferAsIntBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3275650 // <generalisation>
	relation 3275650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3275650 // <generalisation>
	  b parent class_ref 976514 // ByteBufferAsIntBufferL
      end

      operation 7642882 "ByteBufferAsIntBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7643010 "ByteBufferAsIntBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7643138 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7643266 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7643394 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7643522 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7643650 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7643778 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7643906 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7644034 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7644162 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 976898 "ByteBufferAsLongBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3276034 // <generalisation>
	relation 3276034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3276034 // <generalisation>
	  b parent class_ref 974466 // LongBuffer
      end

      classrelation 3276162 // bb (<unidirectional association>)
	relation 3276162 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3276162 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1800450 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7648002 "ByteBufferAsLongBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7648130 "ByteBufferAsLongBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7648258 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7648386 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7648514 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7648642 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7648770 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7648898 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7649026 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7649154 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7649282 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7649410 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7649538 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7649666 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977026 "ByteBufferAsLongBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3276290 // <generalisation>
	relation 3276290 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3276290 // <generalisation>
	  b parent class_ref 974466 // LongBuffer
      end

      classrelation 3276418 // bb (<unidirectional association>)
	relation 3276418 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3276418 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1800578 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7649794 "ByteBufferAsLongBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7649922 "ByteBufferAsLongBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650050 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650178 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650306 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650434 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650562 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650690 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650818 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7650946 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7651074 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7651202 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7651330 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7651458 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977154 "ByteBufferAsLongBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3276546 // <generalisation>
	relation 3276546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3276546 // <generalisation>
	  b parent class_ref 976898 // ByteBufferAsLongBufferB
      end

      operation 7651586 "ByteBufferAsLongBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7651714 "ByteBufferAsLongBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7651842 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7651970 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7652098 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7652226 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7652354 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7652482 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7652610 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7652738 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7652866 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977282 "ByteBufferAsLongBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3276674 // <generalisation>
	relation 3276674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3276674 // <generalisation>
	  b parent class_ref 977026 // ByteBufferAsLongBufferL
      end

      operation 7652994 "ByteBufferAsLongBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7653122 "ByteBufferAsLongBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7653250 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7653378 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7653506 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7653634 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7653762 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7653890 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7654018 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7654146 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7654274 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977410 "ByteBufferAsShortBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3277058 // <generalisation>
	relation 3277058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3277058 // <generalisation>
	  b parent class_ref 974210 // ShortBuffer
      end

      classrelation 3277186 // bb (<unidirectional association>)
	relation 3277186 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3277186 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1801090 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7658114 "ByteBufferAsShortBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7658242 "ByteBufferAsShortBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7658370 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7658498 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7658626 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7658754 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7658882 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7659010 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7659138 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7659266 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7659394 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7659522 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7659650 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7659778 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977538 "ByteBufferAsShortBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3277314 // <generalisation>
	relation 3277314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3277314 // <generalisation>
	  b parent class_ref 974210 // ShortBuffer
      end

      classrelation 3277442 // bb (<unidirectional association>)
	relation 3277442 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3277442 // bb (<unidirectional association>)
	  b parent class_ref 149890 // ByteBuffer
      end

      attribute 1801218 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7659906 "ByteBufferAsShortBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660034 "ByteBufferAsShortBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660162 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660290 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660418 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660546 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660674 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660802 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7660930 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7661058 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7661186 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7661314 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7661442 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7661570 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977666 "ByteBufferAsShortBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3277570 // <generalisation>
	relation 3277570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3277570 // <generalisation>
	  b parent class_ref 977410 // ByteBufferAsShortBufferB
      end

      operation 7661698 "ByteBufferAsShortBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7661826 "ByteBufferAsShortBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7661954 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662082 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662210 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662338 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662466 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662594 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662722 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662850 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7662978 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977794 "ByteBufferAsShortBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3277698 // <generalisation>
	relation 3277698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3277698 // <generalisation>
	  b parent class_ref 977538 // ByteBufferAsShortBufferL
      end

      operation 7663106 "ByteBufferAsShortBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7663234 "ByteBufferAsShortBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 149890 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7663362 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7663490 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7663618 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7663746 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7663874 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7664002 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7664130 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7664258 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7664386 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 977922 "CharBufferSpliterator"
      visibility package 
      nactuals 1
      actual class class_ref 184450 // Spliterator
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Spliterator.OfInt for sources that traverse and split elements
maintained in a CharBuffer.

@implNote
The implementation is based on the code for the Array-based spliterators.
"
      classrelation 3278210 // <realization>
	relation 3278210 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3278210 // <realization>
	  b parent class_ref 376578 // OfInt
      end

      classrelation 3278338 // buffer (<unidirectional association>)
	relation 3278338 --->
	  a role_name "buffer" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3278338 // buffer (<unidirectional association>)
	  b parent class_ref 548482 // CharBuffer
      end

      attribute 1801346 "index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " current index, modified on advance/split"
      end

      attribute 1801474 "limit"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7664898 "CharBufferSpliterator"
	package explicit_return_type ""
	nparams 1
	  param inout name "buffer" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7665026 "CharBufferSpliterator"
	package explicit_return_type ""
	nparams 3
	  param inout name "buffer" type class_ref 548482 // CharBuffer
	  param in name "origin" explicit_type "int"
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7665154 "trySplit"
	public return_type class_ref 376578 // OfInt
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7665282 "forEachRemaining"
	public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 376706 // IntConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7665410 "tryAdvance"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "action" type class_ref 376706 // IntConsumer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7665538 "estimateSize"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7665666 "characteristics"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 978050 "DirectByteBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3278722 // <generalisation>
	relation 3278722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3278722 // <generalisation>
	  b parent class_ref 978178 // MappedByteBuffer
      end

      attribute 1801730 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1801858 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(byte[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1801986 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3278978 // att (<unidirectional association>)
	relation 3278978 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3278978 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7667330 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 978434 "Deallocator"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3279106 // <realization>
	  relation 3279106 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3279106 // <realization>
	    b parent class_ref 128770 // Runnable
	end

	attribute 1802114 "unsafe"
	  class_attribute private explicit_type "Unsafe"
	  init_value " Unsafe.getUnsafe()"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1802242 "address"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1802370 "size"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1802498 "capacity"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7667458 "Deallocator"
	  private explicit_return_type ""
	  nparams 3
	    param in name "address" explicit_type "long"
	    param in name "size" explicit_type "long"
	    param in name "capacity" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7667586 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 1802626 "cleaner"
	const_attribute private explicit_type "Cleaner"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7667714 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7667842 "DirectByteBuffer"
	package explicit_return_type ""
	nparams 1
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Primary constructor
"
      end

      operation 7667970 "DirectByteBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "addr" explicit_type "long"
	  param in name "cap" explicit_type "int"
	  param inout name "ob" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked to construct a direct ByteBuffer referring to the block of
 memory. A given arbitrary object may also be attached to the buffer.
"
      end

      operation 7668098 "DirectByteBuffer"
	private explicit_return_type ""
	nparams 2
	  param in name "addr" explicit_type "long"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked only by JNI: NewDirectByteBuffer(void*, long)
"
      end

      operation 7668226 "DirectByteBuffer"
	protected explicit_return_type ""
	nparams 4
	  param in name "cap" explicit_type "int"
	  param in name "addr" explicit_type "long"
	  param inout name "fd" type class_ref 923778 // FileDescriptor
	  param inout name "unmapper" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For memory-mapped buffers -- invoked by FileChannelImpl via reflection
"
      end

      operation 7668354 "DirectByteBuffer"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7668482 "slice"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7668610 "duplicate"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7668738 "asReadOnlyBuffer"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7668866 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7668994 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7669122 "get"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7669250 "get"
	public explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7669378 "get"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "dst" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7669506 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7669634 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7669762 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7669890 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "src" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670018 "compact"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670146 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670274 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670402 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670530 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670658 "getChar"
	private explicit_return_type "char"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670786 "getChar"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7670914 "getChar"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671042 "putChar"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671170 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671298 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671426 "asCharBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671554 "getShort"
	private explicit_return_type "short"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671682 "getShort"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671810 "getShort"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7671938 "putShort"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672066 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672194 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672322 "asShortBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672450 "getInt"
	private explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672578 "getInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672706 "getInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672834 "putInt"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7672962 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673090 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673218 "asIntBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673346 "getLong"
	private explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673474 "getLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673602 "getLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673730 "putLong"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673858 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7673986 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7674114 "asLongBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7674242 "getFloat"
	private explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7674370 "getFloat"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7674498 "getFloat"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7674626 "putFloat"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7674754 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7674882 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675010 "asFloatBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675138 "getDouble"
	private explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675266 "getDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675394 "getDouble"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675522 "putDouble"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675650 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675778 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7675906 "asDoubleBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 978178 "MappedByteBuffer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A direct byte buffer whose content is a memory-mapped region of a file.

<p> Mapped byte buffers are created via the {@link
java.nio.channels.FileChannel#map FileChannel.map} method.  This class
extends the {@link ByteBuffer} class with operations that are specific to
memory-mapped file regions.

<p> A mapped byte buffer and the file mapping that it represents remain
valid until the buffer itself is garbage-collected.

<p> The content of a mapped byte buffer can change at any time, for example
if the content of the corresponding region of the mapped file is changed by
this program or another.  Whether or not such changes occur, and when they
occur, is operating-system dependent and therefore unspecified.

<a name=\"inaccess\"></a><p> All or part of a mapped byte buffer may become
inaccessible at any time, for example if the mapped file is truncated.  An
attempt to access an inaccessible region of a mapped byte buffer will not
change the buffer's content and will cause an unspecified exception to be
thrown either at the time of the access or at some later time.  It is
therefore strongly recommended that appropriate precautions be taken to
avoid the manipulation of a mapped file by this program, or by a
concurrently running program, except to read or write the file's content.

<p> Mapped byte buffers otherwise behave no differently than ordinary direct
byte buffers. </p>


@author Mark Reinhold
@author JSR-51 Expert Group
@since 1.4
"
      classrelation 3278466 // <generalisation>
	relation 3278466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3278466 // <generalisation>
	  b parent class_ref 149890 // ByteBuffer
      end

      classrelation 3278594 // fd (<unidirectional association>)
	relation 3278594 --->
	  a role_name "fd" const_relation private
	    comment " This is a little bit backwards: By rights MappedByteBuffer should be a
 subclass of DirectByteBuffer, but to keep the spec clear and simple, and
 for optimization purposes, it's easier to do it the other way around.
 This works because DirectByteBuffer is a package-private class.
 For mapped buffers, a FileDescriptor that may be used for mapping
 operations if valid; null if the buffer is not mapped.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3278594 // fd (<unidirectional association>)
	  b parent class_ref 923778 // FileDescriptor
      end

      operation 7665794 "MappedByteBuffer"
	package explicit_return_type ""
	nparams 5
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "fd" type class_ref 923778 // FileDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This should only be invoked by the DirectByteBuffer constructors
"
      end

      operation 7665922 "MappedByteBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7666050 "checkMapped"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7666178 "mappingOffset"
	private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the distance (in bytes) of the buffer from the page aligned address
 of the mapping. Computed each time to avoid storing in every direct buffer."
      end

      operation 7666306 "mappingAddress"
	private explicit_return_type "long"
	nparams 1
	  param in name "mappingOffset" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7666434 "mappingLength"
	private explicit_return_type "long"
	nparams 1
	  param in name "mappingOffset" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7666562 "isLoaded"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer's content is resident in physical
memory.

<p> A return value of <tt>true</tt> implies that it is highly likely
that all of the data in this buffer is resident in physical memory and
may therefore be accessed without incurring any virtual-memory page
faults or I/O operations.  A return value of <tt>false</tt> does not
necessarily imply that the buffer's content is not resident in physical
memory.

<p> The returned value is a hint, rather than a guarantee, because the
underlying operating system may have paged out some of the buffer's data
by the time that an invocation of this method returns.  </p>

@return  <tt>true</tt> if it is likely that this buffer's content
         is resident in physical memory
"
      end

      attribute 1801602 "unused"
	class_attribute private explicit_type "byte"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " not used, but a potential target for a store, see load() for details.
"
      end

      operation 7666690 "load"
	public return_type class_ref 978178 // MappedByteBuffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads this buffer's content into physical memory.

<p> This method makes a best effort to ensure that, when it returns,
this buffer's content is resident in physical memory.  Invoking this
method may cause some number of page faults and I/O operations to
occur. </p>

@return  This buffer
"
      end

      operation 7666818 "force"
	public return_type class_ref 978178 // MappedByteBuffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces any changes made to this buffer's content to be written to the
storage device containing the mapped file.

<p> If the file mapped into this buffer resides on a local storage
device then when this method returns it is guaranteed that all changes
made to the buffer since it was created, or since this method was last
invoked, will have been written to that device.

<p> If the file does not reside on a local device then no such guarantee
is made.

<p> If this buffer was not mapped in read/write mode ({@link
java.nio.channels.FileChannel.MapMode#READ_WRITE}) then invoking this
method has no effect. </p>

@return  This buffer
"
      end

      operation 7666946 "isLoaded0"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "address" explicit_type "long"
	  param in name "length" explicit_type "long"
	  param in name "pageCount" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end

      operation 7667074 "load0"
	private explicit_return_type "void"
	nparams 2
	  param in name "address" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 7667202 "force0"
	private explicit_return_type "void"
	nparams 3
	  param inout name "fd" type class_ref 923778 // FileDescriptor
	  param in name "address" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	
      end
    end

    class 978562 "DirectByteBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3279234 // <generalisation>
	relation 3279234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3279234 // <generalisation>
	  b parent class_ref 978050 // DirectByteBuffer
      end

      operation 7676034 "DirectByteBufferR"
	package explicit_return_type ""
	nparams 1
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Primary constructor
"
      end

      operation 7676162 "DirectByteBufferR"
	protected explicit_return_type ""
	nparams 4
	  param in name "cap" explicit_type "int"
	  param in name "addr" explicit_type "long"
	  param inout name "fd" type class_ref 923778 // FileDescriptor
	  param inout name "unmapper" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For memory-mapped buffers -- invoked by FileChannelImpl via reflection
"
      end

      operation 7676290 "DirectByteBufferR"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7676418 "slice"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7676546 "duplicate"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7676674 "asReadOnlyBuffer"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7676802 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7676930 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677058 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677186 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "src" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677314 "compact"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677442 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677570 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677698 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677826 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7677954 "putChar"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678082 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678210 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678338 "asCharBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678466 "putShort"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678594 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678722 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678850 "asShortBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7678978 "putInt"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7679106 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7679234 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7679362 "asIntBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7679490 "putLong"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7679618 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7679746 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7679874 "asLongBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680002 "putFloat"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680130 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680258 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680386 "asFloatBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680514 "putDouble"
	private return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680642 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680770 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7680898 "asDoubleBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 978690 "DirectCharBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3279874 // <generalisation>
	relation 3279874 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3279874 // <generalisation>
	  b parent class_ref 978818 // DirectCharBufferS
      end

      operation 7683842 "DirectCharBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7683970 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684098 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684226 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684354 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684482 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684610 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684738 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684866 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7684994 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7685122 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7685250 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7685378 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7685506 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 978818 "DirectCharBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3279490 // <generalisation>
	relation 3279490 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3279490 // <generalisation>
	  b parent class_ref 548482 // CharBuffer
      end

      attribute 1802754 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1802882 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(char[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1803010 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3279746 // att (<unidirectional association>)
	relation 3279746 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3279746 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7681026 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7681154 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7681282 "DirectCharBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7681410 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7681538 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7681666 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7681794 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7681922 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682050 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682178 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682306 "getUnchecked"
	package explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682434 "get"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682562 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682690 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682818 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7682946 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7683074 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7683202 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7683330 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7683458 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7683586 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7683714 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 978946 "DirectCharBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3280514 // <generalisation>
	relation 3280514 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3280514 // <generalisation>
	  b parent class_ref 979074 // DirectCharBufferU
      end

      operation 7688450 "DirectCharBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7688578 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7688706 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7688834 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7688962 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689090 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689218 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689346 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689474 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689602 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689730 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689858 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7689986 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7690114 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979074 "DirectCharBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3280130 // <generalisation>
	relation 3280130 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3280130 // <generalisation>
	  b parent class_ref 548482 // CharBuffer
      end

      attribute 1803138 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1803266 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(char[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1803394 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3280386 // att (<unidirectional association>)
	relation 3280386 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3280386 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7685634 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7685762 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7685890 "DirectCharBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7686018 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7686146 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7686274 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7686402 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7686530 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7686658 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7686786 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7686914 "getUnchecked"
	package explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687042 "get"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687170 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687298 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687426 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687554 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687682 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687810 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7687938 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7688066 "toString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7688194 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7688322 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979202 "DirectDoubleBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3281154 // <generalisation>
	relation 3281154 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3281154 // <generalisation>
	  b parent class_ref 979330 // DirectDoubleBufferS
      end

      operation 7692674 "DirectDoubleBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7692802 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7692930 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693058 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693186 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693314 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693442 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693570 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693698 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693826 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7693954 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7694082 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979330 "DirectDoubleBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3280770 // <generalisation>
	relation 3280770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3280770 // <generalisation>
	  b parent class_ref 974722 // DoubleBuffer
      end

      attribute 1803522 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1803650 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(double[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1803778 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3281026 // att (<unidirectional association>)
	relation 3281026 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3281026 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7690242 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7690370 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7690498 "DirectDoubleBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7690626 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7690754 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7690882 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691010 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691138 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691266 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691394 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691522 "get"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "dst" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691650 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691778 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7691906 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7692034 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7692162 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7692290 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7692418 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7692546 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979458 "DirectDoubleBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3281794 // <generalisation>
	relation 3281794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3281794 // <generalisation>
	  b parent class_ref 979586 // DirectDoubleBufferU
      end

      operation 7696642 "DirectDoubleBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7696770 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7696898 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697026 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697154 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697282 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697410 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697538 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697666 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697794 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7697922 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7698050 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979586 "DirectDoubleBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3281410 // <generalisation>
	relation 3281410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3281410 // <generalisation>
	  b parent class_ref 974722 // DoubleBuffer
      end

      attribute 1803906 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1804034 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(double[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1804162 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3281666 // att (<unidirectional association>)
	relation 3281666 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3281666 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7694210 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7694338 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7694466 "DirectDoubleBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7694594 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7694722 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7694850 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7694978 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7695106 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7695234 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7695362 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7695490 "get"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "dst" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7695618 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7695746 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7695874 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7696002 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7696130 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7696258 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7696386 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7696514 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979714 "DirectFloatBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3282434 // <generalisation>
	relation 3282434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3282434 // <generalisation>
	  b parent class_ref 979842 // DirectFloatBufferS
      end

      operation 7700610 "DirectFloatBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7700738 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7700866 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7700994 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7701122 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7701250 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7701378 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7701506 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7701634 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7701762 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7701890 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7702018 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979842 "DirectFloatBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3282050 // <generalisation>
	relation 3282050 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3282050 // <generalisation>
	  b parent class_ref 974594 // FloatBuffer
      end

      attribute 1804290 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1804418 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(float[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1804546 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3282306 // att (<unidirectional association>)
	relation 3282306 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3282306 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7698178 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7698306 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7698434 "DirectFloatBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7698562 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7698690 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7698818 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7698946 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699074 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699202 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699330 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699458 "get"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "dst" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699586 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699714 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699842 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7699970 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7700098 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7700226 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7700354 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7700482 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 979970 "DirectFloatBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3283074 // <generalisation>
	relation 3283074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3283074 // <generalisation>
	  b parent class_ref 980098 // DirectFloatBufferU
      end

      operation 7704578 "DirectFloatBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7704706 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7704834 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7704962 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705090 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705218 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705346 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705474 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705602 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705730 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705858 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7705986 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980098 "DirectFloatBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3282690 // <generalisation>
	relation 3282690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3282690 // <generalisation>
	  b parent class_ref 974594 // FloatBuffer
      end

      attribute 1804674 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1804802 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(float[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1804930 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3282946 // att (<unidirectional association>)
	relation 3282946 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3282946 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7702146 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7702274 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7702402 "DirectFloatBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7702530 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7702658 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7702786 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7702914 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703042 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703170 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703298 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703426 "get"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "dst" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703554 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703682 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703810 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7703938 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7704066 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7704194 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7704322 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7704450 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980226 "DirectIntBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3283714 // <generalisation>
	relation 3283714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3283714 // <generalisation>
	  b parent class_ref 980354 // DirectIntBufferS
      end

      operation 7708546 "DirectIntBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7708674 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7708802 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7708930 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709058 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709186 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709314 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709442 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709570 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709698 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709826 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7709954 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980354 "DirectIntBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3283330 // <generalisation>
	relation 3283330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3283330 // <generalisation>
	  b parent class_ref 974338 // IntBuffer
      end

      attribute 1805058 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1805186 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(int[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1805314 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3283586 // att (<unidirectional association>)
	relation 3283586 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3283586 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7706114 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7706242 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7706370 "DirectIntBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7706498 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7706626 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7706754 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7706882 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707010 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707138 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707266 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707394 "get"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "dst" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707522 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707650 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707778 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7707906 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7708034 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7708162 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7708290 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7708418 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980482 "DirectIntBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3284354 // <generalisation>
	relation 3284354 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3284354 // <generalisation>
	  b parent class_ref 980610 // DirectIntBufferU
      end

      operation 7712514 "DirectIntBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7712642 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7712770 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7712898 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713026 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713154 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713282 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713410 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713538 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713666 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713794 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7713922 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980610 "DirectIntBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3283970 // <generalisation>
	relation 3283970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3283970 // <generalisation>
	  b parent class_ref 974338 // IntBuffer
      end

      attribute 1805442 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1805570 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(int[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1805698 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3284226 // att (<unidirectional association>)
	relation 3284226 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3284226 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7710082 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7710210 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7710338 "DirectIntBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7710466 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7710594 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7710722 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7710850 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7710978 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7711106 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7711234 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7711362 "get"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "dst" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7711490 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7711618 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7711746 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7711874 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7712002 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7712130 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7712258 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7712386 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980738 "DirectLongBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3284994 // <generalisation>
	relation 3284994 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3284994 // <generalisation>
	  b parent class_ref 980866 // DirectLongBufferS
      end

      operation 7716482 "DirectLongBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7716610 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7716738 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7716866 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7716994 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7717122 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7717250 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7717378 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7717506 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7717634 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7717762 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7717890 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980866 "DirectLongBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3284610 // <generalisation>
	relation 3284610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3284610 // <generalisation>
	  b parent class_ref 974466 // LongBuffer
      end

      attribute 1805826 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1805954 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(long[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1806082 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3284866 // att (<unidirectional association>)
	relation 3284866 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3284866 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7714050 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7714178 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7714306 "DirectLongBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7714434 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7714562 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7714690 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7714818 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7714946 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715074 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715202 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715330 "get"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "dst" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715458 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715586 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715714 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715842 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7715970 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7716098 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7716226 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7716354 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 980994 "DirectLongBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3285634 // <generalisation>
	relation 3285634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3285634 // <generalisation>
	  b parent class_ref 981122 // DirectLongBufferU
      end

      operation 7720450 "DirectLongBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7720578 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7720706 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7720834 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7720962 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7721090 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7721218 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7721346 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7721474 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7721602 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7721730 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7721858 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 981122 "DirectLongBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3285250 // <generalisation>
	relation 3285250 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3285250 // <generalisation>
	  b parent class_ref 974466 // LongBuffer
      end

      attribute 1806210 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1806338 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(long[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1806466 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3285506 // att (<unidirectional association>)
	relation 3285506 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3285506 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7718018 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7718146 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7718274 "DirectLongBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7718402 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7718530 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7718658 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7718786 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7718914 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719042 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719170 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719298 "get"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "dst" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719426 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719554 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719682 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719810 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7719938 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7720066 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7720194 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7720322 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 981250 "DirectShortBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3286274 // <generalisation>
	relation 3286274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3286274 // <generalisation>
	  b parent class_ref 981378 // DirectShortBufferS
      end

      operation 7724418 "DirectShortBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7724546 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7724674 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7724802 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7724930 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7725058 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7725186 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7725314 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7725442 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7725570 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7725698 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7725826 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 981378 "DirectShortBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3285890 // <generalisation>
	relation 3285890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3285890 // <generalisation>
	  b parent class_ref 974210 // ShortBuffer
      end

      attribute 1806594 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1806722 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(short[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1806850 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3286146 // att (<unidirectional association>)
	relation 3286146 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3286146 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7721986 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7722114 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7722242 "DirectShortBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7722370 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7722498 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7722626 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7722754 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7722882 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723010 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723138 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723266 "get"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "dst" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723394 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723522 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723650 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723778 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7723906 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7724034 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7724162 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7724290 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 981506 "DirectShortBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3286914 // <generalisation>
	relation 3286914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3286914 // <generalisation>
	  b parent class_ref 981634 // DirectShortBufferU
      end

      operation 7728386 "DirectShortBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7728514 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7728642 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7728770 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7728898 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7729026 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7729154 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7729282 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7729410 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7729538 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7729666 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7729794 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 981634 "DirectShortBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3286530 // <generalisation>
	relation 3286530 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3286530 // <generalisation>
	  b parent class_ref 974210 // ShortBuffer
      end

      attribute 1806978 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value " Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unsafe-access object
"
      end

      attribute 1807106 "arrayBaseOffset"
	class_attribute const_attribute private explicit_type "long"
	init_value " (long)unsafe.arrayBaseOffset(short[].class)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached array base offset
"
      end

      attribute 1807234 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached unaligned-access capability
"
      end

      classrelation 3286786 // att (<unidirectional association>)
	relation 3286786 --->
	  a role_name "att" const_relation private
	    comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 An object attached to this buffer. If this buffer is a view of another
 buffer then we use this field to keep a reference to that buffer to
 ensure that its memory isn't freed before we are done with it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3286786 // att (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7725954 "attachment"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7726082 "cleaner"
	public explicit_return_type "Cleaner"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7726210 "DirectShortBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7726338 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7726466 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7726594 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7726722 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7726850 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7726978 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7727106 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7727234 "get"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "dst" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7727362 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7727490 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7727618 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7727746 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7727874 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7728002 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7728130 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7728258 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 981762 "HeapByteBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A read/write HeapByteBuffer.






"
      classrelation 3287170 // <generalisation>
	relation 3287170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3287170 // <generalisation>
	  b parent class_ref 149890 // ByteBuffer
      end

      operation 7729922 "HeapByteBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final byte[] hb;
protected final int offset;

"
      end

      operation 7730050 "HeapByteBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7730178 "HeapByteBuffer"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7730306 "slice"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7730434 "duplicate"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7730562 "asReadOnlyBuffer"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7730690 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7730818 "get"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7730946 "get"
	public explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731074 "get"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "dst" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731202 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731330 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731458 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731586 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731714 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "src" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731842 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7731970 "compact"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7732098 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7732226 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7732354 "getChar"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " char"
      end

      operation 7732482 "getChar"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7732610 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7732738 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7732866 "asCharBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7732994 "getShort"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " short"
      end

      operation 7733122 "getShort"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7733250 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7733378 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7733506 "asShortBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7733634 "getInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " int"
      end

      operation 7733762 "getInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7733890 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7734018 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7734146 "asIntBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7734274 "getLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " long"
      end

      operation 7734402 "getLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7734530 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7734658 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7734786 "asLongBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7734914 "getFloat"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " float"
      end

      operation 7735042 "getFloat"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7735170 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7735298 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7735426 "asFloatBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7735554 "getDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " double"
      end

      operation 7735682 "getDouble"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7735810 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7735938 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7736066 "asDoubleBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 981890 "HeapByteBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "


A read-only HeapByteBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.

"
      classrelation 3287298 // <generalisation>
	relation 3287298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3287298 // <generalisation>
	  b parent class_ref 981762 // HeapByteBuffer
      end

      operation 7736194 "HeapByteBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation





"
      end

      operation 7736322 "HeapByteBufferR"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7736450 "HeapByteBufferR"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7736578 "slice"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7736706 "duplicate"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7736834 "asReadOnlyBuffer"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7736962 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737090 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737218 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737346 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 3
	  param inout name "src" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737474 "put"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 149890 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737602 "compact"
	public return_type class_ref 149890 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737730 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737858 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7737986 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " char"
      end

      operation 7738114 "putChar"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7738242 "asCharBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7738370 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " short"
      end

      operation 7738498 "putShort"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7738626 "asShortBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7738754 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " int"
      end

      operation 7738882 "putInt"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7739010 "asIntBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7739138 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " long"
      end

      operation 7739266 "putLong"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7739394 "asLongBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7739522 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " float"
      end

      operation 7739650 "putFloat"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7739778 "asFloatBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7739906 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " double"
      end

      operation 7740034 "putDouble"
	public return_type class_ref 149890 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7740162 "asDoubleBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982018 "HeapCharBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A read/write HeapCharBuffer.






"
      classrelation 3287426 // <generalisation>
	relation 3287426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3287426 // <generalisation>
	  b parent class_ref 548482 // CharBuffer
      end

      operation 7740290 "HeapCharBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final char[] hb;
protected final int offset;

"
      end

      operation 7740418 "HeapCharBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7740546 "HeapCharBuffer"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7740674 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7740802 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7740930 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741058 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741186 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741314 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741442 "getUnchecked"
	package explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741570 "get"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741698 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741826 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7741954 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7742082 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7742210 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7742338 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7742466 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7742594 "toString"
	package return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7742722 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7742850 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982146 "HeapCharBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "


A read-only HeapCharBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.

"
      classrelation 3287554 // <generalisation>
	relation 3287554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3287554 // <generalisation>
	  b parent class_ref 982018 // HeapCharBuffer
      end

      operation 7742978 "HeapCharBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation





"
      end

      operation 7743106 "HeapCharBufferR"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7743234 "HeapCharBufferR"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7743362 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7743490 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7743618 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7743746 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7743874 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7744002 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7744130 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 3
	  param inout name "src" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7744258 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 548482 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7744386 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7744514 "toString"
	package return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7744642 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7744770 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982274 "HeapDoubleBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A read/write HeapDoubleBuffer.






"
      classrelation 3287682 // <generalisation>
	relation 3287682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3287682 // <generalisation>
	  b parent class_ref 974722 // DoubleBuffer
      end

      operation 7744898 "HeapDoubleBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final double[] hb;
protected final int offset;

"
      end

      operation 7745026 "HeapDoubleBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "double"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7745154 "HeapDoubleBuffer"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "double"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7745282 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7745410 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7745538 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7745666 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7745794 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7745922 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746050 "get"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "dst" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746178 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746306 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746434 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746562 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746690 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746818 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7746946 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7747074 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982402 "HeapDoubleBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "


A read-only HeapDoubleBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.

"
      classrelation 3287810 // <generalisation>
	relation 3287810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3287810 // <generalisation>
	  b parent class_ref 982274 // HeapDoubleBuffer
      end

      operation 7747202 "HeapDoubleBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation





"
      end

      operation 7747330 "HeapDoubleBufferR"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "double"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7747458 "HeapDoubleBufferR"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "double"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7747586 "slice"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7747714 "duplicate"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7747842 "asReadOnlyBuffer"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7747970 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7748098 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7748226 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7748354 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 3
	  param inout name "src" explicit_type "double"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7748482 "put"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 974722 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7748610 "compact"
	public return_type class_ref 974722 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7748738 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982530 "HeapFloatBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A read/write HeapFloatBuffer.






"
      classrelation 3287938 // <generalisation>
	relation 3287938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3287938 // <generalisation>
	  b parent class_ref 974594 // FloatBuffer
      end

      operation 7748866 "HeapFloatBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final float[] hb;
protected final int offset;

"
      end

      operation 7748994 "HeapFloatBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "float"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7749122 "HeapFloatBuffer"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "float"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7749250 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7749378 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7749506 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7749634 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7749762 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7749890 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750018 "get"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "dst" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750146 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750274 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750402 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750530 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750658 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750786 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7750914 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7751042 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982658 "HeapFloatBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "


A read-only HeapFloatBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.

"
      classrelation 3288066 // <generalisation>
	relation 3288066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288066 // <generalisation>
	  b parent class_ref 982530 // HeapFloatBuffer
      end

      operation 7751170 "HeapFloatBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation





"
      end

      operation 7751298 "HeapFloatBufferR"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "float"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7751426 "HeapFloatBufferR"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "float"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7751554 "slice"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7751682 "duplicate"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7751810 "asReadOnlyBuffer"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7751938 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7752066 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7752194 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7752322 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 3
	  param inout name "src" explicit_type "float"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7752450 "put"
	public return_type class_ref 974594 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 974594 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7752578 "compact"
	public return_type class_ref 974594 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7752706 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982786 "HeapIntBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A read/write HeapIntBuffer.






"
      classrelation 3288194 // <generalisation>
	relation 3288194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288194 // <generalisation>
	  b parent class_ref 974338 // IntBuffer
      end

      operation 7752834 "HeapIntBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final int[] hb;
protected final int offset;

"
      end

      operation 7752962 "HeapIntBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753090 "HeapIntBuffer"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "int"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753218 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753346 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753474 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753602 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753730 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753858 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7753986 "get"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "dst" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7754114 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7754242 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7754370 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7754498 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7754626 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7754754 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7754882 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7755010 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 982914 "HeapIntBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "


A read-only HeapIntBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.

"
      classrelation 3288322 // <generalisation>
	relation 3288322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288322 // <generalisation>
	  b parent class_ref 982786 // HeapIntBuffer
      end

      operation 7755138 "HeapIntBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation





"
      end

      operation 7755266 "HeapIntBufferR"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7755394 "HeapIntBufferR"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "int"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7755522 "slice"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7755650 "duplicate"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7755778 "asReadOnlyBuffer"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7755906 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7756034 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7756162 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7756290 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 3
	  param inout name "src" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7756418 "put"
	public return_type class_ref 974338 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 974338 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7756546 "compact"
	public return_type class_ref 974338 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7756674 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 983042 "HeapLongBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A read/write HeapLongBuffer.






"
      classrelation 3288450 // <generalisation>
	relation 3288450 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288450 // <generalisation>
	  b parent class_ref 974466 // LongBuffer
      end

      operation 7756802 "HeapLongBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final long[] hb;
protected final int offset;

"
      end

      operation 7756930 "HeapLongBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "long"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757058 "HeapLongBuffer"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "long"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757186 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757314 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757442 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757570 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757698 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757826 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7757954 "get"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "dst" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758082 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758210 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758338 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758466 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758594 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758722 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758850 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7758978 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 983170 "HeapLongBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "


A read-only HeapLongBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.

"
      classrelation 3288578 // <generalisation>
	relation 3288578 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288578 // <generalisation>
	  b parent class_ref 983042 // HeapLongBuffer
      end

      operation 7759106 "HeapLongBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation





"
      end

      operation 7759234 "HeapLongBufferR"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "long"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7759362 "HeapLongBufferR"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "long"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7759490 "slice"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7759618 "duplicate"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7759746 "asReadOnlyBuffer"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7759874 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7760002 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7760130 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7760258 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 3
	  param inout name "src" explicit_type "long"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7760386 "put"
	public return_type class_ref 974466 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 974466 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7760514 "compact"
	public return_type class_ref 974466 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7760642 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 983298 "HeapShortBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A read/write HeapShortBuffer.






"
      classrelation 3288706 // <generalisation>
	relation 3288706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288706 // <generalisation>
	  b parent class_ref 974210 // ShortBuffer
      end

      operation 7760770 "HeapShortBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final short[] hb;
protected final int offset;

"
      end

      operation 7760898 "HeapShortBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "short"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761026 "HeapShortBuffer"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "short"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761154 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761282 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761410 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761538 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761666 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761794 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7761922 "get"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "dst" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762050 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762178 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762306 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762434 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762562 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762690 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762818 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7762946 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 983426 "HeapShortBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "


A read-only HeapShortBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.

"
      classrelation 3288834 // <generalisation>
	relation 3288834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288834 // <generalisation>
	  b parent class_ref 983298 // HeapShortBuffer
      end

      operation 7763074 "HeapShortBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation





"
      end

      operation 7763202 "HeapShortBufferR"
	package explicit_return_type ""
	nparams 3
	  param inout name "buf" explicit_type "short"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7763330 "HeapShortBufferR"
	protected explicit_return_type ""
	nparams 6
	  param inout name "buf" explicit_type "short"
	multiplicity "[]"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7763458 "slice"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7763586 "duplicate"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7763714 "asReadOnlyBuffer"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7763842 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7763970 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7764098 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7764226 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 3
	  param inout name "src" explicit_type "short"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7764354 "put"
	public return_type class_ref 974210 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 974210 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7764482 "compact"
	public return_type class_ref 974210 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7764610 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 983554 "InvalidMarkException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when an attempt is made to reset a buffer
when its mark is not defined.

@since 1.4
"
      classrelation 3288962 // <generalisation>
	relation 3288962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3288962 // <generalisation>
	  b parent class_ref 254850 // IllegalStateException
      end

      attribute 1807362 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1698329710438510774L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7764738 "InvalidMarkException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class.
"
      end
    end

    class 983682 "ReadOnlyBufferException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Unchecked exception thrown when a content-mutation method such as
<tt>put</tt> or <tt>compact</tt> is invoked upon a read-only buffer.

@since 1.4
"
      classrelation 3289090 // <generalisation>
	relation 3289090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3289090 // <generalisation>
	  b parent class_ref 193538 // UnsupportedOperationException
      end

      attribute 1807490 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1210063976496234090L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7764866 "ReadOnlyBufferException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class.
"
      end
    end

    class 983810 "StringCharBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " ## If the sequence is a string, use reflection to share its array"
      classrelation 3289218 // <generalisation>
	relation 3289218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3289218 // <generalisation>
	  b parent class_ref 548482 // CharBuffer
      end

      classrelation 3289346 // str (<unidirectional association>)
	relation 3289346 --->
	  a role_name "str" package
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3289346 // str (<unidirectional association>)
	  b parent class_ref 429442 // CharSequence
      end

      operation 7764994 "StringCharBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7765122 "slice"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7765250 "StringCharBuffer"
	private explicit_return_type ""
	nparams 6
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7765378 "duplicate"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7765506 "asReadOnlyBuffer"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7765634 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7765762 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7765890 "getUnchecked"
	package explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7766018 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ## Override bulk get methods for better performance"
      end

      operation 7766146 "put"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7766274 "compact"
	public return_type class_ref 548482 // CharBuffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7766402 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7766530 "toString"
	package return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7766658 "subSequence"
	public return_type class_ref 548482 // CharBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7766786 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7766914 "order"
	public return_type class_ref 324354 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  package_ref 135554 // charset

  package_ref 139522 // channels

  package_ref 181250 // file

  deploymentview 167810 "nio"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 712066 "Bits"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.LongAdder;
import sun.misc.JavaLangRefAccess;
import sun.misc.SharedSecrets;
import sun.misc.Unsafe;
import sun.misc.VM;
${definition}"
      associated_elems
	class_ref 973698 // Bits
      end
      comment "Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 712194 "Buffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Spliterator;
${definition}"
      associated_elems
	class_ref 973826 // Buffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 712322 "BufferOverflowException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 973954 // BufferOverflowException
      end
      comment "Copyright (c) 2000, 2007, Oracle and/or its affiliates. All rights reserved.

ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712450 "BufferUnderflowException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974082 // BufferUnderflowException
      end
      comment "Copyright (c) 2000, 2007, Oracle and/or its affiliates. All rights reserved.

ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712578 "ByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 149890 // ByteBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712706 "CharBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Spliterator;
import java.util.stream.StreamSupport;
import java.util.stream.IntStream;
${definition}"
      associated_elems
	class_ref 548482 // CharBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712834 "ByteBufferAsCharBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974850 // ByteBufferAsCharBufferB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712962 "ByteBufferAsCharBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974978 // ByteBufferAsCharBufferL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713090 "ByteBufferAsCharBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 975106 // ByteBufferAsCharBufferRB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713218 "ByteBufferAsCharBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 975234 // ByteBufferAsCharBufferRL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713346 "DoubleBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974722 // DoubleBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713474 "ByteBufferAsDoubleBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 975362 // ByteBufferAsDoubleBufferB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713602 "ByteBufferAsDoubleBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 975490 // ByteBufferAsDoubleBufferL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713730 "ByteBufferAsDoubleBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 975618 // ByteBufferAsDoubleBufferRB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713858 "ByteBufferAsDoubleBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 975746 // ByteBufferAsDoubleBufferRL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713986 "FloatBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974594 // FloatBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714114 "ByteBufferAsFloatBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 975874 // ByteBufferAsFloatBufferB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714242 "ByteBufferAsFloatBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976002 // ByteBufferAsFloatBufferL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714370 "ByteBufferAsFloatBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976130 // ByteBufferAsFloatBufferRB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714498 "ByteBufferAsFloatBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976258 // ByteBufferAsFloatBufferRL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714626 "IntBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974338 // IntBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714754 "ByteBufferAsIntBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976386 // ByteBufferAsIntBufferB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714882 "ByteBufferAsIntBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976514 // ByteBufferAsIntBufferL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715010 "ByteBufferAsIntBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976642 // ByteBufferAsIntBufferRB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715138 "ByteBufferAsIntBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976770 // ByteBufferAsIntBufferRL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715266 "LongBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974466 // LongBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715394 "ByteBufferAsLongBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 976898 // ByteBufferAsLongBufferB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715522 "ByteBufferAsLongBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 977026 // ByteBufferAsLongBufferL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715650 "ByteBufferAsLongBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 977154 // ByteBufferAsLongBufferRB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715778 "ByteBufferAsLongBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 977282 // ByteBufferAsLongBufferRL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715906 "ShortBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 974210 // ShortBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 716034 "ByteBufferAsShortBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 977410 // ByteBufferAsShortBufferB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 716162 "ByteBufferAsShortBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 977538 // ByteBufferAsShortBufferL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 716290 "ByteBufferAsShortBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 977666 // ByteBufferAsShortBufferRB
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 716418 "ByteBufferAsShortBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 977794 // ByteBufferAsShortBufferRL
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 716546 "ByteOrder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 324354 // ByteOrder
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 716674 "CharBufferSpliterator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Comparator;
import java.util.Spliterator;
import java.util.function.IntConsumer;
${definition}"
      associated_elems
	class_ref 977922 // CharBufferSpliterator
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 716802 "MappedByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Unsafe;
${definition}"
      associated_elems
	class_ref 978178 // MappedByteBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 716930 "DirectByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 978050 // DirectByteBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717058 "DirectByteBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 978562 // DirectByteBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717186 "DirectCharBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 978818 // DirectCharBufferS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717314 "DirectCharBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 978690 // DirectCharBufferRS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717442 "DirectCharBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979074 // DirectCharBufferU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717570 "DirectCharBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 978946 // DirectCharBufferRU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717698 "DirectDoubleBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979330 // DirectDoubleBufferS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717826 "DirectDoubleBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979202 // DirectDoubleBufferRS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 717954 "DirectDoubleBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979586 // DirectDoubleBufferU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718082 "DirectDoubleBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979458 // DirectDoubleBufferRU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718210 "DirectFloatBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979842 // DirectFloatBufferS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718338 "DirectFloatBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979714 // DirectFloatBufferRS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718466 "DirectFloatBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980098 // DirectFloatBufferU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718594 "DirectFloatBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 979970 // DirectFloatBufferRU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718722 "DirectIntBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980354 // DirectIntBufferS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718850 "DirectIntBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980226 // DirectIntBufferRS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 718978 "DirectIntBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980610 // DirectIntBufferU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 719106 "DirectIntBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980482 // DirectIntBufferRU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 719234 "DirectLongBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980866 // DirectLongBufferS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 719362 "DirectLongBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980738 // DirectLongBufferRS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 719490 "DirectLongBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 981122 // DirectLongBufferU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 719618 "DirectLongBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 980994 // DirectLongBufferRU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 719746 "DirectShortBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 981378 // DirectShortBufferS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 719874 "DirectShortBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 981250 // DirectShortBufferRS
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720002 "DirectShortBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 981634 // DirectShortBufferU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720130 "DirectShortBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.misc.VM;
import sun.nio.ch.DirectBuffer;
${definition}"
      associated_elems
	class_ref 981506 // DirectShortBufferRU
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720258 "HeapByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 981762 // HeapByteBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720386 "HeapByteBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 981890 // HeapByteBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720514 "HeapCharBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982018 // HeapCharBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720642 "HeapCharBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982146 // HeapCharBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720770 "HeapDoubleBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982274 // HeapDoubleBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 720898 "HeapDoubleBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982402 // HeapDoubleBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721026 "HeapFloatBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982530 // HeapFloatBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721154 "HeapFloatBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982658 // HeapFloatBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721282 "HeapIntBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982786 // HeapIntBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721410 "HeapIntBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 982914 // HeapIntBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721538 "HeapLongBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 983042 // HeapLongBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721666 "HeapLongBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 983170 // HeapLongBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721794 "HeapShortBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 983298 // HeapShortBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 721922 "HeapShortBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 983426 // HeapShortBufferR
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 722050 "InvalidMarkException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 983554 // InvalidMarkException
      end
      comment "Copyright (c) 2000, 2007, Oracle and/or its affiliates. All rights reserved.

ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 722178 "ReadOnlyBufferException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 983682 // ReadOnlyBufferException
      end
      comment "Copyright (c) 2000, 2007, Oracle and/or its affiliates. All rights reserved.

ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 722306 "StringCharBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 983810 // StringCharBuffer
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
