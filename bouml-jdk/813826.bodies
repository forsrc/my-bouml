class XPathNamespaceImpl
!!!5882114.java!!!	XPathNamespaceImpl(inout node : Node)
        m_attributeNode = node;
!!!5882242.java!!!	getOwnerElement() : Element
        return ((Attr)m_attributeNode).getOwnerElement();
!!!5882370.java!!!	getNodeName() : String
        return "#namespace";
!!!5882498.java!!!	getNodeValue() : String
        return m_attributeNode.getNodeValue();
!!!5882754.java!!!	getNodeType() : short
        return XPathNamespace.XPATH_NAMESPACE_NODE;
!!!5882882.java!!!	getParentNode() : Node
        return m_attributeNode.getParentNode();
!!!5883010.java!!!	getChildNodes() : NodeList
        return m_attributeNode.getChildNodes();
!!!5883138.java!!!	getFirstChild() : Node
        return m_attributeNode.getFirstChild();
!!!5883266.java!!!	getLastChild() : Node
        return m_attributeNode.getLastChild();
!!!5883394.java!!!	getPreviousSibling() : Node
        return m_attributeNode.getPreviousSibling();
!!!5883522.java!!!	getNextSibling() : Node
        return m_attributeNode.getNextSibling();
!!!5883650.java!!!	getAttributes() : NamedNodeMap
        return m_attributeNode.getAttributes();
!!!5883778.java!!!	getOwnerDocument() : Document
        return m_attributeNode.getOwnerDocument();
!!!5883906.java!!!	insertBefore(inout arg0 : Node, inout arg1 : Node) : Node
        return null;
!!!5884034.java!!!	replaceChild(inout arg0 : Node, inout arg1 : Node) : Node
        return null;
!!!5884162.java!!!	removeChild(inout arg0 : Node) : Node
        return null;
!!!5884290.java!!!	appendChild(inout arg0 : Node) : Node
        return null;
!!!5884418.java!!!	hasChildNodes() : boolean
        return false;
!!!5884546.java!!!	cloneNode(inout arg0 : boolean) : Node
        throw new DOMException(DOMException.NOT_SUPPORTED_ERR,null);
!!!5884674.java!!!	normalize() : void
        m_attributeNode.normalize();
!!!5884802.java!!!	isSupported(inout arg0 : String, inout arg1 : String) : boolean
        return m_attributeNode.isSupported(arg0, arg1);
!!!5884930.java!!!	getNamespaceURI() : String

        // For namespace node, the namespaceURI is the namespace URI
        // of the namespace represented by the node.
        return m_attributeNode.getNodeValue();
!!!5885058.java!!!	getPrefix() : String
        return m_attributeNode.getPrefix();
!!!5885314.java!!!	getLocalName() : String

        // For namespace node, the local name is the same as the prefix
        return m_attributeNode.getPrefix();
!!!5885442.java!!!	hasAttributes() : boolean
        return m_attributeNode.hasAttributes();
!!!5885570.java!!!	getBaseURI() : String
        return null;
!!!5885698.java!!!	compareDocumentPosition(inout other : Node) : short
        return 0;
!!!5885826.java!!!	getTextContent() : String
        return textContent;
!!!5885954.java!!!	setTextContent(inout textContent : String) : void
        this.textContent = textContent;
!!!5886082.java!!!	isSameNode(inout other : Node) : boolean
        return false;
!!!5886210.java!!!	lookupPrefix(inout namespaceURI : String) : String
        return ""; //PENDING
!!!5886338.java!!!	isDefaultNamespace(inout namespaceURI : String) : boolean
        return false;
!!!5886466.java!!!	lookupNamespaceURI(inout prefix : String) : String
        return null;
!!!5886594.java!!!	isEqualNode(inout arg : Node) : boolean
        return false;
!!!5886722.java!!!	getFeature(inout feature : String, inout version : String) : Object
        return null; //PENDING
!!!5886850.java!!!	setUserData(inout key : String, inout data : Object, inout handler : UserDataHandler) : Object
        return null; //PENDING
!!!5886978.java!!!	getUserData(inout key : String) : Object
        return null;
