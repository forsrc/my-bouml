class ComponentInfo
!!!10536194.java!!!	ComponentInfo(inout component : Component)
            this.component = component;
            updateVisibility();
!!!10536322.java!!!	dispose() : void
            // Remove horizontal/vertical springs
            removeSpring(horizontalSpring);
            horizontalSpring = null;
            removeSpring(verticalSpring);
            verticalSpring = null;
            // Clean up links
            if (horizontalMaster != null) {
                horizontalMaster.remove(this);
            }
            if (verticalMaster != null) {
                verticalMaster.remove(this);
            }
!!!10536450.java!!!	setHonorsVisibility(inout honorsVisibility : Boolean) : void
            this.honorsVisibility = honorsVisibility;
!!!10536578.java!!!	removeSpring(inout spring : GroupLayout::Spring) : void
            if (spring != null) {
                ((Group)spring.getParent()).springs.remove(spring);
            }
!!!10536706.java!!!	isVisible() : boolean
            return visible;
!!!10536834.java!!!	updateVisibility() : boolean
            boolean honorsVisibility;
            if (this.honorsVisibility == null) {
                honorsVisibility = GroupLayout.this.getHonorsVisibility();
            } else {
                honorsVisibility = this.honorsVisibility;
            }
            boolean newVisible = (honorsVisibility) ?
                component.isVisible() : true;
            if (visible != newVisible) {
                visible = newVisible;
                return true;
            }
            return false;
!!!10536962.java!!!	setBounds(inout insets : Insets, in parentWidth : int, inout ltr : boolean) : void
            int x = horizontalSpring.getOrigin();
            int w = horizontalSpring.getSize();
            int y = verticalSpring.getOrigin();
            int h = verticalSpring.getSize();

            if (!ltr) {
                x = parentWidth - x - w;
            }
            component.setBounds(x + insets.left, y + insets.top, w, h);
!!!10537090.java!!!	setComponent(inout component : Component) : void
            this.component = component;
            if (horizontalSpring != null) {
                horizontalSpring.setComponent(component);
            }
            if (verticalSpring != null) {
                verticalSpring.setComponent(component);
            }
!!!10537218.java!!!	getComponent() : Component
            return component;
!!!10537346.java!!!	isLinked(in axis : int) : boolean
            if (axis == HORIZONTAL) {
                return horizontalMaster != null;
            }
            assert (axis == VERTICAL);
            return (verticalMaster != null);
!!!10537474.java!!!	setLinkInfo(in axis : int, inout linkInfo : GroupLayout::LinkInfo) : void
            if (axis == HORIZONTAL) {
                horizontalMaster = linkInfo;
            } else {
                assert (axis == VERTICAL);
                verticalMaster = linkInfo;
            }
!!!10537602.java!!!	getLinkInfo(in axis : int) : GroupLayout::LinkInfo
            return getLinkInfo(axis, true);
!!!10537730.java!!!	getLinkInfo(in axis : int, inout create : boolean) : GroupLayout::LinkInfo
            if (axis == HORIZONTAL) {
                if (horizontalMaster == null && create) {
                    // horizontalMaster field is directly set by adding
                    // us to the LinkInfo.
                    new LinkInfo(HORIZONTAL).add(this);
                }
                return horizontalMaster;
            } else {
                assert (axis == VERTICAL);
                if (verticalMaster == null && create) {
                    // verticalMaster field is directly set by adding
                    // us to the LinkInfo.
                    new LinkInfo(VERTICAL).add(this);
                }
                return verticalMaster;
            }
!!!10537858.java!!!	clearCachedSize() : void
            if (horizontalMaster != null) {
                horizontalMaster.clearCachedSize();
            }
            if (verticalMaster != null) {
                verticalMaster.clearCachedSize();
            }
!!!10537986.java!!!	getLinkSize(in axis : int, in type : int) : int
            if (axis == HORIZONTAL) {
                return horizontalMaster.getSize(axis);
            } else {
                assert (axis == VERTICAL);
                return verticalMaster.getSize(axis);
            }
