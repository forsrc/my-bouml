class ActionPropertyChangeListener
!!!2227202.java!!!	getQueue() : ReferenceQueue
        synchronized(ActionPropertyChangeListener.class) {
            if (queue == null) {
                queue = new ReferenceQueue<JComponent>();
            }
        }
        return queue;
!!!2227330.java!!!	ActionPropertyChangeListener(inout c : T, inout a : Action)
        super();
        setTarget(c);
        this.action = a;
!!!2227458.java!!!	propertyChange(inout e : PropertyChangeEvent) : void
        T target = getTarget();
        if (target == null) {
            getAction().removePropertyChangeListener(this);
        } else {
            actionPropertyChanged(target, getAction(), e);
        }
!!!2227714.java!!!	setTarget(inout c : T) : void
        ReferenceQueue<JComponent> queue = getQueue();
        // Check to see whether any old buttons have
        // been enqueued for GC.  If so, look up their
        // PCL instance and remove it from its Action.
        OwnedWeakReference<?> r;
        while ((r = (OwnedWeakReference)queue.poll()) != null) {
            ActionPropertyChangeListener<?> oldPCL = r.getOwner();
            Action oldAction = oldPCL.getAction();
            if (oldAction!=null) {
                oldAction.removePropertyChangeListener(oldPCL);
            }
        }
        this.target = new OwnedWeakReference<T>(c, queue, this);
!!!2227842.java!!!	getTarget() : T
        if (target == null) {
            // Will only happen if serialized and real target was null
            return null;
        }
        return this.target.get();
!!!2227970.java!!!	getAction() : Action
          return action;
!!!2228098.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        s.writeObject(getTarget());
!!!2228226.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();
        T target = (T)s.readObject();
        if (target != null) {
            setTarget(target);
        }
