class InputStream
!!!177026.java!!!	read(inout b : byte [[]]) : int
        return read(b, 0, b.length);
!!!177154.java!!!	read(inout b : byte [[]], in off : int, in len : int) : int
        if (b == null) {
            throw new NullPointerException();
        } else if (off < 0 || len < 0 || len > b.length - off) {
            throw new IndexOutOfBoundsException();
        } else if (len == 0) {
            return 0;
        }

        int c = read();
        if (c == -1) {
            return -1;
        }
        b[off] = (byte)c;

        int i = 1;
        try {
            for (; i < len ; i++) {
                c = read();
                if (c == -1) {
                    break;
                }
                b[off + i] = (byte)c;
            }
        } catch (IOException ee) {
        }
        return i;
!!!177282.java!!!	skip(in n : long) : long

        long remaining = n;
        int nr;

        if (n <= 0) {
            return 0;
        }

        int size = (int)Math.min(MAX_SKIP_BUFFER_SIZE, remaining);
        byte[] skipBuffer = new byte[size];
        while (remaining > 0) {
            nr = read(skipBuffer, 0, (int)Math.min(size, remaining));
            if (nr < 0) {
                break;
            }
            remaining -= nr;
        }

        return n - remaining;
!!!177410.java!!!	available() : int
        return 0;
!!!177794.java!!!	reset() : void
        throw new IOException("mark/reset not supported");
!!!177922.java!!!	markSupported() : boolean
        return false;
