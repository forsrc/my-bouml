class TrustAnchor
!!!8051202.java!!!	TrustAnchor(inout trustedCert : X509Certificate, inout nameConstraints : byte [[]])
        if (trustedCert == null)
            throw new NullPointerException("the trustedCert parameter must " +
                "be non-null");
        this.trustedCert = trustedCert;
        this.pubKey = null;
        this.caName = null;
        this.caPrincipal = null;
        setNameConstraints(nameConstraints);
!!!8051330.java!!!	TrustAnchor(inout caPrincipal : X500Principal, inout pubKey : PublicKey, inout nameConstraints : byte [[]])
        if ((caPrincipal == null) || (pubKey == null)) {
            throw new NullPointerException();
        }
        this.trustedCert = null;
        this.caPrincipal = caPrincipal;
        this.caName = caPrincipal.getName();
        this.pubKey = pubKey;
        setNameConstraints(nameConstraints);
!!!8051458.java!!!	TrustAnchor(inout caName : String, inout pubKey : PublicKey, inout nameConstraints : byte [[]])
        if (pubKey == null)
            throw new NullPointerException("the pubKey parameter must be " +
                "non-null");
        if (caName == null)
            throw new NullPointerException("the caName parameter must be " +
                "non-null");
        if (caName.length() == 0)
            throw new IllegalArgumentException("the caName " +
                "parameter must be a non-empty String");
        // check if caName is formatted correctly
        this.caPrincipal = new X500Principal(caName);
        this.pubKey = pubKey;
        this.caName = caName;
        this.trustedCert = null;
        setNameConstraints(nameConstraints);
!!!8051586.java!!!	getTrustedCert() : X509Certificate
        return this.trustedCert;
!!!8051714.java!!!	getCA() : X500Principal
        return this.caPrincipal;
!!!8051842.java!!!	getCAName() : String
        return this.caName;
!!!8051970.java!!!	getCAPublicKey() : PublicKey
        return this.pubKey;
!!!8052098.java!!!	setNameConstraints(inout bytes : byte [[]]) : void
        if (bytes == null) {
            ncBytes = null;
            nc = null;
        } else {
            ncBytes = bytes.clone();
            // validate DER encoding
            try {
                nc = new NameConstraintsExtension(Boolean.FALSE, bytes);
            } catch (IOException ioe) {
                IllegalArgumentException iae =
                    new IllegalArgumentException(ioe.getMessage());
                iae.initCause(ioe);
                throw iae;
            }
        }
!!!8052226.java!!!	getNameConstraints() : byte
        return ncBytes == null ? null : ncBytes.clone();
!!!8052354.java!!!	toString() : String
        StringBuffer sb = new StringBuffer();
        sb.append("[\n");
        if (pubKey != null) {
            sb.append("  Trusted CA Public Key: " + pubKey.toString() + "\n");
            sb.append("  Trusted CA Issuer Name: "
                + String.valueOf(caName) + "\n");
        } else {
            sb.append("  Trusted CA cert: " + trustedCert.toString() + "\n");
        }
        if (nc != null)
            sb.append("  Name Constraints: " + nc.toString() + "\n");
        return sb.toString();
