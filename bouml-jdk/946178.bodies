class Species_L
!!!7161474.java!!!	Species_L(inout mt : MethodType, inout lf : LambdaForm, inout argL0 : Object)
            super(mt, lf);
            this.argL0 = argL0;
!!!7161602.java!!!	speciesData() : BoundMethodHandle::SpeciesData
            return SPECIES_DATA;
!!!7161730.java!!!	fieldCount() : int
            return 1;
!!!7161858.java!!!	make(inout mt : MethodType, inout lf : LambdaForm, inout argL0 : Object) : BoundMethodHandle
            return new Species_L(mt, lf, argL0);
!!!7161986.java!!!	copyWith(inout mt : MethodType, inout lf : LambdaForm) : BoundMethodHandle
            return new Species_L(mt, lf, argL0);
!!!7162114.java!!!	copyWithExtendL(inout mt : MethodType, inout lf : LambdaForm, inout narg : Object) : BoundMethodHandle
            try {
                return (BoundMethodHandle) SPECIES_DATA.extendWith(L_TYPE).constructor().invokeBasic(mt, lf, argL0, narg);
            } catch (Throwable ex) {
                throw uncaughtException(ex);
            }
!!!7162242.java!!!	copyWithExtendI(inout mt : MethodType, inout lf : LambdaForm, in narg : int) : BoundMethodHandle
            try {
                return (BoundMethodHandle) SPECIES_DATA.extendWith(I_TYPE).constructor().invokeBasic(mt, lf, argL0, narg);
            } catch (Throwable ex) {
                throw uncaughtException(ex);
            }
!!!7162370.java!!!	copyWithExtendJ(inout mt : MethodType, inout lf : LambdaForm, in narg : long) : BoundMethodHandle
            try {
                return (BoundMethodHandle) SPECIES_DATA.extendWith(J_TYPE).constructor().invokeBasic(mt, lf, argL0, narg);
            } catch (Throwable ex) {
                throw uncaughtException(ex);
            }
!!!7162498.java!!!	copyWithExtendF(inout mt : MethodType, inout lf : LambdaForm, in narg : float) : BoundMethodHandle
            try {
                return (BoundMethodHandle) SPECIES_DATA.extendWith(F_TYPE).constructor().invokeBasic(mt, lf, argL0, narg);
            } catch (Throwable ex) {
                throw uncaughtException(ex);
            }
!!!7162626.java!!!	copyWithExtendD(inout mt : MethodType, inout lf : LambdaForm, in narg : double) : BoundMethodHandle
            try {
                return (BoundMethodHandle) SPECIES_DATA.extendWith(D_TYPE).constructor().invokeBasic(mt, lf, argL0, narg);
            } catch (Throwable ex) {
                throw uncaughtException(ex);
            }
