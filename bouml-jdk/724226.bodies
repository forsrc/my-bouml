class DurationYearMonthImpl
!!!4925186.java!!!	DurationYearMonthImpl(inout isPositive : boolean, inout years : BigInteger, inout months : BigInteger)

        super(isPositive, years, months, null, null, null, null);
        convertToCanonicalYearMonth();
!!!4925314.java!!!	DurationYearMonthImpl(in isPositive : boolean, in years : int, in months : int)

        this(isPositive,
            wrap(years),
            wrap(months));


!!!4925442.java!!!	DurationYearMonthImpl(in durationInMilliseconds : long)

        super(durationInMilliseconds);
        convertToCanonicalYearMonth();
        //Any remaining milliseconds after determining the year and month are discarded.
        days = null;
        hours = null;
        minutes = null;
        seconds = null;
        signum = calcSignum((signum<0)?false:true);
!!!4925570.java!!!	DurationYearMonthImpl(inout lexicalRepresentation : String)
        super(lexicalRepresentation);
        if (getDays() > 0 || getHours() > 0
                || getMinutes() > 0 || getSeconds() > 0) {
            throw new IllegalArgumentException(
                    "Trying to create an xdt:yearMonthDuration with an invalid"
                    + " lexical representation of \"" + lexicalRepresentation
                    + "\", data model requires PnYnM.");
        }
        convertToCanonicalYearMonth();
!!!4925698.java!!!	getValue() : int
        return getYears() * 12 + getMonths();
!!!4925826.java!!!	convertToCanonicalYearMonth() : void
        while (getMonths() >= 12)
        {
            months = months.subtract(BigInteger.valueOf(12));
            years = BigInteger.valueOf((long) getYears()).add(BigInteger.ONE);
        }
