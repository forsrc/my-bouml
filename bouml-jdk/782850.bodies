class FunctionTable
!!!5869442.java!!!	getFunctionName(in funcID : int) : String
      if (funcID < NUM_BUILT_IN_FUNCS) return m_functions[funcID].getName();
      else return m_functions_customer[funcID - NUM_BUILT_IN_FUNCS].getName();
!!!5869570.java!!!	getFunction(in which : int) : Function
          try{
              if (which < NUM_BUILT_IN_FUNCS)
                  return (Function) m_functions[which].newInstance();
              else
                  return (Function) m_functions_customer[
                      which-NUM_BUILT_IN_FUNCS].newInstance();
          }catch (IllegalAccessException ex){
                  throw new TransformerException(ex.getMessage());
          }catch (InstantiationException ex){
                  throw new TransformerException(ex.getMessage());
          }
!!!5869698.java!!!	getFunctionID(inout key : String) : Object
          Object id = m_functionID_customer.get(key);
          if (null == id) id = m_functionID.get(key);
          return id;
!!!5869826.java!!!	installFunction(inout name : String, inout func : Class) : int

    int funcIndex;
    Object funcIndexObj = getFunctionID(name);

    if (null != funcIndexObj)
    {
      funcIndex = ((Integer) funcIndexObj).intValue();

      if (funcIndex < NUM_BUILT_IN_FUNCS){
              funcIndex = m_funcNextFreeIndex++;
              m_functionID_customer.put(name, new Integer(funcIndex));
      }
      m_functions_customer[funcIndex - NUM_BUILT_IN_FUNCS] = func;
    }
    else
    {
            funcIndex = m_funcNextFreeIndex++;

            m_functions_customer[funcIndex-NUM_BUILT_IN_FUNCS] = func;

            m_functionID_customer.put(name,
                new Integer(funcIndex));
    }
    return funcIndex;
!!!5869954.java!!!	functionAvailable(inout methName : String) : boolean
      Object tblEntry = m_functionID.get(methName);
      if (null != tblEntry) return true;
      else{
              tblEntry = m_functionID_customer.get(methName);
              return (null != tblEntry)? true : false;
      }
