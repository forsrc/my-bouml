format 222
"objects" // jdk1.8::com::sun::org::apache::xpath::internal::objects
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xpath/internal/objects/"
  java_package "com.sun.org.apache.xpath.internal.objects"
  classview 156418 "objects"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 583298 "XObject"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an XPath object, and is capable of
converting the object to various types, such as a string.
This class acts as the base class to other XPath type objects,
such as XString, and provides polymorphic casting capabilities.
@xsl.usage general
"
      classrelation 2585730 // <generalisation>
	relation 2585730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2585730 // <generalisation>
	  b parent class_ref 775682 // Expression
      end

      classrelation 2585858 // <realization>
	relation 2585858 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2585858 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2585986 // <realization>
	relation 2585986 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2585986 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1255426 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -821887098985662951L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2586114 // m_obj (<unidirectional association>)
	relation 2586114 --->
	  a role_name "m_obj" protected
	    comment "
The java object which this object wraps.
 @serial

 This may be NULL!!!"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2586114 // m_obj (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 5831810 "XObject"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XObject.
"
      end

      operation 5831938 "XObject"
	public explicit_return_type ""
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XObject.

@param obj Can be any object, should be a specific type
for derived classes, or null.
"
      end

      operation 5832066 "setObject"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5832194 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For support of literal objects in xpaths.

@param xctxt The XPath execution context.

@return This object.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5832322 "allowDetachToRelease"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify if it's OK for detach to release the iterator for reuse.
This function should be called with a value of false for objects that are
stored in variables.
Calling this with a value of false on a XNodeSet will cause the nodeset
to be cached.

@param allowRelease true if it is OK for detach to release this iterator
for pooling.
"
      end

      operation 5832450 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the <code>DTMIterator</code> from the set which it iterated
over, releasing any computational resources and placing the iterator
in the INVALID state. After <code>detach</code> has been invoked,
calls to <code>nextNode</code> or <code>previousNode</code> will
raise a runtime exception.
"
      end

      operation 5832578 "destruct"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the object to release it's resources.  This is more harsh than
detach().
"
      end

      operation 5832706 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset for fresh reuse.
"
      end

      operation 5832834 "dispatchCharactersEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
characters method on the passed ContentHandler for the
string-value. Multiple calls to the
ContentHandler's characters methods may well occur for a single call to
this method.

@param ch A non-null reference to a ContentHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5832962 "create"
	class_operation public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "val" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the right XObject based on the type of the object passed.  This
function can not make an XObject that exposes DOM Nodes, NodeLists, and
NodeIterators to the XSLT stylesheet as node-sets.

@param val The java object which this object will wrap.

@return the right XObject based on the type of the object passed.
"
      end

      operation 5833090 "create"
	class_operation public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "val" type class_ref 129538 // Object
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the right XObject based on the type of the object passed.
This function <emph>can</emph> make an XObject that exposes DOM Nodes, NodeLists, and
NodeIterators to the XSLT stylesheet as node-sets.

@param val The java object which this object will wrap.
@param xctxt The XPath context.

@return the right XObject based on the type of the object passed.
"
      end

      attribute 1255554 "CLASS_NULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for NULL object type 
"
      end

      attribute 1255682 "CLASS_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for UNKNOWN object type 
"
      end

      attribute 1255810 "CLASS_BOOLEAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for BOOLEAN  object type 
"
      end

      attribute 1255938 "CLASS_NUMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for NUMBER object type 
"
      end

      attribute 1256066 "CLASS_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for STRING object type 
"
      end

      attribute 1256194 "CLASS_NODESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for NODESET object type 
"
      end

      attribute 1256322 "CLASS_RTREEFRAG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant for RESULT TREE FRAGMENT object type 
"
      end

      attribute 1256450 "CLASS_UNRESOLVEDVARIABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 600"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents an unresolved variable type as an integer. 
"
      end

      operation 5833218 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell what kind of class this is.

@return CLASS_UNKNOWN
"
      end

      operation 5833346 "getTypeString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a request type, return the equivalent string.
For diagnostic purposes.

@return type string \"#UNKNOWN\" + object class name
"
      end

      operation 5833474 "num"
	public explicit_return_type "double"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number. Always issues an error.

@return 0.0

@throws javax.xml.transform.TransformerException
"
      end

      operation 5833602 "numWithSideEffects"
	public explicit_return_type "double"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number, but allow side effects, such as the
incrementing of an iterator.

@return numeric value of the string conversion from the
next node in the NodeSetDTM, or NAN if no node was found
"
      end

      operation 5833730 "bool"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean. Always issues an error.

@return false

@throws javax.xml.transform.TransformerException
"
      end

      operation 5833858 "boolWithSideEffects"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean, but allow side effects, such as the
incrementing of an iterator.

@return True if there is a next node in the nodeset
"
      end

      operation 5833986 "xstr"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5834114 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The object as a string
"
      end

      operation 5834242 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the string representation of the object


@return the string representation of the object
"
      end

      operation 5834370 "rtf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a result tree fragment.

@param support XPath context to use for the conversion

@return the objec as a result tree fragment.
"
      end

      operation 5834498 "rtree"
	public return_type class_ref 650114 // DocumentFragment
	nparams 1
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a result tree fragment.

@param support XPath context to use for the conversion

@return the objec as a result tree fragment.
"
      end

      operation 5834626 "rtree"
	public return_type class_ref 650114 // DocumentFragment
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For functions to override.

@return null
"
      end

      operation 5834754 "rtf"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For functions to override.

@return null
"
      end

      operation 5834882 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a java object that's closest to the representation
that should be handed to an extension.

@return The object that this class wraps
"
      end

      operation 5835010 "iter"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist. Always issues an error.

@return null

@throws javax.xml.transform.TransformerException
"
      end

      operation 5835138 "getFresh"
	public return_type class_ref 583298 // XObject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a fresh copy of the object.  For use with variables.

@return This object, unless overridden by subclass.
"
      end

      operation 5835266 "nodeset"
	public return_type class_ref 583042 // NodeIterator
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist. Always issues an error.

@return null

@throws javax.xml.transform.TransformerException
"
      end

      operation 5835394 "nodelist"
	public return_type class_ref 333058 // NodeList
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist. Always issues an error.

@return null

@throws javax.xml.transform.TransformerException
"
      end

      operation 5835522 "mutableNodeset"
	public return_type class_ref 804994 // NodeSetDTM
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist. Always issues an error.

@return The object as a NodeSetDTM.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5835650 "castToType"
	public return_type class_ref 129538 // Object
	nparams 2
	  param in name "t" explicit_type "int"
	  param inout name "support" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast object to type t.

@param t Type of object to cast this to
@param support XPath context to use for the conversion

@return This object as the given type t

@throws javax.xml.transform.TransformerException
"
      end

      operation 5835778 "lessThan"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is less than the other.

@param obj2 Object to compare this to

@return True if this object is less than the given object

@throws javax.xml.transform.TransformerException
"
      end

      operation 5835906 "lessThanOrEqual"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is less than or equal to the other.

@param obj2 Object to compare this to

@return True if this object is less than or equal to the given object

@throws javax.xml.transform.TransformerException
"
      end

      operation 5836034 "greaterThan"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is greater than the other.

@param obj2 Object to compare this to

@return True if this object is greater than the given object

@throws javax.xml.transform.TransformerException
"
      end

      operation 5836162 "greaterThanOrEqual"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is greater than or equal to the other.

@param obj2 Object to compare this to

@return True if this object is greater than or equal to the given object

@throws javax.xml.transform.TransformerException
"
      end

      operation 5836290 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 Object to compare this to

@return True if this object is equal to the given object

@throws javax.xml.transform.TransformerException
"
      end

      operation 5836418 "notEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally not equal.

@param obj2 Object to compare this to

@return True if this object is not equal to the given object

@throws javax.xml.transform.TransformerException
"
      end

      operation 5836546 "error"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an error, and probably throw an
exception.

@param msg Error message to issue

@throws javax.xml.transform.TransformerException
"
      end

      operation 5836674 "error"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an error, and probably throw an
exception.

@param msg Error message to issue
@param args Arguments to use in the message

@throws javax.xml.transform.TransformerException
"
      end

      operation 5836802 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XObjects should not normally need to fix up variables.
"
      end

      operation 5836930 "appendToFsb"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fsb" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.


NEEDSDOC @param fsb
@return The string this wraps or the empty string if null
"
      end

      operation 5837058 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end

      operation 5837186 "deepEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see Expression#deepEquals(Expression)
"
      end
    end

    class 806018 "DTMXRTreeFrag"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
@author igorh

Simple wrapper to DTM and XPathContext objects.
Used in XRTreeFrag for caching references to the objects.
"
      classrelation 2615298 // m_dtm (<unidirectional association>)
	relation 2615298 --->
	  a role_name "m_dtm" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615298 // m_dtm (<unidirectional association>)
	  b parent class_ref 618754 // DTM
      end

      attribute 1286018 "m_dtmIdentity"
	private explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2615426 // m_xctxt (<unidirectional association>)
	relation 2615426 --->
	  a role_name "m_xctxt" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615426 // m_xctxt (<unidirectional association>)
	  b parent class_ref 583682 // XPathContext
      end

      operation 5916034 "DTMXRTreeFrag"
	public explicit_return_type ""
	nparams 2
	  param in name "dtmIdentity" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5916162 "destruct"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5916290 "getDTM"
	package return_type class_ref 618754 // DTM
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5916418 "getDTMIdentity"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5916546 "getXPathContext"
	package return_type class_ref 583682 // XPathContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5916674 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5916802 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 807554 "XString"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an XPath string object, and is capable of
converting the string to other types, such as a number.
@xsl.usage general
"
      classrelation 2619266 // <generalisation>
	relation 2619266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2619266 // <generalisation>
	  b parent class_ref 583298 // XObject
      end

      classrelation 2619394 // <realization>
	relation 2619394 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2619394 // <realization>
	  b parent class_ref 619010 // XMLString
      end

      attribute 1287810 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2020470518395094525L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2619522 // EMPTYSTRING (<unidirectional association>)
	relation 2619522 --->
	  a role_name "EMPTYSTRING" init_value " new XString(\"\")" class_relation const_relation public
	    comment " Empty string XString object 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2619522 // EMPTYSTRING (<unidirectional association>)
	  b parent class_ref 807554 // XString
      end

      operation 5932290 "XString"
	protected explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XString object.  This constructor exists for derived classes.

@param val String object this will wrap.
"
      end

      operation 5932418 "XString"
	public explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val String object this will wrap.
"
      end

      operation 5932546 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell that this is a CLASS_STRING.

@return type CLASS_STRING
"
      end

      operation 5932674 "getTypeString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a request type, return the equivalent string.
For diagnostic purposes.

@return type string \"#STRING\"
"
      end

      operation 5932802 "hasString"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this object contains a java String object.

@return true if this XMLString can return a string without creating one.
"
      end

      operation 5932930 "num"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number.

@return 0.0 if this string is null, numeric value of this string
or NaN
"
      end

      operation 5933058 "toDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a string to a double -- Allowed input is in fixed
notation ddd.fff.

@return A double value representation of the string, or return Double.NaN
if the string can not be converted.
"
      end

      operation 5933186 "bool"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean.

@return True if the length of this string object is greater
than 0.
"
      end

      operation 5933314 "xstr"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5933442 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5933570 "rtf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a result tree fragment.

@param support Xpath context to use for the conversion

@return A document fragment with this string as a child node
"
      end

      operation 5933698 "dispatchCharactersEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
characters method on the passed ContentHandler for the
string-value. Multiple calls to the
ContentHandler's characters methods may well occur for a single call to
this method.

@param ch A non-null reference to a ContentHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5933826 "dispatchAsComment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lh" type class_ref 617602 // LexicalHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
comment method on the passed LexicalHandler for the
string-value.

@param lh A non-null reference to a LexicalHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5933954 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of this string.

@return  the length of the sequence of characters represented by this
         object.
"
      end

      operation 5934082 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character at the specified index. An index ranges
from <code>0</code> to <code>length() - 1</code>. The first character
of the sequence is at index <code>0</code>, the next at index
<code>1</code>, and so on, as for array indexing.

@param      index   the index of the character.
@return     the character at the specified index of this string.
            The first character is at index <code>0</code>.
@exception  IndexOutOfBoundsException  if the <code>index</code>
            argument is negative or not less than the length of this
            string.
"
      end

      operation 5934210 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies characters from this string into the destination character
array.

@param      srcBegin   index of the first character in the string
                       to copy.
@param      srcEnd     index after the last character in the string
                       to copy.
@param      dst        the destination array.
@param      dstBegin   the start offset in the destination array.
@exception IndexOutOfBoundsException If any of the following
           is true:
           <ul><li><code>srcBegin</code> is negative.
           <li><code>srcBegin</code> is greater than <code>srcEnd</code>
           <li><code>srcEnd</code> is greater than the length of this
               string
           <li><code>dstBegin</code> is negative
           <li><code>dstBegin+(srcEnd-srcBegin)</code> is larger than
               <code>dst.length</code></ul>
@exception NullPointerException if <code>dst</code> is <code>null</code>
"
      end

      operation 5934338 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 Object to compare this to

@return true if the two objects are equal

@throws javax.xml.transform.TransformerException
"
      end

      operation 5934466 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified <code>String</code>.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   obj2   the object to compare this <code>String</code> against.
@return  <code>true</code> if the <code>String</code>s are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5934594 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param obj2   the object to compare this <code>String</code>
                    against.
@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5934722 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   obj2       the object to compare this <code>String</code>
                    against.
@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5934850 "equalsIgnoreCase"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>String</code> to another <code>String</code>,
ignoring case considerations.  Two strings are considered equal
ignoring case if they are of the same length, and corresponding
characters in the two strings are equal ignoring case.

@param   anotherString   the <code>String</code> to compare this
                         <code>String</code> against.
@return  <code>true</code> if the argument is not <code>null</code>
         and the <code>String</code>s are equal,
         ignoring case; <code>false</code> otherwise.
@see     #equals(Object)
@see     java.lang.Character#toLowerCase(char)
@see java.lang.Character#toUpperCase(char)
"
      end

      operation 5934978 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xstr" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically.

@param   xstr   the <code>String</code> to be compared.

@return  the value <code>0</code> if the argument string is equal to
         this string; a value less than <code>0</code> if this string
         is lexicographically less than the string argument; and a
         value greater than <code>0</code> if this string is
         lexicographically greater than the string argument.
@exception java.lang.NullPointerException if <code>anotherString</code>
         is <code>null</code>.
"
      end

      operation 5935106 "compareToIgnoreCase"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically, ignoring case considerations.
This method returns an integer whose sign is that of
<code>this.toUpperCase().toLowerCase().compareTo(
str.toUpperCase().toLowerCase())</code>.
<p>
Note that this method does <em>not</em> take locale into account,
and will result in an unsatisfactory ordering for certain locales.
The java.text package provides <em>collators</em> to allow
locale-sensitive ordering.

@param   str   the <code>String</code> to be compared.
@return  a negative integer, zero, or a positive integer as the
         the specified String is greater than, equal to, or less
         than this String, ignoring case considerations.
@see     java.text.Collator#compare(String, String)
@since   1.2
"
      end

      operation 5935234 "startsWith"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param in name "toffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix beginning
a specified index.

@param   prefix    the prefix.
@param   toffset   where to begin looking in the string.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index <code>toffset</code>; <code>false</code> otherwise.
         The result is <code>false</code> if <code>toffset</code> is
         negative or greater than the length of this
         <code>String</code> object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.subString(toffset).startsWith(prefix)
         </pre>
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5935362 "startsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; <code>false</code> otherwise.
         Note also that <code>true</code> will be returned if the
         argument is an empty string or is equal to this
         <code>String</code> object as determined by the
         {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5935490 "startsWith"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 619010 // XMLString
	  param in name "toffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix beginning
a specified index.

@param   prefix    the prefix.
@param   toffset   where to begin looking in the string.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index <code>toffset</code>; <code>false</code> otherwise.
         The result is <code>false</code> if <code>toffset</code> is
         negative or greater than the length of this
         <code>String</code> object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.subString(toffset).startsWith(prefix)
         </pre>
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5935618 "startsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; <code>false</code> otherwise.
         Note also that <code>true</code> will be returned if the
         argument is an empty string or is equal to this
         <code>String</code> object as determined by the
         {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5935746 "endsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "suffix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string ends with the specified suffix.

@param   suffix   the suffix.
@return  <code>true</code> if the character sequence represented by the
         argument is a suffix of the character sequence represented by
         this object; <code>false</code> otherwise. Note that the
         result will be <code>true</code> if the argument is the
         empty string or is equal to this <code>String</code> object
         as determined by the {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>suffix</code> is
         <code>null</code>.
"
      end

      operation 5935874 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this string. The hashcode for a
<code>String</code> object is computed as
<blockquote><pre>
s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
</pre></blockquote>
using <code>int</code> arithmetic, where <code>s[i]</code> is the
<i>i</i>th character of the string, <code>n</code> is the length of
the string, and <code>^</code> indicates exponentiation.
(The hash value of the empty string is zero.)

@return  a hash code value for this object.
"
      end

      operation 5936002 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character. If a character with value <code>ch</code> occurs
in the character sequence represented by this <code>String</code>
object, then the index of the first such occurrence is returned --
that is, the smallest value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is <code>true</code>. If no such character occurs in this string,
then <code>-1</code> is returned.

@param   ch   a character.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object, or
         <code>-1</code> if the character does not occur.
"
      end

      operation 5936130 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character, starting the search at the specified index.
<p>
If a character with value <code>ch</code> occurs in the character
sequence represented by this <code>String</code> object at an index
no smaller than <code>fromIndex</code>, then the index of the first
such occurrence is returned--that is, the smallest value <i>k</i>
such that:
<blockquote><pre>
(this.charAt(<i>k</i>) == ch) && (<i>k</i> >= fromIndex)
</pre></blockquote>
is true. If no such character occurs in this string at or after
position <code>fromIndex</code>, then <code>-1</code> is returned.
<p>
There is no restriction on the value of <code>fromIndex</code>. If it
is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: <code>-1</code> is returned.

@param   ch          a character.
@param   fromIndex   the index to start the search from.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object that is greater
         than or equal to <code>fromIndex</code>, or <code>-1</code>
         if the character does not occur.
"
      end

      operation 5936258 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified character. That is, the index returned is the largest
value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is true.
The String is searched backwards starting at the last character.

@param   ch   a character.
@return  the index of the last occurrence of the character in the
         character sequence represented by this object, or
         <code>-1</code> if the character does not occur.
"
      end

      operation 5936386 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified character, searching backward starting at the specified
index. That is, the index returned is the largest value <i>k</i>
such that:
<blockquote><pre>
this.charAt(k) == ch) && (k <= fromIndex)
</pre></blockquote>
is true.

@param   ch          a character.
@param   fromIndex   the index to start the search from. There is no
         restriction on the value of <code>fromIndex</code>. If it is
         greater than or equal to the length of this string, it has
         the same effect as if it were equal to one less than the
         length of this string: this entire string may be searched.
         If it is negative, it has the same effect as if it were -1:
         -1 is returned.
@return  the index of the last occurrence of the character in the
         character sequence represented by this object that is less
         than or equal to <code>fromIndex</code>, or <code>-1</code>
         if the character does not occur before that point.
"
      end

      operation 5936514 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring. The integer returned is the smallest value
<i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
is <code>true</code>.

@param   str   any string.
@return  if the string argument occurs as a substring within this
         object, then the index of the first character of the first
         such substring is returned; if it does not occur as a
         substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5936642 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring. The integer returned is the smallest value
<i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
is <code>true</code>.

@param   str   any string.
@return  if the string argument occurs as a substring within this
         object, then the index of the first character of the first
         such substring is returned; if it does not occur as a
         substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5936770 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring, starting at the specified index. The integer
returned is the smallest value <i>k</i> such that:
<blockquote><pre>
this.startsWith(str, <i>k</i>) && (<i>k</i> >= fromIndex)
</pre></blockquote>
is <code>true</code>.
<p>
There is no restriction on the value of <code>fromIndex</code>. If
it is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: <code>-1</code> is returned.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from.
@return  If the string argument occurs as a substring within this
         object at a starting index no smaller than
         <code>fromIndex</code>, then the index of the first character
         of the first such substring is returned. If it does not occur
         as a substring starting at <code>fromIndex</code> or beyond,
         <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>
"
      end

      operation 5936898 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the rightmost occurrence
of the specified substring.  The rightmost empty string \"\" is
considered to occur at the index value <code>this.length()</code>.
The returned index is the largest value <i>k</i> such that
<blockquote><pre>
this.startsWith(str, k)
</pre></blockquote>
is true.

@param   str   the substring to search for.
@return  if the string argument occurs one or more times as a substring
         within this object, then the index of the first character of
         the last such substring is returned. If it does not occur as
         a substring, <code>-1</code> is returned.
@exception java.lang.NullPointerException  if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5937026 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of
the specified substring.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from. There is no
         restriction on the value of fromIndex. If it is greater than
         the length of this string, it has the same effect as if it
         were equal to the length of this string: this entire string
         may be searched. If it is negative, it has the same effect
         as if it were -1: -1 is returned.
@return  If the string argument occurs one or more times as a substring
         within this object at a starting index no greater than
         <code>fromIndex</code>, then the index of the first character of
         the last such substring is returned. If it does not occur as a
         substring starting at <code>fromIndex</code> or earlier,
         <code>-1</code> is returned.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5937154 "substring"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param in name "beginIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins with the character at the specified index and
extends to the end of this string. <p>
Examples:
<blockquote><pre>
\"unhappy\".substring(2) returns \"happy\"
\"Harbison\".substring(3) returns \"bison\"
\"emptiness\".substring(9) returns \"\" (an empty string)
</pre></blockquote>

@param      beginIndex   the beginning index, inclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if
            <code>beginIndex</code> is negative or larger than the
            length of this <code>String</code> object.
"
      end

      operation 5937282 "substring"
	public return_type class_ref 619010 // XMLString
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins at the specified <code>beginIndex</code> and
extends to the character at index <code>endIndex - 1</code>.
Thus the length of the substring is <code>endIndex-beginIndex</code>.

@param      beginIndex   the beginning index, inclusive.
@param      endIndex     the ending index, exclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if the
            <code>beginIndex</code> is negative, or
            <code>endIndex</code> is larger than the length of
            this <code>String</code> object, or
            <code>beginIndex</code> is larger than
            <code>endIndex</code>.
"
      end

      operation 5937410 "concat"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the specified string to the end of this string.

@param   str   the <code>String</code> that is concatenated to the end
               of this <code>String</code>.
@return  a string that represents the concatenation of this object's
         characters followed by the string argument's characters.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5937538 "toLowerCase"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to lower
case using the rules of the given <code>Locale</code>.

@param locale use the case transformation rules for this locale
@return the String, converted to lowercase.
@see     java.lang.Character#toLowerCase(char)
@see     java.lang.String#toUpperCase(Locale)
"
      end

      operation 5937666 "toLowerCase"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to lower
case using the rules of the default locale, which is returned
by <code>Locale.getDefault</code>.
<p>

@return  the string, converted to lowercase.
@see     java.lang.Character#toLowerCase(char)
@see     java.lang.String#toLowerCase(Locale)
"
      end

      operation 5937794 "toUpperCase"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to upper
case using the rules of the given locale.
@param locale use the case transformation rules for this locale
@return the String, converted to uppercase.
@see     java.lang.Character#toUpperCase(char)
@see     java.lang.String#toLowerCase(Locale)
"
      end

      operation 5937922 "toUpperCase"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this <code>String</code> to upper
case using the rules of the default locale, which is returned
by <code>Locale.getDefault</code>.

<p>
If no character in this string has a different uppercase version,
based on calling the <code>toUpperCase</code> method defined by
<code>Character</code>, then the original string is returned.
<p>
Otherwise, this method creates a new <code>String</code> object
representing a character sequence identical in length to the
character sequence represented by this <code>String</code> object and
with every character equal to the result of applying the method
<code>Character.toUpperCase</code> to the corresponding character of
this <code>String</code> object. <p>
Examples:
<blockquote><pre>
\"Fahrvergn&uuml;gen\".toUpperCase() returns \"FAHRVERGN&Uuml;GEN\"
\"Visit Ljubinje!\".toUpperCase() returns \"VISIT LJUBINJE!\"
</pre></blockquote>

@return  the string, converted to uppercase.
@see     java.lang.Character#toUpperCase(char)
@see     java.lang.String#toUpperCase(Locale)
"
      end

      operation 5938050 "trim"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes white space from both ends of this string.

@return  this string, with white space removed from the front and end.
"
      end

      operation 5938178 "isSpace"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified <var>ch</var> conforms to the XML 1.0 definition
of whitespace.  Refer to <A href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-S\">
the definition of <CODE>S</CODE></A> for details.
@param   ch      Character to check as XML whitespace.
@return          =true if <var>ch</var> is XML whitespace; otherwise =false.
"
      end

      operation 5938306 "fixWhiteSpace"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "trimHead" explicit_type "boolean"
	  param inout name "trimTail" explicit_type "boolean"
	  param inout name "doublePunctuationSpaces" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Conditionally trim all leading and trailing whitespace in the specified String.
All strings of white space are
replaced by a single space character (#x20), except spaces after punctuation which
receive double spaces if doublePunctuationSpaces is true.
This function may be useful to a formatter, but to get first class
results, the formatter should probably do it's own white space handling
based on the semantics of the formatting object.

@param   trimHead    Trim leading whitespace?
@param   trimTail    Trim trailing whitespace?
@param   doublePunctuationSpaces    Use double spaces for punctuation?
@return              The trimmed string.
"
      end

      operation 5938434 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end
    end

    class 807682 "XNumber"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an XPath number, and is capable of
converting the number to other types, such as a string.
@xsl.usage general
"
      classrelation 2618370 // <generalisation>
	relation 2618370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2618370 // <generalisation>
	  b parent class_ref 583298 // XObject
      end

      attribute 1287042 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2720400709619020193L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1287170 "m_val"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Value of the XNumber object.
 @serial         
"
      end

      operation 5926786 "XNumber"
	public explicit_return_type ""
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param d Value of the object
"
      end

      operation 5926914 "XNumber"
	public explicit_return_type ""
	nparams 1
	  param inout name "num" type class_ref 398210 // Number
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param num Value of the object
"
      end

      operation 5927042 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell that this is a CLASS_NUMBER.

@return node type CLASS_NUMBER
"
      end

      operation 5927170 "getTypeString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a request type, return the equivalent string.
For diagnostic purposes.

@return type string \"#NUMBER\"
"
      end

      operation 5927298 "num"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number.

@return the value of the XNumber object
"
      end

      operation 5927426 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate expression to a number.

@return 0.0

@throws javax.xml.transform.TransformerException
"
      end

      operation 5927554 "bool"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean.

@return false if the value is NaN or equal to 0.0
"
      end

      operation 5927682 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Cast result object to a string.
   *
   * @return \"NaN\" if the number is NaN, Infinity or -Infinity if
   * the number is infinite or the string value of the number.
   */
  private static final int PRECISION = 16;
  public String str()
  {

    if (Double.isNaN(m_val))
    {
      return \"NaN\";
    }
    else if (Double.isInfinite(m_val))
    {
      if (m_val > 0)
        return \"Infinity\";
      else
        return \"-Infinity\";
    }

    long longVal = (long)m_val;
    if ((double)longVal == m_val)
      return Long.toString(longVal);


    String s = Double.toString(m_val);
    int len = s.length();

    if (s.charAt(len - 2) == '.' && s.charAt(len - 1) == '0')
    {
      return s.substring(0, len - 2);
    }

    int exp = 0;
    int e = s.indexOf('E');
    if (e != -1)
    {
      exp = Integer.parseInt(s.substring(e + 1));
      s = s.substring(0,e);
      len = e;
    }

    // Calculate Significant Digits:
    // look from start of string for first digit
    // look from end for last digit
    // significant digits = end - start + (0 or 1 depending on decimal location)

    int decimalPos = -1;
    int start = (s.charAt(0) == '-') ? 1 : 0;
    findStart: for( ; start < len; start++ )
    {
      switch (s.charAt(start))
      {
      case '0':
        break;
      case '.':
        decimalPos = start;
        break;
      default:
        break findStart;
      }
    }
    int end = s.length() - 1;
    findEnd: for( ; end > start; end-- )
    {
      switch (s.charAt(end))
      {
      case '0':
        break;
      case '.':
        decimalPos = end;
        break;
      default:
        break findEnd;
      }
    }

    int sigDig = end - start;

    // clarify decimal location if it has not yet been found
    if (decimalPos == -1)
      decimalPos = s.indexOf('.');

    // if decimal is not between start and end, add one to sigDig
    if (decimalPos < start || decimalPos > end)
      ++sigDig;

    // reduce significant digits to PRECISION if necessary
    if (sigDig > PRECISION)
    {
      // re-scale BigDecimal in order to get significant digits = PRECISION
      BigDecimal num = new BigDecimal(s);
      int newScale = num.scale() - (sigDig - PRECISION);
      if (newScale < 0)
        newScale = 0;
      s = num.setScale(newScale, BigDecimal.ROUND_HALF_UP).toString();

      // remove trailing '0's; keep track of decimalPos
      int truncatePoint = s.length();
      while (s.charAt(--truncatePoint) == '0')
        ;

      if (s.charAt(truncatePoint) == '.')
      {
        decimalPos = truncatePoint;
      }
      else
      {
        decimalPos = s.indexOf('.');
        truncatePoint += 1;
      }

      s = s.substring(0, truncatePoint);
      len = s.length();
    }

    // Account for exponent by adding zeros as needed
    // and moving the decimal place

    if (exp == 0)
       return s;

    start = 0;
    String sign;
    if (s.charAt(0) == '-')
    {
      sign = \"-\";
      start++;
    }
    else
      sign = \"\";

    String wholePart = s.substring(start, decimalPos);
    String decimalPart = s.substring(decimalPos + 1);

    // get the number of digits right of the decimal
    int decimalLen = decimalPart.length();

    if (exp >= decimalLen)
      return sign + wholePart + decimalPart + zeros(exp - decimalLen);

    if (exp > 0)
      return sign + wholePart + decimalPart.substring(0, exp) + \".\"
             + decimalPart.substring(exp);

    return sign + \"0.\" + zeros(-1 - exp) + wholePart + decimalPart;
  }

Cast result object to a string.

@return \"NaN\" if the number is NaN, Infinity or -Infinity if
the number is infinite or the string value of the number.
"
      end

      operation 5927810 "zeros"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string of '0' of the given length


@param n Length of the string to be returned

@return a string of '0' with the given length
"
      end

      operation 5927938 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a java object that's closest to the representation
that should be handed to an extension.

@return The value of this XNumber as a Double object
"
      end

      operation 5928066 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 Object to compare this to

@return true if the two objects are equal

@throws javax.xml.transform.TransformerException
"
      end

      operation 5928194 "isStableNumber"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this expression returns a stable number that will not change during
iterations within the expression.  This is used to determine if a proximity
position predicate can indicate that no more searching has to occur.


@return true if the expression represents a stable number.
"
      end

      operation 5928322 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see com.sun.org.apache.xpath.internal.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)
"
      end
    end

    class 809346 "XNodeSet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an XPath nodeset object, and is capable of
converting the nodeset to other types, such as a string.
@xsl.usage general
"
      classrelation 2616322 // <generalisation>
	relation 2616322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2616322 // <generalisation>
	  b parent class_ref 810370 // NodeSequence
      end

      attribute 1286658 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 1916026368035639667L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5918978 "XNodeSet"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor for derived objects.
"
      end

      operation 5919106 "XNodeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val Value of the XNodeSet object
"
      end

      operation 5919234 "XNodeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 809346 // XNodeSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val Value of the XNodeSet object
"
      end

      operation 5919362 "XNodeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "dtmMgr" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty XNodeSet object.  This is used to create a mutable
nodeset to which random nodes may be added.
"
      end

      operation 5919490 "XNodeSet"
	public explicit_return_type ""
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "dtmMgr" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object for one node.

@param n Node to add to the new XNodeSet object
"
      end

      operation 5919618 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell that this is a CLASS_NODESET.

@return type CLASS_NODESET
"
      end

      operation 5919746 "getTypeString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a request type, return the equivalent string.
For diagnostic purposes.

@return type string \"#NODESET\"
"
      end

      operation 5919874 "getNumberFromNode"
	public explicit_return_type "double"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get numeric value of the string conversion from a single node.

@param n Node to convert

@return numeric value of the string conversion from a single node.
"
      end

      operation 5920002 "num"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number.

@return numeric value of the string conversion from the
next node in the NodeSetDTM, or NAN if no node was found
"
      end

      operation 5920130 "numWithSideEffects"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number, but allow side effects, such as the
incrementing of an iterator.

@return numeric value of the string conversion from the
next node in the NodeSetDTM, or NAN if no node was found
"
      end

      operation 5920258 "bool"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean.

@return True if there is a next node in the nodeset
"
      end

      operation 5920386 "boolWithSideEffects"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean, but allow side effects, such as the
incrementing of an iterator.

@return True if there is a next node in the nodeset
"
      end

      operation 5920514 "getStringFromNode"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the string conversion from a single node.

@param n Node to convert

@return the string conversion from a single node.
"
      end

      operation 5920642 "dispatchCharactersEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
characters method on the passed ContentHandler for the
string-value. Multiple calls to the
ContentHandler's characters methods may well occur for a single call to
this method.

@param ch A non-null reference to a ContentHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5920770 "xstr"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to an XMLString.

@return The document fragment node data or the empty string.
"
      end

      operation 5920898 "appendToFsb"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fsb" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5921026 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return the string conversion from the next node in the nodeset
or \"\" if there is no next node
"
      end

      operation 5921154 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a java object that's closest to the representation
that should be handed to an extension.

@return The object that this class wraps
"
      end

      operation 5921282 "nodeset"
	public return_type class_ref 583042 // NodeIterator
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " %REVIEW%
 hmmm...
  /**
   * Cast result object to a result tree fragment.
   *
   * @param support The XPath context to use for the conversion
   *
   * @return the nodeset as a result tree fragment.
   */
  public DocumentFragment rtree(XPathContext support)
  {
    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
    DocumentBuilder db = dbf.newDocumentBuilder();
    Document myDoc = db.newDocument();

    DocumentFragment docFrag = myDoc.createDocumentFragment();

    DTMIterator nl = iter();
    int node;

    while (DTM.NULL != (node = nl.nextNode()))
    {
      frag.appendChild(node, true, true);
    }

    return frag.getDocument();
  }

Cast result object to a nodelist.

@return a NodeIterator.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5921410 "nodelist"
	public return_type class_ref 333058 // NodeList
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist.

@return a NodeList.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5921538 "iterRaw"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Return a java object that's closest to the representation
   * that should be handed to an extension.
   *
   * @return The object that this class wraps
   */
  public Object object()
  {
    return new com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList(iter());
  }

Return the iterator without cloning, etc.
"
      end

      operation 5921666 "release"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iter" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5921794 "iter"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist.

@return The nodeset as a nodelist
"
      end

      operation 5921922 "getFresh"
	public return_type class_ref 583298 // XObject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a fresh copy of the object.  For use with variables.

@return A fresh nodelist.
"
      end

      operation 5922050 "mutableNodeset"
	public return_type class_ref 804994 // NodeSetDTM
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a mutableNodeset.

@return The nodeset as a mutableNodeset
"
      end

      classrelation 2616450 // S_LT (<unidirectional association>)
	relation 2616450 --->
	  a role_name "S_LT" init_value " new LessThanComparator()" class_relation const_relation package
	    comment " Less than comparator         
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616450 // S_LT (<unidirectional association>)
	  b parent class_ref 822146 // LessThanComparator
      end

      classrelation 2616578 // S_LTE (<unidirectional association>)
	relation 2616578 --->
	  a role_name "S_LTE" init_value " new LessThanOrEqualComparator()" class_relation const_relation package
	    comment " Less than or equal comparator          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616578 // S_LTE (<unidirectional association>)
	  b parent class_ref 822274 // LessThanOrEqualComparator
      end

      classrelation 2616706 // S_GT (<unidirectional association>)
	relation 2616706 --->
	  a role_name "S_GT" init_value " new GreaterThanComparator()" class_relation const_relation package
	    comment " Greater than comparator         
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616706 // S_GT (<unidirectional association>)
	  b parent class_ref 822402 // GreaterThanComparator
      end

      classrelation 2616834 // S_GTE (<unidirectional association>)
	relation 2616834 --->
	  a role_name "S_GTE" init_value "
    new GreaterThanOrEqualComparator()" class_relation const_relation package
	    comment " Greater than or equal comparator          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616834 // S_GTE (<unidirectional association>)
	  b parent class_ref 822530 // GreaterThanOrEqualComparator
      end

      classrelation 2616962 // S_EQ (<unidirectional association>)
	relation 2616962 --->
	  a role_name "S_EQ" init_value " new EqualComparator()" class_relation const_relation package
	    comment " Equal comparator         
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616962 // S_EQ (<unidirectional association>)
	  b parent class_ref 822658 // EqualComparator
      end

      classrelation 2617090 // S_NEQ (<unidirectional association>)
	relation 2617090 --->
	  a role_name "S_NEQ" init_value " new NotEqualComparator()" class_relation const_relation package
	    comment " Not equal comparator         
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2617090 // S_NEQ (<unidirectional association>)
	  b parent class_ref 822786 // NotEqualComparator
      end

      operation 5922178 "compare"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "obj2" type class_ref 583298 // XObject
	  param inout name "comparator" type class_ref 822914 // Comparator
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is less than the other.

@param obj2 Object to compare this nodeset to
@param comparator Comparator to use

@return See the comments below for each object type comparison

@throws javax.xml.transform.TransformerException
"
      end

      operation 5922306 "lessThan"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is less than the other.

@param obj2 object to compare this nodeset to

@return see this.compare(...)

@throws javax.xml.transform.TransformerException
"
      end

      operation 5922434 "lessThanOrEqual"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is less than or equal to the other.

@param obj2 object to compare this nodeset to

@return see this.compare(...)

@throws javax.xml.transform.TransformerException
"
      end

      operation 5922562 "greaterThan"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is less than the other.

@param obj2 object to compare this nodeset to

@return see this.compare(...)

@throws javax.xml.transform.TransformerException
"
      end

      operation 5922690 "greaterThanOrEqual"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if one object is less than the other.

@param obj2 object to compare this nodeset to

@return see this.compare(...)

@throws javax.xml.transform.TransformerException
"
      end

      operation 5922818 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 object to compare this nodeset to

@return see this.compare(...)

@throws javax.xml.transform.TransformerException
"
      end

      operation 5922946 "notEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally not equal.

@param obj2 object to compare this nodeset to

@return see this.compare(...)

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 821762 "XBoolean"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an XPath boolean object, and is capable of
converting the boolean to other types, such as a string.
@xsl.usage advanced
"
      classrelation 2615554 // <generalisation>
	relation 2615554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2615554 // <generalisation>
	  b parent class_ref 583298 // XObject
      end

      attribute 1286146 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2964933058866100881L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2615682 // S_TRUE (<unidirectional association>)
	relation 2615682 --->
	  a role_name "S_TRUE" init_value " new XBooleanStatic(true)" class_relation const_relation public
	    comment "
A true boolean object so we don't have to keep creating them.
@xsl.usage internal

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615682 // S_TRUE (<unidirectional association>)
	  b parent class_ref 821762 // XBoolean
      end

      classrelation 2615810 // S_FALSE (<unidirectional association>)
	relation 2615810 --->
	  a role_name "S_FALSE" init_value " new XBooleanStatic(false)" class_relation const_relation public
	    comment "
A true boolean object so we don't have to keep creating them.
@xsl.usage internal

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615810 // S_FALSE (<unidirectional association>)
	  b parent class_ref 821762 // XBoolean
      end

      attribute 1286274 "m_val"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Value of the object.
 @serial         
"
      end

      operation 5916930 "XBoolean"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XBoolean object.

@param b Value of the boolean object
"
      end

      operation 5917058 "XBoolean"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XBoolean object.

@param b Value of the boolean object
"
      end

      operation 5917186 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell that this is a CLASS_BOOLEAN.

@return type of CLASS_BOOLEAN
"
      end

      operation 5917314 "getTypeString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a request type, return the equivalent string.
For diagnostic purposes.

@return type string \"#BOOLEAN\"
"
      end

      operation 5917442 "num"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number.

@return numeric value of the object value
"
      end

      operation 5917570 "bool"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean.

@return The object value as a boolean
"
      end

      operation 5917698 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The object's value as a string
"
      end

      operation 5917826 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a java object that's closest to the representation
that should be handed to an extension.

@return The object's value as a java object
"
      end

      operation 5917954 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 Object to compare to this

@return True if the two objects are equal

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 821890 "XBooleanStatic"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class doesn't have any XPathContext, so override
whatever to ensure it works OK.
@xsl.usage internal
"
      classrelation 2615938 // <generalisation>
	relation 2615938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2615938 // <generalisation>
	  b parent class_ref 821762 // XBoolean
      end

      attribute 1286402 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8064147275772687409L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1286530 "m_val"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The value of the object.
 @serial          
"
      end

      operation 5918082 "XBooleanStatic"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XBooleanStatic object.

@param b The value of the object
"
      end

      operation 5918210 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 Object to compare to this

@return True if the two objects are equal

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 822018 "XMLStringFactoryImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class XMLStringFactoryImpl creates XString versions of XMLStrings.
@xsl.usage internal
"
      classrelation 2616066 // <generalisation>
	relation 2616066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2616066 // <generalisation>
	  b parent class_ref 626946 // XMLStringFactory
      end

      classrelation 2616194 // m_xstringfactory (<unidirectional association>)
	relation 2616194 --->
	  a role_name "m_xstringfactory" init_value "
    new XMLStringFactoryImpl()" class_relation private
	    comment " The XMLStringFactory to pass to DTM construction.   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616194 // m_xstringfactory (<unidirectional association>)
	  b parent class_ref 626946 // XMLStringFactory
      end

      operation 5918338 "getFactory"
	class_operation public return_type class_ref 626946 // XMLStringFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XMLStringFactory to pass to DTM construction.


@return A never-null static reference to a String factory.
"
      end

      operation 5918466 "newstr"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "string" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new XMLString from a Java string.


@param string Java String reference, which must be non-null.

@return An XMLString object that wraps the String reference.
"
      end

      operation 5918594 "newstr"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "fsb" type class_ref 633730 // FastStringBuffer
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a XMLString from a FastStringBuffer.


@param fsb FastStringBuffer reference, which must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.

@return An XMLString object that wraps the FastStringBuffer reference.
"
      end

      operation 5918722 "newstr"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "string" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a XMLString from a FastStringBuffer.


@param string FastStringBuffer reference, which must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.

@return An XMLString object that wraps the FastStringBuffer reference.
"
      end

      operation 5918850 "emptystr"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cheap representation of an empty string.

@return An non-null reference to an XMLString that represents \"\".
"
      end
    end

    class 822146 "LessThanComparator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Compare strings or numbers for less than.
"
      classrelation 2617218 // <generalisation>
	relation 2617218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2617218 // <generalisation>
	  b parent class_ref 822914 // Comparator
      end

      operation 5923330 "compareStrings"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 619010 // XMLString
	  param inout name "s2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two strings for less than.


@param s1 First string to compare
@param s2 Second String to compare

@return True if s1 is less than s2
"
      end

      operation 5923458 "compareNumbers"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "n1" explicit_type "double"
	  param in name "n2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two numbers for less than.


@param n1 First number to compare
@param n2 Second number to compare

@return true if n1 is less than n2
"
      end
    end

    class 822274 "LessThanOrEqualComparator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Compare strings or numbers for less than or equal.
"
      classrelation 2617346 // <generalisation>
	relation 2617346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2617346 // <generalisation>
	  b parent class_ref 822914 // Comparator
      end

      operation 5923586 "compareStrings"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 619010 // XMLString
	  param inout name "s2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two strings for less than or equal.


@param s1 First string to compare
@param s2 Second String to compare

@return true if s1 is less than or equal to s2
"
      end

      operation 5923714 "compareNumbers"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "n1" explicit_type "double"
	  param in name "n2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two numbers for less than or equal.


@param n1 First number to compare
@param n2 Second number to compare

@return true if n1 is less than or equal to n2
"
      end
    end

    class 822402 "GreaterThanComparator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Compare strings or numbers for greater than.
"
      classrelation 2617474 // <generalisation>
	relation 2617474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2617474 // <generalisation>
	  b parent class_ref 822914 // Comparator
      end

      operation 5923842 "compareStrings"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 619010 // XMLString
	  param inout name "s2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two strings for greater than.


@param s1 First string to compare
@param s2 Second String to compare

@return true if s1 is greater than s2
"
      end

      operation 5923970 "compareNumbers"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "n1" explicit_type "double"
	  param in name "n2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two numbers for greater than.


@param n1 First number to compare
@param n2 Second number to compare

@return true if n1 is greater than n2
"
      end
    end

    class 822530 "GreaterThanOrEqualComparator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Compare strings or numbers for greater than or equal.
"
      classrelation 2617602 // <generalisation>
	relation 2617602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2617602 // <generalisation>
	  b parent class_ref 822914 // Comparator
      end

      operation 5924098 "compareStrings"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 619010 // XMLString
	  param inout name "s2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two strings for greater than or equal.


@param s1 First string to compare
@param s2 Second String to compare

@return true if s1 is greater than or equal to s2
"
      end

      operation 5924226 "compareNumbers"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "n1" explicit_type "double"
	  param in name "n2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two numbers for greater than or equal.


@param n1 First number to compare
@param n2 Second number to compare

@return true if n1 is greater than or equal to n2
"
      end
    end

    class 822658 "EqualComparator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Compare strings or numbers for equality.
"
      classrelation 2617730 // <generalisation>
	relation 2617730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2617730 // <generalisation>
	  b parent class_ref 822914 // Comparator
      end

      operation 5924354 "compareStrings"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 619010 // XMLString
	  param inout name "s2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two strings for equality.


@param s1 First string to compare
@param s2 Second String to compare

@return true if s1 is equal to s2
"
      end

      operation 5924482 "compareNumbers"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "n1" explicit_type "double"
	  param in name "n2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two numbers for equality.


@param n1 First number to compare
@param n2 Second number to compare

@return true if n1 is equal to n2
"
      end
    end

    class 822786 "NotEqualComparator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Compare strings or numbers for non-equality.
"
      classrelation 2617858 // <generalisation>
	relation 2617858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2617858 // <generalisation>
	  b parent class_ref 822914 // Comparator
      end

      operation 5924610 "compareStrings"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 619010 // XMLString
	  param inout name "s2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two strings for non-equality.


@param s1 First string to compare
@param s2 Second String to compare

@return true if s1 is not equal to s2
"
      end

      operation 5924738 "compareNumbers"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "n1" explicit_type "double"
	  param in name "n2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two numbers for non-equality.


@param n1 First number to compare
@param n2 Second number to compare

@return true if n1 is not equal to n2
"
      end
    end

    class 822914 "Comparator"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "compares nodes for various boolean operations.
"
      operation 5923074 "compareStrings"
	abstract package explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 619010 // XMLString
	  param inout name "s2" type class_ref 619010 // XMLString
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two strings


@param s1 First string to compare
@param s2 Second String to compare

@return Whether the strings are equal or not
"
      end

      operation 5923202 "compareNumbers"
	abstract package explicit_return_type "boolean"
	nparams 2
	  param in name "n1" explicit_type "double"
	  param in name "n2" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two numbers


@param n1 First number to compare
@param n2 Second number to compare

@return Whether the numbers are equal or not
"
      end
    end

    class 823042 "XNodeSetForDOM"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class overrides the XNodeSet#object() method to provide the original
Node object, NodeList object, or NodeIterator.
"
      classrelation 2617986 // <generalisation>
	relation 2617986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2617986 // <generalisation>
	  b parent class_ref 809346 // XNodeSet
      end

      attribute 1286786 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8396190713754624640L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2618114 // m_origObj (<unidirectional association>)
	relation 2618114 --->
	  a role_name "m_origObj" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618114 // m_origObj (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 5924866 "XNodeSetForDOM"
	public explicit_return_type ""
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "dtmMgr" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5924994 "XNodeSetForDOM"
	public explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 809346 // XNodeSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val Value of the XNodeSet object
"
      end

      operation 5925122 "XNodeSetForDOM"
	public explicit_return_type ""
	nparams 2
	  param inout name "nodeList" type class_ref 333058 // NodeList
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5925250 "XNodeSetForDOM"
	public explicit_return_type ""
	nparams 2
	  param inout name "nodeIter" type class_ref 583042 // NodeIterator
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5925378 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the original DOM object that the user passed in.  For use primarily
by the extension mechanism.

@return The object that this class wraps
"
      end

      operation 5925506 "nodeset"
	public return_type class_ref 583042 // NodeIterator
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist. Always issues an error.

@return null

@throws javax.xml.transform.TransformerException
"
      end

      operation 5925634 "nodelist"
	public return_type class_ref 333058 // NodeList
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist. Always issues an error.

@return null

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 823170 "XNull"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an XPath null object, and is capable of
converting the null to other types, such as a string.
@xsl.usage general
"
      classrelation 2618242 // <generalisation>
	relation 2618242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2618242 // <generalisation>
	  b parent class_ref 809346 // XNodeSet
      end

      attribute 1286914 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6841683711458983005L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5925762 "XNull"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XObject.
"
      end

      operation 5925890 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell what kind of class this is.

@return type CLASS_NULL
"
      end

      operation 5926018 "getTypeString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a request type, return the equivalent string.
For diagnostic purposes.

@return type string \"#CLASS_NULL\"
"
      end

      operation 5926146 "num"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number.

@return 0.0
"
      end

      operation 5926274 "bool"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean.

@return false
"
      end

      operation 5926402 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return empty string \"\"
"
      end

      operation 5926530 "rtf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a result tree fragment.

@param support XPath context to use for the conversion

@return The object as a result tree fragment.
"
      end

      operation 5926658 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Cast result object to a nodelist.
   *
   * @return null
   */
  public DTMIterator iter()
  {
    return null;
  }

Tell if two objects are functionally equal.

@param obj2 Object to compare this to

@return True if the given object is of type CLASS_NULL
"
      end
    end

    class 823298 "XObjectFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 5928450 "create"
	class_operation public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "val" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the right XObject based on the type of the object passed.  This
function can not make an XObject that exposes DOM Nodes, NodeLists, and
NodeIterators to the XSLT stylesheet as node-sets.

@param val The java object which this object will wrap.

@return the right XObject based on the type of the object passed.
"
      end

      operation 5928578 "create"
	class_operation public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "val" type class_ref 129538 // Object
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the right XObject based on the type of the object passed.
This function <emph>can</emph> make an XObject that exposes DOM Nodes, NodeLists, and
NodeIterators to the XSLT stylesheet as node-sets.

@param val The java object which this object will wrap.
@param xctxt The XPath context.

@return the right XObject based on the type of the object passed.
"
      end
    end

    class 823426 "XRTreeFrag"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an XPath result tree fragment object, and is capable of
converting the RTF to other types, such as a string.
@xsl.usage general
"
      classrelation 2618498 // <generalisation>
	relation 2618498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2618498 // <generalisation>
	  b parent class_ref 583298 // XObject
      end

      classrelation 2618626 // <realization>
	relation 2618626 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2618626 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1287298 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -3201553822254911567L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2618754 // m_DTMXRTreeFrag (<unidirectional association>)
	relation 2618754 --->
	  a role_name "m_DTMXRTreeFrag" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618754 // m_DTMXRTreeFrag (<unidirectional association>)
	  b parent class_ref 806018 // DTMXRTreeFrag
      end

      attribute 1287426 "m_dtmRoot"
	private explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1287554 "m_allowRelease"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5928706 "XRTreeFrag"
	public explicit_return_type ""
	nparams 3
	  param in name "root" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "parent" type class_ref 775810 // ExpressionNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XRTreeFrag Object.

"
      end

      operation 5928834 "XRTreeFrag"
	public explicit_return_type ""
	nparams 2
	  param in name "root" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XRTreeFrag Object.

"
      end

      operation 5928962 "initDTM"
	private explicit_return_type "void"
	nparams 2
	  param in name "root" explicit_type "int"
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5929090 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a java object that's closest to the representation
that should be handed to an extension.

@return The object that this class wraps
"
      end

      operation 5929218 "XRTreeFrag"
	public explicit_return_type ""
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XRTreeFrag Object.

"
      end

      operation 5929346 "allowDetachToRelease"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify if it's OK for detach to release the iterator for reuse.

@param allowRelease true if it is OK for detach to release this iterator
for pooling.
"
      end

      operation 5929474 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the <code>DTMIterator</code> from the set which it iterated
over, releasing any computational resources and placing the iterator
in the INVALID state. After <code>detach</code> has been invoked,
calls to <code>nextNode</code> or <code>previousNode</code> will
raise a runtime exception.

In general, detach should only be called once on the object.
"
      end

      operation 5929602 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell what kind of class this is.

@return type CLASS_RTREEFRAG
"
      end

      operation 5929730 "getTypeString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a request type, return the equivalent string.
For diagnostic purposes.

@return type string \"#RTREEFRAG\"
"
      end

      operation 5929858 "num"
	public explicit_return_type "double"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number.

@return The result tree fragment as a number or NaN
"
      end

      operation 5929986 "bool"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a boolean.  This always returns true for a RTreeFrag
because it is treated like a node-set with a single root node.

@return true
"
      end

      classrelation 2618882 // m_xmlStr (<unidirectional association>)
	relation 2618882 --->
	  a role_name "m_xmlStr" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618882 // m_xmlStr (<unidirectional association>)
	  b parent class_ref 619010 // XMLString
      end

      operation 5930114 "xstr"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to an XMLString.

@return The document fragment node data or the empty string.
"
      end

      operation 5930242 "appendToFsb"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fsb" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5930370 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The document fragment node data or the empty string.
"
      end

      operation 5930498 "rtf"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a result tree fragment.

@return The document fragment this wraps
"
      end

      operation 5930626 "asNodeIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a DTMIterator.
dml - modified to return an RTFIterator for
benefit of EXSLT object-type function in
{@link com.sun.org.apache.xalan.internal.lib.ExsltCommon}.
@return The document fragment as a DTMIterator
"
      end

      operation 5930754 "convertToNodeset"
	public return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a nodelist. (special function).

@return The document fragment as a nodelist
"
      end

      operation 5930882 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 Object to compare this to

@return True if the two objects are equal

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 823554 "XRTreeFragSelectWrapper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class makes an select statement act like an result tree fragment.
"
      classrelation 2619010 // <generalisation>
	relation 2619010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2619010 // <generalisation>
	  b parent class_ref 823426 // XRTreeFrag
      end

      classrelation 2619138 // <realization>
	relation 2619138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2619138 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1287682 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6526177905590461251L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5931010 "XRTreeFragSelectWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5931138 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5931266 "execute"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For support of literal objects in xpaths.

@param xctxt The XPath execution context.

@return the result of executing the select expression

@throws javax.xml.transform.TransformerException
"
      end

      operation 5931394 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the <code>DTMIterator</code> from the set which it iterated
over, releasing any computational resources and placing the iterator
in the INVALID state. After <code>detach</code> has been invoked,
calls to <code>nextNode</code> or <code>previousNode</code> will
raise a runtime exception.

In general, detach should only be called once on the object.
"
      end

      operation 5931522 "num"
	public explicit_return_type "double"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a number.

@return The result tree fragment as a number or NaN
"
      end

      operation 5931650 "xstr"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to an XMLString.

@return The document fragment node data or the empty string.
"
      end

      operation 5931778 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The document fragment node data or the empty string.
"
      end

      operation 5931906 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell what kind of class this is.

@return the string type
"
      end

      operation 5932034 "rtf"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a result tree fragment.

@return The document fragment this wraps
"
      end

      operation 5932162 "asNodeIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a DTMIterator.

@return The document fragment as a DTMIterator
"
      end
    end

    class 823682 "XStringForChars"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class will wrap a FastStringBuffer and allow for
"
      classrelation 2619650 // <generalisation>
	relation 2619650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2619650 // <generalisation>
	  b parent class_ref 807554 // XString
      end

      attribute 1287938 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2235248887220850467L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1288066 "m_start"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The start position in the fsb. 
"
      end

      attribute 1288194 "m_length"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The length of the string. 
"
      end

      classrelation 2619778 // m_strCache (<unidirectional association>)
	relation 2619778 --->
	  a role_name "m_strCache" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2619778 // m_strCache (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5938562 "XStringForChars"
	public explicit_return_type ""
	nparams 3
	  param inout name "val" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val FastStringBuffer object this will wrap, must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.
"
      end

      operation 5938690 "XStringForChars"
	private explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val String object this will wrap.
"
      end

      operation 5938818 "fsb"
	public return_type class_ref 633730 // FastStringBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5938946 "appendToFsb"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fsb" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5939074 "hasString"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this object contains a java String object.

@return true if this XMLString can return a string without creating one.
"
      end

      operation 5939202 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5939330 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Since this object is incomplete without the length and the offset, we
have to convert to a string when this function is called.

@return The java String representation of this object.
"
      end

      operation 5939458 "dispatchCharactersEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
characters method on the passed ContentHandler for the
string-value. Multiple calls to the
ContentHandler's characters methods may well occur for a single call to
this method.

@param ch A non-null reference to a ContentHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5939586 "dispatchAsComment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lh" type class_ref 617602 // LexicalHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
comment method on the passed LexicalHandler for the
string-value.

@param lh A non-null reference to a LexicalHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5939714 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of this string.

@return  the length of the sequence of characters represented by this
         object.
"
      end

      operation 5939842 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character at the specified index. An index ranges
from <code>0</code> to <code>length() - 1</code>. The first character
of the sequence is at index <code>0</code>, the next at index
<code>1</code>, and so on, as for array indexing.

@param      index   the index of the character.
@return     the character at the specified index of this string.
            The first character is at index <code>0</code>.
@exception  IndexOutOfBoundsException  if the <code>index</code>
            argument is negative or not less than the length of this
            string.
"
      end

      operation 5939970 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies characters from this string into the destination character
array.

@param      srcBegin   index of the first character in the string
                       to copy.
@param      srcEnd     index after the last character in the string
                       to copy.
@param      dst        the destination array.
@param      dstBegin   the start offset in the destination array.
@exception IndexOutOfBoundsException If any of the following
           is true:
           <ul><li><code>srcBegin</code> is negative.
           <li><code>srcBegin</code> is greater than <code>srcEnd</code>
           <li><code>srcEnd</code> is greater than the length of this
               string
           <li><code>dstBegin</code> is negative
           <li><code>dstBegin+(srcEnd-srcBegin)</code> is larger than
               <code>dst.length</code></ul>
@exception NullPointerException if <code>dst</code> is <code>null</code>
"
      end
    end

    class 823810 "XStringForFSB"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class will wrap a FastStringBuffer and allow for
"
      classrelation 2619906 // <generalisation>
	relation 2619906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2619906 // <generalisation>
	  b parent class_ref 807554 // XString
      end

      attribute 1288322 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1533039186550674548L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1288450 "m_start"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The start position in the fsb. 
"
      end

      attribute 1288578 "m_length"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The length of the string. 
"
      end

      classrelation 2620034 // m_strCache (<unidirectional association>)
	relation 2620034 --->
	  a role_name "m_strCache" init_value " null" protected
	    comment " If the str() function is called, the string will be cached here. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2620034 // m_strCache (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1288706 "m_hash"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " cached hash code 
"
      end

      operation 5940098 "XStringForFSB"
	public explicit_return_type ""
	nparams 3
	  param inout name "val" type class_ref 633730 // FastStringBuffer
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val FastStringBuffer object this will wrap, must be non-null.
@param start The start position in the array.
@param length The number of characters to read from the array.
"
      end

      operation 5940226 "XStringForFSB"
	private explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a XNodeSet object.

@param val String object this will wrap.
"
      end

      operation 5940354 "fsb"
	public return_type class_ref 633730 // FastStringBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5940482 "appendToFsb"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fsb" type class_ref 633730 // FastStringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5940610 "hasString"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this object contains a java String object.

@return true if this XMLString can return a string without creating one.
"
      end

      operation 5940738 "object"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /** NEEDSDOC Field strCount */
  public static int strCount = 0;

  /** NEEDSDOC Field xtable */
  static java.util.Hashtable xtable = new java.util.Hashtable();

Since this object is incomplete without the length and the offset, we
have to convert to a string when this function is called.

@return The java String representation of this object.
"
      end

      operation 5940866 "str"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.

@return The string this wraps or the empty string if null
"
      end

      operation 5940994 "dispatchCharactersEvents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ch" type class_ref 605954 // ContentHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
characters method on the passed ContentHandler for the
string-value. Multiple calls to the
ContentHandler's characters methods may well occur for a single call to
this method.

@param ch A non-null reference to a ContentHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5941122 "dispatchAsComment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lh" type class_ref 617602 // LexicalHandler
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Directly call the
comment method on the passed LexicalHandler for the
string-value.

@param lh A non-null reference to a LexicalHandler.

@throws org.xml.sax.SAXException
"
      end

      operation 5941250 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of this string.

@return  the length of the sequence of characters represented by this
         object.
"
      end

      operation 5941378 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character at the specified index. An index ranges
from <code>0</code> to <code>length() - 1</code>. The first character
of the sequence is at index <code>0</code>, the next at index
<code>1</code>, and so on, as for array indexing.

@param      index   the index of the character.
@return     the character at the specified index of this string.
            The first character is at index <code>0</code>.
@exception  IndexOutOfBoundsException  if the <code>index</code>
            argument is negative or not less than the length of this
            string.
"
      end

      operation 5941506 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies characters from this string into the destination character
array.

@param      srcBegin   index of the first character in the string
                       to copy.
@param      srcEnd     index after the last character in the string
                       to copy.
@param      dst        the destination array.
@param      dstBegin   the start offset in the destination array.
@exception IndexOutOfBoundsException If any of the following
           is true:
           <ul><li><code>srcBegin</code> is negative.
           <li><code>srcBegin</code> is greater than <code>srcEnd</code>
           <li><code>srcEnd</code> is greater than the length of this
               string
           <li><code>dstBegin</code> is negative
           <li><code>dstBegin+(srcEnd-srcBegin)</code> is larger than
               <code>dst.length</code></ul>
@exception NullPointerException if <code>dst</code> is <code>null</code>
"
      end

      operation 5941634 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   obj2       the object to compare this <code>String</code>
                    against.

@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5941762 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param obj2 Object to compare this to

@return true if the two objects are equal

@throws javax.xml.transform.TransformerException
"
      end

      operation 5941890 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if two objects are functionally equal.

@param anotherString Object to compare this to

@return true if the two objects are equal

@throws javax.xml.transform.TransformerException
"
      end

      operation 5942018 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj2" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>String</code> object that represents
the same sequence of characters as this object.

@param   obj2       the object to compare this <code>String</code>
                    against.

@return  <code>true</code> if the <code>String </code>are equal;
         <code>false</code> otherwise.
@see     java.lang.String#compareTo(java.lang.String)
@see     java.lang.String#equalsIgnoreCase(java.lang.String)
"
      end

      operation 5942146 "equalsIgnoreCase"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>String</code> to another <code>String</code>,
ignoring case considerations.  Two strings are considered equal
ignoring case if they are of the same length, and corresponding
characters in the two strings are equal ignoring case.

@param   anotherString   the <code>String</code> to compare this
                         <code>String</code> against.
@return  <code>true</code> if the argument is not <code>null</code>
         and the <code>String</code>s are equal,
         ignoring case; <code>false</code> otherwise.
@see     #equals(Object)
@see     java.lang.Character#toLowerCase(char)
@see java.lang.Character#toUpperCase(char)
"
      end

      operation 5942274 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xstr" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically.

@param   xstr   the <code>String</code> to be compared.

@return  the value <code>0</code> if the argument string is equal to
         this string; a value less than <code>0</code> if this string
         is lexicographically less than the string argument; and a
         value greater than <code>0</code> if this string is
         lexicographically greater than the string argument.
@exception java.lang.NullPointerException if <code>anotherString</code>
         is <code>null</code>.
"
      end

      operation 5942402 "compareToIgnoreCase"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xstr" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically, ignoring case considerations.
This method returns an integer whose sign is that of
<code>this.toUpperCase().toLowerCase().compareTo(
str.toUpperCase().toLowerCase())</code>.
<p>
Note that this method does <em>not</em> take locale into account,
and will result in an unsatisfactory ordering for certain locales.
The java.text package provides <em>collators</em> to allow
locale-sensitive ordering.

@param   xstr   the <code>String</code> to be compared.

@return  a negative integer, zero, or a positive integer as the
         the specified String is greater than, equal to, or less
         than this String, ignoring case considerations.
@see     java.text.Collator#compare(String, String)
@since   1.2
"
      end

      operation 5942530 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this string. The hashcode for a
<code>String</code> object is computed as
<blockquote><pre>
s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
</pre></blockquote>
using <code>int</code> arithmetic, where <code>s[i]</code> is the
<i>i</i>th character of the string, <code>n</code> is the length of
the string, and <code>^</code> indicates exponentiation.
(The hash value of the empty string is zero.)

@return  a hash code value for this object.
"
      end

      operation 5942658 "startsWith"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 619010 // XMLString
	  param in name "toffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix beginning
a specified index.

@param   prefix    the prefix.
@param   toffset   where to begin looking in the string.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index <code>toffset</code>; <code>false</code> otherwise.
         The result is <code>false</code> if <code>toffset</code> is
         negative or greater than the length of this
         <code>String</code> object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.subString(toffset).startsWith(prefix)
         </pre>
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
"
      end

      operation 5942786 "startsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 619010 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  <code>true</code> if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; <code>false</code> otherwise.
         Note also that <code>true</code> will be returned if the
         argument is an empty string or is equal to this
         <code>String</code> object as determined by the
         {@link #equals(Object)} method.
@exception java.lang.NullPointerException if <code>prefix</code> is
         <code>null</code>.
@since   JDK1. 0
"
      end

      operation 5942914 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character. If a character with value <code>ch</code> occurs
in the character sequence represented by this <code>String</code>
object, then the index of the first such occurrence is returned --
that is, the smallest value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is <code>true</code>. If no such character occurs in this string,
then <code>-1</code> is returned.

@param   ch   a character.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object, or
         <code>-1</code> if the character does not occur.
"
      end

      operation 5943042 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character, starting the search at the specified index.
<p>
If a character with value <code>ch</code> occurs in the character
sequence represented by this <code>String</code> object at an index
no smaller than <code>fromIndex</code>, then the index of the first
such occurrence is returned--that is, the smallest value <i>k</i>
such that:
<blockquote><pre>
(this.charAt(<i>k</i>) == ch) && (<i>k</i> >= fromIndex)
</pre></blockquote>
is true. If no such character occurs in this string at or after
position <code>fromIndex</code>, then <code>-1</code> is returned.
<p>
There is no restriction on the value of <code>fromIndex</code>. If it
is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: <code>-1</code> is returned.

@param   ch          a character.
@param   fromIndex   the index to start the search from.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object that is greater
         than or equal to <code>fromIndex</code>, or <code>-1</code>
         if the character does not occur.
"
      end

      operation 5943170 "substring"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param in name "beginIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins with the character at the specified index and
extends to the end of this string. <p>
Examples:
<blockquote><pre>
\"unhappy\".substring(2) returns \"happy\"
\"Harbison\".substring(3) returns \"bison\"
\"emptiness\".substring(9) returns \"\" (an empty string)
</pre></blockquote>

@param      beginIndex   the beginning index, inclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if
            <code>beginIndex</code> is negative or larger than the
            length of this <code>String</code> object.
"
      end

      operation 5943298 "substring"
	public return_type class_ref 619010 // XMLString
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string that is a substring of this string. The
substring begins at the specified <code>beginIndex</code> and
extends to the character at index <code>endIndex - 1</code>.
Thus the length of the substring is <code>endIndex-beginIndex</code>.

@param      beginIndex   the beginning index, inclusive.
@param      endIndex     the ending index, exclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if the
            <code>beginIndex</code> is negative, or
            <code>endIndex</code> is larger than the length of
            this <code>String</code> object, or
            <code>beginIndex</code> is larger than
            <code>endIndex</code>.
"
      end

      operation 5943426 "concat"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the specified string to the end of this string.

@param   str   the <code>String</code> that is concatenated to the end
               of this <code>String</code>.
@return  a string that represents the concatenation of this object's
         characters followed by the string argument's characters.
@exception java.lang.NullPointerException if <code>str</code> is
         <code>null</code>.
"
      end

      operation 5943554 "trim"
	public return_type class_ref 619010 // XMLString
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes white space from both ends of this string.

@return  this string, with white space removed from the front and end.
"
      end

      operation 5943682 "isSpace"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified <var>ch</var> conforms to the XML 1.0 definition
of whitespace.  Refer to <A href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-S\">
the definition of <CODE>S</CODE></A> for details.
@param   ch      Character to check as XML whitespace.
@return          =true if <var>ch</var> is XML whitespace; otherwise =false.
"
      end

      operation 5943810 "fixWhiteSpace"
	public return_type class_ref 619010 // XMLString
	nparams 3
	  param inout name "trimHead" explicit_type "boolean"
	  param inout name "trimTail" explicit_type "boolean"
	  param inout name "doublePunctuationSpaces" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Conditionally trim all leading and trailing whitespace in the specified String.
All strings of white space are
replaced by a single space character (#x20), except spaces after punctuation which
receive double spaces if doublePunctuationSpaces is true.
This function may be useful to a formatter, but to get first class
results, the formatter should probably do it's own white space handling
based on the semantics of the formatting object.

@param   trimHead    Trim leading whitespace?
@param   trimTail    Trim trailing whitespace?
@param   doublePunctuationSpaces    Use double spaces for punctuation?
@return              The trimmed string.
"
      end

      operation 5943938 "toDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a string to a double -- Allowed input is in fixed
notation ddd.fff.

%OPT% CHECK PERFORMANCE against generating a Java String and
converting it to double. The advantage of running in native
machine code -- perhaps even microcode, on some systems -- may
more than make up for the cost of allocating and discarding the
additional object. We need to benchmark this.

%OPT% More importantly, we need to decide whether we _care_ about
the performance of this operation. Does XString.toDouble constitute
any measurable percentage of our typical runtime? I suspect not!

@return A double value representation of the string, or return Double.NaN
if the string can not be converted.  "
      end
    end
  end

  deploymentview 163586 "objects"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 578050 "XObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.NodeSetDTM;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathException;
import com.sun.org.apache.xpath.internal.XPathVisitor;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.NodeList;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 583298 // XObject
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XObject.java,v 1.2.4.1 2005/09/14 20:34:45 jeffsuttor Exp $
"
    end

    artifact 588930 "DTMXRTreeFrag"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xpath.internal.XPathContext;
${definition}"
      associated_elems
	class_ref 806018 // DTMXRTreeFrag
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 589058 "XBoolean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 821762 // XBoolean
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XBoolean.java,v 1.2.4.2 2005/09/14 20:34:45 jeffsuttor Exp $
"
    end

    artifact 589186 "XBooleanStatic"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 821890 // XBooleanStatic
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XBooleanStatic.java,v 1.2.4.2 2005/09/14 20:34:46 jeffsuttor Exp $
"
    end

    artifact 589314 "XMLStringFactoryImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.utils.FastStringBuffer;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xml.internal.utils.XMLStringFactory;
${definition}"
      associated_elems
	class_ref 822018 // XMLStringFactoryImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XMLStringFactoryImpl.java,v 1.2.4.1 2005/09/10 17:44:29 jeffsuttor Exp $
"
    end

    artifact 589442 "XNodeSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xpath.internal.NodeSetDTM;
import com.sun.org.apache.xpath.internal.axes.NodeSequence;
import org.w3c.dom.NodeList;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 809346 // XNodeSet
	class_ref 822914 // Comparator
	class_ref 822146 // LessThanComparator
	class_ref 822274 // LessThanOrEqualComparator
	class_ref 822402 // GreaterThanComparator
	class_ref 822530 // GreaterThanOrEqualComparator
	class_ref 822658 // EqualComparator
	class_ref 822786 // NotEqualComparator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XNodeSet.java,v 1.2.4.2 2005/09/14 20:34:45 jeffsuttor Exp $
"
    end

    artifact 589570 "XNodeSetForDOM"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xpath.internal.NodeSetDTM;
import com.sun.org.apache.xpath.internal.XPathContext;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 823042 // XNodeSetForDOM
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XNodeSetForDOM.java,v 1.2.4.1 2005/09/14 20:34:46 jeffsuttor Exp $
"
    end

    artifact 589698 "XNull"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xpath.internal.XPathContext;
${definition}"
      associated_elems
	class_ref 823170 // XNull
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XNull.java,v 1.2.4.1 2005/09/14 20:34:46 jeffsuttor Exp $
"
    end

    artifact 589826 "XNumber"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
${definition}"
      associated_elems
	class_ref 807682 // XNumber
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XNumber.java,v 1.2.4.2 2005/09/14 20:34:46 jeffsuttor Exp $
"
    end

    artifact 589954 "XObjectFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.axes.OneStepIterator;
${definition}"
      associated_elems
	class_ref 823298 // XObjectFactory
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XObjectFactory.java,v 1.1.2.1 2005/08/01 01:29:30 jeffsuttor Exp $
"
    end

    artifact 590082 "XRTreeFrag"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.ExpressionNode;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.axes.RTFIterator;
import org.w3c.dom.NodeList;
${definition}"
      associated_elems
	class_ref 823426 // XRTreeFrag
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XRTreeFrag.java,v 1.2.4.1 2005/09/14 20:44:48 jeffsuttor Exp $
"
    end

    artifact 590210 "XRTreeFragSelectWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 823554 // XRTreeFragSelectWrapper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XRTreeFragSelectWrapper.java,v 1.2.4.1 2005/09/15 02:02:35 jeffsuttor Exp $
"
    end

    artifact 590338 "XString"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.utils.XMLCharacterRecognizer;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xml.internal.utils.XMLStringFactory;
import com.sun.org.apache.xpath.internal.ExpressionOwner;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.XPathVisitor;
${definition}"
      associated_elems
	class_ref 807554 // XString
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XString.java,v 1.2.4.1 2005/09/14 20:47:20 jeffsuttor Exp $
"
    end

    artifact 590466 "XStringForChars"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.utils.FastStringBuffer;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 823682 // XStringForChars
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XStringForChars.java,v 1.2.4.1 2005/09/14 20:46:27 jeffsuttor Exp $
"
    end

    artifact 590594 "XStringForFSB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.utils.FastStringBuffer;
import com.sun.org.apache.xml.internal.utils.XMLCharacterRecognizer;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xml.internal.utils.XMLStringFactory;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 823810 // XStringForFSB
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XStringForFSB.java,v 1.2.4.2 2005/09/14 20:46:27 jeffsuttor Exp $
"
    end
  end
end
