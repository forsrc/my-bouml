class ByteBufferAsShortBufferL
!!!7659906.java!!!	ByteBufferAsShortBufferL(inout bb : ByteBuffer)
   // package-private

        super(-1, 0,
              bb.remaining() >> 1,
              bb.remaining() >> 1);
        this.bb = bb;
        // enforce limit == capacity
        int cap = this.capacity();
        this.limit(cap);
        int pos = this.position();
        assert (pos <= cap);
        offset = pos;



!!!7660034.java!!!	ByteBufferAsShortBufferL(inout bb : ByteBuffer, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)

        super(mark, pos, lim, cap);
        this.bb = bb;
        offset = off;



!!!7660162.java!!!	slice() : ShortBuffer
        int pos = this.position();
        int lim = this.limit();
        assert (pos <= lim);
        int rem = (pos <= lim ? lim - pos : 0);
        int off = (pos << 1) + offset;
        assert (off >= 0);
        return new ByteBufferAsShortBufferL(bb, -1, 0, rem, rem, off);
!!!7660290.java!!!	duplicate() : ShortBuffer
        return new ByteBufferAsShortBufferL(bb,
                                                    this.markValue(),
                                                    this.position(),
                                                    this.limit(),
                                                    this.capacity(),
                                                    offset);
!!!7660418.java!!!	asReadOnlyBuffer() : ShortBuffer

        return new ByteBufferAsShortBufferRL(bb,
                                                 this.markValue(),
                                                 this.position(),
                                                 this.limit(),
                                                 this.capacity(),
                                                 offset);



!!!7660546.java!!!	ix(in i : int) : int
        return (i << 1) + offset;
!!!7660674.java!!!	get() : short
        return Bits.getShortL(bb, ix(nextGetIndex()));
!!!7660802.java!!!	get(in i : int) : short
        return Bits.getShortL(bb, ix(checkIndex(i)));
!!!7660930.java!!!	put(in x : short) : ShortBuffer

        Bits.putShortL(bb, ix(nextPutIndex()), x);
        return this;



!!!7661058.java!!!	put(in i : int, in x : short) : ShortBuffer

        Bits.putShortL(bb, ix(checkIndex(i)), x);
        return this;



!!!7661186.java!!!	compact() : ShortBuffer

        int pos = position();
        int lim = limit();
        assert (pos <= lim);
        int rem = (pos <= lim ? lim - pos : 0);

        ByteBuffer db = bb.duplicate();
        db.limit(ix(lim));
        db.position(ix(0));
        ByteBuffer sb = db.slice();
        sb.position(pos << 1);
        sb.compact();
        position(rem);
        limit(capacity());
        discardMark();
        return this;



!!!7661314.java!!!	isDirect() : boolean
        return bb.isDirect();
!!!7661442.java!!!	isReadOnly() : boolean
        return false;
!!!7661570.java!!!	order() : ByteOrder




        return ByteOrder.LITTLE_ENDIAN;

