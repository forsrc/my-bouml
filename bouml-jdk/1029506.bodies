class CertStore
!!!8035714.java!!!	CertStore(inout storeSpi : CertStoreSpi, inout provider : Provider, inout type : String, inout params : CertStoreParameters)
        this.storeSpi = storeSpi;
        this.provider = provider;
        this.type = type;
        if (params != null)
            this.params = (CertStoreParameters) params.clone();
!!!8035842.java!!!	getCertificates(inout selector : CertSelector) : Collection
        return storeSpi.engineGetCertificates(selector);
!!!8035970.java!!!	getCRLs(inout selector : CRLSelector) : Collection
        return storeSpi.engineGetCRLs(selector);
!!!8036098.java!!!	getInstance(inout type : String, inout params : CertStoreParameters) : CertStore
        try {
            Instance instance = GetInstance.getInstance("CertStore",
                CertStoreSpi.class, type, params);
            return new CertStore((CertStoreSpi)instance.impl,
                instance.provider, type, params);
        } catch (NoSuchAlgorithmException e) {
            return handleException(e);
        }
!!!8036226.java!!!	handleException(inout e : NoSuchAlgorithmException) : CertStore
        Throwable cause = e.getCause();
        if (cause instanceof InvalidAlgorithmParameterException) {
            throw (InvalidAlgorithmParameterException)cause;
        }
        throw e;
!!!8036354.java!!!	getInstance(inout type : String, inout params : CertStoreParameters, inout provider : String) : CertStore
        try {
            Instance instance = GetInstance.getInstance("CertStore",
                CertStoreSpi.class, type, params, provider);
            return new CertStore((CertStoreSpi)instance.impl,
                instance.provider, type, params);
        } catch (NoSuchAlgorithmException e) {
            return handleException(e);
        }
!!!8036482.java!!!	getInstance(inout type : String, inout params : CertStoreParameters, inout provider : Provider) : CertStore
        try {
            Instance instance = GetInstance.getInstance("CertStore",
                CertStoreSpi.class, type, params, provider);
            return new CertStore((CertStoreSpi)instance.impl,
                instance.provider, type, params);
        } catch (NoSuchAlgorithmException e) {
            return handleException(e);
        }
!!!8036610.java!!!	getCertStoreParameters() : CertStoreParameters
        return (params == null ? null : (CertStoreParameters) params.clone());
!!!8036738.java!!!	getType() : String
        return this.type;
!!!8036866.java!!!	getProvider() : Provider
        return this.provider;
!!!8036994.java!!!	getDefaultType() : String
        String cstype;
        cstype = AccessController.doPrivileged(new PrivilegedAction<String>() {
            public String run() {
                return Security.getProperty(CERTSTORE_TYPE);
            }
        });
        if (cstype == null) {
            cstype = "LDAP";
        }
        return cstype;
