format 222
"spi" // jdk1.8::java::text::spi
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/text/spi/"
  java_package "java.text.spi"
  classview 176002 "spi"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1048706 "BreakIteratorProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class for service providers that
provide concrete implementations of the
{@link java.text.BreakIterator BreakIterator} class.

@since        1.6
"
      classrelation 3420546 // <generalisation>
	relation 3420546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3420546 // <generalisation>
	  b parent class_ref 1048834 // LocaleServiceProvider
      end

      operation 8313602 "BreakIteratorProvider"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 8313730 "getWordInstance"
	abstract public return_type class_ref 877058 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>BreakIterator</code> instance
for <a href=\"../BreakIterator.html#word\">word breaks</a>
for the given locale.
@param locale the desired locale
@return A break iterator for word breaks
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@see java.text.BreakIterator#getWordInstance(java.util.Locale)
"
      end

      operation 8313858 "getLineInstance"
	abstract public return_type class_ref 877058 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>BreakIterator</code> instance
for <a href=\"../BreakIterator.html#line\">line breaks</a>
for the given locale.
@param locale the desired locale
@return A break iterator for line breaks
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@see java.text.BreakIterator#getLineInstance(java.util.Locale)
"
      end

      operation 8313986 "getCharacterInstance"
	abstract public return_type class_ref 877058 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>BreakIterator</code> instance
for <a href=\"../BreakIterator.html#character\">character breaks</a>
for the given locale.
@param locale the desired locale
@return A break iterator for character breaks
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@see java.text.BreakIterator#getCharacterInstance(java.util.Locale)
"
      end

      operation 8314114 "getSentenceInstance"
	abstract public return_type class_ref 877058 // BreakIterator
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>BreakIterator</code> instance
for <a href=\"../BreakIterator.html#sentence\">sentence breaks</a>
for the given locale.
@param locale the desired locale
@return A break iterator for sentence breaks
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@see java.text.BreakIterator#getSentenceInstance(java.util.Locale)
"
      end
    end

    class 1048962 "CollatorProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class for service providers that
provide concrete implementations of the
{@link java.text.Collator Collator} class.

@since        1.6
"
      classrelation 3420674 // <generalisation>
	relation 3420674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3420674 // <generalisation>
	  b parent class_ref 1048834 // LocaleServiceProvider
      end

      operation 8314242 "CollatorProvider"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 8314370 "getInstance"
	abstract public return_type class_ref 589826 // Collator
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>Collator</code> instance for the specified locale.
@param locale the desired locale.
@return the <code>Collator</code> for the desired locale.
@exception NullPointerException if
<code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@see java.text.Collator#getInstance(java.util.Locale)
"
      end
    end

    class 1049090 "DateFormatProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class for service providers that
provide concrete implementations of the
{@link java.text.DateFormat DateFormat} class.

@since        1.6
"
      classrelation 3420802 // <generalisation>
	relation 3420802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3420802 // <generalisation>
	  b parent class_ref 1048834 // LocaleServiceProvider
      end

      operation 8314498 "DateFormatProvider"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 8314626 "getTimeInstance"
	abstract public return_type class_ref 473090 // DateFormat
	nparams 2
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>DateFormat</code> instance which formats time
with the given formatting style for the specified locale.
@param style the given formatting style.  Either one of
    {@link java.text.DateFormat#SHORT DateFormat.SHORT},
    {@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},
    {@link java.text.DateFormat#LONG DateFormat.LONG}, or
    {@link java.text.DateFormat#FULL DateFormat.FULL}.
@param locale the desired locale.
@exception IllegalArgumentException if <code>style</code> is invalid,
    or if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@exception NullPointerException if <code>locale</code> is null
@return a time formatter.
@see java.text.DateFormat#getTimeInstance(int, java.util.Locale)
"
      end

      operation 8314754 "getDateInstance"
	abstract public return_type class_ref 473090 // DateFormat
	nparams 2
	  param in name "style" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>DateFormat</code> instance which formats date
with the given formatting style for the specified locale.
@param style the given formatting style.  Either one of
    {@link java.text.DateFormat#SHORT DateFormat.SHORT},
    {@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},
    {@link java.text.DateFormat#LONG DateFormat.LONG}, or
    {@link java.text.DateFormat#FULL DateFormat.FULL}.
@param locale the desired locale.
@exception IllegalArgumentException if <code>style</code> is invalid,
    or if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@exception NullPointerException if <code>locale</code> is null
@return a date formatter.
@see java.text.DateFormat#getDateInstance(int, java.util.Locale)
"
      end

      operation 8314882 "getDateTimeInstance"
	abstract public return_type class_ref 473090 // DateFormat
	nparams 3
	  param in name "dateStyle" explicit_type "int"
	  param in name "timeStyle" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>DateFormat</code> instance which formats date and time
with the given formatting style for the specified locale.
@param dateStyle the given date formatting style.  Either one of
    {@link java.text.DateFormat#SHORT DateFormat.SHORT},
    {@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},
    {@link java.text.DateFormat#LONG DateFormat.LONG}, or
    {@link java.text.DateFormat#FULL DateFormat.FULL}.
@param timeStyle the given time formatting style.  Either one of
    {@link java.text.DateFormat#SHORT DateFormat.SHORT},
    {@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},
    {@link java.text.DateFormat#LONG DateFormat.LONG}, or
    {@link java.text.DateFormat#FULL DateFormat.FULL}.
@param locale the desired locale.
@exception IllegalArgumentException if <code>dateStyle</code> or
    <code>timeStyle</code> is invalid,
    or if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@exception NullPointerException if <code>locale</code> is null
@return a date/time formatter.
@see java.text.DateFormat#getDateTimeInstance(int, int, java.util.Locale)
"
      end
    end

    class 1049218 "DateFormatSymbolsProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class for service providers that
provide instances of the
{@link java.text.DateFormatSymbols DateFormatSymbols} class.

@since        1.6
"
      classrelation 3420930 // <generalisation>
	relation 3420930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3420930 // <generalisation>
	  b parent class_ref 1048834 // LocaleServiceProvider
      end

      operation 8315010 "DateFormatSymbolsProvider"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 8315138 "getInstance"
	abstract public return_type class_ref 1046530 // DateFormatSymbols
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>DateFormatSymbols</code> instance for the
specified locale.

@param locale the desired locale
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@return a <code>DateFormatSymbols</code> instance.
@see java.text.DateFormatSymbols#getInstance(java.util.Locale)
"
      end
    end

    class 1049346 "DecimalFormatSymbolsProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class for service providers that
provide instances of the
{@link java.text.DecimalFormatSymbols DecimalFormatSymbols} class.

<p>The requested {@code Locale} may contain an <a
href=\"../../util/Locale.html#def_locale_extension\"> extension</a> for
specifying the desired numbering system. For example, {@code \"ar-u-nu-arab\"}
(in the BCP 47 language tag form) specifies Arabic with the Arabic-Indic
digits and symbols, while {@code \"ar-u-nu-latn\"} specifies Arabic with the
Latin digits and symbols. Refer to the <em>Unicode Locale Data Markup
Language (LDML)</em> specification for numbering systems.

@since        1.6
@see Locale#forLanguageTag(String)
@see Locale#getExtension(char)
"
      classrelation 3421058 // <generalisation>
	relation 3421058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3421058 // <generalisation>
	  b parent class_ref 1048834 // LocaleServiceProvider
      end

      operation 8315266 "DecimalFormatSymbolsProvider"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 8315394 "getInstance"
	abstract public return_type class_ref 636418 // DecimalFormatSymbols
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>DecimalFormatSymbols</code> instance for the
specified locale.

@param locale the desired locale
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@return a <code>DecimalFormatSymbols</code> instance.
@see java.text.DecimalFormatSymbols#getInstance(java.util.Locale)
"
      end
    end

    class 1049474 "NumberFormatProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class for service providers that
provide concrete implementations of the
{@link java.text.NumberFormat NumberFormat} class.

@since        1.6
"
      classrelation 3421186 // <generalisation>
	relation 3421186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3421186 // <generalisation>
	  b parent class_ref 1048834 // LocaleServiceProvider
      end

      operation 8315522 "NumberFormatProvider"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 8315650 "getCurrencyInstance"
	abstract public return_type class_ref 1045890 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>NumberFormat</code> instance which formats
monetary values for the specified locale.

@param locale the desired locale.
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@return a currency formatter
@see java.text.NumberFormat#getCurrencyInstance(java.util.Locale)
"
      end

      operation 8315778 "getIntegerInstance"
	abstract public return_type class_ref 1045890 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>NumberFormat</code> instance which formats
integer values for the specified locale.
The returned number format is configured to
round floating point numbers to the nearest integer using
half-even rounding (see {@link java.math.RoundingMode#HALF_EVEN HALF_EVEN})
for formatting, and to parse only the integer part of
an input string (see {@link
java.text.NumberFormat#isParseIntegerOnly isParseIntegerOnly}).

@param locale the desired locale
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@return a number format for integer values
@see java.text.NumberFormat#getIntegerInstance(java.util.Locale)
"
      end

      operation 8315906 "getNumberInstance"
	abstract public return_type class_ref 1045890 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new general-purpose <code>NumberFormat</code> instance for
the specified locale.

@param locale the desired locale
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@return a general-purpose number formatter
@see java.text.NumberFormat#getNumberInstance(java.util.Locale)
"
      end

      operation 8316034 "getPercentInstance"
	abstract public return_type class_ref 1045890 // NumberFormat
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>NumberFormat</code> instance which formats
percentage values for the specified locale.

@param locale the desired locale
@exception NullPointerException if <code>locale</code> is null
@exception IllegalArgumentException if <code>locale</code> isn't
    one of the locales returned from
    {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
    getAvailableLocales()}.
@return a percent formatter
@see java.text.NumberFormat#getPercentInstance(java.util.Locale)
"
      end
    end
  end

  deploymentview 169986 "spi"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 781058 "BreakIteratorProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.BreakIterator;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_elems
	class_ref 1048706 // BreakIteratorProvider
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 781186 "CollatorProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.Collator;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_elems
	class_ref 1048962 // CollatorProvider
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 781314 "DateFormatProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.DateFormat;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_elems
	class_ref 1049090 // DateFormatProvider
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 781442 "DateFormatSymbolsProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.DateFormatSymbols;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_elems
	class_ref 1049218 // DateFormatSymbolsProvider
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 781570 "DecimalFormatSymbolsProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_elems
	class_ref 1049346 // DecimalFormatSymbolsProvider
      end
      comment "Copyright (c) 2005, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 781698 "NumberFormatProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.NumberFormat;
import java.util.Locale;
import java.util.spi.LocaleServiceProvider;
${definition}"
      associated_elems
	class_ref 1049474 // NumberFormatProvider
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
