class AttributesImpl
!!!5553154.java!!!	AttributesImpl()
        length = 0;
        data = null;
!!!5553282.java!!!	AttributesImpl(inout atts : Attributes)
        setAttributes(atts);
!!!5553410.java!!!	getLength() : int
        return length;
!!!5553538.java!!!	getURI(in index : int) : String
        if (index >= 0 && index < length) {
            return data[index*5];
        } else {
            return null;
        }
!!!5553666.java!!!	getLocalName(in index : int) : String
        if (index >= 0 && index < length) {
            return data[index*5+1];
        } else {
            return null;
        }
!!!5553794.java!!!	getQName(in index : int) : String
        if (index >= 0 && index < length) {
            return data[index*5+2];
        } else {
            return null;
        }
!!!5553922.java!!!	getType(in index : int) : String
        if (index >= 0 && index < length) {
            return data[index*5+3];
        } else {
            return null;
        }
!!!5554050.java!!!	getValue(in index : int) : String
        if (index >= 0 && index < length) {
            return data[index*5+4];
        } else {
            return null;
        }
!!!5554178.java!!!	getIndex(inout uri : String, inout localName : String) : int
        int max = length * 5;
        for (int i = 0; i < max; i += 5) {
            if (data[i].equals(uri) && data[i+1].equals(localName)) {
                return i / 5;
            }
        }
        return -1;
!!!5554306.java!!!	getIndex(inout qName : String) : int
        int max = length * 5;
        for (int i = 0; i < max; i += 5) {
            if (data[i+2].equals(qName)) {
                return i / 5;
            }
        }
        return -1;
!!!5554434.java!!!	getType(inout uri : String, inout localName : String) : String
        int max = length * 5;
        for (int i = 0; i < max; i += 5) {
            if (data[i].equals(uri) && data[i+1].equals(localName)) {
                return data[i+3];
            }
        }
        return null;
!!!5554562.java!!!	getType(inout qName : String) : String
        int max = length * 5;
        for (int i = 0; i < max; i += 5) {
            if (data[i+2].equals(qName)) {
                return data[i+3];
            }
        }
        return null;
!!!5554690.java!!!	getValue(inout uri : String, inout localName : String) : String
        int max = length * 5;
        for (int i = 0; i < max; i += 5) {
            if (data[i].equals(uri) && data[i+1].equals(localName)) {
                return data[i+4];
            }
        }
        return null;
!!!5554818.java!!!	getValue(inout qName : String) : String
        int max = length * 5;
        for (int i = 0; i < max; i += 5) {
            if (data[i+2].equals(qName)) {
                return data[i+4];
            }
        }
        return null;
!!!5554946.java!!!	clear() : void
        if (data != null) {
            for (int i = 0; i < (length * 5); i++)
                data [i] = null;
        }
        length = 0;
!!!5555074.java!!!	setAttributes(inout atts : Attributes) : void
        clear();
        length = atts.getLength();
        if (length > 0) {
            data = new String[length*5];
            for (int i = 0; i < length; i++) {
                data[i*5] = atts.getURI(i);
                data[i*5+1] = atts.getLocalName(i);
                data[i*5+2] = atts.getQName(i);
                data[i*5+3] = atts.getType(i);
                data[i*5+4] = atts.getValue(i);
            }
        }
!!!5555202.java!!!	addAttribute(inout uri : String, inout localName : String, inout qName : String, inout type : String, inout value : String) : void
        ensureCapacity(length+1);
        data[length*5] = uri;
        data[length*5+1] = localName;
        data[length*5+2] = qName;
        data[length*5+3] = type;
        data[length*5+4] = value;
        length++;
!!!5555330.java!!!	setAttribute(in index : int, inout uri : String, inout localName : String, inout qName : String, inout type : String, inout value : String) : void
        if (index >= 0 && index < length) {
            data[index*5] = uri;
            data[index*5+1] = localName;
            data[index*5+2] = qName;
            data[index*5+3] = type;
            data[index*5+4] = value;
        } else {
            badIndex(index);
        }
!!!5555458.java!!!	removeAttribute(in index : int) : void
        if (index >= 0 && index < length) {
            if (index < length - 1) {
                System.arraycopy(data, (index+1)*5, data, index*5,
                                 (length-index-1)*5);
            }
            index = (length - 1) * 5;
            data [index++] = null;
            data [index++] = null;
            data [index++] = null;
            data [index++] = null;
            data [index] = null;
            length--;
        } else {
            badIndex(index);
        }
!!!5555586.java!!!	setURI(in index : int, inout uri : String) : void
        if (index >= 0 && index < length) {
            data[index*5] = uri;
        } else {
            badIndex(index);
        }
!!!5555714.java!!!	setLocalName(in index : int, inout localName : String) : void
        if (index >= 0 && index < length) {
            data[index*5+1] = localName;
        } else {
            badIndex(index);
        }
!!!5555842.java!!!	setQName(in index : int, inout qName : String) : void
        if (index >= 0 && index < length) {
            data[index*5+2] = qName;
        } else {
            badIndex(index);
        }
!!!5555970.java!!!	setType(in index : int, inout type : String) : void
        if (index >= 0 && index < length) {
            data[index*5+3] = type;
        } else {
            badIndex(index);
        }
!!!5556098.java!!!	setValue(in index : int, inout value : String) : void
        if (index >= 0 && index < length) {
            data[index*5+4] = value;
        } else {
            badIndex(index);
        }
!!!5556226.java!!!	ensureCapacity(in n : int) : void
        if (n <= 0) {
            return;
        }
        int max;
        if (data == null || data.length == 0) {
            max = 25;
        }
        else if (data.length >= n * 5) {
            return;
        }
        else {
            max = data.length;
        }
        while (max < n * 5) {
            max *= 2;
        }

        String newData[] = new String[max];
        if (length > 0) {
            System.arraycopy(data, 0, newData, 0, length*5);
        }
        data = newData;
!!!5556354.java!!!	badIndex(in index : int) : void
        String msg =
            "Attempt to modify attribute at illegal index: " + index;
        throw new ArrayIndexOutOfBoundsException(msg);
