class Era
!!!8464258.java!!!	isSupported(inout field : TemporalField) : boolean
        if (field instanceof ChronoField) {
            return field == ERA;
        }
        return field != null && field.isSupportedBy(this);
!!!8464386.java!!!	range(inout field : TemporalField) : ValueRange
        return TemporalAccessor.super.range(field);
!!!8464514.java!!!	get(inout field : TemporalField) : int
        if (field == ERA) {
            return getValue();
        }
        return TemporalAccessor.super.get(field);
!!!8464642.java!!!	getLong(inout field : TemporalField) : long
        if (field == ERA) {
            return getValue();
        } else if (field instanceof ChronoField) {
            throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
        }
        return field.getFrom(this);
!!!8464770.java!!!	query(inout query : TemporalQuery) : R
        if (query == TemporalQueries.precision()) {
            return (R) ERAS;
        }
        return TemporalAccessor.super.query(query);
!!!8464898.java!!!	adjustInto(inout temporal : Temporal) : Temporal
        return temporal.with(ERA, getValue());
!!!8465026.java!!!	getDisplayName(inout style : TextStyle, inout locale : Locale) : String
        return new DateTimeFormatterBuilder().appendText(ERA, style).toFormatter(locale).format(this);
