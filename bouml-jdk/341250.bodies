class DropTarget
!!!1975170.java!!!	DropTarget(inout c : Component, in ops : int, inout dtl : DropTargetListener, inout act : boolean, inout fm : FlavorMap)
        if (GraphicsEnvironment.isHeadless()) {
            throw new HeadlessException();
        }

        component = c;

        setDefaultActions(ops);

        if (dtl != null) try {
            addDropTargetListener(dtl);
        } catch (TooManyListenersException tmle) {
            // do nothing!
        }

        if (c != null) {
            c.setDropTarget(this);
            setActive(act);
        }

        if (fm != null) {
            flavorMap = fm;
        } else {
            flavorMap = SystemFlavorMap.getDefaultFlavorMap();
        }
!!!1975298.java!!!	DropTarget(inout c : Component, in ops : int, inout dtl : DropTargetListener, inout act : boolean)
        this(c, ops, dtl, act, null);
!!!1975426.java!!!	DropTarget()
        this(null, DnDConstants.ACTION_COPY_OR_MOVE, null, true, null);
!!!1975554.java!!!	DropTarget(inout c : Component, inout dtl : DropTargetListener)
        this(c, DnDConstants.ACTION_COPY_OR_MOVE, dtl, true, null);
!!!1975682.java!!!	DropTarget(inout c : Component, in ops : int, inout dtl : DropTargetListener)
        this(c, ops, dtl, true);
!!!1975810.java!!!	setComponent(inout c : Component) : void
        if (component == c || component != null && component.equals(c))
            return;

        Component     old;
        ComponentPeer oldPeer = null;

        if ((old = component) != null) {
            clearAutoscroll();

            component = null;

            if (componentPeer != null) {
                oldPeer = componentPeer;
                removeNotify(componentPeer);
            }

            old.setDropTarget(null);

        }

        if ((component = c) != null) try {
            c.setDropTarget(this);
        } catch (Exception e) { // undo the change
            if (old != null) {
                old.setDropTarget(this);
                addNotify(oldPeer);
            }
        }
!!!1975938.java!!!	getComponent() : Component
        return component;
!!!1976066.java!!!	setDefaultActions(in ops : int) : void
        getDropTargetContext().setTargetActions(ops & (DnDConstants.ACTION_COPY_OR_MOVE | DnDConstants.ACTION_REFERENCE));
!!!1976194.java!!!	doSetDefaultActions(in ops : int) : void
        actions = ops;
!!!1976322.java!!!	getDefaultActions() : int
        return actions;
!!!1976450.java!!!	setActive(inout isActive : boolean) : void
        if (isActive != active) {
            active = isActive;
        }

        if (!active) clearAutoscroll();
!!!1976578.java!!!	isActive() : boolean
        return active;
!!!1976706.java!!!	addDropTargetListener(inout dtl : DropTargetListener) : void
        if (dtl == null) return;

        if (equals(dtl)) throw new IllegalArgumentException("DropTarget may not be its own Listener");

        if (dtListener == null)
            dtListener = dtl;
        else
            throw new TooManyListenersException();
!!!1976834.java!!!	removeDropTargetListener(inout dtl : DropTargetListener) : void
        if (dtl != null && dtListener != null) {
            if(dtListener.equals(dtl))
                dtListener = null;
            else
                throw new IllegalArgumentException("listener mismatch");
        }
!!!1976962.java!!!	dragEnter(inout dtde : DropTargetDragEvent) : void
        isDraggingInside = true;

        if (!active) return;

        if (dtListener != null) {
            dtListener.dragEnter(dtde);
        } else
            dtde.getDropTargetContext().setTargetActions(DnDConstants.ACTION_NONE);

        initializeAutoscrolling(dtde.getLocation());
!!!1977090.java!!!	dragOver(inout dtde : DropTargetDragEvent) : void
        if (!active) return;

        if (dtListener != null && active) dtListener.dragOver(dtde);

        updateAutoscroll(dtde.getLocation());
!!!1977218.java!!!	dropActionChanged(inout dtde : DropTargetDragEvent) : void
        if (!active) return;

        if (dtListener != null) dtListener.dropActionChanged(dtde);

        updateAutoscroll(dtde.getLocation());
!!!1977346.java!!!	dragExit(inout dte : DropTargetEvent) : void
        isDraggingInside = false;

        if (!active) return;

        if (dtListener != null && active) dtListener.dragExit(dte);

        clearAutoscroll();
!!!1977474.java!!!	drop(inout dtde : DropTargetDropEvent) : void
        isDraggingInside = false;

        clearAutoscroll();

        if (dtListener != null && active)
            dtListener.drop(dtde);
        else { // we should'nt get here ...
            dtde.rejectDrop();
        }
!!!1977602.java!!!	getFlavorMap() : FlavorMap
 return flavorMap;
!!!1977730.java!!!	setFlavorMap(inout fm : FlavorMap) : void
        flavorMap = fm == null ? SystemFlavorMap.getDefaultFlavorMap() : fm;
!!!1977858.java!!!	addNotify(inout peer : ComponentPeer) : void
        if (peer == componentPeer) return;

        componentPeer = peer;

        for (Component c = component;
             c != null && peer instanceof LightweightPeer; c = c.getParent()) {
            peer = c.getPeer();
        }

        if (peer instanceof DropTargetPeer) {
            nativePeer = peer;
            ((DropTargetPeer)peer).addDropTarget(this);
        } else {
            nativePeer = null;
        }
!!!1977986.java!!!	removeNotify(inout peer : ComponentPeer) : void
        if (nativePeer != null)
            ((DropTargetPeer)nativePeer).removeDropTarget(this);

        componentPeer = nativePeer = null;

        synchronized (this) {
            if (isDraggingInside) {
                dragExit(new DropTargetEvent(getDropTargetContext()));
            }
        }
!!!1978114.java!!!	getDropTargetContext() : DropTargetContext
        return dropTargetContext;
!!!1978242.java!!!	createDropTargetContext() : DropTargetContext
        return new DropTargetContext(this);
!!!1978370.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();

        s.writeObject(SerializationTester.test(dtListener)
                      ? dtListener : null);
!!!1978498.java!!!	readObject(inout s : ObjectInputStream) : void
        ObjectInputStream.GetField f = s.readFields();

        try {
            dropTargetContext =
                (DropTargetContext)f.get("dropTargetContext", null);
        } catch (IllegalArgumentException e) {
            // Pre-1.4 support. 'dropTargetContext' was previously transient
        }
        if (dropTargetContext == null) {
            dropTargetContext = createDropTargetContext();
        }

        component = (Component)f.get("component", null);
        actions = f.get("actions", DnDConstants.ACTION_COPY_OR_MOVE);
        active = f.get("active", true);

        // Pre-1.4 support. 'dtListener' was previously non-transient
        try {
            dtListener = (DropTargetListener)f.get("dtListener", null);
        } catch (IllegalArgumentException e) {
            // 1.4-compatible byte stream. 'dtListener' was written explicitly
            dtListener = (DropTargetListener)s.readObject();
        }
!!!1979394.java!!!	createDropTargetAutoScroller(inout c : Component, inout p : Point) : DropTarget::DropTargetAutoScroller
        return new DropTargetAutoScroller(c, p);
!!!1979522.java!!!	initializeAutoscrolling(inout p : Point) : void
        if (component == null || !(component instanceof Autoscroll)) return;

        autoScroller = createDropTargetAutoScroller(component, p);
!!!1979650.java!!!	updateAutoscroll(inout dragCursorLocn : Point) : void
        if (autoScroller != null) autoScroller.updateLocation(dragCursorLocn);
!!!1979778.java!!!	clearAutoscroll() : void
        if (autoScroller != null) {
            autoScroller.stop();
            autoScroller = null;
        }
