class InternalFramePainter
!!!11259266.java!!!	InternalFramePainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11259394.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_ENABLED: paintBackgroundEnabled(g); break;
            case BACKGROUND_ENABLED_WINDOWFOCUSED: paintBackgroundEnabledAndWindowFocused(g); break;

        }
!!!11259522.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11259650.java!!!	paintBackgroundEnabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(color1);
        g.fill(roundRect);
        path = decodePath1();
        g.setPaint(decodeGradient1(path));
        g.fill(path);
        path = decodePath2();
        g.setPaint(color3);
        g.fill(path);
        path = decodePath3();
        g.setPaint(color4);
        g.fill(path);
        path = decodePath4();
        g.setPaint(color5);
        g.fill(path);
        rect = decodeRect1();
        g.setPaint(color6);
        g.fill(rect);
        rect = decodeRect2();
        g.setPaint(color7);
        g.fill(rect);

!!!11259778.java!!!	paintBackgroundEnabledAndWindowFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect2();
        g.setPaint(color8);
        g.fill(roundRect);
        path = decodePath5();
        g.setPaint(color9);
        g.fill(path);
        path = decodePath1();
        g.setPaint(decodeGradient2(path));
        g.fill(path);
        path = decodePath6();
        g.setPaint(color12);
        g.fill(path);
        path = decodePath7();
        g.setPaint(color13);
        g.fill(path);
        path = decodePath8();
        g.setPaint(color14);
        g.fill(path);
        path = decodePath9();
        g.setPaint(color15);
        g.fill(path);
        rect = decodeRect1();
        g.setPaint(color6);
        g.fill(rect);
        rect = decodeRect3();
        g.setPaint(color9);
        g.fill(rect);
        rect = decodeRect3();
        g.setPaint(color9);
        g.fill(rect);
        rect = decodeRect3();
        g.setPaint(color9);
        g.fill(rect);
        rect = decodeRect4();
        g.setPaint(decodeGradient3(rect));
        g.fill(rect);
        rect = decodeRect2();
        g.setPaint(color18);
        g.fill(rect);

!!!11259906.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.0f), //x
                               decodeY(0.0f), //y
                               decodeX(3.0f) - decodeX(0.0f), //width
                               decodeY(3.0f) - decodeY(0.0f), //height
                               4.6666665f, 4.6666665f); //rounding
        return roundRect;
!!!11260034.java!!!	decodePath1() : Path2D
        path.reset();
        path.moveTo(decodeX(0.16666667f), decodeY(0.12f));
        path.curveTo(decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(0.11999999731779099f, -1.0f), decodeAnchorX(0.5f, -1.0f), decodeAnchorY(0.03999999910593033f, 0.0f), decodeX(0.5f), decodeY(0.04f));
        path.curveTo(decodeAnchorX(0.5f, 1.0f), decodeAnchorY(0.03999999910593033f, 0.0f), decodeAnchorX(2.5f, -1.0f), decodeAnchorY(0.03999999910593033f, 0.0f), decodeX(2.5f), decodeY(0.04f));
        path.curveTo(decodeAnchorX(2.5f, 1.0f), decodeAnchorY(0.03999999910593033f, 0.0f), decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(0.11999999731779099f, -1.0f), decodeX(2.8333333f), decodeY(0.12f));
        path.curveTo(decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(0.11999999731779099f, 1.0f), decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeX(2.8333333f), decodeY(0.96f));
        path.lineTo(decodeX(0.16666667f), decodeY(0.96f));
        path.curveTo(decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(0.11999999731779099f, 1.0f), decodeX(0.16666667f), decodeY(0.12f));
        path.closePath();
        return path;
!!!11260162.java!!!	decodePath2() : Path2D
        path.reset();
        path.moveTo(decodeX(0.6666667f), decodeY(0.96f));
        path.lineTo(decodeX(0.16666667f), decodeY(0.96f));
        path.curveTo(decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(2.5f, -1.0f), decodeX(0.16666667f), decodeY(2.5f));
        path.curveTo(decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(2.5f, 1.0f), decodeAnchorX(0.5f, -1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeX(0.5f), decodeY(2.8333333f));
        path.curveTo(decodeAnchorX(0.5f, 1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeAnchorX(2.5f, -1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeX(2.5f), decodeY(2.8333333f));
        path.curveTo(decodeAnchorX(2.5f, 1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(2.5f, 1.0f), decodeX(2.8333333f), decodeY(2.5f));
        path.curveTo(decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(2.5f, -1.0f), decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeX(2.8333333f), decodeY(0.96f));
        path.lineTo(decodeX(2.3333333f), decodeY(0.96f));
        path.lineTo(decodeX(2.3333333f), decodeY(2.3333333f));
        path.lineTo(decodeX(0.6666667f), decodeY(2.3333333f));
        path.lineTo(decodeX(0.6666667f), decodeY(0.96f));
        path.closePath();
        return path;
!!!11260290.java!!!	decodePath3() : Path2D
        path.reset();
        path.moveTo(decodeX(0.8333333f), decodeY(0.96f));
        path.lineTo(decodeX(0.6666667f), decodeY(0.96f));
        path.lineTo(decodeX(0.6666667f), decodeY(2.3333333f));
        path.lineTo(decodeX(2.3333333f), decodeY(2.3333333f));
        path.lineTo(decodeX(2.3333333f), decodeY(0.96f));
        path.lineTo(decodeX(2.1666667f), decodeY(0.96f));
        path.lineTo(decodeX(2.1666667f), decodeY(2.1666667f));
        path.lineTo(decodeX(0.8333333f), decodeY(2.1666667f));
        path.lineTo(decodeX(0.8333333f), decodeY(0.96f));
        path.closePath();
        return path;
!!!11260418.java!!!	decodePath4() : Path2D
        path.reset();
        path.moveTo(decodeX(2.1666667f), decodeY(1.0f));
        path.lineTo(decodeX(1.0f), decodeY(1.0f));
        path.lineTo(decodeX(1.0f), decodeY(2.0f));
        path.lineTo(decodeX(2.0f), decodeY(2.0f));
        path.lineTo(decodeX(2.0f), decodeY(1.0f));
        path.lineTo(decodeX(2.1666667f), decodeY(1.0f));
        path.lineTo(decodeX(2.1666667f), decodeY(2.1666667f));
        path.lineTo(decodeX(0.8333333f), decodeY(2.1666667f));
        path.lineTo(decodeX(0.8333333f), decodeY(0.96f));
        path.lineTo(decodeX(2.1666667f), decodeY(0.96f));
        path.lineTo(decodeX(2.1666667f), decodeY(1.0f));
        path.closePath();
        return path;
!!!11260546.java!!!	decodeRect1() : Rectangle2D
            rect.setRect(decodeX(1.0f), //x
                         decodeY(1.0f), //y
                         decodeX(2.0f) - decodeX(1.0f), //width
                         decodeY(2.0f) - decodeY(1.0f)); //height
        return rect;
!!!11260674.java!!!	decodeRect2() : Rectangle2D
            rect.setRect(decodeX(0.33333334f), //x
                         decodeY(2.6666667f), //y
                         decodeX(2.6666667f) - decodeX(0.33333334f), //width
                         decodeY(2.8333333f) - decodeY(2.6666667f)); //height
        return rect;
!!!11260802.java!!!	decodeRoundRect2() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(0.0f), //x
                               decodeY(0.0f), //y
                               decodeX(3.0f) - decodeX(0.0f), //width
                               decodeY(3.0f) - decodeY(0.0f), //height
                               4.8333335f, 4.8333335f); //rounding
        return roundRect;
!!!11260930.java!!!	decodePath5() : Path2D
        path.reset();
        path.moveTo(decodeX(0.16666667f), decodeY(0.08f));
        path.curveTo(decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(0.07999999821186066f, 1.0f), decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(0.07999999821186066f, -1.0f), decodeX(0.16666667f), decodeY(0.08f));
        path.closePath();
        return path;
!!!11261058.java!!!	decodePath6() : Path2D
        path.reset();
        path.moveTo(decodeX(0.5f), decodeY(0.96f));
        path.lineTo(decodeX(0.16666667f), decodeY(0.96f));
        path.curveTo(decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(2.5f, -1.0f), decodeX(0.16666667f), decodeY(2.5f));
        path.curveTo(decodeAnchorX(0.1666666716337204f, 0.0f), decodeAnchorY(2.5f, 1.0f), decodeAnchorX(0.5f, -1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeX(0.5f), decodeY(2.8333333f));
        path.curveTo(decodeAnchorX(0.5f, 1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeAnchorX(2.5f, -1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeX(2.5f), decodeY(2.8333333f));
        path.curveTo(decodeAnchorX(2.5f, 1.0f), decodeAnchorY(2.8333332538604736f, 0.0f), decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(2.5f, 1.0f), decodeX(2.8333333f), decodeY(2.5f));
        path.curveTo(decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(2.5f, -1.0f), decodeAnchorX(2.8333332538604736f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeX(2.8333333f), decodeY(0.96f));
        path.lineTo(decodeX(2.5f), decodeY(0.96f));
        path.lineTo(decodeX(2.5f), decodeY(2.5f));
        path.lineTo(decodeX(0.5f), decodeY(2.5f));
        path.lineTo(decodeX(0.5f), decodeY(0.96f));
        path.closePath();
        return path;
!!!11261186.java!!!	decodePath7() : Path2D
        path.reset();
        path.moveTo(decodeX(0.6666667f), decodeY(0.96f));
        path.lineTo(decodeX(0.33333334f), decodeY(0.96f));
        path.curveTo(decodeAnchorX(0.3333333432674408f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeAnchorX(0.3333333432674408f, 0.0f), decodeAnchorY(2.3333332538604736f, -1.0f), decodeX(0.33333334f), decodeY(2.3333333f));
        path.curveTo(decodeAnchorX(0.3333333432674408f, 0.0f), decodeAnchorY(2.3333332538604736f, 1.0f), decodeAnchorX(0.6666666865348816f, -1.0f), decodeAnchorY(2.6666667461395264f, 0.0f), decodeX(0.6666667f), decodeY(2.6666667f));
        path.curveTo(decodeAnchorX(0.6666666865348816f, 1.0f), decodeAnchorY(2.6666667461395264f, 0.0f), decodeAnchorX(2.3333332538604736f, -1.0f), decodeAnchorY(2.6666667461395264f, 0.0f), decodeX(2.3333333f), decodeY(2.6666667f));
        path.curveTo(decodeAnchorX(2.3333332538604736f, 1.0f), decodeAnchorY(2.6666667461395264f, 0.0f), decodeAnchorX(2.6666667461395264f, 0.0f), decodeAnchorY(2.3333332538604736f, 1.0f), decodeX(2.6666667f), decodeY(2.3333333f));
        path.curveTo(decodeAnchorX(2.6666667461395264f, 0.0f), decodeAnchorY(2.3333332538604736f, -1.0f), decodeAnchorX(2.6666667461395264f, 0.0f), decodeAnchorY(0.9599999785423279f, 0.0f), decodeX(2.6666667f), decodeY(0.96f));
        path.lineTo(decodeX(2.3333333f), decodeY(0.96f));
        path.lineTo(decodeX(2.3333333f), decodeY(2.3333333f));
        path.lineTo(decodeX(0.6666667f), decodeY(2.3333333f));
        path.lineTo(decodeX(0.6666667f), decodeY(0.96f));
        path.closePath();
        return path;
!!!11261314.java!!!	decodePath8() : Path2D
        path.reset();
        path.moveTo(decodeX(2.3333333f), decodeY(0.96f));
        path.lineTo(decodeX(2.1666667f), decodeY(0.96f));
        path.lineTo(decodeX(2.1666667f), decodeY(2.1666667f));
        path.lineTo(decodeX(0.8333333f), decodeY(2.1666667f));
        path.lineTo(decodeX(0.8333333f), decodeY(0.96f));
        path.lineTo(decodeX(0.6666667f), decodeY(0.96f));
        path.lineTo(decodeX(0.6666667f), decodeY(2.3333333f));
        path.lineTo(decodeX(2.3333333f), decodeY(2.3333333f));
        path.lineTo(decodeX(2.3333333f), decodeY(0.96f));
        path.closePath();
        return path;
!!!11261442.java!!!	decodePath9() : Path2D
        path.reset();
        path.moveTo(decodeX(0.8333333f), decodeY(1.0f));
        path.lineTo(decodeX(0.8333333f), decodeY(2.1666667f));
        path.lineTo(decodeX(2.1666667f), decodeY(2.1666667f));
        path.lineTo(decodeX(2.1666667f), decodeY(0.96f));
        path.lineTo(decodeX(0.8333333f), decodeY(0.96f));
        path.lineTo(decodeX(0.8333333f), decodeY(1.0f));
        path.lineTo(decodeX(2.0f), decodeY(1.0f));
        path.lineTo(decodeX(2.0f), decodeY(2.0f));
        path.lineTo(decodeX(1.0f), decodeY(2.0f));
        path.lineTo(decodeX(1.0f), decodeY(1.0f));
        path.lineTo(decodeX(0.8333333f), decodeY(1.0f));
        path.closePath();
        return path;
!!!11261570.java!!!	decodeRect3() : Rectangle2D
            rect.setRect(decodeX(0.0f), //x
                         decodeY(0.0f), //y
                         decodeX(0.0f) - decodeX(0.0f), //width
                         decodeY(0.0f) - decodeY(0.0f)); //height
        return rect;
!!!11261698.java!!!	decodeRect4() : Rectangle2D
            rect.setRect(decodeX(0.33333334f), //x
                         decodeY(0.08f), //y
                         decodeX(2.6666667f) - decodeX(0.33333334f), //width
                         decodeY(0.96f) - decodeY(0.08f)); //height
        return rect;
!!!11261826.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.3203593f,1.0f },
                new Color[] { color2,
                            decodeColor(color2,color3,0.5f),
                            color3});
!!!11261954.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color10,
                            decodeColor(color10,color11,0.5f),
                            color11});
!!!11262082.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.24251497f,1.0f },
                new Color[] { color16,
                            decodeColor(color16,color17,0.5f),
                            color17});
