class ServiceLoader
!!!8896770.java!!!	reload() : void
        providers.clear();
        lookupIterator = new LazyIterator(service, loader);
!!!8896898.java!!!	ServiceLoader(inout svc : Class, inout cl : ClassLoader)
        service = Objects.requireNonNull(svc, "Service interface cannot be null");
        loader = (cl == null) ? ClassLoader.getSystemClassLoader() : cl;
        acc = (System.getSecurityManager() != null) ? AccessController.getContext() : null;
        reload();
!!!8897026.java!!!	fail(inout service : Class, inout msg : String, inout cause : Throwable) : void
        throw new ServiceConfigurationError(service.getName() + ": " + msg,
                                            cause);
!!!8897154.java!!!	fail(inout service : Class, inout msg : String) : void
        throw new ServiceConfigurationError(service.getName() + ": " + msg);
!!!8897282.java!!!	fail(inout service : Class, inout u : URL, in line : int, inout msg : String) : void
        fail(service, u + ":" + line + ": " + msg);
!!!8897410.java!!!	parseLine(inout service : Class, inout u : URL, inout r : BufferedReader, in lc : int, inout names : List) : int
        String ln = r.readLine();
        if (ln == null) {
            return -1;
        }
        int ci = ln.indexOf('#');
        if (ci >= 0) ln = ln.substring(0, ci);
        ln = ln.trim();
        int n = ln.length();
        if (n != 0) {
            if ((ln.indexOf(' ') >= 0) || (ln.indexOf('\t') >= 0))
                fail(service, u, lc, "Illegal configuration-file syntax");
            int cp = ln.codePointAt(0);
            if (!Character.isJavaIdentifierStart(cp))
                fail(service, u, lc, "Illegal provider-class name: " + ln);
            for (int i = Character.charCount(cp); i < n; i += Character.charCount(cp)) {
                cp = ln.codePointAt(i);
                if (!Character.isJavaIdentifierPart(cp) && (cp != '.'))
                    fail(service, u, lc, "Illegal provider-class name: " + ln);
            }
            if (!providers.containsKey(ln) && !names.contains(ln))
                names.add(ln);
        }
        return lc + 1;
!!!8897538.java!!!	parse(inout service : Class, inout u : URL) : Iterator
        InputStream in = null;
        BufferedReader r = null;
        ArrayList<String> names = new ArrayList<>();
        try {
            in = u.openStream();
            r = new BufferedReader(new InputStreamReader(in, "utf-8"));
            int lc = 1;
            while ((lc = parseLine(service, u, r, lc, names)) >= 0);
        } catch (IOException x) {
            fail(service, "Error reading configuration file", x);
        } finally {
            try {
                if (r != null) r.close();
                if (in != null) in.close();
            } catch (IOException y) {
                fail(service, "Error closing configuration file", y);
            }
        }
        return names.iterator();
!!!8898434.java!!!	iterator() : Iterator
        return new Iterator<S>() {

            Iterator<Map.Entry<String,S>> knownProviders
                = providers.entrySet().iterator();

            public boolean hasNext() {
                if (knownProviders.hasNext())
                    return true;
                return lookupIterator.hasNext();
            }

            public S next() {
                if (knownProviders.hasNext())
                    return knownProviders.next().getValue();
                return lookupIterator.next();
            }

            public void remove() {
                throw new UnsupportedOperationException();
            }

        };
!!!8898562.java!!!	load(inout service : Class, inout loader : ClassLoader) : ServiceLoader
        return new ServiceLoader<>(service, loader);
!!!8898690.java!!!	load(inout service : Class) : ServiceLoader
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        return ServiceLoader.load(service, cl);
!!!8898818.java!!!	loadInstalled(inout service : Class) : ServiceLoader
        ClassLoader cl = ClassLoader.getSystemClassLoader();
        ClassLoader prev = null;
        while (cl != null) {
            prev = cl;
            cl = cl.getParent();
        }
        return ServiceLoader.load(service, prev);
!!!8898946.java!!!	toString() : String
        return "java.util.ServiceLoader[" + service.getName() + "]";
