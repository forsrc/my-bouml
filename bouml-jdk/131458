format 222
"ior" // jdk1.8::com::sun::corba::se::spi::ior
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/corba/se/spi/ior/"
  java_package "com.sun.corba.se.spi.ior"
  classview 130050 "ior"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 140546 "ObjectKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The full object key, which is contained in an IIOPProfile.
The object identifier corresponds to the information passed into
POA::create_reference_with_id and POA::create_reference
(in the POA case).  The template
represents the information that is object adapter specific and
shared across multiple ObjectKey instances.
"
      classrelation 247042 // <generalisation>
	relation 247042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 247042 // <generalisation>
	  b parent class_ref 197506 // Writeable
      end

      operation 650242 "getId"
	public return_type class_ref 198402 // ObjectId
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the object identifier for this Object key.
"
      end

      operation 650370 "getTemplate"
	public return_type class_ref 183554 // ObjectKeyTemplate
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the template for this object key.
"
      end

      operation 650498 "getBytes"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "orb" type class_ref 128386 // ORB
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 650626 "getServerRequestDispatcher"
	public return_type class_ref 200706 // CorbaServerRequestDispatcher
	nparams 1
	  param inout name "orb" type class_ref 131842 // ORB
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 164354 "IOR"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An IOR is represented as a list of profiles.
Only instances of TaggedProfile are contained in the list.
"
      classrelation 241282 // <generalisation>
	relation 241282 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 241282 // <generalisation>
	  b parent class_ref 175362 // List
      end

      classrelation 241410 // <generalisation>
	relation 241410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 241410 // <generalisation>
	  b parent class_ref 197506 // Writeable
      end

      classrelation 241538 // <generalisation>
	relation 241538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 241538 // <generalisation>
	  b parent class_ref 198146 // MakeImmutable
      end

      operation 636162 "getORB"
	public return_type class_ref 131842 // ORB
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 636290 "getTypeId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the type id string from the IOR.
"
      end

      operation 636418 "iteratorById"
	public return_type class_ref 132994 // Iterator
	nparams 1
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return an iterator that iterates over tagged profiles with
identifier id.  It is not possible to modify the list through this
iterator.
"
      end

      operation 636546 "stringify"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a representation of this IOR in the standard GIOP stringified
format that begins with \"IOR:\".
"
      end

      operation 636674 "getIOPIOR"
	public return_type class_ref 199170 // IOR
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a representation of this IOR in the standard GIOP marshalled
form.
"
      end

      operation 636802 "isNil"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return true if this IOR has no profiles.
"
      end

      operation 636930 "isEquivalent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ior" type class_ref 164354 // IOR
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return true if this IOR is equivalent to ior.  Here equivalent means
that the typeids are the same, they have the same number of profiles,
and each profile is equivalent to the corresponding profile.
"
      end

      operation 637058 "getIORTemplates"
	public return_type class_ref 199298 // IORTemplateList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the IORTemplate for this IOR.  This is simply a list
of all TaggedProfileTemplates derived from the TaggedProfiles
of the IOR.
"
      end

      operation 637186 "getProfile"
	public return_type class_ref 199426 // IIOPProfile
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the first IIOPProfile in this IOR.
XXX THIS IS TEMPORARY FOR BACKWARDS COMPATIBILITY AND WILL BE REMOVED
SOON!
"
      end
    end

    class 183554 "ObjectKeyTemplate"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An ObjectKeyTemplate represents the part of an Object Key
that corresponds to the object adapter used to create an
object reference.  The template is shared between many
object references.
"
      classrelation 243970 // <generalisation>
	relation 243970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 243970 // <generalisation>
	  b parent class_ref 197506 // Writeable
      end

      operation 642434 "getORBVersion"
	public return_type class_ref 200450 // ORBVersion
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 642562 "getSubcontractId"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " An ID used to determine how to perform operations on this
ObjectKeyTemplate.  This id determines how to process requests
on this object reference, and what object adapter type to use.
"
      end

      operation 642690 "getServerId"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the server ID for this template.
For CORBA 3.0, this should be a String, but it is currently
an int in the object key template.
"
      end

      operation 642818 "getORBId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the ORB ID for this template.
"
      end

      operation 642946 "getObjectAdapterId"
	public return_type class_ref 200578 // ObjectAdapterId
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the object adapter ID for this template.
"
      end

      operation 643074 "getAdapterId"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Compute an adapter ID for this template than includes
all of the template information.
This value is cached to avoid the expense of recomputing
it.
"
      end

      operation 643202 "write"
	public explicit_return_type "void"
	nparams 2
	  param inout name "objectId" type class_ref 198402 // ObjectId
	  param inout name "os" type class_ref 151170 // OutputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 643330 "getServerRequestDispatcher"
	public return_type class_ref 200706 // CorbaServerRequestDispatcher
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "id" type class_ref 198402 // ObjectId
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 196866 "IdentifiableFactoryFinder"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Interface used to manage a group of related IdentifiableFactory instances.
Factories can be registered, and invoked through a create method, which
must be implemented to handle the case of no registered factory
appropriately.
@author Ken Cavanaugh
"
      operation 635010 "create"
	public return_type class_ref 197378 // Identifiable
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "is" type class_ref 146306 // InputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If there is a registered factory for id, use it to
read an Identifiable from is.  Otherwise create an
appropriate generic container, or throw an error.
The type of generic container, or error behavior is
a property of the implementation.
"
      end

      operation 635138 "registerFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "factory" type class_ref 198658 // IdentifiableFactory
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Register a factory for the given id.
"
      end
    end

    class 196994 "WriteContents"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 662658 "writeContents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "os" type class_ref 151170 // OutputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 197378 "Identifiable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This interface represents an entity that can be written to an
OutputStream and has an identity that is represented by an integer.
This identity is essentially the type of the entity, and is used in
order to know how to read the entity back from an InputStream.
@author Ken Cavanaugh
"
      classrelation 239234 // <generalisation>
	relation 239234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 239234 // <generalisation>
	  b parent class_ref 197506 // Writeable
      end

      operation 631042 "getId"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the (type) identity of this entity.
@return int
"
      end
    end

    class 197506 "Writeable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This interface represents an entity that can be written to an OutputStream.
@author Ken Cavanaugh
"
      operation 630914 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg0" type class_ref 151170 // OutputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Write this object directly to the output stream.
"
      end
    end

    class 197762 "TaggedComponent"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Generic interface for all tagged components.  Users of the ORB may
create implementations of this class and also corresponding factories
of type TaggedComponentFactory.  The factories can be registered with an
ORB instance, in which case they will be used to unmarshal IORs containing
the registered tagged component.
"
      classrelation 239618 // <generalisation>
	relation 239618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 239618 // <generalisation>
	  b parent class_ref 197378 // Identifiable
      end

      operation 632194 "getIOPComponent"
	public return_type class_ref 178690 // TaggedComponent
	nparams 1
	  param inout name "orb" type class_ref 128386 // ORB
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 198018 "TaggedProfile"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " TaggedProfile represents a tagged profile in an IOR.
A profile contains all of the information necessary for an invocation.
It contains one or more endpoints that may be used for an invocation.
A TaggedProfile conceptually has three parts: A TaggedProfileTemplate,
an ObjectKeyTemplate, and an ObjectId.
"
      classrelation 240002 // <generalisation>
	relation 240002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 240002 // <generalisation>
	  b parent class_ref 197378 // Identifiable
      end

      classrelation 240130 // <generalisation>
	relation 240130 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 240130 // <generalisation>
	  b parent class_ref 198146 // MakeImmutable
      end

      operation 632834 "getTaggedProfileTemplate"
	public return_type class_ref 198274 // TaggedProfileTemplate
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 632962 "getObjectId"
	public return_type class_ref 198402 // ObjectId
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 633090 "getObjectKeyTemplate"
	public return_type class_ref 183554 // ObjectKeyTemplate
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 633218 "getObjectKey"
	public return_type class_ref 140546 // ObjectKey
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 633346 "isEquivalent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prof" type class_ref 198018 // TaggedProfile
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return true is prof is equivalent to this TaggedProfile.
This means that this and prof are indistinguishable for
the purposes of remote invocation.  Typically this means that
the profile data is identical and both profiles contain exactly
the same components (if components are applicable).
isEquivalent( prof ) should imply that getObjectId().equals(
prof.getObjectId() ) is true, and so is
getObjectKeyTemplate().equals( prof.getObjectKeyTemplate() ).
"
      end

      operation 633474 "getIOPProfile"
	public return_type class_ref 178562 // TaggedProfile
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the TaggedProfile as a CDR encapsulation in the standard
format.  This is required for Portable interceptors.
"
      end

      operation 633602 "isLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return true if this TaggedProfile was created in orb.
 Caches the result.
"
      end
    end

    class 198146 "MakeImmutable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 632706 "makeImmutable"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 198274 "TaggedProfileTemplate"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Base template for creating TaggedProfiles.  A TaggedProfile will often contain
tagged components.  A template that does not contain components acts like
an empty immutable list.

@author Ken Cavanaugh
"
      classrelation 255234 // <generalisation>
	relation 255234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 255234 // <generalisation>
	  b parent class_ref 175362 // List
      end

      classrelation 255362 // <generalisation>
	relation 255362 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 255362 // <generalisation>
	  b parent class_ref 197378 // Identifiable
      end

      classrelation 255490 // <generalisation>
	relation 255490 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 255490 // <generalisation>
	  b parent class_ref 196994 // WriteContents
      end

      classrelation 255618 // <generalisation>
	relation 255618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 255618 // <generalisation>
	  b parent class_ref 198146 // MakeImmutable
      end

      operation 670594 "iteratorById"
	public return_type class_ref 132994 // Iterator
	nparams 1
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return an iterator that iterates over tagged components with
identifier id.  It is not possible to modify the list through this
iterator.
"
      end

      operation 670722 "create"
	public return_type class_ref 198018 // TaggedProfile
	nparams 2
	  param inout name "oktemp" type class_ref 183554 // ObjectKeyTemplate
	  param inout name "id" type class_ref 198402 // ObjectId
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create a TaggedProfile from this template.
"
      end

      operation 670850 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oktemp" type class_ref 183554 // ObjectKeyTemplate
	  param inout name "id" type class_ref 198402 // ObjectId
	  param inout name "os" type class_ref 151170 // OutputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Write the profile create( oktemp, id ) to the OutputStream os.
"
      end

      operation 670978 "isEquivalent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "temp" type class_ref 198274 // TaggedProfileTemplate
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return true if temp is equivalent to this template.  Equivalence
means that in some sense an invocation on a profile created by this
template has the same results as an invocation on a profile
created from temp.  Equivalence may be weaker than equality.
"
      end

      operation 671106 "getIOPComponents"
	public return_type class_ref 178690 // TaggedComponent
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the tagged components in this profile (if any)
in the GIOP marshalled form, which is required for Portable
Interceptors.  Returns null if either the profile has no
components, or if this type of profile can never contain
components.
"
      end
    end

    class 198402 "ObjectId"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Ken Cavanaugh
"
      classrelation 246146 // <generalisation>
	relation 246146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 246146 // <generalisation>
	  b parent class_ref 197506 // Writeable
      end

      operation 648450 "getId"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 198658 "IdentifiableFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Factory interface for creating Identifiables.
"
      operation 1606658 "getId"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the id of this factory, which is the id of the result
of any create call.
"
      end

      operation 1606786 "create"
	public return_type class_ref 197378 // Identifiable
	nparams 1
	  param inout name "in" type class_ref 146306 // InputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct the appropriate Identifiable object with the
given id from the InputStream is.
"
      end
    end

    class 199042 "IdentifiableContainerBase"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Convenience class for defining objects that contain lists of Identifiables.
Mainly implements iteratorById.  Also note that the constructor creates the
list, which here is always an ArrayList, as this is much more efficient overall
for short lists.
@author  Ken Cavanaugh
"
      classrelation 241026 // <generalisation>
	relation 241026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 241026 // <generalisation>
	  b parent class_ref 197122 // FreezableList
      end

      operation 635906 "IdentifiableContainerBase"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create this class with an empty list of identifiables.
The current implementation uses an ArrayList.
"
      end

      operation 636034 "iteratorById"
	public return_type class_ref 132994 // Iterator
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return an iterator which iterates over all contained Identifiables
with type given by id.
"
      end
    end

    class 199298 "IORTemplateList"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An IORTemplateList is a list of IORTemplate instances.  It can be used to create IORs.
This is useful for representing IORs made of profiles from different object
adapters.
Note that any IORFactory can be added to an IORTemplateList, but it is flattened
so that the result is just a list of IORTemplate instances.
"
      classrelation 243458 // <generalisation>
	relation 243458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 243458 // <generalisation>
	  b parent class_ref 175362 // List
      end

      classrelation 243586 // <generalisation>
	relation 243586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 243586 // <generalisation>
	  b parent class_ref 199810 // IORFactory
      end

      classrelation 243714 // <generalisation>
	relation 243714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 243714 // <generalisation>
	  b parent class_ref 198146 // MakeImmutable
      end
    end

    class 199554 "IORTemplate"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An IORTemplate provides all of the data necessary to create an IOR except
for the typeId and ObjectId.  It is a list of TaggedProfileTemplates.
"
      classrelation 242434 // <generalisation>
	relation 242434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 242434 // <generalisation>
	  b parent class_ref 175362 // List
      end

      classrelation 242818 // <generalisation>
	relation 242818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 242818 // <generalisation>
	  b parent class_ref 199810 // IORFactory
      end

      classrelation 242946 // <generalisation>
	relation 242946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 242946 // <generalisation>
	  b parent class_ref 198146 // MakeImmutable
      end

      operation 640002 "iteratorById"
	public return_type class_ref 132994 // Iterator
	nparams 1
	  param in name "id" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Iterate over all TaggedProfileTemplates in this IORTemplate
with the given id.
"
      end

      operation 640130 "getObjectKeyTemplate"
	public return_type class_ref 183554 // ObjectKeyTemplate
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 199810 "IORFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " An IORFactory provides the capability of creating IORs.  It contains
some collection of TaggedProfileTemplates, which can be iterated over
for portable interceptors.
"
      classrelation 242562 // <generalisation>
	relation 242562 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 242562 // <generalisation>
	  b parent class_ref 197506 // Writeable
      end

      classrelation 242690 // <generalisation>
	relation 242690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 242690 // <generalisation>
	  b parent class_ref 198146 // MakeImmutable
      end

      operation 639746 "makeIOR"
	public return_type class_ref 164354 // IOR
	nparams 3
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "typeid" type class_ref 128130 // String
	  param inout name "oid" type class_ref 198402 // ObjectId
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Construct an IOR containing the given ORB, typeid, and ObjectId.
The same ObjectId will be used for all TaggedProfileTemplates in
the IORFactory.
"
      end

      operation 639874 "isEquivalent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 199810 // IORFactory
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return true iff this.makeIOR(orb,typeid,oid).isEquivalent(
other.makeIOR(orb,typeid,oid) for all orb, typeid, and oid.
"
      end
    end

    class 200578 "ObjectAdapterId"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This is the object adapter ID for an object adapter.
Typically this is the path of strings starting from the
Root POA to get to a POA, but other implementations are possible.
"
      classrelation 245506 // <generalisation>
	relation 245506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 245506 // <generalisation>
	  b parent class_ref 197506 // Writeable
      end

      operation 646658 "getNumLevels"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the number of elements in the adapter ID.
"
      end

      operation 646786 "iterator"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return an iterator that iterates over the components
of this adapter ID.  Each element is returned as a String.
"
      end

      operation 646914 "getAdapterName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get the adapter name simply as an array of strings.
"
      end
    end

    class 201602 "ObjectKeyFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Construct ObjectKey and ObjectKeyTemplate instances from their
CDR-marshalled representation.
"
      operation 649346 "create"
	public return_type class_ref 140546 // ObjectKey
	nparams 1
	  param inout name "key" explicit_type "byte"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create an ObjectKey from its octet sequence representation.
"
      end

      operation 649474 "createTemplate"
	public return_type class_ref 183554 // ObjectKeyTemplate
	nparams 1
	  param inout name "is" type class_ref 146306 // InputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create an ObjectKeyTemplate from its representation
in an InputStream.
"
      end
    end

    class 203138 "TaggedComponentFactoryFinder"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 250114 // <generalisation>
	relation 250114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 250114 // <generalisation>
	  b parent class_ref 196866 // IdentifiableFactoryFinder
      end

      operation 659714 "create"
	public return_type class_ref 197762 // TaggedComponent
	nparams 2
	  param inout name "orb" type class_ref 128386 // ORB
	  param inout name "comp" type class_ref 178690 // TaggedComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create a tagged component from a GIOP marshalled representation
of a tagged component.  This is needed for portable interceptors.
"
      end
    end

    class 203778 "TaggedComponentBase"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Base class to use for implementing TaggedComponents.  It implements
the getIOPComponent method using the TaggedComponent.write() method.
@author Ken Cavanaugh
"
      classrelation 251266 // <generalisation>
	relation 251266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 251266 // <generalisation>
	  b parent class_ref 203906 // IdentifiableBase
      end

      classrelation 251394 // <realization>
	relation 251394 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 251394 // <realization>
	  b parent class_ref 197762 // TaggedComponent
      end

      operation 662914 "getIOPComponent"
	public return_type class_ref 178690 // TaggedComponent
	nparams 1
	  param inout name "orb" type class_ref 128386 // ORB
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 203906 "IdentifiableBase"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Provide support for properly reading and writing Identifiable objects
that are also encapsulations (tagged profiles and components).
"
      classrelation 251010 // <realization>
	relation 251010 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 251010 // <realization>
	  b parent class_ref 197378 // Identifiable
      end

      classrelation 251138 // <realization>
	relation 251138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 251138 // <realization>
	  b parent class_ref 196994 // WriteContents
      end

      operation 662786 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "os" type class_ref 151170 // OutputStream
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Write the data for this object as a CDR encapsulation.
This is used for writing tagged components and profiles.
These data types must be written out as encapsulations,
which means that we need to first write the data out to
an encapsulation stream, then extract the data and write
it to os as an array of octets.
"
      end
    end

    class 205698 "TaggedProfileTemplateBase"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 255106 // <generalisation>
	relation 255106 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 255106 // <generalisation>
	  b parent class_ref 199042 // IdentifiableContainerBase
      end

      classrelation 255746 // <realization>
	relation 255746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 255746 // <realization>
	  b parent class_ref 198274 // TaggedProfileTemplate
      end

      operation 671234 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "os" type class_ref 151170 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 671362 "getIOPComponents"
	public return_type class_ref 178690 // TaggedComponent
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 302594 "EncapsulationFactoryBase"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 495490 // <realization>
	relation 495490 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 495490 // <realization>
	  b parent class_ref 198658 // IdentifiableFactory
      end

      attribute 342274 "id"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 1606914 "getId"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1607042 "EncapsulationFactoryBase"
	public explicit_return_type ""
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1607170 "create"
	public return_type class_ref 197378 // Identifiable
	nparams 1
	  param inout name "in" type class_ref 146306 // InputStream
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1607298 "readContents"
	abstract protected return_type class_ref 197378 // Identifiable
	nparams 1
	  param inout name "is" type class_ref 146306 // InputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 302722 "IORFactories"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class provides a number of factory methods for creating
various IOR SPI classes which are not subclassed for specific protocols.
The following types must be created using this class:
<ul>
<li>ObjectId</li>
<li>ObjectKey</li>
<li>IOR</li>
<li>IORTemplate</li>
</ul>
"
      operation 1607426 "IORFactories"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1607554 "makeObjectId"
	class_operation public return_type class_ref 198402 // ObjectId
	nparams 1
	  param inout name "id" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create an ObjectId for the given byte sequence.
"
      end

      operation 1607682 "makeObjectKey"
	class_operation public return_type class_ref 140546 // ObjectKey
	nparams 2
	  param inout name "oktemp" type class_ref 183554 // ObjectKeyTemplate
	  param inout name "oid" type class_ref 198402 // ObjectId
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create an ObjectKey for the given ObjectKeyTemplate and
ObjectId.
"
      end

      operation 1607810 "makeIOR"
	class_operation public return_type class_ref 164354 // IOR
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "typeid" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create an empty IOR for the given orb and typeid.  The result is mutable.
"
      end

      operation 1607938 "makeIOR"
	class_operation public return_type class_ref 164354 // IOR
	nparams 1
	  param inout name "orb" type class_ref 131842 // ORB
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create an empty IOR for the given orb with a null typeid.  The result is mutable.
"
      end

      operation 1608066 "makeIOR"
	class_operation public return_type class_ref 164354 // IOR
	nparams 1
	  param inout name "is" type class_ref 146306 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Read an IOR from an InputStream.  ObjectKeys are not shared.
"
      end

      operation 1608194 "makeIORTemplate"
	class_operation public return_type class_ref 199554 // IORTemplate
	nparams 1
	  param inout name "oktemp" type class_ref 183554 // ObjectKeyTemplate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Create an IORTemplate with the given ObjectKeyTemplate.  The result
is mutable.
"
      end

      operation 1608322 "makeIORTemplate"
	class_operation public return_type class_ref 199554 // IORTemplate
	nparams 1
	  param inout name "is" type class_ref 146306 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Read an IORTemplate from an InputStream.
"
      end

      operation 1608450 "makeIORTemplateList"
	class_operation public return_type class_ref 199298 // IORTemplateList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1608578 "makeIORTemplateList"
	class_operation public return_type class_ref 199298 // IORTemplateList
	nparams 1
	  param inout name "is" type class_ref 146306 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1608706 "getIORFactory"
	class_operation public return_type class_ref 199810 // IORFactory
	nparams 1
	  param inout name "ort" type class_ref 180098 // ObjectReferenceTemplate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1608834 "getIORTemplateList"
	class_operation public return_type class_ref 199298 // IORTemplateList
	nparams 1
	  param inout name "orf" type class_ref 180994 // ObjectReferenceFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1608962 "makeObjectReferenceTemplate"
	class_operation public return_type class_ref 180098 // ObjectReferenceTemplate
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "iortemp" type class_ref 199554 // IORTemplate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1609090 "makeObjectReferenceFactory"
	class_operation public return_type class_ref 180994 // ObjectReferenceFactory
	nparams 2
	  param inout name "orb" type class_ref 131842 // ORB
	  param inout name "iortemps" type class_ref 199298 // IORTemplateList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1609218 "makeObjectKeyFactory"
	class_operation public return_type class_ref 201602 // ObjectKeyFactory
	nparams 1
	  param inout name "orb" type class_ref 131842 // ORB
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1609346 "getIOR"
	class_operation public return_type class_ref 164354 // IOR
	nparams 1
	  param inout name "obj" type class_ref 133378 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1609474 "makeObjectReference"
	class_operation public return_type class_ref 133378 // Object
	nparams 1
	  param inout name "ior" type class_ref 164354 // IOR
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1609602 "registerValueFactories"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "orb" type class_ref 131842 // ORB
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method must be called in order to register the value
factories for the ObjectReferenceTemplate and ObjectReferenceFactory
value types.
"
      end
    end
  end

  package_ref 132866 // iiop

  deploymentview 131330 "ior"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 159234 "Writeable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.OutputStream;
${definition}"
      associated_elems
	class_ref 197506 // Writeable
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 159362 "Identifiable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 197378 // Identifiable
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 159618 "TaggedComponent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.OutputStream;
import org.omg.CORBA.ORB;
${definition}"
      associated_elems
	class_ref 197762 // TaggedComponent
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 159874 "MakeImmutable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 198146 // MakeImmutable
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 160002 "TaggedProfile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.spi.orb.ORB;
${definition}"
      associated_elems
	class_ref 198018 // TaggedProfile
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 160258 "IdentifiableFactoryFinder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.InputStream;
${definition}"
      associated_elems
	class_ref 196866 // IdentifiableFactoryFinder
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 160514 "IdentifiableContainerBase"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import com.sun.corba.se.impl.ior.FreezableList;
import com.sun.corba.se.spi.ior.TaggedComponent;
import com.sun.corba.se.spi.ior.Identifiable;
${definition}"
      associated_elems
	class_ref 199042 // IdentifiableContainerBase
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 160642 "IOR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import java.util.Iterator;
import com.sun.corba.se.spi.orb.ORBVersion;
import com.sun.corba.se.spi.ior.iiop.GIOPVersion;
import com.sun.corba.se.spi.ior.iiop.IIOPProfile;
import com.sun.corba.se.spi.orb.ORB;
${definition}"
      associated_elems
	class_ref 164354 // IOR
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 160898 "IORFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.spi.orb.ORB;
${definition}"
      associated_elems
	class_ref 199810 // IORFactory
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 161026 "IORTemplate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import java.util.Iterator;
${definition}"
      associated_elems
	class_ref 199554 // IORTemplate
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 161282 "IORTemplateList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_elems
	class_ref 199298 // IORTemplateList
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 161538 "ObjectKeyTemplate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.OutputStream;
import com.sun.corba.se.spi.orb.ORBVersion;
import com.sun.corba.se.spi.orb.ORB;
import com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher;
${definition}"
      associated_elems
	class_ref 183554 // ObjectKeyTemplate
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 162050 "ObjectAdapterId"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
${definition}"
      associated_elems
	class_ref 200578 // ObjectAdapterId
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 162562 "ObjectId"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 198402 // ObjectId
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 162946 "ObjectKeyFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.InputStream;
import com.sun.corba.se.spi.ior.ObjectKey;
import com.sun.corba.se.spi.ior.ObjectKeyTemplate;
${definition}"
      associated_elems
	class_ref 201602 // ObjectKeyFactory
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 163074 "ObjectKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher;
import com.sun.corba.se.spi.orb.ORB;
${definition}"
      associated_elems
	class_ref 140546 // ObjectKey
      end
      comment "Copyright (c) 2002, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 164866 "TaggedComponentFactoryFinder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 203138 // TaggedComponentFactoryFinder
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 165506 "WriteContents"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.OutputStream;
${definition}"
      associated_elems
	class_ref 196994 // WriteContents
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 165634 "IdentifiableBase"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.OutputStream;
import com.sun.corba.se.spi.ior.Writeable;
import com.sun.corba.se.spi.ior.WriteContents;
import com.sun.corba.se.spi.orb.ORB;
import com.sun.corba.se.impl.ior.EncapsulationUtility;
${definition}"
      associated_elems
	class_ref 203906 // IdentifiableBase
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 165762 "TaggedComponentBase"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.InputStream;
import com.sun.corba.se.impl.encoding.EncapsOutputStream;
import com.sun.corba.se.spi.orb.ORB;
${definition}"
      associated_elems
	class_ref 203778 // TaggedComponentBase
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 167170 "TaggedProfileTemplate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import java.util.Iterator;
import org.omg.CORBA_2_3.portable.OutputStream;
import com.sun.corba.se.spi.ior.Identifiable;
import com.sun.corba.se.spi.ior.Writeable;
import com.sun.corba.se.spi.ior.ObjectId;
import com.sun.corba.se.spi.ior.WriteContents;
import com.sun.corba.se.spi.orb.ORB;
${definition}"
      associated_elems
	class_ref 198274 // TaggedProfileTemplate
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 167298 "TaggedProfileTemplateBase"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import org.omg.CORBA_2_3.portable.OutputStream;
import com.sun.corba.se.spi.orb.ORB;
import com.sun.corba.se.impl.ior.EncapsulationUtility;
${definition}"
      associated_elems
	class_ref 205698 // TaggedProfileTemplateBase
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 247426 "IdentifiableFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.InputStream;
import com.sun.corba.se.spi.ior.Identifiable;
${definition}"
      associated_elems
	class_ref 198658 // IdentifiableFactory
      end
      comment "Copyright (c) 2000, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 247554 "EncapsulationFactoryBase"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.omg.CORBA_2_3.portable.InputStream;
import com.sun.corba.se.impl.ior.EncapsulationUtility;
${definition}"
      associated_elems
	class_ref 302594 // EncapsulationFactoryBase
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 247682 "IORFactories"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import org.omg.CORBA_2_3.portable.InputStream;
import org.omg.CORBA.BAD_PARAM;
import org.omg.CORBA.portable.ValueFactory;
import org.omg.PortableInterceptor.ObjectReferenceTemplate;
import org.omg.PortableInterceptor.ObjectReferenceFactory;
import com.sun.corba.se.impl.ior.ObjectIdImpl;
import com.sun.corba.se.impl.ior.ObjectKeyImpl;
import com.sun.corba.se.impl.ior.IORImpl;
import com.sun.corba.se.impl.ior.IORTemplateImpl;
import com.sun.corba.se.impl.ior.IORTemplateListImpl;
import com.sun.corba.se.impl.ior.ObjectReferenceProducerBase;
import com.sun.corba.se.impl.ior.ObjectReferenceFactoryImpl;
import com.sun.corba.se.impl.ior.ObjectReferenceTemplateImpl;
import com.sun.corba.se.impl.ior.ObjectKeyFactoryImpl;
import com.sun.corba.se.impl.orbutil.ORBUtility;
import com.sun.corba.se.spi.orb.ORB;
${definition}"
      associated_elems
	class_ref 302722 // IORFactories
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
