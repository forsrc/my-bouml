class MathContext
!!!7410818.java!!!	MathContext(in setPrecision : int)
        this(setPrecision, DEFAULT_ROUNDINGMODE);
        return;
!!!7410946.java!!!	MathContext(in setPrecision : int, inout setRoundingMode : RoundingMode)
        if (setPrecision < MIN_DIGITS)
            throw new IllegalArgumentException("Digits < 0");
        if (setRoundingMode == null)
            throw new NullPointerException("null RoundingMode");

        precision = setPrecision;
        roundingMode = setRoundingMode;
        return;
!!!7411074.java!!!	MathContext(inout val : String)
        boolean bad = false;
        int setPrecision;
        if (val == null)
            throw new NullPointerException("null String");
        try { // any error here is a string format problem
            if (!val.startsWith("precision=")) throw new RuntimeException();
            int fence = val.indexOf(' ');    // could be -1
            int off = 10;                     // where value starts
            setPrecision = Integer.parseInt(val.substring(10, fence));

            if (!val.startsWith("roundingMode=", fence+1))
                throw new RuntimeException();
            off = fence + 1 + 13;
            String str = val.substring(off, val.length());
            roundingMode = RoundingMode.valueOf(str);
        } catch (RuntimeException re) {
            throw new IllegalArgumentException("bad string format");
        }

        if (setPrecision < MIN_DIGITS)
            throw new IllegalArgumentException("Digits < 0");
        // the other parameters cannot be invalid if we got here
        precision = setPrecision;
!!!7411202.java!!!	getPrecision() : int
        return precision;
!!!7411330.java!!!	getRoundingMode() : RoundingMode
        return roundingMode;
!!!7411458.java!!!	equals(inout x : Object) : boolean
        MathContext mc;
        if (!(x instanceof MathContext))
            return false;
        mc = (MathContext) x;
        return mc.precision == this.precision
            && mc.roundingMode == this.roundingMode; // no need for .equals()
!!!7411586.java!!!	hashCode() : int
        return this.precision + roundingMode.hashCode() * 59;
!!!7411714.java!!!	toString() : String
        return "precision=" +           precision + " " +
               "roundingMode=" +        roundingMode.toString();
!!!7411842.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();     // read in all fields
        // validate possibly bad fields
        if (precision < MIN_DIGITS) {
            String message = "MathContext: invalid digits in stream";
            throw new java.io.StreamCorruptedException(message);
        }
        if (roundingMode == null) {
            String message = "MathContext: null roundingMode in stream";
            throw new java.io.StreamCorruptedException(message);
        }
