format 222
"peer" // jdk1.8::java::awt::peer
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/awt/peer/"
  java_package "java.awt.peer"
  classview 146690 "peer"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 340738 "ComponentPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Component}. This is the top level peer
interface for widgets and defines the bulk of methods for AWT component
peers. Most component peers have to implement this interface (via one
of the subinterfaces), except menu components, which implement
{@link MenuComponentPeer}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      attribute 1623554 "SET_LOCATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Operation for {@link #setBounds(int, int, int, int, int)}, indicating
a change in the component location only.

@see #setBounds(int, int, int, int, int)

"
      end

      attribute 1623682 "SET_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Operation for {@link #setBounds(int, int, int, int, int)}, indicating
a change in the component size only.

@see #setBounds(int, int, int, int, int)

"
      end

      attribute 1623810 "SET_BOUNDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Operation for {@link #setBounds(int, int, int, int, int)}, indicating
a change in the component size and location.

@see #setBounds(int, int, int, int, int)

"
      end

      attribute 1623938 "SET_CLIENT_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Operation for {@link #setBounds(int, int, int, int, int)}, indicating
a change in the component client size. This is used for setting
the 'inside' size of windows, without the border insets.

@see #setBounds(int, int, int, int, int)

"
      end

      attribute 1624066 "RESET_OPERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Resets the setBounds() operation to DEFAULT_OPERATION. This is not
passed into {@link #setBounds(int, int, int, int, int)}.

TODO: This is only used internally and should probably be moved outside
      the peer interface.

@see Component#setBoundsOp

"
      end

      attribute 1624194 "NO_EMBEDDED_CHECK"
	class_attribute const_attribute public explicit_type "int"
	init_value " (1 << 14)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag that is used to suppress checks for embedded frames.

TODO: This is only used internally and should probably be moved outside
      the peer interface.

"
      end

      attribute 1624322 "DEFAULT_OPERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " SET_BOUNDS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default operation, which is to set size and location.

TODO: This is only used internally and should probably be moved outside
      the peer interface.

@see Component#setBoundsOp

"
      end

      operation 6716034 "isObscured"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if a component has been obscured, i.e. by an overlapping
window or similar. This is used by JViewport for optimizing performance.
This doesn't have to be implemented, when
{@link #canDetermineObscurity()} returns {@code false}.

@return {@code true} when the component has been obscured,
        {@code false} otherwise

@see #canDetermineObscurity()
@see javax.swing.JViewport#needsRepaintAfterBlit
"
      end

      operation 6716162 "canDetermineObscurity"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} when the peer can determine if a component
has been obscured, {@code false} false otherwise.

@return {@code true} when the peer can determine if a component
        has been obscured, {@code false} false otherwise

@see #isObscured()
@see javax.swing.JViewport#needsRepaintAfterBlit
"
      end

      operation 6716290 "setVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a component visible or invisible.

@param v {@code true} to make a component visible,
         {@code false} to make it invisible

@see Component#setVisible(boolean)
"
      end

      operation 6716418 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables a component. Disabled components are usually grayed
out and cannot be activated.

@param e {@code true} to enable the component, {@code false}
         to disable it

@see Component#setEnabled(boolean)
"
      end

      operation 6716546 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the component to the specified graphics context. This is called
by {@link Component#paintAll(Graphics)} to paint the component.

@param g the graphics context to paint to

@see Component#paintAll(Graphics)
"
      end

      operation 6716674 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the component to the specified graphics context. This is called
by {@link Component#printAll(Graphics)} to print the component.

@param g the graphics context to print to

@see Component#printAll(Graphics)
"
      end

      operation 6716802 "setBounds"
	public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "op" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location or size or both of the component. The location is
specified relative to the component's parent. The {@code op}
parameter specifies which properties change. If it is
{@link #SET_LOCATION}, then only the location changes (and the size
parameters can be ignored). If {@code op} is {@link #SET_SIZE},
then only the size changes (and the location can be ignored). If
{@code op} is {@link #SET_BOUNDS}, then both change. There is a
special value {@link #SET_CLIENT_SIZE}, which is used only for
window-like components to set the size of the client (i.e. the 'inner'
size, without the insets of the window borders).

@param x the X location of the component
@param y the Y location of the component
@param width the width of the component
@param height the height of the component
@param op the operation flag

@see #SET_BOUNDS
@see #SET_LOCATION
@see #SET_SIZE
@see #SET_CLIENT_SIZE
"
      end

      operation 6716930 "handleEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to let the component peer handle events.

@param e the AWT event to handle

@see Component#dispatchEvent(AWTEvent)
"
      end

      operation 6717058 "coalescePaintEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 864898 // PaintEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to coalesce paint events.

@param e the paint event to consider to coalesce

@see EventQueue#coalescePaintEvent
"
      end

      operation 6717186 "getLocationOnScreen"
	public return_type class_ref 323714 // Point
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the location of the component on the screen.

@return the location of the component on the screen

@see Component#getLocationOnScreen()
"
      end

      operation 6717314 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the preferred size of the component.

@return the preferred size of the component

@see Component#getPreferredSize()
"
      end

      operation 6717442 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the minimum size of the component.

@return the minimum size of the component

@see Component#getMinimumSize()
"
      end

      operation 6717570 "getColorModel"
	public return_type class_ref 312066 // ColorModel
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the color model used by the component.

@return the color model used by the component

@see Component#getColorModel()
"
      end

      operation 6717698 "getGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a graphics object to paint on the component.

@return a graphics object to paint on the component

@see Component#getGraphics()

 TODO: Maybe change this to force Graphics2D, since many things will
 break with plain Graphics nowadays."
      end

      operation 6717826 "getFontMetrics"
	public return_type class_ref 343810 // FontMetrics
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a font metrics object to determine the metrics properties of
the specified font.

@param font the font to determine the metrics for

@return a font metrics object to determine the metrics properties of
        the specified font

@see Component#getFontMetrics(Font)
"
      end

      operation 6717954 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes all resources held by the component peer. This is called
when the component has been disconnected from the component hierarchy
and is about to be garbage collected.

@see Component#removeNotify()
"
      end

      operation 6718082 "setForeground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the foreground color of this component.

@param c the foreground color to set

@see Component#setForeground(Color)
"
      end

      operation 6718210 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the background color of this component.

@param c the background color to set

@see Component#setBackground(Color)
"
      end

      operation 6718338 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the font of this component.

@param f the font of this component

@see Component#setFont(Font)
"
      end

      operation 6718466 "updateCursorImmediately"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the cursor of the component.

@see Component#updateCursorImmediately
"
      end

      operation 6718594 "requestFocus"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "lightweightChild" type class_ref 338818 // Component
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "focusedWindowChangeAllowed" explicit_type "boolean"
	  param in name "time" explicit_type "long"
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests focus on this component.

@param lightweightChild the actual lightweight child that requests the
       focus
@param temporary {@code true} if the focus change is temporary,
       {@code false} otherwise
@param focusedWindowChangeAllowed {@code true} if changing the
       focus of the containing window is allowed or not
@param time the time of the focus change request
@param cause the cause of the focus change request

@return {@code true} if the focus change is guaranteed to be
        granted, {@code false} otherwise
"
      end

      operation 6718722 "isFocusable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} when the component takes part in the focus
traversal, {@code false} otherwise.

@return {@code true} when the component takes part in the focus
        traversal, {@code false} otherwise
"
      end

      operation 6718850 "createImage"
	public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "producer" type class_ref 344066 // ImageProducer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an image using the specified image producer.

@param producer the image producer from which the image pixels will be
       produced

@return the created image

@see Component#createImage(ImageProducer)
"
      end

      operation 6718978 "createImage"
	public return_type class_ref 340098 // Image
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty image with the specified width and height. This is
generally used as a non-accelerated backbuffer for drawing onto the
component (e.g. by Swing).

@param width the width of the image
@param height the height of the image

@return the created image

@see Component#createImage(int, int)

 TODO: Maybe make that return a BufferedImage, because some stuff will
 break if a different kind of image is returned."
      end

      operation 6719106 "createVolatileImage"
	public return_type class_ref 344194 // VolatileImage
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty volatile image with the specified width and height.
This is generally used as an accelerated backbuffer for drawing onto
the component (e.g. by Swing).

@param width the width of the image
@param height the height of the image

@return the created volatile image

@see Component#createVolatileImage(int, int)

 TODO: Include capabilities here and fix Component#createVolatileImage"
      end

      operation 6719234 "prepareImage"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "img" type class_ref 340098 // Image
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param inout name "o" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare the specified image for rendering on this component. This should
start loading the image (if not already loaded) and create an
appropriate screen representation.

@param img the image to prepare
@param w the width of the screen representation
@param h the height of the screen representation
@param o an image observer to observe the progress

@return {@code true} if the image is already fully prepared,
        {@code false} otherwise

@see Component#prepareImage(Image, int, int, ImageObserver)
"
      end

      operation 6719362 "checkImage"
	public explicit_return_type "int"
	nparams 4
	  param inout name "img" type class_ref 340098 // Image
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param inout name "o" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the status of the construction of the screen representaion
of the specified image.

@param img the image to check
@param w the target width
@param h the target height
@param o the image observer to notify

@return the status as bitwise ORed ImageObserver flags

@see Component#checkImage(Image, int, int, ImageObserver)
"
      end

      operation 6719490 "getGraphicsConfiguration"
	public return_type class_ref 340994 // GraphicsConfiguration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the graphics configuration that corresponds to this component.

@return the graphics configuration that corresponds to this component

@see Component#getGraphicsConfiguration()
"
      end

      operation 6719618 "handlesWheelScrolling"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the component handles wheel scrolling itself. Otherwise
it is delegated to the component's parent.

@return {@code true} if the component handles wheel scrolling,
        {@code false} otherwise

@see Component#dispatchEventImpl(AWTEvent)
"
      end

      operation 6719746 "createBuffers"
	public explicit_return_type "void"
	nparams 2
	  param in name "numBuffers" explicit_type "int"
	  param inout name "caps" type class_ref 344578 // BufferCapabilities
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create {@code numBuffers} flipping buffers with the specified
buffer capabilities.

@param numBuffers the number of buffers to create
@param caps the buffer capabilities

@throws AWTException if flip buffering is not supported

@see Component.FlipBufferStrategy#createBuffers
"
      end

      operation 6719874 "getBackBuffer"
	public return_type class_ref 340098 // Image
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the back buffer as image.

@return the back buffer as image

@see Component.FlipBufferStrategy#getBackBuffer
"
      end

      operation 6720002 "flip"
	public explicit_return_type "void"
	nparams 5
	  param in name "x1" explicit_type "int"
	  param in name "y1" explicit_type "int"
	  param in name "x2" explicit_type "int"
	  param in name "y2" explicit_type "int"
	  param inout name "flipAction" type class_ref 345090 // FlipContents
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Move the back buffer to the front buffer.

@param x1 the area to be flipped, upper left X coordinate
@param y1 the area to be flipped, upper left Y coordinate
@param x2 the area to be flipped, lower right X coordinate
@param y2 the area to be flipped, lower right Y coordinate
@param flipAction the flip action to perform

@see Component.FlipBufferStrategy#flip
"
      end

      operation 6720130 "destroyBuffers"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys all created buffers.

@see Component.FlipBufferStrategy#destroyBuffers
"
      end

      operation 6720258 "reparent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newContainer" type class_ref 350210 // ContainerPeer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reparents this peer to the new parent referenced by
{@code newContainer} peer. Implementation depends on toolkit and
container.

@param newContainer peer of the new parent container

@since 1.5
"
      end

      operation 6720386 "isReparentSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this peer supports reparenting to another parent without
destroying the peer.

@return true if appropriate reparent is supported, false otherwise

@since 1.5
"
      end

      operation 6720514 "layout"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by lightweight implementations to tell a ComponentPeer to layout
its sub-elements.  For instance, a lightweight Checkbox needs to layout
the box, as well as the text label.

@see Component#validate()
"
      end

      operation 6720642 "applyShape"
	public explicit_return_type "void"
	nparams 1
	  param inout name "shape" explicit_type "Region"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the shape to the native component window.
@since 1.7

@see Component#applyCompoundShape
"
      end

      operation 6720770 "setZOrder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "above" type class_ref 340738 // ComponentPeer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lowers this component at the bottom of the above HW peer. If the above parameter
is null then the method places this component at the top of the Z-order.
"
      end

      operation 6720898 "updateGraphicsData"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates internal data structures related to the component's GC.

@return if the peer needs to be recreated for the changes to take effect
@since 1.7
"
      end
    end

    class 350210 "ContainerPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Container}. This is the parent interface
for all container like widgets.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080450 // <generalisation>
	relation 3080450 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080450 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6722818 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the insets of this container. Insets usually is the space that
is occupied by things like borders.

@return the insets of this container
"
      end

      operation 6722946 "beginValidate"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the peer that validation of the component tree is about to
begin.

@see Container#validate()
"
      end

      operation 6723074 "endValidate"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the peer that validation of the component tree is finished.

@see Container#validate()
"
      end

      operation 6723202 "beginLayout"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the peer that layout is about to begin. This is called
before the container itself and its children are laid out.

@see Container#validateTree()
"
      end

      operation 6723330 "endLayout"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the peer that layout is finished. This is called after the
container and its children have been laid out.

@see Container#validateTree()
"
      end
    end

    class 859522 "MenuComponentPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The base interface for all kinds of menu components. This is used by
{@link MenuComponent}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      operation 6721282 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes the menu component.

@see MenuComponent#removeNotify()
"
      end

      operation 6721410 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the font for the menu component.

@param f the font to use for the menu component

@see MenuComponent#setFont(Font)
"
      end
    end

    class 861826 "KeyboardFocusManagerPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The native peer interface for {@link KeyboardFocusManager}.
"
      operation 6727554 "setCurrentFocusedWindow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "win" type class_ref 347394 // Window
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the window that should become the focused window.

@param win the window that should become the focused window

"
      end

      operation 6727682 "getCurrentFocusedWindow"
	public return_type class_ref 347394 // Window
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently focused window.

@return the currently focused window

@see KeyboardFocusManager#getNativeFocusedWindow()
"
      end

      operation 6727810 "setCurrentFocusOwner"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component that should become the focus owner.

@param comp the component to become the focus owner

@see KeyboardFocusManager#setNativeFocusOwner(Component)
"
      end

      operation 6727938 "getCurrentFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component that currently owns the input focus.

@return the component that currently owns the input focus

@see KeyboardFocusManager#getNativeFocusOwner()
"
      end

      operation 6728066 "clearGlobalFocusOwner"
	public explicit_return_type "void"
	nparams 1
	  param inout name "activeWindow" type class_ref 347394 // Window
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the current global focus owner.

@param activeWindow

@see KeyboardFocusManager#clearGlobalFocusOwner()
"
      end
    end

    class 863234 "DesktopPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code DesktopPeer} interface provides methods for the operation
of open, edit, print, browse and mail with the given URL or file, by
launching the associated application.
<p>
Each platform has an implementation class for this interface.

"
      operation 6723458 "isSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "action" type class_ref 863106 // Action
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given action is supported on the current platform.
@param action the action type to be tested if it's supported on the
       current platform.
@return {@code true} if the given action is supported on
        the current platform; {@code false} otherwise.
"
      end

      operation 6723586 "open"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the associated application to open the given file. The
associated application is registered to be the default file viewer for
the file type of the given file.

@param file the given file.
@throws IOException If the given file has no associated application,
        or the associated application fails to be launched.
"
      end

      operation 6723714 "edit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the associated editor and opens the given file for editing. The
associated editor is registered to be the default editor for the file
type of the given file.

@param file the given file.
@throws IOException If the given file has no associated editor, or
        the associated application fails to be launched.
"
      end

      operation 6723842 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the given file with the native desktop printing facility, using
the associated application's print command.

@param file the given file.
@throws IOException If the given file has no associated application
        that can be used to print it.
"
      end

      operation 6723970 "mail"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mailtoURL" type class_ref 783874 // URI
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the mail composing window of the user default mail client,
filling the message fields including to, cc, etc, with the values
specified by the given mailto URL.

@param mailtoURL represents a mailto URL with specified values of the message.
       The syntax of mailto URL is defined by
       <a href=\"http://www.ietf.org/rfc/rfc2368.txt\">RFC2368: The mailto
       URL scheme</a>
@throws IOException If the user default mail client is not found,
        or it fails to be launched.
"
      end

      operation 6724098 "browse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 783874 // URI
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the user default browser to display the given URI.

@param uri the given URI.
@throws IOException If the user default browser is not found,
        or it fails to be launched.
"
      end
    end

    class 865666 "FontPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for fonts. This is only a marker interface and not
used by AWT itself.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
    end

    class 874754 "RobotPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "RobotPeer defines an interface whereby toolkits support automated testing
by allowing native input events to be generated from Java code.

This interface should not be directly imported by code outside the
java.awt.* hierarchy; it is not to be considered public and is subject
to change.

@author      Robi Khan
"
      operation 6730882 "mouseMove"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the mouse pointer to the specified screen location.

@param x the X location on screen
@param y the Y location on screen

@see Robot#mouseMove(int, int)
"
      end

      operation 6731010 "mousePress"
	public explicit_return_type "void"
	nparams 1
	  param in name "buttons" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates a mouse press with the specified button(s).

@param buttons the button mask

@see Robot#mousePress(int)
"
      end

      operation 6731138 "mouseRelease"
	public explicit_return_type "void"
	nparams 1
	  param in name "buttons" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates a mouse release with the specified button(s).

@param buttons the button mask

@see Robot#mouseRelease(int)
"
      end

      operation 6731266 "mouseWheel"
	public explicit_return_type "void"
	nparams 1
	  param in name "wheelAmt" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates mouse wheel action.

@param wheelAmt number of notches to move the mouse wheel

@see Robot#mouseWheel(int)
"
      end

      operation 6731394 "keyPress"
	public explicit_return_type "void"
	nparams 1
	  param in name "keycode" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates a key press of the specified key.

@param keycode the key code to press

@see Robot#keyPress(int)
"
      end

      operation 6731522 "keyRelease"
	public explicit_return_type "void"
	nparams 1
	  param in name "keycode" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates a key release of the specified key.

@param keycode the key code to release

@see Robot#keyRelease(int)
"
      end

      operation 6731650 "getRGBPixel"
	public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the RGB value of the specified pixel on screen.

@param x the X screen coordinate
@param y the Y screen coordinate

@return the RGB value of the specified pixel on screen

@see Robot#getPixelColor(int, int)
"
      end

      operation 6731778 "getRGBPixels"
	public explicit_return_type "int"
	nparams 1
	  param inout name "bounds" type class_ref 314114 // Rectangle
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the RGB values of the specified screen area as an array.

@param bounds the screen area to capture the RGB values from

@return the RGB values of the specified screen area

@see Robot#createScreenCapture(Rectangle)
"
      end

      operation 6731906 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes the robot peer when it is not needed anymore.
"
      end
    end

    class 876418 "SystemTrayPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link SystemTray}. This doesn't need to be
implemented if {@link SystemTray#isSupported()} returns false.
"
      operation 6733186 "getTrayIconSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the system tray icon.

@return the size of the system tray icon

@see SystemTray#getTrayIconSize()
"
      end
    end

    class 878338 "ButtonPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Button}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3079682 // <generalisation>
	relation 3079682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3079682 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6721026 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the label that is displayed on the button. Can be {@code null}
when the button should not display a label.

@param label the label string to set

@see Button#setLabel
"
      end
    end

    class 878466 "TextFieldPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link TextField}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3082498 // <generalisation>
	relation 3082498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3082498 // <generalisation>
	  b parent class_ref 901250 // TextComponentPeer
      end

      operation 6734978 "setEchoChar"
	public explicit_return_type "void"
	nparams 1
	  param in name "echoChar" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the echo character.

@param echoChar the echo character to set

@see TextField#getEchoChar()
"
      end

      operation 6735106 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "columns" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size of the text field with the specified number
of columns.

@param columns the number of columns

@return the preferred size of the text field

@see TextField#getPreferredSize(int)
"
      end

      operation 6735234 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "columns" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum size of the text field with the specified number
of columns.

@param columns the number of columns

@return the minimum size of the text field

@see TextField#getMinimumSize(int)
"
      end
    end

    class 878594 "LabelPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Label}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3081090 // <generalisation>
	relation 3081090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081090 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6728194 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text to be displayed on the label.

@param label the text to be displayed on the label

@see Label#setText
"
      end

      operation 6728322 "setAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignment" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the alignment of the label text.

@param alignment the alignment of the label text

@see Label#setAlignment(int)
@see Label#CENTER
@see Label#RIGHT
@see Label#LEFT
"
      end
    end

    class 878722 "ListPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link List}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3081346 // <generalisation>
	relation 3081346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081346 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6728450 "getSelectedIndexes"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the indices of the list items that are currently selected.
The returned array is not required to be a copy, the callers of this
method already make sure it is not modified.

@return the indices of the list items that are currently selected

@see List#getSelectedIndexes()
"
      end

      operation 6728578 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "item" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an item to the list at the specified index.

@param item the item to add to the list
@param index the index where to add the item into the list

@see List#add(String, int)
"
      end

      operation 6728706 "delItems"
	public explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes items from the list. All items from start to end should are
deleted, including the item at the start and end indices.

@param start the first item to be deleted
@param end the last item to be deleted
"
      end

      operation 6728834 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all items from the list.

@see List#removeAll()
"
      end

      operation 6728962 "select"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the item at the specified {@code index}.

@param index the index of the item to select

@see List#select(int)
"
      end

      operation 6729090 "deselect"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "De-selects the item at the specified {@code index}.

@param index the index of the item to de-select

@see List#deselect(int)
"
      end

      operation 6729218 "makeVisible"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes sure that the item at the specified {@code index} is visible,
by scrolling the list or similar.

@param index the index of the item to make visible

@see List#makeVisible(int)
"
      end

      operation 6729346 "setMultipleMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Toggles multiple selection mode on or off.

@param m {@code true} for multiple selection mode,
       {@code false} for single selection mode

@see List#setMultipleMode(boolean)
"
      end

      operation 6729474 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "rows" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size for a list with the specified number of rows.

@param rows the number of rows

@return the preferred size of the list

@see List#getPreferredSize(int)
"
      end

      operation 6729602 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "rows" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum size for a list with the specified number of rows.

@param rows the number of rows

@return the minimum size of the list

@see List#getMinimumSize(int)
"
      end
    end

    class 878850 "CheckboxPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Checkbox}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080194 // <generalisation>
	relation 3080194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080194 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6721922 "setState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of the checkbox to be checked {@code true} or
unchecked {@code false}.

@param state the state to set on the checkbox

@see Checkbox#setState(boolean)
"
      end

      operation 6722050 "setCheckboxGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 859010 // CheckboxGroup
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the checkbox group for this checkbox. Checkboxes in one checkbox
group can only be selected exclusively (like radio buttons). A value
of {@code null} removes this checkbox from any checkbox group.

@param g the checkbox group to set, or {@code null} when this
         checkbox should not be placed in any group

@see Checkbox#setCheckboxGroup(CheckboxGroup)
"
      end

      operation 6722178 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the label that should be displayed on the checkbox. A value of
{@code null} means that no label should be displayed.

@param label the label to be displayed on the checkbox, or
             {@code null} when no label should be displayed.
"
      end
    end

    class 878978 "ScrollbarPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Scrollbar}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3081986 // <generalisation>
	relation 3081986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081986 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6732034 "setValues"
	public explicit_return_type "void"
	nparams 4
	  param in name "value" explicit_type "int"
	  param in name "visible" explicit_type "int"
	  param in name "minimum" explicit_type "int"
	  param in name "maximum" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the parameters for the scrollbar.

@param value the current value
@param visible how much of the whole scale is visible
@param minimum the minimum value
@param maximum the maximum value

@see Scrollbar#setValues(int, int, int, int)
"
      end

      operation 6732162 "setLineIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "l" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the line increment of the scrollbar.

@param l the line increment

@see Scrollbar#setLineIncrement(int)
"
      end

      operation 6732290 "setPageIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "l" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the page increment of the scrollbar.

@param l the page increment

@see Scrollbar#setPageIncrement(int)
"
      end
    end

    class 879106 "ScrollPanePeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link ScrollPane}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3082114 // <generalisation>
	relation 3082114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3082114 // <generalisation>
	  b parent class_ref 350210 // ContainerPeer
      end

      operation 6732418 "getHScrollbarHeight"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the height of the horizontal scroll bar.

@return the height of the horizontal scroll bar

@see ScrollPane#getHScrollbarHeight()
"
      end

      operation 6732546 "getVScrollbarWidth"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width of the vertical scroll bar.

@return the width of the vertical scroll bar

@see ScrollPane#getVScrollbarWidth()
"
      end

      operation 6732674 "setScrollPosition"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the scroll position of the child.

@param x the X coordinate of the scroll position
@param y the Y coordinate of the scroll position

@see ScrollPane#setScrollPosition(int, int)
"
      end

      operation 6732802 "childResized"
	public explicit_return_type "void"
	nparams 2
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the child component changes its size.

@param w the new width of the child component
@param h the new height of the child component

@see ScrollPane#layout()
"
      end

      operation 6732930 "setUnitIncrement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "adj" type class_ref 855938 // Adjustable
	  param in name "u" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unit increment of one of the scroll pane's adjustables.

@param adj the scroll pane adjustable object
@param u the unit increment

@see ScrollPaneAdjustable#setUnitIncrement(int)
"
      end

      operation 6733058 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "adj" type class_ref 855938 // Adjustable
	  param in name "v" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value for one of the scroll pane's adjustables.

@param adj the scroll pane adjustable object
@param v the value to set
"
      end
    end

    class 879234 "TextAreaPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link TexTArea}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3082370 // <generalisation>
	relation 3082370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3082370 // <generalisation>
	  b parent class_ref 901250 // TextComponentPeer
      end

      operation 6734466 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "pos" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified text at the specified position in the document.

@param text the text to insert
@param pos the position to insert

@see TextArea#insert(String, int)
"
      end

      operation 6734594 "replaceRange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces a range of text by the specified string.

@param text the replacement string
@param start the begin of the range to replace
@param end the end of the range to replace

@see TextArea#replaceRange(String, int, int)
"
      end

      operation 6734722 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size of a textarea with the specified number of
columns and rows.

@param rows the number of rows
@param columns the number of columns

@return the preferred size of a textarea

@see TextArea#getPreferredSize(int, int)
"
      end

      operation 6734850 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum size of a textarea with the specified number of
columns and rows.

@param rows the number of rows
@param columns the number of columns

@return the minimum size of a textarea

@see TextArea#getMinimumSize(int, int)
"
      end
    end

    class 879362 "ChoicePeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Choice}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080322 // <generalisation>
	relation 3080322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080322 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6722306 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "item" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an item with the string {@code item} to the combo box list
at index {@code index}.

@param item the label to be added to the list
@param index the index where to add the item

@see Choice#add(String)
"
      end

      operation 6722434 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the item at index {@code index} from the combo box list.

@param index the index where to remove the item

@see Choice#remove(int)
"
      end

      operation 6722562 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all items from the combo box list.

@see Choice#removeAll()
"
      end

      operation 6722690 "select"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the item at index {@code index}.

@param index the index which should be selected

@see Choice#select(int)
"
      end
    end

    class 879490 "FramePeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Frame}. This adds a couple of frame specific
methods to the {@link WindowPeer} interface.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080962 // <generalisation>
	relation 3080962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080962 // <generalisation>
	  b parent class_ref 879874 // WindowPeer
      end

      operation 6726402 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the title on the frame.

@param title the title to set

@see Frame#setTitle(String)
"
      end

      operation 6726530 "setMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mb" type class_ref 866562 // MenuBar
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the menu bar for the frame.

@param mb the menu bar to set

@see Frame#setMenuBar(MenuBar)
"
      end

      operation 6726658 "setResizable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resizeable" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the frame should be resizable or not.

@param resizeable {@code true} when the frame should be resizable,
       {@code false} if not

@see Frame#setResizable(boolean)
"
      end

      operation 6726786 "setState"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the state of the frame.

@param state the new state

@see Frame#setExtendedState(int)
"
      end

      operation 6726914 "getState"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current state of the frame.

@return the current state of the frame

@see Frame#getExtendedState()
"
      end

      operation 6727042 "setMaximizedBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bounds" type class_ref 314114 // Rectangle
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bounds of the frame when it becomes maximized.

@param bounds the maximized bounds of the frame

@see Frame#setMaximizedBounds(Rectangle)
"
      end

      operation 6727170 "setBoundsPrivate"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size and location for embedded frames. (On embedded frames,
setLocation() and setBounds() always set the frame to (0,0) for
backwards compatibility.

@param x the X location
@param y the Y location
@param width the width of the frame
@param height the height of the frame

@see EmbeddedFrame#setBoundsPrivate(int, int, int, int)

 TODO: This is only used in EmbeddedFrame, and should probably be moved
 into an EmbeddedFramePeer which would extend FramePeer"
      end

      operation 6727298 "getBoundsPrivate"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size and location for embedded frames. (On embedded frames,
setLocation() and setBounds() always set the frame to (0,0) for
backwards compatibility.

@return the bounds of an embedded frame

@see EmbeddedFrame#getBoundsPrivate()

 TODO: This is only used in EmbeddedFrame, and should probably be moved
 into an EmbeddedFramePeer which would extend FramePeer"
      end

      operation 6727426 "emulateActivation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "activate" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests the peer to emulate window activation.

@param activate activate or deactivate the window
"
      end
    end

    class 879618 "CanvasPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Canvas}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3079810 // <generalisation>
	relation 3079810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3079810 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6721154 "getAppropriateGraphicsConfiguration"
	public return_type class_ref 340994 // GraphicsConfiguration
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests a GC that best suits this Canvas. The returned GC may differ
from the requested GC passed as the argument to this method. This method
must return a non-null value (given the argument is non-null as well).

@since 1.7
"
      end
    end

    class 879746 "PanelPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Panel}. This is a subinterface of
ContainerPeer and does not declare any additional methods because a Panel
is just that, a concrete Container.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3081730 // <generalisation>
	relation 3081730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081730 // <generalisation>
	  b parent class_ref 350210 // ContainerPeer
      end
    end

    class 879874 "WindowPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Window}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080578 // <generalisation>
	relation 3080578 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080578 // <generalisation>
	  b parent class_ref 350210 // ContainerPeer
      end

      operation 6724226 "toFront"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this window the topmost window on the desktop.

@see Window#toFront()
"
      end

      operation 6724354 "toBack"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this window the bottommost window on the desktop.

@see Window#toBack()
"
      end

      operation 6724482 "updateAlwaysOnTopState"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the window's always-on-top state.
Sets if the window should always stay
on top of all other windows or not.

@see Window#getAlwaysOnTop()
@see Window#setAlwaysOnTop(boolean)
"
      end

      operation 6724610 "updateFocusableWindowState"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the window's focusable state.

@see Window#setFocusableWindowState(boolean)
"
      end

      operation 6724738 "setModalBlocked"
	public explicit_return_type "void"
	nparams 2
	  param inout name "blocker" type class_ref 469122 // Dialog
	  param inout name "blocked" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if this window is blocked by a modal dialog or not.

@param blocker the blocking modal dialog
@param blocked {@code true} to block the window, {@code false}
       to unblock it
"
      end

      operation 6724866 "updateMinimumSize"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the minimum size on the peer.

@see Window#setMinimumSize(Dimension)
"
      end

      operation 6724994 "updateIconImages"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the icons for the window.

@see Window#setIconImages(java.util.List)
"
      end

      operation 6725122 "setOpacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "opacity" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the level of opacity for the window.

@see Window#setOpacity(float)
"
      end

      operation 6725250 "setOpaque"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isOpaque" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the per-pixel alpha support for the window.

@see Window#setBackground(Color)
"
      end

      operation 6725378 "updateWindow"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the native part of non-opaque window.

@see Window#setBackground(Color)
"
      end

      operation 6725506 "repositionSecurityWarning"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instructs the peer to update the position of the security warning.
"
      end
    end

    class 880002 "DialogPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link Dialog}. This adds a couple of dialog specific
features to the {@link WindowPeer} interface.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080706 // <generalisation>
	relation 3080706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080706 // <generalisation>
	  b parent class_ref 879874 // WindowPeer
      end

      operation 6725634 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the title on the dialog window.

@param title the title to set

@see Dialog#setTitle(String)
"
      end

      operation 6725762 "setResizable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resizeable" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the dialog should be resizable or not.

@param resizeable {@code true} when the dialog should be resizable,
       {@code false} if not

@see Dialog#setResizable(boolean)
"
      end

      operation 6725890 "blockWindows"
	public explicit_return_type "void"
	nparams 1
	  param inout name "windows" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Window> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Block the specified windows. This is used for modal dialogs.

@param windows the windows to block

@see Dialog#modalShow()
@see Dialog#blockWindows()
"
      end
    end

    class 880130 "MenuBarPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link MenuBar}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3081474 // <generalisation>
	relation 3081474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081474 // <generalisation>
	  b parent class_ref 859522 // MenuComponentPeer
      end

      operation 6729730 "addMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 872194 // Menu
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a menu to the menu bar.

@param m the menu to add

@see MenuBar#add(Menu)
"
      end

      operation 6729858 "delMenu"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes a menu from the menu bar.

@param index the index of the menu to remove

@see MenuBar#remove(int)
"
      end

      operation 6729986 "addHelpMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 872194 // Menu
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a help menu to the menu bar.

@param m the help menu to add

@see MenuBar#setHelpMenu(Menu)
"
      end
    end

    class 880258 "MenuPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for menus. This is used by {@link Menu}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3081602 // <generalisation>
	relation 3081602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081602 // <generalisation>
	  b parent class_ref 880514 // MenuItemPeer
      end

      operation 6730114 "addSeparator"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a separator (e.g. a horizontal line or similar) to the menu.

@see Menu#addSeparator()
"
      end

      operation 6730242 "addItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 859394 // MenuItem
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified menu item to the menu.

@param item the menu item to add

@see Menu#add(MenuItem)
"
      end

      operation 6730370 "delItem"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the menu item at the specified index.

@param index the index of the item to remove

@see Menu#remove(int)
"
      end
    end

    class 880386 "PopupMenuPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link PopupMenu}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3081858 // <generalisation>
	relation 3081858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081858 // <generalisation>
	  b parent class_ref 880258 // MenuPeer
      end

      operation 6730754 "show"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 340610 // Event
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows the popup menu.

@param e a synthetic event describing the origin and location of the
       popup menu

@see PopupMenu#show(java.awt.Component, int, int)
"
      end
    end

    class 880514 "MenuItemPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for menu items. This is used by {@link MenuItem}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3079938 // <generalisation>
	relation 3079938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3079938 // <generalisation>
	  b parent class_ref 859522 // MenuComponentPeer
      end

      operation 6721538 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the label to be displayed in this menu item.

@param label the label to be displayed
"
      end

      operation 6721666 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables the menu item.

@param e {@code true} to enable the menu item, {@code false}
       to disable it
"
      end
    end

    class 880642 "FileDialogPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link FileDialog}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080834 // <generalisation>
	relation 3080834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080834 // <generalisation>
	  b parent class_ref 880002 // DialogPeer
      end

      operation 6726018 "setFile"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected file for this file dialog.

@param file the file to set as selected file, or {@code null} for
       no selected file

@see FileDialog#setFile(String)
"
      end

      operation 6726146 "setDirectory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dir" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current directory for this file dialog.

@param dir the directory to set

@see FileDialog#setDirectory(String)
"
      end

      operation 6726274 "setFilenameFilter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 580482 // FilenameFilter
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the filename filter for filtering the displayed files.

@param filter the filter to set

@see FileDialog#setFilenameFilter(FilenameFilter)
"
      end
    end

    class 880770 "CheckboxMenuItemPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link CheckboxMenuItem}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3080066 // <generalisation>
	relation 3080066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3080066 // <generalisation>
	  b parent class_ref 880514 // MenuItemPeer
      end

      operation 6721794 "setState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of the checkbox to be checked {@code true} or
unchecked {@code false}.

@param state the state to set on the checkbox

@see CheckboxMenuItem#setState(boolean)
"
      end
    end

    class 880898 "MouseInfoPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Peer interface for {@link MouseInfo}. This is used to get some additional
information about the mouse.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      operation 6730498 "fillPointWithCoords"
	public explicit_return_type "int"
	nparams 1
	  param inout name "point" type class_ref 323714 // Point
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method does two things: it fills the point fields with
the current coordinates of the mouse cursor and returns the
number of the screen device where the pointer is located.
The number of the screen device is only returned for independent
devices (which are not parts of a virtual screen device).
For virtual screen devices, 0 is returned.
Mouse coordinates are also calculated depending on whether
or not the screen device is virtual. For virtual screen
devices, pointer coordinates are calculated in the virtual
coordinate system. Otherwise, coordinates are calculated in
the coordinate system of the screen device where the pointer
is located.
See java.awt.GraphicsConfiguration documentation for more
details about virtual screen devices.
"
      end

      operation 6730626 "isWindowUnderMouse"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not the window is located under the mouse
pointer. The window is considered to be under the mouse pointer
if it is showing on the screen, and the mouse pointer is above
the part of the window that is not obscured by any other windows.
"
      end
    end

    class 881026 "LightweightPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The LightweightPeer interface marks a component as depending upon
a native container so window related events can be routed to the
component.  Since this only applies to components and their
extensions, this interface extends ComponentPeer.
<p>
The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.

@author Timothy Prinzing
"
      classrelation 3081218 // <generalisation>
	relation 3081218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3081218 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end
    end

    class 882306 "TrayIconPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for the {@link TrayIcon}. This doesn't need to be
implemented if {@link SystemTray#isSupported()} returns false.
"
      operation 6735362 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes the tray icon and releases and resources held by it.

@see TrayIcon#removeNotify()
"
      end

      operation 6735490 "setToolTip"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tooltip" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the tool tip for the tray icon.

@param tooltip the tooltip to set

@see TrayIcon#setToolTip(String)
"
      end

      operation 6735618 "updateImage"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the icon image. This is supposed to display the current icon
from the TrayIcon component in the actual tray icon.

@see TrayIcon#setImage(java.awt.Image)
@see TrayIcon#setImageAutoSize(boolean)
"
      end

      operation 6735746 "displayMessage"
	public explicit_return_type "void"
	nparams 3
	  param inout name "caption" type class_ref 128130 // String
	  param inout name "text" type class_ref 128130 // String
	  param inout name "messageType" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Displays a message at the tray icon.

@param caption the message caption
@param text the actual message text
@param messageType the message type

@see TrayIcon#displayMessage(String, String, java.awt.TrayIcon.MessageType)
"
      end

      operation 6735874 "showPopupMenu"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows the popup menu of this tray icon at the specified position.

@param x the X location for the popup menu
@param y the Y location for the popup menu
"
      end
    end

    class 901250 "TextComponentPeer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The peer interface for {@link TextComponent}.

The peer interfaces are intended only for use in porting
the AWT. They are not intended for use by application
developers, and developers should not implement peers
nor invoke any of the peer methods directly on the peer
instances.
"
      classrelation 3082242 // <generalisation>
	relation 3082242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3082242 // <generalisation>
	  b parent class_ref 340738 // ComponentPeer
      end

      operation 6733314 "setEditable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "editable" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets if the text component should be editable or not.

@param editable {@code true} for editable text components,
       {@code false} for non-editable text components

@see TextComponent#setEditable(boolean)
"
      end

      operation 6733442 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current content of the text component.

@return the current content of the text component

@see TextComponent#getText()
"
      end

      operation 6733570 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the content for the text component.

@param text the content to set

@see TextComponent#setText(String)
"
      end

      operation 6733698 "getSelectionStart"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the current selection.

@return the start index of the current selection

@see TextComponent#getSelectionStart()
"
      end

      operation 6733826 "getSelectionEnd"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the end index of the current selection.

@return the end index of the current selection

@see TextComponent#getSelectionEnd()
"
      end

      operation 6733954 "select"
	public explicit_return_type "void"
	nparams 2
	  param in name "selStart" explicit_type "int"
	  param in name "selEnd" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects an area of the text component.

@param selStart the start index of the new selection
@param selEnd the end index of the new selection

@see TextComponent#select(int, int)
"
      end

      operation 6734082 "setCaretPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the caret position of the text component.

@param pos the caret position to set

@see TextComponent#setCaretPosition(int)
"
      end

      operation 6734210 "getCaretPosition"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current caret position.

@return the current caret position

@see TextComponent#getCaretPosition()
"
      end

      operation 6734338 "getInputMethodRequests"
	public return_type class_ref 345986 // InputMethodRequests
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input method requests.

@return the input method requests
"
      end
    end
  end

  deploymentview 166530 "peer"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 652546 "ComponentPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.PaintEvent;
import java.awt.image.ColorModel;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.awt.image.VolatileImage;
import sun.awt.CausedFocusEvent;
import sun.java2d.pipe.Region;
${definition}"
      associated_elems
	class_ref 340738 // ComponentPeer
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 652674 "ButtonPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Button;
${definition}"
      associated_elems
	class_ref 878338 // ButtonPeer
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 652802 "CanvasPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Canvas;
import java.awt.GraphicsConfiguration;
${definition}"
      associated_elems
	class_ref 879618 // CanvasPeer
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 652930 "MenuComponentPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Font;
import java.awt.MenuComponent;
${definition}"
      associated_elems
	class_ref 859522 // MenuComponentPeer
      end
      comment "Copyright (c) 1995, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653058 "MenuItemPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.MenuItem;
${definition}"
      associated_elems
	class_ref 880514 // MenuItemPeer
      end
      comment "Copyright (c) 1995, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653186 "CheckboxMenuItemPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.CheckboxMenuItem;
${definition}"
      associated_elems
	class_ref 880770 // CheckboxMenuItemPeer
      end
      comment "Copyright (c) 1995, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653314 "CheckboxPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Checkbox;
import java.awt.CheckboxGroup;
${definition}"
      associated_elems
	class_ref 878850 // CheckboxPeer
      end
      comment "Copyright (c) 1995, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653442 "ChoicePeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Choice;
${definition}"
      associated_elems
	class_ref 879362 // ChoicePeer
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653570 "ContainerPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
${definition}"
      associated_elems
	class_ref 350210 // ContainerPeer
      end
      comment "Copyright (c) 1995, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653698 "DesktopPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.awt.Desktop.Action;
${definition}"
      associated_elems
	class_ref 863234 // DesktopPeer
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653826 "WindowPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
${definition}"
      associated_elems
	class_ref 879874 // WindowPeer
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 653954 "DialogPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
${definition}"
      associated_elems
	class_ref 880002 // DialogPeer
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654082 "FileDialogPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.FileDialog;
import java.io.FilenameFilter;
${definition}"
      associated_elems
	class_ref 880642 // FileDialogPeer
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654210 "FontPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 865666 // FontPeer
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654338 "FramePeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import sun.awt.EmbeddedFrame;
${definition}"
      associated_elems
	class_ref 879490 // FramePeer
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654466 "KeyboardFocusManagerPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Window;
${definition}"
      associated_elems
	class_ref 861826 // KeyboardFocusManagerPeer
      end
      comment "Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654594 "LabelPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Label;
${definition}"
      associated_elems
	class_ref 878594 // LabelPeer
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654722 "LightweightPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 881026 // LightweightPeer
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654850 "ListPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Dimension;
import java.awt.List;
${definition}"
      associated_elems
	class_ref 878722 // ListPeer
      end
      comment "Copyright (c) 1995, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 654978 "MenuBarPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Menu;
import java.awt.MenuBar;
${definition}"
      associated_elems
	class_ref 880130 // MenuBarPeer
      end
      comment "Copyright (c) 1995, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 655106 "MenuPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Menu;
import java.awt.MenuItem;
${definition}"
      associated_elems
	class_ref 880258 // MenuPeer
      end
      comment "Copyright (c) 1995, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 655234 "MouseInfoPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Window;
import java.awt.Point;
${definition}"
      associated_elems
	class_ref 880898 // MouseInfoPeer
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 655362 "PanelPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 879746 // PanelPeer
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 655490 "PopupMenuPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Event;
import java.awt.PopupMenu;
${definition}"
      associated_elems
	class_ref 880386 // PopupMenuPeer
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 655618 "RobotPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
${definition}"
      associated_elems
	class_ref 874754 // RobotPeer
      end
      comment "Copyright (c) 1999, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 655746 "ScrollbarPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Scrollbar;
${definition}"
      associated_elems
	class_ref 878978 // ScrollbarPeer
      end
      comment "Copyright (c) 1995, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 655874 "ScrollPanePeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Adjustable;
import java.awt.ScrollPane;
import java.awt.ScrollPaneAdjustable;
${definition}"
      associated_elems
	class_ref 879106 // ScrollPanePeer
      end
      comment "Copyright (c) 1996, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 656002 "SystemTrayPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Dimension;
import java.awt.SystemTray;
${definition}"
      associated_elems
	class_ref 876418 // SystemTrayPeer
      end
      comment "Copyright (c) 2005, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 656130 "TextComponentPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.TextComponent;
import java.awt.im.InputMethodRequests;
${definition}"
      associated_elems
	class_ref 901250 // TextComponentPeer
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 656258 "TextAreaPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Dimension;
import java.awt.TextArea;
${definition}"
      associated_elems
	class_ref 879234 // TextAreaPeer
      end
      comment "Copyright (c) 1995, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 656386 "TextFieldPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Dimension;
import java.awt.TextField;
${definition}"
      associated_elems
	class_ref 878466 // TextFieldPeer
      end
      comment "Copyright (c) 1995, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 656514 "TrayIconPeer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.SystemTray;
import java.awt.TrayIcon;
${definition}"
      associated_elems
	class_ref 882306 // TrayIconPeer
      end
      comment "Copyright (c) 2005, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
