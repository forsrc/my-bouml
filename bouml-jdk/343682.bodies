class Graphics
!!!6216066.java!!!	create(in x : int, in y : int, in width : int, in height : int) : Graphics
        Graphics g = create();
        if (g == null) return null;
        g.translate(x, y);
        g.clipRect(0, 0, width, height);
        return g;
!!!6217090.java!!!	getFontMetrics() : FontMetrics
        return getFontMetrics(getFont());
!!!6218370.java!!!	drawRect(in x : int, in y : int, in width : int, in height : int) : void
        if ((width < 0) || (height < 0)) {
            return;
        }

        if (height == 0 || width == 0) {
            drawLine(x, y, x + width, y + height);
        } else {
            drawLine(x, y, x + width - 1, y);
            drawLine(x + width, y, x + width, y + height - 1);
            drawLine(x + width, y + height, x + 1, y + height);
            drawLine(x, y + height, x, y + 1);
        }
!!!6218882.java!!!	draw3DRect(in x : int, in y : int, in width : int, in height : int, inout raised : boolean) : void
        Color c = getColor();
        Color brighter = c.brighter();
        Color darker = c.darker();

        setColor(raised ? brighter : darker);
        drawLine(x, y, x, y + height);
        drawLine(x + 1, y, x + width - 1, y);
        setColor(raised ? darker : brighter);
        drawLine(x + 1, y + height, x + width, y + height);
        drawLine(x + width, y, x + width, y + height - 1);
        setColor(c);
!!!6219010.java!!!	fill3DRect(in x : int, in y : int, in width : int, in height : int, inout raised : boolean) : void
        Color c = getColor();
        Color brighter = c.brighter();
        Color darker = c.darker();

        if (!raised) {
            setColor(darker);
        }
        fillRect(x+1, y+1, width-2, height-2);
        setColor(raised ? brighter : darker);
        drawLine(x, y, x, y + height - 1);
        drawLine(x + 1, y, x + width - 2, y);
        setColor(raised ? darker : brighter);
        drawLine(x + 1, y + height - 1, x + width - 1, y + height - 1);
        drawLine(x + width - 1, y, x + width - 1, y + height - 2);
        setColor(c);
!!!6219906.java!!!	drawPolygon(inout p : Polygon) : void
        drawPolygon(p.xpoints, p.ypoints, p.npoints);
!!!6220162.java!!!	fillPolygon(inout p : Polygon) : void
        fillPolygon(p.xpoints, p.ypoints, p.npoints);
!!!6220546.java!!!	drawChars(inout data : char [[]], in offset : int, in length : int, in x : int, in y : int) : void
        drawString(new String(data, offset, length), x, y);
!!!6220674.java!!!	drawBytes(inout data : byte [[]], in offset : int, in length : int, in x : int, in y : int) : void
        drawString(new String(data, 0, offset, length), x, y);
!!!6221698.java!!!	finalize() : void
        dispose();
!!!6221826.java!!!	toString() : String
        return getClass().getName() + "[font=" + getFont() + ",color=" + getColor() + "]";
!!!6221954.java!!!	getClipRect() : Rectangle
        return getClipBounds();
!!!6222082.java!!!	hitClip(in x : int, in y : int, in width : int, in height : int) : boolean
        // Note, this implementation is not very efficient.
        // Subclasses should override this method and calculate
        // the results more directly.
        Rectangle clipRect = getClipBounds();
        if (clipRect == null) {
            return true;
        }
        return clipRect.intersects(x, y, width, height);
!!!6222210.java!!!	getClipBounds(inout r : Rectangle) : Rectangle
        // Note, this implementation is not very efficient.
        // Subclasses should override this method and avoid
        // the allocation overhead of getClipBounds().
        Rectangle clipRect = getClipBounds();
        if (clipRect != null) {
            r.x = clipRect.x;
            r.y = clipRect.y;
            r.width = clipRect.width;
            r.height = clipRect.height;
        } else if (r == null) {
            throw new NullPointerException("null rectangle parameter");
        }
        return r;
