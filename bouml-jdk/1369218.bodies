class SynthMenuUI
!!!11515394.java!!!	createUI(inout x : JComponent) : ComponentUI
        return new SynthMenuUI();
!!!11515522.java!!!	installDefaults() : void
        updateStyle(menuItem);
!!!11515650.java!!!	installListeners() : void
        super.installListeners();
        menuItem.addPropertyChangeListener(this);
!!!11515778.java!!!	updateStyle(inout mi : JMenuItem) : void
        SynthStyle oldStyle = style;
        SynthContext context = getContext(mi, ENABLED);

        style = SynthLookAndFeel.updateStyle(context, this);
        if (oldStyle != style) {
            String prefix = getPropertyPrefix();
            defaultTextIconGap = style.getInt(
                           context, prefix + ".textIconGap", 4);
            if (menuItem.getMargin() == null ||
                         (menuItem.getMargin() instanceof UIResource)) {
                Insets insets = (Insets)style.get(context, prefix + ".margin");

                if (insets == null) {
                    // Some places assume margins are non-null.
                    insets = SynthLookAndFeel.EMPTY_UIRESOURCE_INSETS;
                }
                menuItem.setMargin(insets);
            }
            acceleratorDelimiter = style.getString(context, prefix +
                                            ".acceleratorDelimiter", "+");

            if (MenuItemLayoutHelper.useCheckAndArrow(menuItem)) {
                checkIcon = style.getIcon(context, prefix + ".checkIcon");
                arrowIcon = style.getIcon(context, prefix + ".arrowIcon");
            } else {
                // Not needed in this case
                checkIcon = null;
                arrowIcon = null;
            }

            ((JMenu)menuItem).setDelay(style.getInt(context, prefix +
                                                    ".delay", 200));
            if (oldStyle != null) {
                uninstallKeyboardActions();
                installKeyboardActions();
            }
        }
        context.dispose();

        SynthContext accContext = getContext(mi, Region.MENU_ITEM_ACCELERATOR,
                                             ENABLED);

        accStyle = SynthLookAndFeel.updateStyle(accContext, this);
        accContext.dispose();
!!!11515906.java!!!	uninstallUI(inout c : JComponent) : void
        super.uninstallUI(c);
        // Remove values from the parent's Client Properties.
        JComponent p = MenuItemLayoutHelper.getMenuItemParent((JMenuItem) c);
        if (p != null) {
            p.putClientProperty(
                    SynthMenuItemLayoutHelper.MAX_ACC_OR_ARROW_WIDTH, null);
        }
!!!11516034.java!!!	uninstallDefaults() : void
        SynthContext context = getContext(menuItem, ENABLED);
        style.uninstallDefaults(context);
        context.dispose();
        style = null;

        SynthContext accContext = getContext(menuItem,
                                     Region.MENU_ITEM_ACCELERATOR, ENABLED);
        accStyle.uninstallDefaults(accContext);
        accContext.dispose();
        accStyle = null;

        super.uninstallDefaults();
!!!11516162.java!!!	uninstallListeners() : void
        super.uninstallListeners();
        menuItem.removePropertyChangeListener(this);
!!!11516290.java!!!	getContext(inout c : JComponent) : SynthContext
        return getContext(c, getComponentState(c));
!!!11516418.java!!!	getContext(inout c : JComponent, in state : int) : SynthContext
        return SynthContext.getContext(c, style, state);
!!!11516546.java!!!	getContext(inout c : JComponent, inout region : Region) : SynthContext
        return getContext(c, region, getComponentState(c, region));
!!!11516674.java!!!	getContext(inout c : JComponent, inout region : Region, in state : int) : SynthContext
        return SynthContext.getContext(c, region, accStyle, state);
!!!11516802.java!!!	getComponentState(inout c : JComponent) : int
        int state;

        if (!c.isEnabled()) {
            return DISABLED;
        }
        if (menuItem.isArmed()) {
            state = MOUSE_OVER;
        }
        else {
            state = SynthLookAndFeel.getComponentState(c);
        }
        if (menuItem.isSelected()) {
            state |= SELECTED;
        }
        return state;
!!!11516930.java!!!	getComponentState(inout c : JComponent, inout region : Region) : int
        return getComponentState(c);
!!!11517058.java!!!	getPreferredMenuItemSize(inout c : JComponent, inout checkIcon : Icon, inout arrowIcon : Icon, in defaultTextIconGap : int) : Dimension
        SynthContext context = getContext(c);
        SynthContext accContext = getContext(c, Region.MENU_ITEM_ACCELERATOR);
        Dimension value = SynthGraphicsUtils.getPreferredMenuItemSize(
                context, accContext, c, checkIcon, arrowIcon,
                defaultTextIconGap, acceleratorDelimiter,
                MenuItemLayoutHelper.useCheckAndArrow(menuItem),
                getPropertyPrefix());
        context.dispose();
        accContext.dispose();
        return value;
!!!11517186.java!!!	update(inout g : Graphics, inout c : JComponent) : void
        SynthContext context = getContext(c);

        SynthLookAndFeel.update(context, g);
        context.getPainter().paintMenuBackground(context,
                          g, 0, 0, c.getWidth(), c.getHeight());
        paint(context, g);
        context.dispose();
!!!11517314.java!!!	paint(inout g : Graphics, inout c : JComponent) : void
        SynthContext context = getContext(c);

        paint(context, g);
        context.dispose();
!!!11517442.java!!!	paint(inout context : SynthContext, inout g : Graphics) : void
        SynthContext accContext = getContext(menuItem,
                                             Region.MENU_ITEM_ACCELERATOR);
        // Refetch the appropriate check indicator for the current state
        String prefix = getPropertyPrefix();
        Icon checkIcon = style.getIcon(context, prefix + ".checkIcon");
        Icon arrowIcon = style.getIcon(context, prefix + ".arrowIcon");
        SynthGraphicsUtils.paint(context, accContext, g, checkIcon, arrowIcon,
              acceleratorDelimiter, defaultTextIconGap, getPropertyPrefix());
        accContext.dispose();
!!!11517570.java!!!	paintBorder(inout context : SynthContext, inout g : Graphics, in x : int, in y : int, in w : int, in h : int) : void
        context.getPainter().paintMenuBorder(context, g, x, y, w, h);
!!!11517698.java!!!	propertyChange(inout e : PropertyChangeEvent) : void
        if (SynthLookAndFeel.shouldUpdateStyle(e) ||
                (e.getPropertyName().equals("ancestor") && UIManager.getBoolean("Menu.useMenuBarForTopLevelMenus"))) {
            updateStyle((JMenu)e.getSource());
        }
