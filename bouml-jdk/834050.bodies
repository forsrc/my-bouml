class KerberosPrincipal
!!!10227586.java!!!	KerberosPrincipal(inout name : String)
        this(name, KRB_NT_PRINCIPAL);
!!!10227714.java!!!	KerberosPrincipal(inout name : String, in nameType : int)

        PrincipalName krb5Principal = null;

        try {
            // Appends the default realm if it is missing
            krb5Principal  = new PrincipalName(name,nameType);
        } catch (KrbException e) {
            throw new IllegalArgumentException(e.getMessage());
        }

        // A ServicePermission with a principal in the deduced realm and
        // any action must be granted if no realm is provided by caller.
        if (krb5Principal.isRealmDeduced() && !Realm.AUTODEDUCEREALM) {
            SecurityManager sm = System.getSecurityManager();
            if (sm != null) {
                try {
                    sm.checkPermission(new ServicePermission(
                            "@" + krb5Principal.getRealmAsString(), "-"));
                } catch (SecurityException se) {
                    // Swallow the actual exception to hide info
                    throw new SecurityException("Cannot read realm info");
                }
            }
        }
        this.nameType = nameType;
        fullName = krb5Principal.toString();
        realm = krb5Principal.getRealmString();
!!!10227842.java!!!	getRealm() : String
        return realm;
!!!10227970.java!!!	hashCode() : int
        return getName().hashCode();
!!!10228098.java!!!	equals(inout other : Object) : boolean

        if (other == this)
            return true;

        if (! (other instanceof KerberosPrincipal)) {
            return false;
        }
        String myFullName = getName();
        String otherFullName = ((KerberosPrincipal) other).getName();
        return myFullName.equals(otherFullName);
!!!10228226.java!!!	writeObject(inout oos : ObjectOutputStream) : void

        PrincipalName krb5Principal;
        try {
            krb5Principal  = new PrincipalName(fullName, nameType);
            oos.writeObject(krb5Principal.asn1Encode());
            oos.writeObject(krb5Principal.getRealm().asn1Encode());
        } catch (Exception e) {
            throw new IOException(e);
        }
!!!10228354.java!!!	readObject(inout ois : ObjectInputStream) : void
        byte[] asn1EncPrincipal = (byte [])ois.readObject();
        byte[] encRealm = (byte [])ois.readObject();
        try {
           Realm realmObject = new Realm(new DerValue(encRealm));
           PrincipalName krb5Principal = new PrincipalName(
                   new DerValue(asn1EncPrincipal), realmObject);
           realm = realmObject.toString();
           fullName = krb5Principal.toString();
           nameType = krb5Principal.getNameType();
        } catch (Exception e) {
            throw new IOException(e);
        }
!!!10228482.java!!!	getName() : String
        return fullName;
!!!10228610.java!!!	getNameType() : int
        return nameType;
!!!10228738.java!!!	toString() : String
        return getName();
