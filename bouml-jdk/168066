format 222
"dtd" // jdk1.8::com::sun::org::apache::xerces::internal::impl::dtd
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/impl/dtd/"
  java_package "com.sun.org.apache.xerces.internal.impl.dtd"
  classview 161410 "dtd"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 662146 "XMLDTDValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DTD validator. The validator implements a document
filter: receiving document events from the scanner; validating
the content and structure; augmenting the InfoSet, if applicable;
and notifying the parser of the information resulting from the
validation process.
<p> Formerly, this component also handled DTD events and grammar construction.
To facilitate the development of a meaningful DTD grammar caching/preparsing
framework, this functionality has been moved into the XMLDTDLoader
class.  Therefore, this class no longer implements the DTDFilter
or DTDContentModelFilter interfaces.
<p>
This component requires the following features and properties from the
component manager that uses it:
<ul>
 <li>http://xml.org/sax/features/namespaces</li>
 <li>http://xml.org/sax/features/validation</li>
 <li>http://apache.org/xml/features/validation/dynamic</li>
 <li>http://apache.org/xml/properties/internal/symbol-table</li>
 <li>http://apache.org/xml/properties/internal/error-reporter</li>
 <li>http://apache.org/xml/properties/internal/grammar-pool</li>
 <li>http://apache.org/xml/properties/internal/datatype-validator-factory</li>
</ul>

@xerces.internal

@author Eric Ye, IBM
@author Andy Clark, IBM
@author Jeffrey Rodriguez IBM
@author Neil Graham, IBM

@version $Id: XMLDTDValidator.java,v 1.8 2010-11-01 04:39:42 joehw Exp $
"
      classrelation 1889666 // <realization>
	relation 1889666 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1889666 // <realization>
	  b parent class_ref 659202 // XMLComponent
      end

      classrelation 1889794 // <realization>
	relation 1889794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1889794 // <realization>
	  b parent class_ref 666754 // XMLDocumentFilter
      end

      classrelation 1890050 // <realization>
	relation 1890050 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1890050 // <realization>
	  b parent class_ref 671746 // XMLDTDValidatorFilter
      end

      classrelation 1890178 // <realization>
	relation 1890178 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1890178 // <realization>
	  b parent class_ref 652162 // RevalidationHandler
      end

      attribute 954498 "TOP_LEVEL_SCOPE"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Symbol: \"&lt;&lt;datatypes>>\". 
 Top level scope (-1). 
"
      end

      classrelation 1890306 // NAMESPACES (<unidirectional association>)
	relation 1890306 --->
	  a role_name "NAMESPACES" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.NAMESPACES_FEATURE" class_relation const_relation protected
	    comment " feature identifiers
 Feature identifier: namespaces. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1890306 // NAMESPACES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1890434 // VALIDATION (<unidirectional association>)
	relation 1890434 --->
	  a role_name "VALIDATION" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.VALIDATION_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: validation. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1890434 // VALIDATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1890562 // DYNAMIC_VALIDATION (<unidirectional association>)
	relation 1890562 --->
	  a role_name "DYNAMIC_VALIDATION" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.DYNAMIC_VALIDATION_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: dynamic validation. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1890562 // DYNAMIC_VALIDATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1890690 // BALANCE_SYNTAX_TREES (<unidirectional association>)
	relation 1890690 --->
	  a role_name "BALANCE_SYNTAX_TREES" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.BALANCE_SYNTAX_TREES" class_relation const_relation protected
	    comment " Feature identifier: balance syntax trees. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1890690 // BALANCE_SYNTAX_TREES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1890818 // WARN_ON_DUPLICATE_ATTDEF (<unidirectional association>)
	relation 1890818 --->
	  a role_name "WARN_ON_DUPLICATE_ATTDEF" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.WARN_ON_DUPLICATE_ATTDEF_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: warn on duplicate attdef 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1890818 // WARN_ON_DUPLICATE_ATTDEF (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1890946 // PARSER_SETTINGS (<unidirectional association>)
	relation 1890946 --->
	  a role_name "PARSER_SETTINGS" init_value "
                Constants.XERCES_FEATURE_PREFIX + Constants.PARSER_SETTINGS" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1890946 // PARSER_SETTINGS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1891074 // SYMBOL_TABLE (<unidirectional association>)
	relation 1891074 --->
	  a role_name "SYMBOL_TABLE" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.SYMBOL_TABLE_PROPERTY" class_relation const_relation protected
	    comment " property identifiers
 Property identifier: symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1891074 // SYMBOL_TABLE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1891202 // ERROR_REPORTER (<unidirectional association>)
	relation 1891202 --->
	  a role_name "ERROR_REPORTER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_REPORTER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: error reporter. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1891202 // ERROR_REPORTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1891330 // GRAMMAR_POOL (<unidirectional association>)
	relation 1891330 --->
	  a role_name "GRAMMAR_POOL" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.XMLGRAMMAR_POOL_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: grammar pool. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1891330 // GRAMMAR_POOL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1891458 // DATATYPE_VALIDATOR_FACTORY (<unidirectional association>)
	relation 1891458 --->
	  a role_name "DATATYPE_VALIDATOR_FACTORY" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.DATATYPE_VALIDATOR_FACTORY_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: datatype validator factory. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1891458 // DATATYPE_VALIDATOR_FACTORY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1891586 // VALIDATION_MANAGER (<unidirectional association>)
	relation 1891586 --->
	  a role_name "VALIDATION_MANAGER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.VALIDATION_MANAGER_PROPERTY" class_relation const_relation protected
	    comment " property identifier:  ValidationManager
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1891586 // VALIDATION_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1891714 // RECOGNIZED_FEATURES (<unidirectional association>)
	relation 1891714 --->
	  a role_name "RECOGNIZED_FEATURES" multiplicity "[]" init_value " {
        NAMESPACES,
        VALIDATION,
        DYNAMIC_VALIDATION,
        BALANCE_SYNTAX_TREES
    }" class_relation const_relation private
	    comment " recognized features and properties
 Recognized features. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1891714 // RECOGNIZED_FEATURES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1891842 // FEATURE_DEFAULTS (<unidirectional association>)
	relation 1891842 --->
	  a role_name "FEATURE_DEFAULTS" multiplicity "[]" init_value " {
        null,
        null,
        Boolean.FALSE,
        Boolean.FALSE,
    }" class_relation const_relation private
	    comment " Feature defaults. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1891842 // FEATURE_DEFAULTS (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 1891970 // RECOGNIZED_PROPERTIES (<unidirectional association>)
	relation 1891970 --->
	  a role_name "RECOGNIZED_PROPERTIES" multiplicity "[]" init_value " {
        SYMBOL_TABLE,
        ERROR_REPORTER,
        GRAMMAR_POOL,
        DATATYPE_VALIDATOR_FACTORY,
        VALIDATION_MANAGER
    }" class_relation const_relation private
	    comment " Recognized properties. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1891970 // RECOGNIZED_PROPERTIES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1892098 // PROPERTY_DEFAULTS (<unidirectional association>)
	relation 1892098 --->
	  a role_name "PROPERTY_DEFAULTS" multiplicity "[]" init_value " {
        null,
        null,
        null,
        null,
        null,
    }" class_relation const_relation private
	    comment " Property defaults. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1892098 // PROPERTY_DEFAULTS (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 954626 "DEBUG_ATTRIBUTES"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " debugging
 Compile to true to debug attributes. 
"
      end

      attribute 954754 "DEBUG_ELEMENT_CHILDREN"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compile to true to debug element children. 
"
      end

      classrelation 1892226 // fValidationManager (<unidirectional association>)
	relation 1892226 --->
	  a role_name "fValidationManager" init_value " null" protected
	    comment " Data

 updated during reset
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1892226 // fValidationManager (<unidirectional association>)
	  b parent class_ref 658818 // ValidationManager
      end

      classrelation 1892354 // fValidationState (<unidirectional association>)
	relation 1892354 --->
	  a role_name "fValidationState" init_value " new ValidationState()" const_relation protected
	    comment " validation state
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1892354 // fValidationState (<unidirectional association>)
	  b parent class_ref 677378 // ValidationState
      end

      attribute 954882 "fNamespaces"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " features
 Namespaces. 
"
      end

      attribute 955010 "fValidation"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validation. 
"
      end

      attribute 955138 "fDTDValidation"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validation against only DTD 
"
      end

      attribute 955266 "fDynamicValidation"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Dynamic validation. This state of this feature is only useful when
the validation feature is set to <code>true</code>.

"
      end

      attribute 955394 "fBalanceSyntaxTrees"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Controls whether the DTD grammar produces balanced syntax trees. 
"
      end

      attribute 955522 "fWarnDuplicateAttdef"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " warn on duplicate attribute definition, this feature works only when validation is true 
"
      end

      classrelation 1892482 // fSymbolTable (<unidirectional association>)
	relation 1892482 --->
	  a role_name "fSymbolTable" protected
	    comment " properties
 Symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1892482 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 1892610 // fErrorReporter (<unidirectional association>)
	relation 1892610 --->
	  a role_name "fErrorReporter" protected
	    comment " Error reporter. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1892610 // fErrorReporter (<unidirectional association>)
	  b parent class_ref 658946 // XMLErrorReporter
      end

      classrelation 1892738 // fGrammarPool (<unidirectional association>)
	relation 1892738 --->
	  a role_name "fGrammarPool" protected
	    comment " the grammar pool
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1892738 // fGrammarPool (<unidirectional association>)
	  b parent class_ref 662274 // XMLGrammarPool
      end

      classrelation 1892866 // fGrammarBucket (<unidirectional association>)
	relation 1892866 --->
	  a role_name "fGrammarBucket" protected
	    comment " Grammar bucket. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1892866 // fGrammarBucket (<unidirectional association>)
	  b parent class_ref 676354 // DTDGrammarBucket
      end

      classrelation 1892994 // fDocLocation (<unidirectional association>)
	relation 1892994 --->
	  a role_name "fDocLocation" protected
	    comment " location of the document as passed in from startDocument call 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1892994 // fDocLocation (<unidirectional association>)
	  b parent class_ref 660866 // XMLLocator
      end

      classrelation 1893122 // fNamespaceContext (<unidirectional association>)
	relation 1893122 --->
	  a role_name "fNamespaceContext" init_value " null" protected
	    comment " Namespace support. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1893122 // fNamespaceContext (<unidirectional association>)
	  b parent class_ref 660994 // NamespaceContext
      end

      classrelation 1893250 // fDatatypeValidatorFactory (<unidirectional association>)
	relation 1893250 --->
	  a role_name "fDatatypeValidatorFactory" protected
	    comment " Datatype validator factory. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1893250 // fDatatypeValidatorFactory (<unidirectional association>)
	  b parent class_ref 677506 // DTDDVFactory
      end

      classrelation 1893378 // fDocumentHandler (<unidirectional association>)
	relation 1893378 --->
	  a role_name "fDocumentHandler" protected
	    comment " handlers
 Document handler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1893378 // fDocumentHandler (<unidirectional association>)
	  b parent class_ref 658050 // XMLDocumentHandler
      end

      classrelation 1893506 // fDocumentSource (<unidirectional association>)
	relation 1893506 --->
	  a role_name "fDocumentSource" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1893506 // fDocumentSource (<unidirectional association>)
	  b parent class_ref 661762 // XMLDocumentSource
      end

      classrelation 1893634 // fDTDGrammar (<unidirectional association>)
	relation 1893634 --->
	  a role_name "fDTDGrammar" protected
	    comment " grammars
 DTD Grammar. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1893634 // fDTDGrammar (<unidirectional association>)
	  b parent class_ref 674562 // DTDGrammar
      end

      attribute 955650 "fSeenDoctypeDecl"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " state
 True if seen DOCTYPE declaration. 
"
      end

      attribute 955778 "fPerformValidation"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Perform validation. 
"
      end

      classrelation 1893762 // fSchemaType (<unidirectional association>)
	relation 1893762 --->
	  a role_name "fSchemaType" private
	    comment " Schema type: None, DTD, Schema 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1893762 // fSchemaType (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1893890 // fCurrentElement (<unidirectional association>)
	relation 1893890 --->
	  a role_name "fCurrentElement" init_value " new QName()" const_relation private
	    comment " information regarding the current element
 Current element name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1893890 // fCurrentElement (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 955906 "fCurrentElementIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Current element index. 
"
      end

      attribute 956034 "fCurrentContentSpecType"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Current content spec type. 
"
      end

      classrelation 1894018 // fRootElement (<unidirectional association>)
	relation 1894018 --->
	  a role_name "fRootElement" init_value " new QName()" const_relation private
	    comment " The root element name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1894018 // fRootElement (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 956162 "fInCDATASection"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 956290 "fElementIndexStack"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[8]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " element stack
 Element index stack. 
"
      end

      attribute 956418 "fContentSpecTypeStack"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[8]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Content spec type stack. 
"
      end

      classrelation 1894146 // fElementQNamePartsStack (<unidirectional association>)
	relation 1894146 --->
	  a role_name "fElementQNamePartsStack" multiplicity "[]" init_value " new QName[8]" private
	    comment " Element name stack. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1894146 // fElementQNamePartsStack (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1894274 // fElementChildren (<unidirectional association>)
	relation 1894274 --->
	  a role_name "fElementChildren" multiplicity "[]" init_value " new QName[32]" private
	    comment " children list and offset stack

Element children. This data structure is a growing stack that
holds the children of elements from the root to the current
element depth. This structure never gets \"deeper\" than the
deepest element. Space is re-used once each element is closed.
<p>
<strong>Note:</strong> This is much more efficient use of memory
than creating new arrays for each element depth.
<p>
<strong>Note:</strong> The use of this data structure is for
validation \"on the way out\". If the validation model changes to
\"on the way in\", then this data structure is not needed.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1894274 // fElementChildren (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 956546 "fElementChildrenLength"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Element children count. 
"
      end

      attribute 956674 "fElementChildrenOffsetStack"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[32]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Element children offset stack. This stack refers to offsets
into the <code>fElementChildren</code> array.
@see #fElementChildren

"
      end

      attribute 956802 "fElementDepth"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Element depth. 
"
      end

      attribute 956930 "fSeenRootElement"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " validation states
 True if seen the root element. 
"
      end

      attribute 957058 "fInElementContent"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if inside of element content. 
"
      end

      classrelation 1894402 // fTempElementDecl (<unidirectional association>)
	relation 1894402 --->
	  a role_name "fTempElementDecl" init_value " new XMLElementDecl()" private
	    comment " temporary variables
 Temporary element declaration. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1894402 // fTempElementDecl (<unidirectional association>)
	  b parent class_ref 675458 // XMLElementDecl
      end

      classrelation 1894530 // fTempAttDecl (<unidirectional association>)
	relation 1894530 --->
	  a role_name "fTempAttDecl" init_value " new XMLAttributeDecl()" const_relation private
	    comment " Temporary atribute declaration. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1894530 // fTempAttDecl (<unidirectional association>)
	  b parent class_ref 675330 // XMLAttributeDecl
      end

      classrelation 1894658 // fEntityDecl (<unidirectional association>)
	relation 1894658 --->
	  a role_name "fEntityDecl" init_value " new XMLEntityDecl()" const_relation private
	    comment " Temporary entity declaration. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1894658 // fEntityDecl (<unidirectional association>)
	  b parent class_ref 675586 // XMLEntityDecl
      end

      classrelation 1894786 // fTempQName (<unidirectional association>)
	relation 1894786 --->
	  a role_name "fTempQName" init_value " new QName()" const_relation private
	    comment " Temporary qualified name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1894786 // fTempQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1894914 // fBuffer (<unidirectional association>)
	relation 1894914 --->
	  a role_name "fBuffer" init_value " new StringBuffer()" const_relation private
	    comment " Temporary string buffers. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1894914 // fBuffer (<unidirectional association>)
	  b parent class_ref 166018 // StringBuffer
      end

      classrelation 1895042 // fValID (<unidirectional association>)
	relation 1895042 --->
	  a role_name "fValID" protected
	    comment " symbols: general
 attribute validators
 Datatype validator: ID. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895042 // fValID (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1895170 // fValIDRef (<unidirectional association>)
	relation 1895170 --->
	  a role_name "fValIDRef" protected
	    comment " Datatype validator: IDREF. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895170 // fValIDRef (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1895298 // fValIDRefs (<unidirectional association>)
	relation 1895298 --->
	  a role_name "fValIDRefs" protected
	    comment " Datatype validator: IDREFS. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895298 // fValIDRefs (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1895426 // fValENTITY (<unidirectional association>)
	relation 1895426 --->
	  a role_name "fValENTITY" protected
	    comment " Datatype validator: ENTITY. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895426 // fValENTITY (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1895554 // fValENTITIES (<unidirectional association>)
	relation 1895554 --->
	  a role_name "fValENTITIES" protected
	    comment " Datatype validator: ENTITIES. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895554 // fValENTITIES (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1895682 // fValNMTOKEN (<unidirectional association>)
	relation 1895682 --->
	  a role_name "fValNMTOKEN" protected
	    comment " Datatype validator: NMTOKEN. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895682 // fValNMTOKEN (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1895810 // fValNMTOKENS (<unidirectional association>)
	relation 1895810 --->
	  a role_name "fValNMTOKENS" protected
	    comment " Datatype validator: NMTOKENS. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895810 // fValNMTOKENS (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1895938 // fValNOTATION (<unidirectional association>)
	relation 1895938 --->
	  a role_name "fValNOTATION" protected
	    comment " Datatype validator: NOTATION. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1895938 // fValNOTATION (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4461570 "XMLDTDValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " to check for duplicate ID or ANNOTATION attribute declare in
 ATTLIST, and misc VCs

 Constructors

 Default constructor. "
      end

      operation 4461698 "getGrammarBucket"
	package return_type class_ref 676354 // DTDGrammarBucket
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()"
      end

      operation 4461826 "reset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "componentManager" type class_ref 657026 // XMLComponentManager
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getGrammarBucket():  DTDGrammarBucket

 XMLComponent methods


Resets the component. The component can query the component manager
about any features and properties that affect the operation of the
component.

@param componentManager The component manager.

@throws SAXException Thrown by component on finitialization error.
                     For example, if a feature or property is
                     required for the operation of the component, the
                     component manager may throw a
                     SAXNotRecognizedException or a
                     SAXNotSupportedException.
"
      end

      operation 4461954 "getRecognizedFeatures"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " reset(XMLComponentManager)

Returns a list of feature identifiers that are recognized by
this component. This method may return null if no features
are recognized by this component.
"
      end

      operation 4462082 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "featureId" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRecognizedFeatures():String[]

Sets the state of a feature. This method is called by the component
manager any time after reset when a feature changes state.
<p>
<strong>Note:</strong> Components should silently ignore features
that do not affect the operation of the component.

@param featureId The feature identifier.
@param state     The state of the feature.

@throws SAXNotRecognizedException The component should not throw
                                  this exception.
@throws SAXNotSupportedException The component should not throw
                                 this exception.
"
      end

      operation 4462210 "getRecognizedProperties"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setFeature(String,boolean)

Returns a list of property identifiers that are recognized by
this component. This method may return null if no properties
are recognized by this component.
"
      end

      operation 4462338 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyId" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRecognizedProperties():String[]

Sets the value of a property. This method is called by the component
manager any time after reset when a property changes value.
<p>
<strong>Note:</strong> Components should silently ignore properties
that do not affect the operation of the component.

@param propertyId The property identifier.
@param value      The value of the property.

@throws SAXNotRecognizedException The component should not throw
                                  this exception.
@throws SAXNotSupportedException The component should not throw
                                 this exception.
"
      end

      operation 4462466 "getFeatureDefault"
	public return_type class_ref 315010 // Boolean
	nparams 1
	  param inout name "featureId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setProperty(String,Object)

Returns the default state for a feature, or null if this
component does not want to report a default value for this
feature.

@param featureId The feature identifier.

@since Xerces 2.2.0
"
      end

      operation 4462594 "getPropertyDefault"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFeatureDefault(String):Boolean

Returns the default state for a property, or null if this
component does not want to report a default value for this
property.

@param propertyId The property identifier.

@since Xerces 2.2.0
"
      end

      operation 4462722 "setDocumentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "documentHandler" type class_ref 658050 // XMLDocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPropertyDefault(String):Object

 XMLDocumentSource methods

 Sets the document handler to receive information about the document. "
      end

      operation 4462850 "getDocumentHandler"
	public return_type class_ref 658050 // XMLDocumentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDocumentHandler(XMLDocumentHandler)
 Returns the document handler "
      end

      operation 4462978 "setDocumentSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 661762 // XMLDocumentSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDocumentHandler():  XMLDocumentHandler

 XMLDocumentHandler methods

 Sets the document source "
      end

      operation 4463106 "getDocumentSource"
	public return_type class_ref 661762 // XMLDocumentSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDocumentSource
 Returns the document source "
      end

      operation 4463234 "startDocument"
	public explicit_return_type "void"
	nparams 4
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 660994 // NamespaceContext
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDocumentSource

The start of the document.

@param locator The system identifier of the entity if the entity
                is external, null otherwise.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal entities or a document entity that is
                parsed from a java.io.Reader).
@param namespaceContext
                The namespace context in effect at the
                start of this document.
                This object represents the current context.
                Implementors of this class are responsible
                for copying the namespace bindings from the
                the current context (and its parent contexts)
                if that information is important.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4463362 "xmlDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "standalone" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startDocument(XMLLocator,String)

Notifies of the presence of an XMLDecl line in the document. If
present, this method will be called immediately following the
startDocument call.

@param version    The XML version.
@param encoding   The IANA encoding name of the document, or null if
                  not specified.
@param standalone The standalone value, or null if not specified.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4463490 "doctypeDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "rootElement" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " xmlDecl(String,String,String)

Notifies of the presence of the DOCTYPE line in the document.

@param rootElement The name of the root element.
@param publicId    The public identifier if an external DTD or null
                   if the external DTD is specified using SYSTEM.
@param systemId    The system identifier if an external DTD, null
                   otherwise.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4463618 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " doctypeDecl(String,String,String, Augmentations)

The start of an element.

@param element    The name of the element.
@param attributes The element attributes.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4463746 "emptyElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startElement(QName,XMLAttributes)

An empty element.

@param element    The name of the element.
@param attributes The element attributes.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4463874 "characters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " emptyElement(QName,XMLAttributes)

Character content.

@param text The content.

@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4464002 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " characters(XMLString)

Ignorable whitespace. For this method to be called, the document
source must have some way of determining that the text containing
only whitespace characters should be considered ignorable. For
example, the validator can determine if a length of whitespace
characters in the document are ignorable based on the element
content model.

@param text The ignorable whitespace.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4464130 "endElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ignorableWhitespace(XMLString)

The end of an element.

@param element The name of the element.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4464258 "startCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endElement(QName)

The start of a CDATA section.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4464386 "endCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startCDATA()

The end of a CDATA section.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4464514 "endDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endCDATA()

The end of the document.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4464642 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endDocument()

A comment.

@param text The text in the comment.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by application to signal an error.
"
      end

      operation 4464770 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " comment(XMLString)

A processing instruction. Processing instructions consist of a
target name and, optionally, text data. The data is only meaningful
to the application.
<p>
Typically, a processing instruction's data will contain a series
of pseudo-attributes. These pseudo-attributes follow the form of
element attributes but are <strong>not</strong> parsed or presented
to the application as anything other than text. The application is
responsible for parsing the data.

@param target The target.
@param data   The data or null if none specified.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4464898 "startGeneralEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " processingInstruction(String,XMLString)

This method notifies the start of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name     The name of the general entity.
@param identifier The resource identifier.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal entities or a document entity that is
                parsed from a java.io.Reader).
@param augs     Additional information that may include infoset augmentations

@exception XNIException Thrown by handler to signal an error.
"
      end

      operation 4465026 "endGeneralEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the end of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name   The name of the entity.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4465154 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endEntity(String)

Notifies of the presence of a TextDecl line in an entity. If present,
this method will be called immediately following the startParameterEntity call.
<p>
<strong>Note:</strong> This method is only called for external
parameter entities referenced in the DTD.

@param version  The XML version, or null if not specified.
@param encoding The IANA encoding name of the entity.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4465282 "hasGrammar"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4465410 "validate"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4465538 "addDTDDefaultAttrsAndValidate"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "elementName" type class_ref 661378 // QName
	  param in name "elementIndex" explicit_type "int"
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "REVISIT:we can convert into functions.. adding default attribute values.. and one validating.
 Add default attributes and validate. "
      end

      operation 4465666 "getExternalEntityRefInAttrValue"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "nonNormalizedValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addDTDDefaultAttrsAndValidate(int,XMLAttrList)
 Checks entities in attribute values for standalone VC. "
      end

      operation 4465794 "validateDTDattribute"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attValue" type class_ref 128130 // String
	  param inout name "attributeDecl" type class_ref 675330 // XMLAttributeDecl
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isExternalEntityRefInAttrValue(String):String

Validate attributes in DTD fashion.
"
      end

      operation 4465922 "invalidStandaloneAttDef"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attribute" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " validateDTDattribute(QName,String,XMLAttributeDecl)
 Returns true if invalid standalone attribute definition. "
      end

      operation 4466050 "normalizeAttrValue"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private methods


Normalize the attribute value of a non CDATA attributes collapsing
sequences of space characters (x20)

@param attributes The list of attributes
@param index The index of the attribute to normalize
"
      end

      operation 4466178 "rootElementSpecified"
	private explicit_return_type "void"
	nparams 1
	  param inout name "rootElement" type class_ref 661378 // QName
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Root element specified. "
      end

      operation 4466306 "checkContent"
	private explicit_return_type "int"
	nparams 4
	  param in name "elementIndex" explicit_type "int"
	  param inout name "children" type class_ref 661378 // QName
	multiplicity "[]"
	  param in name "childOffset" explicit_type "int"
	  param in name "childCount" explicit_type "int"
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " rootElementSpecified(QName)

Check that the content of an element is valid.
<p>
This is the method of primary concern to the validator. This method is called
upon the scanner reaching the end tag of an element. At that time, the
element's children must be structurally validated, so it calls this method.
The index of the element being checked (in the decl pool), is provided as
well as an array of element name indexes of the children. The validator must
confirm that this element can have these children in this order.
<p>
This can also be called to do 'what if' testing of content models just to see
if they would be valid.
<p>
Note that the element index is an index into the element decl pool, whereas
the children indexes are name indexes, i.e. into the string pool.
<p>
A value of -1 in the children array indicates a PCDATA node. All other
indexes will be positive and represent child elements. The count can be
zero, since some elements have the EMPTY content model and that must be
confirmed.

@param elementIndex The index within the <code>ElementDeclPool</code> of this
                    element.
@param childCount The number of entries in the <code>children</code> array.
@param children The children of this element.

@return The value -1 if fully valid, else the 0 based index of the child
        that first failed. If the value returned is equal to the number
        of children, then additional content is required to reach a valid
        ending state.

@exception Exception Thrown on error.
"
      end

      operation 4466434 "getContentSpecType"
	private explicit_return_type "int"
	nparams 1
	  param in name "elementIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkContent(int,int,QName[]):int
 Returns the content spec type for an element index. "
      end

      operation 4466562 "charDataInContent"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Character data in content. "
      end

      operation 4466690 "getAttributeTypeName"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "attrDecl" type class_ref 675330 // XMLAttributeDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " charDataInCount()
 convert attribute type from ints to strings "
      end

      operation 4466818 "init"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttributeTypeName(XMLAttributeDecl):String
 initialization "
      end

      operation 4466946 "ensureStackCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "newElementDepth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init()
 ensure element stack capacity "
      end

      operation 4467074 "handleStartElement"
	protected explicit_return_type "boolean"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ensureStackCapacity

 Protected methods

 Handle element
@return true if validator is removed from the pipeline
"
      end

      operation 4467202 "startNamespaceScope"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " handleStartElement(QName,XMLAttributes)"
      end

      operation 4467330 "handleEndElement"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	  param inout name "isEmpty" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle end element. "
      end

      operation 4467458 "endNamespaceScope"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	  param inout name "isEmpty" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " handleEndElement(QName,boolean)"
      end

      operation 4467586 "isSpace"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " returns whether a character is space according to the
 version of XML this validator supports."
      end

      operation 4467714 "characterData"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "data" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isSpace(int):  boolean"
      end
    end

    class 669698 "XMLDTDDescription"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "All information specific to DTD grammars.

@xerces.internal

@author Neil Graham, IBM
@version $Id: XMLDTDDescription.java,v 1.4 2010/08/11 07:18:38 joehw Exp $
"
      classrelation 1897858 // <generalisation>
	relation 1897858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1897858 // <generalisation>
	  b parent class_ref 668162 // XMLResourceIdentifierImpl
      end

      classrelation 1898498 // <realization>
	relation 1898498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1898498 // <realization>
	  b parent class_ref 666242 // XMLDTDDescription
      end

      classrelation 1898626 // fRootName (<unidirectional association>)
	relation 1898626 --->
	  a role_name "fRootName" init_value " null" protected
	    comment " Data
 pieces of information needed to make this usable as a Grammar key
 if we know the root of this grammar, here's its name:
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898626 // fRootName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1898754 // fPossibleRoots (<unidirectional association>)
	relation 1898754 --->
	  a role_name "fPossibleRoots" init_value " null" protected
	    comment " if we don't know the root name, this stores all elements that
 could serve; fPossibleRoots and fRootName cannot both be non-null
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898754 // fPossibleRoots (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      operation 4472706 "XMLDTDDescription"
	public explicit_return_type ""
	nparams 2
	  param inout name "id" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "rootName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors:"
      end

      operation 4472834 "XMLDTDDescription"
	public explicit_return_type ""
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "literalId" type class_ref 128130 // String
	  param inout name "baseId" type class_ref 128130 // String
	  param inout name "expandedId" type class_ref 128130 // String
	  param inout name "rootName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(XMLResourceIdentifier, String)"
      end

      operation 4472962 "XMLDTDDescription"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 657666 // XMLInputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(String, String, String, String, String)"
      end

      operation 4473090 "getGrammarType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(XMLInputSource)
 XMLGrammarDescription methods"
      end

      operation 4473218 "getRootName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getGrammarType():  String

@return the root name of this DTD or null if root name is unknown
"
      end

      operation 4473346 "setRootName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rootName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRootName():  String
 Set the root name *"
      end

      operation 4473474 "setPossibleRoots"
	public explicit_return_type "void"
	nparams 1
	  param inout name "possibleRoots" type class_ref 186498 // ArrayList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set possible roots *"
      end

      operation 4473602 "setPossibleRoots"
	public explicit_return_type "void"
	nparams 1
	  param inout name "possibleRoots" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set possible roots *"
      end

      operation 4473730 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "desc" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this grammar with the given grammar. Currently, we compare
as follows:
- if grammar type not equal return false immediately
- try and find a common root name:
   - if both have roots, use them
   - else if one has a root, examine other's possible root's for a match;
   - else try all combinations
 - test fExpandedSystemId and fPublicId as above

@param desc The description of the grammar to be compared with
@return     True if they are equal, else false
"
      end

      operation 4473858 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code of this grammar
Because our .equals method is so complex, we just return a very
simple hash that might avoid calls to the equals method a bit...
@return The hash code
"
      end
    end

    class 671746 "XMLDTDValidatorFilter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines a DTD Validator filter to allow
components to query the DTD validator.

@xerces.internal

@author Elena Litani, IBM

"
      classrelation 1889922 // <generalisation>
	relation 1889922 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1889922 // <generalisation>
	  b parent class_ref 666754 // XMLDocumentFilter
      end

      operation 4461314 "hasGrammar"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the validator has a DTD grammar

@return true if the validator has a DTD grammar
"
      end

      operation 4461442 "validate"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if validator must validate the document

@return true if validator must validate the document
"
      end
    end

    class 674434 "BalancedDTDGrammar"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A DTD grammar that produces balanced syntax trees.</p>

@xerces.internal

@author Michael Glavassevich, IBM
@version $Id: BalancedDTDGrammar.java,v 1.1 2010/08/11 07:18:38 joehw Exp $
"
      classrelation 1882498 // <generalisation>
	relation 1882498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1882498 // <generalisation>
	  b parent class_ref 674562 // DTDGrammar
      end

      attribute 952450 "fMixed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Mixed. 
"
      end

      attribute 952578 "fDepth"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stack depth 
"
      end

      attribute 952706 "fOpStack"
	private explicit_type "short"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Children content model operation stack. 
"
      end

      attribute 952834 "fGroupIndexStack"
	private explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Holder for choice/sequence/leaf groups at each depth. 
"
      end

      attribute 952962 "fGroupIndexStackSizes"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Sizes of the allocated portions of each int[] in fGroupIndexStack. 
"
      end

      operation 4446466 "BalancedDTDGrammar"
	public explicit_return_type ""
	nparams 2
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "desc" type class_ref 669698 // XMLDTDDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4446594 "startContentModel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " BalancedDTDGrammar(SymbolTable,XMLDTDDescription)

 Public methods


The start of a content model. Depending on the type of the content
model, specific methods may be called between the call to the
startContentModel method and the call to the endContentModel method.

@param elementName The name of the element.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4446722 "startGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startContentModel(String)

A start of either a mixed or children content model. A mixed
content model will immediately be followed by a call to the
<code>pcdata()</code> method. A children content model will
contain additional groups and/or elements.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see #any
@see #empty
"
      end

      operation 4446850 "pcdata"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startGroup()

The appearance of \"#PCDATA\" within a group signifying a
mixed content model. This method will be the first called
following the content model's <code>startGroup()</code>.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #startGroup
"
      end

      operation 4446978 "element"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " pcdata()

A referenced element in a mixed or children content model.

@param elementName The name of the referenced element.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4447106 "separator"
	public explicit_return_type "void"
	nparams 2
	  param in name "separator" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " element(String)

The separator between choices or sequences of a mixed or children
content model.

@param separator The type of children separator.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see org.apache.xerces.xni.XMLDTDContentModelHandler#SEPARATOR_CHOICE
@see org.apache.xerces.xni.XMLDTDContentModelHandler#SEPARATOR_SEQUENCE
"
      end

      operation 4447234 "occurrence"
	public explicit_return_type "void"
	nparams 2
	  param in name "occurrence" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " separator(short)

The occurrence count for a child in a children content model or
for the mixed content model group.

@param occurrence The occurrence count for the last element
                  or group.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ZERO_OR_ONE
@see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ZERO_OR_MORE
@see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ONE_OR_MORE
"
      end

      operation 4447362 "endGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " occurrence(short)

The end of a group for mixed or children content models.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4447490 "endDTD"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endGroup()

The end of the DTD.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4447618 "addContentSpecToElement"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elementDecl" type class_ref 675458 // XMLElementDecl
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endDTD()

 Protected methods


Adds the content spec to the given element declaration.
"
      end

      operation 4447746 "addContentSpecNodes"
	private explicit_return_type "int"
	nparams 2
	  param in name "begin" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private methods


Creates a subtree from the leaf nodes at the current depth.
"
      end

      operation 4447874 "initializeContentModelStacks"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addContentSpecNodes(int,int)

Initialize the stacks which temporarily hold content models.
"
      end

      operation 4448002 "addToCurrentGroup"
	private explicit_return_type "void"
	nparams 1
	  param in name "contentSpec" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " initializeContentModelStacks()

Add XMLContentSpec to the current group.

@param contentSpec handle to the XMLContentSpec to add to the current group
"
      end
    end

    class 674562 "DTDGrammar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A DTD grammar. This class implements the XNI handler interfaces
for DTD information so that it can build the appropriate validation
structures automatically from the callbacks.

@xerces.internal

@author Eric Ye, IBM
@author Jeffrey Rodriguez, IBM
@author Andy Clark, IBM
@author Neil Graham, IBM

@version $Id: DTDGrammar.java,v 1.4 2010/08/11 07:18:37 joehw Exp $
"
      classrelation 1877506 // <realization>
	relation 1877506 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1877506 // <realization>
	  b parent class_ref 658178 // XMLDTDHandler
      end

      classrelation 1877634 // <realization>
	relation 1877634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1877634 // <realization>
	  b parent class_ref 658306 // XMLDTDContentModelHandler
      end

      classrelation 1877762 // <realization>
	relation 1877762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1877762 // <realization>
	  b parent class_ref 674690 // EntityState
      end

      classrelation 1877890 // <realization>
	relation 1877890 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1877890 // <realization>
	  b parent class_ref 674818 // Grammar
      end

      attribute 946946 "TOP_LEVEL_SCOPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Top level scope (-1). 
"
      end

      attribute 947074 "CHUNK_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " private
 Chunk shift (8). 
 2^8 = 256"
      end

      attribute 947202 "CHUNK_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << CHUNK_SHIFT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chunk size (1 << CHUNK_SHIFT). 
"
      end

      attribute 947330 "CHUNK_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " CHUNK_SIZE - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chunk mask (CHUNK_SIZE - 1). 
"
      end

      attribute 947458 "INITIAL_CHUNK_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << (10 - CHUNK_SHIFT))"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Initial chunk count (1 << (10 - CHUNK_SHIFT)). 
 2^10 = 1k"
      end

      attribute 947586 "LIST_FLAG"
	class_attribute const_attribute private explicit_type "short"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " List flag (0x80). 
"
      end

      attribute 947714 "LIST_MASK"
	class_attribute const_attribute private explicit_type "short"
	init_value " ~LIST_FLAG"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " List mask (~LIST_FLAG). 
"
      end

      attribute 947842 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " debugging
 Debug DTDGrammar. 
"
      end

      classrelation 1878018 // fDTDSource (<unidirectional association>)
	relation 1878018 --->
	  a role_name "fDTDSource" init_value " null" protected
	    comment " Data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878018 // fDTDSource (<unidirectional association>)
	  b parent class_ref 670722 // XMLDTDSource
      end

      classrelation 1878146 // fDTDContentModelSource (<unidirectional association>)
	relation 1878146 --->
	  a role_name "fDTDContentModelSource" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878146 // fDTDContentModelSource (<unidirectional association>)
	  b parent class_ref 670850 // XMLDTDContentModelSource
      end

      attribute 947970 "fCurrentElementIndex"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Current element index. 
"
      end

      attribute 948098 "fCurrentAttributeIndex"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Current attribute index. 
"
      end

      attribute 948226 "fReadingExternalDTD"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " fReadingExternalDTD 
"
      end

      classrelation 1878274 // fSymbolTable (<unidirectional association>)
	relation 1878274 --->
	  a role_name "fSymbolTable" private
	    comment " Symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878274 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 1878402 // fGrammarDescription (<unidirectional association>)
	relation 1878402 --->
	  a role_name "fGrammarDescription" init_value " null" protected
	    comment " The XMLDTDDescription with which this Grammar is associated
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878402 // fGrammarDescription (<unidirectional association>)
	  b parent class_ref 669698 // XMLDTDDescription
      end

      attribute 948354 "fElementDeclCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " element declarations
 Number of element declarations. 
"
      end

      classrelation 1878530 // fElementDeclName (<unidirectional association>)
	relation 1878530 --->
	  a role_name "fElementDeclName" multiplicity "[][]" init_value " new QName[INITIAL_CHUNK_COUNT][]" private
	    comment " Element declaration name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1878530 // fElementDeclName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 948482 "fElementDeclType"
	private explicit_type "short"
	multiplicity "[][]"
	init_value " new short[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Element declaration type.
@see XMLElementDecl

"
      end

      attribute 948610 "fElementDeclContentSpecIndex"
	private explicit_type "int"
	multiplicity "[][]"
	init_value " new int[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Element declaration content spec index. This index value is used
to refer to the content spec information tables.

"
      end

      classrelation 1878658 // fElementDeclContentModelValidator (<unidirectional association>)
	relation 1878658 --->
	  a role_name "fElementDeclContentModelValidator" multiplicity "[][]" init_value " new ContentModelValidator[INITIAL_CHUNK_COUNT][]" private
	    comment "
Element declaration content model validator. This validator is
constructed from the content spec nodes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1878658 // fElementDeclContentModelValidator (<unidirectional association>)
	  b parent class_ref 675074 // ContentModelValidator
      end

      attribute 948738 "fElementDeclFirstAttributeDeclIndex"
	private explicit_type "int"
	multiplicity "[][]"
	init_value " new int[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " First attribute declaration of an element declaration. 
"
      end

      attribute 948866 "fElementDeclLastAttributeDeclIndex"
	private explicit_type "int"
	multiplicity "[][]"
	init_value " new int[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Last attribute declaration of an element declaration. 
"
      end

      attribute 948994 "fAttributeDeclCount"
	private explicit_type "int"
	init_value " 0 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " attribute declarations
 Number of attribute declarations. 
"
      end

      classrelation 1878786 // fAttributeDeclName (<unidirectional association>)
	relation 1878786 --->
	  a role_name "fAttributeDeclName" multiplicity "[][]" init_value " new QName[INITIAL_CHUNK_COUNT][]" private
	    comment " Attribute declaration name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1878786 // fAttributeDeclName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 949122 "fIsImmutable"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " is this grammar immutable?  (fully constructed and not changeable)
"
      end

      attribute 949250 "fAttributeDeclType"
	private explicit_type "short"
	multiplicity "[][]"
	init_value " new short[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Attribute declaration type.
@see XMLAttributeDecl

"
      end

      classrelation 1878914 // fAttributeDeclEnumeration (<unidirectional association>)
	relation 1878914 --->
	  a role_name "fAttributeDeclEnumeration" multiplicity "[][][]" init_value " new String[INITIAL_CHUNK_COUNT][][]" private
	    comment " Attribute declaration enumeration values. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1878914 // fAttributeDeclEnumeration (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 949378 "fAttributeDeclDefaultType"
	private explicit_type "short"
	multiplicity "[][]"
	init_value " new short[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1879042 // fAttributeDeclDatatypeValidator (<unidirectional association>)
	relation 1879042 --->
	  a role_name "fAttributeDeclDatatypeValidator" multiplicity "[][]" init_value " new DatatypeValidator[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879042 // fAttributeDeclDatatypeValidator (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1879170 // fAttributeDeclDefaultValue (<unidirectional association>)
	relation 1879170 --->
	  a role_name "fAttributeDeclDefaultValue" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879170 // fAttributeDeclDefaultValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1879298 // fAttributeDeclNonNormalizedDefaultValue (<unidirectional association>)
	relation 1879298 --->
	  a role_name "fAttributeDeclNonNormalizedDefaultValue" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879298 // fAttributeDeclNonNormalizedDefaultValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 949506 "fAttributeDeclNextAttributeDeclIndex"
	private explicit_type "int"
	multiplicity "[][]"
	init_value " new int[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 949634 "fContentSpecCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " content specs
 here saves the content spec binary trees for element decls,
 each element with a content model will hold a pointer which is
 the index of the head node of the content spec tree.
"
      end

      attribute 949762 "fContentSpecType"
	private explicit_type "short"
	multiplicity "[][]"
	init_value " new short[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1879426 // fContentSpecValue (<unidirectional association>)
	relation 1879426 --->
	  a role_name "fContentSpecValue" multiplicity "[][]" init_value " new Object[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879426 // fContentSpecValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1879554 // fContentSpecOtherValue (<unidirectional association>)
	relation 1879554 --->
	  a role_name "fContentSpecOtherValue" multiplicity "[][]" init_value " new Object[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879554 // fContentSpecOtherValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 949890 "fEntityCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " entities
"
      end

      classrelation 1879682 // fEntityName (<unidirectional association>)
	relation 1879682 --->
	  a role_name "fEntityName" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879682 // fEntityName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1879810 // fEntityValue (<unidirectional association>)
	relation 1879810 --->
	  a role_name "fEntityValue" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879810 // fEntityValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1879938 // fEntityPublicId (<unidirectional association>)
	relation 1879938 --->
	  a role_name "fEntityPublicId" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879938 // fEntityPublicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1880066 // fEntitySystemId (<unidirectional association>)
	relation 1880066 --->
	  a role_name "fEntitySystemId" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1880066 // fEntitySystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1880194 // fEntityBaseSystemId (<unidirectional association>)
	relation 1880194 --->
	  a role_name "fEntityBaseSystemId" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1880194 // fEntityBaseSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1880322 // fEntityNotation (<unidirectional association>)
	relation 1880322 --->
	  a role_name "fEntityNotation" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1880322 // fEntityNotation (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 950018 "fEntityIsPE"
	private explicit_type "byte"
	multiplicity "[][]"
	init_value " new byte[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 950146 "fEntityInExternal"
	private explicit_type "byte"
	multiplicity "[][]"
	init_value " new byte[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 950274 "fNotationCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " notations
"
      end

      classrelation 1880450 // fNotationName (<unidirectional association>)
	relation 1880450 --->
	  a role_name "fNotationName" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1880450 // fNotationName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1880578 // fNotationPublicId (<unidirectional association>)
	relation 1880578 --->
	  a role_name "fNotationPublicId" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1880578 // fNotationPublicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1880706 // fNotationSystemId (<unidirectional association>)
	relation 1880706 --->
	  a role_name "fNotationSystemId" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1880706 // fNotationSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1880834 // fNotationBaseSystemId (<unidirectional association>)
	relation 1880834 --->
	  a role_name "fNotationBaseSystemId" multiplicity "[][]" init_value " new String[INITIAL_CHUNK_COUNT][]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1880834 // fNotationBaseSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1880962 // fElementIndexMap (<unidirectional association>)
	relation 1880962 --->
	  a role_name "fElementIndexMap" init_value " new HashMap<>()" const_relation private
	    comment " other information
 Element index mapping table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 1880962 // fElementIndexMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1881090 // fEntityIndexMap (<unidirectional association>)
	relation 1881090 --->
	  a role_name "fEntityIndexMap" init_value " new HashMap<>()" const_relation private
	    comment " Entity index mapping table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 1881090 // fEntityIndexMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1881218 // fNotationIndexMap (<unidirectional association>)
	relation 1881218 --->
	  a role_name "fNotationIndexMap" init_value " new HashMap<>()" const_relation private
	    comment " Notation index mapping table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 1881218 // fNotationIndexMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 950402 "fMixed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " temp variables
 Mixed. 
"
      end

      classrelation 1881346 // fQName (<unidirectional association>)
	relation 1881346 --->
	  a role_name "fQName" init_value " new QName()" const_relation private
	    comment " Temporary qualified name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1881346 // fQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1881474 // fQName2 (<unidirectional association>)
	relation 1881474 --->
	  a role_name "fQName2" init_value " new QName()" const_relation private
	    comment " Temporary qualified name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1881474 // fQName2 (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1881602 // fAttributeDecl (<unidirectional association>)
	relation 1881602 --->
	  a role_name "fAttributeDecl" init_value " new XMLAttributeDecl()" const_relation protected
	    comment " Temporary Attribute decl. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1881602 // fAttributeDecl (<unidirectional association>)
	  b parent class_ref 675330 // XMLAttributeDecl
      end

      attribute 950530 "fLeafCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " for buildSyntaxTree method
"
      end

      attribute 950658 "fEpsilonIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1881730 // fElementDecl (<unidirectional association>)
	relation 1881730 --->
	  a role_name "fElementDecl" init_value " new XMLElementDecl()" private
	    comment " Element declaration. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1881730 // fElementDecl (<unidirectional association>)
	  b parent class_ref 675458 // XMLElementDecl
      end

      classrelation 1881858 // fEntityDecl (<unidirectional association>)
	relation 1881858 --->
	  a role_name "fEntityDecl" init_value " new XMLEntityDecl()" private
	    comment " Entity declaration. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1881858 // fEntityDecl (<unidirectional association>)
	  b parent class_ref 675586 // XMLEntityDecl
      end

      classrelation 1881986 // fSimpleType (<unidirectional association>)
	relation 1881986 --->
	  a role_name "fSimpleType" init_value " new XMLSimpleType()" private
	    comment " Simple type. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1881986 // fSimpleType (<unidirectional association>)
	  b parent class_ref 675714 // XMLSimpleType
      end

      classrelation 1882114 // fContentSpec (<unidirectional association>)
	relation 1882114 --->
	  a role_name "fContentSpec" init_value " new XMLContentSpec()" private
	    comment " Content spec node. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1882114 // fContentSpec (<unidirectional association>)
	  b parent class_ref 675842 // XMLContentSpec
      end

      classrelation 1882242 // fElementDeclTab (<unidirectional association>)
	relation 1882242 --->
	  a role_name "fElementDeclTab" init_value " new HashMap<>()" package
	    comment " table of XMLElementDecl   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, XMLElementDecl> ${name}${value};
"
	    classrelation_ref 1882242 // fElementDeclTab (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 950786 "fOpStack"
	private explicit_type "short"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Children content model operation stack. 
"
      end

      attribute 950914 "fNodeIndexStack"
	private explicit_type "int"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Children content model index stack. 
"
      end

      attribute 951042 "fPrevNodeIndexStack"
	private explicit_type "int"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Children content model previous node index stack. 
"
      end

      attribute 951170 "fDepth"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Stack depth   
"
      end

      attribute 951298 "fPEntityStack"
	private explicit_type "boolean"
	multiplicity "[]"
	init_value " new boolean[4]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Entity stack. 
"
      end

      attribute 951426 "fPEDepth"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 951554 "fElementDeclIsExternal"
	private explicit_type "int"
	multiplicity "[][]"
	init_value " new int[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " additional fields(columns) for the element Decl pool in the Grammar
 flag if the elementDecl is External. 
"
      end

      attribute 951682 "fAttributeDeclIsExternal"
	private explicit_type "int"
	multiplicity "[][]"
	init_value " new int[INITIAL_CHUNK_COUNT][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " additional fields(columns) for the attribute Decl pool in the Grammar
 flag if the AttributeDecl is External. 
"
      end

      attribute 951810 "valueIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " for mixedElement method
"
      end

      attribute 951938 "prevNodeIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 952066 "nodeIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4433282 "DTDGrammar"
	public explicit_return_type ""
	nparams 2
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "desc" type class_ref 669698 // XMLDTDDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4433410 "getGrammarDescription"
	public return_type class_ref 674946 // XMLGrammarDescription
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(SymbolTable)
 Grammar methods
 return the XMLDTDDescription object with which this is associated"
      end

      operation 4433538 "getElementDeclIsExternal"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getGrammarDescription():  XMLGrammarDescription

 Public methods


Returns true if the specified element declaration is external.

@param elementDeclIndex The element declaration index.
"
      end

      operation 4433666 "getAttributeDeclIsExternal"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "attributeDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getElementDeclIsExternal(int):boolean

Returns true if the specified attribute declaration is external.

@param attributeDeclIndex Attribute declaration index.
"
      end

      operation 4433794 "getAttributeDeclIndex"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementDeclIndex" explicit_type "int"
	  param inout name "attributeDeclName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4433922 "startDTD"
	public explicit_return_type "void"
	nparams 2
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttributeDeclIndex (int,QName)

 XMLDTDHandler methods


The start of the DTD.

@param locator  The document locator, or null if the document
                location cannot be reported during the parsing of
                the document DTD. However, it is <em>strongly</em>
                recommended that a locator be supplied that can
                at least report the base system identifier of the
                DTD.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434050 "startParameterEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startDTD(XMLLocator)

This method notifies of the start of an entity. The DTD has the
pseudo-name of \"[dtd]\" and parameter entity names start with '%'.
<p>
<strong>Note:</strong> Since the DTD is an entity, the handler
will be notified of the start of the DTD entity by calling the
startParameterEntity method with the entity name \"[dtd]\" <em>before</em> calling
the startDTD method.

@param name     The name of the parameter entity.
@param identifier The resource identifier.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal parameter entities).
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434178 "startExternalSubset"
	public explicit_return_type "void"
	nparams 2
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startParameterEntity(String,XMLResourceIdentifier,String,Augmentations)

The start of the DTD external subset.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434306 "endParameterEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startExternalSubset(Augmentations)

This method notifies the end of an entity. The DTD has the pseudo-name
of \"[dtd]\" and parameter entity names start with '%'.
<p>
<strong>Note:</strong> Since the DTD is an entity, the handler
will be notified of the end of the DTD entity by calling the
endEntity method with the entity name \"[dtd]\" <em>after</em> calling
the endDTD method.

@param name The name of the entity.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434434 "endExternalSubset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endParameterEntity(String,Augmentations)

The end of the DTD external subset.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434562 "elementDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "contentModel" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endExternalSubset(Augmentations)

An element declaration.

@param name         The name of the element.
@param contentModel The element content model.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434690 "attributeDecl"
	public explicit_return_type "void"
	nparams 8
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attributeName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "enumeration" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "defaultType" type class_ref 128130 // String
	  param inout name "defaultValue" type class_ref 661250 // XMLString
	  param inout name "nonNormalizedDefaultValue" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " elementDecl(String,String)

An attribute declaration.

@param elementName   The name of the element that this attribute
                     is associated with.
@param attributeName The name of the attribute.
@param type          The attribute type. This value will be one of
                     the following: \"CDATA\", \"ENTITY\", \"ENTITIES\",
                     \"ENUMERATION\", \"ID\", \"IDREF\", \"IDREFS\",
                     \"NMTOKEN\", \"NMTOKENS\", or \"NOTATION\".
@param enumeration   If the type has the value \"ENUMERATION\", this
                     array holds the allowed attribute values;
                     otherwise, this array is null.
@param defaultType   The attribute default type. This value will be
                     one of the following: \"#FIXED\", \"#IMPLIED\",
                     \"#REQUIRED\", or null.
@param defaultValue  The attribute default value, or null if no
                     default value is specified.
@param nonNormalizedDefaultValue  The attribute default value with no normalization
                     performed, or null if no default value is specified.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434818 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "nonNormalizedText" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " attributeDecl(String,String,String,String[],String,XMLString,XMLString, Augmentations)

An internal entity declaration.

@param name The name of the entity. Parameter entity names start with
            '%', whereas the name of a general entity is just the
            entity name.
@param text The value of the entity.
@param nonNormalizedText The non-normalized value of the entity. This
            value contains the same sequence of characters that was in
            the internal entity declaration, without any entity
            references expanded.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4434946 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalEntityDecl(String,XMLString,XMLString)

An external entity declaration.

@param name     The name of the entity. Parameter entity names start
                with '%', whereas the name of a general entity is just
                the entity name.
@param identifier    An object containing all location information
                     pertinent to this external entity declaration.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4435074 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "notation" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " externalEntityDecl(String, XMLResourceIdentifier, Augmentations)

An unparsed entity declaration.

@param name     The name of the entity.
@param identifier    An object containing all location information
                     pertinent to this entity.
@param notation The name of the notation.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4435202 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " unparsedEntityDecl(String,StringXMLResourceIdentifier,Augmentations)

A notation declaration

@param name     The name of the notation.
@param identifier    An object containing all location information
                     pertinent to this notation.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4435330 "endDTD"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " notationDecl(String,XMLResourceIdentifier,Augmentations)

The end of the DTD.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4435458 "setDTDSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 670722 // XMLDTDSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endDTD()
 sets the source of this handler"
      end

      operation 4435586 "getDTDSource"
	public return_type class_ref 670722 // XMLDTDSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDTDSource(XMLDTDSource)
 returns the source of this handler"
      end

      operation 4435714 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDTDSource():  XMLDTDSource
 no-op methods

Notifies of the presence of a TextDecl line in an entity. If present,
this method will be called immediately following the startEntity call.
<p>
<strong>Note:</strong> This method is only called for external
parameter entities referenced in the DTD.

@param version  The XML version, or null if not specified.
@param encoding The IANA encoding name of the entity.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4435842 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A comment.

@param text The text in the comment.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by application to signal an error.
"
      end

      operation 4435970 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A processing instruction. Processing instructions consist of a
target name and, optionally, text data. The data is only meaningful
to the application.
<p>
Typically, a processing instruction's data will contain a series
of pseudo-attributes. These pseudo-attributes follow the form of
element attributes but are <strong>not</strong> parsed or presented
to the application as anything other than text. The application is
responsible for parsing the data.

@param target The target.
@param data   The data or null if none specified.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4436098 "startAttlist"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of an attribute list.

@param elementName The name of the element that this attribute
                   list is associated with.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4436226 "endAttlist"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of an attribute list.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4436354 "startConditional"
	public explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of a conditional section.

@param type The type of the conditional section. This value will
            either be CONDITIONAL_INCLUDE or CONDITIONAL_IGNORE.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see XMLDTDHandler#CONDITIONAL_INCLUDE
@see XMLDTDHandler#CONDITIONAL_IGNORE
"
      end

      operation 4436482 "ignoredCharacters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Characters within an IGNORE conditional section.

@param text The ignored text.
@param augs Additional information that may include infoset
                     augmentations.
"
      end

      operation 4436610 "endConditional"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a conditional section.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4436738 "setDTDContentModelSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 670850 // XMLDTDContentModelSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLDTDContentModelHandler methods

 set content model source"
      end

      operation 4436866 "getDTDContentModelSource"
	public return_type class_ref 670850 // XMLDTDContentModelSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " get content model source"
      end

      operation 4436994 "startContentModel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of a content model. Depending on the type of the content
model, specific methods may be called between the call to the
startContentModel method and the call to the endContentModel method.

@param elementName The name of the element.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4437122 "startGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startContentModel(String)

A start of either a mixed or children content model. A mixed
content model will immediately be followed by a call to the
<code>pcdata()</code> method. A children content model will
contain additional groups and/or elements.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see #any
@see #empty
"
      end

      operation 4437250 "pcdata"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startGroup()

The appearance of \"#PCDATA\" within a group signifying a
mixed content model. This method will be the first called
following the content model's <code>startGroup()</code>.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #startGroup
"
      end

      operation 4437378 "element"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " pcdata()

A referenced element in a mixed or children content model.

@param elementName The name of the referenced element.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4437506 "separator"
	public explicit_return_type "void"
	nparams 2
	  param in name "separator" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " element(String)

The separator between choices or sequences of a mixed or children
content model.

@param separator The type of children separator.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see org.apache.xerces.xni.XMLDTDContentModelHandler#SEPARATOR_CHOICE
@see org.apache.xerces.xni.XMLDTDContentModelHandler#SEPARATOR_SEQUENCE
"
      end

      operation 4437634 "occurrence"
	public explicit_return_type "void"
	nparams 2
	  param in name "occurrence" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " separator(short)

The occurrence count for a child in a children content model or
for the mixed content model group.

@param occurrence The occurrence count for the last element
                  or group.
@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ZERO_OR_ONE
@see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ZERO_OR_MORE
@see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ONE_OR_MORE
"
      end

      operation 4437762 "endGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " occurrence(short)

The end of a group for mixed or children content models.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4437890 "any"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endGroup()
 no-op methods

A content model of ANY.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see #empty
@see #startGroup
"
      end

      operation 4438018 "empty"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A content model of EMPTY.

@param augs Additional information that may include infoset
                     augmentations.
@throws XNIException Thrown by handler to signal an error.

@see #any
@see #startGroup
"
      end

      operation 4438146 "endContentModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a content model.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4438274 "isNamespaceAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Grammar methods

 Returns true if this grammar is namespace aware. "
      end

      operation 4438402 "getSymbolTable"
	public return_type class_ref 658690 // SymbolTable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isNamespaceAware():boolean
 Returns the symbol table. "
      end

      operation 4438530 "getFirstElementDeclIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSymbolTable():SymbolTable

Returns the index of the first element declaration. This index
is then used to query more information about the element declaration.

@see #getNextElementDeclIndex
@see #getElementDecl
"
      end

      operation 4438658 "getNextElementDeclIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstElementDeclIndex():int

Returns the next index of the element declaration following the
specified element declaration.

@param elementDeclIndex The element declaration index.
"
      end

      operation 4438786 "getElementDeclIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementDeclName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextElementDeclIndex(int):int

getElementDeclIndex

@param elementDeclName

@return index of the elementDeclName in scope
"
      end

      operation 4438914 "getElementDeclIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementDeclQName" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getElementDeclIndex(String):int
 Returns the element decl index.
@param elementDeclQName qualilfied name of the element
"
      end

      operation 4439042 "getContentSpecType"
	public explicit_return_type "short"
	nparams 1
	  param in name "elementIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getElementDeclIndex(QName):int
 make separate function for getting contentSpecType of element.
we can avoid setting of the element values.
"
      end

      operation 4439170 "getElementDecl"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "elementDeclIndex" explicit_type "int"
	  param inout name "elementDecl" type class_ref 675458 // XMLElementDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getContentSpecType

getElementDecl

@param elementDeclIndex
@param elementDecl The values of this structure are set by this call.

@return True if find the element, False otherwise.
"
      end

      operation 4439298 "getElementDeclName"
	package return_type class_ref 661378 // QName
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getElementDecl(int,XMLElementDecl):boolean"
      end

      operation 4439426 "getFirstAttributeDeclIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REVISIT: Make this getAttributeDeclCount/getAttributeDeclAt. -Ac

getFirstAttributeDeclIndex

@param elementDeclIndex

@return index of the first attribute for element declaration elementDeclIndex
"
      end

      operation 4439554 "getNextAttributeDeclIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "attributeDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstAttributeDeclIndex

getNextAttributeDeclIndex

@param attributeDeclIndex

@return index of the next attribute of the attribute at attributeDeclIndex
"
      end

      operation 4439682 "getAttributeDecl"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "attributeDeclIndex" explicit_type "int"
	  param inout name "attributeDecl" type class_ref 675330 // XMLAttributeDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextAttributeDeclIndex

getAttributeDecl

@param attributeDeclIndex
@param attributeDecl The values of this structure are set by this call.

@return true if getAttributeDecl was able to fill in the value of attributeDecl
"
      end

      operation 4439810 "isCDATAAttribute"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "elName" type class_ref 661378 // QName
	  param inout name "atName" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttributeDecl

Returns whether the given attribute is of type CDATA or not

@param elName The element name.
@param atName The attribute name.

@return true if the attribute is of type CDATA
"
      end

      operation 4439938 "getEntityDeclIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "entityDeclName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getEntityDeclIndex

@param entityDeclName

@return the index of the EntityDecl
"
      end

      operation 4440066 "getEntityDecl"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "entityDeclIndex" explicit_type "int"
	  param inout name "entityDecl" type class_ref 675586 // XMLEntityDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityDeclIndex

getEntityDecl

@param entityDeclIndex
@param entityDecl

@return true if getEntityDecl was able to fill entityDecl with the contents of the entity
with index entityDeclIndex
"
      end

      operation 4440194 "getNotationDeclIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "notationDeclName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityDecl

getNotationDeclIndex

@param notationDeclName

@return the index if found a notation with the name, otherwise -1.
"
      end

      operation 4440322 "getNotationDecl"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "notationDeclIndex" explicit_type "int"
	  param inout name "notationDecl" type class_ref 675970 // XMLNotationDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNotationDeclIndex

getNotationDecl

@param notationDeclIndex
@param notationDecl

@return return true of getNotationDecl can fill notationDecl with information about
the notation at notationDeclIndex.
"
      end

      operation 4440450 "getContentSpec"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "contentSpecIndex" explicit_type "int"
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNotationDecl

getContentSpec

@param contentSpecIndex
@param contentSpec

@return true if find the requested contentSpec node, false otherwise
"
      end

      operation 4440578 "getContentSpecIndex"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index to the content spec for the given element
declaration, or <code>-1</code> if the element declaration
index was invalid.
"
      end

      operation 4440706 "getContentSpecAsString"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getContentSpecAsString

@param elementDeclIndex

@return String
"
      end

      operation 4440834 "printElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getContentSpecAsString(int):String
 debugging"
      end

      operation 4440962 "printAttributes"
	public explicit_return_type "void"
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4441090 "addContentSpecToElement"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elementDecl" type class_ref 675458 // XMLElementDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods


Adds the content spec to the given element declaration.
"
      end

      operation 4441218 "getElementContentModelValidator"
	protected return_type class_ref 675074 // ContentModelValidator
	nparams 1
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getElementContentModelValidator

@param elementDeclIndex

@return its ContentModelValidator if any.
"
      end

      operation 4441346 "createElementDecl"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getElementContentModelValidator(int):ContentModelValidator"
      end

      operation 4441474 "setElementDecl"
	protected explicit_return_type "void"
	nparams 2
	  param in name "elementDeclIndex" explicit_type "int"
	  param inout name "elementDecl" type class_ref 675458 // XMLElementDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4441602 "putElementNameMapping"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 661378 // QName
	  param in name "scope" explicit_type "int"
	  param in name "elementDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4441730 "setFirstAttributeDeclIndex"
	protected explicit_return_type "void"
	nparams 2
	  param in name "elementDeclIndex" explicit_type "int"
	  param in name "newFirstAttrIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4441858 "setContentSpecIndex"
	protected explicit_return_type "void"
	nparams 2
	  param in name "elementDeclIndex" explicit_type "int"
	  param in name "contentSpecIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4441986 "createAttributeDecl"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4442114 "setAttributeDecl"
	protected explicit_return_type "void"
	nparams 3
	  param in name "elementDeclIndex" explicit_type "int"
	  param in name "attributeDeclIndex" explicit_type "int"
	  param inout name "attributeDecl" type class_ref 675330 // XMLAttributeDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4442242 "createContentSpec"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4442370 "setContentSpec"
	protected explicit_return_type "void"
	nparams 2
	  param in name "contentSpecIndex" explicit_type "int"
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4442498 "createEntityDecl"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4442626 "setEntityDecl"
	protected explicit_return_type "void"
	nparams 2
	  param in name "entityDeclIndex" explicit_type "int"
	  param inout name "entityDecl" type class_ref 675586 // XMLEntityDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4442754 "createNotationDecl"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4442882 "setNotationDecl"
	protected explicit_return_type "void"
	nparams 2
	  param in name "notationDeclIndex" explicit_type "int"
	  param inout name "notationDecl" type class_ref 675970 // XMLNotationDecl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4443010 "addContentSpecNode"
	protected explicit_return_type "int"
	nparams 2
	  param in name "nodeType" explicit_type "short"
	  param inout name "nodeValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XMLContentSpec for a single non-leaf

@param nodeType the type of XMLContentSpec to create - from XMLContentSpec.CONTENTSPECNODE_*
@param nodeValue handle to an XMLContentSpec
@return handle to the newly create XMLContentSpec
"
      end

      operation 4443138 "addUniqueLeafNode"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addContentSpecNode(short,String):int

create an XMLContentSpec for a leaf

@param   elementName  the name (Element) for the node
@return handle to the newly create XMLContentSpec
"
      end

      operation 4443266 "addContentSpecNode"
	protected explicit_return_type "int"
	nparams 3
	  param in name "nodeType" explicit_type "short"
	  param in name "leftNodeIndex" explicit_type "int"
	  param in name "rightNodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addUniqueLeafNode(String):int

Create an XMLContentSpec for a two child leaf

@param nodeType the type of XMLContentSpec to create - from XMLContentSpec.CONTENTSPECNODE_*
@param leftNodeIndex handle to an XMLContentSpec
@param rightNodeIndex handle to an XMLContentSpec
@return handle to the newly create XMLContentSpec
"
      end

      operation 4443394 "initializeContentModelStack"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addContentSpecNode(short,int,int):int
 Initialize content model stack. "
      end

      operation 4443522 "isImmutable"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " initializeContentModelStack()"
      end

      operation 4443650 "appendContentSpec"
	private explicit_return_type "void"
	nparams 4
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	  param inout name "str" type class_ref 166018 // StringBuffer
	  param inout name "parens" explicit_type "boolean"
	  param in name "parentContentSpecType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private methods
"
      end

      operation 4443778 "printAttribute"
	private explicit_return_type "void"
	nparams 1
	  param in name "attributeDeclIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " appendContentSpec(XMLContentSpec.Provider,StringPool,XMLContentSpec,StringBuffer,boolean)
 debugging"
      end

      operation 4443906 "createChildModel"
	private return_type class_ref 675074 // ContentModelValidator
	nparams 1
	  param in name "contentSpecIndex" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " printAttribute(int)
 content models

When the element has a 'CHILDREN' model, this method is called to
create the content model object. It looks for some special case simple
models and creates SimpleContentModel objects for those. For the rest
it creates the standard DFA style model.
"
      end

      operation 4444034 "buildSyntaxTree"
	private return_type class_ref 676098 // CMNode
	nparams 2
	  param in name "startNode" explicit_type "int"
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createChildModel(int):ContentModelValidator"
      end

      operation 4444162 "contentSpecTree"
	private explicit_return_type "void"
	nparams 3
	  param in name "contentSpecIndex" explicit_type "int"
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	  param inout name "children" type class_ref 676226 // ChildrenList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Build a vector of valid QNames from Content Spec
table.

@param contentSpecIndex
              Content Spec index
@param vectorQName
              Array of QName
@exception RuntimeException
"
      end

      class 676226 "ChildrenList"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 952194 "length"
	  public explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Data

 Length. 
"
	end

	classrelation 1882370 // qname (<unidirectional association>)
	  relation 1882370 --->
	    a role_name "qname" multiplicity "[]" init_value " new QName[2]" public
	      comment " NOTE: The following set of data is mutually exclusive. It is
       written this way because Java doesn't have a native
       union data structure. -Ac
 Left and right children names. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1882370 // qname (<unidirectional association>)
	    b parent class_ref 661378 // QName
	end

	attribute 952322 "type"
	  public explicit_type "int"
	  multiplicity "[]"
	  init_value " new int[2]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Left and right children types. 
"
	end

	operation 4446082 "ChildrenList"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Constructors
"
	end
      end

      operation 4444290 "ensureElementDeclCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " contentSpecTree(int,XMLContentSpec,ChildrenList)
 ensure capacity"
      end

      operation 4444418 "ensureAttributeDeclCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4444546 "ensureEntityDeclCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4444674 "ensureNotationDeclCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4444802 "ensureContentSpecCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4444930 "resize"
	class_operation private explicit_return_type "byte"
	nparams 2
	  param inout name "array" explicit_type "byte"
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private static methods

 resize chunks"
      end

      operation 4445058 "resize"
	class_operation private explicit_return_type "short"
	nparams 2
	  param inout name "array" explicit_type "short"
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4445186 "resize"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4445314 "resize"
	class_operation private return_type class_ref 675202 // DatatypeValidator
	nparams 2
	  param inout name "array" type class_ref 675202 // DatatypeValidator
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4445442 "resize"
	class_operation private return_type class_ref 675074 // ContentModelValidator
	nparams 2
	  param inout name "array" type class_ref 675074 // ContentModelValidator
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4445570 "resize"
	class_operation private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "array" type class_ref 129538 // Object
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4445698 "resize"
	class_operation private return_type class_ref 661378 // QName
	nparams 2
	  param inout name "array" type class_ref 661378 // QName
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4445826 "resize"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "array" type class_ref 128130 // String
	multiplicity "[][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4445954 "resize"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "array" type class_ref 128130 // String
	multiplicity "[][][]"
	  param in name "newsize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][][] ${name}${(}${t0}[][][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4446210 "isEntityDeclared"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " class ChildrenList

 EntityState methods
"
      end

      operation 4446338 "isEntityUnparsed"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 675330 "XMLAttributeDecl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 1896578 // name (<unidirectional association>)
	relation 1896578 --->
	  a role_name "name" init_value " new QName()" const_relation public
	    comment " Data

 name 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1896578 // name (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1896706 // simpleType (<unidirectional association>)
	relation 1896706 --->
	  a role_name "simpleType" init_value " new XMLSimpleType()" const_relation public
	    comment " simpleType 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1896706 // simpleType (<unidirectional association>)
	  b parent class_ref 675714 // XMLSimpleType
      end

      attribute 957186 "optional"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " optional 
"
      end

      operation 4468482 "setValues"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 661378 // QName
	  param inout name "simpleType" type class_ref 675714 // XMLSimpleType
	  param inout name "optional" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods


setValues

@param name
@param simpleType
@param optional
"
      end

      operation 4468610 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues

clear
"
      end
    end

    class 675458 "XMLElementDecl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 959362 "TYPE_ANY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 TYPE_ANY 
"
      end

      attribute 959490 "TYPE_EMPTY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_EMPTY 
"
      end

      attribute 959618 "TYPE_MIXED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_MIXED 
"
      end

      attribute 959746 "TYPE_CHILDREN"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_CHILDREN 
"
      end

      attribute 959874 "TYPE_SIMPLE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_SIMPLE 
"
      end

      classrelation 1898882 // name (<unidirectional association>)
	relation 1898882 --->
	  a role_name "name" init_value " new QName()" const_relation public
	    comment " Data

 name 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898882 // name (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 960002 "scope"
	public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " scope 
"
      end

      attribute 960130 "type"
	public explicit_type "short"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " type 
"
      end

      classrelation 1899010 // contentModelValidator (<unidirectional association>)
	relation 1899010 --->
	  a role_name "contentModelValidator" public
	    comment " contentModelValidator 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899010 // contentModelValidator (<unidirectional association>)
	  b parent class_ref 675074 // ContentModelValidator
      end

      classrelation 1899138 // simpleType (<unidirectional association>)
	relation 1899138 --->
	  a role_name "simpleType" init_value " new XMLSimpleType()" const_relation public
	    comment " simpleType 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899138 // simpleType (<unidirectional association>)
	  b parent class_ref 675714 // XMLSimpleType
      end

      operation 4473986 "setValues"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 661378 // QName
	  param in name "scope" explicit_type "int"
	  param in name "type" explicit_type "short"
	  param inout name "contentModelValidator" type class_ref 675074 // ContentModelValidator
	  param inout name "simpleType" type class_ref 675714 // XMLSimpleType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods


setValues

@param name
@param scope
@param type
@param contentModelValidator
@param simpleType
"
      end

      operation 4474114 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues

clear
"
      end
    end

    class 675586 "XMLEntityDecl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 1899266 // name (<unidirectional association>)
	relation 1899266 --->
	  a role_name "name" public
	    comment " Data

 name 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899266 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1899394 // publicId (<unidirectional association>)
	relation 1899394 --->
	  a role_name "publicId" public
	    comment " publicId 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899394 // publicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1899522 // systemId (<unidirectional association>)
	relation 1899522 --->
	  a role_name "systemId" public
	    comment " systemId 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899522 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1899650 // baseSystemId (<unidirectional association>)
	relation 1899650 --->
	  a role_name "baseSystemId" public
	    comment " baseSystemId 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899650 // baseSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1899778 // notation (<unidirectional association>)
	relation 1899778 --->
	  a role_name "notation" public
	    comment " notation 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899778 // notation (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 960258 "isPE"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " isPE 
"
      end

      attribute 960386 "inExternal"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " inExternal 
 <strong>Note:</strong> flag of where the entity is defined, not whether it is a external entity 
"
      end

      classrelation 1899906 // value (<unidirectional association>)
	relation 1899906 --->
	  a role_name "value" public
	    comment " Value. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899906 // value (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4474242 "setValues"
	public explicit_return_type "void"
	nparams 7
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "notation" type class_ref 128130 // String
	  param inout name "isPE" explicit_type "boolean"
	  param inout name "inExternal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods


setValues

@param name
@param publicId
@param systemId
@param baseSystemId
@param notation
@param isPE
@param inExternal
"
      end

      operation 4474370 "setValues"
	public explicit_return_type "void"
	nparams 8
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "notation" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "isPE" explicit_type "boolean"
	  param inout name "inExternal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "setValues

@param name
@param publicId
@param systemId
@param baseSystemId
@param value
@param notation
@param isPE
@param inExternal
"
      end

      operation 4474498 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(String,String,String,String,String,boolean,boolean)

clear
"
      end
    end

    class 675714 "XMLSimpleType"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 960514 "TYPE_CDATA"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 TYPE_CDATA 
"
      end

      attribute 960642 "TYPE_ENTITY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_ENTITY 
"
      end

      attribute 960770 "TYPE_ENUMERATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_ENUMERATION 
"
      end

      attribute 960898 "TYPE_ID"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_ID 
"
      end

      attribute 961026 "TYPE_IDREF"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_IDREF 
"
      end

      attribute 961154 "TYPE_NMTOKEN"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_NMTOKEN 
"
      end

      attribute 961282 "TYPE_NOTATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_NOTATION 
"
      end

      attribute 961410 "TYPE_NAMED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_NAMED 
"
      end

      attribute 961538 "DEFAULT_TYPE_DEFAULT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DEFAULT_TYPE_DEFAULT 
"
      end

      attribute 961666 "DEFAULT_TYPE_FIXED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DEFAULT_TYPE_FIXED 
"
      end

      attribute 961794 "DEFAULT_TYPE_IMPLIED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DEFAULT_TYPE_IMPLIED 
"
      end

      attribute 961922 "DEFAULT_TYPE_REQUIRED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DEFAULT_TYPE_REQUIRED 
"
      end

      attribute 962050 "type"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 type 
"
      end

      classrelation 1900802 // name (<unidirectional association>)
	relation 1900802 --->
	  a role_name "name" public
	    comment " name 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900802 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1900930 // enumeration (<unidirectional association>)
	relation 1900930 --->
	  a role_name "enumeration" multiplicity "[]" public
	    comment " enumeration 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1900930 // enumeration (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 962178 "list"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " list 
"
      end

      attribute 962306 "defaultType"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " defaultType 
"
      end

      classrelation 1901058 // defaultValue (<unidirectional association>)
	relation 1901058 --->
	  a role_name "defaultValue" public
	    comment " defaultValue 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901058 // defaultValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1901186 // nonNormalizedDefaultValue (<unidirectional association>)
	relation 1901186 --->
	  a role_name "nonNormalizedDefaultValue" public
	    comment " non-normalized defaultValue 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901186 // nonNormalizedDefaultValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1901314 // datatypeValidator (<unidirectional association>)
	relation 1901314 --->
	  a role_name "datatypeValidator" public
	    comment " datatypeValidator 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901314 // datatypeValidator (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4475138 "setValues"
	public explicit_return_type "void"
	nparams 8
	  param in name "type" explicit_type "short"
	  param inout name "name" type class_ref 128130 // String
	  param inout name "enumeration" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "list" explicit_type "boolean"
	  param in name "defaultType" explicit_type "short"
	  param inout name "defaultValue" type class_ref 128130 // String
	  param inout name "nonNormalizedDefaultValue" type class_ref 128130 // String
	  param inout name "datatypeValidator" type class_ref 675202 // DatatypeValidator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods


setValues

@param type
@param name
@param enumeration
@param list
@param defaultType
@param defaultValue
@param nonNormalizedDefaultValue
@param datatypeValidator
"
      end

      operation 4475266 "setValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "simpleType" type class_ref 675714 // XMLSimpleType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(short,String,String[],boolean,short,String,String,DatatypeValidator)
 Set values. "
      end

      operation 4475394 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues(XMLSimpleType)

clear
"
      end
    end

    class 675842 "XMLContentSpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ContentSpec really exists to aid the parser classes in implementing
access to the grammar.
<p>
This class is used by the DTD scanner and the validator classes,
allowing them to be used separately or together.  This \"struct\"
class is used to build content models for validation, where it
is more efficient to fetch all of the information for each of
these content model \"fragments\" than to fetch each field one at
a time.  Since configurations are allowed to have validators
without a DTD scanner (i.e. a schema validator) and a DTD scanner
without a validator (non-validating processor), this class can be
used by each without requiring the presence of the other.
<p>
When processing element declarations, the DTD scanner will build
up a representation of the content model using the node types that
are defined here.  Since a non-validating processor only needs to
remember the type of content model declared (i.e. ANY, EMPTY, MIXED,
or CHILDREN), it is free to discard the specific details of the
MIXED and CHILDREN content models described using this class.
<p>
In the typical case of a validating processor reading the grammar
of the document from a DTD, the information about the content model
declared will be preserved and later \"compiled\" into an efficient
form for use during element validation.  Each content spec node
that is saved is assigned a unique index that is used as a handle
for the \"value\" or \"otherValue\" fields of other content spec nodes.
A leaf node has a \"value\" that is either an index in the string
pool of the element type of that leaf, or a value of -1 to indicate
the special \"#PCDATA\" leaf type used in a mixed content model.
<p>
For a mixed content model, the content spec will be made up of
leaf and choice content spec nodes, with an optional \"zero or more\"
node.  For example, the mixed content declaration \"(#PCDATA)\" would
contain a single leaf node with a node value of -1.  A mixed content
declaration of \"(#PCDATA|foo)*\" would have a content spec consisting
of two leaf nodes, for the \"#PCDATA\" and \"foo\" choices, a choice node
with the \"value\" set to the index of the \"#PCDATA\" leaf node and the
\"otherValue\" set to the index of the \"foo\" leaf node, and a \"zero or
more\" node with the \"value\" set to the index of the choice node.  If
the content model has more choices, for example \"(#PCDATA|a|b)*\", then
there will be more corresponding choice and leaf nodes, the choice
nodes will be chained together through the \"value\" field with each
leaf node referenced by the \"otherValue\" field.
<p>
For element content models, there are sequence nodes and also \"zero or
one\" and \"one or more\" nodes.  The leaf nodes would always have a valid
string pool index, as the \"#PCDATA\" leaf is not used in the declarations
for element content models.

@xerces.internal

"
      attribute 957314 "CONTENTSPECNODE_LEAF"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants


Name or #PCDATA. Leaf nodes that represent parsed character
data (#PCDATA) have values of -1.

"
      end

      attribute 957442 "CONTENTSPECNODE_ZERO_OR_ONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents a zero or one occurence count, '?'. 
"
      end

      attribute 957570 "CONTENTSPECNODE_ZERO_OR_MORE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents a zero or more occurence count, '*'. 
"
      end

      attribute 957698 "CONTENTSPECNODE_ONE_OR_MORE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents a one or more occurence count, '+'. 
"
      end

      attribute 957826 "CONTENTSPECNODE_CHOICE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents choice, '|'. 
"
      end

      attribute 957954 "CONTENTSPECNODE_SEQ"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents sequence, ','. 
"
      end

      attribute 958082 "CONTENTSPECNODE_ANY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents any namespace specified namespace. When the element
found in the document must belong to a specific namespace,
<code>otherValue</code> will contain the name of the namespace.
If <code>otherValue</code> is <code>-1</code> then the element
can be from any namespace.
<p>
Lists of valid namespaces are created from choice content spec
nodes that have any content spec nodes as children.

"
      end

      attribute 958210 "CONTENTSPECNODE_ANY_OTHER"
	class_attribute const_attribute public explicit_type "short"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents any other namespace (XML Schema: ##other).
<p>
When the content spec node type is set to CONTENTSPECNODE_ANY_OTHER,
<code>value</code> will contain the namespace that <em>cannot</em>
occur.

"
      end

      attribute 958338 "CONTENTSPECNODE_ANY_LOCAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents any local element (XML Schema: ##local). 
"
      end

      attribute 958466 "CONTENTSPECNODE_ANY_LAX"
	class_attribute const_attribute public explicit_type "short"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " prcessContent is 'lax' *
"
      end

      attribute 958594 "CONTENTSPECNODE_ANY_OTHER_LAX"
	class_attribute const_attribute public explicit_type "short"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 958722 "CONTENTSPECNODE_ANY_LOCAL_LAX"
	class_attribute const_attribute public explicit_type "short"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 958850 "CONTENTSPECNODE_ANY_SKIP"
	class_attribute const_attribute public explicit_type "short"
	init_value " 38"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " processContent is 'skip' *
"
      end

      attribute 958978 "CONTENTSPECNODE_ANY_OTHER_SKIP"
	class_attribute const_attribute public explicit_type "short"
	init_value " 39"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 959106 "CONTENTSPECNODE_ANY_LOCAL_SKIP"
	class_attribute const_attribute public explicit_type "short"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 959234 "type"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data


The content spec node type.

@see #CONTENTSPECNODE_LEAF
@see #CONTENTSPECNODE_ZERO_OR_ONE
@see #CONTENTSPECNODE_ZERO_OR_MORE
@see #CONTENTSPECNODE_ONE_OR_MORE
@see #CONTENTSPECNODE_CHOICE
@see #CONTENTSPECNODE_SEQ

"
      end

      classrelation 1896834 // value (<unidirectional association>)
	relation 1896834 --->
	  a role_name "value" public
	    comment "
The \"left hand\" value object of the content spec node.
leaf name.localpart, single child for unary ops, left child for binary ops.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1896834 // value (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1896962 // otherValue (<unidirectional association>)
	relation 1896962 --->
	  a role_name "otherValue" public
	    comment "
The \"right hand\" value of the content spec node.
 leaf name.uri, right child for binary ops

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1896962 // otherValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 4468738 "XMLContentSpec"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4468866 "XMLContentSpec"
	public explicit_return_type ""
	nparams 3
	  param in name "type" explicit_type "short"
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "otherValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a content spec with the specified values. "
      end

      operation 4468994 "XMLContentSpec"
	public explicit_return_type ""
	nparams 1
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a content spec from the values in the specified content spec.
"
      end

      operation 4469122 "XMLContentSpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "provider" type class_ref 677762 // Provider
	  param in name "contentSpecIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a content spec from the values specified by the given
content spec provider and identifier.
"
      end

      class 677762 "Provider"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 4470018 "getContentSpec"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "contentSpecIndex" explicit_type "int"
	    param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " XMLContentSpec.Provider methods


Fills in the provided content spec structure with content spec
information for a unique identifier.

@param contentSpecIndex The content spec identifier. All content
                        spec \"nodes\" have a unique identifier.
@param contentSpec      The content spec struct to fill in with
                        the information.

@return Returns true if the contentSpecIndex was found.
"
	end
      end

      operation 4469250 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 Clears the values. "
      end

      operation 4469378 "setValues"
	public explicit_return_type "void"
	nparams 3
	  param in name "type" explicit_type "short"
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "otherValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the values. "
      end

      operation 4469506 "setValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the values of the specified content spec. "
      end

      operation 4469634 "setValues"
	public explicit_return_type "void"
	nparams 2
	  param inout name "provider" type class_ref 677762 // Provider
	  param in name "contentSpecIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values from the values specified by the given content spec
provider and identifier. If the specified content spec cannot be
provided, the values of this content spec are cleared.
"
      end

      operation 4469762 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Object methods

 Returns a hash code for this node. "
      end

      operation 4469890 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the two objects are equal. "
      end
    end

    class 675970 "XMLNotationDecl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 1900034 // name (<unidirectional association>)
	relation 1900034 --->
	  a role_name "name" public
	    comment " Data

 name 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900034 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1900162 // publicId (<unidirectional association>)
	relation 1900162 --->
	  a role_name "publicId" public
	    comment " publicId 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900162 // publicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1900290 // systemId (<unidirectional association>)
	relation 1900290 --->
	  a role_name "systemId" public
	    comment " systemId 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900290 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1900418 // baseSystemId (<unidirectional association>)
	relation 1900418 --->
	  a role_name "baseSystemId" public
	    comment " base systemId 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900418 // baseSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4474626 "setValues"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods


setValues

@param name
@param publicId
@param systemId
"
      end

      operation 4474754 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValues

clear
"
      end
    end

    class 676354 "DTDGrammarBucket"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This very simple class is the skeleton of what the DTDValidator could use
to store various grammars that it gets from the GrammarPool.  As in the
case of XSGrammarBucket, one thinks of this object as being closely
associated with its validator; when fully mature, this class will be
filled from the GrammarPool when the DTDValidator is invoked on a
document, and, if a new DTD grammar is parsed, the new set will be
offered back to the GrammarPool for possible inclusion.

@xerces.internal

@author Neil Graham, IBM

"
      classrelation 1882626 // fGrammars (<unidirectional association>)
	relation 1882626 --->
	  a role_name "fGrammars" protected
	    comment " REVISIT:  make this class smarter and *way* more complete!

 Data

 Grammars associated with element root name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<XMLDTDDescription, DTDGrammar> ${name}${value};
"
	    classrelation_ref 1882626 // fGrammars (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1882754 // fActiveGrammar (<unidirectional association>)
	relation 1882754 --->
	  a role_name "fActiveGrammar" protected
	    comment " the unique grammar from fGrammars (or that we're
 building) that is used in validation.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1882754 // fActiveGrammar (<unidirectional association>)
	  b parent class_ref 674562 // DTDGrammar
      end

      attribute 953090 "fIsStandalone"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " is the \"active\" grammar standalone?
"
      end

      operation 4448130 "DTDGrammarBucket"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4448258 "putGrammar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "grammar" type class_ref 674562 // DTDGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

 Public methods


Puts the specified grammar into the grammar pool and associate it to
a root element name (this being internal, the lack of generality is irrelevant).

@param grammar     The grammar.
"
      end

      operation 4448386 "getGrammar"
	public return_type class_ref 674562 // DTDGrammar
	nparams 1
	  param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " putGrammar(DTDGrammar)
 retrieve a DTDGrammar given an XMLDTDDescription"
      end

      operation 4448514 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " putGrammar(DTDGrammar)"
      end

      operation 4448642 "setStandalone"
	package explicit_return_type "void"
	nparams 1
	  param inout name "standalone" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " clear()
 is the active grammar standalone?  This must live here because
 at the time the validator discovers this we don't yet know
 what the active grammar should be (no info about root)"
      end

      operation 4448770 "getStandalone"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4448898 "setActiveGrammar"
	package explicit_return_type "void"
	nparams 1
	  param inout name "grammar" type class_ref 674562 // DTDGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " set the \"active\" grammar:"
      end

      operation 4449026 "getActiveGrammar"
	package return_type class_ref 674562 // DTDGrammar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 676482 "XML11DTDProcessor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class extends XMLDTDProcessor by giving it
the ability to parse XML 1.1 documents correctly.  It can also be used
as a DTD loader, so that XML 1.1 external subsets can
be processed correctly (hence it's rather anomalous-appearing
derivation from XMLDTDLoader).

@xerces.internal

@author Neil Graham, IBM

"
      classrelation 1889538 // <generalisation>
	relation 1889538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1889538 // <generalisation>
	  b parent class_ref 676610 // XMLDTDLoader
      end

      operation 4460290 "XML11DTDProcessor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " constructors"
      end

      operation 4460418 "XML11DTDProcessor"
	public explicit_return_type ""
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()"
      end

      operation 4460546 "XML11DTDProcessor"
	public explicit_return_type ""
	nparams 2
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "grammarPool" type class_ref 662274 // XMLGrammarPool
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(SymbolTable)"
      end

      operation 4460674 "XML11DTDProcessor"
	package explicit_return_type ""
	nparams 4
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "grammarPool" type class_ref 662274 // XMLGrammarPool
	  param inout name "errorReporter" type class_ref 658946 // XMLErrorReporter
	  param inout name "entityResolver" type class_ref 658434 // XMLEntityResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(SymbolTable, XMLGrammarPool)"
      end

      operation 4460802 "isValidNmtoken"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "nmtoken" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(SymbolTable, XMLGrammarPool, XMLErrorReporter, XMLEntityResolver)
 overridden methods"
      end

      operation 4460930 "isValidName"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidNmtoken(String):  boolean"
      end

      operation 4461058 "createDTDScanner"
	protected return_type class_ref 670594 // XMLDTDScannerImpl
	nparams 3
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "errorReporter" type class_ref 658946 // XMLErrorReporter
	  param inout name "entityManager" type class_ref 667778 // XMLEntityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidNmtoken(String):  boolean"
      end

      operation 4461186 "getScannerVersion"
	protected explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDTDScanner(SymbolTable, XMLErrorReporter, XMLEntityManager) : XMLDTDScannerImpl"
      end
    end

    class 676610 "XMLDTDLoader"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DTD loader. The loader knows how to build grammars from XMLInputSources.
It extends the DTD processor in order to do this; it's
a separate class because DTD processors don't need to know how
to talk to the outside world in their role as instance-document
helpers.
<p>
This component requires the following features and properties.  It
know ho to set them if no one else does:from the
<ul>
 <li>http://xml.org/sax/features/namespaces</li>
 <li>http://apache.org/xml/properties/internal/symbol-table</li>
 <li>http://apache.org/xml/properties/internal/error-reporter</li>
 <li>http://apache.org/xml/properties/internal/grammar-pool</li>
 <li>http://apache.org/xml/properties/internal/datatype-validator-factory</li>
</ul>

@xerces.internal

@author Neil Graham, IBM
@author Michael Glavassevich, IBM

@version $Id: XMLDTDLoader.java,v 1.6 2010-11-01 04:39:42 joehw Exp $
"
      classrelation 1887874 // <generalisation>
	relation 1887874 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1887874 // <generalisation>
	  b parent class_ref 676738 // XMLDTDProcessor
      end

      classrelation 1888002 // <realization>
	relation 1888002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1888002 // <realization>
	  b parent class_ref 677122 // XMLGrammarLoader
      end

      classrelation 1888130 // STANDARD_URI_CONFORMANT_FEATURE (<unidirectional association>)
	relation 1888130 --->
	  a role_name "STANDARD_URI_CONFORMANT_FEATURE" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.STANDARD_URI_CONFORMANT_FEATURE" class_relation const_relation protected
	    comment " Constants

 feature identifiers
 Feature identifier: standard uri conformant feature. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1888130 // STANDARD_URI_CONFORMANT_FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1888258 // BALANCE_SYNTAX_TREES (<unidirectional association>)
	relation 1888258 --->
	  a role_name "BALANCE_SYNTAX_TREES" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.BALANCE_SYNTAX_TREES" class_relation const_relation protected
	    comment " Feature identifier: balance syntax trees. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1888258 // BALANCE_SYNTAX_TREES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1888386 // LOADER_RECOGNIZED_FEATURES (<unidirectional association>)
	relation 1888386 --->
	  a role_name "LOADER_RECOGNIZED_FEATURES" multiplicity "[]" init_value " {
        VALIDATION,
        WARN_ON_DUPLICATE_ATTDEF,
        WARN_ON_UNDECLARED_ELEMDEF,
        NOTIFY_CHAR_REFS,
        STANDARD_URI_CONFORMANT_FEATURE,
        BALANCE_SYNTAX_TREES
    }" class_relation const_relation private
	    comment " recognized features:
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1888386 // LOADER_RECOGNIZED_FEATURES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1888514 // ERROR_HANDLER (<unidirectional association>)
	relation 1888514 --->
	  a role_name "ERROR_HANDLER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_HANDLER_PROPERTY" class_relation const_relation protected
	    comment " property identifiers
 Property identifier: error handler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1888514 // ERROR_HANDLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1888642 // ENTITY_RESOLVER (<unidirectional association>)
	relation 1888642 --->
	  a role_name "ENTITY_RESOLVER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_RESOLVER_PROPERTY" class_relation const_relation public
	    comment " Property identifier: entity resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1888642 // ENTITY_RESOLVER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1888770 // LOCALE (<unidirectional association>)
	relation 1888770 --->
	  a role_name "LOCALE" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.LOCALE_PROPERTY" class_relation const_relation public
	    comment " Property identifier: locale. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1888770 // LOCALE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1888898 // LOADER_RECOGNIZED_PROPERTIES (<unidirectional association>)
	relation 1888898 --->
	  a role_name "LOADER_RECOGNIZED_PROPERTIES" multiplicity "[]" init_value " {
        SYMBOL_TABLE,
        ERROR_REPORTER,
        ERROR_HANDLER,
        ENTITY_RESOLVER,
        GRAMMAR_POOL,
        DTD_VALIDATOR,
        LOCALE
    }" class_relation const_relation private
	    comment " Recognized properties. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1888898 // LOADER_RECOGNIZED_PROPERTIES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 954242 "fStrictURI"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " enforcing strict uri?
"
      end

      attribute 954370 "fBalanceSyntaxTrees"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Controls whether the DTD grammar produces balanced syntax trees. 
"
      end

      classrelation 1889026 // fEntityResolver (<unidirectional association>)
	relation 1889026 --->
	  a role_name "fEntityResolver" protected
	    comment " Entity resolver . 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1889026 // fEntityResolver (<unidirectional association>)
	  b parent class_ref 658434 // XMLEntityResolver
      end

      classrelation 1889154 // fDTDScanner (<unidirectional association>)
	relation 1889154 --->
	  a role_name "fDTDScanner" protected
	    comment " the scanner we use to actually read the DTD
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1889154 // fDTDScanner (<unidirectional association>)
	  b parent class_ref 670594 // XMLDTDScannerImpl
      end

      classrelation 1889282 // fEntityManager (<unidirectional association>)
	relation 1889282 --->
	  a role_name "fEntityManager" protected
	    comment " the entity manager the scanner needs.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1889282 // fEntityManager (<unidirectional association>)
	  b parent class_ref 667778 // XMLEntityManager
      end

      classrelation 1889410 // fLocale (<unidirectional association>)
	relation 1889410 --->
	  a role_name "fLocale" protected
	    comment " what's our Locale?
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1889410 // fLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      operation 4457602 "XMLDTDLoader"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Deny default construction; we need a SymtolTable! "
      end

      operation 4457730 "XMLDTDLoader"
	public explicit_return_type ""
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()"
      end

      operation 4457858 "XMLDTDLoader"
	public explicit_return_type ""
	nparams 2
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "grammarPool" type class_ref 662274 // XMLGrammarPool
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(SymbolTable)"
      end

      operation 4457986 "XMLDTDLoader"
	package explicit_return_type ""
	nparams 4
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "grammarPool" type class_ref 662274 // XMLGrammarPool
	  param inout name "errorReporter" type class_ref 658946 // XMLErrorReporter
	  param inout name "entityResolver" type class_ref 658434 // XMLEntityResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(SymbolTable, XMLGrammarPool)"
      end

      operation 4458114 "getRecognizedFeatures"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " init(SymbolTable, XMLGrammarPool, XMLErrorReporter, XMLEntityResolver)
 XMLGrammarLoader methods

Returns a list of feature identifiers that are recognized by
this component. This method may return null if no features
are recognized by this component.
"
      end

      operation 4458242 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "featureId" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRecognizedFeatures():String[]

Sets the state of a feature. This method is called by the component
manager any time after reset when a feature changes state.
<p>
<strong>Note:</strong> Components should silently ignore features
that do not affect the operation of the component.

@param featureId The feature identifier.
@param state     The state of the feature.

@throws SAXNotRecognizedException The component should not throw
                                  this exception.
@throws SAXNotSupportedException The component should not throw
                                 this exception.
"
      end

      operation 4458370 "getRecognizedProperties"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setFeature(String,boolean)

Returns a list of property identifiers that are recognized by
this component. This method may return null if no properties
are recognized by this component.
"
      end

      operation 4458498 "getProperty"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRecognizedProperties():String[]

Returns the state of a property.

@param propertyId The property identifier.

@throws XMLConfigurationException Thrown on configuration error.
"
      end

      operation 4458626 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyId" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getProperty(String):  Object

Sets the value of a property. This method is called by the component
manager any time after reset when a property changes value.
<p>
<strong>Note:</strong> Components should silently ignore properties
that do not affect the operation of the component.

@param propertyId The property identifier.
@param value      The value of the property.

@throws SAXNotRecognizedException The component should not throw
                                  this exception.
@throws SAXNotSupportedException The component should not throw
                                 this exception.
"
      end

      operation 4458754 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "featureId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setProperty(String,Object)

Returns the state of a feature.

@param featureId The feature identifier.

@throws XMLConfigurationException Thrown on configuration error.
"
      end

      operation 4458882 "setLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getFeature(String):  boolean

Set the locale to use for messages.

@param locale The locale object to use for localization of messages.

@exception XNIException Thrown if the parser does not support the
                        specified locale.
"
      end

      operation 4459010 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setLocale(Locale)
 Return the Locale the XMLGrammarLoader is using. "
      end

      operation 4459138 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 657922 // XMLErrorHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLocale():  Locale

Sets the error handler.

@param errorHandler The error handler.
"
      end

      operation 4459266 "getErrorHandler"
	public return_type class_ref 657922 // XMLErrorHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setErrorHandler(XMLErrorHandler)
 Returns the registered error handler.  "
      end

      operation 4459394 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityResolver" type class_ref 658434 // XMLEntityResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getErrorHandler():  XMLErrorHandler

Sets the entity resolver.

@param entityResolver The new entity resolver.
"
      end

      operation 4459522 "getEntityResolver"
	public return_type class_ref 658434 // XMLEntityResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setEntityResolver(XMLEntityResolver)
 Returns the registered entity resolver.  "
      end

      operation 4459650 "loadGrammar"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "source" type class_ref 657666 // XMLInputSource
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityResolver():  XMLEntityResolver

Returns a Grammar object by parsing the contents of the
entity pointed to by source.

@param source        the location of the entity which forms
                         the starting point of the grammar to be constructed.
@throws IOException      When a problem is encountered reading the entity
         XNIException    When a condition arises (such as a FatalError) that requires parsing
                             of the entity be terminated.
"
      end

      operation 4459778 "loadGrammarWithContext"
	public explicit_return_type "void"
	nparams 6
	  param inout name "validator" type class_ref 662146 // XMLDTDValidator
	  param inout name "rootName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "internalSubset" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " loadGrammar(XMLInputSource):  Grammar

Parse a DTD internal and/or external subset and insert the content
into the existing DTD grammar owned by the given DTDValidator.
"
      end

      operation 4459906 "reset"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " loadGrammarWithContext(XMLDTDValidator, String, String, String, String, String)
 reset all the components that we rely upon"
      end

      operation 4460034 "createDTDScanner"
	protected return_type class_ref 670594 // XMLDTDScannerImpl
	nparams 3
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "errorReporter" type class_ref 658946 // XMLErrorReporter
	  param inout name "entityManager" type class_ref 667778 // XMLEntityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4460162 "getScannerVersion"
	protected explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDTDScanner(SymbolTable, XMLErrorReporter, XMLEntityManager) : XMLDTDScannerImpl"
      end
    end

    class 676738 "XMLDTDProcessor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DTD processor. The processor implements a DTD
filter: receiving DTD events from the DTD scanner; validating
the content and structure; building a grammar, if applicable;
and notifying the DTDHandler of the information resulting from the
process.
<p>
This component requires the following features and properties from the
component manager that uses it:
<ul>
 <li>http://xml.org/sax/features/namespaces</li>
 <li>http://apache.org/xml/properties/internal/symbol-table</li>
 <li>http://apache.org/xml/properties/internal/error-reporter</li>
 <li>http://apache.org/xml/properties/internal/grammar-pool</li>
 <li>http://apache.org/xml/properties/internal/datatype-validator-factory</li>
</ul>

@xerces.internal

@author Neil Graham, IBM

@version $Id: XMLDTDProcessor.java,v 1.5 2010-11-01 04:39:42 joehw Exp $
"
      classrelation 1882882 // <realization>
	relation 1882882 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1882882 // <realization>
	  b parent class_ref 659202 // XMLComponent
      end

      classrelation 1883266 // <realization>
	relation 1883266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1883266 // <realization>
	  b parent class_ref 676866 // XMLDTDFilter
      end

      classrelation 1883650 // <realization>
	relation 1883650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1883650 // <realization>
	  b parent class_ref 676994 // XMLDTDContentModelFilter
      end

      attribute 953218 "TOP_LEVEL_SCOPE"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Top level scope (-1). 
"
      end

      classrelation 1883778 // VALIDATION (<unidirectional association>)
	relation 1883778 --->
	  a role_name "VALIDATION" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.VALIDATION_FEATURE" class_relation const_relation protected
	    comment " feature identifiers
 Feature identifier: validation. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1883778 // VALIDATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1883906 // NOTIFY_CHAR_REFS (<unidirectional association>)
	relation 1883906 --->
	  a role_name "NOTIFY_CHAR_REFS" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.NOTIFY_CHAR_REFS_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: notify character references. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1883906 // NOTIFY_CHAR_REFS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884034 // WARN_ON_DUPLICATE_ATTDEF (<unidirectional association>)
	relation 1884034 --->
	  a role_name "WARN_ON_DUPLICATE_ATTDEF" init_value "
        Constants.XERCES_FEATURE_PREFIX +Constants.WARN_ON_DUPLICATE_ATTDEF_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: warn on duplicate attdef 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884034 // WARN_ON_DUPLICATE_ATTDEF (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884162 // WARN_ON_UNDECLARED_ELEMDEF (<unidirectional association>)
	relation 1884162 --->
	  a role_name "WARN_ON_UNDECLARED_ELEMDEF" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.WARN_ON_UNDECLARED_ELEMDEF_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: warn on undeclared element referenced in content model. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884162 // WARN_ON_UNDECLARED_ELEMDEF (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884290 // PARSER_SETTINGS (<unidirectional association>)
	relation 1884290 --->
	  a role_name "PARSER_SETTINGS" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.PARSER_SETTINGS" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884290 // PARSER_SETTINGS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884418 // SYMBOL_TABLE (<unidirectional association>)
	relation 1884418 --->
	  a role_name "SYMBOL_TABLE" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.SYMBOL_TABLE_PROPERTY" class_relation const_relation protected
	    comment " property identifiers
 Property identifier: symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884418 // SYMBOL_TABLE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884546 // ERROR_REPORTER (<unidirectional association>)
	relation 1884546 --->
	  a role_name "ERROR_REPORTER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_REPORTER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: error reporter. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884546 // ERROR_REPORTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884674 // GRAMMAR_POOL (<unidirectional association>)
	relation 1884674 --->
	  a role_name "GRAMMAR_POOL" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.XMLGRAMMAR_POOL_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: grammar pool. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884674 // GRAMMAR_POOL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884802 // DTD_VALIDATOR (<unidirectional association>)
	relation 1884802 --->
	  a role_name "DTD_VALIDATOR" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.DTD_VALIDATOR_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: validator . 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884802 // DTD_VALIDATOR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1884930 // RECOGNIZED_FEATURES (<unidirectional association>)
	relation 1884930 --->
	  a role_name "RECOGNIZED_FEATURES" multiplicity "[]" init_value " {
        VALIDATION,
        WARN_ON_DUPLICATE_ATTDEF,
        WARN_ON_UNDECLARED_ELEMDEF,
        NOTIFY_CHAR_REFS,
    }" class_relation const_relation private
	    comment " recognized features and properties
 Recognized features. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1884930 // RECOGNIZED_FEATURES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1885058 // FEATURE_DEFAULTS (<unidirectional association>)
	relation 1885058 --->
	  a role_name "FEATURE_DEFAULTS" multiplicity "[]" init_value " {
        null,
        Boolean.FALSE,
        Boolean.FALSE,
        null,
    }" class_relation const_relation private
	    comment " Feature defaults. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1885058 // FEATURE_DEFAULTS (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 1885186 // RECOGNIZED_PROPERTIES (<unidirectional association>)
	relation 1885186 --->
	  a role_name "RECOGNIZED_PROPERTIES" multiplicity "[]" init_value " {
        SYMBOL_TABLE,
        ERROR_REPORTER,
        GRAMMAR_POOL,
        DTD_VALIDATOR,
    }" class_relation const_relation private
	    comment " Recognized properties. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1885186 // RECOGNIZED_PROPERTIES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1885314 // PROPERTY_DEFAULTS (<unidirectional association>)
	relation 1885314 --->
	  a role_name "PROPERTY_DEFAULTS" multiplicity "[]" init_value " {
        null,
        null,
        null,
        null,
    }" class_relation const_relation private
	    comment " Property defaults. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1885314 // PROPERTY_DEFAULTS (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 953346 "fValidation"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " debugging

 Data

 features
 Validation. 
"
      end

      attribute 953474 "fDTDValidation"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validation against only DTD 
"
      end

      attribute 953602 "fWarnDuplicateAttdef"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " warn on duplicate attribute definition, this feature works only when validation is true 
"
      end

      attribute 953730 "fWarnOnUndeclaredElemdef"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " warn on undeclared element referenced in content model, this feature only works when valiation is true 
"
      end

      classrelation 1885442 // fSymbolTable (<unidirectional association>)
	relation 1885442 --->
	  a role_name "fSymbolTable" protected
	    comment " properties
 Symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1885442 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 1885570 // fErrorReporter (<unidirectional association>)
	relation 1885570 --->
	  a role_name "fErrorReporter" protected
	    comment " Error reporter. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1885570 // fErrorReporter (<unidirectional association>)
	  b parent class_ref 658946 // XMLErrorReporter
      end

      classrelation 1885698 // fGrammarBucket (<unidirectional association>)
	relation 1885698 --->
	  a role_name "fGrammarBucket" protected
	    comment " Grammar bucket. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1885698 // fGrammarBucket (<unidirectional association>)
	  b parent class_ref 676354 // DTDGrammarBucket
      end

      classrelation 1885826 // fValidator (<unidirectional association>)
	relation 1885826 --->
	  a role_name "fValidator" protected
	    comment " the validator to which we look for our grammar bucket (the
 validator needs to hold the bucket so that it can initialize
 the grammar with details like whether it's for a standalone document...
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1885826 // fValidator (<unidirectional association>)
	  b parent class_ref 662146 // XMLDTDValidator
      end

      classrelation 1885954 // fGrammarPool (<unidirectional association>)
	relation 1885954 --->
	  a role_name "fGrammarPool" protected
	    comment " the grammar pool we'll try to add the grammar to:
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1885954 // fGrammarPool (<unidirectional association>)
	  b parent class_ref 662274 // XMLGrammarPool
      end

      classrelation 1886082 // fLocale (<unidirectional association>)
	relation 1886082 --->
	  a role_name "fLocale" protected
	    comment " what's our Locale?
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886082 // fLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 1886210 // fDTDHandler (<unidirectional association>)
	relation 1886210 --->
	  a role_name "fDTDHandler" protected
	    comment " handlers
 DTD handler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886210 // fDTDHandler (<unidirectional association>)
	  b parent class_ref 658178 // XMLDTDHandler
      end

      classrelation 1886338 // fDTDSource (<unidirectional association>)
	relation 1886338 --->
	  a role_name "fDTDSource" protected
	    comment " DTD source. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886338 // fDTDSource (<unidirectional association>)
	  b parent class_ref 670722 // XMLDTDSource
      end

      classrelation 1886466 // fDTDContentModelHandler (<unidirectional association>)
	relation 1886466 --->
	  a role_name "fDTDContentModelHandler" protected
	    comment " DTD content model handler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886466 // fDTDContentModelHandler (<unidirectional association>)
	  b parent class_ref 658306 // XMLDTDContentModelHandler
      end

      classrelation 1886594 // fDTDContentModelSource (<unidirectional association>)
	relation 1886594 --->
	  a role_name "fDTDContentModelSource" protected
	    comment " DTD content model source. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886594 // fDTDContentModelSource (<unidirectional association>)
	  b parent class_ref 670850 // XMLDTDContentModelSource
      end

      classrelation 1886722 // fDTDGrammar (<unidirectional association>)
	relation 1886722 --->
	  a role_name "fDTDGrammar" protected
	    comment " grammars
 DTD Grammar. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886722 // fDTDGrammar (<unidirectional association>)
	  b parent class_ref 674562 // DTDGrammar
      end

      attribute 953858 "fPerformValidation"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " state
 Perform validation. 
"
      end

      attribute 953986 "fInDTDIgnore"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if in an ignore conditional section of the DTD. 
"
      end

      attribute 954114 "fMixed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " information regarding the current element
 validation states
 Mixed. 
"
      end

      classrelation 1886850 // fEntityDecl (<unidirectional association>)
	relation 1886850 --->
	  a role_name "fEntityDecl" init_value " new XMLEntityDecl()" const_relation private
	    comment " temporary variables
 Temporary entity declaration. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886850 // fEntityDecl (<unidirectional association>)
	  b parent class_ref 675586 // XMLEntityDecl
      end

      classrelation 1886978 // fNDataDeclNotations (<unidirectional association>)
	relation 1886978 --->
	  a role_name "fNDataDeclNotations" init_value " new HashMap()" const_relation private
	    comment " Notation declaration hash. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1886978 // fNDataDeclNotations (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 1887106 // fDTDElementDeclName (<unidirectional association>)
	relation 1887106 --->
	  a role_name "fDTDElementDeclName" init_value " null" private
	    comment " DTD element declaration name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1887106 // fDTDElementDeclName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1887234 // fMixedElementTypes (<unidirectional association>)
	relation 1887234 --->
	  a role_name "fMixedElementTypes" init_value " new ArrayList()" const_relation private
	    comment " Mixed element type \"hash\". 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1887234 // fMixedElementTypes (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      classrelation 1887362 // fDTDElementDecls (<unidirectional association>)
	relation 1887362 --->
	  a role_name "fDTDElementDecls" init_value " new ArrayList()" const_relation private
	    comment " Element declarations in DTD. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1887362 // fDTDElementDecls (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      classrelation 1887490 // fTableOfIDAttributeNames (<unidirectional association>)
	relation 1887490 --->
	  a role_name "fTableOfIDAttributeNames" private
	    comment " to check for duplicate ID or ANNOTATION attribute declare in
 ATTLIST, and misc VCs
 ID attribute names. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1887490 // fTableOfIDAttributeNames (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 1887618 // fTableOfNOTATIONAttributeNames (<unidirectional association>)
	relation 1887618 --->
	  a role_name "fTableOfNOTATIONAttributeNames" private
	    comment " NOTATION attribute names. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1887618 // fTableOfNOTATIONAttributeNames (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 1887746 // fNotationEnumVals (<unidirectional association>)
	relation 1887746 --->
	  a role_name "fNotationEnumVals" private
	    comment " NOTATION enumeration values. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1887746 // fNotationEnumVals (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      operation 4449154 "XMLDTDProcessor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4449282 "reset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "componentManager" type class_ref 657026 // XMLComponentManager
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

 XMLComponent methods


Resets the component. The component can query the component manager
about any features and properties that affect the operation of the
component.

@param componentManager The component manager.

@throws SAXException Thrown by component on finitialization error.
                     For example, if a feature or property is
                     required for the operation of the component, the
                     component manager may throw a
                     SAXNotRecognizedException or a
                     SAXNotSupportedException.
"
      end

      operation 4449410 "reset"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " reset(XMLComponentManager)"
      end

      operation 4449538 "getRecognizedFeatures"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of feature identifiers that are recognized by
this component. This method may return null if no features
are recognized by this component.
"
      end

      operation 4449666 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "featureId" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRecognizedFeatures():String[]

Sets the state of a feature. This method is called by the component
manager any time after reset when a feature changes state.
<p>
<strong>Note:</strong> Components should silently ignore features
that do not affect the operation of the component.

@param featureId The feature identifier.
@param state     The state of the feature.

@throws SAXNotRecognizedException The component should not throw
                                  this exception.
@throws SAXNotSupportedException The component should not throw
                                 this exception.
"
      end

      operation 4449794 "getRecognizedProperties"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setFeature(String,boolean)

Returns a list of property identifiers that are recognized by
this component. This method may return null if no properties
are recognized by this component.
"
      end

      operation 4449922 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyId" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getRecognizedProperties():String[]

Sets the value of a property. This method is called by the component
manager any time after reset when a property changes value.
<p>
<strong>Note:</strong> Components should silently ignore properties
that do not affect the operation of the component.

@param propertyId The property identifier.
@param value      The value of the property.

@throws SAXNotRecognizedException The component should not throw
                                  this exception.
@throws SAXNotSupportedException The component should not throw
                                 this exception.
"
      end

      operation 4450050 "getFeatureDefault"
	public return_type class_ref 315010 // Boolean
	nparams 1
	  param inout name "featureId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setProperty(String,Object)

Returns the default state for a feature, or null if this
component does not want to report a default value for this
feature.

@param featureId The feature identifier.

@since Xerces 2.2.0
"
      end

      operation 4450178 "getPropertyDefault"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFeatureDefault(String):Boolean

Returns the default state for a property, or null if this
component does not want to report a default value for this
property.

@param propertyId The property identifier.

@since Xerces 2.2.0
"
      end

      operation 4450306 "setDTDHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtdHandler" type class_ref 658178 // XMLDTDHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPropertyDefault(String):Object

 XMLDTDSource methods


Sets the DTD handler.

@param dtdHandler The DTD handler.
"
      end

      operation 4450434 "getDTDHandler"
	public return_type class_ref 658178 // XMLDTDHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDTDHandler(XMLDTDHandler)

Returns the DTD handler.

@return The DTD handler.
"
      end

      operation 4450562 "setDTDContentModelHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtdContentModelHandler" type class_ref 658306 // XMLDTDContentModelHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDTDHandler():  XMLDTDHandler

 XMLDTDContentModelSource methods


Sets the DTD content model handler.

@param dtdContentModelHandler The DTD content model handler.
"
      end

      operation 4450690 "getDTDContentModelHandler"
	public return_type class_ref 658306 // XMLDTDContentModelHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDTDContentModelHandler(XMLDTDContentModelHandler)

Gets the DTD content model handler.

@return dtdContentModelHandler The DTD content model handler.
"
      end

      operation 4450818 "startExternalSubset"
	public explicit_return_type "void"
	nparams 2
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDTDContentModelHandler():  XMLDTDContentModelHandler

 XMLDTDContentModelHandler and XMLDTDHandler methods


The start of the DTD external subset.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4450946 "endExternalSubset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of the DTD external subset.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4451074 "checkStandaloneEntityRef"
	class_operation protected explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "grammar" type class_ref 674562 // DTDGrammar
	  param inout name "tempEntityDecl" type class_ref 675586 // XMLEntityDecl
	  param inout name "errorReporter" type class_ref 658946 // XMLErrorReporter
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check standalone entity reference.
Made static to make common between the validator and loader.

@param name
@param grammar    grammar to which entity belongs
@param tempEntityDecl    empty entity declaration to put results in
@param errorReporter     error reporter to send errors to

@throws XNIException Thrown by application to signal an error.
"
      end

      operation 4451202 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A comment.

@param text The text in the comment.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by application to signal an error.
"
      end

      operation 4451330 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " comment(XMLString)

A processing instruction. Processing instructions consist of a
target name and, optionally, text data. The data is only meaningful
to the application.
<p>
Typically, a processing instruction's data will contain a series
of pseudo-attributes. These pseudo-attributes follow the form of
element attributes but are <strong>not</strong> parsed or presented
to the application as anything other than text. The application is
responsible for parsing the data.

@param target The target.
@param data   The data or null if none specified.
@param augs   Additional information that may include infoset augmentations

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4451458 "startDTD"
	public explicit_return_type "void"
	nparams 2
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " processingInstruction(String,XMLString)

 XMLDTDHandler methods


The start of the DTD.

@param locator  The document locator, or null if the document
                location cannot be reported during the parsing of
                the document DTD. However, it is <em>strongly</em>
                recommended that a locator be supplied that can
                at least report the base system identifier of the
                DTD.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4451586 "ignoredCharacters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startDTD(XMLLocator)

Characters within an IGNORE conditional section.

@param text The ignored text.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4451714 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of a TextDecl line in an entity. If present,
this method will be called immediately following the startParameterEntity call.
<p>
<strong>Note:</strong> This method is only called for external
parameter entities referenced in the DTD.

@param version  The XML version, or null if not specified.
@param encoding The IANA encoding name of the entity.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4451842 "startParameterEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies of the start of a parameter entity. The parameter
entity name start with a '%' character.

@param name     The name of the parameter entity.
@param identifier The resource identifier.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal parameter entities).
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4451970 "endParameterEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the end of a parameter entity. Parameter entity
names begin with a '%' character.

@param name The name of the parameter entity.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452098 "elementDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "contentModel" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An element declaration.

@param name         The name of the element.
@param contentModel The element content model.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452226 "startAttlist"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " elementDecl(String,String)

The start of an attribute list.

@param elementName The name of the element that this attribute
                   list is associated with.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452354 "attributeDecl"
	public explicit_return_type "void"
	nparams 8
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attributeName" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "enumeration" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "defaultType" type class_ref 128130 // String
	  param inout name "defaultValue" type class_ref 661250 // XMLString
	  param inout name "nonNormalizedDefaultValue" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startAttlist(String)

An attribute declaration.

@param elementName   The name of the element that this attribute
                     is associated with.
@param attributeName The name of the attribute.
@param type          The attribute type. This value will be one of
                     the following: \"CDATA\", \"ENTITY\", \"ENTITIES\",
                     \"ENUMERATION\", \"ID\", \"IDREF\", \"IDREFS\",
                     \"NMTOKEN\", \"NMTOKENS\", or \"NOTATION\".
@param enumeration   If the type has the value \"ENUMERATION\" or
                     \"NOTATION\", this array holds the allowed attribute
                     values; otherwise, this array is null.
@param defaultType   The attribute default type. This value will be
                     one of the following: \"#FIXED\", \"#IMPLIED\",
                     \"#REQUIRED\", or null.
@param defaultValue  The attribute default value, or null if no
                     default value is specified.
@param nonNormalizedDefaultValue  The attribute default value with no normalization
                     performed, or null if no default value is specified.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452482 "endAttlist"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " attributeDecl(String,String,String,String[],String,XMLString, XMLString, Augmentations)

The end of an attribute list.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452610 "internalEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "nonNormalizedText" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endAttlist()

An internal entity declaration.

@param name The name of the entity. Parameter entity names start with
            '%', whereas the name of a general entity is just the
            entity name.
@param text The value of the entity.
@param nonNormalizedText The non-normalized value of the entity. This
            value contains the same sequence of characters that was in
            the internal entity declaration, without any entity
            references expanded.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452738 "externalEntityDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalEntityDecl(String,XMLString,XMLString)

An external entity declaration.

@param name     The name of the entity. Parameter entity names start
                with '%', whereas the name of a general entity is just
                the entity name.
@param identifier    An object containing all location information
                     pertinent to this external entity.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452866 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "notation" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " externalEntityDecl(String,XMLResourceIdentifier, Augmentations)

An unparsed entity declaration.

@param name     The name of the entity.
@param identifier    An object containing all location information
                     pertinent to this entity.
@param notation The name of the notation.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4452994 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " unparsedEntityDecl(String,XMLResourceIdentifier,String,Augmentations)

A notation declaration

@param name     The name of the notation.
@param identifier    An object containing all location information
                     pertinent to this notation.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4453122 "startConditional"
	public explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " notationDecl(String,XMLResourceIdentifier, Augmentations)

The start of a conditional section.

@param type The type of the conditional section. This value will
            either be CONDITIONAL_INCLUDE or CONDITIONAL_IGNORE.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #CONDITIONAL_INCLUDE
@see #CONDITIONAL_IGNORE
"
      end

      operation 4453250 "endConditional"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startConditional(short)

The end of a conditional section.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4453378 "endDTD"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endConditional()

The end of the DTD.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4453506 "setDTDSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 670722 // XMLDTDSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endDTD()
 sets the XMLDTDSource of this handler"
      end

      operation 4453634 "getDTDSource"
	public return_type class_ref 670722 // XMLDTDSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDTDSource(XMLDTDSource)
 returns the XMLDTDSource of this handler"
      end

      operation 4453762 "setDTDContentModelSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 670850 // XMLDTDContentModelSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDTDSource():  XMLDTDSource

 XMLDTDContentModelHandler methods

 sets the XMLContentModelDTDSource of this handler"
      end

      operation 4453890 "getDTDContentModelSource"
	public return_type class_ref 670850 // XMLDTDContentModelSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDTDContentModelSource(XMLDTDContentModelSource)
 returns the XMLDTDSource of this handler"
      end

      operation 4454018 "startContentModel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDTDContentModelSource():  XMLDTDContentModelSource

The start of a content model. Depending on the type of the content
model, specific methods may be called between the call to the
startContentModel method and the call to the endContentModel method.

@param elementName The name of the element.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4454146 "any"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startContentModel(String)

A content model of ANY.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #empty
@see #startGroup
"
      end

      operation 4454274 "empty"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " any()

A content model of EMPTY.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #any
@see #startGroup
"
      end

      operation 4454402 "startGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " empty()

A start of either a mixed or children content model. A mixed
content model will immediately be followed by a call to the
<code>pcdata()</code> method. A children content model will
contain additional groups and/or elements.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #any
@see #empty
"
      end

      operation 4454530 "pcdata"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startGroup()

The appearance of \"#PCDATA\" within a group signifying a
mixed content model. This method will be the first called
following the content model's <code>startGroup()</code>.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #startGroup
"
      end

      operation 4454658 "element"
	public explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " pcdata()

A referenced element in a mixed or children content model.

@param elementName The name of the referenced element.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4454786 "separator"
	public explicit_return_type "void"
	nparams 2
	  param in name "separator" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " childrenElement(String)

The separator between choices or sequences of a mixed or children
content model.

@param separator The type of children separator.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #SEPARATOR_CHOICE
@see #SEPARATOR_SEQUENCE
"
      end

      operation 4454914 "occurrence"
	public explicit_return_type "void"
	nparams 2
	  param in name "occurrence" explicit_type "short"
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " separator(short)

The occurrence count for a child in a children content model or
for the mixed content model group.

@param occurrence The occurrence count for the last element
                  or group.
@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.

@see #OCCURS_ZERO_OR_ONE
@see #OCCURS_ZERO_OR_MORE
@see #OCCURS_ONE_OR_MORE
"
      end

      operation 4455042 "endGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " occurrence(short)

The end of a group for mixed or children content models.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4455170 "endContentModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endGroup()

The end of a content model.

@param augs Additional information that may include infoset
                     augmentations.

@throws XNIException Thrown by handler to signal an error.
"
      end

      operation 4455298 "normalizeDefaultAttrValue"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 661250 // XMLString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " endContentModel()

 Private methods


Normalize the attribute value of a non CDATA default attribute
collapsing sequences of space characters (x20)

@param value The value to normalize
@return Whether the value was changed or not.
"
      end

      operation 4455426 "isValidNmtoken"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "nmtoken" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4455554 "isValidName"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidNmtoken(String):  boolean"
      end

      operation 4455682 "checkDeclaredElements"
	private explicit_return_type "void"
	nparams 1
	  param inout name "grammar" type class_ref 674562 // DTDGrammar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isValidName(String):  boolean

Checks that all elements referenced in content models have
been declared. This method calls out to the error handler
to indicate warnings.
"
      end

      operation 4455810 "checkDeclaredElements"
	private explicit_return_type "void"
	nparams 4
	  param inout name "grammar" type class_ref 674562 // DTDGrammar
	  param in name "elementIndex" explicit_type "int"
	  param in name "contentSpecIndex" explicit_type "int"
	  param inout name "contentSpec" type class_ref 675842 // XMLContentSpec
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does a recursive (if necessary) check on the specified element's
content spec to make sure that all children refer to declared
elements.
"
      end
    end

    class 677250 "XML11DTDValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This allows the validator to correctlyhandle XML 1.1
documents.

@xerces.internal

@author Neil Graham
"
      classrelation 1896066 // <generalisation>
	relation 1896066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896066 // <generalisation>
	  b parent class_ref 662146 // XMLDTDValidator
      end

      classrelation 1896194 // DTD_VALIDATOR_PROPERTY (<unidirectional association>)
	relation 1896194 --->
	  a role_name "DTD_VALIDATOR_PROPERTY" init_value "
        Constants.XERCES_PROPERTY_PREFIX+Constants.DTD_VALIDATOR_PROPERTY" class_relation const_relation protected
	    comment " Constants

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1896194 // DTD_VALIDATOR_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4467842 "XML11DTDValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4467970 "reset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "manager" type class_ref 657026 // XMLComponentManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()
 overridden so that this class has access to the same
 grammarBucket as the corresponding DTDProcessor
 will try and use..."
      end

      operation 4468098 "init"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "reset(XMLComponentManager)"
      end
    end

    class 677634 "XML11NSDTDValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DTD validator. The validator implements a document
filter: receiving document events from the scanner; validating
the content and structure; augmenting the InfoSet, if applicable;
and notifying the parser of the information resulting from the
validation process.
<p> Formerly, this component also handled DTD events and grammar construction.
To facilitate the development of a meaningful DTD grammar caching/preparsing
framework, this functionality has been moved into the XMLDTDLoader
class.  Therefore, this class no longer implements the DTDFilter
or DTDContentModelFilter interfaces.
<p>
This component requires the following features and properties from the
component manager that uses it:
<ul>
 <li>http://xml.org/sax/features/namespaces</li>
 <li>http://xml.org/sax/features/validation</li>
 <li>http://apache.org/xml/features/validation/dynamic</li>
 <li>http://apache.org/xml/properties/internal/symbol-table</li>
 <li>http://apache.org/xml/properties/internal/error-reporter</li>
 <li>http://apache.org/xml/properties/internal/grammar-pool</li>
 <li>http://apache.org/xml/properties/internal/datatype-validator-factory</li>
</ul>

@xerces.internal

@author Elena Litani, IBM
@author Michael Glavassevich, IBM


"
      classrelation 1896322 // <generalisation>
	relation 1896322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896322 // <generalisation>
	  b parent class_ref 677250 // XML11DTDValidator
      end

      classrelation 1896450 // fAttributeQName (<unidirectional association>)
	relation 1896450 --->
	  a role_name "fAttributeQName" init_value " new QName()" private
	    comment " Attribute QName. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1896450 // fAttributeQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      operation 4468226 "startNamespaceScope"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bind namespaces "
      end

      operation 4468354 "endNamespaceScope"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	  param inout name "isEmpty" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startNamespaceScope(QName,XMLAttributes)
 Handles end element. "
      end
    end

    class 677890 "XMLNSDTDValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DTD validator. The validator implements a document
filter: receiving document events from the scanner; validating
the content and structure; augmenting the InfoSet, if applicable;
and notifying the parser of the information resulting from the
validation process.
<p> Formerly, this component also handled DTD events and grammar construction.
To facilitate the development of a meaningful DTD grammar caching/preparsing
framework, this functionality has been moved into the XMLDTDLoader
class.  Therefore, this class no longer implements the DTDFilter
or DTDContentModelFilter interfaces.
<p>
This component requires the following features and properties from the
component manager that uses it:
<ul>
 <li>http://xml.org/sax/features/namespaces</li>
 <li>http://xml.org/sax/features/validation</li>
 <li>http://apache.org/xml/features/validation/dynamic</li>
 <li>http://apache.org/xml/properties/internal/symbol-table</li>
 <li>http://apache.org/xml/properties/internal/error-reporter</li>
 <li>http://apache.org/xml/properties/internal/grammar-pool</li>
 <li>http://apache.org/xml/properties/internal/datatype-validator-factory</li>
</ul>

@xerces.internal

@author Elena Litani, IBM


"
      classrelation 1900546 // <generalisation>
	relation 1900546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1900546 // <generalisation>
	  b parent class_ref 662146 // XMLDTDValidator
      end

      classrelation 1900674 // fAttributeQName (<unidirectional association>)
	relation 1900674 --->
	  a role_name "fAttributeQName" init_value " new QName()" private
	    comment " Attribute QName. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900674 // fAttributeQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      operation 4474882 "startNamespaceScope"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Bind namespaces "
      end

      operation 4475010 "endNamespaceScope"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	  param inout name "isEmpty" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " startNamespaceScope(QName,XMLAttributes)
 Handles end element. "
      end
    end
  end

  package_ref 168706 // models

  deploymentview 155394 "dtd"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 465026 "DTDGrammar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dtd.models.CMAny;
import com.sun.org.apache.xerces.internal.impl.dtd.models.CMBinOp;
import com.sun.org.apache.xerces.internal.impl.dtd.models.CMLeaf;
import com.sun.org.apache.xerces.internal.impl.dtd.models.CMNode;
import com.sun.org.apache.xerces.internal.impl.dtd.models.CMUniOp;
import com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator;
import com.sun.org.apache.xerces.internal.impl.dtd.models.DFAContentModel;
import com.sun.org.apache.xerces.internal.impl.dtd.models.MixedContentModel;
import com.sun.org.apache.xerces.internal.impl.dtd.models.SimpleContentModel;
import com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator;
import com.sun.org.apache.xerces.internal.impl.validation.EntityState;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler;
import com.sun.org.apache.xerces.internal.xni.XMLDTDHandler;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.Grammar;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 674562 // DTDGrammar
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 465154 "BalancedDTDGrammar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler;
import com.sun.org.apache.xerces.internal.xni.XNIException;
${definition}"
      associated_elems
	class_ref 674434 // BalancedDTDGrammar
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 465282 "DTDGrammarBucket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 676354 // DTDGrammarBucket
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 465666 "XMLDTDProcessor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Locale;
import java.util.Map;
import java.util.StringTokenizer;
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler;
import com.sun.org.apache.xerces.internal.xni.XMLDTDHandler;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.Grammar;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponent;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager;
import com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelFilter;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDContentModelSource;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDFilter;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDTDSource;
${definition}"
      associated_elems
	class_ref 676738 // XMLDTDProcessor
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 465922 "XMLDTDLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.EOFException;
import java.io.IOException;
import java.io.StringReader;
import java.util.Locale;
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl;
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.impl.XMLEntityManager;
import com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter;
import com.sun.org.apache.xerces.internal.util.Status;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.DefaultErrorHandler;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarLoader;
import com.sun.org.apache.xerces.internal.xni.grammars.Grammar;
import com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
${definition}"
      associated_elems
	class_ref 676610 // XMLDTDLoader
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2003 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 466050 "XML11DTDProcessor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.XML11DTDScannerImpl;
import com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl;
import com.sun.org.apache.xerces.internal.impl.XMLEntityManager;
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XML11Char;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
${definition}"
      associated_elems
	class_ref 676482 // XML11DTDProcessor
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 466178 "XMLDTDValidatorFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter;
${definition}"
      associated_elems
	class_ref 671746 // XMLDTDValidatorFilter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2001, 2002 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 2002, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 466306 "XMLDTDValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.RevalidationHandler;
import com.sun.org.apache.xerces.internal.impl.XMLEntityManager;
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator;
import com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory;
import com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator;
import com.sun.org.apache.xerces.internal.impl.dv.InvalidDatatypeValueException;
import com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter;
import com.sun.org.apache.xerces.internal.impl.validation.ValidationManager;
import com.sun.org.apache.xerces.internal.impl.validation.ValidationState;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.Grammar;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponent;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager;
import com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentFilter;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource;
${definition}"
      associated_elems
	class_ref 662146 // XMLDTDValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 466434 "XML11DTDValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager;
${definition}"
      associated_elems
	class_ref 677250 // XML11DTDValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2003 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 466562 "XML11NSDTDValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XNIException;
${definition}"
      associated_elems
	class_ref 677634 // XML11NSDTDValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2003 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 2002, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 466690 "XMLAttributeDecl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.QName;
${definition}"
      associated_elems
	class_ref 675330 // XMLAttributeDecl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 466818 "XMLContentSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 675842 // XMLContentSpec
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 467330 "XMLDTDDescription"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Vector;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import com.sun.org.apache.xerces.internal.util.XMLResourceIdentifierImpl;
${definition}"
      associated_elems
	class_ref 669698 // XMLDTDDescription
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 467458 "XMLElementDecl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.impl.dtd.models.ContentModelValidator;
${definition}"
      associated_elems
	class_ref 675458 // XMLElementDecl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 467586 "XMLEntityDecl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 675586 // XMLEntityDecl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 467714 "XMLNotationDecl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 675970 // XMLNotationDecl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 467842 "XMLNSDTDValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XNIException;
${definition}"
      associated_elems
	class_ref 677890 // XMLNSDTDValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 467970 "XMLSimpleType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator;
${definition}"
      associated_elems
	class_ref 675714 // XMLSimpleType
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end
  end
end
