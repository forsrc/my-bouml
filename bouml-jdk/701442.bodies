class IdentityConstraint
!!!4739970.java!!!	IdentityConstraint(inout namespace : String, inout identityConstraintName : String, inout elemName : String)
        fNamespace = namespace;
        fIdentityConstraintName = identityConstraintName;
        fElementName = elemName;
!!!4740098.java!!!	getIdentityConstraintName() : String
        return fIdentityConstraintName;
!!!4740226.java!!!	setSelector(inout selector : Selector) : void
        fSelector = selector;
!!!4740354.java!!!	getSelector() : Selector
        return fSelector;
!!!4740482.java!!!	addField(inout field : Field) : void
        if (fFields == null)
            fFields = new Field[4];
        else if (fFieldCount == fFields.length)
            fFields = resize(fFields, fFieldCount*2);
        fFields[fFieldCount++] = field;
!!!4740610.java!!!	getFieldCount() : int
        return fFieldCount;
!!!4740738.java!!!	getFieldAt(in index : int) : Field
        return fFields[index];
!!!4740866.java!!!	getElementName() : String
        return fElementName;
!!!4740994.java!!!	toString() : String
        String s = super.toString();
        int index1 = s.lastIndexOf('$');
        if (index1 != -1) {
            return s.substring(index1 + 1);
        }
        int index2 = s.lastIndexOf('.');
        if (index2 != -1) {
            return s.substring(index2 + 1);
        }
        return s;
!!!4741122.java!!!	equals(inout id : IdentityConstraint) : boolean
        boolean areEqual = fIdentityConstraintName.equals(id.fIdentityConstraintName);
        if(!areEqual) return false;
        areEqual = fSelector.toString().equals(id.fSelector.toString());
        if(!areEqual) return false;
        areEqual = (fFieldCount == id.fFieldCount);
        if(!areEqual) return false;
        for(int i=0; i<fFieldCount; i++)
            if(!fFields[i].toString().equals(id.fFields[i].toString())) return false;
        return true;
!!!4741250.java!!!	resize(inout oldArray : Field [[]], in newSize : int) : Field
        Field[] newArray = new Field[newSize];
        System.arraycopy(oldArray, 0, newArray, 0, oldArray.length);
        return newArray;
!!!4741378.java!!!	getType() : short
        return XSConstants.IDENTITY_CONSTRAINT;
!!!4741506.java!!!	getName() : String
        return fIdentityConstraintName;
!!!4741634.java!!!	getNamespace() : String
        return fNamespace;
!!!4741762.java!!!	getCategory() : short
        return type;
!!!4741890.java!!!	getSelectorStr() : String
        return (fSelector != null) ? fSelector.toString() : null;
!!!4742018.java!!!	getFieldStrs() : StringList
        String[] strs = new String[fFieldCount];
        for (int i = 0; i < fFieldCount; i++)
            strs[i] = fFields[i].toString();
        return new StringListImpl(strs, fFieldCount);
!!!4742146.java!!!	getRefKey() : XSIDCDefinition
        return null;
!!!4742274.java!!!	getAnnotations() : XSObjectList
        return new XSObjectListImpl(fAnnotations, fNumAnnotations);
!!!4742402.java!!!	getNamespaceItem() : XSNamespaceItem
        // REVISIT: implement
                return null;
!!!4742530.java!!!	addAnnotation(inout annotation : XSAnnotationImpl) : void
        if(annotation == null)
            return;
        if(fAnnotations == null) {
            fAnnotations = new XSAnnotationImpl[2];
        } else if(fNumAnnotations == fAnnotations.length) {
            XSAnnotationImpl[] newArray = new XSAnnotationImpl[fNumAnnotations << 1];
            System.arraycopy(fAnnotations, 0, newArray, 0, fNumAnnotations);
            fAnnotations = newArray;
        }
        fAnnotations[fNumAnnotations++] = annotation;
