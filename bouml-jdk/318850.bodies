class CacheKey
!!!1731202.java!!!	CacheKey(inout baseName : String, inout locale : Locale, inout loader : ClassLoader)
            this.name = baseName;
            this.locale = locale;
            if (loader == null) {
                this.loaderRef = null;
            } else {
                loaderRef = new LoaderReference(loader, referenceQueue, this);
            }
            calculateHashCode();
!!!1731330.java!!!	getName() : String
            return name;
!!!1731458.java!!!	setName(inout baseName : String) : ResourceBundle::CacheKey
            if (!this.name.equals(baseName)) {
                this.name = baseName;
                calculateHashCode();
            }
            return this;
!!!1731586.java!!!	getLocale() : Locale
            return locale;
!!!1731714.java!!!	setLocale(inout locale : Locale) : ResourceBundle::CacheKey
            if (!this.locale.equals(locale)) {
                this.locale = locale;
                calculateHashCode();
            }
            return this;
!!!1731842.java!!!	getLoader() : ClassLoader
            return (loaderRef != null) ? loaderRef.get() : null;
!!!1731970.java!!!	equals(inout other : Object) : boolean
            if (this == other) {
                return true;
            }
            try {
                final CacheKey otherEntry = (CacheKey)other;
                //quick check to see if they are not equal
                if (hashCodeCache != otherEntry.hashCodeCache) {
                    return false;
                }
                //are the names the same?
                if (!name.equals(otherEntry.name)) {
                    return false;
                }
                // are the locales the same?
                if (!locale.equals(otherEntry.locale)) {
                    return false;
                }
                //are refs (both non-null) or (both null)?
                if (loaderRef == null) {
                    return otherEntry.loaderRef == null;
                }
                ClassLoader loader = loaderRef.get();
                return (otherEntry.loaderRef != null)
                        // with a null reference we can no longer find
                        // out which class loader was referenced; so
                        // treat it as unequal
                        && (loader != null)
                        && (loader == otherEntry.loaderRef.get());
            } catch (    NullPointerException | ClassCastException e) {
            }
            return false;
!!!1732098.java!!!	hashCode() : int
            return hashCodeCache;
!!!1732226.java!!!	calculateHashCode() : void
            hashCodeCache = name.hashCode() << 3;
            hashCodeCache ^= locale.hashCode();
            ClassLoader loader = getLoader();
            if (loader != null) {
                hashCodeCache ^= loader.hashCode();
            }
!!!1732354.java!!!	clone() : Object
            try {
                CacheKey clone = (CacheKey) super.clone();
                if (loaderRef != null) {
                    clone.loaderRef = new LoaderReference(loaderRef.get(),
                                                          referenceQueue, clone);
                }
                // Clear the reference to a Throwable
                clone.cause = null;
                return clone;
            } catch (CloneNotSupportedException e) {
                //this should never happen
                throw new InternalError(e);
            }
!!!1732482.java!!!	getFormat() : String
            return format;
!!!1732610.java!!!	setFormat(inout format : String) : void
            this.format = format;
!!!1732738.java!!!	setCause(inout cause : Throwable) : void
            if (this.cause == null) {
                this.cause = cause;
            } else {
                // Override the cause if the previous one is
                // ClassNotFoundException.
                if (this.cause instanceof ClassNotFoundException) {
                    this.cause = cause;
                }
            }
!!!1732866.java!!!	getCause() : Throwable
            return cause;
!!!1732994.java!!!	toString() : String
            String l = locale.toString();
            if (l.length() == 0) {
                if (locale.getVariant().length() != 0) {
                    l = "__" + locale.getVariant();
                } else {
                    l = "\"\"";
                }
            }
            return "CacheKey[" + name + ", lc=" + l + ", ldr=" + getLoader()
                + "(format=" + format + ")]";
