class JSpinner
!!!10707586.java!!!	JSpinner(inout model : SpinnerModel)
        if (model == null) {
            throw new NullPointerException("model cannot be null");
        }
        this.model = model;
        this.editor = createEditor(model);
        setUIProperty("opaque",true);
        updateUI();
!!!10707714.java!!!	JSpinner()
        this(new SpinnerNumberModel());
!!!10707842.java!!!	getUI() : SpinnerUI
        return (SpinnerUI)ui;
!!!10707970.java!!!	setUI(inout ui : SpinnerUI) : void
        super.setUI(ui);
!!!10708098.java!!!	getUIClassID() : String
        return uiClassID;
!!!10708226.java!!!	updateUI() : void
        setUI((SpinnerUI)UIManager.getUI(this));
        invalidate();
!!!10708354.java!!!	createEditor(inout model : SpinnerModel) : JComponent
        if (model instanceof SpinnerDateModel) {
            return new DateEditor(this);
        }
        else if (model instanceof SpinnerListModel) {
            return new ListEditor(this);
        }
        else if (model instanceof SpinnerNumberModel) {
            return new NumberEditor(this);
        }
        else {
            return new DefaultEditor(this);
        }
!!!10708482.java!!!	setModel(inout model : SpinnerModel) : void
        if (model == null) {
            throw new IllegalArgumentException("null model");
        }
        if (!model.equals(this.model)) {
            SpinnerModel oldModel = this.model;
            this.model = model;
            if (modelListener != null) {
                oldModel.removeChangeListener(modelListener);
                this.model.addChangeListener(modelListener);
            }
            firePropertyChange("model", oldModel, model);
            if (!editorExplicitlySet) {
                setEditor(createEditor(model)); // sets editorExplicitlySet true
                editorExplicitlySet = false;
            }
            repaint();
            revalidate();
        }
!!!10708610.java!!!	getModel() : SpinnerModel
        return model;
!!!10708738.java!!!	getValue() : Object
        return getModel().getValue();
!!!10708866.java!!!	setValue(inout value : Object) : void
        getModel().setValue(value);
!!!10708994.java!!!	getNextValue() : Object
        return getModel().getNextValue();
!!!10709250.java!!!	addChangeListener(inout listener : ChangeListener) : void
        if (modelListener == null) {
            modelListener = new ModelListener();
            getModel().addChangeListener(modelListener);
        }
        listenerList.add(ChangeListener.class, listener);
!!!10709378.java!!!	removeChangeListener(inout listener : ChangeListener) : void
        listenerList.remove(ChangeListener.class, listener);
!!!10709506.java!!!	getChangeListeners() : ChangeListener
        return listenerList.getListeners(ChangeListener.class);
!!!10709634.java!!!	fireStateChanged() : void
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length - 2; i >= 0; i -= 2) {
            if (listeners[i] == ChangeListener.class) {
                if (changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((ChangeListener)listeners[i+1]).stateChanged(changeEvent);
            }
        }
!!!10709762.java!!!	getPreviousValue() : Object
        return getModel().getPreviousValue();
!!!10709890.java!!!	setEditor(inout editor : JComponent) : void
        if (editor == null) {
            throw new IllegalArgumentException("null editor");
        }
        if (!editor.equals(this.editor)) {
            JComponent oldEditor = this.editor;
            this.editor = editor;
            if (oldEditor instanceof DefaultEditor) {
                ((DefaultEditor)oldEditor).dismiss(this);
            }
            editorExplicitlySet = true;
            firePropertyChange("editor", oldEditor, editor);
            revalidate();
            repaint();
        }
!!!10710018.java!!!	getEditor() : JComponent
        return editor;
!!!10710146.java!!!	commitEdit() : void
        JComponent editor = getEditor();
        if (editor instanceof DefaultEditor) {
            ((DefaultEditor)editor).commitEdit();
        }
!!!10710274.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        if (getUIClassID().equals(uiClassID)) {
            byte count = JComponent.getWriteObjCounter(this);
            JComponent.setWriteObjCounter(this, --count);
            if (count == 0 && ui != null) {
                ui.installUI(this);
            }
        }
!!!10731266.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleJSpinner();
        }
        return accessibleContext;
