format 222
"timer" // jdk1.8::javax::management::timer
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/management/timer/"
  java_package "javax.management.timer"
  classview 177666 "timer"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1206914 "Timer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
Provides the implementation of the timer MBean.
The timer MBean sends out an alarm at a specified time
that wakes up all the listeners registered to receive timer notifications.
<P>

This class manages a list of dated timer notifications.
A method allows users to add/remove as many notifications as required.
When a timer notification is emitted by the timer and becomes obsolete,
it is automatically removed from the list of timer notifications.
<BR>Additional timer notifications can be added into regularly repeating notifications.
<P>

Note:
<OL>
<LI>When sending timer notifications, the timer updates the notification sequence number
irrespective of the notification type.
<LI>The timer service relies on the system date of the host where the <CODE>Timer</CODE> class is loaded.
Listeners may receive untimely notifications
if their host has a different system date.
To avoid such problems, synchronize the system date of all host machines where timing is needed.
<LI>The default behavior for periodic notifications is <i>fixed-delay execution</i>, as
    specified in {@link java.util.Timer}. In order to use <i>fixed-rate execution</i>, use the
    overloaded {@link #addNotification(String, String, Object, Date, long, long, boolean)} method.
<LI>Notification listeners are potentially all executed in the same
thread.  Therefore, they should execute rapidly to avoid holding up
other listeners or perturbing the regularity of fixed-delay
executions.  See {@link NotificationBroadcasterSupport}.
</OL>

@since 1.5
"
      classrelation 3878146 // <generalisation>
	relation 3878146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3878146 // <generalisation>
	  b parent class_ref 497922 // NotificationBroadcasterSupport
      end

      classrelation 3878274 // <realization>
	relation 3878274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3878274 // <realization>
	  b parent class_ref 1207042 // TimerMBean
      end

      classrelation 3878402 // <realization>
	relation 3878402 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3878402 // <realization>
	  b parent class_ref 488578 // MBeanRegistration
      end

      attribute 2306434 "ONE_SECOND"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "------------------------------------------
 PUBLIC VARIABLES
------------------------------------------


Number of milliseconds in one second.
Useful constant for the <CODE>addNotification</CODE> method.

"
      end

      attribute 2306562 "ONE_MINUTE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 60*ONE_SECOND"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of milliseconds in one minute.
Useful constant for the <CODE>addNotification</CODE> method.

"
      end

      attribute 2306690 "ONE_HOUR"
	class_attribute const_attribute public explicit_type "long"
	init_value " 60*ONE_MINUTE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of milliseconds in one hour.
Useful constant for the <CODE>addNotification</CODE> method.

"
      end

      attribute 2306818 "ONE_DAY"
	class_attribute const_attribute public explicit_type "long"
	init_value " 24*ONE_HOUR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of milliseconds in one day.
Useful constant for the <CODE>addNotification</CODE> method.

"
      end

      attribute 2306946 "ONE_WEEK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 7*ONE_DAY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of milliseconds in one week.
Useful constant for the <CODE>addNotification</CODE> method.

"
      end

      classrelation 3878530 // timerTable (<unidirectional association>)
	relation 3878530 --->
	  a role_name "timerTable" init_value "
        new HashMap<>()" const_relation private
	    comment "
------------------------------------------
 PRIVATE VARIABLES
------------------------------------------


Table containing all the timer notifications of this timer,
with the associated date, period and number of occurrences.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer,Object[]> ${name}${value};
"
	    classrelation_ref 3878530 // timerTable (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 2307074 "sendPastNotifications"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Past notifications sending on/off flag value.
This attribute is used to specify if the timer has to send past notifications after start.
<BR>The default value is set to <CODE>false</CODE>.

"
      end

      attribute 2307202 "isActive"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Timer state.
The default value is set to <CODE>false</CODE>.

"
      end

      attribute 2307330 "sequenceNumber"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Timer sequence number.
The default value is set to 0.

"
      end

      attribute 2307458 "TIMER_NOTIF_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flags needed to keep the indexes of the objects in the array.

"
      end

      attribute 2307586 "TIMER_DATE_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2307714 "TIMER_PERIOD_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2307842 "TIMER_NB_OCCUR_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2307970 "ALARM_CLOCK_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2308098 "FIXED_RATE_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2308226 "counterID"
	volatile private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The notification counter ID.
Used to keep the max key value inserted into the timer table.

"
      end

      classrelation 3878658 // timer (<unidirectional association>)
	relation 3878658 --->
	  a role_name "timer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3878658 // timer (<unidirectional association>)
	  b parent class_ref 882690 // Timer
      end

      operation 9990402 "Timer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Default constructor.
"
      end

      operation 9990530 "preRegister"
	public return_type class_ref 485506 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 485122 // MBeanServer
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Allows the timer MBean to perform any operations it needs before being registered
in the MBean server.
<P>
Not used in this context.

@param server The MBean server in which the timer MBean will be registered.
@param name The object name of the timer MBean.

@return The name of the timer MBean registered.

@exception java.lang.Exception
"
      end

      operation 9990658 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the timer MBean to perform any operations needed after having been
registered in the MBean server or after the registration has failed.
<P>
Not used in this context.
"
      end

      operation 9990786 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the timer MBean to perform any operations it needs before being unregistered
by the MBean server.
<P>
Stops the timer.

@exception java.lang.Exception
"
      end

      operation 9990914 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the timer MBean to perform any operations needed after having been
unregistered by the MBean server.
<P>
Not used in this context.
"
      end

      operation 9991042 "getNotificationInfo"
	public return_type class_ref 497154 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This overrides the method in NotificationBroadcasterSupport.
Return the MBeanNotificationInfo[] array for this MBean.
The returned array has one element to indicate that the MBean
can emit TimerNotification.  The array of type strings
associated with this entry is a snapshot of the current types
that were given to addNotification.
"
      end

      operation 9991170 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the timer.
<P>
If there is one or more timer notifications before the time in the list of notifications, the notification
is sent according to the <CODE>sendPastNotifications</CODE> flag and then, updated
according to its period and remaining number of occurrences.
If the timer notification date remains earlier than the current date, this notification is just removed
from the list of notifications.
"
      end

      operation 9991298 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the timer.
"
      end

      operation 9991426 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 7
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	  param inout name "fixedRate" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date,
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter.
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, the value of parameter <i>fixedRate</i> is used to
specify the execution scheme, as specified in {@link java.util.Timer}.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.
@param fixedRate If <code>true</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-rate</i> execution scheme. If
                 <code>false</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-delay</i> execution scheme. Ignored if the
                 notification is not periodic.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null} or
the period or the number of occurrences is negative.

@see #addNotification(String, String, Object, Date, long, long)

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData,
                                                Date date, long period, long nbOccurences)
 end of NPCTE fix for bugId 4464388"
      end

      operation 9991554 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 6
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date,
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter.
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, uses a <i>fixed-delay</i> execution scheme, as specified in
{@link java.util.Timer}. In order to use a <i>fixed-rate</i> execution scheme, use
{@link #addNotification(String, String, Object, Date, long, long, boolean)} instead.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null} or
the period or the number of occurrences is negative.

@see #addNotification(String, String, Object, Date, long, long, boolean)

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData,
                                              Date date, long period)
 end of NPCTE fix for bugId 4464388 */"
      end

      operation 9991682 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 5
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and period and a null number of occurrences.
<P>
The timer notification will repeat continuously using the timer period using a <i>fixed-delay</i>
execution scheme, as specified in {@link java.util.Timer}. In order to use a <i>fixed-rate</i>
execution scheme, use {@link #addNotification(String, String, Object, Date, long, long,
boolean)} instead.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. The
first notification is delivered immediately and the subsequent ones are
spaced as specified by the period parameter.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null} or
the period is negative.

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData,
                                              Date date, long period)
 end of NPCTE fix for bugId 4464388 */"
      end

      operation 9991810 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 4
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and a null period and number of occurrences.
<P>
The timer notification will be handled once at the specified date.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date and the
notification is delivered immediately.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null}.

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData, Date date)
      throws java.lang.IllegalArgumentException {
 end of NPCTE fix for bugId 4464388"
      end

      operation 9991938 "removeNotification"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the timer notification corresponding to the specified identifier from the list of notifications.

@param id The timer notification identifier.

@exception InstanceNotFoundException The specified identifier does not correspond to any timer notification
in the list of notifications of this timer MBean.
"
      end

      operation 9992066 "removeNotifications"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications corresponding to the specified type from the list of notifications.

@param type The timer notification type.

@exception InstanceNotFoundException The specified type does not correspond to any timer notification
in the list of notifications of this timer MBean.
"
      end

      operation 9992194 "removeAllNotifications"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications from the list of notifications
and resets the counter used to update the timer notification identifiers.
"
      end

      operation 9992322 "getNbNotifications"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Gets the number of timer notifications registered into the list of notifications.

@return The number of timer notifications.
"
      end

      operation 9992450 "getAllNotificationIDs"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all timer notification identifiers registered into the list of notifications.

@return A vector of <CODE>Integer</CODE> objects containing all the timer notification identifiers.
<BR>The vector is empty if there is no timer notification registered for this timer MBean.
"
      end

      operation 9992578 "getNotificationIDs"
	public return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Integer> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the identifiers of timer notifications corresponding to the specified type.

@param type The timer notification type.

@return A vector of <CODE>Integer</CODE> objects containing all the identifiers of
timer notifications with the specified <CODE>type</CODE>.
<BR>The vector is empty if there is no timer notifications registered for this timer MBean
with the specified <CODE>type</CODE>.
"
      end

      operation 9992706 "getNotificationType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " 5089997: return is Vector<Integer> not Vector<TimerNotification>

Gets the timer notification type corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification type or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9992834 "getNotificationMessage"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification detailed message corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification detailed message or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9992962 "getNotificationUserData"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification user data object corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification user data object or null if the identifier is not mapped to any
timer notification registered for this timer MBean.

 NPCTE fix for bugId 4464388, esc 0, MR, 03 sept 2001, to be added after modification of jmx spec
public Serializable getNotificationUserData(Integer id) {
 end of NPCTE fix for bugId 4464388"
      end

      operation 9993090 "getDate"
	public return_type class_ref 521474 // Date
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the date associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the date or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9993218 "getPeriod"
	public return_type class_ref 251778 // Long
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the period (in milliseconds) associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the period or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9993346 "getNbOccurences"
	public return_type class_ref 251778 // Long
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the remaining number of occurrences associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the remaining number of occurrences or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9993474 "getFixedRate"
	public return_type class_ref 315010 // Boolean
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the flag indicating whether a periodic notification is
executed at <i>fixed-delay</i> or at <i>fixed-rate</i>.

@param id The timer notification identifier.

@return A copy of the flag indicating whether a periodic notification is
        executed at <i>fixed-delay</i> or at <i>fixed-rate</i>.
"
      end

      operation 9993602 "getSendPastNotifications"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the flag indicating whether or not the timer sends past notifications.
<BR>The default value of the past notifications sending on/off flag is <CODE>false</CODE>.

@return The past notifications sending on/off flag value.

@see #setSendPastNotifications
"
      end

      operation 9993730 "setSendPastNotifications"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating whether the timer sends past notifications or not.
<BR>The default value of the past notifications sending on/off flag is <CODE>false</CODE>.

@param value The past notifications sending on/off flag value.

@see #getSendPastNotifications
"
      end

      operation 9993858 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the timer MBean is active.
A timer MBean is marked active when the {@link #start start} method is called.
It becomes inactive when the {@link #stop stop} method is called.
<BR>The default value of the active on/off flag is <CODE>false</CODE>.

@return <CODE>true</CODE> if the timer MBean is active, <CODE>false</CODE> otherwise.
"
      end

      operation 9993986 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the list of timer notifications is empty.

@return <CODE>true</CODE> if the list of timer notifications is empty, <CODE>false</CODE> otherwise.
"
      end

      operation 9994114 "sendPastNotifications"
	private explicit_return_type "void"
	nparams 2
	  param inout name "currentDate" type class_ref 521474 // Date
	  param inout name "currentFlag" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PRIVATE METHODS
------------------------------------------


Sends or not past notifications depending on the specified flag.

@param currentDate The current date.
@param currentFlag The flag indicating if past notifications must be sent or not.
"
      end

      operation 9994242 "updateTimerTable"
	private explicit_return_type "void"
	nparams 1
	  param inout name "notifID" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the timer notification is not periodic, it is removed from the list of notifications.
<P>
If the timer period of the timer notification has a non null periodicity,
the date of the timer notification is updated by adding the periodicity.
The associated TimerAlarmClock is updated by setting its timeout to the period value.
<P>
If the timer period has a defined number of occurrences, the timer
notification is updated if the number of occurrences has not yet been reached.
Otherwise it is removed from the list of notifications.

@param notifID The timer notification identifier to update.
"
      end

      operation 9994370 "notifyAlarmClock"
	package explicit_return_type "void"
	nparams 1
	  param inout name "notification" type class_ref 1207170 // TimerAlarmClockNotification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


This method is called by the timer each time
the TimerAlarmClock has exceeded its timeout.

@param notification The TimerAlarmClock notification.
"
      end

      operation 9994498 "sendNotification"
	package explicit_return_type "void"
	nparams 2
	  param inout name "timeStamp" type class_ref 521474 // Date
	  param inout name "notification" type class_ref 1207298 // TimerNotification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used by the timer MBean to update and send a timer
notification to all the listeners registered for this kind of notification.

@param timeStamp The notification emission date.
@param notification The timer notification to send.
"
      end
    end

    class 1207042 "TimerMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Exposes the management interface of the timer MBean.

@since 1.5
"
      operation 9987458 "start"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the timer.
<P>
If there is one or more timer notifications before the time in the list of notifications, the notification
is sent according to the <CODE>sendPastNotifications</CODE> flag and then, updated
according to its period and remaining number of occurrences.
If the timer notification date remains earlier than the current date, this notification is just removed
from the list of notifications.
"
      end

      operation 9987586 "stop"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the timer.
"
      end

      operation 9987714 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 7
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	  param inout name "fixedRate" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date,
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter.
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, the value of parameter <i>fixedRate</i> is used to
specify the execution scheme, as specified in {@link java.util.Timer}.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.
@param fixedRate If <code>true</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-rate</i> execution scheme. If
                 <code>false</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-delay</i> execution scheme. Ignored if the
                 notification is not periodic.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null} or
the period or the number of occurrences is negative.

@see #addNotification(String, String, Object, Date, long, long)

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData,
                                                Date date, long period, long nbOccurences)
 end of NPCTE fix for bugId 4464388"
      end

      operation 9987842 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 6
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date,
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter.
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, uses a <i>fixed-delay</i> execution scheme, as specified in
{@link java.util.Timer}. In order to use a <i>fixed-rate</i> execution scheme, use
{@link #addNotification(String, String, Object, Date, long, long, boolean)} instead.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null} or
the period or the number of occurrences is negative.

@see #addNotification(String, String, Object, Date, long, long, boolean)

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData,
                                              Date date, long period)
 end of NPCTE fix for bugId 4464388 */"
      end

      operation 9987970 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 5
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and period and a null number of occurrences.
<P>
The timer notification will repeat continuously using the timer period using a <i>fixed-delay</i>
execution scheme, as specified in {@link java.util.Timer}. In order to use a <i>fixed-rate</i>
execution scheme, use {@link #addNotification(String, String, Object, Date, long, long,
boolean)} instead.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. The
first notification is delivered immediately and the subsequent ones are
spaced as specified by the period parameter.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null} or
the period is negative.

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData,
                                              Date date, long period)
 end of NPCTE fix for bugId 4464388 */"
      end

      operation 9988098 "addNotification"
	public return_type class_ref 137602 // Integer
	nparams 4
	  param inout name "type" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	  param inout name "date" type class_ref 521474 // Date
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE>
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and a null period and number of occurrences.
<P>
The timer notification will be handled once at the specified date.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date and the
notification is delivered immediately.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date is {@code null}.

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData, Date date)
      throws java.lang.IllegalArgumentException {
 end of NPCTE fix for bugId 4464388"
      end

      operation 9988226 "removeNotification"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the timer notification corresponding to the specified identifier from the list of notifications.

@param id The timer notification identifier.

@exception InstanceNotFoundException The specified identifier does not correspond to any timer notification
in the list of notifications of this timer MBean.
"
      end

      operation 9988354 "removeNotifications"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications corresponding to the specified type from the list of notifications.

@param type The timer notification type.

@exception InstanceNotFoundException The specified type does not correspond to any timer notification
in the list of notifications of this timer MBean.
"
      end

      operation 9988482 "removeAllNotifications"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications from the list of notifications
and resets the counter used to update the timer notification identifiers.
"
      end

      operation 9988610 "getNbNotifications"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Gets the number of timer notifications registered into the list of notifications.

@return The number of timer notifications.
"
      end

      operation 9988738 "getAllNotificationIDs"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all timer notification identifiers registered into the list of notifications.

@return A vector of <CODE>Integer</CODE> objects containing all the timer notification identifiers.
<BR>The vector is empty if there is no timer notification registered for this timer MBean.
"
      end

      operation 9988866 "getNotificationIDs"
	public return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Integer> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the identifiers of timer notifications corresponding to the specified type.

@param type The timer notification type.

@return A vector of <CODE>Integer</CODE> objects containing all the identifiers of
timer notifications with the specified <CODE>type</CODE>.
<BR>The vector is empty if there is no timer notifications registered for this timer MBean
with the specified <CODE>type</CODE>.
"
      end

      operation 9988994 "getNotificationType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification type corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification type or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9989122 "getNotificationMessage"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification detailed message corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification detailed message or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9989250 "getNotificationUserData"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification user data object corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification user data object or null if the identifier is not mapped to any
timer notification registered for this timer MBean.

 NPCTE fix for bugId 4464388, esc 0 , MR , 03 sept 2001 , to be added after modification of jmx spec
public Serializable getNotificationUserData(Integer id);
 end of NPCTE fix for bugId 4464388"
      end

      operation 9989378 "getDate"
	public return_type class_ref 521474 // Date
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the date associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the date or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9989506 "getPeriod"
	public return_type class_ref 251778 // Long
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the period (in milliseconds) associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the period or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9989634 "getNbOccurences"
	public return_type class_ref 251778 // Long
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the remaining number of occurrences associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the remaining number of occurrences or null if the identifier is not mapped to any
timer notification registered for this timer MBean.
"
      end

      operation 9989762 "getFixedRate"
	public return_type class_ref 315010 // Boolean
	nparams 1
	  param inout name "id" type class_ref 137602 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the flag indicating whether a periodic notification is
executed at <i>fixed-delay</i> or at <i>fixed-rate</i>.

@param id The timer notification identifier.

@return A copy of the flag indicating whether a periodic notification is
        executed at <i>fixed-delay</i> or at <i>fixed-rate</i>.
"
      end

      operation 9989890 "getSendPastNotifications"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the flag indicating whether or not the timer sends past notifications.

@return The past notifications sending on/off flag value.

@see #setSendPastNotifications
"
      end

      operation 9990018 "setSendPastNotifications"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating whether the timer sends past notifications or not.

@param value The past notifications sending on/off flag value.

@see #getSendPastNotifications
"
      end

      operation 9990146 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the timer MBean is active.
A timer MBean is marked active when the {@link #start start} method is called.
It becomes inactive when the {@link #stop stop} method is called.

@return <CODE>true</CODE> if the timer MBean is active, <CODE>false</CODE> otherwise.
"
      end

      operation 9990274 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the list of timer notifications is empty.

@return <CODE>true</CODE> if the list of timer notifications is empty, <CODE>false</CODE> otherwise.
"
      end
    end

    class 1207170 "TimerAlarmClockNotification"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Definitions of the notifications sent by TimerAlarmClock
MBeans.</p>
"
      classrelation 3879170 // <generalisation>
	relation 3879170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3879170 // <generalisation>
	  b parent class_ref 488706 // Notification
      end

      attribute 2308482 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4841061275673620641L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serial version 
"
      end

      operation 9995010 "TimerAlarmClockNotification"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 1207426 // TimerAlarmClock
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Constructor.

@param source the source.
"
      end
    end

    class 1207298 "TimerNotification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides definitions of the notifications sent by timer MBeans.
<BR>It defines a timer notification identifier which allows to retrieve a timer notification
from the list of notifications of a timer MBean.
<P>
The timer notifications are created and handled by the timer MBean.

@since 1.5
"
      classrelation 3879298 // <generalisation>
	relation 3879298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3879298 // <generalisation>
	  b parent class_ref 488706 // Notification
      end

      attribute 2308610 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1798492029603825750L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serial version 
"
      end

      classrelation 3879426 // notificationID (<unidirectional association>)
	relation 3879426 --->
	  a role_name "notificationID" private
	    comment "
------------------------------------------
 PRIVATE VARIABLES
------------------------------------------


@serial Timer notification identifier.
        This identifier is used to retrieve a timer notification from the timer list of notifications.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879426 // notificationID (<unidirectional association>)
	  b parent class_ref 137602 // Integer
      end

      operation 9995138 "TimerNotification"
	public explicit_return_type ""
	nparams 6
	  param inout name "type" type class_ref 128130 // String
	  param inout name "source" type class_ref 129538 // Object
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "timeStamp" explicit_type "long"
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "id" type class_ref 137602 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Creates a timer notification object.

@param type The notification type.
@param source The notification producer.
@param sequenceNumber The notification sequence number within the source object.
@param timeStamp The notification emission date.
@param msg The notification message.
@param id The notification identifier.

"
      end

      operation 9995266 "getNotificationID"
	public return_type class_ref 137602 // Integer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------

 GETTERS AND SETTERS
--------------------

Gets the identifier of this timer notification.

@return The identifier.
"
      end

      operation 9995394 "cloneTimerNotification"
	package return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


Creates and returns a copy of this object.

"
      end
    end

    class 1207426 "TimerAlarmClock"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides a simple implementation of an alarm clock MBean.
The aim of this MBean is to set up an alarm which wakes up the timer every timeout (fixed-delay)
or at the specified date (fixed-rate).
"
      classrelation 3878786 // <generalisation>
	relation 3878786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3878786 // <generalisation>
	  b parent class_ref 882818 // TimerTask
      end

      classrelation 3878914 // listener (<unidirectional association>)
	relation 3878914 --->
	  a role_name "listener" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3878914 // listener (<unidirectional association>)
	  b parent class_ref 1206914 // Timer
      end

      attribute 2308354 "timeout"
	package explicit_type "long"
	init_value " 10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3879042 // next (<unidirectional association>)
	relation 3879042 --->
	  a role_name "next" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879042 // next (<unidirectional association>)
	  b parent class_ref 521474 // Date
      end

      operation 9994626 "TimerAlarmClock"
	public explicit_return_type ""
	nparams 2
	  param inout name "listener" type class_ref 1206914 // Timer
	  param in name "timeout" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------
"
      end

      operation 9994754 "TimerAlarmClock"
	public explicit_return_type ""
	nparams 2
	  param inout name "listener" type class_ref 1206914 // Timer
	  param inout name "next" type class_ref 521474 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9994882 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


This method is called by the timer when it is started.
"
      end
    end
  end

  deploymentview 173442 "timer"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 872066 "TimerMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.Vector;
import javax.management.InstanceNotFoundException;
${definition}"
      associated_elems
	class_ref 1207042 // TimerMBean
      end
      comment "Copyright (c) 1999, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 872194 "Timer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;
import java.util.logging.Level;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanNotificationInfo;
import javax.management.MBeanRegistration;
import javax.management.MBeanServer;
import javax.management.NotificationBroadcasterSupport;
import javax.management.ObjectName;
${definition}"
      associated_elems
	class_ref 1206914 // Timer
      end
      comment "Copyright (c) 1999, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 872322 "TimerAlarmClock"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.logging.Level;
import static com.sun.jmx.defaults.JmxProperties.TIMER_LOGGER;
${definition}"
      associated_elems
	class_ref 1207426 // TimerAlarmClock
      end
      comment "Copyright (c) 1999, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 872450 "TimerAlarmClockNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1207170 // TimerAlarmClockNotification
      end
      comment "Copyright (c) 2002, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 872578 "TimerNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1207298 // TimerNotification
      end
      comment "Copyright (c) 1999, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
