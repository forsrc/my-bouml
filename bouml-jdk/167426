format 222
"xs" // jdk1.8::com::sun::org::apache::xerces::internal::xs
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/xs/"
  java_package "com.sun.org.apache.xerces.internal.xs"
  classview 160770 "xs"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 655490 "XSTypeDefinition"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents a complex or simple type definition.
"
      classrelation 1908994 // <generalisation>
	relation 1908994 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1908994 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      attribute 967298 "COMPLEX_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a complex type.

"
      end

      attribute 967426 "SIMPLE_TYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a simple type.

"
      end

      operation 4488962 "getTypeCategory"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this type definition is a simple type or complex type.
"
      end

      operation 4489090 "getBaseType"
	public return_type class_ref 655490 // XSTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{base type definition}: either a simple type definition or a complex
type definition.
"
      end

      operation 4489218 "isFinal"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "restriction" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{final}. For a complex type definition it is a subset of {extension,
restriction}. For a simple type definition it is a subset of
{extension, list, restriction, union}.
@param restriction  Extension, restriction, list, union constants
  (defined in <code>XSConstants</code>).
@return True if <code>restriction</code> is in the final set,
  otherwise false.
"
      end

      operation 4489346 "getFinal"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For complex types the returned value is a bit combination of the subset
of {<code>DERIVATION_EXTENSION, DERIVATION_RESTRICTION</code>}
corresponding to <code>final</code> set of this type or
<code>DERIVATION_NONE</code>. For simple types the returned value is
a bit combination of the subset of {
<code>DERIVATION_RESTRICTION, DERIVATION_EXTENSION, DERIVATION_UNION, DERIVATION_LIST</code>
} corresponding to <code>final</code> set of this type or
<code>DERIVATION_NONE</code>.
"
      end

      operation 4489474 "getAnonymous"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience attribute. A boolean that specifies if the type definition
is anonymous.
"
      end

      operation 4489602 "derivedFromType"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "ancestorType" type class_ref 655490 // XSTypeDefinition
	  param in name "derivationMethod" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method which checks if this type is derived from the given
<code>ancestorType</code>.
@param ancestorType  An ancestor type definition.
@param derivationMethod  A bit combination representing a subset of {
  <code>DERIVATION_RESTRICTION, DERIVATION_EXTENSION, DERIVATION_UNION, DERIVATION_LIST</code>
  }.
@return  True if this type is derived from <code>ancestorType</code>
  using only derivation methods from the <code>derivationMethod</code>
  .
"
      end

      operation 4489730 "derivedFrom"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	  param in name "derivationMethod" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method which checks if this type is derived from the given
ancestor type.
@param namespace  An ancestor type namespace.
@param name  An ancestor type name.
@param derivationMethod  A bit combination representing a subset of {
  <code>DERIVATION_RESTRICTION, DERIVATION_EXTENSION, DERIVATION_UNION, DERIVATION_LIST</code>
  }.
@return  True if this type is derived from <code>ancestorType</code>
  using only derivation methods from the <code>derivationMethod</code>
  .
"
      end
    end

    class 663170 "AttributePSVI"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Represents a PSVI item for one attribute information item.
"
      classrelation 1810434 // <generalisation>
	relation 1810434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1810434 // <generalisation>
	  b parent class_ref 663298 // ItemPSVI
      end

      operation 4313986 "getAttributeDeclaration"
	public return_type class_ref 663938 // XSAttributeDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[attribute declaration]: An item isomorphic to the declaration
component itself.
"
      end
    end

    class 663298 "ItemPSVI"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Represents an abstract PSVI item for an element or an attribute
information item.
"
      attribute 908162 "VALIDITY_NOTKNOWN"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Validity value indicating that validation has either not been performed
or that a strict assessment of validity could not be performed.

"
      end

      attribute 908290 "VALIDITY_INVALID"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validity value indicating that validation has been strictly assessed
and the item in question is invalid according to the rules of schema
validation.

"
      end

      attribute 908418 "VALIDITY_VALID"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validation status indicating that schema validation has been performed
and the item in question is valid according to the rules of schema
validation.

"
      end

      attribute 908546 "VALIDATION_NONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validation status indicating that schema validation has been performed
and the item in question has specifically been skipped.

"
      end

      attribute 908674 "VALIDATION_PARTIAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Validation status indicating that schema validation has been performed
on the item in question under the rules of lax validation.

"
      end

      attribute 908802 "VALIDATION_FULL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validation status indicating that full schema validation has been
performed on the item.

"
      end

      operation 4312450 "getValidationContext"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The nearest ancestor element information item with a
<code>[schema information]</code> property (or this element item
itself if it has such a property). For more information refer to
element validation context and attribute validation context .
"
      end

      operation 4312578 "getValidity"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <code>[validity]</code>: determines the validity of the schema item
with respect to the validation being attempted. The value will be one
of the constants: <code>VALIDITY_NOTKNOWN</code>,
<code>VALIDITY_INVALID</code> or <code>VALIDITY_VALID</code>.
"
      end

      operation 4312706 "getValidationAttempted"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <code>[validation attempted]</code>: determines the extent to which
the schema item has been validated. The value will be one of the
constants: <code>VALIDATION_NONE</code>,
<code>VALIDATION_PARTIAL</code> or <code>VALIDATION_FULL</code>.
"
      end

      operation 4312834 "getErrorCodes"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <code>[schema error code]</code>: a list of error codes generated from
the validation attempt or an empty <code>StringList</code> if no
errors occurred during the validation attempt.
"
      end

      operation 4312962 "getSchemaNormalizedValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>[schema normalized value]</code>: the normalized value of this
item after validation.
"
      end

      operation 4313090 "getActualNormalizedValue"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>[schema normalized value]</code>: Binding specific actual value
or <code>null</code> if the value is in error.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4313218 "getActualNormalizedValueType"
	public explicit_return_type "short"
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The actual value built-in datatype, e.g.
<code>STRING_DT, SHORT_DT</code>. If the type definition of this
value is a list type definition, this method returns
<code>LIST_DT</code>. If the type definition of this value is a list
type definition whose item type is a union type definition, this
method returns <code>LISTOFUNION_DT</code>. To query the actual value
of the list or list of union type definitions use
<code>itemValueTypes</code>. If the <code>actualNormalizedValue</code>
 is <code>null</code>, this method returns <code>UNAVAILABLE_DT</code>
.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4313346 "getItemValueTypes"
	public return_type class_ref 663682 // ShortList
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In the case the actual value represents a list, i.e. the
<code>actualNormalizedValueType</code> is <code>LIST_DT</code>, the
returned array consists of one type kind which represents the itemType
. For example:
<pre> &lt;simpleType name=\"listtype\"&gt; &lt;list
itemType=\"positiveInteger\"/&gt; &lt;/simpleType&gt; &lt;element
name=\"list\" type=\"listtype\"/&gt; ... &lt;list&gt;1 2 3&lt;/list&gt; </pre>

The <code>schemaNormalizedValue</code> value is \"1 2 3\", the
<code>actualNormalizedValueType</code> value is <code>LIST_DT</code>,
and the <code>itemValueTypes</code> is an array of size 1 with the
value <code>POSITIVEINTEGER_DT</code>.
<br> If the actual value represents a list type definition whose item
type is a union type definition, i.e. <code>LISTOFUNION_DT</code>,
for each actual value in the list the array contains the
corresponding memberType kind. For example:
<pre> &lt;simpleType
name='union_type' memberTypes=\"integer string\"/&gt; &lt;simpleType
name='listOfUnion'&gt; &lt;list itemType='union_type'/&gt;
&lt;/simpleType&gt; &lt;element name=\"list\" type=\"listOfUnion\"/&gt;
... &lt;list&gt;1 2 foo&lt;/list&gt; </pre>
 The
<code>schemaNormalizedValue</code> value is \"1 2 foo\", the
<code>actualNormalizedValueType</code> is <code>LISTOFUNION_DT</code>
, and the <code>itemValueTypes</code> is an array of size 3 with the
following values: <code>INTEGER_DT, INTEGER_DT, STRING_DT</code>.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4313474 "getTypeDefinition"
	public return_type class_ref 655490 // XSTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <code>[type definition]</code>: an item isomorphic to the type
definition used to validate the schema item.
"
      end

      operation 4313602 "getMemberTypeDefinition"
	public return_type class_ref 663810 // XSSimpleTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>[member type definition]</code>: if and only if that type
definition is a simple type definition with {variety} union, or a
complex type definition whose {content type} is a simple type
definition with {variety} union, then an item isomorphic to that
member of the union's {member type definitions} which actually
validated the schema item's normalized value.
"
      end

      operation 4313730 "getSchemaDefault"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>[schema default]</code>: the canonical lexical representation of
the declaration's {value constraint} value. For more information
refer to element schema default and attribute schema default.
"
      end

      operation 4313858 "getIsSchemaSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<code>[schema specified]</code>: if true, the value was specified in
the schema. If false, the value comes from the infoset. For more
information refer to element specified and attribute specified.
"
      end
    end

    class 663426 "StringList"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>StringList</code> is an immutable ordered collection of
<code>GenericString</code>.
"
      classrelation 2079234 // <generalisation>
	relation 2079234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2079234 // <generalisation>
	  b parent class_ref 175362 // List
      end

      operation 4843778 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of <code>GenericString</code>s in the list. The range of
valid child object indices is 0 to <code>length-1</code> inclusive.
"
      end

      operation 4843906 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "item" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if the <code>GenericString</code> <code>item</code> is a member
of this list.
@param item  <code>GenericString</code> whose presence in this list is
  to be tested.
@return  True if this list contains the <code>GenericString</code>
  <code>item</code>.
"
      end

      operation 4844034 "item"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>index</code>th item in the collection or
<code>null</code> if <code>index</code> is greater than or equal to
the number of objects in the list. The index starts at 0.
@param index  index into the collection.
@return  The <code>GenericString</code> at the <code>index</code>th
  position in the <code>StringList</code>, or <code>null</code> if
  the index specified is not valid.
"
      end
    end

    class 663554 "XSException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XML Schema API operations only raise exceptions in \"exceptional\"
circumstances, i.e., when an operation is impossible to perform (either
for logical reasons, because data is lost, or because the implementation
has become unstable).
<p>Implementations should raise other exceptions under other circumstances.
<p>Some languages and object systems do not support the concept of
exceptions. For such systems, error conditions may be indicated using
native error reporting mechanisms. For some bindings, for example,
methods may return error codes similar to those listed in the
corresponding method descriptions.
"
      classrelation 2233218 // <generalisation>
	relation 2233218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2233218 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1143938 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3111893084677917742L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 5178114 "XSException"
	public explicit_return_type ""
	nparams 2
	  param in name "code" explicit_type "short"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1144066 "code"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1144194 "NOT_SUPPORTED_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ExceptionCode

If the implementation does not support the requested type of object or
operation.

"
      end

      attribute 1144322 "INDEX_SIZE_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If index or size is negative, or greater than the allowed value

"
      end
    end

    class 663682 "ShortList"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>ShortList</code> is an immutable ordered collection of
<code>unsigned short</code>.
"
      classrelation 2078338 // <generalisation>
	relation 2078338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2078338 // <generalisation>
	  b parent class_ref 175362 // List
      end

      operation 4839810 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of <code>unsigned short</code>s in the list. The range of
valid child object indices is 0 to <code>length-1</code> inclusive.
"
      end

      operation 4839938 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "item" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if the <code>unsigned short</code> <code>item</code> is a
member of this list.
@param item  <code>unsigned short</code> whose presence in this list
  is to be tested.
@return  True if this list contains the <code>unsigned short</code>
  <code>item</code>.
"
      end

      operation 4840066 "item"
	public explicit_return_type "short"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>index</code>th item in the collection. The index
starts at 0.
@param index  index into the collection.
@return  The <code>unsigned short</code> at the <code>index</code>th
  position in the <code>ShortList</code>.
@exception XSException
  INDEX_SIZE_ERR: if <code>index</code> is greater than or equal to the
  number of objects in the list.
"
      end
    end

    class 663810 "XSSimpleTypeDefinition"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Simple Type Definition schema component. This
interface provides several query operations for facet components. Users
can either retrieve the defined facets as XML Schema components, using
the <code>facets</code> and the <code>multiValueFacets</code> attributes;
or users can separately query a facet's properties using methods such as
<code>getLexicalFacetValue</code>, <code>isFixedFacet</code>, etc.
"
      classrelation 1909122 // <generalisation>
	relation 1909122 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1909122 // <generalisation>
	  b parent class_ref 655490 // XSTypeDefinition
      end

      attribute 967554 "VARIETY_ABSENT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Variety definitions

The variety is absent for the anySimpleType definition.

"
      end

      attribute 967682 "VARIETY_ATOMIC"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>Atomic</code> type.

"
      end

      attribute 967810 "VARIETY_LIST"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>List</code> type.

"
      end

      attribute 967938 "VARIETY_UNION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>Union</code> type.

"
      end

      attribute 968066 "FACET_NONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Facets

No facets defined.

"
      end

      attribute 968194 "FACET_LENGTH"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.1 Length

"
      end

      attribute 968322 "FACET_MINLENGTH"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.2 minLength.

"
      end

      attribute 968450 "FACET_MAXLENGTH"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.3 maxLength.

"
      end

      attribute 968578 "FACET_PATTERN"
	class_attribute const_attribute public explicit_type "short"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.4 pattern.

"
      end

      attribute 968706 "FACET_WHITESPACE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.5 whitespace.

"
      end

      attribute 968834 "FACET_MAXINCLUSIVE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.7 maxInclusive.

"
      end

      attribute 968962 "FACET_MAXEXCLUSIVE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 64"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.9 maxExclusive.

"
      end

      attribute 969090 "FACET_MINEXCLUSIVE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 128"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.9 minExclusive.

"
      end

      attribute 969218 "FACET_MININCLUSIVE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 256"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.10 minInclusive.

"
      end

      attribute 969346 "FACET_TOTALDIGITS"
	class_attribute const_attribute public explicit_type "short"
	init_value " 512"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.11 totalDigits .

"
      end

      attribute 969474 "FACET_FRACTIONDIGITS"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.12 fractionDigits.

"
      end

      attribute 969602 "FACET_ENUMERATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2048"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "4.3.5 enumeration.

"
      end

      attribute 969730 "ORDERED_FALSE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant defined for the 'ordered' fundamental facet: not ordered.

"
      end

      attribute 969858 "ORDERED_PARTIAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant defined for the 'ordered' fundamental facet: partially
ordered.

"
      end

      attribute 969986 "ORDERED_TOTAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant defined for the 'ordered' fundamental facet: total ordered.

"
      end

      operation 4489858 "getVariety"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[variety]: one of {atomic, list, union} or absent.
"
      end

      operation 4489986 "getPrimitiveType"
	public return_type class_ref 663810 // XSSimpleTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If variety is <code>atomic</code> the primitive type definition (a
built-in primitive datatype definition or the simple ur-type
definition) is available, otherwise <code>null</code>.
"
      end

      operation 4490114 "getBuiltInKind"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closest built-in type category this type represents or
derived from. For example, if this simple type is a built-in derived
type integer the <code>INTEGER_DV</code> is returned.
"
      end

      operation 4490242 "getItemType"
	public return_type class_ref 663810 // XSSimpleTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If variety is <code>list</code> the item type definition (an atomic or
union simple type definition) is available, otherwise
<code>null</code>.
"
      end

      operation 4490370 "getMemberTypes"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If variety is <code>union</code> the list of member type definitions (a
non-empty sequence of simple type definitions) is available,
otherwise an empty <code>XSObjectList</code>.
"
      end

      operation 4490498 "getDefinedFacets"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[facets]: all facets defined on this type. The value is a bit
combination of FACET_XXX constants of all defined facets.
"
      end

      operation 4490626 "isDefinedFacet"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "facetName" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. [Facets]: check whether a facet is defined on this
type.
@param facetName  The name of the facet.
@return  True if the facet is defined, false otherwise.
"
      end

      operation 4490754 "getFixedFacets"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[facets]: all defined facets for this type which are fixed.
"
      end

      operation 4490882 "isFixedFacet"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "facetName" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. [Facets]: check whether a facet is defined and
fixed on this type.
@param facetName  The name of the facet.
@return  True if the facet is fixed, false otherwise.
"
      end

      operation 4491010 "getLexicalFacetValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "facetName" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a value of a single constraining facet for
this simple type definition. This method must not be used to retrieve
values for <code>enumeration</code> and <code>pattern</code> facets.
@param facetName The name of the facet, i.e.
  <code>FACET_LENGTH, FACET_TOTALDIGITS</code>.
  To retrieve the value for a pattern or
  an enumeration, see <code>enumeration</code> and
  <code>pattern</code>.
@return A value of the facet specified in <code>facetName</code> for
  this simple type definition or <code>null</code>.
"
      end

      operation 4491138 "getLexicalEnumeration"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A list of enumeration values if it exists, otherwise an empty
<code>StringList</code>.
"
      end

      operation 4491266 "getLexicalPattern"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A list of pattern values if it exists, otherwise an empty
<code>StringList</code>.
"
      end

      operation 4491394 "getOrdered"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fundamental Facet: ordered.
"
      end

      operation 4491522 "getFinite"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fundamental Facet: cardinality.
"
      end

      operation 4491650 "getBounded"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fundamental Facet: bounded.
"
      end

      operation 4491778 "getNumeric"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fundamental Facet: numeric.
"
      end

      operation 4491906 "getFacets"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A list of constraining facets if it exists, otherwise an empty
<code>XSObjectList</code>. Note: This method must not be used to
retrieve values for <code>enumeration</code> and <code>pattern</code>
facets.
"
      end

      operation 4492034 "getMultiValueFacets"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A list of enumeration and pattern constraining facets if it exists,
otherwise an empty <code>XSObjectList</code>.
"
      end

      operation 4492162 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 663938 "XSAttributeDeclaration"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface represents the Attribute Declaration schema component.
"
      classrelation 1967874 // <generalisation>
	relation 1967874 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1967874 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4648322 "getTypeDefinition"
	public return_type class_ref 663810 // XSSimpleTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[type definition]: A simple type definition.
"
      end

      operation 4648450 "getScope"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[scope]. One of <code>SCOPE_GLOBAL</code>, <code>SCOPE_LOCAL</code>, or
<code>SCOPE_ABSENT</code>. If the scope is local, then the
<code>enclosingCTDefinition</code> is present.
"
      end

      operation 4648578 "getEnclosingCTDefinition"
	public return_type class_ref 701698 // XSComplexTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The complex type definition for locally scoped declarations (see
<code>scope</code>), otherwise <code>null</code> if no such
definition exists.
"
      end

      operation 4648706 "getConstraintType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Value constraint: one of <code>VC_NONE, VC_DEFAULT, VC_FIXED</code>.
"
      end

      operation 4648834 "getConstraintValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Value constraint: The constraint value with respect to the [type
definition], otherwise <code>null</code>.
"
      end

      operation 4648962 "getActualVC"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Value Constraint: Binding specific actual constraint value or
<code>null</code> if the value is in error or there is no value
constraint.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4649090 "getActualVCType"
	public explicit_return_type "short"
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The actual constraint value built-in datatype, e.g.
<code>STRING_DT, SHORT_DT</code>. If the type definition of this
value is a list type definition, this method returns
<code>LIST_DT</code>. If the type definition of this value is a list
type definition whose item type is a union type definition, this
method returns <code>LISTOFUNION_DT</code>. To query the actual
constraint value of the list or list of union type definitions use
<code>itemValueTypes</code>. If the <code>actualValue</code> is
<code>null</code>, this method returns <code>UNAVAILABLE_DT</code>.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4649218 "getItemValueTypes"
	public return_type class_ref 663682 // ShortList
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In the case the actual constraint value represents a list, i.e. the
<code>actualValueType</code> is <code>LIST_DT</code>, the returned
array consists of one type kind which represents the itemType. If the
actual constraint value represents a list type definition whose item
type is a union type definition, i.e. <code>LISTOFUNION_DT</code>,
for each actual constraint value in the list the array contains the
corresponding memberType kind. For examples, see
<code>ItemPSVI.itemValueTypes</code>.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4649346 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>.
If not null then the first [annotation] from the sequence of annotations.
"
      end

      operation 4649474 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty  <code>XSObjectList</code>.
"
      end
    end

    class 664450 "ElementPSVI"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Represents a PSVI item for one element information item.
"
      classrelation 1812226 // <generalisation>
	relation 1812226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1812226 // <generalisation>
	  b parent class_ref 663298 // ItemPSVI
      end

      operation 4318210 "getElementDeclaration"
	public return_type class_ref 664578 // XSElementDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[element declaration]: an item isomorphic to the element declaration
used to validate this element.
"
      end

      operation 4318338 "getNotation"
	public return_type class_ref 664706 // XSNotationDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [notation]: the notation declaration.
"
      end

      operation 4318466 "getNil"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[nil]: true if clause 3.2 of Element Locally Valid (Element) (3.3.4) is
satisfied, otherwise false.
"
      end

      operation 4318594 "getSchemaInformation"
	public return_type class_ref 664834 // XSModel
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "schema information: the schema information property if it is the
validation root, <code>null</code> otherwise.
"
      end
    end

    class 664578 "XSElementDeclaration"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface represents the Element Declaration schema component.
"
      classrelation 2018306 // <generalisation>
	relation 2018306 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2018306 // <generalisation>
	  b parent class_ref 707586 // XSTerm
      end

      operation 4703234 "getTypeDefinition"
	public return_type class_ref 655490 // XSTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[type definition]: either a simple type definition or a complex type
definition.
"
      end

      operation 4703362 "getScope"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[scope]. One of <code>SCOPE_GLOBAL</code>, <code>SCOPE_LOCAL</code>, or
<code>SCOPE_ABSENT</code>. If the scope is local, then the
<code>enclosingCTDefinition</code> is present.
"
      end

      operation 4703490 "getEnclosingCTDefinition"
	public return_type class_ref 701698 // XSComplexTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The complex type definition for locally scoped declarations (see
<code>scope</code>), otherwise <code>null</code> if no such
definition exists.
"
      end

      operation 4703618 "getConstraintType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[Value constraint]: one of <code>VC_NONE, VC_DEFAULT, VC_FIXED</code>.
"
      end

      operation 4703746 "getConstraintValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[Value constraint]: the constraint value with respect to the [type
definition], otherwise <code>null</code>.
"
      end

      operation 4703874 "getActualVC"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Value Constraint: Binding specific actual constraint value or
<code>null</code> if the value is in error or there is no value
constraint.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4704002 "getActualVCType"
	public explicit_return_type "short"
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The actual constraint value built-in datatype, e.g.
<code>STRING_DT, SHORT_DT</code>. If the type definition of this
value is a list type definition, this method returns
<code>LIST_DT</code>. If the type definition of this value is a list
type definition whose item type is a union type definition, this
method returns <code>LISTOFUNION_DT</code>. To query the actual
constraint value of the list or list of union type definitions use
<code>itemValueTypes</code>. If the <code>actualNormalizedValue</code>
 is <code>null</code>, this method returns <code>UNAVAILABLE_DT</code>
.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4704130 "getItemValueTypes"
	public return_type class_ref 663682 // ShortList
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In the case the actual constraint value represents a list, i.e. the
<code>actualValueType</code> is <code>LIST_DT</code>, the returned
array consists of one type kind which represents the itemType. If the
actual constraint value represents a list type definition whose item
type is a union type definition, i.e. <code>LISTOFUNION_DT</code>,
for each actual constraint value in the list the array contains the
corresponding memberType kind. For examples, see
<code>ItemPSVI.itemValueTypes</code>.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4704258 "getNillable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If nillable is true, then an element may also be valid if it carries
the namespace qualified attribute with local name <code>nil</code>
from namespace <code>http://www.w3.org/2001/XMLSchema-instance</code>
and value <code>true</code> (xsi:nil) even if it has no text or
element content despite a <code>content type</code> which would
otherwise require content.
"
      end

      operation 4704386 "getIdentityConstraints"
	public return_type class_ref 699266 // XSNamedMap
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "identity-constraint definitions: a set of constraint definitions if it
exists, otherwise an empty <code>XSNamedMap</code>.
"
      end

      operation 4704514 "getSubstitutionGroupAffiliation"
	public return_type class_ref 664578 // XSElementDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[substitution group affiliation]: a top-level element definition if it
exists, otherwise <code>null</code>.
"
      end

      operation 4704642 "isSubstitutionGroupExclusion"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "exclusion" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that checks if <code>exclusion</code> is a
substitution group exclusion for this element declaration.
@param exclusion
  <code>DERIVATION_EXTENSION, DERIVATION_RESTRICTION</code> or
  <code>DERIVATION_NONE</code>. Represents final set for the element.
@return True if <code>exclusion</code> is a part of the substitution
  group exclusion subset.
"
      end

      operation 4704770 "getSubstitutionGroupExclusions"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [substitution group exclusions]: the returned value is a bit
combination of the subset of {
<code>DERIVATION_EXTENSION, DERIVATION_RESTRICTION</code>} or
<code>DERIVATION_NONE</code>.
"
      end

      operation 4704898 "isDisallowedSubstitution"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "disallowed" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that checks if <code>disallowed</code> is a
disallowed substitution for this element declaration.
@param disallowed {
  <code>DERIVATION_SUBSTITUTION, DERIVATION_EXTENSION, DERIVATION_RESTRICTION</code>
  } or <code>DERIVATION_NONE</code>. Represents a block set for the
  element.
@return True if <code>disallowed</code> is a part of the substitution
  group exclusion subset.
"
      end

      operation 4705026 "getDisallowedSubstitutions"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [disallowed substitutions]: the returned value is a bit combination of
the subset of {
<code>DERIVATION_SUBSTITUTION, DERIVATION_EXTENSION, DERIVATION_RESTRICTION</code>
} corresponding to substitutions disallowed by this
<code>XSElementDeclaration</code> or <code>DERIVATION_NONE</code>.
"
      end

      operation 4705154 "getAbstract"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{abstract} A boolean.
"
      end

      operation 4705282 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>. If not null
then the first [annotation] from the sequence of annotations.
"
      end

      operation 4705410 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 664706 "XSNotationDeclaration"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This interface represents the Notation Declaration schema component.
"
      classrelation 2025730 // <generalisation>
	relation 2025730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2025730 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4728962 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The URI reference representing the system identifier for the notation
declaration, if present, <code>null</code> otherwise.
"
      end

      operation 4729090 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The string representing the public identifier for this notation
declaration, if present; <code>null</code> otherwise.
"
      end

      operation 4729218 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>. If not null
then the first [annotation] from the sequence of annotations.
"
      end

      operation 4729346 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 664834 "XSModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents an XML Schema.
"
      operation 4721282 "getNamespaces"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a list of all namespaces that belong to
this schema. The value <code>null</code> is not a valid namespace
name, but if there are components that do not have a target namespace
, <code>null</code> is included in this list.
"
      end

      operation 4721410 "getNamespaceItems"
	public return_type class_ref 708994 // XSNamespaceItemList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A set of namespace schema information information items (of type
<code>XSNamespaceItem</code>), one for each namespace name which
appears as the target namespace of any schema component in the schema
used for that assessment, and one for absent if any schema component
in the schema had no target namespace. For more information see
schema information.
"
      end

      operation 4721538 "getComponents"
	public return_type class_ref 699266 // XSNamedMap
	nparams 1
	  param in name "objectType" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of top-level components, i.e. element declarations,
attribute declarations, etc.
@param objectType The type of the declaration, i.e.
  <code>ELEMENT_DECLARATION</code>. Note that
  <code>XSTypeDefinition.SIMPLE_TYPE</code> and
  <code>XSTypeDefinition.COMPLEX_TYPE</code> can also be used as the
  <code>objectType</code> to retrieve only complex types or simple
  types, instead of all types.
@return  A list of top-level definitions of the specified type in
  <code>objectType</code> or an empty <code>XSNamedMap</code> if no
  such definitions exist.
"
      end

      operation 4721666 "getComponentsByNamespace"
	public return_type class_ref 699266 // XSNamedMap
	nparams 2
	  param in name "objectType" explicit_type "short"
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a list of top-level component declarations
that are defined within the specified namespace, i.e. element
declarations, attribute declarations, etc.
@param objectType The type of the declaration, i.e.
  <code>ELEMENT_DECLARATION</code>.
@param namespace The namespace to which the declaration belongs or
  <code>null</code> (for components with no target namespace).
@return  A list of top-level definitions of the specified type in
  <code>objectType</code> and defined in the specified
  <code>namespace</code> or an empty <code>XSNamedMap</code>.
"
      end

      operation 4721794 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [annotations]: a set of annotations if it exists, otherwise an empty
<code>XSObjectList</code>.
"
      end

      operation 4721922 "getElementDeclaration"
	public return_type class_ref 664578 // XSElementDeclaration
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level element declaration.
@param name The name of the declaration.
@param namespace The namespace of the declaration, otherwise
  <code>null</code>.
@return A top-level element declaration or <code>null</code> if such a
  declaration does not exist.
"
      end

      operation 4722050 "getAttributeDeclaration"
	public return_type class_ref 663938 // XSAttributeDeclaration
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level attribute declaration.
@param name The name of the declaration.
@param namespace The namespace of the declaration, otherwise
  <code>null</code>.
@return A top-level attribute declaration or <code>null</code> if such
  a declaration does not exist.
"
      end

      operation 4722178 "getTypeDefinition"
	public return_type class_ref 655490 // XSTypeDefinition
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level simple or complex type
definition.
@param name The name of the definition.
@param namespace The namespace of the declaration, otherwise
  <code>null</code>.
@return An <code>XSTypeDefinition</code> or <code>null</code> if such
  a definition does not exist.
"
      end

      operation 4722306 "getAttributeGroup"
	public return_type class_ref 699394 // XSAttributeGroupDefinition
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level attribute group definition.
@param name The name of the definition.
@param namespace The namespace of the definition, otherwise
  <code>null</code>.
@return A top-level attribute group definition or <code>null</code> if
  such a definition does not exist.
"
      end

      operation 4722434 "getModelGroupDefinition"
	public return_type class_ref 699522 // XSModelGroupDefinition
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level model group definition.
@param name The name of the definition.
@param namespace The namespace of the definition, otherwise
  <code>null</code>.
@return A top-level model group definition or <code>null</code> if
  such a definition does not exist.
"
      end

      operation 4722562 "getNotationDeclaration"
	public return_type class_ref 664706 // XSNotationDeclaration
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level notation declaration.
@param name The name of the declaration.
@param namespace The namespace of the declaration, otherwise
  <code>null</code>.
@return A top-level notation declaration or <code>null</code> if such
  a declaration does not exist.
"
      end

      operation 4722690 "getSubstitutionGroup"
	public return_type class_ref 680066 // XSObjectList
	nparams 1
	  param inout name "head" type class_ref 664578 // XSElementDeclaration
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a list containing the members of the
substitution group for the given <code>XSElementDeclaration</code>
or an empty <code>XSObjectList</code> if the substitution group
contains no members.
@param head The substitution group head.
@return A list containing the members of the substitution group
 for the given <code>XSElementDeclaration</code> or an empty
 <code>XSObjectList</code> if the substitution group contains
 no members.
"
      end
    end

    class 680066 "XSObjectList"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>XSObjectList</code> interface provides the abstraction of an
immutable ordered collection of <code>XSObject</code>s, without defining
or constraining how this collection is implemented.
"
      classrelation 2082818 // <generalisation>
	relation 2082818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2082818 // <generalisation>
	  b parent class_ref 175362 // List
      end

      operation 4852354 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of <code>XSObjects</code> in the list. The range of valid
child object indices is 0 to <code>length-1</code> inclusive.
"
      end

      operation 4852482 "item"
	public return_type class_ref 680706 // XSObject
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>index</code>th item in the collection or
<code>null</code> if <code>index</code> is greater than or equal to
the number of objects in the list. The index starts at 0.
@param index  index into the collection.
@return  The <code>XSObject</code> at the <code>index</code>th
  position in the <code>XSObjectList</code>, or <code>null</code> if
  the index specified is not valid.
"
      end
    end

    class 680450 "XSAnnotation"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Annotation schema component.
"
      classrelation 2013442 // <generalisation>
	relation 2013442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2013442 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      attribute 1043970 "W3C_DOM_ELEMENT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TargetType

The object type is <code>org.w3c.dom.Element</code>.

"
      end

      attribute 1044098 "SAX_CONTENTHANDLER"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object type is <code>org.xml.sax.ContentHandler</code>.

"
      end

      attribute 1044226 "W3C_DOM_DOCUMENT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object type is <code>org.w3c.dom.Document</code>.

"
      end

      operation 4686338 "writeAnnotation"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "target" type class_ref 129538 // Object
	  param in name "targetType" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Write contents of the annotation to the specified object. If the
specified <code>target</code> is a DOM object, in-scope namespace
declarations for <code>annotation</code> element are added as
attribute nodes of the serialized <code>annotation</code>, otherwise
the corresponding events for all in-scope namespace declarations are
sent via the specified document handler.
@param target  A target pointer to the annotation target object, i.e.
  <code>org.w3c.dom.Document</code>, <code>org.w3c.dom.Element</code>
  , <code>org.xml.sax.ContentHandler</code>.
@param targetType  A target type.
@return  True if the <code>target</code> is a recognized type and
  supported by this implementation, otherwise false.
"
      end

      operation 4686466 "getAnnotationString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A text representation of the annotation.
"
      end
    end

    class 680706 "XSObject"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>XSObject</code> is a base object for the XML Schema component
model.
"
      operation 4488450 "getType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The <code>type</code> of this object, i.e.
<code>ELEMENT_DECLARATION</code>.
"
      end

      operation 4488578 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The name of type <code>NCName</code>, as defined in XML Namespaces, of
this declaration specified in the <code>{name}</code> property of the
component or <code>null</code> if the definition of this component
does not have a <code>{name}</code> property. For anonymous types,
the processor must construct and expose an anonymous type name that
is distinct from the name of every named type and the name of every
other anonymous type.
"
      end

      operation 4488706 "getNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The [target namespace] of this object, or <code>null</code> if it is
unspecified.
"
      end

      operation 4488834 "getNamespaceItem"
	public return_type class_ref 680834 // XSNamespaceItem
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A namespace schema information item corresponding to the target
namespace of the component, if it is globally declared; or
<code>null</code> otherwise.
"
      end
    end

    class 680834 "XSNamespaceItem"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface represents the namespace schema information information item.
Each namespace schema information information item corresponds to an XML
Schema with a unique namespace name.
"
      operation 4625026 "getSchemaNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[schema namespace]: A namespace name or <code>null</code> if absent.
"
      end

      operation 4625154 "getComponents"
	public return_type class_ref 699266 // XSNamedMap
	nparams 1
	  param in name "objectType" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[schema components]: a list of top-level components, i.e. element
declarations, attribute declarations, etc.
@param objectType The type of the declaration, i.e.
  <code>ELEMENT_DECLARATION</code>. Note that
  <code>XSTypeDefinition.SIMPLE_TYPE</code> and
  <code>XSTypeDefinition.COMPLEX_TYPE</code> can also be used as the
  <code>objectType</code> to retrieve only complex types or simple
  types, instead of all types.
@return  A list of top-level definition of the specified type in
  <code>objectType</code> or an empty <code>XSNamedMap</code> if no
  such definitions exist.
"
      end

      operation 4625282 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [annotations]: a set of annotations if it exists, otherwise an empty
<code>XSObjectList</code>.
"
      end

      operation 4625410 "getElementDeclaration"
	public return_type class_ref 664578 // XSElementDeclaration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level element declaration.
@param name The name of the declaration.
@return A top-level element declaration or <code>null</code> if such a
  declaration does not exist.
"
      end

      operation 4625538 "getAttributeDeclaration"
	public return_type class_ref 663938 // XSAttributeDeclaration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level attribute declaration.
@param name The name of the declaration.
@return A top-level attribute declaration or <code>null</code> if such
  a declaration does not exist.
"
      end

      operation 4625666 "getTypeDefinition"
	public return_type class_ref 655490 // XSTypeDefinition
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level simple or complex type
definition.
@param name The name of the definition.
@return An <code>XSTypeDefinition</code> or <code>null</code> if such
  a definition does not exist.
"
      end

      operation 4625794 "getAttributeGroup"
	public return_type class_ref 699394 // XSAttributeGroupDefinition
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level attribute group definition.
@param name The name of the definition.
@return A top-level attribute group definition or <code>null</code> if
  such a definition does not exist.
"
      end

      operation 4625922 "getModelGroupDefinition"
	public return_type class_ref 699522 // XSModelGroupDefinition
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level model group definition.
@param name The name of the definition.
@return A top-level model group definition definition or
  <code>null</code> if such a definition does not exist.
"
      end

      operation 4626050 "getNotationDeclaration"
	public return_type class_ref 664706 // XSNotationDeclaration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method. Returns a top-level notation declaration.
@param name The name of the declaration.
@return A top-level notation declaration or <code>null</code> if such
  a declaration does not exist.
"
      end

      operation 4626178 "getDocumentLocations"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[document location] - a list of location URIs for the documents that
contributed to the <code>XSModel</code>.
"
      end
    end

    class 690306 "XSFacet"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Describes a constraining facet. Enumeration and pattern facets are exposed
via <code>XSMultiValueFacet</code> interface.
"
      classrelation 1927682 // <generalisation>
	relation 1927682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1927682 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4547202 "getFacetKind"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The name of the facet, e.g. <code>FACET_LENGTH, FACET_TOTALDIGITS</code>
 (see <code>XSSimpleTypeDefinition</code>).
"
      end

      operation 4547330 "getLexicalFacetValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A value of this facet.
"
      end

      operation 4547458 "getFixed"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[Facets]: check whether a facet is fixed.
"
      end

      operation 4547586 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>. If not null
then the first [annotation] from the sequence of annotations.
"
      end

      operation 4547714 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 690562 "XSMultiValueFacet"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Describes a multi-value constraining facets: pattern and enumeration.
"
      classrelation 1928194 // <generalisation>
	relation 1928194 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1928194 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4549122 "getFacetKind"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The name of the facet, i.e. <code>FACET_ENUMERATION</code> and
<code>FACET_PATTERN</code> (see <code>XSSimpleTypeDefinition</code>).
"
      end

      operation 4549250 "getLexicalFacetValues"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Values of this facet.
"
      end

      operation 4549378 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 699266 "XSNamedMap"
      visibility public stereotype "interface"
      nactuals 2
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Objects implementing the <code>XSNamedMap</code> interface are used to
represent immutable collections of XML Schema components that can be
accessed by name. Note that <code>XSNamedMap</code> does not inherit from
<code>XSObjectList</code>. The <code>XSObject</code>s in
<code>XSNamedMap</code>s are not maintained in any particular order.
"
      classrelation 2081282 // <generalisation>
	relation 2081282 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2081282 // <generalisation>
	  b parent class_ref 130178 // Map
      end

      operation 4849026 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of <code>XSObjects</code> in the <code>XSObjectList</code>.
The range of valid child object indices is 0 to <code>length-1</code>
inclusive.
"
      end

      operation 4849154 "item"
	public return_type class_ref 680706 // XSObject
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>index</code>th item in the collection or
<code>null</code> if <code>index</code> is greater than or equal to
the number of objects in the list. The index starts at 0.
@param index  index into the collection.
@return  The <code>XSObject</code> at the <code>index</code>th
  position in the <code>XSObjectList</code>, or <code>null</code> if
  the index specified is not valid.
"
      end

      operation 4849282 "itemByName"
	public return_type class_ref 680706 // XSObject
	nparams 2
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves an <code>XSObject</code> specified by local name and
namespace URI.
<br>Per XML Namespaces, applications must use the value <code>null</code> as the
<code>namespace</code> parameter for methods if they wish to specify
no namespace.
@param namespace The namespace URI of the <code>XSObject</code> to
  retrieve, or <code>null</code> if the <code>XSObject</code> has no
  namespace.
@param localName The local name of the <code>XSObject</code> to
  retrieve.
@return A <code>XSObject</code> (of any type) with the specified local
  name and namespace URI, or <code>null</code> if they do not
  identify any object in this map.
"
      end
    end

    class 699394 "XSAttributeGroupDefinition"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Attribute Group Definition schema component.
"
      classrelation 2013954 // <generalisation>
	relation 2013954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2013954 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4687746 "getAttributeUses"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A set of [attribute uses] if it exists, otherwise an empty
<code>XSObjectList</code>.
"
      end

      operation 4687874 "getAttributeWildcard"
	public return_type class_ref 701826 // XSWildcard
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A [wildcard] if it exists, otherwise <code>null</code>.
"
      end

      operation 4688002 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>. If not null
then the first [annotation] from the sequence of annotations.
"
      end

      operation 4688130 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 699522 "XSModelGroupDefinition"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Model Group Definition schema component.
"
      classrelation 2020226 // <generalisation>
	relation 2020226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2020226 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4710786 "getModelGroup"
	public return_type class_ref 707714 // XSModelGroup
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A model group.
"
      end

      operation 4710914 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>. If not null
then the first [annotation] from the sequence of annotations.
"
      end

      operation 4711042 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 701698 "XSComplexTypeDefinition"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Complex Type Definition schema component.
"
      classrelation 1966082 // <generalisation>
	relation 1966082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1966082 // <generalisation>
	  b parent class_ref 655490 // XSTypeDefinition
      end

      attribute 1031298 "CONTENTTYPE_EMPTY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Content Model Types

Represents an empty content type. A content type with the distinguished
value empty validates elements with no character or element
information item children.

"
      end

      attribute 1031426 "CONTENTTYPE_SIMPLE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents a simple content type. A content type which is simple
validates elements with character-only children.

"
      end

      attribute 1031554 "CONTENTTYPE_ELEMENT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents an element-only content type. An element-only content type
validates elements with children that conform to the supplied content
model.

"
      end

      attribute 1031682 "CONTENTTYPE_MIXED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents a mixed content type.

"
      end

      operation 4639746 "getDerivationMethod"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[derivation method]: either <code>DERIVATION_EXTENSION</code>,
<code>DERIVATION_RESTRICTION</code>, or <code>DERIVATION_NONE</code>
(see <code>XSConstants</code>).
"
      end

      operation 4639874 "getAbstract"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[abstract]: a boolean. Complex types for which <code>abstract</code> is
true must not be used as the type definition for the validation of
element information items.
"
      end

      operation 4640002 "getAttributeUses"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A set of attribute uses if it exists, otherwise an empty
<code>XSObjectList</code>.
"
      end

      operation 4640130 "getAttributeWildcard"
	public return_type class_ref 701826 // XSWildcard
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An attribute wildcard if it exists, otherwise <code>null</code>.
"
      end

      operation 4640258 "getContentType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[content type]: one of empty (<code>CONTENTTYPE_EMPTY</code>), a simple
type definition (<code>CONTENTTYPE_SIMPLE</code>), mixed (
<code>CONTENTTYPE_MIXED</code>), or element-only (
<code>CONTENTTYPE_ELEMENT</code>).
"
      end

      operation 4640386 "getSimpleType"
	public return_type class_ref 663810 // XSSimpleTypeDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A simple type definition corresponding to a simple content model,
otherwise <code>null</code>.
"
      end

      operation 4640514 "getParticle"
	public return_type class_ref 701954 // XSParticle
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A particle for a mixed or element-only content model, otherwise
<code>null</code>.
"
      end

      operation 4640642 "isProhibitedSubstitution"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "restriction" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[prohibited substitutions]: a subset of {extension, restriction}
@param restriction  Extension or restriction constants (see
  <code>XSConstants</code>).
@return True if <code>restriction</code> is a prohibited substitution,
  otherwise false.
"
      end

      operation 4640770 "getProhibitedSubstitutions"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [prohibited substitutions]: A subset of {extension, restriction} or
<code>DERIVATION_NONE</code> represented as a bit flag (see
<code>XSConstants</code>).
"
      end

      operation 4640898 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 701826 "XSWildcard"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Wildcard schema component.
"
      classrelation 2027394 // <generalisation>
	relation 2027394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2027394 // <generalisation>
	  b parent class_ref 707586 // XSTerm
      end

      attribute 1053826 "NSCONSTRAINT_ANY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Namespace Constraint

Namespace Constraint: any namespace is allowed.

"
      end

      attribute 1053954 "NSCONSTRAINT_NOT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Namespace Constraint: namespaces in the list are not allowed.

"
      end

      attribute 1054082 "NSCONSTRAINT_LIST"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Namespace Constraint: namespaces in the list are allowed.

"
      end

      attribute 1054210 "PC_STRICT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Process contents

There must be a top-level declaration for the item available, or the
item must have an xsi:type, and the item must be valid as appropriate.

"
      end

      attribute 1054338 "PC_SKIP"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "No constraints at all: the item must simply be well-formed XML.

"
      end

      attribute 1054466 "PC_LAX"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the item, or any items among its [children] is an element
information item, has a uniquely determined declaration available, it
must be valid with respect to that definition, that is, validate
where you can and do not worry when you cannot.

"
      end

      operation 4733442 "getConstraintType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Namespace constraint: A constraint type: any, not, list.
"
      end

      operation 4733570 "getNsConstraintList"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Namespace constraint: For <code>constraintType</code>
<code>NSCONSTRAINT_LIST</code>, the list contains allowed namespaces.
For <code>constraintType</code> <code>NSCONSTRAINT_NOT</code>, the
list contains disallowed namespaces. For <code>constraintType</code>
<code>NSCONSTRAINT_ANY</code>, the <code>StringList</code> is empty.
"
      end

      operation 4733698 "getProcessContents"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[process contents]: one of skip, lax or strict. Valid constants values
are: <code>PC_LAX</code>, <code>PC_SKIP</code> and
<code>PC_STRICT</code>.
"
      end

      operation 4733826 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>. If not null
then the first [annotation] from the sequence of annotations.
"
      end

      operation 4733954 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 701954 "XSParticle"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Particle schema component.
"
      classrelation 2026754 // <generalisation>
	relation 2026754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2026754 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4730626 "getMinOccurs"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[min occurs]: determines the minimum number of terms that can occur.
"
      end

      operation 4730754 "getMaxOccurs"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [max occurs]: determines the maximum number of terms that can occur.
To query for the value of unbounded use
<code>maxOccursUnbounded</code>. When the value of
<code>maxOccursUnbounded</code> is <code>true</code>, the value of
<code>maxOccurs</code> is unspecified.
"
      end

      operation 4730882 "getMaxOccursUnbounded"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[max occurs]: whether the maxOccurs value is unbounded.
"
      end

      operation 4731010 "getTerm"
	public return_type class_ref 707586 // XSTerm
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[term]: one of a model group, a wildcard, or an element declaration.
"
      end

      operation 4731138 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 702338 "XSAttributeUse"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Attribute Use schema component.
"
      classrelation 2015234 // <generalisation>
	relation 2015234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2015234 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      operation 4690434 "getRequired"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[required]: determines whether this use of an attribute declaration
requires an appropriate attribute information item to be present, or
merely allows it.
"
      end

      operation 4690562 "getAttrDeclaration"
	public return_type class_ref 663938 // XSAttributeDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[attribute declaration]: provides the attribute declaration itself,
which will in turn determine the simple type definition used.
"
      end

      operation 4690690 "getConstraintType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Value Constraint: one of default, fixed.
"
      end

      operation 4690818 "getConstraintValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Value Constraint: The constraint value, otherwise <code>null</code>.
"
      end

      operation 4690946 "getActualVC"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Value Constraint: Binding specific actual constraint value or
<code>null</code> if the value is in error or there is no value
constraint.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4691074 "getActualVCType"
	public explicit_return_type "short"
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The actual constraint value built-in datatype, e.g.
<code>STRING_DT, SHORT_DT</code>. If the type definition of this
value is a list type definition, this method returns
<code>LIST_DT</code>. If the type definition of this value is a list
type definition whose item type is a union type definition, this
method returns <code>LISTOFUNION_DT</code>. To query the actual
constraint value of the list or list of union type definitions use
<code>itemValueTypes</code>. If the <code>actualNormalizedValue</code>
 is <code>null</code>, this method returns <code>UNAVAILABLE_DT</code>
.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4691202 "getItemValueTypes"
	public return_type class_ref 663682 // ShortList
	nparams 0
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In the case the actual constraint value represents a list, i.e. the
<code>actualValueType</code> is <code>LIST_DT</code>, the returned
array consists of one type kind which represents the itemType. If the
actual constraint value represents a list type definition whose item
type is a union type definition, i.e. <code>LISTOFUNION_DT</code>,
for each actual constraint value in the list the array contains the
corresponding memberType kind. For examples, see
<code>ItemPSVI.itemValueTypes</code>.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support this
  method.
"
      end

      operation 4691330 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 703874 "XSLoader"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface that provides a method to load XML Schema documents. This
interface uses the DOM Level 3 Core and Load and Save interfaces.
"
      operation 4662658 "getConfig"
	public return_type class_ref 650498 // DOMConfiguration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The configuration of a document. It maintains a table of recognized
parameters. Using the configuration, it is possible to change the
behavior of the load methods. The configuration may support the
setting of and the retrieval of the following non-boolean parameters
defined on the <code>DOMConfiguration</code> interface:
<code>error-handler</code> (<code>DOMErrorHandler</code>) and
<code>resource-resolver</code> (<code>LSResourceResolver</code>).
<br> The following list of boolean parameters is defined:
<dl>
<dt>
<code>\"validate\"</code></dt>
<dd>
<dl>
<dt><code>true</code></dt>
<dd>[required] (default) Validate an XML
Schema during loading. If validation errors are found, the error
handler is notified. </dd>
<dt><code>false</code></dt>
<dd>[optional] Do not
report errors during the loading of an XML Schema document. </dd>
</dl></dd>
</dl>
"
      end

      operation 4662786 "loadURIList"
	public return_type class_ref 664834 // XSModel
	nparams 1
	  param inout name "uriList" type class_ref 663426 // StringList
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the content of XML Schema documents specified as the list of URI
references. If the URI contains a fragment identifier, the behavior
is not defined by this specification.
@param uriList The list of URI locations.
@return An XSModel representing the schema documents.
"
      end

      operation 4662914 "loadInputList"
	public return_type class_ref 664834 // XSModel
	nparams 1
	  param inout name "is" type class_ref 704002 // LSInputList
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses the content of XML Schema documents specified as a list of
<code>LSInput</code>s.
@param is  The list of <code>LSInput</code>s from which the XML
  Schema documents are to be read.
@return An XSModel representing the schema documents.
"
      end

      operation 4663042 "loadURI"
	public return_type class_ref 664834 // XSModel
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse an XML Schema document from a location identified by a URI
reference. If the URI contains a fragment identifier, the behavior is
not defined by this specification.
@param uri The location of the XML Schema document to be read.
@return An XSModel representing this schema.
"
      end

      operation 4663170 "load"
	public return_type class_ref 664834 // XSModel
	nparams 1
	  param inout name "is" type class_ref 651906 // LSInput
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parse an XML Schema document from a resource identified by a
<code>LSInput</code> .
@param is  The <code>LSInput</code> from which the source
  document is to be read.
@return An XSModel representing this schema.
"
      end
    end

    class 704002 "LSInputList"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>LSInputList</code> interface provides the abstraction of an
ordered collection of <code>LSInput</code>s, without defining or
constraining how this collection is implemented.
"
      classrelation 2077186 // <generalisation>
	relation 2077186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2077186 // <generalisation>
	  b parent class_ref 175362 // List
      end

      operation 4837378 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of <code>LSInput</code>s in the list. The range of valid
child object indices is 0 to <code>length-1</code> inclusive.
"
      end

      operation 4837506 "item"
	public return_type class_ref 651906 // LSInput
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>index</code>th item in the collection or
<code>null</code> if <code>index</code> is greater than or equal to
the number of objects in the list. The index starts at 0.
@param index  index into the collection.
@return  The <code>LSInput</code> at the <code>index</code>th
  position in the <code>LSInputList</code>, or <code>null</code> if
  the index specified is not valid.
"
      end
    end

    class 707586 "XSTerm"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Describes a term that can be one of a model group, a wildcard, or an
element declaration. Objects implementing
<code>XSElementDeclaration</code>, <code>XSModelGroup</code> and
<code>XSWildcard</code> interfaces also implement this interface.
"
      classrelation 2018178 // <generalisation>
	relation 2018178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2018178 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end
    end

    class 707714 "XSModelGroup"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Model Group schema component.
"
      classrelation 2023426 // <generalisation>
	relation 2023426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2023426 // <generalisation>
	  b parent class_ref 707586 // XSTerm
      end

      attribute 1050882 "COMPOSITOR_SEQUENCE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Content model compositors

This constant value signifies a sequence operator.

"
      end

      attribute 1051010 "COMPOSITOR_CHOICE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This constant value signifies a choice operator.

"
      end

      attribute 1051138 "COMPOSITOR_ALL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This content model represents a simplified version of the SGML
&amp;-Connector and is limited to the top-level of any content model.
No element in the all content model may appear more than once.

"
      end

      operation 4718594 "getCompositor"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[compositor]: one of all, choice or sequence. The valid constant values
are:
<code>COMPOSITOR_SEQUENCE, COMPOSITOR_CHOICE, COMPOSITOR_ALL</code>.
"
      end

      operation 4718722 "getParticles"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A list of [particles] if it exists, otherwise an empty
<code>XSObjectList</code>.
"
      end

      operation 4718850 "getAnnotation"
	public return_type class_ref 680450 // XSAnnotation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An annotation if it exists, otherwise <code>null</code>. If not null
then the first [annotation] from the sequence of annotations.
"
      end

      operation 4718978 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty <code>XSObjectList</code>.
"
      end
    end

    class 707970 "XSImplementation"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface allows one to retrieve an instance of <code>XSLoader</code>.
This interface should be implemented on the same object that implements
DOMImplementation.
"
      operation 4712194 "getRecognizedVersions"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A list containing the versions of XML Schema documents recognized by
this <code>XSImplemenation</code>.
"
      end

      operation 4712322 "createXSLoader"
	public return_type class_ref 703874 // XSLoader
	nparams 1
	  param inout name "versions" type class_ref 663426 // StringList
	nexceptions 1
	  exception class_ref 663554 // XSException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new XSLoader. The newly constructed loader may then be
configured and used to load XML Schemas.
@param versions  A list containing the versions of XML Schema
  documents which can be loaded by the <code>XSLoader</code> or
  <code>null</code> to permit XML Schema documents of any recognized
  version to be loaded by the XSLoader.
@return  An XML Schema loader.
@exception XSException
  NOT_SUPPORTED_ERR: Raised if the implementation does not support one
  of the specified versions.
"
      end
    end

    class 708994 "XSNamespaceItemList"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 175362 // List
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>XSNamesaceItemList</code> interface provides the abstraction of
an immutable ordered collection of <code>XSNamespaceItem</code>s, without
defining or constraining how this collection is implemented.
"
      classrelation 2024322 // <generalisation>
	relation 2024322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2024322 // <generalisation>
	  b parent class_ref 175362 // List
      end

      operation 4722818 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of <code>XSNamespaceItem</code>s in the list. The range of
valid child object indices is 0 to <code>length-1</code> inclusive.
"
      end

      operation 4722946 "item"
	public return_type class_ref 680834 // XSNamespaceItem
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>index</code>th item in the collection or
<code>null</code> if <code>index</code> is greater than or equal to
the number of objects in the list. The index starts at 0.
@param index  index into the collection.
@return  The <code>XSNamespaceItem</code> at the <code>index</code>th
  position in the <code>XSNamespaceItemList</code>, or
  <code>null</code> if the index specified is not valid.
"
      end
    end

    class 709506 "XSIDCDefinition"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface represents the Identity-constraint Definition schema
component.
"
      classrelation 2029442 // <generalisation>
	relation 2029442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2029442 // <generalisation>
	  b parent class_ref 680706 // XSObject
      end

      attribute 1056642 "IC_KEY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identity Constraints

See the definition of <code>key</code> in the identity-constraint
category.

"
      end

      attribute 1056770 "IC_KEYREF"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "See the definition of <code>keyref</code> in the identity-constraint
category.

"
      end

      attribute 1056898 "IC_UNIQUE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "See the definition of <code>unique</code> in the identity-constraint
category.

"
      end

      operation 4739330 "getCategory"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[identity-constraint category]: one of key, keyref or unique.
"
      end

      operation 4739458 "getSelectorStr"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[selector]: a restricted XPath 1.0 expression.
"
      end

      operation 4739586 "getFieldStrs"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[fields]: a non-empty list of restricted  XPath 1.0 expressions.
"
      end

      operation 4739714 "getRefKey"
	public return_type class_ref 709506 // XSIDCDefinition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[referenced key]: required if [identity-constraint category] is keyref,
<code>null</code> otherwise. An identity-constraint definition with [
identity-constraint category] equal to key or unique.
"
      end

      operation 4739842 "getAnnotations"
	public return_type class_ref 680066 // XSObjectList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A sequence of [annotations] or an empty  <code>XSObjectList</code>.
"
      end
    end

    class 721538 "PSVIProvider"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface provides access to the post schema validation infoset for an
API that provides a streaming document infoset, such as SAX, XNI, and
others.
<p>For implementations that would like to provide access to the PSVI in a
streaming model, a parser object should also implement the
<code>PSVIProvider</code> interface. Within the scope of the methods
handling the start and end of an element, applications may use the
<code>PSVIProvider</code> to retrieve the PSVI related to the element and
its attributes.
"
      operation 4878850 "getElementPSVI"
	public return_type class_ref 664450 // ElementPSVI
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Provides the post schema validation item for the current element
information item. The method must be called by an application while
in the scope of the methods which report the start and end of an
element. For example, for SAX the method must be called within the
scope of the document handler's <code>startElement</code> or
<code>endElement</code> call. If the method is called outside of the
specified scope, the return value is undefined.
@return The post schema validation infoset for the current element. If
  an element information item is valid, then in the
  post-schema-validation infoset the following properties must be
  available for the element information item: The following
  properties are available in the scope of the method that reports
  the start of an element: {element declaration}, {validation
  context}, {notation}. The {schema information} property is
  available for the validation root. The {error codes} property is
  available if any errors occured during validation.  The following
  properties are available in the scope of the method that reports
  the end of an element: {nil}, {schema specified}, {normalized
  value},{ member type definition}, {validity}, {validation attempted}
  . If the declaration has a value constraint, the property {schema
  default} is available. The {error codes} property is available if
  any errors occured during validation. Note: some processors may
  choose to provide all the PSVI properties in the scope of the
  method that reports the end of an element.
"
      end

      operation 4878978 "getAttributePSVI"
	public return_type class_ref 663170 // AttributePSVI
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides <code>AttributePSVI</code> given the index of an attribute
information item in the current element's attribute list. The method
must be called by an application while in the scope of the methods
which report the start and end of an element at a point where the
attribute list is available. For example, for SAX the method must be
called while in the scope of the document handler's
<code>startElement</code> call. If the method is called outside of
the specified scope, the return value is undefined.
@param index The attribute index.
@return The post schema validation properties of the attribute.
"
      end

      operation 4879106 "getAttributePSVIByName"
	public return_type class_ref 663170 // AttributePSVI
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localname" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides <code>AttributePSVI</code> given the namespace name and the
local name of an attribute information item in the current element's
attribute list. The method must be called by an application while in
the scope of the methods which report the start and end of an element
at a point where the attribute list is available. For example, for
SAX the method must be called while in the scope of the document
handler's <code>startElement</code> call. If the method is called
outside of the specified scope, the return value is undefined.
@param uri The namespace name of an attribute.
@param localname The local name of an attribute.
@return The post schema validation properties of the attribute.
"
      end
    end

    class 741634 "XSConstants"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This interface defines constants used by this specification.
"
      attribute 1134594 "ATTRIBUTE_DECLARATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XML Schema Components

The object describes an attribute declaration.

"
      end

      attribute 1134722 "ELEMENT_DECLARATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes an element declaration.

"
      end

      attribute 1134850 "TYPE_DEFINITION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a complex type or simple type definition.

"
      end

      attribute 1134978 "ATTRIBUTE_USE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes an attribute use definition.

"
      end

      attribute 1135106 "ATTRIBUTE_GROUP"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes an attribute group definition.

"
      end

      attribute 1135234 "MODEL_GROUP_DEFINITION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a model group definition.

"
      end

      attribute 1135362 "MODEL_GROUP"
	class_attribute const_attribute public explicit_type "short"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A model group.

"
      end

      attribute 1135490 "PARTICLE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a particle.

"
      end

      attribute 1135618 "WILDCARD"
	class_attribute const_attribute public explicit_type "short"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a wildcard.

"
      end

      attribute 1135746 "IDENTITY_CONSTRAINT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes an identity constraint definition.

"
      end

      attribute 1135874 "NOTATION_DECLARATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a notation declaration.

"
      end

      attribute 1136002 "ANNOTATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes an annotation.

"
      end

      attribute 1136130 "FACET"
	class_attribute const_attribute public explicit_type "short"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes a constraining facet. Note: this object does not
describe pattern and enumeration facets.

"
      end

      attribute 1136258 "MULTIVALUE_FACET"
	class_attribute const_attribute public explicit_type "short"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The object describes enumeration and pattern facets.

"
      end

      attribute 1136386 "DERIVATION_NONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Derivation constants

No constraint is available.

"
      end

      attribute 1136514 "DERIVATION_EXTENSION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>XSTypeDefinition</code> final set or
<code>XSElementDeclaration</code> disallowed substitution group.

"
      end

      attribute 1136642 "DERIVATION_RESTRICTION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>XSTypeDefinition</code> final set or
<code>XSElementDeclaration</code> disallowed substitution group.

"
      end

      attribute 1136770 "DERIVATION_SUBSTITUTION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>XSTypeDefinition</code> final set.

"
      end

      attribute 1136898 "DERIVATION_UNION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>XSTypeDefinition</code> final set.

"
      end

      attribute 1137026 "DERIVATION_LIST"
	class_attribute const_attribute public explicit_type "short"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>XSTypeDefinition</code> final set.

"
      end

      attribute 1137154 "DERIVATION_EXTENSION_RESTRICTION_SUBSTITION"
	class_attribute const_attribute public explicit_type "short"
	init_value "
            XSConstants.DERIVATION_EXTENSION
            | XSConstants.DERIVATION_RESTRICTION
            | XSConstants.DERIVATION_SUBSTITUTION"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>XSTypeDefinition</code> final set.

"
      end

      attribute 1137282 "DERIVATION_ALL"
	class_attribute const_attribute public explicit_type "short"
	init_value "
            XSConstants.DERIVATION_SUBSTITUTION
            | XSConstants.DERIVATION_EXTENSION
            | XSConstants.DERIVATION_RESTRICTION
            | XSConstants.DERIVATION_LIST
            | XSConstants.DERIVATION_UNION"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>XSTypeDefinition</code> final set.

"
      end

      attribute 1137410 "SCOPE_ABSENT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Scope

The scope of a declaration within named model groups or attribute
groups is <code>absent</code>. The scope of such a declaration is
determined when it is used in the construction of complex type
definitions.

"
      end

      attribute 1137538 "SCOPE_GLOBAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A scope of <code>global</code> identifies top-level declarations.

"
      end

      attribute 1137666 "SCOPE_LOCAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>Locally scoped</code> declarations are available for use only
within the complex type.

"
      end

      attribute 1137794 "VC_NONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Value Constraint

Indicates that the component does not have any value constraint.

"
      end

      attribute 1137922 "VC_DEFAULT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that there is a default value constraint.

"
      end

      attribute 1138050 "VC_FIXED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that there is a fixed value constraint for this attribute.

"
      end

      attribute 1138178 "ANYSIMPLETYPE_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Built-in types: primitive and derived

anySimpleType

"
      end

      attribute 1138306 "STRING_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "string

"
      end

      attribute 1138434 "BOOLEAN_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "boolean

"
      end

      attribute 1138562 "DECIMAL_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "decimal

"
      end

      attribute 1138690 "FLOAT_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "float

"
      end

      attribute 1138818 "DOUBLE_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "double

"
      end

      attribute 1138946 "DURATION_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "duration

"
      end

      attribute 1139074 "DATETIME_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "dateTime

"
      end

      attribute 1139202 "TIME_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "time

"
      end

      attribute 1139330 "DATE_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "date

"
      end

      attribute 1139458 "GYEARMONTH_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "gYearMonth

"
      end

      attribute 1139586 "GYEAR_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "gYear

"
      end

      attribute 1139714 "GMONTHDAY_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "gMonthDay

"
      end

      attribute 1139842 "GDAY_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "gDay

"
      end

      attribute 1139970 "GMONTH_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "gMonth

"
      end

      attribute 1140098 "HEXBINARY_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "hexBinary

"
      end

      attribute 1140226 "BASE64BINARY_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "base64Binary

"
      end

      attribute 1140354 "ANYURI_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "anyURI

"
      end

      attribute 1140482 "QNAME_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "QName

"
      end

      attribute 1140610 "NOTATION_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "NOTATION

"
      end

      attribute 1140738 "NORMALIZEDSTRING_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "normalizedString

"
      end

      attribute 1140866 "TOKEN_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "token

"
      end

      attribute 1140994 "LANGUAGE_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "language

"
      end

      attribute 1141122 "NMTOKEN_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "NMTOKEN

"
      end

      attribute 1141250 "NAME_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Name

"
      end

      attribute 1141378 "NCNAME_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "NCName

"
      end

      attribute 1141506 "ID_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 27"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ID

"
      end

      attribute 1141634 "IDREF_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 28"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "IDREF

"
      end

      attribute 1141762 "ENTITY_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 29"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ENTITY

"
      end

      attribute 1141890 "INTEGER_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "integer

"
      end

      attribute 1142018 "NONPOSITIVEINTEGER_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 31"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "nonPositiveInteger

"
      end

      attribute 1142146 "NEGATIVEINTEGER_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "negativeInteger

"
      end

      attribute 1142274 "LONG_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 33"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "long

"
      end

      attribute 1142402 "INT_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 34"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "int

"
      end

      attribute 1142530 "SHORT_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 35"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "short

"
      end

      attribute 1142658 "BYTE_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 36"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "byte

"
      end

      attribute 1142786 "NONNEGATIVEINTEGER_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 37"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "nonNegativeInteger

"
      end

      attribute 1142914 "UNSIGNEDLONG_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 38"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "unsignedLong

"
      end

      attribute 1143042 "UNSIGNEDINT_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 39"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "unsignedInt

"
      end

      attribute 1143170 "UNSIGNEDSHORT_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "unsignedShort

"
      end

      attribute 1143298 "UNSIGNEDBYTE_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 41"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "unsignedByte

"
      end

      attribute 1143426 "POSITIVEINTEGER_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 42"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "positiveInteger

"
      end

      attribute 1143554 "LISTOFUNION_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 43"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type represents a list type definition whose item type (itemType)
is a union type definition

"
      end

      attribute 1143682 "LIST_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 44"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type represents a list type definition.

"
      end

      attribute 1143810 "UNAVAILABLE_DT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 45"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The built-in type category is not available.

"
      end
    end
  end

  deploymentview 154754 "xs"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 457730 "ItemPSVI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 663298 // ItemPSVI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 457858 "AttributePSVI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 663170 // AttributePSVI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 458370 "ElementPSVI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 664450 // ElementPSVI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 470658 "XSObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 680706 // XSObject
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 470786 "XSTypeDefinition"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 655490 // XSTypeDefinition
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 470914 "XSSimpleTypeDefinition"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 663810 // XSSimpleTypeDefinition
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 478466 "XSFacet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 690306 // XSFacet
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 478594 "XSMultiValueFacet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 690562 // XSMultiValueFacet
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 483842 "XSNamespaceItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 680834 // XSNamespaceItem
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 483970 "XSComplexTypeDefinition"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 701698 // XSComplexTypeDefinition
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 484226 "XSAttributeDeclaration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 663938 // XSAttributeDeclaration
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 485378 "XSLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.ls.LSInput;
${definition}"
      associated_elems
	class_ref 703874 // XSLoader
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 486018 "XSAnnotation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 680450 // XSAnnotation
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 486274 "XSAttributeGroupDefinition"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 699394 // XSAttributeGroupDefinition
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 486530 "XSAttributeUse"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 702338 // XSAttributeUse
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 487298 "XSTerm"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 707586 // XSTerm
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 487426 "XSElementDeclaration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 664578 // XSElementDeclaration
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 487810 "XSModelGroupDefinition"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 699522 // XSModelGroupDefinition
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 488066 "XSImplementation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 707970 // XSImplementation
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 488962 "XSModelGroup"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 707714 // XSModelGroup
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 489218 "XSModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 664834 // XSModel
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 489346 "XSNamespaceItemList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_elems
	class_ref 708994 // XSNamespaceItemList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 489602 "XSNotationDeclaration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 664706 // XSNotationDeclaration
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 489858 "XSParticle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 701954 // XSParticle
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 490114 "XSWildcard"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 701826 // XSWildcard
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 490626 "XSIDCDefinition"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 709506 // XSIDCDefinition
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 497282 "LSInputList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import org.w3c.dom.ls.LSInput;
${definition}"
      associated_elems
	class_ref 704002 // LSInputList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 497666 "ShortList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_elems
	class_ref 663682 // ShortList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 498050 "StringList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_elems
	class_ref 663426 // StringList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 498818 "XSNamedMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
${definition}"
      associated_elems
	class_ref 699266 // XSNamedMap
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 499202 "XSObjectList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_elems
	class_ref 680066 // XSObjectList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 500866 "PSVIProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 721538 // PSVIProvider
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 520066 "XSConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 741634 // XSConstants
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 520194 "XSException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 663554 // XSException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2003,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end

  package_ref 169474 // datatypes
end
