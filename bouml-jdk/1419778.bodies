class DOMCryptoContext
!!!12020098.java!!!	getNamespacePrefix(inout namespaceURI : String, inout defaultPrefix : String) : String
        if (namespaceURI == null) {
            throw new NullPointerException("namespaceURI cannot be null");
        }
        String prefix = nsMap.get(namespaceURI);
        return (prefix != null ? prefix : defaultPrefix);
!!!12020226.java!!!	putNamespacePrefix(inout namespaceURI : String, inout prefix : String) : String
        if (namespaceURI == null) {
            throw new NullPointerException("namespaceURI is null");
        }
        return nsMap.put(namespaceURI, prefix);
!!!12020354.java!!!	getDefaultNamespacePrefix() : String
        return defaultPrefix;
!!!12020482.java!!!	setDefaultNamespacePrefix(inout defaultPrefix : String) : void
        this.defaultPrefix = defaultPrefix;
!!!12020610.java!!!	getBaseURI() : String
        return baseURI;
!!!12020738.java!!!	setBaseURI(inout baseURI : String) : void
        if (baseURI != null) {
            java.net.URI.create(baseURI);
        }
        this.baseURI = baseURI;
!!!12020866.java!!!	getURIDereferencer() : URIDereferencer
        return dereferencer;
!!!12020994.java!!!	setURIDereferencer(inout dereferencer : URIDereferencer) : void
        this.dereferencer = dereferencer;
!!!12021122.java!!!	getProperty(inout name : String) : Object
        if (name == null) {
            throw new NullPointerException("name is null");
        }
        return propMap.get(name);
!!!12021250.java!!!	setProperty(inout name : String, inout value : Object) : Object
        if (name == null) {
            throw new NullPointerException("name is null");
        }
        return propMap.put(name, value);
!!!12021378.java!!!	getKeySelector() : KeySelector
        return ks;
!!!12021506.java!!!	setKeySelector(inout ks : KeySelector) : void
        this.ks = ks;
!!!12021634.java!!!	getElementById(inout idValue : String) : Element
        if (idValue == null) {
            throw new NullPointerException("idValue is null");
        }
        return idMap.get(idValue);
!!!12021762.java!!!	setIdAttributeNS(inout element : Element, inout namespaceURI : String, inout localName : String) : void
        if (element == null) {
            throw new NullPointerException("element is null");
        }
        if (localName == null) {
            throw new NullPointerException("localName is null");
        }
        String idValue = element.getAttributeNS(namespaceURI, localName);
        if (idValue == null || idValue.length() == 0) {
            throw new IllegalArgumentException(localName + " is not an " +
                "attribute");
        }
        idMap.put(idValue, element);
!!!12021890.java!!!	iterator() : Iterator
        return Collections.unmodifiableMap(idMap).entrySet().iterator();
!!!12022018.java!!!	get(inout key : Object) : Object
        return objMap.get(key);
!!!12022146.java!!!	put(inout key : Object, inout value : Object) : Object
        return objMap.put(key, value);
