format 222
"sax" // jdk1.8::javax::xml::transform::sax
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/transform/sax/"
  java_package "javax.xml.transform.sax"
  classview 160002 "sax"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 642434 "SAXTransformerFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class extends TransformerFactory to provide SAX-specific
factory methods.  It provides two types of ContentHandlers,
one for creating Transformers, the other for creating Templates
objects.

<p>If an application wants to set the ErrorHandler or EntityResolver
for an XMLReader used during a transformation, it should use a URIResolver
to return the SAXSource which provides (with getXMLReader) a reference to
the XMLReader.</p>
"
      classrelation 1753986 // <generalisation>
	relation 1753986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1753986 // <generalisation>
	  b parent class_ref 642562 // TransformerFactory
      end

      classrelation 1754114 // FEATURE (<unidirectional association>)
	relation 1754114 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.sax.SAXTransformerFactory/feature\"" class_relation const_relation public
	    comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the TransformerFactory returned from
{@link javax.xml.transform.TransformerFactory#newInstance} may
be safely cast to a SAXTransformerFactory.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1754114 // FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1754242 // FEATURE_XMLFILTER (<unidirectional association>)
	relation 1754242 --->
	  a role_name "FEATURE_XMLFILTER" init_value "
        \"http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter\"" class_relation const_relation public
	    comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the {@link #newXMLFilter(Source src)}
and {@link #newXMLFilter(Templates templates)} methods are supported.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1754242 // FEATURE_XMLFILTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4111234 "SAXTransformerFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default constructor is protected on purpose.
"
      end

      operation 4111362 "newTransformerHandler"
	abstract public return_type class_ref 643074 // TransformerHandler
	nparams 1
	  param inout name "src" type class_ref 627202 // Source
	nexceptions 1
	  exception class_ref 642818 // TransformerConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TransformerHandler object that can process SAX
ContentHandler events into a Result, based on the transformation
instructions specified by the argument.

@param src The Source of the transformation instructions.

@return TransformerHandler ready to transform SAX events.

@throws TransformerConfigurationException If for some reason the
TransformerHandler can not be created.
"
      end

      operation 4111490 "newTransformerHandler"
	abstract public return_type class_ref 643074 // TransformerHandler
	nparams 1
	  param inout name "templates" type class_ref 636034 // Templates
	nexceptions 1
	  exception class_ref 642818 // TransformerConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TransformerHandler object that can process SAX
ContentHandler events into a Result, based on the Templates argument.

@param templates The compiled transformation instructions.

@return TransformerHandler ready to transform SAX events.

@throws TransformerConfigurationException If for some reason the
TransformerHandler can not be created.
"
      end

      operation 4111618 "newTransformerHandler"
	abstract public return_type class_ref 643074 // TransformerHandler
	nparams 0
	nexceptions 1
	  exception class_ref 642818 // TransformerConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TransformerHandler object that can process SAX
ContentHandler events into a Result. The transformation
is defined as an identity (or copy) transformation, for example
to copy a series of SAX parse events into a DOM tree.

@return A non-null reference to a TransformerHandler, that may
be used as a ContentHandler for SAX parse events.

@throws TransformerConfigurationException If for some reason the
TransformerHandler cannot be created.
"
      end

      operation 4111746 "newTemplatesHandler"
	abstract public return_type class_ref 643202 // TemplatesHandler
	nparams 0
	nexceptions 1
	  exception class_ref 642818 // TransformerConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TemplatesHandler object that can process SAX
ContentHandler events into a Templates object.

@return A non-null reference to a TransformerHandler, that may
be used as a ContentHandler for SAX parse events.

@throws TransformerConfigurationException If for some reason the
TemplatesHandler cannot be created.
"
      end

      operation 4111874 "newXMLFilter"
	abstract public return_type class_ref 643330 // XMLFilter
	nparams 1
	  param inout name "src" type class_ref 627202 // Source
	nexceptions 1
	  exception class_ref 642818 // TransformerConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XMLFilter that uses the given Source as the
transformation instructions.

@param src The Source of the transformation instructions.

@return An XMLFilter object, or null if this feature is not supported.

@throws TransformerConfigurationException If for some reason the
TemplatesHandler cannot be created.
"
      end

      operation 4112002 "newXMLFilter"
	abstract public return_type class_ref 643330 // XMLFilter
	nparams 1
	  param inout name "templates" type class_ref 636034 // Templates
	nexceptions 1
	  exception class_ref 642818 // TransformerConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XMLFilter, based on the Templates argument..

@param templates The compiled transformation instructions.

@return An XMLFilter object, or null if this feature is not supported.

@throws TransformerConfigurationException If for some reason the
TemplatesHandler cannot be created.
"
      end
    end

    class 643074 "TransformerHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A TransformerHandler
listens for SAX ContentHandler parse events and transforms
them to a Result.
"
      classrelation 1764098 // <generalisation>
	relation 1764098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1764098 // <generalisation>
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 1764226 // <generalisation>
	relation 1764226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1764226 // <generalisation>
	  b parent class_ref 617602 // LexicalHandler
      end

      classrelation 1764354 // <generalisation>
	relation 1764354 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1764354 // <generalisation>
	  b parent class_ref 617986 // DTDHandler
      end

      operation 4135426 "setResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 645506 // Result
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set  the <code>Result</code> associated with this
<code>TransformerHandler</code> to be used for the transformation.</p>

@param result A <code>Result</code> instance, should not be
  <code>null</code>.

@throws IllegalArgumentException if result is invalid for some reason.
"
      end

      operation 4135554 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemID" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base ID (URI or system ID) from where relative
URLs will be resolved.
@param systemID Base URI for the source tree.
"
      end

      operation 4135682 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the base ID (URI or system ID) from where relative
URLs will be resolved.
@return The systemID that was set with {@link #setSystemId}.
"
      end

      operation 4135810 "getTransformer"
	public return_type class_ref 618626 // Transformer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the <code>Transformer</code> associated with this handler, which
is needed in order to set parameters and output properties.</p>

@return <code>Transformer</code> associated with this
  <code>TransformerHandler</code>.
"
      end
    end

    class 643202 "TemplatesHandler"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A SAX ContentHandler that may be used to process SAX
parse events (parsing transformation instructions) into a Templates object.

<p>Note that TemplatesHandler does not need to implement LexicalHandler.</p>
"
      classrelation 1757186 // <generalisation>
	relation 1757186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1757186 // <generalisation>
	  b parent class_ref 605954 // ContentHandler
      end

      operation 4124290 "getTemplates"
	public return_type class_ref 636034 // Templates
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When a TemplatesHandler object is used as a ContentHandler
for the parsing of transformation instructions, it creates a Templates object,
which the caller can get once the SAX events have been completed.

@return The Templates object that was created during
the SAX event process, or null if no Templates object has
been created.

"
      end

      operation 4124418 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemID" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base ID (URI or system ID) for the Templates object
created by this builder.  This must be set in order to
resolve relative URIs in the stylesheet.  This must be
called before the startDocument event.

@param systemID Base URI for this stylesheet.
"
      end

      operation 4124546 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the base ID (URI or system ID) from where relative
URLs will be resolved.
@return The systemID that was set with {@link #setSystemId}.
"
      end
    end

    class 750594 "SAXSource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Acts as an holder for SAX-style Source.</p>

<p>Note that XSLT requires namespace support. Attempting to transform an
input source that is not
generated with a namespace-aware parser may result in errors.
Parsers can be made namespace aware by calling the
{@link javax.xml.parsers.SAXParserFactory#setNamespaceAware(boolean awareness)} method.</p>

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
"
      classrelation 4763266 // <realization>
	relation 4763266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4763266 // <realization>
	  b parent class_ref 627202 // Source
      end

      classrelation 4763394 // FEATURE (<unidirectional association>)
	relation 4763394 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.sax.SAXSource/feature\"" class_relation const_relation public
	    comment "
If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Source input of this type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4763394 // FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12008322 "SAXSource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Zero-argument default constructor.  If this constructor is used, and
no SAX source is set using
{@link #setInputSource(InputSource inputSource)} , then the
<code>Transformer</code> will
create an empty source {@link org.xml.sax.InputSource} using
{@link org.xml.sax.InputSource#InputSource() new InputSource()}.</p>

@see javax.xml.transform.Transformer#transform(Source xmlSource, Result outputTarget)
"
      end

      operation 12008450 "SAXSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "reader" type class_ref 606466 // XMLReader
	  param inout name "inputSource" type class_ref 606594 // InputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a <code>SAXSource</code>, using an {@link org.xml.sax.XMLReader}
and a SAX InputSource. The {@link javax.xml.transform.Transformer}
or {@link javax.xml.transform.sax.SAXTransformerFactory} will set itself
to be the reader's {@link org.xml.sax.ContentHandler}, and then will call
reader.parse(inputSource).

@param reader An XMLReader to be used for the parse.
@param inputSource A SAX input source reference that must be non-null
and that will be passed to the reader parse method.
"
      end

      operation 12008578 "SAXSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "inputSource" type class_ref 606594 // InputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a <code>SAXSource</code>, using a SAX <code>InputSource</code>.
The {@link javax.xml.transform.Transformer} or
{@link javax.xml.transform.sax.SAXTransformerFactory} creates a
reader via {@link org.xml.sax.helpers.XMLReaderFactory}
(if setXMLReader is not used), sets itself as
the reader's {@link org.xml.sax.ContentHandler}, and calls
reader.parse(inputSource).

@param inputSource An input source reference that must be non-null
and that will be passed to the parse method of the reader.
"
      end

      operation 12008706 "setXMLReader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 606466 // XMLReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the XMLReader to be used for the Source.

@param reader A valid XMLReader or XMLFilter reference.
"
      end

      operation 12008834 "getXMLReader"
	public return_type class_ref 606466 // XMLReader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XMLReader to be used for the Source.

@return A valid XMLReader or XMLFilter reference, or null.
"
      end

      operation 12008962 "setInputSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputSource" type class_ref 606594 // InputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the SAX InputSource to be used for the Source.

@param inputSource A valid InputSource reference.
"
      end

      operation 12009090 "getInputSource"
	public return_type class_ref 606594 // InputSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the SAX InputSource to be used for the Source.

@return A valid InputSource reference, or null.
"
      end

      operation 12009218 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system identifier for this Source.  If an input source
has already been set, it will set the system ID or that
input source, otherwise it will create a new input source.

<p>The system identifier is optional if there is a byte stream
or a character stream, but it is still useful to provide one,
since the application can use it to resolve relative URIs
and can include it in error messages and warnings (the parser
will attempt to open a connection to the URI only if
no byte stream or character stream is specified).</p>

@param systemId The system identifier as a URI string.
"
      end

      operation 12009346 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the base ID (URI or system ID) from where URIs
will be resolved.</p>

@return Base URL for the <code>Source</code>, or <code>null</code>.
"
      end

      classrelation 4763522 // reader (<unidirectional association>)
	relation 4763522 --->
	  a role_name "reader" private
	    comment "
The XMLReader to be used for the source tree input. May be null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4763522 // reader (<unidirectional association>)
	  b parent class_ref 606466 // XMLReader
      end

      classrelation 4763650 // inputSource (<unidirectional association>)
	relation 4763650 --->
	  a role_name "inputSource" private
	    comment "
<p>The SAX InputSource to be used for the source tree input.
Should not be <code>null</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4763650 // inputSource (<unidirectional association>)
	  b parent class_ref 606594 // InputSource
      end

      operation 12009474 "sourceToInputSource"
	class_operation public return_type class_ref 606594 // InputSource
	nparams 1
	  param inout name "source" type class_ref 627202 // Source
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to obtain a SAX InputSource object from a Source
object.

@param source Must be a non-null Source reference.

@return An InputSource, or null if Source can not be converted.
"
      end
    end

    class 1417090 "SAXResult"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Acts as an holder for a transformation Result.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
"
      classrelation 4762370 // <realization>
	relation 4762370 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4762370 // <realization>
	  b parent class_ref 645506 // Result
      end

      classrelation 4762498 // FEATURE (<unidirectional association>)
	relation 4762498 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.sax.SAXResult/feature\"" class_relation const_relation public
	    comment "
If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Result output of this type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4762498 // FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12006786 "SAXResult"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Zero-argument default constructor.
"
      end

      operation 12006914 "SAXResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "handler" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a SAXResult that targets a SAX2 {@link org.xml.sax.ContentHandler}.

@param handler Must be a non-null ContentHandler reference.
"
      end

      operation 12007042 "setHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 605954 // ContentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the target to be a SAX2 {@link org.xml.sax.ContentHandler}.

@param handler Must be a non-null ContentHandler reference.
"
      end

      operation 12007170 "getHandler"
	public return_type class_ref 605954 // ContentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@link org.xml.sax.ContentHandler} that is the Result.

@return The ContentHandler that is to be transformation output.
"
      end

      operation 12007298 "setLexicalHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 617602 // LexicalHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the SAX2 {@link org.xml.sax.ext.LexicalHandler} for the output.

<p>This is needed to handle XML comments and the like.  If the
lexical handler is not set, an attempt should be made by the
transformer to cast the {@link org.xml.sax.ContentHandler} to a
<code>LexicalHandler</code>.</p>

@param handler A non-null <code>LexicalHandler</code> for
handling lexical parse events.
"
      end

      operation 12007426 "getLexicalHandler"
	public return_type class_ref 617602 // LexicalHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a SAX2 {@link org.xml.sax.ext.LexicalHandler} for the output.

@return A <code>LexicalHandler</code>, or null.
"
      end

      operation 12007554 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method setSystemId Set the systemID that may be used in association
with the {@link org.xml.sax.ContentHandler}.

@param systemId The system identifier as a URI string.
"
      end

      operation 12007682 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the system identifier that was set with setSystemId.

@return The system identifier that was set with setSystemId, or null
if setSystemId was not called.
"
      end

      classrelation 4762626 // handler (<unidirectional association>)
	relation 4762626 --->
	  a role_name "handler" private
	    comment "////////////////////////////////////////////////////////////////////
 Internal state.
////////////////////////////////////////////////////////////////////

The handler for parse events.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4762626 // handler (<unidirectional association>)
	  b parent class_ref 605954 // ContentHandler
      end

      classrelation 4762754 // lexhandler (<unidirectional association>)
	relation 4762754 --->
	  a role_name "lexhandler" private
	    comment "
The handler for lexical events.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4762754 // lexhandler (<unidirectional association>)
	  b parent class_ref 617602 // LexicalHandler
      end

      classrelation 4762882 // systemId (<unidirectional association>)
	relation 4762882 --->
	  a role_name "systemId" private
	    comment "
The systemID that may be used in association
with the node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4762882 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end
  end

  deploymentview 153346 "sax"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 443266 "SAXTransformerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.*;
import org.xml.sax.XMLFilter;
${definition}"
      associated_elems
	class_ref 642434 // SAXTransformerFactory
      end
      comment "Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 443778 "TemplatesHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.*;
import org.xml.sax.ContentHandler;
${definition}"
      associated_elems
	class_ref 643202 // TemplatesHandler
      end
      comment "Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 444546 "TransformerHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Result;
import javax.xml.transform.Transformer;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 643074 // TransformerHandler
      end
      comment "Copyright (c) 2000, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1006594 "SAXResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Result;
import org.xml.sax.ContentHandler;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_elems
	class_ref 1417090 // SAXResult
      end
      comment "Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1006850 "SAXSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamSource;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;
${definition}"
      associated_elems
	class_ref 750594 // SAXSource
      end
      comment "Copyright (c) 2000, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
