class AtomicLong
!!!9261186.java!!!	AtomicLong(in initialValue : long)
        value = initialValue;
!!!9261442.java!!!	get() : long
        return value;
!!!9261570.java!!!	set(in newValue : long) : void
        value = newValue;
!!!9261698.java!!!	lazySet(in newValue : long) : void
        unsafe.putOrderedLong(this, valueOffset, newValue);
!!!9261826.java!!!	getAndSet(in newValue : long) : long
        return unsafe.getAndSetLong(this, valueOffset, newValue);
!!!9261954.java!!!	compareAndSet(in expect : long, in update : long) : boolean
        return unsafe.compareAndSwapLong(this, valueOffset, expect, update);
!!!9262082.java!!!	weakCompareAndSet(in expect : long, in update : long) : boolean
        return unsafe.compareAndSwapLong(this, valueOffset, expect, update);
!!!9262210.java!!!	getAndIncrement() : long
        return unsafe.getAndAddLong(this, valueOffset, 1L);
!!!9262338.java!!!	getAndDecrement() : long
        return unsafe.getAndAddLong(this, valueOffset, -1L);
!!!9262466.java!!!	getAndAdd(in delta : long) : long
        return unsafe.getAndAddLong(this, valueOffset, delta);
!!!9262594.java!!!	incrementAndGet() : long
        return unsafe.getAndAddLong(this, valueOffset, 1L) + 1L;
!!!9262722.java!!!	decrementAndGet() : long
        return unsafe.getAndAddLong(this, valueOffset, -1L) - 1L;
!!!9262850.java!!!	addAndGet(in delta : long) : long
        return unsafe.getAndAddLong(this, valueOffset, delta) + delta;
!!!9262978.java!!!	getAndUpdate(inout updateFunction : LongUnaryOperator) : long
        long prev, next;
        do {
            prev = get();
            next = updateFunction.applyAsLong(prev);
        } while (!compareAndSet(prev, next));
        return prev;
!!!9263106.java!!!	updateAndGet(inout updateFunction : LongUnaryOperator) : long
        long prev, next;
        do {
            prev = get();
            next = updateFunction.applyAsLong(prev);
        } while (!compareAndSet(prev, next));
        return next;
!!!9263234.java!!!	getAndAccumulate(in x : long, inout accumulatorFunction : LongBinaryOperator) : long
        long prev, next;
        do {
            prev = get();
            next = accumulatorFunction.applyAsLong(prev, x);
        } while (!compareAndSet(prev, next));
        return prev;
!!!9263362.java!!!	accumulateAndGet(in x : long, inout accumulatorFunction : LongBinaryOperator) : long
        long prev, next;
        do {
            prev = get();
            next = accumulatorFunction.applyAsLong(prev, x);
        } while (!compareAndSet(prev, next));
        return next;
!!!9263490.java!!!	toString() : String
        return Long.toString(get());
!!!9263618.java!!!	intValue() : int
        return (int)get();
!!!9263746.java!!!	longValue() : long
        return get();
!!!9263874.java!!!	floatValue() : float
        return (float)get();
!!!9264002.java!!!	doubleValue() : double
        return (double)get();
