format 222
"grammars" // jdk1.8::com::sun::org::apache::xerces::internal::xni::grammars
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/xni/grammars/"
  java_package "com.sun.org.apache.xerces.internal.xni.grammars"
  classview 161538 "grammars"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 662274 "XMLGrammarPool"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> This interface specifies how the parser and the application
interact with respect to Grammar objects that the application
possesses--either by having precompiled them or by having stored them
from a previous validation of an instance document.  It makes no
assumptions about the kind of Grammar involved, or about how the
application's storage mechanism works.</p>

<p>The interaction works as follows:
<ul>
<li>When a validator considers a document, it is expected to request
grammars of the type it can handle from this object using the
<code>retrieveInitialGrammarSet</code> method. </li>
<li>If it requires a grammar
not in this set, it will request it from this Object using the
<code>retrieveGrammar</code> method.  </li>
<li> After successfully validating an
instance, the validator should make any new grammars it has compiled
available to this object using the <code>cacheGrammars</code>
method; for ease of implementation it may make other Grammars it holds references to as well (i.e.,
it may return some grammars that were retrieved from the GrammarPool in earlier operations). </li> </ul> </p>

@author Neil Graham, IBM
"
      operation 4714242 "retrieveInitialGrammarSet"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "grammarType" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>we are trying to make this XMLGrammarPool work for all kinds of
 grammars, so we have a parameter \"grammarType\" for each of the
 methods. </p>

<p> retrieve the initial known set of grammars. this method is
called by a validator before the validation starts. the application
can provide an initial set of grammars available to the current
validation attempt. </p>
@param grammarType the type of the grammar, from the
 <code>com.sun.org.apache.xerces.internal.xni.grammars.Grammar</code> interface.
@return the set of grammars the validator may put in its \"bucket\"
"
      end

      operation 4714370 "cacheGrammars"
	public explicit_return_type "void"
	nparams 2
	  param inout name "grammarType" type class_ref 128130 // String
	  param inout name "grammars" type class_ref 674818 // Grammar
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>return the final set of grammars that the validator ended up
with.
This method is called after the
validation finishes. The application may then choose to cache some
of the returned grammars. </p>
@param grammarType the type of the grammars being returned;
@param grammars an array containing the set of grammars being
 returned; order is not significant.
"
      end

      operation 4714498 "retrieveGrammar"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "desc" type class_ref 674946 // XMLGrammarDescription
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p> This method requests that the application retrieve a grammar
corresponding to the given GrammarIdentifier from its cache.
If it cannot do so it must return null; the parser will then
call the EntityResolver.  <strong>An application must not call its
EntityResolver itself from this method; this may result in infinite
recursions.</strong>
@param desc The description of the Grammar being requested.
@return the Grammar corresponding to this description or null if
 no such Grammar is known.
"
      end

      operation 4714626 "lockPool"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the XMLGrammarPool not to store any grammars when
the cacheGrammars(String, Grammar[[]) method is called.
"
      end

      operation 4714754 "unlockPool"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the XMLGrammarPool to store grammars when its cacheGrammars(String, Grammar[])
method is called.  This is the default state of the object.
"
      end

      operation 4714882 "clear"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all grammars from the pool.
"
      end
    end

    class 666242 "XMLDTDDescription"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "All information specific to DTD grammars.

@author Sandy Gao, IBM
"
      classrelation 1898370 // <generalisation>
	relation 1898370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1898370 // <generalisation>
	  b parent class_ref 674946 // XMLGrammarDescription
      end

      operation 4472578 "getRootName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the root name of this DTD.

@return  the root name. null if the name is unknown.
"
      end
    end

    class 674818 "Grammar"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A generic grammar for use in validating XML documents. The Grammar
object stores the validation information in a compiled form. Specific
subclasses extend this class and \"populate\" the grammar by compiling
the specific syntax (DTD, Schema, etc) into the data structures used
by this object.
<p>
<strong>Note:</strong> The Grammar object is not useful as a generic
grammar access or query object. In other words, you cannot round-trip
specific grammar syntaxes with the compiled grammar information in
the Grammar object. You <em>can</em> create equivalent validation
rules in your choice of grammar syntax but there is no guarantee that
the input and output will be the same.

<p> Right now, this class is largely a shell; eventually,
it will be enriched by having more expressive methods added. </p>
will be moved from dtd.Grammar here.

@author Jeffrey Rodriguez, IBM
@author Eric Ye, IBM
@author Andy Clark, IBM
@author Neil Graham, IBM

"
      operation 4433154 "getGrammarDescription"
	public return_type class_ref 674946 // XMLGrammarDescription
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get the <code>XMLGrammarDescription</code> associated with this
object
"
      end
    end

    class 674946 "XMLGrammarDescription"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> This interface describes basic attributes of XML grammars--their
physical location and their type. </p>

@author Neil Graham, IBM
"
      classrelation 1897986 // <generalisation>
	relation 1897986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1897986 // <generalisation>
	  b parent class_ref 661634 // XMLResourceIdentifier
      end

      classrelation 1898114 // XML_SCHEMA (<unidirectional association>)
	relation 1898114 --->
	  a role_name "XML_SCHEMA" init_value " \"http://www.w3.org/2001/XMLSchema\"" class_relation const_relation public
	    comment " initial set of grammar constants that some configurations will recognize;user
 components which create and/or recognize other types of grammars may
 certainly use their own constants in place of these (so long as
 their Grammar objects implement this interface).

The grammar type constant for XML Schema grammars. When getGrammarType()
method returns this constant, the object should be an instance of
the XMLSchemaDescription interface.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898114 // XML_SCHEMA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1898242 // XML_DTD (<unidirectional association>)
	relation 1898242 --->
	  a role_name "XML_DTD" init_value " \"http://www.w3.org/TR/REC-xml\"" class_relation const_relation public
	    comment "
The grammar type constant for DTD grammars. When getGrammarType()
method returns this constant, the object should be an instance of
the XMLDTDDescription interface.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898242 // XML_DTD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4472450 "getGrammarType"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type of this grammar.

@return  the type of this grammar
"
      end
    end

    class 677122 "XMLGrammarLoader"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The intention of this interface is to provide a generic means
by which Grammar objects may be created without parsing instance
documents.  Implementations of this interface will know how to load
specific types of grammars (e.g., DTD's or schemas); a wrapper
will be provided for user applications to interact with these implementations.

@author Neil Graham, IBM
"
      operation 4455938 "getRecognizedFeatures"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of feature identifiers that are recognized by
this XMLGrammarLoader.  This method may return null if no features
are recognized.
"
      end

      operation 4456066 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "featureId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the state of a feature.

@param featureId The feature identifier.

@throws XMLConfigurationException Thrown on configuration error.
"
      end

      operation 4456194 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "featureId" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of a feature.

@param featureId The feature identifier.
@param state     The state of the feature.

@throws XMLConfigurationException Thrown when a feature is not
                 recognized or cannot be set.
"
      end

      operation 4456322 "getRecognizedProperties"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of property identifiers that are recognized by
this XMLGrammarLoader.  This method may return null if no properties
are recognized.
"
      end

      operation 4456450 "getProperty"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the state of a property.

@param propertyId The property identifier.

@throws XMLConfigurationException Thrown on configuration error.
"
      end

      operation 4456578 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyId" type class_ref 128130 // String
	  param inout name "state" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of a property.

@param propertyId The property identifier.
@param state     The state of the property.

@throws XMLConfigurationException Thrown when a property is not
                 recognized or cannot be set.
"
      end

      operation 4456706 "setLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the locale to use for messages.

@param locale The locale object to use for localization of messages.

@exception XNIException Thrown if the parser does not support the
                        specified locale.
"
      end

      operation 4456834 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the Locale the XMLGrammarLoader is using. "
      end

      operation 4456962 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 657922 // XMLErrorHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the error handler.

@param errorHandler The error handler.
"
      end

      operation 4457090 "getErrorHandler"
	public return_type class_ref 657922 // XMLErrorHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the registered error handler.  "
      end

      operation 4457218 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "entityResolver" type class_ref 658434 // XMLEntityResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the entity resolver.

@param entityResolver The new entity resolver.
"
      end

      operation 4457346 "getEntityResolver"
	public return_type class_ref 658434 // XMLEntityResolver
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the registered entity resolver.  "
      end

      operation 4457474 "loadGrammar"
	public return_type class_ref 674818 // Grammar
	nparams 1
	  param inout name "source" type class_ref 657666 // XMLInputSource
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 657794 // XNIException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Grammar object by parsing the contents of the
entity pointed to by source.

@param source        the location of the entity which forms
                         the starting point of the grammar to be constructed.
@throws IOException      When a problem is encountered reading the entity
         XNIException    When a condition arises (such as a FatalError) that requires parsing
                             of the entity be terminated.
"
      end
    end

    class 699138 "XSGrammar"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Representing a schema grammar. It contains declaratoin/definitions from
a certain namespace. When a grammar is preparsed, and its grammar type is
XML Schema, it can be casted to this interface. Objects of this interface
can be converted to XSModel, from which further information about components
in this grammar can be obtained.

@author Sandy Gao, IBM

"
      classrelation 1961602 // <generalisation>
	relation 1961602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1961602 // <generalisation>
	  b parent class_ref 674818 // Grammar
      end

      operation 4624770 "toXSModel"
	public return_type class_ref 664834 // XSModel
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an <code>XSModel</code> that represents components in this schema
grammar and any schema grammars that are imported by this grammar
directly or indirectly.

@return  an <code>XSModel</code> representing this schema grammar
"
      end

      operation 4624898 "toXSModel"
	public return_type class_ref 664834 // XSModel
	nparams 1
	  param inout name "grammars" type class_ref 699138 // XSGrammar
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an <code>XSModel</code> that represents components in this schema
grammar and the grammars in the <code>grammars</code>parameter,
any schema grammars that are imported by them directly or indirectly.

@return  an <code>XSModel</code> representing these schema grammars
"
      end
    end

    class 707330 "XMLSchemaDescription"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "All information specific to XML Schema grammars.

@author Sandy Gao, IBM

"
      classrelation 2016386 // <generalisation>
	relation 2016386 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2016386 // <generalisation>
	  b parent class_ref 674946 // XMLGrammarDescription
      end

      attribute 1044994 "CONTEXT_INCLUDE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " used to indicate what triggered the call

Indicate that the current schema document is &lt;include&gt;d by another
schema document.

"
      end

      attribute 1045122 "CONTEXT_REDEFINE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicate that the current schema document is &lt;redefine&gt;d by another
schema document.

"
      end

      attribute 1045250 "CONTEXT_IMPORT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicate that the current schema document is &lt;import&gt;ed by another
schema document.

"
      end

      attribute 1045378 "CONTEXT_PREPARSE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicate that the current schema document is being preparsed.

"
      end

      attribute 1045506 "CONTEXT_INSTANCE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicate that the parse of the current schema document is triggered
by xsi:schemaLocation/noNamespaceSchemaLocation attribute(s) in the
instance document. This value is only used if we don't defer the loading
of schema documents.

"
      end

      attribute 1045634 "CONTEXT_ELEMENT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicate that the parse of the current schema document is triggered by
the occurrence of an element whose namespace is the target namespace
of this schema document. This value is only used if we do defer the
loading of schema documents until a component from that namespace is
referenced from the instance.

"
      end

      attribute 1045762 "CONTEXT_ATTRIBUTE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicate that the parse of the current schema document is triggered by
the occurrence of an attribute whose namespace is the target namespace
of this schema document. This value is only used if we do defer the
loading of schema documents until a component from that namespace is
referenced from the instance.

"
      end

      attribute 1045890 "CONTEXT_XSITYPE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicate that the parse of the current schema document is triggered by
the occurrence of an \"xsi:type\" attribute, whose value (a QName) has
the target namespace of this schema document as its namespace.
This value is only used if we do defer the loading of schema documents
until a component from that namespace is referenced from the instance.

"
      end

      operation 4697090 "getContextType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the context. The returned value is one of the pre-defined
CONTEXT_xxx constants.

@return  the value indicating the context
"
      end

      operation 4697218 "getTargetNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the context is \"include\" or \"redefine\", then return the target
namespace of the enclosing schema document; otherwise, the expected
target namespace of this document.

@return  the expected/enclosing target namespace
"
      end

      operation 4697346 "getLocationHints"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For import and references from the instance document, it's possible to
have multiple hints for one namespace. So this method returns an array,
which contains all location hints.

@return  an array of all location hints associated to the expected
         target namespace
"
      end

      operation 4697474 "getTriggeringComponent"
	public return_type class_ref 661378 // QName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a call is triggered by an element/attribute/xsi:type in the instance,
this call returns the name of such triggering component: the name of
the element/attribute, or the value of the xsi:type.

@return  the name of the triggering component
"
      end

      operation 4697602 "getEnclosingElementName"
	public return_type class_ref 661378 // QName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a call is triggered by an attribute or xsi:type, then this method
returns the enclosing element of such element.

@return  the name of the enclosing element
"
      end

      operation 4697730 "getAttributes"
	public return_type class_ref 661506 // XMLAttributes
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a call is triggered by an element/attribute/xsi:type in the instance,
this call returns all attribute of such element (or enclosing element).

@return  all attributes of the tiggering/enclosing element
"
      end
    end
  end

  deploymentview 155266 "grammars"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 464898 "Grammar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 674818 // Grammar
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 465794 "XMLGrammarLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import java.io.IOException;
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 677122 // XMLGrammarLoader
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 467074 "XMLGrammarDescription"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
${definition}"
      associated_elems
	class_ref 674946 // XMLGrammarDescription
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 467202 "XMLDTDDescription"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 666242 // XMLDTDDescription
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 483714 "XSGrammar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xs.XSModel;
${definition}"
      associated_elems
	class_ref 699138 // XSGrammar
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 486914 "XMLSchemaDescription"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
${definition}"
      associated_elems
	class_ref 707330 // XMLSchemaDescription
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 488322 "XMLGrammarPool"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 662274 // XMLGrammarPool
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
