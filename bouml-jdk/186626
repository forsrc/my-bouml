format 222
"serial" // jdk1.8::javax::sql::rowset::serial
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/sql/rowset/serial/"
  java_package "javax.sql.rowset.serial"
  classview 179586 "serial"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1260418 "SerialArray"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A serialized version of an <code>Array</code>
object, which is the mapping in the Java programming language of an SQL
<code>ARRAY</code> value.
<P>
The <code>SerialArray</code> class provides a constructor for creating
a <code>SerialArray</code> instance from an <code>Array</code> object,
methods for getting the base type and the SQL name for the base type, and
methods for copying all or part of a <code>SerialArray</code> object.
<P>

Note: In order for this class to function correctly, a connection to the
data source
must be available in order for the SQL <code>Array</code> object to be
materialized (have all of its elements brought to the client server)
if necessary. At this time, logical pointers to the data in the data source,
such as locators, are not currently supported.

<h3> Thread safety </h3>

A SerialArray is not safe for use by multiple concurrent threads.  If a
SerialArray is to be used by more than one thread then access to the
SerialArray should be controlled by appropriate synchronization.

"
      classrelation 4050306 // <realization>
	relation 4050306 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4050306 // <realization>
	  b parent class_ref 1037058 // Array
      end

      classrelation 4050434 // <realization>
	relation 4050434 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4050434 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4050562 // <realization>
	relation 4050562 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4050562 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 4050690 // elements (<unidirectional association>)
	relation 4050690 --->
	  a role_name "elements" multiplicity "[]" private
	    comment "
A serialized array in which each element is an <code>Object</code>
in the Java programming language that represents an element
in the SQL <code>ARRAY</code> value.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4050690 // elements (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2372866 "baseType"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SQL type of the elements in this <code>SerialArray</code> object.  The
type is expressed as one of the constants from the class
<code>java.sql.Types</code>.
@serial

"
      end

      classrelation 4050818 // baseTypeName (<unidirectional association>)
	relation 4050818 --->
	  a role_name "baseTypeName" private
	    comment "
The type name used by the DBMS for the elements in the SQL <code>ARRAY</code>
value that this <code>SerialArray</code> object represents.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4050818 // baseTypeName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2372994 "len"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of elements in this <code>SerialArray</code> object, which
is also the number of elements in the SQL <code>ARRAY</code> value
that this <code>SerialArray</code> object represents.
@serial

"
      end

      operation 10378242 "SerialArray"
	public explicit_return_type ""
	nparams 2
	  param inout name "array" type class_ref 1037058 // Array
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SerialArray</code> object from the given
<code>Array</code> object, using the given type map for the custom
mapping of each element when the elements are SQL UDTs.
<P>
This method does custom mapping if the array elements are a UDT
and the given type map has an entry for that UDT.
Custom mapping is recursive,
meaning that if, for instance, an element of an SQL structured type
is an SQL structured type that itself has an element that is an SQL
structured type, each structured type that has a custom mapping will be
mapped according to the given type map.
<P>
The new <code>SerialArray</code>
object contains the same elements as the <code>Array</code> object
from which it is built, except when the base type is the SQL type
<code>STRUCT</code>, <code>ARRAY</code>, <code>BLOB</code>,
<code>CLOB</code>, <code>DATALINK</code> or <code>JAVA_OBJECT</code>.
In this case, each element in the new
<code>SerialArray</code> object is the appropriate serialized form,
that is, a <code>SerialStruct</code>, <code>SerialArray</code>,
<code>SerialBlob</code>, <code>SerialClob</code>,
<code>SerialDatalink</code>, or <code>SerialJavaObject</code> object.
<P>
Note: (1) The <code>Array</code> object from which a <code>SerialArray</code>
object is created must have materialized the SQL <code>ARRAY</code> value's
data on the client before it is passed to the constructor.  Otherwise,
the new <code>SerialArray</code> object will contain no data.
<p>
Note: (2) If the <code>Array</code> contains <code>java.sql.Types.JAVA_OBJECT</code>
types, the <code>SerialJavaObject</code> constructor is called where checks
are made to ensure this object is serializable.
<p>
Note: (3) The <code>Array</code> object supplied to this constructor cannot
return <code>null</code> for any <code>Array.getArray()</code> methods.
<code>SerialArray</code> cannot serialize null array values.


@param array the <code>Array</code> object to be serialized
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT (an SQL structured type or
       distinct type) and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped. The <i>map</i>
       parameter does not have any effect for <code>Blob</code>,
       <code>Clob</code>, <code>DATALINK</code>, or
       <code>JAVA_OBJECT</code> types.
@throws SerialException if an error occurs serializing the
       <code>Array</code> object
@throws SQLException if a database access error occurs or if the
       <i>array</i> or the <i>map</i> values are <code>null</code>
"
      end

      operation 10378370 "free"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method frees the {@code SeriableArray} object and releases the
resources that it holds. The object is invalid once the {@code free}
method is called. <p> If {@code free} is called multiple times, the
subsequent calls to {@code free} are treated as a no-op. </P>

@throws SQLException if an error occurs releasing the SerialArray's resources
@since 1.6
"
      end

      operation 10378498 "SerialArray"
	public explicit_return_type ""
	nparams 1
	  param inout name "array" type class_ref 1037058 // Array
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SerialArray</code> object from the given
<code>Array</code> object.
<P>
This constructor does not do custom mapping.  If the base type of the array
is an SQL structured type and custom mapping is desired, the constructor
<code>SerialArray(Array array, Map map)</code> should be used.
<P>
The new <code>SerialArray</code>
object contains the same elements as the <code>Array</code> object
from which it is built, except when the base type is the SQL type
<code>BLOB</code>,
<code>CLOB</code>, <code>DATALINK</code> or <code>JAVA_OBJECT</code>.
In this case, each element in the new
<code>SerialArray</code> object is the appropriate serialized form,
that is, a <code>SerialBlob</code>, <code>SerialClob</code>,
<code>SerialDatalink</code>, or <code>SerialJavaObject</code> object.
<P>
Note: (1) The <code>Array</code> object from which a <code>SerialArray</code>
object is created must have materialized the SQL <code>ARRAY</code> value's
data on the client before it is passed to the constructor.  Otherwise,
the new <code>SerialArray</code> object will contain no data.
<p>
Note: (2) The <code>Array</code> object supplied to this constructor cannot
return <code>null</code> for any <code>Array.getArray()</code> methods.
<code>SerialArray</code> cannot serialize <code>null</code> array values.

@param array the <code>Array</code> object to be serialized
@throws SerialException if an error occurs serializing the
    <code>Array</code> object
@throws SQLException if a database access error occurs or the
    <i>array</i> parameter is <code>null</code>.
"
      end

      operation 10378626 "getArray"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new array that is a copy of this <code>SerialArray</code>
object.

@return a copy of this <code>SerialArray</code> object as an
        <code>Object</code> in the Java programming language
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10378754 "getArray"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[if an error occurstype map used??]

Returns a new array that is a copy of this <code>SerialArray</code>
object, using the given type map for the custom
mapping of each element when the elements are SQL UDTs.
<P>
This method does custom mapping if the array elements are a UDT
and the given type map has an entry for that UDT.
Custom mapping is recursive,
meaning that if, for instance, an element of an SQL structured type
is an SQL structured type that itself has an element that is an SQL
structured type, each structured type that has a custom mapping will be
mapped according to the given type map.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return a copy of this <code>SerialArray</code> object as an
        <code>Object</code> in the Java programming language
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10378882 "getArray"
	public return_type class_ref 129538 // Object
	nparams 2
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new array that is a copy of a slice
of this <code>SerialArray</code> object, starting with the
element at the given index and containing the given number
of consecutive elements.

@param index the index into this <code>SerialArray</code> object
             of the first element to be copied;
             the index of the first element is <code>0</code>
@param count the number of consecutive elements to be copied, starting
             at the given index
@return a copy of the designated elements in this <code>SerialArray</code>
        object as an <code>Object</code> in the Java programming language
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10379010 "getArray"
	public return_type class_ref 129538 // Object
	nparams 3
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,Class<?>> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new array that is a copy of a slice
of this <code>SerialArray</code> object, starting with the
element at the given index and containing the given number
of consecutive elements.
<P>
This method does custom mapping if the array elements are a UDT
and the given type map has an entry for that UDT.
Custom mapping is recursive,
meaning that if, for instance, an element of an SQL structured type
is an SQL structured type that itself has an element that is an SQL
structured type, each structured type that has a custom mapping will be
mapped according to the given type map.

@param index the index into this <code>SerialArray</code> object
             of the first element to be copied; the index of the
             first element in the array is <code>0</code>
@param count the number of consecutive elements to be copied, starting
             at the given index
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return a copy of the designated elements in this <code>SerialArray</code>
        object as an <code>Object</code> in the Java programming language
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10379138 "getBaseType"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the SQL type of the elements in this <code>SerialArray</code>
object.  The <code>int</code> returned is one of the constants in the class
<code>java.sql.Types</code>.

@return one of the constants in <code>java.sql.Types</code>, indicating
        the SQL type of the elements in this <code>SerialArray</code> object
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10379266 "getBaseTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the DBMS-specific type name for the elements in this
<code>SerialArray</code> object.

@return the SQL type name used by the DBMS for the base type of this
        <code>SerialArray</code> object
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10379394 "getResultSet"
	public return_type class_ref 1037314 // ResultSet
	nparams 2
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a <code>ResultSet</code> object holding the elements of
the subarray that starts at
index <i>index</i> and contains up to <i>count</i> successive elements.
This method uses the connection's type map to map the elements of
the array if the map contains
an entry for the base type. Otherwise, the standard mapping is used.

@param index the index into this <code>SerialArray</code> object
        of the first element to be copied; the index of the
        first element in the array is <code>0</code>
@param count the number of consecutive elements to be copied, starting
        at the given index
@return a <code>ResultSet</code> object containing the designated
        elements in this <code>SerialArray</code> object, with a
        separate row for each element
@throws SerialException if called with the cause set to
        {@code UnsupportedOperationException}
"
      end

      operation 10379522 "getResultSet"
	public return_type class_ref 1037314 // ResultSet
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieves a <code>ResultSet</code> object that contains all of
the elements of the SQL <code>ARRAY</code>
value represented by this <code>SerialArray</code> object. This method uses
the specified map for type map customizations unless the base type of the
array does not match a user-defined type (UDT) in <i>map</i>, in
which case it uses the
standard mapping. This version of the method <code>getResultSet</code>
uses either the given type map or the standard mapping; it never uses the
type map associated with the connection.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return a <code>ResultSet</code> object containing all of the
        elements in this <code>SerialArray</code> object, with a
        separate row for each element
@throws SerialException if called with the cause set to
        {@code UnsupportedOperationException}
"
      end

      operation 10379650 "getResultSet"
	public return_type class_ref 1037314 // ResultSet
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a <code>ResultSet</code> object that contains all of
the elements in the <code>ARRAY</code> value that this
<code>SerialArray</code> object represents.
If appropriate, the elements of the array are mapped using the connection's
type map; otherwise, the standard mapping is used.

@return a <code>ResultSet</code> object containing all of the
        elements in this <code>SerialArray</code> object, with a
        separate row for each element
@throws SerialException if called with the cause set to
        {@code UnsupportedOperationException}
"
      end

      operation 10379778 "getResultSet"
	public return_type class_ref 1037314 // ResultSet
	nparams 3
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,Class<?>> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a result set holding the elements of the subarray that starts at
Retrieves a <code>ResultSet</code> object that contains a subarray of the
elements in this <code>SerialArray</code> object, starting at
index <i>index</i> and containing up to <i>count</i> successive
elements. This method uses
the specified map for type map customizations unless the base type of the
array does not match a user-defined type (UDT) in <i>map</i>, in
which case it uses the
standard mapping. This version of the method <code>getResultSet</code> uses
either the given type map or the standard mapping; it never uses the type
map associated with the connection.

@param index the index into this <code>SerialArray</code> object
             of the first element to be copied; the index of the
             first element in the array is <code>0</code>
@param count the number of consecutive elements to be copied, starting
             at the given index
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return a <code>ResultSet</code> object containing the designated
        elements in this <code>SerialArray</code> object, with a
        separate row for each element
@throws SerialException if called with the cause set to
        {@code UnsupportedOperationException}
"
      end

      operation 10379906 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this SerialArray to the specified object.  The result is {@code
true} if and only if the argument is not {@code null} and is a {@code
SerialArray} object whose elements are identical to this object's elements

@param  obj The object to compare this {@code SerialArray} against

@return  {@code true} if the given object represents a {@code SerialArray}
         equivalent to this SerialArray, {@code false} otherwise

"
      end

      operation 10380034 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this SerialArray. The hash code for a
{@code SerialArray} object is computed using the hash codes
of the elements of the  {@code SerialArray} object

@return  a hash code value for this object.
"
      end

      operation 10380162 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this {@code SerialArray}. The copy will contain a
reference to a clone of the underlying objects array, not a reference
to the original underlying object array of this {@code SerialArray} object.

@return a clone of this SerialArray
"
      end

      operation 10380290 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the {@code SerialArray} from
a stream.
"
      end

      operation 10380418 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "writeObject is called to save the state of the {@code SerialArray}
to a stream.
"
      end

      operation 10380546 "isValid"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to see if this object had previously had its {@code free} method
called

@throws SerialException
"
      end

      attribute 2373122 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8466174297270688520L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier that assists in the serialization of this <code>SerialArray</code>
object.

"
      end
    end

    class 1260546 "SerialException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates and an error with the serialization or de-serialization of
SQL types such as <code>BLOB, CLOB, STRUCT or ARRAY</code> in
addition to SQL types such as <code>DATALINK and JAVAOBJECT</code>

"
      classrelation 4052482 // <generalisation>
	relation 4052482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4052482 // <generalisation>
	  b parent class_ref 1037186 // SQLException
      end

      operation 10386434 "SerialException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SerialException</code> without a
message.
"
      end

      operation 10386562 "SerialException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SerialException</code> with the
specified message.

@param msg the detail message
"
      end

      attribute 2374530 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -489794565168592690L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1260674 "SerialBlob"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A serialized mapping in the Java programming language of an SQL
<code>BLOB</code> value.
<P>
The <code>SerialBlob</code> class provides a constructor for creating
an instance from a <code>Blob</code> object.  Note that the
<code>Blob</code>
object should have brought the SQL <code>BLOB</code> value's data over
to the client before a <code>SerialBlob</code> object
is constructed from it.  The data of an SQL <code>BLOB</code> value can
be materialized on the client as an array of bytes (using the method
<code>Blob.getBytes</code>) or as a stream of uninterpreted bytes
(using the method <code>Blob.getBinaryStream</code>).
<P>
<code>SerialBlob</code> methods make it possible to make a copy of a
<code>SerialBlob</code> object as an array of bytes or as a stream.
They also make it possible to locate a given pattern of bytes or a
<code>Blob</code> object within a <code>SerialBlob</code> object
and to update or truncate a <code>Blob</code> object.

<h3> Thread safety </h3>

<p> A SerialBlob is not safe for use by multiple concurrent threads.  If a
SerialBlob is to be used by more than one thread then access to the SerialBlob
should be controlled by appropriate synchronization.

@author Jonathan Bruce
"
      classrelation 4050946 // <realization>
	relation 4050946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4050946 // <realization>
	  b parent class_ref 1037570 // Blob
      end

      classrelation 4051074 // <realization>
	relation 4051074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4051074 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4051202 // <realization>
	relation 4051202 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4051202 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 2373250 "buf"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A serialized array of uninterpreted bytes representing the
value of this <code>SerialBlob</code> object.
@serial

"
      end

      classrelation 4051330 // blob (<unidirectional association>)
	relation 4051330 --->
	  a role_name "blob" private
	    comment "
The internal representation of the <code>Blob</code> object on which this
<code>SerialBlob</code> object is based.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4051330 // blob (<unidirectional association>)
	  b parent class_ref 1037570 // Blob
      end

      attribute 2373378 "len"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes in this <code>SerialBlob</code> object's
array of bytes.
@serial

"
      end

      attribute 2373506 "origLen"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The original number of bytes in this <code>SerialBlob</code> object's
array of bytes when it was first established.
@serial

"
      end

      operation 10380674 "SerialBlob"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialBlob</code> object that is a serialized version of
the given <code>byte</code> array.
<p>
The new <code>SerialBlob</code> object is initialized with the data from the
<code>byte</code> array, thus allowing disconnected <code>RowSet</code>
objects to establish serialized <code>Blob</code> objects without
touching the data source.

@param b the <code>byte</code> array containing the data for the
       <code>Blob</code> object to be serialized
@throws SerialException if an error occurs during serialization
@throws SQLException if a SQL errors occurs
"
      end

      operation 10380802 "SerialBlob"
	public explicit_return_type ""
	nparams 1
	  param inout name "blob" type class_ref 1037570 // Blob
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialBlob</code> object that is a serialized
version of the given <code>Blob</code> object.
<P>
The new <code>SerialBlob</code> object is initialized with the
data from the <code>Blob</code> object; therefore, the
<code>Blob</code> object should have previously brought the
SQL <code>BLOB</code> value's data over to the client from
the database. Otherwise, the new <code>SerialBlob</code> object
will contain no data.

@param blob the <code>Blob</code> object from which this
    <code>SerialBlob</code> object is to be constructed;
    cannot be null.
@throws SerialException if an error occurs during serialization
@throws SQLException if the <code>Blob</code> passed to this
    to this constructor is a <code>null</code>.
@see java.sql.Blob
"
      end

      operation 10380930 "getBytes"
	public explicit_return_type "byte"
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified number of bytes, starting at the given
position, from this <code>SerialBlob</code> object to
another array of bytes.
<P>
Note that if the given number of bytes to be copied is larger than
the length of this <code>SerialBlob</code> object's array of
bytes, the given number will be shortened to the array's length.

@param pos the ordinal position of the first byte in this
           <code>SerialBlob</code> object to be copied;
           numbering starts at <code>1</code>; must not be less
           than <code>1</code> and must be less than or equal
           to the length of this <code>SerialBlob</code> object
@param length the number of bytes to be copied
@return an array of bytes that is a copy of a region of this
        <code>SerialBlob</code> object, starting at the given
        position and containing the given number of consecutive bytes
@throws SerialException if the given starting position is out of bounds;
if {@code free} had previously been called on this object
"
      end

      operation 10381058 "length"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the number of bytes in this <code>SerialBlob</code>
object's array of bytes.

@return a <code>long</code> indicating the length in bytes of this
        <code>SerialBlob</code> object's array of bytes
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10381186 "getBinaryStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this <code>SerialBlob</code> object as an input stream.
Unlike the related method, <code>setBinaryStream</code>,
a stream is produced regardless of whether the <code>SerialBlob</code>
was created with a <code>Blob</code> object or a <code>byte</code> array.

@return a <code>java.io.InputStream</code> object that contains
        this <code>SerialBlob</code> object's array of bytes
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
@see #setBinaryStream
"
      end

      operation 10381314 "position"
	public explicit_return_type "long"
	nparams 2
	  param inout name "pattern" explicit_type "byte"
	multiplicity "[]"
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialBlob</code> object where
the given pattern of bytes begins, starting the search at the
specified position.

@param pattern the pattern of bytes for which to search
@param start the position of the byte in this
             <code>SerialBlob</code> object from which to begin
             the search; the first position is <code>1</code>;
             must not be less than <code>1</code> nor greater than
             the length of this <code>SerialBlob</code> object
@return the position in this <code>SerialBlob</code> object
        where the given pattern begins, starting at the specified
        position; <code>-1</code> if the pattern is not found
        or the given starting position is out of bounds; position
        numbering for the return value starts at <code>1</code>
@throws SerialException if an error occurs when serializing the blob;
if {@code free} had previously been called on this object
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database
"
      end

      operation 10381442 "position"
	public explicit_return_type "long"
	nparams 2
	  param inout name "pattern" type class_ref 1037570 // Blob
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialBlob</code> object where
the given <code>Blob</code> object begins, starting the search at the
specified position.

@param pattern the <code>Blob</code> object for which to search;
@param start the position of the byte in this
             <code>SerialBlob</code> object from which to begin
             the search; the first position is <code>1</code>;
             must not be less than <code>1</code> nor greater than
             the length of this <code>SerialBlob</code> object
@return the position in this <code>SerialBlob</code> object
        where the given <code>Blob</code> object begins, starting
        at the specified position; <code>-1</code> if the pattern is
        not found or the given starting position is out of bounds;
        position numbering for the return value starts at <code>1</code>
@throws SerialException if an error occurs when serializing the blob;
if {@code free} had previously been called on this object
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database
"
      end

      operation 10381570 "setBytes"
	public explicit_return_type "int"
	nparams 2
	  param in name "pos" explicit_type "long"
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the given array of bytes to the <code>BLOB</code> value that
this <code>Blob</code> object represents, starting at position
<code>pos</code>, and returns the number of bytes written.

@param pos the position in the SQL <code>BLOB</code> value at which
    to start writing. The first position is <code>1</code>;
    must not be less than <code>1</code> nor greater than
    the length of this <code>SerialBlob</code> object.
@param bytes the array of bytes to be written to the <code>BLOB</code>
       value that this <code>Blob</code> object represents
@return the number of bytes written
@throws SerialException if there is an error accessing the
    <code>BLOB</code> value; or if an invalid position is set; if an
    invalid offset value is set;
if {@code free} had previously been called on this object
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database
@see #getBytes
"
      end

      operation 10381698 "setBytes"
	public explicit_return_type "int"
	nparams 4
	  param in name "pos" explicit_type "long"
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes all or part of the given <code>byte</code> array to the
<code>BLOB</code> value that this <code>Blob</code> object represents
and returns the number of bytes written.
Writing starts at position <code>pos</code> in the <code>BLOB</code>
value; <i>len</i> bytes from the given byte array are written.

@param pos the position in the <code>BLOB</code> object at which
    to start writing. The first position is <code>1</code>;
    must not be less than <code>1</code> nor greater than
    the length of this <code>SerialBlob</code> object.
@param bytes the array of bytes to be written to the <code>BLOB</code>
    value
@param offset the offset in the <code>byte</code> array at which
    to start reading the bytes. The first offset position is
    <code>0</code>; must not be less than <code>0</code> nor greater
    than the length of the <code>byte</code> array
@param length the number of bytes to be written to the
    <code>BLOB</code> value from the array of bytes <i>bytes</i>.

@return the number of bytes written
@throws SerialException if there is an error accessing the
    <code>BLOB</code> value; if an invalid position is set; if an
    invalid offset value is set; if number of bytes to be written
    is greater than the <code>SerialBlob</code> length; or the combined
    values of the length and offset is greater than the Blob buffer;
if {@code free} had previously been called on this object
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database.
@see #getBytes
"
      end

      operation 10381826 "setBinaryStream"
	public return_type class_ref 151298 // OutputStream
	nparams 1
	  param in name "pos" explicit_type "long"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a stream that can be used to write to the <code>BLOB</code>
value that this <code>Blob</code> object represents.  The stream begins
at position <code>pos</code>. This method forwards the
<code>setBinaryStream()</code> call to the underlying <code>Blob</code> in
the event that this <code>SerialBlob</code> object is instantiated with a
<code>Blob</code>. If this <code>SerialBlob</code> is instantiated with
a <code>byte</code> array, a <code>SerialException</code> is thrown.

@param pos the position in the <code>BLOB</code> value at which
       to start writing
@return a <code>java.io.OutputStream</code> object to which data can
        be written
@throws SQLException if there is an error accessing the
           <code>BLOB</code> value
@throws SerialException if the SerialBlob in not instantiated with a
    <code>Blob</code> object that supports <code>setBinaryStream()</code>;
if {@code free} had previously been called on this object
@see #getBinaryStream
"
      end

      operation 10381954 "truncate"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "long"
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Truncates the <code>BLOB</code> value that this <code>Blob</code>
object represents to be <code>len</code> bytes in length.

@param length the length, in bytes, to which the <code>BLOB</code>
       value that this <code>Blob</code> object represents should be
       truncated
@throws SerialException if there is an error accessing the Blob value;
    or the length to truncate is greater that the SerialBlob length;
if {@code free} had previously been called on this object
"
      end

      operation 10382082 "getBinaryStream"
	public return_type class_ref 146434 // InputStream
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "length" explicit_type "long"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an
<code>InputStream</code> object that contains a partial
{@code Blob} value, starting with the byte specified by pos, which is
length bytes in length.

@param pos the offset to the first byte of the partial value to be
retrieved. The first byte in the {@code Blob} is at position 1
@param length the length in bytes of the partial value to be retrieved
@return
<code>InputStream</code> through which the partial {@code Blob} value can
be read.
@throws SQLException if pos is less than 1 or if pos is greater than the
number of bytes in the {@code Blob} or if pos + length is greater than
the number of bytes in the {@code Blob}
@throws SerialException if the {@code free} method had been previously
called on this object

@since 1.6
"
      end

      operation 10382210 "free"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method frees the {@code SeriableBlob} object and releases the
resources that it holds. The object is invalid once the {@code free}
method is called. <p> If {@code free} is called multiple times, the
subsequent calls to {@code free} are treated as a no-op. </P>

@throws SQLException if an error occurs releasing the Blob's resources
@since 1.6
"
      end

      operation 10382338 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this SerialBlob to the specified object.  The result is {@code
true} if and only if the argument is not {@code null} and is a {@code
SerialBlob} object that represents the same sequence of bytes as this
object.

@param  obj The object to compare this {@code SerialBlob} against

@return {@code true} if the given object represents a {@code SerialBlob}
         equivalent to this SerialBlob, {@code false} otherwise

"
      end

      operation 10382466 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this {@code SerialBlob}.
@return  a hash code value for this object.
"
      end

      operation 10382594 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this {@code SerialBlob}. The copy will contain a
reference to a clone of the internal byte array, not a reference
to the original internal byte array of this {@code SerialBlob} object.
The underlying {@code Blob} object will be set to null.

@return  a clone of this SerialBlob
"
      end

      operation 10382722 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the SerialBlob from
a stream.
"
      end

      operation 10382850 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "writeObject is called to save the state of the SerialBlob
to a stream.
"
      end

      operation 10382978 "isValid"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to see if this object had previously had its {@code free} method
called

@throws SerialException
"
      end

      attribute 2373634 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8144641928112860441L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier that assists in the serialization of this
{@code SerialBlob} object.

"
      end
    end

    class 1260802 "SerialClob"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A serialized mapping in the Java programming language of an SQL
<code>CLOB</code> value.
<P>
The <code>SerialClob</code> class provides a constructor for creating
an instance from a <code>Clob</code> object.  Note that the <code>Clob</code>
object should have brought the SQL <code>CLOB</code> value's data over
to the client before a <code>SerialClob</code> object
is constructed from it.  The data of an SQL <code>CLOB</code> value can
be materialized on the client as a stream of Unicode characters.
<P>
<code>SerialClob</code> methods make it possible to get a substring
from a <code>SerialClob</code> object or to locate the start of
a pattern of characters.

<h3> Thread safety </h3>

<p> A SerialClob is not safe for use by multiple concurrent threads.  If a
SerialClob is to be used by more than one thread then access to the SerialClob
should be controlled by appropriate synchronization.
@author Jonathan Bruce
"
      classrelation 4051458 // <realization>
	relation 4051458 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4051458 // <realization>
	  b parent class_ref 1038978 // Clob
      end

      classrelation 4051586 // <realization>
	relation 4051586 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4051586 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4051714 // <realization>
	relation 4051714 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4051714 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 2373762 "buf"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A serialized array of characters containing the data of the SQL
<code>CLOB</code> value that this <code>SerialClob</code> object
represents.

@serial

"
      end

      classrelation 4051842 // clob (<unidirectional association>)
	relation 4051842 --->
	  a role_name "clob" private
	    comment "
Internal Clob representation if SerialClob is initialized with a
Clob. Null if SerialClob is initialized with a char[].

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4051842 // clob (<unidirectional association>)
	  b parent class_ref 1038978 // Clob
      end

      attribute 2373890 "len"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The length in characters of this <code>SerialClob</code> object's
internal array of characters.

@serial

"
      end

      attribute 2374018 "origLen"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The original length in characters of this <code>SerialClob</code>
object's internal array of characters.

@serial

"
      end

      operation 10383106 "SerialClob"
	public explicit_return_type ""
	nparams 1
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialClob</code> object that is a serialized version of
the given <code>char</code> array.
<p>
The new <code>SerialClob</code> object is initialized with the data from the
<code>char</code> array, thus allowing disconnected <code>RowSet</code>
objects to establish a serialized <code>Clob</code> object without touching
the data source.

@param ch the char array representing the <code>Clob</code> object to be
        serialized
@throws SerialException if an error occurs during serialization
@throws SQLException if a SQL error occurs
"
      end

      operation 10383234 "SerialClob"
	public explicit_return_type ""
	nparams 1
	  param inout name "clob" type class_ref 1038978 // Clob
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialClob</code> object that is a serialized
version of the given <code>Clob</code> object.
<P>
The new <code>SerialClob</code> object is initialized with the
data from the <code>Clob</code> object; therefore, the
<code>Clob</code> object should have previously brought the
SQL <code>CLOB</code> value's data over to the client from
the database. Otherwise, the new <code>SerialClob</code> object
object will contain no data.
<p>
Note: The <code>Clob</code> object supplied to this constructor must
return non-null for both the <code>Clob.getCharacterStream()</code>
and <code>Clob.getAsciiStream</code> methods. This <code>SerialClob</code>
constructor cannot serialize a <code>Clob</code> object in this instance
and will throw an <code>SQLException</code> object.

@param  clob the <code>Clob</code> object from which this
    <code>SerialClob</code> object is to be constructed; cannot be null
@throws SerialException if an error occurs during serialization
@throws SQLException if a SQL error occurs in capturing the CLOB;
    if the <code>Clob</code> object is a null; or if either of the
    <code>Clob.getCharacterStream()</code> and <code>Clob.getAsciiStream()</code>
    methods on the <code>Clob</code> returns a null
@see java.sql.Clob
"
      end

      operation 10383362 "length"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the number of characters in this <code>SerialClob</code>
object's array of characters.

@return a <code>long</code> indicating the length in characters of this
        <code>SerialClob</code> object's array of character
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10383490 "getCharacterStream"
	public return_type class_ref 407298 // Reader
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this <code>SerialClob</code> object's data as a stream
of Unicode characters. Unlike the related method, <code>getAsciiStream</code>,
a stream is produced regardless of whether the <code>SerialClob</code> object
was created with a <code>Clob</code> object or a <code>char</code> array.

@return a <code>java.io.Reader</code> object containing this
        <code>SerialClob</code> object's data
@throws SerialException if an error occurs;
if {@code free} had previously been called on this object
"
      end

      operation 10383618 "getAsciiStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the <code>CLOB</code> value designated by this <code>SerialClob</code>
object as an ascii stream. This method forwards the <code>getAsciiStream</code>
call to the underlying <code>Clob</code> object in the event that this
<code>SerialClob</code> object is instantiated with a <code>Clob</code>
object. If this <code>SerialClob</code> object is instantiated with
a <code>char</code> array, a <code>SerialException</code> object is thrown.

@return a <code>java.io.InputStream</code> object containing
    this <code>SerialClob</code> object's data
@throws SerialException if this {@code SerialClob} object was not
instantiated with a <code>Clob</code> object;
if {@code free} had previously been called on this object
@throws SQLException if there is an error accessing the
    <code>CLOB</code> value represented by the <code>Clob</code> object
that was used to create this <code>SerialClob</code> object
"
      end

      operation 10383746 "getSubString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the substring contained in this
<code>SerialClob</code> object, starting at the given position
and continuing for the specified number or characters.

@param pos the position of the first character in the substring
           to be copied; the first character of the
           <code>SerialClob</code> object is at position
           <code>1</code>; must not be less than <code>1</code>,
           and the sum of the starting position and the length
           of the substring must be less than the length of this
           <code>SerialClob</code> object
@param length the number of characters in the substring to be
              returned; must not be greater than the length of
              this <code>SerialClob</code> object, and the
              sum of the starting position and the length
              of the substring must be less than the length of this
              <code>SerialClob</code> object
@return a <code>String</code> object containing a substring of
        this <code>SerialClob</code> object beginning at the
        given position and containing the specified number of
        consecutive characters
@throws SerialException if either of the arguments is out of bounds;
if {@code free} had previously been called on this object
"
      end

      operation 10383874 "position"
	public explicit_return_type "long"
	nparams 2
	  param inout name "searchStr" type class_ref 128130 // String
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialClob</code> object
where the given <code>String</code> object begins, starting
the search at the specified position. This method returns
<code>-1</code> if the pattern is not found.

@param searchStr the <code>String</code> object for which to
                 search
@param start the position in this <code>SerialClob</code> object
        at which to start the search; the first position is
        <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object
@return the position at which the given <code>String</code> object
        begins, starting the search at the specified position;
        <code>-1</code> if the given <code>String</code> object is
        not found or the starting position is out of bounds; position
        numbering for the return value starts at <code>1</code>
@throws SerialException  if the {@code free} method had been
previously called on this object
@throws SQLException if there is an error accessing the Clob value
        from the database.
"
      end

      operation 10384002 "position"
	public explicit_return_type "long"
	nparams 2
	  param inout name "searchStr" type class_ref 1038978 // Clob
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialClob</code> object
where the given <code>Clob</code> signature begins, starting
the search at the specified position. This method returns
<code>-1</code> if the pattern is not found.

@param searchStr the <code>Clob</code> object for which to search
@param start the position in this <code>SerialClob</code> object
       at which to begin the search; the first position is
        <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object
@return the position at which the given <code>Clob</code>
        object begins in this <code>SerialClob</code> object,
        at or after the specified starting position
@throws SerialException if an error occurs locating the Clob signature;
if the {@code free} method had been previously called on this object
@throws SQLException if there is an error accessing the Clob value
        from the database
"
      end

      operation 10384130 "setString"
	public explicit_return_type "int"
	nparams 2
	  param in name "pos" explicit_type "long"
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the given Java <code>String</code> to the <code>CLOB</code>
value that this <code>SerialClob</code> object represents, at the position
<code>pos</code>.

@param pos the position at which to start writing to the <code>CLOB</code>
        value that this <code>SerialClob</code> object represents; the first
        position is <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object
@param str the string to be written to the <code>CLOB</code>
       value that this <code>SerialClob</code> object represents
@return the number of characters written
@throws SerialException if there is an error accessing the
    <code>CLOB</code> value; if an invalid position is set; if an
    invalid offset value is set; if number of bytes to be written
    is greater than the <code>SerialClob</code> length; or the combined
    values of the length and offset is greater than the Clob buffer;
if the {@code free} method had been previously called on this object
"
      end

      operation 10384258 "setString"
	public explicit_return_type "int"
	nparams 4
	  param in name "pos" explicit_type "long"
	  param inout name "str" type class_ref 128130 // String
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes <code>len</code> characters of <code>str</code>, starting
at character <code>offset</code>, to the <code>CLOB</code> value
that this <code>Clob</code> represents.

@param pos the position at which to start writing to the <code>CLOB</code>
        value that this <code>SerialClob</code> object represents; the first
        position is <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object
@param str the string to be written to the <code>CLOB</code>
       value that this <code>Clob</code> object represents
@param offset the offset into <code>str</code> to start reading
       the characters to be written
@param length the number of characters to be written
@return the number of characters written
@throws SerialException if there is an error accessing the
    <code>CLOB</code> value; if an invalid position is set; if an
    invalid offset value is set; if number of bytes to be written
    is greater than the <code>SerialClob</code> length; or the combined
    values of the length and offset is greater than the Clob buffer;
if the {@code free} method had been previously called on this object
"
      end

      operation 10384386 "setAsciiStream"
	public return_type class_ref 151298 // OutputStream
	nparams 1
	  param in name "pos" explicit_type "long"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a stream to be used to write Ascii characters to the
<code>CLOB</code> value that this <code>SerialClob</code> object represents,
starting at position <code>pos</code>. This method forwards the
<code>setAsciiStream()</code> call to the underlying <code>Clob</code> object in
the event that this <code>SerialClob</code> object is instantiated with a
<code>Clob</code> object. If this <code>SerialClob</code> object is instantiated
 with a <code>char</code> array, a <code>SerialException</code> object is thrown.

@param pos the position at which to start writing to the
       <code>CLOB</code> object
@return the stream to which ASCII encoded characters can be written
@throws SerialException if SerialClob is not instantiated with a
    Clob object;
if the {@code free} method had been previously called on this object
@throws SQLException if there is an error accessing the
    <code>CLOB</code> value
@see #getAsciiStream
"
      end

      operation 10384514 "setCharacterStream"
	public return_type class_ref 428034 // Writer
	nparams 1
	  param in name "pos" explicit_type "long"
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a stream to be used to write a stream of Unicode characters
to the <code>CLOB</code> value that this <code>SerialClob</code> object
represents, at position <code>pos</code>. This method forwards the
<code>setCharacterStream()</code> call to the underlying <code>Clob</code>
object in the event that this <code>SerialClob</code> object is instantiated with a
<code>Clob</code> object. If this <code>SerialClob</code> object is instantiated with
a <code>char</code> array, a <code>SerialException</code> is thrown.

@param  pos the position at which to start writing to the
       <code>CLOB</code> value

@return a stream to which Unicode encoded characters can be written
@throws SerialException if the SerialClob is not instantiated with
    a Clob object;
if the {@code free} method had been previously called on this object
@throws SQLException if there is an error accessing the
           <code>CLOB</code> value
@see #getCharacterStream
"
      end

      operation 10384642 "truncate"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "long"
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Truncates the <code>CLOB</code> value that this <code>SerialClob</code>
object represents so that it has a length of <code>len</code>
characters.
<p>
Truncating a <code>SerialClob</code> object to length 0 has the effect of
clearing its contents.

@param length the length, in bytes, to which the <code>CLOB</code>
       value should be truncated
@throws SerialException if there is an error accessing the
       <code>CLOB</code> value;
if the {@code free} method had been previously called on this object
"
      end

      operation 10384770 "getCharacterStream"
	public return_type class_ref 407298 // Reader
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "length" explicit_type "long"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Reader} object that contains a partial
{@code SerialClob} value, starting
with the character specified by pos, which is length characters in length.

@param pos the offset to the first character of the partial value to
be retrieved.  The first character in the {@code SerialClob} is at position 1.
@param length the length in characters of the partial value to be retrieved.
@return {@code Reader} through which the partial {@code SerialClob}
value can be read.
@throws SQLException if pos is less than 1 or if pos is greater than the
number of characters in the {@code SerialClob} or if pos + length
is greater than the number of characters in the {@code SerialClob};
@throws SerialException if the {@code free} method had been previously
called on this object
@since 1.6
"
      end

      operation 10384898 "free"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method frees the {@code SeriableClob} object and releases the
resources that it holds.
The object is invalid once the {@code free} method is called.
<p>
If {@code free} is called multiple times, the subsequent
calls to {@code free} are treated as a no-op.
</P>
@throws SQLException if an error occurs releasing
the Clob's resources
@since 1.6
"
      end

      operation 10385026 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this SerialClob to the specified object.  The result is {@code
true} if and only if the argument is not {@code null} and is a {@code
SerialClob} object that represents the same sequence of characters as this
object.

@param  obj The object to compare this {@code SerialClob} against

@return  {@code true} if the given object represents a {@code SerialClob}
         equivalent to this SerialClob, {@code false} otherwise

"
      end

      operation 10385154 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this {@code SerialClob}.
@return  a hash code value for this object.
"
      end

      operation 10385282 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this {@code SerialClob}. The copy will contain a
reference to a clone of the internal character array, not a reference
to the original internal character array of this {@code SerialClob} object.
The underlying {@code Clob} object will be set to null.

@return  a clone of this SerialClob
"
      end

      operation 10385410 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the SerialClob from
a stream.
"
      end

      operation 10385538 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "writeObject is called to save the state of the SerialClob
to a stream.
"
      end

      operation 10385666 "isValid"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to see if this object had previously had its {@code free} method
called

@throws SerialException
"
      end

      attribute 2374146 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1662519690087375313L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier that assists in the serialization of this {@code SerialClob}
object.

"
      end
    end

    class 1260930 "SerialDatalink"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A serialized mapping in the Java programming language of an SQL
<code>DATALINK</code> value. A <code>DATALINK</code> value
references a file outside of the underlying data source that the
data source manages.
<P>
<code>RowSet</code> implementations can use the method <code>RowSet.getURL</code>
to retrieve a <code>java.net.URL</code> object, which can be used
to manipulate the external data.
<pre>
     java.net.URL url = rowset.getURL(1);
</pre>

<h3> Thread safety </h3>

A SerialDatalink is not safe for use by multiple concurrent threads.  If a
SerialDatalink is to be used by more than one thread then access to the
SerialDatalink should be controlled by appropriate synchronization.
"
      classrelation 4051970 // <realization>
	relation 4051970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4051970 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4052098 // <realization>
	relation 4052098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4052098 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 4052226 // url (<unidirectional association>)
	relation 4052226 --->
	  a role_name "url" private
	    comment "
The extracted URL field retrieved from the DATALINK field.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4052226 // url (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      attribute 2374274 "baseType"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The SQL type of the elements in this <code>SerialDatalink</code>
object.  The type is expressed as one of the contants from the
class <code>java.sql.Types</code>.
@serial

"
      end

      classrelation 4052354 // baseTypeName (<unidirectional association>)
	relation 4052354 --->
	  a role_name "baseTypeName" private
	    comment "
The type name used by the DBMS for the elements in the SQL
<code>DATALINK</code> value that this SerialDatalink object
represents.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4052354 // baseTypeName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 10385794 "SerialDatalink"
	public explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SerialDatalink</code> object from the given
<code>java.net.URL</code> object.
<P>
@param url the {@code URL} to create the {@code SerialDataLink} from
@throws SerialException if url parameter is a null
"
      end

      operation 10385922 "getDatalink"
	public return_type class_ref 243458 // URL
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new URL that is a copy of this <code>SerialDatalink</code>
object.

@return a copy of this <code>SerialDatalink</code> object as a
<code>URL</code> object in the Java programming language.
@throws SerialException if the <code>URL</code> object cannot be de-serialized
"
      end

      operation 10386050 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this {@code SerialDatalink} to the specified object.
The result is {@code true} if and only if the argument is not
{@code null} and is a {@code SerialDatalink} object whose URL is
identical to this object's URL

@param  obj The object to compare this {@code SerialDatalink} against

@return  {@code true} if the given object represents a {@code SerialDatalink}
         equivalent to this SerialDatalink, {@code false} otherwise

"
      end

      operation 10386178 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this {@code SerialDatalink}. The hash code for a
{@code SerialDatalink} object is taken as the hash code of
the {@code URL} it stores

@return  a hash code value for this object.
"
      end

      operation 10386306 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this {@code SerialDatalink}.

@return  a clone of this SerialDatalink
"
      end

      attribute 2374402 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2826907821828733626L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "readObject and writeObject are called to restore the state
of the {@code SerialDatalink}
from a stream. Note: we leverage the default Serialized form


The identifier that assists in the serialization of this
 {@code SerialDatalink} object.

"
      end
    end

    class 1261058 "SerialJavaObject"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A serializable mapping in the Java programming language of an SQL
<code>JAVA_OBJECT</code> value. Assuming the Java object
implements the <code>Serializable</code> interface, this class simply wraps the
serialization process.
<P>
If however, the serialization is not possible because
the Java object is not immediately serializable, this class will
attempt to serialize all non-static members to permit the object
state to be serialized.
Static or transient fields cannot be serialized; an attempt to serialize
them will result in a <code>SerialException</code> object being thrown.

<h3> Thread safety </h3>

A SerialJavaObject is not safe for use by multiple concurrent threads.  If a
SerialJavaObject is to be used by more than one thread then access to the
SerialJavaObject should be controlled by appropriate synchronization.

@author Jonathan Bruce
"
      classrelation 4052610 // <realization>
	relation 4052610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4052610 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4052738 // <realization>
	relation 4052738 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4052738 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 4052866 // obj (<unidirectional association>)
	relation 4052866 --->
	  a role_name "obj" private
	    comment "
Placeholder for object to be serialized.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4052866 // obj (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4052994 // fields (<unidirectional association>)
	relation 4052994 --->
	  a role_name "fields" multiplicity "[]" private
	    comment "
Placeholder for all fields in the <code>JavaObject</code> being serialized.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4052994 // fields (<unidirectional association>)
	  b parent class_ref 189698 // Field
      end

      operation 10386690 "SerialJavaObject"
	public explicit_return_type ""
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for <code>SerialJavaObject</code> helper class.
<p>

@param obj the Java <code>Object</code> to be serialized
@throws SerialException if the object is found not to be serializable
"
      end

      operation 10386818 "getObject"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code> that is a copy of this <code>SerialJavaObject</code>
object.

@return a copy of this <code>SerialJavaObject</code> object as an
        <code>Object</code> in the Java programming language
@throws SerialException if the instance is corrupt
"
      end

      operation 10386946 "getFields"
	public return_type class_ref 189698 // Field
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array of <code>Field</code> objects that contains each
field of the object that this helper class is serializing.

@return an array of <code>Field</code> objects
@throws SerialException if an error is encountered accessing
the serialized object
@throws  SecurityException  If a security manager, <i>s</i>, is present
and the caller's class loader is not the same as or an
ancestor of the class loader for the class of the
{@linkplain #getObject object} being serialized
and invocation of {@link SecurityManager#checkPackageAccess
s.checkPackageAccess()} denies access to the package
of that class.
@see Class#getFields
"
      end

      attribute 2374658 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1465795139032831023L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier that assists in the serialization of this
<code>SerialJavaObject</code> object.

"
      end

      classrelation 4053122 // chain (<unidirectional association>)
	relation 4053122 --->
	  a role_name "chain" package
	    comment "
A container for the warnings issued on this <code>SerialJavaObject</code>
object. When there are multiple warnings, each warning is chained to the
previous warning.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RowSetWarning> ${name}${value};
"
	    classrelation_ref 4053122 // chain (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 10387074 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this SerialJavaObject to the specified object.
The result is {@code true} if and only if the argument
is not {@code null} and is a {@code SerialJavaObject}
object that is identical to this object

@param  o The object to compare this {@code SerialJavaObject} against

@return  {@code true} if the given object represents a {@code SerialJavaObject}
         equivalent to this SerialJavaObject, {@code false} otherwise

"
      end

      operation 10387202 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this SerialJavaObject. The hash code for a
{@code SerialJavaObject} object is taken as the hash code of
the {@code Object} it stores

@return  a hash code value for this object.
"
      end

      operation 10387330 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this {@code SerialJavaObject}.

@return  a clone of this SerialJavaObject
"
      end

      operation 10387458 "setWarning"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1259138 // RowSetWarning
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers the given warning.
"
      end

      operation 10387586 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the {@code SerialJavaObject}
from a stream.
"
      end

      operation 10387714 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "writeObject is called to save the state of the {@code SerialJavaObject}
to a stream.
"
      end

      operation 10387842 "hasStaticFields"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "fields" type class_ref 189698 // Field
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to see if there are any Static Fields in this object
"
      end
    end

    class 1261186 "SerialRef"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A serialized mapping of a <code>Ref</code> object, which is the mapping in the
Java programming language of an SQL <code>REF</code> value.
<p>
The <code>SerialRef</code> class provides a constructor  for
creating a <code>SerialRef</code> instance from a <code>Ref</code>
object and provides methods for getting and setting the <code>Ref</code> object.

<h3> Thread safety </h3>

A SerialRef is not safe for use by multiple concurrent threads.  If a
SerialRef is to be used by more than one thread then access to the SerialRef
should be controlled by appropriate synchronization.

"
      classrelation 4053250 // <realization>
	relation 4053250 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4053250 // <realization>
	  b parent class_ref 1038850 // Ref
      end

      classrelation 4053378 // <realization>
	relation 4053378 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4053378 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4053506 // <realization>
	relation 4053506 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4053506 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 4053634 // baseTypeName (<unidirectional association>)
	relation 4053634 --->
	  a role_name "baseTypeName" private
	    comment "
String containing the base type name.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4053634 // baseTypeName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4053762 // object (<unidirectional association>)
	relation 4053762 --->
	  a role_name "object" private
	    comment "
This will store the type <code>Ref</code> as an <code>Object</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4053762 // object (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4053890 // reference (<unidirectional association>)
	relation 4053890 --->
	  a role_name "reference" private
	    comment "
Private copy of the Ref reference.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4053890 // reference (<unidirectional association>)
	  b parent class_ref 1038850 // Ref
      end

      operation 10387970 "SerialRef"
	public explicit_return_type ""
	nparams 1
	  param inout name "ref" type class_ref 1038850 // Ref
	nexceptions 2
	  exception class_ref 1260546 // SerialException
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialRef</code> object from the given <code>Ref</code>
object.

@param ref a Ref object; cannot be <code>null</code>
@throws SQLException if a database access occurs; if <code>ref</code>
    is <code>null</code>; or if the <code>Ref</code> object returns a
    <code>null</code> value base type name.
@throws SerialException if an error occurs serializing the <code>Ref</code>
    object
"
      end

      operation 10388098 "getBaseTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing the base type name of the <code>Ref</code>.

@return a string of the base type name of the Ref
@throws SerialException in no Ref object has been set
"
      end

      operation 10388226 "getObject"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code> representing the SQL structured type
to which this <code>SerialRef</code> object refers.  The attributes
of the structured type are mapped according to the given type map.

@param map a <code>java.util.Map</code> object containing zero or
       more entries, with each entry consisting of 1) a <code>String</code>
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return an object instance resolved from the Ref reference and mapped
       according to the supplied type map
@throws SerialException if an error is encountered in the reference
       resolution
"
      end

      operation 10388354 "getObject"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code> representing the SQL structured type
to which this <code>SerialRef</code> object refers.

@return an object instance resolved from the Ref reference
@throws SerialException if an error is encountered in the reference
        resolution
"
      end

      operation 10388482 "setObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SQL structured type that this <code>SerialRef</code> object
references to the given <code>Object</code> object.

@param obj an <code>Object</code> representing the SQL structured type
       to be referenced
@throws SerialException if an error is encountered generating the
the structured type referenced by this <code>SerialRef</code> object
"
      end

      operation 10388610 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this SerialRef to the specified object.  The result is {@code
true} if and only if the argument is not {@code null} and is a {@code
SerialRef} object that represents the same object as this
object.

@param  obj The object to compare this {@code SerialRef} against

@return  {@code true} if the given object represents a {@code SerialRef}
         equivalent to this SerialRef, {@code false} otherwise

"
      end

      operation 10388738 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this {@code SerialRef}.
@return  a hash code value for this object.
"
      end

      operation 10388866 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this {@code SerialRef}.
The underlying {@code Ref} object will be set to null.

@return  a clone of this SerialRef
"
      end

      operation 10388994 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the SerialRef from
a stream.
"
      end

      operation 10389122 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "writeObject is called to save the state of the SerialRef
to a stream.
"
      end

      attribute 2374786 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4727123500609662274L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier that assists in the serialization of this <code>SerialRef</code>
object.

"
      end
    end

    class 1261314 "SerialStruct"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A serialized mapping in the Java programming language of an SQL
structured type. Each attribute that is not already serialized
is mapped to a serialized form, and if an attribute is itself
a structured type, each of its attributes that is not already
serialized is mapped to a serialized form.
<P>
In addition, the structured type is custom mapped to a class in the
Java programming language if there is such a mapping, as are
its attributes, if appropriate.
<P>
The <code>SerialStruct</code> class provides a constructor for creating
an instance from a <code>Struct</code> object, a method for retrieving
the SQL type name of the SQL structured type in the database, and methods
for retrieving its attribute values.

<h3> Thread safety </h3>

A SerialStruct is not safe for use by multiple concurrent threads.  If a
SerialStruct is to be used by more than one thread then access to the
SerialStruct should be controlled by appropriate synchronization.

"
      classrelation 4054018 // <realization>
	relation 4054018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4054018 // <realization>
	  b parent class_ref 1040386 // Struct
      end

      classrelation 4054146 // <realization>
	relation 4054146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4054146 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4054274 // <realization>
	relation 4054274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4054274 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 4054402 // SQLTypeName (<unidirectional association>)
	relation 4054402 --->
	  a role_name "SQLTypeName" private
	    comment "
The SQL type name for the structured type that this
<code>SerialStruct</code> object represents.  This is the name
used in the SQL definition of the SQL structured type.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4054402 // SQLTypeName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4054530 // attribs (<unidirectional association>)
	relation 4054530 --->
	  a role_name "attribs" multiplicity "[]" private
	    comment "
An array of <code>Object</code> instances in  which each
element is an attribute of the SQL structured type that this
<code>SerialStruct</code> object represents.  The attributes are
ordered according to their order in the definition of the
SQL structured type.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4054530 // attribs (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 10389250 "SerialStruct"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 1040386 // Struct
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialStruct</code> object from the given
<code>Struct</code> object, using the given <code>java.util.Map</code>
object for custom mapping the SQL structured type or any of its
attributes that are SQL structured types.

@param in an instance of {@code Struct}
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SerialException if an error occurs
@see java.sql.Struct
"
      end

      operation 10389378 "SerialStruct"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 1042050 // SQLData
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialStruct</code> object from the
given <code>SQLData</code> object, using the given type
map to custom map it to a class in the Java programming
language.  The type map gives the SQL type and the class
to which it is mapped.  The <code>SQLData</code> object
defines the class to which the SQL type will be mapped.

@param in an instance of the <code>SQLData</code> class
          that defines the mapping of the SQL structured
          type to one or more objects in the Java programming language
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SerialException if an error occurs
"
      end

      operation 10389506 "getSQLTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the SQL type name for this <code>SerialStruct</code>
object. This is the name used in the SQL definition of the
structured type

@return a <code>String</code> object representing the SQL
        type name for the SQL structured type that this
        <code>SerialStruct</code> object represents
@throws SerialException if an error occurs
"
      end

      operation 10389634 "getAttributes"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves an array of <code>Object</code> values containing the
attributes of the SQL structured type that this
<code>SerialStruct</code> object represents.

@return an array of <code>Object</code> values, with each
        element being an attribute of the SQL structured type
        that this <code>SerialStruct</code> object represents
@throws SerialException if an error occurs
"
      end

      operation 10389762 "getAttributes"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the attributes for the SQL structured type that
this <code>SerialStruct</code> represents as an array of
<code>Object</code> values, using the given type map for
custom mapping if appropriate.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return an array of <code>Object</code> values, with each
        element being an attribute of the SQL structured
        type that this <code>SerialStruct</code> object
        represents
@throws SerialException if an error occurs
"
      end

      operation 10389890 "mapToSerial"
	private explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1260546 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps attributes of an SQL structured type that are not
serialized to a serialized form, using the given type map
for custom mapping when appropriate.  The following types
in the Java programming language are mapped to their
serialized forms:  <code>Struct</code>, <code>SQLData</code>,
<code>Ref</code>, <code>Blob</code>, <code>Clob</code>, and
<code>Array</code>.
<P>
This method is called internally and is not used by an
application programmer.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SerialException if an error occurs
"
      end

      operation 10390018 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this SerialStruct to the specified object.  The result is
{@code true} if and only if the argument is not {@code null} and is a
{@code SerialStruct} object whose attributes are identical to this
object's attributes

@param  obj The object to compare this {@code SerialStruct} against

@return {@code true} if the given object represents a {@code SerialStruct}
         equivalent to this SerialStruct, {@code false} otherwise

"
      end

      operation 10390146 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this {@code SerialStruct}. The hash code for a
{@code SerialStruct} object is computed using the hash codes
of the attributes of the {@code SerialStruct} object and its
{@code SQLTypeName}

@return  a hash code value for this object.
"
      end

      operation 10390274 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this {@code SerialStruct}. The copy will contain a
reference to a clone of the underlying attribs array, not a reference
to the original underlying attribs array of this {@code SerialStruct} object.

@return  a clone of this SerialStruct
"
      end

      operation 10390402 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the {@code SerialStruct} from
a stream.
"
      end

      operation 10390530 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "writeObject is called to save the state of the {@code SerialStruct}
to a stream.
"
      end

      attribute 2374914 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8322445504027483372L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier that assists in the serialization of this
<code>SerialStruct</code> object.

"
      end
    end

    class 1261442 "SQLInputImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An input stream used for custom mapping user-defined types (UDTs).
An <code>SQLInputImpl</code> object is an input stream that contains a
stream of values that are the attributes of a UDT.
<p>
This class is used by the driver behind the scenes when the method
<code>getObject</code> is called on an SQL structured or distinct type
that has a custom mapping; a programmer never invokes
<code>SQLInputImpl</code> methods directly. They are provided here as a
convenience for those who write <code>RowSet</code> implementations.
<P>
The <code>SQLInputImpl</code> class provides a set of
reader methods analogous to the <code>ResultSet</code> getter
methods.  These methods make it possible to read the values in an
<code>SQLInputImpl</code> object.
<P>
The method <code>wasNull</code> is used to determine whether the
the last value read was SQL <code>NULL</code>.
<P>When the method <code>getObject</code> is called with an
object of a class implementing the interface <code>SQLData</code>,
the JDBC driver calls the method <code>SQLData.getSQLType</code>
to determine the SQL type of the UDT being custom mapped. The driver
creates an instance of <code>SQLInputImpl</code>, populating it with the
attributes of the UDT.  The driver then passes the input
stream to the method <code>SQLData.readSQL</code>, which in turn
calls the <code>SQLInputImpl</code> reader methods
to read the attributes from the input stream.
@since 1.5
@see java.sql.SQLData
"
      classrelation 4054658 // <realization>
	relation 4054658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4054658 // <realization>
	  b parent class_ref 1042178 // SQLInput
      end

      attribute 2375042 "lastValueWasNull"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>true</code> if the last value returned was <code>SQL NULL</code>;
<code>false</code> otherwise.

"
      end

      attribute 2375170 "idx"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The current index into the array of SQL structured type attributes
that will be read from this <code>SQLInputImpl</code> object and
mapped to the fields of a class in the Java programming language.

"
      end

      classrelation 4054786 // attrib (<unidirectional association>)
	relation 4054786 --->
	  a role_name "attrib" multiplicity "[]" private
	    comment "
The array of attributes to be read from this stream.  The order
of the attributes is the same as the order in which they were
listed in the SQL definition of the UDT.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4054786 // attrib (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4054914 // map (<unidirectional association>)
	relation 4054914 --->
	  a role_name "map" private
	    comment "
The type map to use when the method <code>readObject</code>
is invoked. This is a <code>java.util.Map</code> object in which
there may be zero or more entries.  Each entry consists of the
fully qualified name of a UDT (the value to be mapped) and the
<code>Class</code> object for a class that implements
<code>SQLData</code> (the Java class that defines how the UDT
will be mapped).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Class<?>> ${name}${value};
"
	    classrelation_ref 4054914 // map (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 10390658 "SQLInputImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "attributes" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>SQLInputImpl</code> object initialized with the
given array of attributes and the given type map. If any of the
attributes is a UDT whose name is in an entry in the type map,
the attribute will be mapped according to the corresponding
<code>SQLData</code> implementation.

@param attributes an array of <code>Object</code> instances in which
       each element is an attribute of a UDT. The order of the
       attributes in the array is the same order in which
       the attributes were defined in the UDT definition.
@param map a <code>java.util.Map</code> object containing zero or more
       entries, with each entry consisting of 1) a <code>String</code>
       giving the fully
       qualified name of the UDT and 2) the <code>Class</code> object
       for the <code>SQLData</code> implementation that defines how
       the UDT is to be mapped
@throws SQLException if the <code>attributes</code> or the <code>map</code>
       is a <code>null</code> value
"
      end

      operation 10390786 "getNextAttribute"
	private return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as an <code>Object</code> in the Java programming language.

@return the next value in the input stream
        as an <code>Object</code> in the Java programming language
@throws SQLException if the read position is located at an invalid
        position or if there are no further values in the stream
"
      end

      operation 10390914 "readString"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "================================================================
 Methods for reading attributes from the stream of SQL data.
 These methods correspond to the column-accessor methods of
 java.sql.ResultSet.
================================================================

Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>String</code> in the Java programming language.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code>
implementation.
<p>
@return the next attribute in this <code>SQLInputImpl</code> object;
    if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
    position or if there are no further values in the stream.
"
      end

      operation 10391042 "readBoolean"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>boolean</code> in the Java programming language.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code>
implementation.
<p>
@return the next attribute in this <code>SQLInputImpl</code> object;
    if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
    position or if there are no further values in the stream.
"
      end

      operation 10391170 "readByte"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>byte</code> in the Java programming language.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code>
implementation.
<p>
@return the next attribute in this <code>SQLInputImpl</code> object;
    if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
    position or if there are no further values in the stream
"
      end

      operation 10391298 "readShort"
	public explicit_return_type "short"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>short</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10391426 "readInt"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as an <code>int</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10391554 "readLong"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>long</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10391682 "readFloat"
	public explicit_return_type "float"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>float</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10391810 "readDouble"
	public explicit_return_type "double"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>double</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10391938 "readBigDecimal"
	public return_type class_ref 145794 // BigDecimal
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>java.math.BigDecimal</code>.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10392066 "readBytes"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as an array of bytes.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10392194 "readDate"
	public return_type class_ref 1038466 // Date
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> as
a <code>java.sql.Date</code> object.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream
"
      end

      operation 10392322 "readTime"
	public return_type class_ref 1038594 // Time
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>java.sql.Time</code> object.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>, return
<code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10392450 "readTimestamp"
	public return_type class_ref 1038722 // Timestamp
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>java.sql.Timestamp</code> object.

@return the attribute; if the value is <code>SQL NULL</code>, return
<code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10392578 "readCharacterStream"
	public return_type class_ref 407298 // Reader
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a stream of Unicode characters.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10392706 "readAsciiStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next attribute in this <code>SQLInputImpl</code> object
as a stream of ASCII characters.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>,
return <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10392834 "readBinaryStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next attribute in this <code>SQLInputImpl</code> object
as a stream of uninterpreted bytes.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>, return
<code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10392962 "readObject"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "================================================================
 Methods for reading items of SQL user-defined types from the stream.
================================================================

Retrieves the value at the head of this <code>SQLInputImpl</code>
object as an <code>Object</code> in the Java programming language.  The
actual type of the object returned is determined by the default
mapping of SQL types to types in the Java programming language unless
there is a custom mapping, in which case the type of the object
returned is determined by this stream's type map.
<P>
The JDBC technology-enabled driver registers a type map with the stream
before passing the stream to the application.
<P>
When the datum at the head of the stream is an SQL <code>NULL</code>,
this method returns <code>null</code>.  If the datum is an SQL
structured or distinct type with a custom mapping, this method
determines the SQL type of the datum at the head of the stream,
constructs an object of the appropriate class, and calls the method
<code>SQLData.readSQL</code> on that object. The <code>readSQL</code>
method then calls the appropriate <code>SQLInputImpl.readXXX</code>
methods to retrieve the attribute values from the stream.

@return the value at the head of the stream as an <code>Object</code>
        in the Java programming language; <code>null</code> if
        the value is SQL <code>NULL</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10393090 "readRef"
	public return_type class_ref 1038850 // Ref
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the value at the head of this <code>SQLInputImpl</code> object
as a <code>Ref</code> object in the Java programming language.

@return a <code>Ref</code> object representing the SQL
        <code>REF</code> value at the head of the stream; if the value
        is <code>SQL NULL</code> return <code>null</code>
@throws SQLException if the read position is located at an invalid
        position; or if there are no further values in the stream.
"
      end

      operation 10393218 "readBlob"
	public return_type class_ref 1037570 // Blob
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the <code>BLOB</code> value at the head of this
<code>SQLInputImpl</code> object as a <code>Blob</code> object
in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return a <code>Blob</code> object representing the SQL
        <code>BLOB</code> value at the head of this stream;
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10393346 "readClob"
	public return_type class_ref 1038978 // Clob
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the <code>CLOB</code> value at the head of this
<code>SQLInputImpl</code> object as a <code>Clob</code> object
in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return a <code>Clob</code> object representing the SQL
        <code>CLOB</code> value at the head of the stream;
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10393474 "readArray"
	public return_type class_ref 1037058 // Array
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an SQL <code>ARRAY</code> value from the stream and
returns it as an <code>Array</code> object in the Java programming
language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return an <code>Array</code> object representing the SQL
        <code>ARRAY</code> value at the head of the stream; *
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.

"
      end

      operation 10393602 "wasNull"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ascertains whether the last value read from this
<code>SQLInputImpl</code> object was <code>null</code>.

@return <code>true</code> if the SQL value read most recently was
        <code>null</code>; otherwise, <code>false</code>; by default it
        will return false
@throws SQLException if an error occurs determining the last value
        read was a <code>null</code> value or not;
"
      end

      operation 10393730 "readURL"
	public return_type class_ref 243458 // URL
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an SQL <code>DATALINK</code> value from the stream and
returns it as an <code>URL</code> object in the Java programming
language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return an <code>URL</code> object representing the SQL
        <code>DATALINK</code> value at the head of the stream; *
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 10393858 "readNClob"
	public return_type class_ref 1039490 // NClob
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "---------------------------- JDBC 4.0 -------------------------

Reads an SQL <code>NCLOB</code> value from the stream and returns it as a
<code>Clob</code> object in the Java programming language.

@return a <code>NClob</code> object representing data of the SQL <code>NCLOB</code> value
at the head of the stream; <code>null</code> if the value read is
SQL <code>NULL</code>
@exception SQLException if a database access error occurs
@since 1.6
"
      end

      operation 10393986 "readNString"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the next attribute in the stream and returns it as a <code>String</code>
in the Java programming language. It is intended for use when
accessing  <code>NCHAR</code>,<code>NVARCHAR</code>
and <code>LONGNVARCHAR</code> columns.

@return the attribute; if the value is SQL <code>NULL</code>, returns <code>null</code>
@exception SQLException if a database access error occurs
@since 1.6
"
      end

      operation 10394114 "readSQLXML"
	public return_type class_ref 1039618 // SQLXML
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an SQL <code>XML</code> value from the stream and returns it as a
<code>SQLXML</code> object in the Java programming language.

@return a <code>SQLXML</code> object representing data of the SQL <code>XML</code> value
at the head of the stream; <code>null</code> if the value read is
SQL <code>NULL</code>
@exception SQLException if a database access error occurs
@since 1.6
"
      end

      operation 10394242 "readRowId"
	public return_type class_ref 1039362 // RowId
	nparams 0
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an SQL <code>ROWID</code> value from the stream and returns it as a
<code>RowId</code> object in the Java programming language.

@return a <code>RowId</code> object representing data of the SQL <code>ROWID</code> value
at the head of the stream; <code>null</code> if the value read is
SQL <code>NULL</code>
@exception SQLException if a database access error occurs
@since 1.6
"
      end
    end

    class 1261570 "SQLOutputImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The output stream for writing the attributes of a
custom-mapped user-defined type (UDT) back to the database.
The driver uses this interface internally, and its
methods are never directly invoked by an application programmer.
<p>
When an application calls the
method <code>PreparedStatement.setObject</code>, the driver
checks to see whether the value to be written is a UDT with
a custom mapping.  If it is, there will be an entry in a
type map containing the <code>Class</code> object for the
class that implements <code>SQLData</code> for this UDT.
If the value to be written is an instance of <code>SQLData</code>,
the driver will create an instance of <code>SQLOutputImpl</code>
and pass it to the method <code>SQLData.writeSQL</code>.
The method <code>writeSQL</code> in turn calls the
appropriate <code>SQLOutputImpl.writeXXX</code> methods
to write data from the <code>SQLData</code> object to
the <code>SQLOutputImpl</code> output stream as the
representation of an SQL user-defined type.
"
      classrelation 4055042 // <realization>
	relation 4055042 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4055042 // <realization>
	  b parent class_ref 1042306 // SQLOutput
      end

      classrelation 4055170 // attribs (<unidirectional association>)
	relation 4055170 --->
	  a role_name "attribs" private
	    comment "
A reference to an existing vector that
contains the attributes of a <code>Struct</code> object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"rawtypes\")
"
	    classrelation_ref 4055170 // attribs (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 4055298 // map (<unidirectional association>)
	relation 4055298 --->
	  a role_name "map" private
	    comment "
The type map the driver supplies to a newly created
<code>SQLOutputImpl</code> object.  This type map
indicates the <code>SQLData</code> class whose
<code>writeSQL</code> method will be called.  This
method will in turn call the appropriate
<code>SQLOutputImpl</code> writer methods.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"rawtypes\")
"
	    classrelation_ref 4055298 // map (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 10394370 "SQLOutputImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "attributes" type class_ref 141442 // Vector
	  param inout name "map" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SQLOutputImpl</code> object
initialized with the given vector of attributes and
type map.  The driver will use the type map to determine
which <code>SQLData.writeSQL</code> method to invoke.
This method will then call the appropriate
<code>SQLOutputImpl</code> writer methods in order and
thereby write the attributes to the new output stream.

@param attributes a <code>Vector</code> object containing the attributes of
       the UDT to be mapped to one or more objects in the Java
       programming language

@param map a <code>java.util.Map</code> object containing zero or
       more entries, with each entry consisting of 1) a <code>String</code>
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SQLException if the <code>attributes</code> or the <code>map</code>
       is a <code>null</code> value
"
      end

      operation 10394498 "writeString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "================================================================
 Methods for writing attributes to the stream of SQL data.
 These methods correspond to the column-accessor methods of
 java.sql.ResultSet.
================================================================

Writes a <code>String</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>CHAR</code>, <code>VARCHAR</code>, or
<code>LONGVARCHAR</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10394626 "writeBoolean"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>boolean</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>BIT</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10394754 "writeByte"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>byte</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>BIT</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10394882 "writeShort"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "short"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>short</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>SMALLINT</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395010 "writeInt"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "int"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes an <code>int</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>INTEGER</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395138 "writeLong"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "long"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>long</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>BIGINT</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395266 "writeFloat"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "float"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>float</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>REAL</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395394 "writeDouble"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "double"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>double</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>DOUBLE</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395522 "writeBigDecimal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 145794 // BigDecimal
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>java.math.BigDecimal</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>NUMERIC</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395650 "writeBytes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes an array of <code>bytes</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>VARBINARY</code> or <code>LONGVARBINARY</code>
before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395778 "writeDate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1038466 // Date
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>java.sql.Date</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>DATE</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10395906 "writeTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1038594 // Time
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>java.sql.Time</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>TIME</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396034 "writeTimestamp"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1038722 // Timestamp
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>java.sql.Timestamp</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>TIMESTAMP</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396162 "writeCharacterStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 407298 // Reader
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a stream of Unicode characters to this
<code>SQLOutputImpl</code> object. The driver will do any necessary
conversion from Unicode to the database <code>CHAR</code> format.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396290 "writeAsciiStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a stream of ASCII characters to this
<code>SQLOutputImpl</code> object. The driver will do any necessary
conversion from ASCII to the database <code>CHAR</code> format.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396418 "writeBinaryStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a stream of uninterpreted bytes to this <code>SQLOutputImpl</code>
object.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396546 "writeObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1042050 // SQLData
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "================================================================
 Methods for writing items of SQL user-defined types to the stream.
 These methods pass objects to the database as values of SQL
 Structured Types, Distinct Types, Constructed Types, and Locator
 Types.  They decompose the Java object(s) and write leaf data
 items using the methods above.
================================================================

Writes to the stream the data contained in the given
<code>SQLData</code> object.
When the <code>SQLData</code> object is <code>null</code>, this
method writes an SQL <code>NULL</code> to the stream.
Otherwise, it calls the <code>SQLData.writeSQL</code>
method of the given object, which
writes the object's attributes to the stream.
<P>
The implementation of the method <code>SQLData.writeSQ</code>
calls the appropriate <code>SQLOutputImpl.writeXXX</code> method(s)
for writing each of the object's attributes in order.
The attributes must be read from an <code>SQLInput</code>
input stream and written to an <code>SQLOutputImpl</code>
output stream in the same order in which they were
listed in the SQL definition of the user-defined type.

@param x the object representing data of an SQL structured or
         distinct type
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396674 "writeRef"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1038850 // Ref
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>Ref</code> object in the Java programming language
to this <code>SQLOutputImpl</code> object.  The driver converts
it to a serializable <code>SerialRef</code> SQL <code>REF</code> value
before returning it to the database.

@param x an object representing an SQL <code>REF</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396802 "writeBlob"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1037570 // Blob
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>Blob</code> object in the Java programming language
to this <code>SQLOutputImpl</code> object.  The driver converts
it to a serializable <code>SerialBlob</code> SQL <code>BLOB</code> value
before returning it to the database.

@param x an object representing an SQL <code>BLOB</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10396930 "writeClob"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1038978 // Clob
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>Clob</code> object in the Java programming language
to this <code>SQLOutputImpl</code> object.  The driver converts
it to a serializable <code>SerialClob</code> SQL <code>CLOB</code> value
before returning it to the database.

@param x an object representing an SQL <code>CLOB</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10397058 "writeStruct"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1040386 // Struct
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes a <code>Struct</code> object in the Java
programming language to this <code>SQLOutputImpl</code>
object. The driver converts this value to an SQL structured type
before returning it to the database.
<P>
This method should be used when an SQL structured type has been
mapped to a <code>Struct</code> object in the Java programming
language (the standard mapping).  The method
<code>writeObject</code> should be used if an SQL structured type
has been custom mapped to a class in the Java programming language.

@param x an object representing the attributes of an SQL structured type
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10397186 "writeArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1037058 // Array
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes an <code>Array</code> object in the Java
programming language to this <code>SQLOutputImpl</code>
object. The driver converts this value to a serializable
<code>SerialArray</code> SQL <code>ARRAY</code>
value before returning it to the database.

@param x an object representing an SQL <code>ARRAY</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10397314 "writeURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes an <code>java.sql.Type.DATALINK</code> object in the Java
programming language to this <code>SQLOutputImpl</code> object. The
driver converts this value to a serializable <code>SerialDatalink</code>
SQL <code>DATALINK</code> value before return it to the database.

@param url an object representing a SQL <code>DATALINK</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.
"
      end

      operation 10397442 "writeNString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes the next attribute to the stream as a <code>String</code>
in the Java programming language. The driver converts this to a
SQL <code>NCHAR</code> or
<code>NVARCHAR</code> or <code>LONGNVARCHAR</code> value
(depending on the argument's
size relative to the driver's limits on <code>NVARCHAR</code> values)
when it sends it to the stream.

@param x the value to pass to the database
@exception SQLException if a database access error occurs
@since 1.6
"
      end

      operation 10397570 "writeNClob"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1039490 // NClob
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes an SQL <code>NCLOB</code> value to the stream.

@param x a <code>NClob</code> object representing data of an SQL
<code>NCLOB</code> value

@exception SQLException if a database access error occurs
@since 1.6
"
      end

      operation 10397698 "writeRowId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1039362 // RowId
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes an SQL <code>ROWID</code> value to the stream.

@param x a <code>RowId</code> object representing data of an SQL
<code>ROWID</code> value

@exception SQLException if a database access error occurs
@since 1.6
"
      end

      operation 10397826 "writeSQLXML"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1039618 // SQLXML
	nexceptions 1
	  exception class_ref 1037186 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Writes an SQL <code>XML</code> value to the stream.

@param x a <code>SQLXML</code> object representing data of an SQL
<code>XML</code> value

@exception SQLException if a database access error occurs
@since 1.6
"
      end
    end
  end

  deploymentview 176002 "serial"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 920578 "SerialArray"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.util.Map;
import java.net.URL;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 1260418 // SerialArray
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 920706 "SerialBlob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.lang.reflect.*;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 1260674 // SerialBlob
      end
      comment "Copyright (c) 2003, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 920834 "SerialClob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 1260802 // SerialClob
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 920962 "SerialDatalink"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.net.URL;
${definition}"
      associated_elems
	class_ref 1260930 // SerialDatalink
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 921090 "SerialException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.SQLException;
${definition}"
      associated_elems
	class_ref 1260546 // SerialException
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 921218 "SerialJavaObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.lang.reflect.*;
import java.util.Arrays;
import java.util.Vector;
import javax.sql.rowset.RowSetWarning;
import sun.reflect.CallerSensitive;
import sun.reflect.Reflection;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 1261058 // SerialJavaObject
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 921346 "SerialRef"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 1261186 // SerialRef
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 921474 "SerialStruct"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import javax.sql.*;
import java.io.*;
import java.math.*;
import java.util.Arrays;
import java.util.Map;
import java.util.Vector;
import javax.sql.rowset.*;
${definition}"
      associated_elems
	class_ref 1261314 // SerialStruct
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 921602 "SQLInputImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.util.Arrays;
import java.util.Map;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 1261442 // SQLInputImpl
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 921730 "SQLOutputImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.*;
import java.util.Map;
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 1261570 // SQLOutputImpl
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
