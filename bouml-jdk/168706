format 222
"models" // jdk1.8::com::sun::org::apache::xerces::internal::impl::dtd::models
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/impl/dtd/models/"
  java_package "com.sun.org.apache.xerces.internal.impl.dtd.models"
  classview 162050 "models"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 675074 "ContentModelValidator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 4482178 "validate"
	public explicit_return_type "int"
	nparams 3
	  param inout name "children" type class_ref 661378 // QName
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods


validate

@param children
@param offset
@param length

@return The value -1 if fully valid, else the 0 based index of the child
        that first failed. If the value returned is equal to the number
        of children, then the specified children are valid but additional
        content is required to reach a valid ending state.
"
      end
    end

    class 676098 "CMNode"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A content model node.

@xerces.internal

"
      operation 4475522 "CMNode"
	public explicit_return_type ""
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Constructors
 -------------------------------------------------------------------"
      end

      operation 4475650 "isNullable"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Package, abstract methods
 -------------------------------------------------------------------
 made this public so it could be implemented and used outside this package -neilg."
      end

      operation 4475778 "type"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Package final methods
 -------------------------------------------------------------------"
      end

      operation 4475906 "firstPos"
	public return_type class_ref 678146 // CMStateSet
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " made this public so it could be implemented and used outside this package -neilg."
      end

      operation 4476034 "lastPos"
	public return_type class_ref 678146 // CMStateSet
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " made this public so it could be implemented and used outside this package -neilg."
      end

      operation 4476162 "setFollowPos"
	package explicit_return_type "void"
	nparams 1
	  param inout name "setToAdopt" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4476290 "setMaxStates"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxStates" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4476418 "setUserData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to set arbitrary data on this content model
node. This is used by the a{n,m} optimization that runs
in constant space.
"
      end

      operation 4476546 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to get arbitrary data set on this content
model node. This is used by the a{n,m} optimization that runs
in constant space.
"
      end

      operation 4476674 "calcFirstPos"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Protected, abstract methods
 -------------------------------------------------------------------"
      end

      operation 4476802 "calcLastPos"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 962434 "fType"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " -------------------------------------------------------------------
  Private data members

  fType
      The type of node. This indicates whether its a leaf or an
      operation. Though we also do derived classes for these types,
      it is too expensive to use runtime typing to find this out.
      This is one of the ContentSpecNode.NODE_XXX types.

  fFirstPos
      The set of NFA states that represent the entry states of this
      node in the DFA.

  fFollowPos
      The set of NFA states that can be gotten to from from this
      node in the DFA.

  fLastPos
      The set of NFA states that represent the final states of this
      node in the DFA.

  fMaxStates
      The maximum number of states that the NFA has, which means the
      max number of NFA states that have to be traced in the state
      sets during the building of the DFA. Its unfortunate that it
      has to be stored redundantly, but we need to fault in the
      state set members and they have to be sized to this size. We
      init to to -1 so it will cause an error if its used without
      being initialized.
 -------------------------------------------------------------------
"
      end

      classrelation 1901442 // fFirstPos (<unidirectional association>)
	relation 1901442 --->
	  a role_name "fFirstPos" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901442 // fFirstPos (<unidirectional association>)
	  b parent class_ref 678146 // CMStateSet
      end

      classrelation 1901570 // fFollowPos (<unidirectional association>)
	relation 1901570 --->
	  a role_name "fFollowPos" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901570 // fFollowPos (<unidirectional association>)
	  b parent class_ref 678146 // CMStateSet
      end

      classrelation 1901698 // fLastPos (<unidirectional association>)
	relation 1901698 --->
	  a role_name "fLastPos" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901698 // fLastPos (<unidirectional association>)
	  b parent class_ref 678146 // CMStateSet
      end

      attribute 962562 "fMaxStates"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1901826 // fUserData (<unidirectional association>)
	relation 1901826 --->
	  a role_name "fUserData" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901826 // fUserData (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end
    end

    class 678018 "CMAny"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Content model any node.

@xerces.internal

"
      classrelation 1901954 // <generalisation>
	relation 1901954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1901954 // <generalisation>
	  b parent class_ref 676098 // CMNode
      end

      attribute 962690 "fType"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data


The any content model type. This value is one of the following:
XMLContentSpec.CONTENTSPECNODE_ANY,
XMLContentSpec.CONTENTSPECNODE_ANY_OTHER,
XMLContentSpec.CONTENTSPECNODE_ANY_LOCAL.

"
      end

      classrelation 1902082 // fURI (<unidirectional association>)
	relation 1902082 --->
	  a role_name "fURI" private
	    comment "
URI of the any content model. This value is set if the type is
of the following:
XMLContentSpec.CONTENTSPECNODE_ANY,
XMLContentSpec.CONTENTSPECNODE_ANY_OTHER.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902082 // fURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 962818 "fPosition"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Part of the algorithm to convert a regex directly to a DFA
numbers each leaf sequentially. If its -1, that means its an
epsilon node. Zero and greater are non-epsilon positions.

"
      end

      operation 4476930 "CMAny"
	public explicit_return_type ""
	nparams 3
	  param in name "type" explicit_type "int"
	  param inout name "uri" type class_ref 128130 // String
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a content model any. "
      end

      operation 4477058 "getType"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package methods
"
      end

      operation 4477186 "getURI"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4477314 "getPosition"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4477442 "setPosition"
	package explicit_return_type "void"
	nparams 1
	  param in name "newPosition" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4477570 "isNullable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CMNode methods

 package"
      end

      operation 4477698 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4477826 "calcFirstPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " protected"
      end

      operation 4477954 "calcLastPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 678146 "CMStateSet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is a very simple bitset class. The DFA content model code needs
to support a bit set, but the java BitSet class is way, way overkill. Our
bitset never needs to be expanded after creation, hash itself, etc...

Since the vast majority of content models will never require more than 64
bits, and since allocation of anything in Java is expensive, this class
provides a hybrid implementation that uses two ints for instances that use
64 bits or fewer. It has a byte array reference member which will only be
used if more than 64 bits are required.

Note that the code that uses this class will never perform operations
on sets of different sizes, so that check does not have to be made here.

@xerces.internal


 made this class public so it can be accessed by
 the XS content models from the schema package -neilg."
      operation 4480002 "CMStateSet"
	public explicit_return_type ""
	nparams 1
	  param in name "bitCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Constructors
 -------------------------------------------------------------------"
      end

      operation 4480130 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Public inherited methods
 -------------------------------------------------------------------"
      end

      operation 4480258 "intersection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "setToAnd" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Package final methods
 -------------------------------------------------------------------
 the XS content models from the schema package -neilg."
      end

      operation 4480386 "getBit"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "bitToGet" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4480514 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4480642 "isSameSet"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "setToCompare" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4480770 "union"
	public explicit_return_type "void"
	nparams 1
	  param inout name "setToOr" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " the XS content models from the schema package -neilg."
      end

      operation 4480898 "setBit"
	public explicit_return_type "void"
	nparams 1
	  param in name "bitToSet" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4481026 "setTo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "srcSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " the XS content models from the schema package -neilg."
      end

      operation 4481154 "zeroBits"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " had to make this method public so it could be accessed from
 schema package - neilg."
      end

      attribute 963074 "fBitCount"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " -------------------------------------------------------------------
  Private data members

  fBitCount
      The count of bits that the outside world wants to support,
      so its the max bit index plus one.

  fByteCount
      If the bit count is > 64, then we use the fByteArray member to
      store the bits, and this indicates its size in bytes. Otherwise
      its value is meaningless.

  fBits1
  fBits2
      When the bit count is < 64 (very common), these hold the bits.
      Otherwise, the fByteArray member holds htem.
 -------------------------------------------------------------------
"
      end

      attribute 963202 "fByteCount"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 963330 "fBits1"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 963458 "fBits2"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 963586 "fByteArray"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4481282 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Optimization(Jan, 2001) "
      end

      operation 4481410 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 678274 "CMBinOp"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Content model Bin-Op node.

@xerces.internal

"
      classrelation 1902210 // <generalisation>
	relation 1902210 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1902210 // <generalisation>
	  b parent class_ref 676098 // CMNode
      end

      operation 4478082 "CMBinOp"
	public explicit_return_type ""
	nparams 3
	  param in name "type" explicit_type "int"
	  param inout name "leftNode" type class_ref 676098 // CMNode
	  param inout name "rightNode" type class_ref 676098 // CMNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Constructors
 -------------------------------------------------------------------"
      end

      operation 4478210 "getLeft"
	package return_type class_ref 676098 // CMNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Package, final methods
 -------------------------------------------------------------------"
      end

      operation 4478338 "getRight"
	package return_type class_ref 676098 // CMNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4478466 "isNullable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Package, inherited methods
 -------------------------------------------------------------------"
      end

      operation 4478594 "calcFirstPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Protected, inherited methods
 -------------------------------------------------------------------"
      end

      operation 4478722 "calcLastPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1902338 // fLeftChild (<unidirectional association>)
	relation 1902338 --->
	  a role_name "fLeftChild" private
	    comment " -------------------------------------------------------------------
  Private data members

  fLeftChild
  fRightChild
      These are the references to the two nodes that are on either
      side of this binary operation.
 -------------------------------------------------------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902338 // fLeftChild (<unidirectional association>)
	  b parent class_ref 676098 // CMNode
      end

      classrelation 1902466 // fRightChild (<unidirectional association>)
	relation 1902466 --->
	  a role_name "fRightChild" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902466 // fRightChild (<unidirectional association>)
	  b parent class_ref 676098 // CMNode
      end
    end

    class 678402 "CMLeaf"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Content model leaf node.

@xerces.internal

"
      classrelation 1902594 // <generalisation>
	relation 1902594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1902594 // <generalisation>
	  b parent class_ref 676098 // CMNode
      end

      classrelation 1902722 // fElement (<unidirectional association>)
	relation 1902722 --->
	  a role_name "fElement" init_value " new QName()" private
	    comment " Data

 This is the element that this leaf represents. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902722 // fElement (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 962946 "fPosition"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Part of the algorithm to convert a regex directly to a DFA
numbers each leaf sequentially. If its -1, that means its an
epsilon node. Zero and greater are non-epsilon positions.

"
      end

      operation 4478850 "CMLeaf"
	public explicit_return_type ""
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a content model leaf. "
      end

      operation 4478978 "CMLeaf"
	public explicit_return_type ""
	nparams 1
	  param inout name "element" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a content model leaf. "
      end

      operation 4479106 "getElement"
	package return_type class_ref 661378 // QName
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package methods
"
      end

      operation 4479234 "getPosition"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4479362 "setPosition"
	package explicit_return_type "void"
	nparams 1
	  param in name "newPosition" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4479490 "isNullable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CMNode methods

 package"
      end

      operation 4479618 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4479746 "calcFirstPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " protected"
      end

      operation 4479874 "calcLastPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 678530 "CMUniOp"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Content model Uni-Op node.

@xerces.internal

"
      classrelation 1902850 // <generalisation>
	relation 1902850 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1902850 // <generalisation>
	  b parent class_ref 676098 // CMNode
      end

      operation 4481538 "CMUniOp"
	public explicit_return_type ""
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "childNode" type class_ref 676098 // CMNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Constructors
 -------------------------------------------------------------------"
      end

      operation 4481666 "getChild"
	package return_type class_ref 676098 // CMNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Package, final methods
 -------------------------------------------------------------------"
      end

      operation 4481794 "isNullable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Package, inherited methods
 -------------------------------------------------------------------"
      end

      operation 4481922 "calcFirstPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -------------------------------------------------------------------
  Protected, inherited methods
 -------------------------------------------------------------------"
      end

      operation 4482050 "calcLastPos"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "toSet" type class_ref 678146 // CMStateSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1902978 // fChild (<unidirectional association>)
	relation 1902978 --->
	  a role_name "fChild" private
	    comment " -------------------------------------------------------------------
  Private data members

  fChild
      This is the reference to the one child that we have for this
      unary operation.
 -------------------------------------------------------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902978 // fChild (<unidirectional association>)
	  b parent class_ref 676098 // CMNode
      end
    end

    class 678658 "DFAContentModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
@version $Id: DFAContentModel.java,v 1.4 2010/08/06 23:49:43 joehw Exp $
DFAContentModel is the derivative of ContentModel that does
all of the non-trivial element content validation. This class does
the conversion from the regular expression to the DFA that
it then uses in its validation algorithm.
<p>
<b>Note:</b> Upstream work insures that this class will never see
a content model with PCDATA in it. Any model with PCDATA is 'mixed'
and is handled via the MixedContentModel class since mixed models
are very constrained in form and easily handled via a special case.
This also makes implementation of this class much easier.

@xerces.internal

@version $Id: DFAContentModel.java,v 1.4 2010/08/06 23:49:43 joehw Exp $
"
      classrelation 1903106 // <realization>
	relation 1903106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1903106 // <realization>
	  b parent class_ref 675074 // ContentModelValidator
      end

      classrelation 1903234 // fEpsilonString (<unidirectional association>)
	relation 1903234 --->
	  a role_name "fEpsilonString" init_value " \"<<CMNODE_EPSILON>>\"" class_relation private
	    comment " Constants

 special strings
 Epsilon string. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903234 // fEpsilonString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1903362 // fEOCString (<unidirectional association>)
	relation 1903362 --->
	  a role_name "fEOCString" init_value " \"<<CMNODE_EOC>>\"" class_relation private
	    comment " End-of-content string. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903362 // fEOCString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      extra_member 142338 "initialization"
	
	cpp "" ""
	java "  static {
        fEpsilonString = fEpsilonString.intern();
        fEOCString = fEOCString.intern();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 963714 "DEBUG_VALIDATE_CONTENT"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " debugging
 Set to true to debug content model validation. 
"
      end

      classrelation 1903490 // fElemMap (<unidirectional association>)
	relation 1903490 --->
	  a role_name "fElemMap" multiplicity "[]" init_value " null" private
	    comment " Data

 this is the EquivClassComparator object 
private EquivClassComparator comparator = null;

This is the map of unique input symbol elements to indices into
each state's per-input symbol transition table entry. This is part
of the built DFA information that must be kept around to do the
actual validation.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1903490 // fElemMap (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 963842 "fElemMapType"
	private explicit_type "int"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is a map of whether the element map contains information
related to ANY models.

"
      end

      attribute 963970 "fElemMapSize"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The element map size. 
"
      end

      attribute 964098 "fMixed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Boolean to distinguish Schema Mixed Content 
"
      end

      attribute 964226 "fEOCPos"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The NFA position of the special EOC (end of content) node. This
is saved away since it's used during the DFA build.

"
      end

      attribute 964354 "fFinalStateFlags"
	private explicit_type "boolean"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is an array of booleans, one per state (there are
fTransTableSize states in the DFA) that indicates whether that
state is a final state.

"
      end

      classrelation 1903618 // fFollowList (<unidirectional association>)
	relation 1903618 --->
	  a role_name "fFollowList" multiplicity "[]" init_value " null" private
	    comment "
The list of follow positions for each NFA position (i.e. for each
non-epsilon leaf node.) This is only used during the building of
the DFA, and is let go afterwards.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1903618 // fFollowList (<unidirectional association>)
	  b parent class_ref 678146 // CMStateSet
      end

      classrelation 1903746 // fHeadNode (<unidirectional association>)
	relation 1903746 --->
	  a role_name "fHeadNode" init_value " null" private
	    comment "
This is the head node of our intermediate representation. It is
only non-null during the building of the DFA (just so that it
does not have to be passed all around.) Once the DFA is built,
this is no longer required so its nulled out.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903746 // fHeadNode (<unidirectional association>)
	  b parent class_ref 676098 // CMNode
      end

      attribute 964482 "fLeafCount"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The count of leaf nodes. This is an important number that set some
limits on the sizes of data structures in the DFA process.

"
      end

      classrelation 1903874 // fLeafList (<unidirectional association>)
	relation 1903874 --->
	  a role_name "fLeafList" multiplicity "[]" init_value " null" private
	    comment "
An array of non-epsilon leaf nodes, which is used during the DFA
build operation, then dropped.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1903874 // fLeafList (<unidirectional association>)
	  b parent class_ref 678402 // CMLeaf
      end

      attribute 964610 "fLeafListType"
	private explicit_type "int"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array mapping ANY types to the leaf list. 
"
      end

      attribute 964738 "fTransTable"
	private explicit_type "int"
	multiplicity "[][]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "private ContentLeafNameTypeVector fLeafNameTypeVector = null;

The string pool of our parser session. This is set during construction
and kept around.

private StringPool fStringPool = null;

This is the transition table that is the main by product of all
of the effort here. It is an array of arrays of ints. The first
dimension is the number of states we end up with in the DFA. The
second dimensions is the number of unique elements in the content
model (fElemMapSize). Each entry in the second dimension indicates
the new state given that input for the first dimension's start
state.
<p>
The fElemMap array handles mapping from element indexes to
positions in the second dimension of the transition table.

"
      end

      attribute 964866 "fTransTableSize"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of valid entries in the transition table, and in the other
related tables such as fFinalStateFlags.

"
      end

      attribute 964994 "fEmptyContentIsValid"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag that indicates that even though we have a \"complicated\"
content model, it is valid to have no content. In other words,
all parts of the content model are optional. For example:
<pre>
     &lt;!ELEMENT AllOptional (Optional*,NotRequired?)&gt;
</pre>

"
      end

      classrelation 1904002 // fQName (<unidirectional association>)
	relation 1904002 --->
	  a role_name "fQName" init_value " new QName()" const_relation private
	    comment " temp variables
 Temporary qualified name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904002 // fQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      operation 4482306 "DFAContentModel"
	public explicit_return_type ""
	nparams 3
	  param inout name "syntaxTree" type class_ref 676098 // CMNode
	  param in name "leafCount" explicit_type "int"
	  param inout name "mixed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


 Constructors


Constructs a DFA content model.

@param syntaxTree    The syntax tree of the content model.
@param leafCount     The number of leaves.
@param mixed

"
      end

      operation 4482434 "validate"
	public explicit_return_type "int"
	nparams 3
	  param inout name "children" type class_ref 661378 // QName
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ContentModelValidator methods


Check that the specified content is valid according to this
content model. This method can also be called to do 'what if'
testing of content models just to see if they would be valid.
<p>
A value of -1 in the children array indicates a PCDATA node. All other
indexes will be positive and represent child elements. The count can be
zero, since some elements have the EMPTY content model and that must be
confirmed.

@param children The children of this element.  Each integer is an index within
                the <code>StringPool</code> of the child element name.  An index
                of -1 is used to indicate an occurrence of non-whitespace character
                data.
@param offset Offset into the array where the children starts.
@param length The number of entries in the <code>children</code> array.

@return The value -1 if fully valid, else the 0 based index of the child
        that first failed. If the value returned is equal to the number
        of children, then the specified children are valid but additional
        content is required to reach a valid ending state.

"
      end

      operation 4482562 "buildDFA"
	private explicit_return_type "void"
	nparams 1
	  param inout name "syntaxTree" type class_ref 676098 // CMNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " validate

 Private methods


Builds the internal DFA transition table from the given syntax tree.

@param syntaxTree The syntax tree.

@exception CMException Thrown if DFA cannot be built.
"
      end

      operation 4482690 "calcFollowList"
	private explicit_return_type "void"
	nparams 1
	  param inout name "nodeCur" type class_ref 676098 // CMNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the follow list of the current node.

@param nodeCur The curent node.

@exception CMException Thrown if follow list cannot be calculated.
"
      end

      operation 4482818 "dumpTree"
	private explicit_return_type "void"
	nparams 2
	  param inout name "nodeCur" type class_ref 676098 // CMNode
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dumps the tree of the current node to standard output.

@param nodeCur The current node.
@param level   The maximum levels to output.

@exception CMException Thrown on error.
"
      end

      operation 4482946 "makeDefStateList"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-1 is used to represent bad transitions in the transition table
entry for each state. So each entry is initialized to an all -1
array. This method creates a new entry and initializes it.
"
      end

      operation 4483074 "postTreeBuildInit"
	private explicit_return_type "int"
	nparams 2
	  param inout name "nodeCur" type class_ref 676098 // CMNode
	  param in name "curIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Post tree build initialization. "
      end
    end

    class 678786 "MixedContentModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "MixedContentModel is a derivative of the abstract content model base
class that handles the special case of mixed model elements. If an element
is mixed model, it has PCDATA as its first possible content, followed
by an alternation of the possible children. The children cannot have any
numeration or order, so it must look like this:
<pre>
  &lt;!ELEMENT Foo ((#PCDATA|a|b|c|)*)&gt;
</pre>
So, all we have to do is to keep an array of the possible children and
validate by just looking up each child being validated by looking it up
in the list.

@xerces.internal

"
      classrelation 1904130 // <realization>
	relation 1904130 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1904130 // <realization>
	  b parent class_ref 675074 // ContentModelValidator
      end

      attribute 965122 "fCount"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 The count of possible children that we have to deal with. 
"
      end

      classrelation 1904258 // fChildren (<unidirectional association>)
	relation 1904258 --->
	  a role_name "fChildren" multiplicity "[]" private
	    comment " The list of possible children that we have to accept. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1904258 // fChildren (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 965250 "fChildrenType"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The type of the children to support ANY. 
"
      end

      attribute 965378 "fOrdered"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " this is the EquivClassComparator object 
private EquivClassComparator comparator = null;

True if mixed content model is ordered. DTD mixed content models
are <em>always</em> unordered.

"
      end

      operation 4483202 "MixedContentModel"
	public explicit_return_type ""
	nparams 5
	  param inout name "children" type class_ref 661378 // QName
	multiplicity "[]"
	  param inout name "type" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "ordered" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Constructs a mixed content model.

@param children The list of allowed children.
@param type The list of the types of the children.
@param offset The start offset position in the children.
@param length The child count.
@param ordered True if content must be ordered.
"
      end

      operation 4483330 "validate"
	public explicit_return_type "int"
	nparams 3
	  param inout name "children" type class_ref 661378 // QName
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ContentModelValidator methods


Check that the specified content is valid according to this
content model. This method can also be called to do 'what if'
testing of content models just to see if they would be valid.
<p>
A value of -1 in the children array indicates a PCDATA node. All other
indexes will be positive and represent child elements. The count can be
zero, since some elements have the EMPTY content model and that must be
confirmed.

@param children The children of this element.  Each integer is an index within
                the <code>StringPool</code> of the child element name.  An index
                of -1 is used to indicate an occurrence of non-whitespace character
                data.
@param offset Offset into the array where the children starts.
@param length The number of entries in the <code>children</code> array.

@return The value -1 if fully valid, else the 0 based index of the child
        that first failed. If the value returned is equal to the number
        of children, then the specified children are valid but additional
        content is required to reach a valid ending state.

"
      end
    end

    class 678914 "SimpleContentModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "SimpleContentModel is a derivative of the abstract content model base
class that handles a small set of simple content models that are just
way overkill to give the DFA treatment.
<p>
This class handles the following scenarios:
<ul>
<li> a
<li> a?
<li> a*
<li> a+
<li> a,b
<li> a|b
</ul>
<p>
These all involve a unary operation with one element type, or a binary
operation with two elements. These are very simple and can be checked
in a simple way without a DFA and without the overhead of setting up a
DFA for such a simple check.

@xerces.internal

"
      classrelation 1904386 // <realization>
	relation 1904386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1904386 // <realization>
	  b parent class_ref 675074 // ContentModelValidator
      end

      attribute 965506 "CHOICE"
	class_attribute const_attribute public explicit_type "short"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 CHOICE 
"
      end

      attribute 965634 "SEQUENCE"
	class_attribute const_attribute public explicit_type "short"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " SEQUENCE 
"
      end

      classrelation 1904514 // fFirstChild (<unidirectional association>)
	relation 1904514 --->
	  a role_name "fFirstChild" init_value " new QName()" private
	    comment " Data


The element decl pool indices of the first (and optional second)
child node. The operation code tells us whether the second child
is used or not.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904514 // fFirstChild (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1904642 // fSecondChild (<unidirectional association>)
	relation 1904642 --->
	  a role_name "fSecondChild" init_value " new QName()" private
	    comment "
The element decl pool indices of the first (and optional second)
child node. The operation code tells us whether the second child
is used or not.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904642 // fSecondChild (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      attribute 965762 "fOperator"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The operation that this object represents. Since this class only
does simple contents, there is only ever a single operation
involved (i.e. the children of the operation are always one or
two leafs.) This is one of the XMLDTDParams.CONTENTSPECNODE_XXX values.

"
      end

      operation 4483458 "SimpleContentModel"
	public explicit_return_type ""
	nparams 3
	  param in name "operator" explicit_type "short"
	  param inout name "firstChild" type class_ref 661378 // QName
	  param inout name "secondChild" type class_ref 661378 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " this is the EquivClassComparator object 
private EquivClassComparator comparator = null;

 Constructors


Constructs a simple content model.

@param operator The content model operator.
@param firstChild qualified name of the first child
@param secondChild qualified name of the second child

"
      end

      operation 4483586 "validate"
	public explicit_return_type "int"
	nparams 3
	  param inout name "children" type class_ref 661378 // QName
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ContentModelValidator methods


Check that the specified content is valid according to this
content model. This method can also be called to do 'what if'
testing of content models just to see if they would be valid.
<p>
A value of -1 in the children array indicates a PCDATA node. All other
indexes will be positive and represent child elements. The count can be
zero, since some elements have the EMPTY content model and that must be
confirmed.

@param children The children of this element.  Each integer is an index within
                the <code>StringPool</code> of the child element name.  An index
                of -1 is used to indicate an occurrence of non-whitespace character
                data.
@param offset Offset into the array where the children starts.
@param length The number of entries in the <code>children</code> array.

@return The value -1 if fully valid, else the 0 based index of the child
        that first failed. If the value returned is equal to the number
        of children, then the specified children are valid but additional
        content is required to reach a valid ending state.

"
      end
    end
  end

  deploymentview 155522 "models"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 468098 "CMNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 676098 // CMNode
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 468226 "CMAny"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 678018 // CMAny
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 468354 "CMBinOp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec;
${definition}"
      associated_elems
	class_ref 678274 // CMBinOp
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 468482 "CMLeaf"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec;
import com.sun.org.apache.xerces.internal.xni.QName;
${definition}"
      associated_elems
	class_ref 678402 // CMLeaf
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 468610 "CMStateSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 678146 // CMStateSet
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 468738 "CMUniOp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec;
${definition}"
      associated_elems
	class_ref 678530 // CMUniOp
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 468866 "ContentModelValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.QName;
${definition}"
      associated_elems
	class_ref 675074 // ContentModelValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 468994 "DFAContentModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec;
import com.sun.org.apache.xerces.internal.xni.QName;
${definition}"
      associated_elems
	class_ref 678658 // DFAContentModel
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 469122 "MixedContentModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec;
${definition}"
      associated_elems
	class_ref 678786 // MixedContentModel
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 469250 "SimpleContentModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec;
${definition}"
      associated_elems
	class_ref 678914 // SimpleContentModel
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end
  end
end
