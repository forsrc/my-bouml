format 222
"ws" // jdk1.8::javax::xml::ws
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/ws/"
  java_package "javax.xml.ws"
  classview 182530 "ws"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1433218 "Action"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Action</code> annotation allows explicit association of a
WS-Addressing <code>Action</code> message addressing property with
<code>input</code>, <code>output</code>, and
<code>fault</code> messages of the mapped WSDL operation.
<p>
This annotation can be specified on each method of a service endpoint interface.
For such a method, the mapped operation in the generated WSDL's
<code>wsam:Action</code> attribute on the WSDL <code>input</code>,
<code>output</code> and <code>fault</code> messages of the WSDL <code>operation</code>
is based upon which attributes of the <code>Action</code> annotation have been specified.
For the exact computation of <code>wsam:Action</code> values for the messages, refer
to the algorithm in the JAX-WS specification.
<p>
<b>Example 1</b>: Specify explicit values for <code>Action</code> message addressing property
for <code>input</code> and <code>output</code> messages.

<pre>
&#64;WebService(targetNamespace=\"http://example.com/numbers\")
public class AddNumbersImpl {
    <b>&#64;Action(
        input=\"http://example.com/inputAction\",
        output=\"http://example.com/outputAction\")</b>
    public int addNumbers(int number1, int number2) {
        return number1 + number2;
    }
}
</pre>

The generated WSDL looks like:
<pre>
  &lt;definitions targetNamespace=\"http://example.com/numbers\" ...>
    ...
    &lt;portType name=\"AddNumbersPortType\">
      &lt;operation name=\"AddNumbers\">
        &lt;input message=\"tns:AddNumbersInput\" name=\"foo\"
          <b>wsam:Action=\"http://example.com/inputAction\"</b>/>
        &lt;output message=\"tns:AddNumbersOutput\" name=\"bar\"
          <b>wsam:Action=\"http://example.com/outputAction\"</b>/>
      &lt;/operation>
    &lt;/portType>
    ...
  &lt;/definitions>
</pre>

<p>
<b>Example 2</b>: Specify explicit value for <code>Action</code> message addressing property
for only the <code>input</code> message. The <code>wsam:Action</code> values for the
WSDL <code>output</code> message are computed using the algorithm in the JAX-WS specification.

<pre>
&#64;WebService(targetNamespace=\"http://example.com/numbers\")
public class AddNumbersImpl {
    <b>&#64;Action(input=\"http://example.com/inputAction\")</b>
    public int addNumbers(int number1, int number2) {
        return number1 + number2;
    }
}
</pre>

The generated WSDL looks like:
<pre>
  &lt;definitions targetNamespace=\"http://example.com/numbers\" ...>
    ...
    &lt;portType name=\"AddNumbersPortType\">
      &lt;operation name=\"AddNumbers\">
        &lt;input message=\"tns:AddNumbersInput\" name=\"foo\"
          <b>wsam:Action=\"http://example.com/inputAction\"</b> />
        &lt;output message=\"tns:AddNumbersOutput\" name=\"bar\"
          <b>wsam:Action=\"http://example.com/numbers/AddNumbersPortType/AddNumbersResponse\"</b>/>
      &lt;/operation>
    &lt;/portType>
    ...
  &lt;/definitions>
</pre>

It is legitimate to specify an explicit value for <code>Action</code> message addressing property for
<code>output</code> message only. In this case, <code>wsam:Action</code> value for the
WSDL <code>input</code> message is computed using the algorithm in the JAX-WS specification.

<p>
<b>Example 3</b>: See {@link FaultAction} annotation for an example of
how to specify an explicit value for <code>Action</code> message addressing property for the
<code>fault</code> message.

@see FaultAction

@since JAX-WS 2.1
"
      operation 12131074 "input"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Explicit value of the WS-Addressing <code>Action</code> message addressing property for the <code>input</code>
message of the operation.
"
      end

      operation 12131202 "output"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Explicit value of the WS-Addressing <code>Action</code> message addressing property for the <code>output</code>
message of the operation.
"
      end

      operation 12131330 "fault"
	public return_type class_ref 1433346 // FaultAction
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)} default { };"
	
	
	
	comment "Explicit value of the WS-Addressing <code>Action</code> message addressing property for the <code>fault</code>
message(s) of the operation. Each exception that is mapped to a fault and requires an explicit WS-Addressing
<code>Action</code> message addressing property, needs to be specified as a value in this property
using {@link FaultAction} annotation.
"
      end
    end

    class 1433346 "FaultAction"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>FaultAction</code> annotation is used inside an {@link Action}
annotation to allow an explicit association of a WS-Addressing
<code>Action</code> message addressing property with the <code>fault</code>
messages of the WSDL operation mapped from the exception class.
<p>
The <code>wsam:Action</code> attribute value in the <code>fault</code>
message in the generated WSDL operation mapped for <code>className</code>
class is equal to the corresponding value in the <code>FaultAction</code>.
For the exact computation of <code>wsam:Action</code> values for the
fault messages, refer to the algorithm in the JAX-WS specification.

<p>
<b>Example 1</b>: Specify explicit values for <code>Action</code> message addressing
property for the <code>input</code>, <code>output</code> and <code>fault</code> message
if the Java method throws only one service specific exception.

<pre>
&#64;WebService(targetNamespace=\"http://example.com/numbers\")
public class AddNumbersImpl {
    &#64;Action(
        fault = {
            <b>&#64;FaultAction(className=AddNumbersException.class, value=\"http://example.com/faultAction\")</b>
        })
    public int addNumbers(int number1, int number2)
        throws AddNumbersException {
        return number1 + number2;
    }
}
</pre>

The generated WSDL looks like:

<pre>
  &lt;definitions targetNamespace=\"http://example.com/numbers\" ...>
    ...
    &lt;portType name=\"AddNumbersPortType\">
      &lt;operation name=\"AddNumbers\">
        ...
        &lt;fault message=\"tns:AddNumbersException\" name=\"AddNumbersException\"
          <b>wsam:Action=\"http://example.com/faultAction\"</b>/>
      &lt;/operation>
    &lt;/portType>
    ...
  &lt;/definitions>
</pre>

<p>
Example 2: Here is an example that shows if the explicit value for <code>Action</code>
message addressing property for the service specific exception is not present.

<pre>
&#64;WebService(targetNamespace=\"http://example.com/numbers\")
public class AddNumbersImpl {
    public int addNumbers(int number1, int number2)
        throws AddNumbersException {
        return number1 + number2;
    }
}
</pre>

The generated WSDL looks like:

<pre>
  &lt;definitions targetNamespace=\"http://example.com/numbers\" ...>
    ...
    &lt;portType name=\"AddNumbersPortType\">
      &lt;operation name=\"AddNumbers\">
        ...
        &lt;fault message=\"tns:addNumbersFault\" name=\"InvalidNumbers\"
          <b>wsam:Action=\"http://example.com/numbers/AddNumbersPortType/AddNumbers/Fault/AddNumbersException\"</b>/>
      &lt;/operation>
    &lt;/portType>
    ...
  &lt;/definitions>
</pre>

<p>
Example 3: Here is an example that shows how to specify explicit values for <code>Action</code>
message addressing property if the Java method throws more than one service specific exception.

<pre>
&#64;WebService(targetNamespace=\"http://example.com/numbers\")
public class AddNumbersImpl {
    &#64;Action(
        fault = {
            <b>&#64;FaultAction(className=AddNumbersException.class, value=\"http://example.com/addFaultAction\"),
            &#64;FaultAction(className=TooBigNumbersException.class, value=\"http://example.com/toobigFaultAction\")</b>
        })
    public int addNumbers(int number1, int number2)
        throws AddNumbersException, TooBigNumbersException {
        return number1 + number2;
    }
}
</pre>

The generated WSDL looks like:

<pre>
  &lt;definitions targetNamespace=\"http://example.com/numbers\" ...>
    ...
    &lt;portType name=\"AddNumbersPortType\">
      &lt;operation name=\"AddNumbers\">
        ...
        &lt;fault message=\"tns:addNumbersFault\" name=\"AddNumbersException\"
          <b>wsam:Action=\"http://example.com/addFaultAction\"</b>/>
        &lt;fault message=\"tns:tooBigNumbersFault\" name=\"TooBigNumbersException\"
          <b>wsam:Action=\"http://example.com/toobigFaultAction\"</b>/>
      &lt;/operation>
    &lt;/portType>
    ...
  &lt;/definitions>
</pre>

@since JAX-WS 2.1
"
      operation 12136834 "className"
	public return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Exception> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Name of the exception class
"
      end

      operation 12136962 "value"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Value of WS-Addressing <code>Action</code> message addressing property for the exception
"
      end
    end

    class 1433474 "AsyncHandler"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>AsyncHandler</code> interface is implemented by
clients that wish to receive callback notification of the completion of
service endpoint operations invoked asynchronously.

 @since JAX-WS 2.0
"
      operation 12131458 "handleResponse"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "res" type class_ref 1433602 // Response
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called when the response to an asynchronous operation is available.

@param res The response to the operation invocation.

"
      end
    end

    class 1433602 "Response"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 984706 // Future
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>Response</code> interface provides methods used to obtain the
 payload and context of a message sent in response to an operation
 invocation.

 <p>For asynchronous operation invocations it provides additional methods
 to check the status of the request. The <code>get(...)</code> methods may
 throw the standard
 set of exceptions and their cause may be a <code>RemoteException</code> or a
 {@link WebServiceException} that represents the error that occured during the
 asynchronous method invocation.</p>

 @since JAX-WS 2.0
"
      classrelation 4807298 // <realization>
	relation 4807298 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4807298 // <realization>
	  b parent class_ref 984706 // Future
      end

      operation 12140418 "getContext"
	cpp_inline public return_type class_ref 130178 // Map
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the contained response context.

@return The contained response context. May be <code>null</code> if a
response is not yet available.

"
      end
    end

    class 1433730 "Binding"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>Binding</code> interface is the base interface
 for JAX-WS protocol bindings.

 @since JAX-WS 2.0
"
      operation 12131586 "getHandlerChain"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<javax.xml.ws.handler.Handler> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the handler chain for a protocol binding instance.
If the returned chain is modified a call to <code>setHandlerChain</code>
is required to configure the binding instance with the new chain.

 @return java.util.List&lt;Handler> Handler chain
"
      end

      operation 12131714 "setHandlerChain"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chain" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<javax.xml.ws.handler.Handler> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the handler chain for the protocol binding instance.

 @param chain    A List of handler configuration entries
 @throws WebServiceException On an error in the configuration of
                 the handler chain
 @throws java.lang.UnsupportedOperationException If this
         operation is not supported. This may be done to
         avoid any overriding of a pre-configured handler
         chain.
"
      end

      operation 12131842 "getBindingID"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the URI for this binding instance.

@return String The binding identifier for the port.
   Never returns <code>null</code>

@since JAX-WS 2.1
"
      end
    end

    class 1433986 "BindingProvider"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>BindingProvider</code> interface provides access to the
protocol binding and associated context objects for request and
response message processing.

@since JAX-WS 2.0

@see javax.xml.ws.Binding
"
      classrelation 4805506 // USERNAME_PROPERTY (<unidirectional association>)
	relation 4805506 --->
	  a role_name "USERNAME_PROPERTY" init_value "
            \"javax.xml.ws.security.auth.username\"" class_relation const_relation public
	    comment "
Standard property: User name for authentication.
<p>Type: <code>java.lang.String</code>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4805506 // USERNAME_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4805634 // PASSWORD_PROPERTY (<unidirectional association>)
	relation 4805634 --->
	  a role_name "PASSWORD_PROPERTY" init_value "
            \"javax.xml.ws.security.auth.password\"" class_relation const_relation public
	    comment "
Standard property: Password for authentication.
<p>Type: <code>java.lang.String</code>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4805634 // PASSWORD_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4805762 // ENDPOINT_ADDRESS_PROPERTY (<unidirectional association>)
	relation 4805762 --->
	  a role_name "ENDPOINT_ADDRESS_PROPERTY" init_value "
            \"javax.xml.ws.service.endpoint.address\"" class_relation const_relation public
	    comment "
Standard property: Target service endpoint address. The
URI scheme for the endpoint address specification MUST
correspond to the protocol/transport binding for the
binding in use.
<p>Type: <code>java.lang.String</code>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4805762 // ENDPOINT_ADDRESS_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4805890 // SESSION_MAINTAIN_PROPERTY (<unidirectional association>)
	relation 4805890 --->
	  a role_name "SESSION_MAINTAIN_PROPERTY" init_value "
            \"javax.xml.ws.session.maintain\"" class_relation const_relation public
	    comment "
Standard property: This boolean property is used by a service
client to indicate whether or not it wants to participate in
a session with a service endpoint. If this property is set to
<code>true</code>, the service client indicates that it wants the session
to be maintained. If set to <code>false</code>, the session is not maintained.
The default value for this property is <code>false</code>.
<p>Type: <code>java.lang.Boolean</code>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4805890 // SESSION_MAINTAIN_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4806018 // SOAPACTION_USE_PROPERTY (<unidirectional association>)
	relation 4806018 --->
	  a role_name "SOAPACTION_USE_PROPERTY" init_value "
            \"javax.xml.ws.soap.http.soapaction.use\"" class_relation const_relation public
	    comment "
Standard property for SOAPAction. This boolean property
indicates whether or not the value of the
<code>javax.xml.ws.soap.http.soapaction.uri</code> property
is used for the value of the SOAPAction. The
default value of this property is <code>false</code> indicating
that the
<code>javax.xml.ws.soap.http.soapaction.uri</code> property
is not used for the value of the SOAPAction, however,
if WS-Addressing is enabled, the default value is
<code>true</code>.

<p>Type: <code>java.lang.Boolean</code>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4806018 // SOAPACTION_USE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4806146 // SOAPACTION_URI_PROPERTY (<unidirectional association>)
	relation 4806146 --->
	  a role_name "SOAPACTION_URI_PROPERTY" init_value "
            \"javax.xml.ws.soap.http.soapaction.uri\"" class_relation const_relation public
	    comment "
Standard property for SOAPAction. Indicates the SOAPAction
URI if the <code>javax.xml.ws.soap.http.soapaction.use</code>
property is set to <code>true</code>. If WS-Addressing
is enabled, this value will also be used for the value of the
WS-Addressing Action header.  If this property is not set,
the default SOAPAction and WS-Addressing Action will be sent.

<p>Type: <code>java.lang.String</code>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4806146 // SOAPACTION_URI_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12131970 "getRequestContext"
	public return_type class_ref 130178 // Map
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the context that is used to initialize the message context
for request messages.

Modifications to the request context do not affect the message context of
either synchronous or asynchronous operations that have already been
started.

@return The context that is used in processing request messages.
"
      end

      operation 12132098 "getResponseContext"
	public return_type class_ref 130178 // Map
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the context that resulted from processing a response message.

The returned context is for the most recently completed synchronous
operation. Subsequent synchronous operation invocations overwrite the
response context. Asynchronous operations return their response context
via the Response interface.

@return The context that resulted from processing the latest
response messages.
"
      end

      operation 12132226 "getBinding"
	public return_type class_ref 1433730 // Binding
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the Binding for this binding provider.

@return The Binding for this binding provider.
"
      end

      operation 12132354 "getEndpointReference"
	public return_type class_ref 1434114 // EndpointReference
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>EndpointReference</code> associated with
this <code>BindingProvider</code> instance.
<p>
If the Binding for this <code>bindingProvider</code> is
either SOAP1.1/HTTP or SOAP1.2/HTTP, then a
<code>W3CEndpointReference</code> MUST be returned.

@return EndpointReference of the target endpoint associated with this
<code>BindingProvider</code> instance.

@throws java.lang.UnsupportedOperationException If this
<code>BindingProvider</code> uses the XML/HTTP binding.

@see W3CEndpointReference

@since JAX-WS 2.1
"
      end

      operation 12132482 "getEndpointReference"
	public explicit_return_type "T"
	nparams 1
	  param inout name "clazz" type class_ref 130818 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EndpointReference> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>EndpointReference</code> associated with
this <code>BindingProvider</code> instance.  The instance
returned will be of type <code>clazz</code>.

@param clazz Specifies the type of <code>EndpointReference</code>
that MUST be returned.

@return EndpointReference of the target endpoint associated with this
<code>BindingProvider</code> instance. MUST be of type
<code>clazz</code>.

@throws WebServiceException If the Class <code>clazz</code>
is not supported by this implementation.
@throws java.lang.UnsupportedOperationException If this
<code>BindingProvider</code> uses the XML/HTTP binding.

@since JAX-WS 2.1
"
      end
    end

    class 1434114 "EndpointReference"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@XmlTransient
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an WS-Addressing EndpointReference
which is a remote reference to a web service endpoint.
See <a href=\"http://www.w3.org/TR/2006/REC-ws-addr-core-20060509/\">
Web Services Addressing 1.0 - Core</a>
for more information on WS-Addressing EndpointReferences.
<p>
This class is immutable as the typical web service developer
need not be concerned with its contents.  The web service
developer should use this class strictly as a mechanism to
reference a remote web service endpoint. See the {@link Service} APIs
that clients can use to that utilize an <code>EndpointReference</code>.
See the {@link javax.xml.ws.Endpoint}, and
{@link javax.xml.ws.BindingProvider} APIs on how
<code>EndpointReferences</code> can be created for published
endpoints.
<p>
Concrete implementations of this class will represent
an <code>EndpointReference</code> for a particular version of Addressing.
For example the {@link W3CEndpointReference} is for use
with W3C Web Services Addressing 1.0 - Core Recommendation.
If JAX-WS implementors need to support different versions
of addressing, they should write their own
<code>EndpointReference</code> subclass for that version.
This will allow a JAX-WS implementation to create
a vendor specific <code>EndpointReferences</code> that the
vendor can use to flag a different version of
addressing.
<p>
Web service developers that wish to pass or return
<code>EndpointReference</code> in Java methods in an
SEI should use
concrete instances of an <code>EndpointReference</code> such
as the <code>W3CEndpointReference</code>.  This way the
schema mapped from the SEI will be more descriptive of the
type of endpoint reference being passed.
<p>
JAX-WS implementors are expected to extract the XML infoset
from an <CODE>EndpointReferece</CODE> using the
<code>{@link EndpointReference#writeTo}</code>
method.
<p>
JAXB will bind this class to xs:anyType. If a better binding
is desired, web services developers should use a concrete
subclass such as {@link W3CEndpointReference}.

@see W3CEndpointReference
@see Service
@since JAX-WS 2.1

 to treat this class like Object as far as databinding is concerned (proposed JAXB 2.1 feature)
 to treat this class like Object as far as databinding is concerned (proposed JAXB 2.1 feature)"
      operation 12136194 "EndpointReference"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor to be only called by derived types.
"
      end

      operation 12136322 "readFrom"
	class_operation public return_type class_ref 1434114 // EndpointReference
	nparams 1
	  param inout name "eprInfoset" type class_ref 627202 // Source
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method to read an EndpointReference from the infoset contained in
<code>eprInfoset</code>. This method delegates to the vendor specific
implementation of the {@link javax.xml.ws.spi.Provider#readEndpointReference} method.

@param eprInfoset The <code>EndpointReference</code> infoset to be unmarshalled

@return the EndpointReference unmarshalled from <code>eprInfoset</code>
   never <code>null</code>
@throws WebServiceException
   if an error occurs while creating the
   <code>EndpointReference</code> from the <CODE>eprInfoset</CODE>
@throws java.lang.IllegalArgumentException
    if the <code>null</code> <code>eprInfoset</code> value is given.
"
      end

      operation 12136450 "writeTo"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 645506 // Result
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "write this <code>EndpointReference</code> to the specified infoset format

@param result for writing infoset
@throws WebServiceException
  if there is an error writing the
  <code>EndpointReference</code> to the specified <code>result</code>.

@throws java.lang.IllegalArgumentException
     If the <code>null</code> <code>result</code> value is given.
"
      end

      operation 12136578 "getPort"
	public explicit_return_type "T"
	nparams 2
	  param inout name "serviceEndpointInterface" type class_ref 130818 // Class
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>getPort</code> method returns a proxy. If there
are any reference parameters in the
<code>EndpointReference</code> instance, then those reference
parameters MUST appear as SOAP headers, indicating them to be
reference parameters, on all messages sent to the endpoint.
The parameter  <code>serviceEndpointInterface</code> specifies
the service endpoint interface that is supported by the
returned proxy.
The <code>EndpointReference</code> instance specifies the
endpoint that will be invoked by the returned proxy.
In the implementation of this method, the JAX-WS
runtime system takes the responsibility of selecting a protocol
binding (and a port) and configuring the proxy accordingly from
the WSDL Metadata from this <code>EndpointReference</code> or from
annotations on the <code>serviceEndpointInterface</code>.  For this method
to successfully return a proxy, WSDL metadata MUST be available and the
<code>EndpointReference</code> instance MUST contain an implementation understood
<code>serviceName</code> metadata.
<p>
Because this port is not created from a <code>Service</code> object, handlers
will not automatically be configured, and the <code>HandlerResolver</code>
and <code>Executor</code> cannot be get or set for this port. The
<code>BindingProvider().getBinding().setHandlerChain()</code>
method can be used to manually configure handlers for this port.


@param serviceEndpointInterface Service endpoint interface
@param features  An array of <code>WebServiceFeatures</code> to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.
@return Object Proxy instance that supports the
                 specified service endpoint interface
@throws WebServiceException
                 <UL>
                 <LI>If there is an error during creation
                     of the proxy
                 <LI>If there is any missing WSDL metadata
                     as required by this method
                 <LI>If this
                     <code>endpointReference</code>
                     is invalid
                 <LI>If an illegal
                     <code>serviceEndpointInterface</code>
                     is specified
                 <LI>If a feature is enabled that is not compatible with
                     this port or is unsupported.
                  </UL>

@see java.lang.reflect.Proxy
@see WebServiceFeature
"
      end

      operation 12136706 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Displays EPR infoset for debugging convenience.
"
      end
    end

    class 1434242 "BindingType"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>BindingType</code> annotation is used to
 specify the binding to use for a web service
 endpoint implementation class.
 <p>
 This annotation may be overriden programmatically or via
 deployment descriptors, depending on the platform in use.

 @since JAX-WS 2.0

"
      operation 12132610 "value"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\" ;"
	
	
	
	comment "A binding identifier (a URI).
If not specified, the default is the SOAP 1.1 / HTTP binding.
<p>
See the <code>SOAPBinding</code> and <code>HTTPBinding</code>
for the definition of the standard binding identifiers.

@see javax.xml.ws.Binding
@see javax.xml.ws.soap.SOAPBinding#SOAP11HTTP_BINDING
@see javax.xml.ws.soap.SOAPBinding#SOAP12HTTP_BINDING
@see javax.xml.ws.http.HTTPBinding#HTTP_BINDING
"
      end
    end

    class 1434370 "Dispatch"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>Dispatch</code> interface provides support
 for the dynamic invocation of a service endpoint operations. The
 <code>javax.xml.ws.Service</code>
 class acts as a factory for the creation of <code>Dispatch</code>
 instances.

 @since JAX-WS 2.0
"
      classrelation 4806274 // <generalisation>
	relation 4806274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4806274 // <generalisation>
	  b parent class_ref 1433986 // BindingProvider
      end

      operation 12132738 "invoke"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "msg" explicit_type "T"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoke a service operation synchronously.

The client is responsible for ensuring that the <code>msg</code> object
when marshalled is formed according to the requirements of the protocol
binding in use.

@param msg An object that will form the message or payload of
    the message used to invoke the operation.
@return The response message or message payload to the
    operation invocation.
@throws WebServiceException If a fault occurs during communication with
    the service
@throws WebServiceException If there is any error in the configuration of
    the <code>Dispatch</code> instance
"
      end

      operation 12132866 "invokeAsync"
	cpp_inline public return_type class_ref 1433602 // Response
	nparams 1
	  param inout name "msg" explicit_type "T"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoke a service operation asynchronously.  The
 method returns without waiting for the response to the operation
 invocation, the results of the operation are obtained by polling the
 returned <code>Response</code>.
<p>
The client is responsible for ensuring that the <code>msg</code> object
when marshalled is formed according to the requirements of the protocol
binding in use.

@param msg An object that will form the message or payload of
    the message used to invoke the operation.
@return The response message or message payload to the
    operation invocation.
@throws WebServiceException If there is any error in the configuration of
    the <code>Dispatch</code> instance
"
      end

      operation 12132994 "invokeAsync"
	cpp_inline public return_type class_ref 984706 // Future
	nparams 2
	  param inout name "msg" explicit_type "T"
	  param inout name "handler" type class_ref 1433474 // AsyncHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoke a service operation asynchronously. The
 method returns without waiting for the response to the operation
 invocation, the results of the operation are communicated to the client
 via the passed in <code>handler</code>.
<p>
The client is responsible for ensuring that the <code>msg</code> object
when marshalled is formed according to the requirements of the protocol
binding in use.

@param msg An object that will form the message or payload of
    the message used to invoke the operation.
@param handler The handler object that will receive the
    response to the operation invocation.
@return A <code>Future</code> object that may be used to check the status
    of the operation invocation. This object MUST NOT be used to try to
    obtain the results of the operation - the object returned from
    <code>Future&lt;?>.get()</code> is implementation dependent
    and any use of it will result in non-portable behaviour.
@throws WebServiceException If there is any error in the configuration of
    the <code>Dispatch</code> instance
"
      end

      operation 12133122 "invokeOneWay"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "msg" explicit_type "T"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invokes a service operation using the one-way
 interaction mode. The operation invocation is logically non-blocking,
 subject to the capabilities of the underlying protocol, no results
 are returned. When
 the protocol in use is SOAP/HTTP, this method MUST block until
 an HTTP response code has been received or an error occurs.
<p>
The client is responsible for ensuring that the <code>msg</code> object
when marshalled is formed according to the requirements of the protocol
binding in use.

@param msg An object that will form the message or payload of
    the message used to invoke the operation.
@throws WebServiceException If there is any error in the configuration of
    the <code>Dispatch</code> instance or if an error occurs during the
    invocation.
"
      end
    end

    class 1434498 "Endpoint"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Web service endpoint.

<p>Endpoints are created using the static methods defined in this
class. An endpoint is always tied to one <code>Binding</code>
and one implementor, both set at endpoint creation time.

<p>An endpoint is either in a published or an unpublished state.
The <code>publish</code> methods can be used to start publishing
an endpoint, at which point it starts accepting incoming requests.
Conversely, the <code>stop</code> method can be used to stop
accepting incoming requests and take the endpoint down.
Once stopped, an endpoint cannot be published again.

<p>An <code>Executor</code> may be set on the endpoint in order
to gain better control over the threads used to dispatch incoming
requests. For instance, thread pooling with certain parameters
can be enabled by creating a <code>ThreadPoolExecutor</code> and
registering it with the endpoint.

<p>Handler chains can be set using the contained <code>Binding</code>.

<p>An endpoint may have a list of metadata documents, such as WSDL
and XMLSchema documents, bound to it. At publishing time, the
JAX-WS implementation will try to reuse as much of that metadata
as possible instead of generating new ones based on the annotations
present on the implementor.

@since JAX-WS 2.0

@see javax.xml.ws.Binding
@see javax.xml.ws.BindingType
@see javax.xml.ws.soap.SOAPBinding
@see java.util.concurrent.Executor

"
      classrelation 4806402 // WSDL_SERVICE (<unidirectional association>)
	relation 4806402 --->
	  a role_name "WSDL_SERVICE" init_value " \"javax.xml.ws.wsdl.service\"" class_relation const_relation public
	    comment " Standard property: name of WSDL service.
 <p>Type: javax.xml.namespace.QName

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4806402 // WSDL_SERVICE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4806530 // WSDL_PORT (<unidirectional association>)
	relation 4806530 --->
	  a role_name "WSDL_PORT" init_value " \"javax.xml.ws.wsdl.port\"" class_relation const_relation public
	    comment " Standard property: name of WSDL port.
 <p>Type: javax.xml.namespace.QName

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4806530 // WSDL_PORT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12133250 "create"
	class_operation public return_type class_ref 1434498 // Endpoint
	nparams 1
	  param inout name "implementor" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an endpoint with the specified implementor object. If there is
a binding specified via a BindingType annotation then it MUST be used else
a default of SOAP 1.1 / HTTP binding MUST be used.
<p>
The newly created endpoint may be published by calling
one of the {@link javax.xml.ws.Endpoint#publish(String)} and
{@link javax.xml.ws.Endpoint#publish(Object)} methods.


@param implementor The endpoint implementor.

@return The newly created endpoint.

"
      end

      operation 12133378 "create"
	class_operation public return_type class_ref 1434498 // Endpoint
	nparams 2
	  param inout name "implementor" type class_ref 129538 // Object
	  param inout name "features" type class_ref 1434626 // WebServiceFeature
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ... ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an endpoint with the specified implementor object and web
service features. If there is a binding specified via a BindingType
annotation then it MUST be used else a default of SOAP 1.1 / HTTP
binding MUST be used.
<p>
The newly created endpoint may be published by calling
one of the {@link javax.xml.ws.Endpoint#publish(String)} and
{@link javax.xml.ws.Endpoint#publish(Object)} methods.


@param implementor The endpoint implementor.
@param features A list of WebServiceFeature to configure on the
       endpoint. Supported features not in the <code>features
       </code> parameter will have their default values.


@return The newly created endpoint.
@since JAX-WS 2.2

"
      end

      operation 12133506 "create"
	class_operation public return_type class_ref 1434498 // Endpoint
	nparams 2
	  param inout name "bindingId" type class_ref 128130 // String
	  param inout name "implementor" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an endpoint with the specified binding type and
implementor object.
<p>
The newly created endpoint may be published by calling
one of the {@link javax.xml.ws.Endpoint#publish(String)} and
{@link javax.xml.ws.Endpoint#publish(Object)} methods.

@param bindingId A URI specifying the binding to use. If the bindingID is
<code>null</code> and no binding is specified via a BindingType
annotation then a default SOAP 1.1 / HTTP binding MUST be used.

@param implementor The endpoint implementor.

@return The newly created endpoint.

"
      end

      operation 12133634 "create"
	class_operation public return_type class_ref 1434498 // Endpoint
	nparams 3
	  param inout name "bindingId" type class_ref 128130 // String
	  param inout name "implementor" type class_ref 129538 // Object
	  param inout name "features" type class_ref 1434626 // WebServiceFeature
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ... ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an endpoint with the specified binding type,
implementor object, and web service features.
<p>
The newly created endpoint may be published by calling
one of the {@link javax.xml.ws.Endpoint#publish(String)} and
{@link javax.xml.ws.Endpoint#publish(Object)} methods.

@param bindingId A URI specifying the binding to use. If the bindingID is
<code>null</code> and no binding is specified via a BindingType
annotation then a default SOAP 1.1 / HTTP binding MUST be used.

@param implementor The endpoint implementor.

@param features A list of WebServiceFeature to configure on the
       endpoint. Supported features not in the <code>features
       </code> parameter will have their default values.

@return The newly created endpoint.
@since JAX-WS 2.2
"
      end

      operation 12133762 "getBinding"
	abstract public return_type class_ref 1433730 // Binding
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the binding for this endpoint.

@return The binding for this endpoint
"
      end

      operation 12133890 "getImplementor"
	abstract public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the implementation object for this endpoint.

@return The implementor for this endpoint
"
      end

      operation 12134018 "publish"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "address" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Publishes this endpoint at the given address.
The necessary server infrastructure will be created and
configured by the JAX-WS implementation using some default configuration.
In order to get more control over the server configuration, please
use the {@link javax.xml.ws.Endpoint#publish(Object)} method instead.

@param address A URI specifying the address to use. The address
       MUST be compatible with the binding specified at the
       time the endpoint was created.

@throws java.lang.IllegalArgumentException
         If the provided address URI is not usable
         in conjunction with the endpoint's binding.

@throws java.lang.IllegalStateException
         If the endpoint has been published already or it has been stopped.

@throws java.lang.SecurityException
         If a <code>java.lang.SecurityManger</code>
         is being used and the application doesn't have the
         <code>WebServicePermission(\"publishEndpoint\")</code> permission.
"
      end

      operation 12134146 "publish"
	class_operation public return_type class_ref 1434498 // Endpoint
	nparams 2
	  param inout name "address" type class_ref 128130 // String
	  param inout name "implementor" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and publishes an endpoint for the specified implementor
object at the given address.
<p>
The necessary server infrastructure will be created and
configured by the JAX-WS implementation using some default configuration.

In order to get more control over the server configuration, please
use the {@link javax.xml.ws.Endpoint#create(String,Object)} and
{@link javax.xml.ws.Endpoint#publish(Object)} methods instead.

@param address A URI specifying the address and transport/protocol
       to use. A http: URI MUST result in the SOAP 1.1/HTTP
       binding being used. Implementations may support other
       URI schemes.
@param implementor The endpoint implementor.

@return The newly created endpoint.

@throws java.lang.SecurityException
         If a <code>java.lang.SecurityManger</code>
         is being used and the application doesn't have the
         <code>WebServicePermission(\"publishEndpoint\")</code> permission.

"
      end

      operation 12134274 "publish"
	class_operation public return_type class_ref 1434498 // Endpoint
	nparams 3
	  param inout name "address" type class_ref 128130 // String
	  param inout name "implementor" type class_ref 129538 // Object
	  param inout name "features" type class_ref 1434626 // WebServiceFeature
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ... ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and publishes an endpoint for the specified implementor
object at the given address. The created endpoint is configured
with the web service features.
<p>
The necessary server infrastructure will be created and
configured by the JAX-WS implementation using some default configuration.

In order to get more control over the server configuration, please
use the {@link javax.xml.ws.Endpoint#create(String,Object)} and
{@link javax.xml.ws.Endpoint#publish(Object)} methods instead.

@param address A URI specifying the address and transport/protocol
       to use. A http: URI MUST result in the SOAP 1.1/HTTP
       binding being used. Implementations may support other
       URI schemes.
@param implementor The endpoint implementor.
@param features A list of WebServiceFeature to configure on the
       endpoint. Supported features not in the <code>features
       </code> parameter will have their default values.
@return The newly created endpoint.

@throws java.lang.SecurityException
         If a <code>java.lang.SecurityManger</code>
         is being used and the application doesn't have the
         <code>WebServicePermission(\"publishEndpoint\")</code> permission.
@since JAX-WS 2.2
"
      end

      operation 12134402 "publish"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "serverContext" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Publishes this endpoint at the provided server context.
A server context encapsulates the server infrastructure
and addressing information for a particular transport.
For a call to this method to succeed, the server context
passed as an argument to it MUST be compatible with the
endpoint's binding.

@param serverContext An object representing a server
          context to be used for publishing the endpoint.

@throws java.lang.IllegalArgumentException
             If the provided server context is not
             supported by the implementation or turns
             out to be unusable in conjunction with the
             endpoint's binding.

@throws java.lang.IllegalStateException
        If the endpoint has been published already or it has been stopped.

@throws java.lang.SecurityException
         If a <code>java.lang.SecurityManger</code>
         is being used and the application doesn't have the
         <code>WebServicePermission(\"publishEndpoint\")</code> permission.
"
      end

      operation 12134530 "publish"
	public explicit_return_type "void"
	nparams 1
	  param inout name "serverContext" type class_ref 1434754 // HttpContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Publishes this endpoint at the provided server context.
A server context encapsulates the server infrastructure
and addressing information for a particular transport.
For a call to this method to succeed, the server context
passed as an argument to it MUST be compatible with the
endpoint's binding.

<p>
This is meant for container developers to publish the
the endpoints portably and not intended for the end
developers.


@param serverContext An object representing a server
          context to be used for publishing the endpoint.

@throws java.lang.IllegalArgumentException
             If the provided server context is not
             supported by the implementation or turns
             out to be unusable in conjunction with the
             endpoint's binding.

@throws java.lang.IllegalStateException
        If the endpoint has been published already or it has been stopped.

@throws java.lang.SecurityException
         If a <code>java.lang.SecurityManger</code>
         is being used and the application doesn't have the
         <code>WebServicePermission(\"publishEndpoint\")</code> permission.
@since JAX-WS 2.2
"
      end

      operation 12134658 "stop"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops publishing this endpoint.

If the endpoint is not in a published state, this method
has no effect.

"
      end

      operation 12134786 "isPublished"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the endpoint is in the published state.

@return <code>true</code> if the endpoint is in the published state.
"
      end

      operation 12134914 "getMetadata"
	abstract public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<javax.xml.transform.Source> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of metadata documents for the service.

@return <code>List&lt;javax.xml.transform.Source&gt;</code> A list of metadata documents for the service
"
      end

      operation 12135042 "setMetadata"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "metadata" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<javax.xml.transform.Source> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the metadata for this endpoint.

@param metadata A list of XML document sources containing
          metadata information for the endpoint (e.g.
          WSDL or XML Schema documents)

@throws java.lang.IllegalStateException  If the endpoint
        has already been published.
"
      end

      operation 12135170 "getExecutor"
	abstract public return_type class_ref 503426 // Executor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the executor for this <code>Endpoint</code>instance.

The executor is used to dispatch an incoming request to
the implementor object.

@return The <code>java.util.concurrent.Executor</code> to be
        used to dispatch a request.

@see java.util.concurrent.Executor
"
      end

      operation 12135298 "setExecutor"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "executor" type class_ref 503426 // Executor
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the executor for this <code>Endpoint</code> instance.

The executor is used to dispatch an incoming request to
the implementor object.

If this <code>Endpoint</code> is published using the
<code>publish(Object)</code> method and the specified server
context defines its own threading behavior, the executor
may be ignored.

@param executor The <code>java.util.concurrent.Executor</code>
       to be used to dispatch a request.

@throws SecurityException  If the instance does not support
        setting an executor for security reasons (e.g. the
        necessary permissions are missing).

@see java.util.concurrent.Executor
"
      end

      operation 12135426 "getProperties"
	abstract public return_type class_ref 130178 // Map
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the property bag for this <code>Endpoint</code> instance.

@return Map&lt;String,Object&gt; The property bag
        associated with this instance.
"
      end

      operation 12135554 "setProperties"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "properties" type class_ref 130178 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the property bag for this <code>Endpoint</code> instance.

@param properties The property bag associated with
       this instance.
"
      end

      operation 12135682 "getEndpointReference"
	abstract public return_type class_ref 1434114 // EndpointReference
	nparams 1
	  param inout name "" explicit_type "Element...referenceParameters"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>EndpointReference</code> associated with
this <code>Endpoint</code> instance.
<p>
If the Binding for this <code>bindingProvider</code> is
either SOAP1.1/HTTP or SOAP1.2/HTTP, then a
<code>W3CEndpointReference</code> MUST be returned.

@param referenceParameters Reference parameters to be associated with the
returned <code>EndpointReference</code> instance.
@return EndpointReference of this <code>Endpoint</code> instance.
If the returned <code>EndpointReference</code> is of type
<code>W3CEndpointReference</code> then it MUST contain the
the specified <code>referenceParameters</code>.

@throws WebServiceException If any error in the creation of
the <code>EndpointReference</code> or if the <code>Endpoint</code> is
not in the published state.
@throws UnsupportedOperationException If this <code>BindingProvider</code>
uses the XML/HTTP binding.

@see W3CEndpointReference

@since JAX-WS 2.1
"
      end

      operation 12135810 "getEndpointReference"
	abstract public explicit_return_type "T"
	nparams 2
	  param inout name "clazz" type class_ref 130818 // Class
	  param inout name "" explicit_type "Element...referenceParameters"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EndpointReference> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>EndpointReference</code> associated with
this <code>Endpoint</code> instance.

@param clazz Specifies the type of EndpointReference  that MUST be returned.
@param referenceParameters Reference parameters to be associated with the
returned <code>EndpointReference</code> instance.
@return EndpointReference of type <code>clazz</code> of this
<code>Endpoint</code> instance.
If the returned <code>EndpointReference</code> is of type
<code>W3CEndpointReference</code> then it MUST contain the
the specified <code>referenceParameters</code>.

@throws WebServiceException If any error in the creation of
the <code>EndpointReference</code> or if the <code>Endpoint</code> is
not in the published state or if the <code>clazz</code> is not a supported
<code>EndpointReference</code> type.
@throws UnsupportedOperationException If this <code>BindingProvider</code>
uses the XML/HTTP binding.


@since JAX-WS 2.1
"
      end

      operation 12135938 "setEndpointContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ctxt" type class_ref 1434882 // EndpointContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "By settng a <code>EndpointContext</code>, JAX-WS runtime knows about
addresses of other endpoints in an application. If multiple endpoints
share different ports of a WSDL, then the multiple port addresses
are patched when the WSDL is accessed.

<p>
This needs to be set before publishing the endpoints.

@param ctxt that is shared for multiple endpoints
@throws java.lang.IllegalStateException
       If the endpoint has been published already or it has been stopped.

@since JAX-WS 2.2
"
      end
    end

    class 1434626 "WebServiceFeature"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A WebServiceFeature is used to represent a feature that can be
enabled or disabled for a web service.
<p>
The JAX-WS specification will define some standard features and
JAX-WS implementors are free to define additional features if
necessary.  Vendor specific features may not be portable so
caution should be used when using them. Each Feature definition
MUST define a <code>public static final String ID</code>
that can be used in the Feature annotation to refer
to the feature. This ID MUST be unique across all features
of all vendors.  When defining a vendor specific feature ID,
use a vendor specific namespace in the ID string.

@see javax.xml.ws.RespectBindingFeature
@see javax.xml.ws.soap.AddressingFeature
@see javax.xml.ws.soap.MTOMFeature

@since 2.1
"
      operation 12139650 "getID"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Each Feature definition MUST define a public static final
String ID that can be used in the Feature annotation to refer
to the feature.

 public static final String ID = \"some unique feature Identifier\";

Get the unique identifier for this WebServiceFeature.

@return the unique identifier for this feature.
"
      end

      attribute 2626050 "enabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies if the feature is enabled or disabled

"
      end

      operation 12139778 "WebServiceFeature"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12139906 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this feature is enabled.

@return <code>true</code> if and only if the feature is enabled .
"
      end
    end

    class 1434882 "EndpointContext"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>EndpointContext</code> allows multiple endpoints in an application
to share any information. For example, servlet application's war may
contain multiple endpoints and these endpoints can get addresses of each
other by sharing this context. If multiple endpoints share different
ports of a WSDL, then the multiple port addresses can be patched
when the WSDL is accessed. It also allows all endpoints to share any
other runtime information.

<p>
This needs to be set by using {@link Endpoint#setEndpointContext}
before {@link Endpoint#publish} methods.

@author Jitendra Kotamraju
@since JAX-WS 2.2
"
      operation 12136066 "getEndpoints"
	abstract public return_type class_ref 192258 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Endpoint> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This gives list of endpoints in an application. For e.g in
servlet container, a war file may contain multiple endpoints.
In case of http, these endpoints are hosted on the same http
server.

@return list of all endpoints in an application
"
      end
    end

    class 1435010 "Holder"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Holds a value of type <code>T</code>.

@since JAX-WS 2.0
"
      classrelation 4806658 // <realization>
	relation 4806658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4806658 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2625794 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2623699057546497185L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2625922 "value"
	public explicit_type "T"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value contained in the holder.

"
      end

      operation 12137090 "Holder"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new holder with a <code>null</code> value.
"
      end

      operation 12137218 "Holder"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "value" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new holder with the specified value.

@param value The value to be stored in the holder.
"
      end
    end

    class 1435138 "LogicalMessage"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>LogicalMessage</code> interface represents a
 protocol agnostic XML message and contains methods that
 provide access to the payload of the message.

 @since JAX-WS 2.0
"
      operation 12137346 "getPayload"
	public return_type class_ref 627202 // Source
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the message payload as an XML source, may be called
 multiple times on the same LogicalMessage instance, always
 returns a new <code>Source</code> that may be used to retrieve the entire
 message payload.

 <p>If the returned <code>Source</code> is an instance of
 <code>DOMSource</code>, then
 modifications to the encapsulated DOM tree change the message
 payload in-place, there is no need to susequently call
 <code>setPayload</code>. Other types of <code>Source</code> provide only
 read access to the message payload.

 @return The contained message payload; returns <code>null</code> if no
         payload is present in this message.
"
      end

      operation 12137474 "setPayload"
	public explicit_return_type "void"
	nparams 1
	  param inout name "payload" type class_ref 627202 // Source
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the message payload

 @param  payload message payload
 @throws WebServiceException If any error during the setting
         of the payload in this message
 @throws java.lang.UnsupportedOperationException If this
         operation is not supported
"
      end

      operation 12137602 "getPayload"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "context" type class_ref 1405570 // JAXBContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the message payload as a JAXB object. Note that there is no
 connection between the returned object and the message payload,
 changes to the payload require calling <code>setPayload</code>.

 @param  context The JAXBContext that should be used to unmarshall
         the message payload
 @return The contained message payload; returns <code>null</code> if no
         payload is present in this message
 @throws WebServiceException If an error occurs when using a supplied
    JAXBContext to unmarshall the payload. The cause of
    the WebServiceException is the original JAXBException.
"
      end

      operation 12137730 "setPayload"
	public explicit_return_type "void"
	nparams 2
	  param inout name "payload" type class_ref 129538 // Object
	  param inout name "context" type class_ref 1405570 // JAXBContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the message payload

 @param  payload message payload
 @param  context The JAXBContext that should be used to marshall
         the payload
 @throws java.lang.UnsupportedOperationException If this
         operation is not supported
 @throws WebServiceException If an error occurs when using the supplied
    JAXBContext to marshall the payload. The cause of
    the WebServiceException is the original JAXBException.
"
      end
    end

    class 1435266 "ProtocolException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>ProtocolException</code> class is a
 base class for exceptions related to a specific protocol binding. Subclasses
 are used to communicate protocol level fault information to clients and may
 be used on the server to control the protocol specific fault representation.

 @since JAX-WS 2.0
"
      classrelation 4806914 // <generalisation>
	relation 4806914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4806914 // <generalisation>
	  b parent class_ref 1435394 // WebServiceException
      end

      operation 12138370 "ProtocolException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new protocol exception with <code>null</code> as its detail message. The
cause is not initialized, and may subsequently be initialized by a call
to <code>Throwable.initCause(java.lang.Throwable)</code>.
"
      end

      operation 12138498 "ProtocolException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new protocol exception with the specified detail message.
The cause is not initialized, and may subsequently be initialized by a
call to <code>Throwable.initCause(java.lang.Throwable)</code>.

@param message the detail message. The detail message is saved for later
  retrieval by the Throwable.getMessage() method.
"
      end

      operation 12138626 "ProtocolException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new runtime exception with the specified detail message and
cause.

Note that the detail message associated with  cause is not automatically
incorporated in  this runtime exception's detail message.

@param message the detail message (which is saved for later retrieval  by
  the Throwable.getMessage() method).
@param cause the cause (which is saved for later retrieval by the
<code>Throwable.getCause()</code> method). (A <code>null</code> value is  permitted, and indicates
that the cause is nonexistent or  unknown.)
"
      end

      operation 12138754 "ProtocolException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new runtime exception with the specified cause and a  detail
message of <code>(cause==null ? null : cause.toString())</code>  (which typically
contains the class and detail message of  cause). This constructor is
useful for runtime exceptions  that are little more than wrappers for
other throwables.

@param cause the cause (which is saved for later retrieval by the
<code>Throwable.getCause()</code> method). (A <code>null</code> value is  permitted, and indicates
that the cause is nonexistent or  unknown.)
"
      end
    end

    class 1435394 "WebServiceException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>WebServiceException</code> class is the base
 exception class for all JAX-WS API runtime exceptions.

 @since JAX-WS 2.0
"
      classrelation 4806786 // <generalisation>
	relation 4806786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4806786 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 12137858 "WebServiceException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a new exception with <code>null</code> as its
 detail message. The cause is not initialized.
"
      end

      operation 12137986 "WebServiceException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a new exception with the specified detail
 message.  The cause is not initialized.
 @param message The detail message which is later
                retrieved using the getMessage method
"
      end

      operation 12138114 "WebServiceException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a new exception with the specified detail
 message and cause.

 @param message The detail message which is later retrieved
                using the getMessage method
 @param cause   The cause which is saved for the later
                retrieval throw by the getCause method
"
      end

      operation 12138242 "WebServiceException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a new WebServiceException with the specified cause
 and a detail message of <tt>(cause==null ? null :
 cause.toString())</tt> (which typically contains the
 class and detail message of <tt>cause</tt>).

 @param cause   The cause which is saved for the later
                retrieval throw by the getCause method.
                (A <tt>null</tt> value is permitted, and
                indicates that the cause is nonexistent or
              unknown.)
"
      end
    end

    class 1435522 "Provider"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " <p>Service endpoints may implement the <code>Provider</code>
 interface as a dynamic alternative to an SEI.

 <p>Implementations are required to support <code>Provider&lt;Source&gt;</code>,
 <code>Provider&lt;SOAPMessage&gt;</code> and
 <code>Provider&lt;DataSource&gt;</code>, depending on the binding
 in use and the service mode.

 <p>The <code>ServiceMode</code> annotation can be used to control whether
 the <code>Provider</code> instance will receive entire protocol messages
 or just message payloads.

 @since JAX-WS 2.0

 @see javax.xml.transform.Source
 @see javax.xml.soap.SOAPMessage
 @see javax.xml.ws.ServiceMode
"
      operation 12138882 "invoke"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "request" explicit_type "T"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invokes an operation occording to the contents of the request
 message.

 @param  request The request message or message payload.
 @return The response message or message payload. May be <code>null</code> if
there is no response.
 @throws WebServiceException If there is an error processing request.
         The cause of the <code>WebServiceException</code> may be set to a subclass
         of <code>ProtocolException</code> to control the protocol level
         representation of the exception.
 @see javax.xml.ws.handler.MessageContext
 @see javax.xml.ws.ProtocolException
"
      end
    end

    class 1435650 "RequestWrapper"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to annotate methods in the Service Endpoint Interface with the request
wrapper bean to be used at runtime. The default value of the <code>localName</code> is
the <code>operationName</code>, as defined in <code>WebMethod</code> annotation and the
<code>targetNamespace</code> is the target namespace of the SEI.
<p> When starting from Java this annotation is used resolve
overloading conflicts in document literal mode. Only the <code>className</code>
is required in this case.

 @since JAX-WS 2.0
"
      operation 12139010 "localName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Element's local name.
"
      end

      operation 12139138 "targetNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Element's namespace name.
"
      end

      operation 12139266 "className"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Request wrapper bean name.
"
      end

      operation 12139394 "partName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "wsdl:part name for the wrapper part

@since JAX-WS 2.2
"
      end
    end

    class 1435778 "RespectBinding"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({ElementType.TYPE, ElementType.METHOD, ElementType.FIELD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@WebServiceFeatureAnnotation(id=RespectBindingFeature.ID,bean=RespectBindingFeature.class)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This feature clarifies the use of the <code>wsdl:binding</code>
in a JAX-WS runtime.
<p>
This annotation MUST only be used in conjunction the
<code>javax.jws.WebService</code>, {@link WebServiceProvider},
{@link WebServiceRef} annotations.
When used with the <code>javax.jws.WebService</code> annotation this
annotation MUST only be used on the service endpoint implementation
class.
When used with a <code>WebServiceRef</code> annotation, this annotation
MUST only be used when a proxy instance is created. The injected SEI
proxy, and endpoint MUST honor the values of the <code>RespectBinding</code>
annotation.
<p>

This annotation's behaviour is defined by the corresponding feature
{@link RespectBindingFeature}.

@see RespectBindingFeature

@since JAX-WS 2.1
"
      operation 12139522 "enabled"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default true;"
	
	
	
	comment "Specifies if this feature is enabled or disabled.
"
      end
    end

    class 1435906 "RespectBindingFeature"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This feature clarifies the use of the <code>wsdl:binding</code>
in a JAX-WS runtime.

This feature can be used during the creation of SEI proxy, and
{@link Dispatch} instances on the client side and {@link Endpoint}
instances on the server side. This feature cannot be used for {@link Service}
instance creation on the client side.
<p>
This feature is only useful with web services that have an
associated WSDL. Enabling this feature requires that a JAX-WS
implementation inspect the <code>wsdl:binding</code> for an
endpoint at runtime to make sure that all <code>wsdl:extensions</code>
that have the <code>required</code> attribute set to <code>true</code>
are understood and are being used.
<p>
The following describes the affects of this feature with respect
to be enabled or disabled:
<ul>
 <li> ENABLED: In this Mode, a JAX-WS runtime MUST assure that all
 required <code>wsdl:binding</code> extensions(including policies) are
 either understood and used by the runtime, or explicitly disabled by the
 web service application. A web service can disable a particular
 extension if there is a corresponding {@link WebServiceFeature} or annotation.
 Similarly, a web service client can disable
 particular extension using the corresponding <code>WebServiceFeature</code> while
 creating a proxy or Dispatch instance.
 The runtime MUST also make sure that binding of
 SEI parameters/return values respect the <code>wsdl:binding</code>.
 With this feature enabled, if a required (<code>wsdl:required=\"true\"</code>)
 <code>wsdl:binding</code> extension is in the WSDL and it is not
 supported by a JAX-WS runtime and it has not
 been explicitly turned off by the web service developer, then
 that JAX-WS runtime MUST behave appropriately based on whether it is
 on the client or server:
 <UL>
   <li>Client: runtime MUST throw a
 {@link WebServiceException} no sooner than when one of the methods
 above is invoked but no later than the first invocation of an endpoint
 operation.
   <li>Server: throw a {@link WebServiceException} and the endpoint MUST fail to deploy
 </ul>

 <li> DISABLED: In this Mode, an implementation may choose whether
 to inspect the <code>wsdl:binding</code> or not and to what degree
 the <code>wsdl:binding</code> will be inspected.  For example,
 one implementation may choose to behave as if this feature is enabled,
 another implementation may only choose to verify the SEI's
 parameter/return type bindings.
</ul>

@see AddressingFeature

@since JAX-WS 2.1
"
      classrelation 4807042 // <generalisation>
	relation 4807042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4807042 // <generalisation>
	  b parent class_ref 1434626 // WebServiceFeature
      end

      classrelation 4807170 // ID (<unidirectional association>)
	relation 4807170 --->
	  a role_name "ID" init_value " \"javax.xml.ws.RespectBindingFeature\"" class_relation const_relation public
	    comment "

Constant value identifying the RespectBindingFeature

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4807170 // ID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12140034 "RespectBindingFeature"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>RespectBindingFeature</code>.
The instance created will be enabled.
"
      end

      operation 12140162 "RespectBindingFeature"
	public explicit_return_type ""
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an RespectBindingFeature

@param enabled specifies whether this feature should
be enabled or not.
"
      end

      operation 12140290 "getID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end
    end

    class 1436034 "ResponseWrapper"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to annotate methods in the Service Endpoint Interface with the response
wrapper bean to be used at runtime. The default value of the <code>localName</code> is
the <code>operationName</code> as defined in <code>WebMethod</code> annotation appended with
<code>Response</code> and the <code>targetNamespace</code> is the target namespace of the SEI.
<p> When starting from Java this annotation is used resolve
overloading conflicts in document literal mode. Only the <code>className</code>
is required in this case.

 @since JAX-WS 2.0
"
      operation 12140546 "localName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Element's local name.
"
      end

      operation 12140674 "targetNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Element's namespace name.
"
      end

      operation 12140802 "className"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Response wrapper bean name.
"
      end

      operation 12140930 "partName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "wsdl:part name for the wrapper part

@since JAX-WS 2.2
"
      end
    end

    class 1436162 "Service"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>Service</code> objects provide the client view of a Web service.
<p><code>Service</code> acts as a factory of the following:
<ul>
<li>Proxies for a target service endpoint.</li>
<li>Instances of {@link javax.xml.ws.Dispatch} for
    dynamic message-oriented invocation of a remote
    operation.
</li>
</ul>

<p>The ports available on a service can be enumerated using the
<code>getPorts</code> method. Alternatively, you can pass a
service endpoint interface to the unary <code>getPort</code> method
and let the runtime select a compatible port.

<p>Handler chains for all the objects created by a <code>Service</code>
can be set by means of a <code>HandlerResolver</code>.

<p>An <code>Executor</code> may be set on the service in order
to gain better control over the threads used to dispatch asynchronous
callbacks. For instance, thread pooling with certain parameters
can be enabled by creating a <code>ThreadPoolExecutor</code> and
registering it with the service.

@since JAX-WS 2.0

@see javax.xml.ws.spi.Provider
@see javax.xml.ws.handler.HandlerResolver
@see java.util.concurrent.Executor
"
      classrelation 4807426 // delegate (<unidirectional association>)
	relation 4807426 --->
	  a role_name "delegate" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4807426 // delegate (<unidirectional association>)
	  b parent class_ref 1436290 // ServiceDelegate
      end

      class 1436418 "Mode"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 2626178 "MESSAGE"
	  public type class_ref 1436418 // Mode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 2626306 "PAYLOAD"
	  public type class_ref 1436418 // Mode
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 12141058 "Service"
	protected explicit_return_type ""
	nparams 2
	  param inout name "wsdlDocumentLocation" type class_ref 243458 // URL
	  param inout name "serviceName" type class_ref 673666 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12141186 "Service"
	protected explicit_return_type ""
	nparams 3
	  param inout name "wsdlDocumentLocation" type class_ref 243458 // URL
	  param inout name "serviceName" type class_ref 673666 // QName
	  param inout name "features" type class_ref 1434626 // WebServiceFeature
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ... ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 12141314 "getPort"
	public explicit_return_type "T"
	nparams 2
	  param inout name "portName" type class_ref 673666 // QName
	  param inout name "serviceEndpointInterface" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>getPort</code> method returns a proxy. A service client
uses this proxy to invoke operations on the target
service endpoint. The <code>serviceEndpointInterface</code>
specifies the service endpoint interface that is supported by
the created dynamic proxy instance.

@param portName  Qualified name of the service endpoint in
                 the WSDL service description.
@param serviceEndpointInterface Service endpoint interface
                 supported by the dynamic proxy instance.
@return Object Proxy instance that
               supports the specified service endpoint
               interface.
@throws WebServiceException This exception is thrown in the
                 following cases:
                 <UL>
                 <LI>If there is an error in creation of
                     the proxy.
                 <LI>If there is any missing WSDL metadata
                     as required by this method.
                 <LI>If an illegal
                     <code>serviceEndpointInterface</code>
                     or <code>portName</code> is specified.
                 </UL>
@see java.lang.reflect.Proxy
@see java.lang.reflect.InvocationHandler
"
      end

      operation 12141442 "getPort"
	public explicit_return_type "T"
	nparams 3
	  param inout name "portName" type class_ref 673666 // QName
	  param inout name "serviceEndpointInterface" type class_ref 130818 // Class
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>getPort</code> method returns a proxy. A service client
uses this proxy to invoke operations on the target
service endpoint. The <code>serviceEndpointInterface</code>
specifies the service endpoint interface that is supported by
the created dynamic proxy instance.

@param portName  Qualified name of the service endpoint in
                 the WSDL service description.
@param serviceEndpointInterface Service endpoint interface
                 supported by the dynamic proxy instance.
@param features  A list of WebServiceFeatures to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.
@return Object Proxy instance that
               supports the specified service endpoint
               interface.
@throws WebServiceException This exception is thrown in the
                 following cases:
                 <UL>
                 <LI>If there is an error in creation of
                     the proxy.
                 <LI>If there is any missing WSDL metadata
                     as required by this method.
                 <LI>If an illegal
                     <code>serviceEndpointInterface</code>
                     or <code>portName</code> is specified.
                 <LI>If a feature is enabled that is not compatible
                     with this port or is unsupported.
                 </UL>
@see java.lang.reflect.Proxy
@see java.lang.reflect.InvocationHandler
@see WebServiceFeature

@since JAX-WS 2.1
"
      end

      operation 12141570 "getPort"
	public explicit_return_type "T"
	nparams 1
	  param inout name "serviceEndpointInterface" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>getPort</code> method returns a proxy. The parameter
<code>serviceEndpointInterface</code> specifies the service
endpoint interface that is supported by the returned proxy.
In the implementation of this method, the JAX-WS
runtime system takes the responsibility of selecting a protocol
binding (and a port) and configuring the proxy accordingly.
The returned proxy should not be reconfigured by the client.

@param serviceEndpointInterface Service endpoint interface.
@return Object instance that supports the
                 specified service endpoint interface.
@throws WebServiceException
                 <UL>
                 <LI>If there is an error during creation
                     of the proxy.
                 <LI>If there is any missing WSDL metadata
                     as required by this method.
                 <LI>If an illegal
                     <code>serviceEndpointInterface</code>
                     is specified.
                 </UL>
"
      end

      operation 12141698 "getPort"
	public explicit_return_type "T"
	nparams 2
	  param inout name "serviceEndpointInterface" type class_ref 130818 // Class
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>getPort</code> method returns a proxy. The parameter
<code>serviceEndpointInterface</code> specifies the service
endpoint interface that is supported by the returned proxy.
In the implementation of this method, the JAX-WS
runtime system takes the responsibility of selecting a protocol
binding (and a port) and configuring the proxy accordingly.
The returned proxy should not be reconfigured by the client.

@param serviceEndpointInterface Service endpoint interface.
@param features  A list of WebServiceFeatures to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.
@return Object instance that supports the
                 specified service endpoint interface.
@throws WebServiceException
                 <UL>
                 <LI>If there is an error during creation
                     of the proxy.
                 <LI>If there is any missing WSDL metadata
                     as required by this method.
                 <LI>If an illegal
                     <code>serviceEndpointInterface</code>
                     is specified.
                 <LI>If a feature is enabled that is not compatible
                     with this port or is unsupported.
                 </UL>

@see WebServiceFeature

@since JAX-WS 2.1
"
      end

      operation 12141826 "getPort"
	public explicit_return_type "T"
	nparams 3
	  param inout name "endpointReference" type class_ref 1434114 // EndpointReference
	  param inout name "serviceEndpointInterface" type class_ref 130818 // Class
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>getPort</code> method returns a proxy.
The parameter <code>endpointReference</code> specifies the
endpoint that will be invoked by the returned proxy.  If there
are any reference parameters in the
<code>endpointReference</code>, then those reference
parameters MUST appear as SOAP headers, indicating them to be
reference parameters, on all messages sent to the endpoint.
The <code>endpointReference's</code> address MUST be used
for invocations on the endpoint.
The parameter <code>serviceEndpointInterface</code> specifies
the service endpoint interface that is supported by the
returned proxy.
In the implementation of this method, the JAX-WS
runtime system takes the responsibility of selecting a protocol
binding (and a port) and configuring the proxy accordingly from
the WSDL associated with this <code>Service</code> instance or
from the metadata from the <code>endpointReference</code>.
If this <code>Service</code> instance has a WSDL and
the <code>endpointReference</code> metadata
also has a WSDL, then the WSDL from this instance MUST be used.
If this <code>Service</code> instance does not have a WSDL and
the <code>endpointReference</code> does have a WSDL, then the
WSDL from the <code>endpointReference</code> MAY be used.
The returned proxy should not be reconfigured by the client.
If this <code>Service</code> instance has a known proxy
port that matches the information contained in
the WSDL,
then that proxy is returned, otherwise a WebServiceException
is thrown.
<p>
Calling this method has the same behavior as the following
<pre>
<code>port = service.getPort(portName, serviceEndpointInterface);</code>
</pre>
where the <code>portName</code> is retrieved from the
metadata of the <code>endpointReference</code> or from the
<code>serviceEndpointInterface</code> and the WSDL
associated with this <code>Service</code> instance.

@param endpointReference  The <code>EndpointReference</code>
for the target service endpoint that will be invoked by the
returned proxy.
@param serviceEndpointInterface Service endpoint interface.
@param features  A list of <code>WebServiceFeatures</code> to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.
@return Object Proxy instance that supports the
                 specified service endpoint interface.
@throws WebServiceException
                 <UL>
                 <LI>If there is an error during creation
                     of the proxy.
                 <LI>If there is any missing WSDL metadata
                     as required by this method.
                 <LI>If the <code>endpointReference</code> metadata does
                     not match the <code>serviceName</code> of this
                     <code>Service</code> instance.
                 <LI>If a <code>portName</code> cannot be extracted
                     from the WSDL or <code>endpointReference</code> metadata.
                 <LI>If an invalid
                     <code>endpointReference</code>
                     is specified.
                 <LI>If an invalid
                     <code>serviceEndpointInterface</code>
                     is specified.
                 <LI>If a feature is enabled that is not compatible
                     with this port or is unsupported.
                 </UL>

@since JAX-WS 2.1
"
      end

      operation 12141954 "addPort"
	public explicit_return_type "void"
	nparams 3
	  param inout name "portName" type class_ref 673666 // QName
	  param inout name "bindingId" type class_ref 128130 // String
	  param inout name "endpointAddress" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new port for the service. Ports created in this way contain
no WSDL port type information and can only be used for creating
<code>Dispatch</code>instances.

@param portName  Qualified name for the target service endpoint.
@param bindingId A String identifier of a binding.
@param endpointAddress Address of the target service endpoint as a URI.
@throws WebServiceException If any error in the creation of
the port.

@see javax.xml.ws.soap.SOAPBinding#SOAP11HTTP_BINDING
@see javax.xml.ws.soap.SOAPBinding#SOAP12HTTP_BINDING
@see javax.xml.ws.http.HTTPBinding#HTTP_BINDING
"
      end

      operation 12142082 "createDispatch"
	public return_type class_ref 1434370 // Dispatch
	nparams 3
	  param inout name "portName" type class_ref 673666 // QName
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "mode" type class_ref 1436418 // Mode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Dispatch</code> instance for use with objects of
the client's choosing.

@param portName  Qualified name for the target service endpoint
@param type The class of object used for messages or message
payloads. Implementations are required to support
<code>javax.xml.transform.Source</code>, <code>javax.xml.soap.SOAPMessage</code>
and <code>javax.activation.DataSource</code>, depending on
the binding in use.
@param mode Controls whether the created dispatch instance is message
or payload oriented, i.e. whether the client will work with complete
protocol messages or message payloads. E.g. when using the SOAP
protocol, this parameter controls whether the client will work with
SOAP messages or the contents of a SOAP body. Mode MUST be MESSAGE
when type is SOAPMessage.

@return Dispatch instance.
@throws WebServiceException If any error in the creation of
                 the <code>Dispatch</code> object.

@see javax.xml.transform.Source
@see javax.xml.soap.SOAPMessage
"
      end

      operation 12142210 "createDispatch"
	public return_type class_ref 1434370 // Dispatch
	nparams 4
	  param inout name "portName" type class_ref 673666 // QName
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "mode" type class_ref 1436418 // Mode
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Dispatch</code> instance for use with objects of
the client's choosing.

@param portName  Qualified name for the target service endpoint
@param type The class of object used for messages or message
payloads. Implementations are required to support
<code>javax.xml.transform.Source</code> and <code>javax.xml.soap.SOAPMessage</code>.
@param mode Controls whether the created dispatch instance is message
or payload oriented, i.e. whether the client will work with complete
protocol messages or message payloads. E.g. when using the SOAP
protocol, this parameter controls whether the client will work with
SOAP messages or the contents of a SOAP body. Mode MUST be <code>MESSAGE</code>
when type is <code>SOAPMessage</code>.
@param features  A list of <code>WebServiceFeatures</code> to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.

@return Dispatch instance.
@throws WebServiceException If any error in the creation of
                 the <code>Dispatch</code> object or if a
                 feature is enabled that is not compatible with
                 this port or is unsupported.

@see javax.xml.transform.Source
@see javax.xml.soap.SOAPMessage
@see WebServiceFeature

@since JAX-WS 2.1
"
      end

      operation 12142338 "createDispatch"
	public return_type class_ref 1434370 // Dispatch
	nparams 4
	  param inout name "endpointReference" type class_ref 1434114 // EndpointReference
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "mode" type class_ref 1436418 // Mode
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Dispatch</code> instance for use with objects of
the client's choosing. If there
are any reference parameters in the
<code>endpointReference</code>, then those reference
parameters MUST appear as SOAP headers, indicating them to be
reference parameters, on all messages sent to the endpoint.
The <code>endpointReference's</code> address MUST be used
for invocations on the endpoint.
In the implementation of this method, the JAX-WS
runtime system takes the responsibility of selecting a protocol
binding (and a port) and configuring the dispatch accordingly from
the WSDL associated with this <code>Service</code> instance or
from the metadata from the <code>endpointReference</code>.
If this <code>Service</code> instance has a WSDL and
the <code>endpointReference</code>
also has a WSDL in its metadata, then the WSDL from this instance MUST be used.
If this <code>Service</code> instance does not have a WSDL and
the <code>endpointReference</code> does have a WSDL, then the
WSDL from the <code>endpointReference</code> MAY be used.
An implementation MUST be able to retrieve the <code>portName</code> from the
<code>endpointReference</code> metadata.
<p>
This method behaves the same as calling
<pre>
<code>dispatch = service.createDispatch(portName, type, mode, features);</code>
</pre>
where the <code>portName</code> is retrieved from the
WSDL or <code>EndpointReference</code> metadata.

@param endpointReference  The <code>EndpointReference</code>
for the target service endpoint that will be invoked by the
returned <code>Dispatch</code> object.
@param type The class of object used to messages or message
payloads. Implementations are required to support
<code>javax.xml.transform.Source</code> and <code>javax.xml.soap.SOAPMessage</code>.
@param mode Controls whether the created dispatch instance is message
or payload oriented, i.e. whether the client will work with complete
protocol messages or message payloads. E.g. when using the SOAP
protocol, this parameter controls whether the client will work with
SOAP messages or the contents of a SOAP body. Mode MUST be <code>MESSAGE</code>
when type is <code>SOAPMessage</code>.
@param features  An array of <code>WebServiceFeatures</code> to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.

@return Dispatch instance
@throws WebServiceException
                 <UL>
                   <LI>If there is any missing WSDL metadata
                     as required by this method.
                   <li>If the <code>endpointReference</code> metadata does
                     not match the <code>serviceName</code> or <code>portName</code>
                     of a WSDL associated
                     with this <code>Service</code> instance.
                   <li>If the <code>portName</code> cannot be determined
                   from the <code>EndpointReference</code> metadata.
                   <li>If any error in the creation of
                    the <code>Dispatch</code> object.
                   <li>If a feature is enabled that is not
                   compatible with this port or is unsupported.
                 </UL>

@see javax.xml.transform.Source
@see javax.xml.soap.SOAPMessage
@see WebServiceFeature

@since JAX-WS 2.1
"
      end

      operation 12142466 "createDispatch"
	public return_type class_ref 1434370 // Dispatch
	nparams 3
	  param inout name "portName" type class_ref 673666 // QName
	  param inout name "context" type class_ref 1405570 // JAXBContext
	  param inout name "mode" type class_ref 1436418 // Mode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Dispatch</code> instance for use with JAXB
generated objects.

@param portName  Qualified name for the target service endpoint
@param context The JAXB context used to marshall and unmarshall
messages or message payloads.
@param mode Controls whether the created dispatch instance is message
or payload oriented, i.e. whether the client will work with complete
protocol messages or message payloads. E.g. when using the SOAP
protocol, this parameter controls whether the client will work with
SOAP messages or the contents of a SOAP body.

@return Dispatch instance.
@throws WebServiceException If any error in the creation of
                 the <code>Dispatch</code> object.

@see javax.xml.bind.JAXBContext
"
      end

      operation 12142594 "createDispatch"
	public return_type class_ref 1434370 // Dispatch
	nparams 4
	  param inout name "portName" type class_ref 673666 // QName
	  param inout name "context" type class_ref 1405570 // JAXBContext
	  param inout name "mode" type class_ref 1436418 // Mode
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Dispatch</code> instance for use with JAXB
generated objects.

@param portName  Qualified name for the target service endpoint
@param context The JAXB context used to marshall and unmarshall
messages or message payloads.
@param mode Controls whether the created dispatch instance is message
or payload oriented, i.e. whether the client will work with complete
protocol messages or message payloads. E.g. when using the SOAP
protocol, this parameter controls whether the client will work with
SOAP messages or the contents of a SOAP body.
@param features  A list of <code>WebServiceFeatures</code> to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.

@return Dispatch instance.
@throws WebServiceException If any error in the creation of
                 the <code>Dispatch</code> object or if a
                 feature is enabled that is not compatible with
                 this port or is unsupported.

@see javax.xml.bind.JAXBContext
@see WebServiceFeature

@since JAX-WS 2.1
"
      end

      operation 12142722 "createDispatch"
	public return_type class_ref 1434370 // Dispatch
	nparams 4
	  param inout name "endpointReference" type class_ref 1434114 // EndpointReference
	  param inout name "context" type class_ref 1405570 // JAXBContext
	  param inout name "mode" type class_ref 1436418 // Mode
	  param inout name "" explicit_type "WebServiceFeature...features"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Dispatch</code> instance for use with JAXB
generated objects. If there
are any reference parameters in the
<code>endpointReference</code>, then those reference
parameters MUST appear as SOAP headers, indicating them to be
reference parameters, on all messages sent to the endpoint.
The <code>endpointReference's</code> address MUST be used
for invocations on the endpoint.
In the implementation of this method, the JAX-WS
runtime system takes the responsibility of selecting a protocol
binding (and a port) and configuring the dispatch accordingly from
the WSDL associated with this <code>Service</code> instance or
from the metadata from the <code>endpointReference</code>.
If this <code>Service</code> instance has a WSDL and
the <code>endpointReference</code>
also has a WSDL in its metadata, then the WSDL from this instance
MUST be used.
If this <code>Service</code> instance does not have a WSDL and
the <code>endpointReference</code> does have a WSDL, then the
WSDL from the <code>endpointReference</code> MAY be used.
An implementation MUST be able to retrieve the <code>portName</code> from the
<code>endpointReference</code> metadata.
<p>
This method behavies the same as calling
<pre>
<code>dispatch = service.createDispatch(portName, context, mode, features);</code>
</pre>
where the <code>portName</code> is retrieved from the
WSDL or <code>endpointReference</code> metadata.

@param endpointReference  The <code>EndpointReference</code>
for the target service endpoint that will be invoked by the
returned <code>Dispatch</code> object.
@param context The JAXB context used to marshall and unmarshall
messages or message payloads.
@param mode Controls whether the created dispatch instance is message
or payload oriented, i.e. whether the client will work with complete
protocol messages or message payloads. E.g. when using the SOAP
protocol, this parameter controls whether the client will work with
SOAP messages or the contents of a SOAP body.
@param features  An array of <code>WebServiceFeatures</code> to configure on the
               proxy.  Supported features not in the <code>features
               </code> parameter will have their default values.

@return Dispatch instance
@throws WebServiceException
                 <UL>
                   <li>If there is any missing WSDL metadata
                     as required by this method.
                   <li>If the <code>endpointReference</code> metadata does
                   not match the <code>serviceName</code> or <code>portName</code>
                   of a WSDL associated
                   with this <code>Service</code> instance.
                   <li>If the <code>portName</code> cannot be determined
                   from the <code>EndpointReference</code> metadata.
                   <li>If any error in the creation of
                   the <code>Dispatch</code> object.
                   <li>if a feature is enabled that is not
                   compatible with this port or is unsupported.
                 </UL>

@see javax.xml.bind.JAXBContext
@see WebServiceFeature

@since JAX-WS 2.1
"
      end

      operation 12142850 "getServiceName"
	public return_type class_ref 673666 // QName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of this service.
@return Qualified name of this service
"
      end

      operation 12142978 "getPorts"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<javax.xml.namespace.QName> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Iterator</code> for the list of
<code>QName</code>s of service endpoints grouped by this
service

@return Returns <code>java.util.Iterator</code> with elements
        of type <code>javax.xml.namespace.QName</code>.
@throws WebServiceException If this Service class does not
        have access to the required WSDL metadata.
"
      end

      operation 12143106 "getWSDLDocumentLocation"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the location of the WSDL document for this Service.

@return URL for the location of the WSDL document for
        this service.
"
      end

      operation 12143234 "getHandlerResolver"
	public return_type class_ref 1436546 // HandlerResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the configured handler resolver.

@return HandlerResolver The <code>HandlerResolver</code> being
        used by this <code>Service</code> instance, or <code>null</code>
        if there isn't one.
"
      end

      operation 12143362 "setHandlerResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handlerResolver" type class_ref 1436546 // HandlerResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>HandlerResolver</code> for this <code>Service</code>
instance.
<p>
The handler resolver, if present, will be called once for each
proxy or dispatch instance that is created, and the handler chain
returned by the resolver will be set on the instance.

@param handlerResolver The <code>HandlerResolver</code> to use
       for all subsequently created proxy/dispatch objects.

@see javax.xml.ws.handler.HandlerResolver
"
      end

      operation 12143490 "getExecutor"
	public return_type class_ref 503426 // Executor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the executor for this <code>Service</code>instance.

The executor is used for all asynchronous invocations that
require callbacks.

@return The <code>java.util.concurrent.Executor</code> to be
        used to invoke a callback.

@see java.util.concurrent.Executor
"
      end

      operation 12143618 "setExecutor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "executor" type class_ref 503426 // Executor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the executor for this <code>Service</code> instance.

The executor is used for all asynchronous invocations that
require callbacks.

@param executor The <code>java.util.concurrent.Executor</code>
       to be used to invoke a callback.

@throws SecurityException If the instance does not support
        setting an executor for security reasons (e.g. the
        necessary permissions are missing).

@see java.util.concurrent.Executor
"
      end

      operation 12143746 "create"
	class_operation public return_type class_ref 1436162 // Service
	nparams 2
	  param inout name "wsdlDocumentLocation" type class_ref 243458 // URL
	  param inout name "serviceName" type class_ref 673666 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Service</code> instance.

The specified WSDL document location and service qualified name MUST
uniquely identify a <code>wsdl:service</code> element.

@param wsdlDocumentLocation <code>URL</code> for the WSDL document location
                            for the service
@param serviceName <code>QName</code> for the service
@throws WebServiceException If any error in creation of the
                   specified service.
"
      end

      operation 12143874 "create"
	class_operation public return_type class_ref 1436162 // Service
	nparams 3
	  param inout name "wsdlDocumentLocation" type class_ref 243458 // URL
	  param inout name "serviceName" type class_ref 673666 // QName
	  param inout name "features" type class_ref 1434626 // WebServiceFeature
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ... ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Service</code> instance. The created instance is
configured with the web service features.

The specified WSDL document location and service qualified name MUST
uniquely identify a <code>wsdl:service</code> element.

@param wsdlDocumentLocation <code>URL</code> for the WSDL document location
                            for the service
@param serviceName <code>QName</code> for the service
@param features Web Service features that must be configured on
       the service. If the provider doesn't understand a feature,
       it must throw a WebServiceException.
@throws WebServiceException If any error in creation of the
                   specified service.
@since JAX-WS 2.2
"
      end

      operation 12144002 "create"
	class_operation public return_type class_ref 1436162 // Service
	nparams 1
	  param inout name "serviceName" type class_ref 673666 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Service</code> instance.

@param serviceName <code>QName</code> for the service
@throws WebServiceException If any error in creation of the
                   specified service
"
      end

      operation 12144130 "create"
	class_operation public return_type class_ref 1436162 // Service
	nparams 2
	  param inout name "serviceName" type class_ref 673666 // QName
	  param inout name "features" type class_ref 1434626 // WebServiceFeature
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ... ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Service</code> instance. The created instance is
configured with the web service features.

@param serviceName <code>QName</code> for the service
@param features Web Service features that must be configured on
       the service. If the provider doesn't understand a feature,
       it must throw a WebServiceException.
@throws WebServiceException If any error in creation of the
                   specified service

@since JAX-WS 2.2
"
      end
    end

    class 1436674 "ServiceMode"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Inherited
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to indicate whether a {@link Provider} implementation wishes to work
with entire protocol messages or just with protocol message payloads.

 @since JAX-WS 2.0
"
      operation 12144258 "value"
	public return_type class_ref 1436418 // Mode
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default Service.Mode.PAYLOAD;"
	
	
	
	comment "Service mode. <code>PAYLOAD</code> indicates that the <code>Provider</code> implementation
wishes to work with protocol message payloads only. <code>MESSAGE</code> indicates
that the <code>Provider</code> implementation wishes to work with entire protocol
messages.
"
      end
    end

    class 1436802 "WebEndpoint"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Used to annotate the <code>get<em>PortName</em>()</code>
 methods of a generated service interface.

 <p>The information specified in this annotation is sufficient
 to uniquely identify a <code>wsdl:port</code> element
 inside a <code>wsdl:service</code>. The latter is
 determined based on the value of the <code>WebServiceClient</code>
 annotation on the generated service interface itself.

 @since JAX-WS 2.0

 @see javax.xml.ws.WebServiceClient
"
      operation 12144386 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " The local name of the endpoint.
"
      end
    end

    class 1436930 "WebFault"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to annotate service specific exception classes to customize
to the local and namespace name of the fault element and the name
of the fault bean.

 @since JAX-WS 2.0
"
      operation 12144514 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " Element's local name.
"
      end

      operation 12144642 "targetNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " Element's namespace name.
"
      end

      operation 12144770 "faultBean"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " Fault bean name.
"
      end

      operation 12144898 "messageName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " wsdl:Message's name. Default name is the exception's class name.
 @since JAX-WS 2.2
"
      end
    end

    class 1437058 "WebServiceClient"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Used to annotate a generated service interface.

 <p>The information specified in this annotation is sufficient
 to uniquely identify a <code>wsdl:service</code>
 element inside a WSDL document. This <code>wsdl:service</code>
 element represents the Web service for which the generated
 service interface provides a client view.

 @since JAX-WS 2.0
"
      operation 12145026 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " The local name of the Web service.
"
      end

      operation 12145154 "targetNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " The namespace for the Web service.
"
      end

      operation 12145282 "wsdlLocation"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment " The location of the WSDL document for the service (a URL).
"
      end
    end

    class 1437186 "WebServiceContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A <code>WebServiceContext</code> makes it possible for
 a web service endpoint implementation class to access
 message context and security information relative to
 a request being served.

 Typically a <code>WebServiceContext</code> is injected
 into an endpoint implementation class using the
 <code>Resource</code> annotation.

 @since JAX-WS 2.0

 @see javax.annotation.Resource
"
      operation 12145410 "getMessageContext"
	public return_type class_ref 1437314 // MessageContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>MessageContext</code> for the request being served
at the time this method is called. Only properties with
APPLICATION scope will be visible to the application.

@return MessageContext The message context.

@throws IllegalStateException This exception is thrown
        if the method is called while no request is
        being serviced.

@see javax.xml.ws.handler.MessageContext
@see javax.xml.ws.handler.MessageContext.Scope
@see java.lang.IllegalStateException
"
      end

      operation 12145538 "getUserPrincipal"
	public return_type class_ref 510594 // Principal
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Principal that identifies the sender
of the request currently being serviced. If the
sender has not been authenticated, the method
returns <code>null</code>.

@return Principal The principal object.

@throws IllegalStateException This exception is thrown
        if the method is called while no request is
        being serviced.

@see java.security.Principal
@see java.lang.IllegalStateException
"
      end

      operation 12145666 "isUserInRole"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "role" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a boolean indicating whether the
authenticated user is included in the specified
logical role. If the user has not been
authenticated, the method returns <code>false</code>.

@param role  A <code>String</code> specifying the name of the role

@return a <code>boolean</code> indicating whether
the sender of the request belongs to a given role

@throws IllegalStateException This exception is thrown
        if the method is called while no request is
        being serviced.
"
      end

      operation 12145794 "getEndpointReference"
	public return_type class_ref 1434114 // EndpointReference
	nparams 1
	  param inout name "" explicit_type "Element...referenceParameters"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>EndpointReference</code> for this
endpoint.
<p>
If the {@link Binding} for this <code>bindingProvider</code> is
either SOAP1.1/HTTP or SOAP1.2/HTTP, then a
<code>W3CEndpointReference</code> MUST be returned.

@param referenceParameters Reference parameters to be associated with the
returned <code>EndpointReference</code> instance.
@return EndpointReference of the endpoint associated with this
<code>WebServiceContext</code>.
If the returned <code>EndpointReference</code> is of type
<code>W3CEndpointReference</code> then it MUST contain the
the specified <code>referenceParameters</code>.

@throws IllegalStateException This exception is thrown
        if the method is called while no request is
        being serviced.

@see W3CEndpointReference

@since JAX-WS 2.1
"
      end

      operation 12145922 "getEndpointReference"
	public explicit_return_type "T"
	nparams 2
	  param inout name "clazz" type class_ref 130818 // Class
	  param inout name "" explicit_type "Element...referenceParameters"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EndpointReference> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>EndpointReference</code> associated with
this endpoint.

@param clazz The type of <code>EndpointReference</code> that
MUST be returned.
@param referenceParameters Reference parameters to be associated with the
returned <code>EndpointReference</code> instance.
@return EndpointReference of type <code>clazz</code> of the endpoint
associated with this <code>WebServiceContext</code> instance.
If the returned <code>EndpointReference</code> is of type
<code>W3CEndpointReference</code> then it MUST contain the
the specified <code>referenceParameters</code>.

@throws IllegalStateException This exception is thrown
        if the method is called while no request is
        being serviced.
@throws WebServiceException If the <code>clazz</code> type of
<code>EndpointReference</code> is not supported.

@since JAX-WS 2.1
"
      end
    end

    class 1437442 "WebServicePermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines web service permissions.
<p>
Web service Permissions are identified by name (also referred to as
a \"target name\") alone. There are no actions associated
with them.
<p>
The following permission target name is defined:
<p>
<dl>
  <dt>publishEndpoint
</dl>
<p>
The <code>publishEndpoint</code> permission allows publishing a
web service endpoint using the <code>publish</code> methods
defined by the <code>javax.xml.ws.Endpoint</code> class.
<p>
Granting <code>publishEndpoint</code> allows the application to be
exposed as a network service. Depending on the security of the runtime and
the security of the application, this may introduce a security hole that
is remotely exploitable.

@see javax.xml.ws.Endpoint
@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.lang.SecurityManager
@see java.net.SocketPermission
"
      classrelation 4807554 // <generalisation>
	relation 4807554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4807554 // <generalisation>
	  b parent class_ref 257410 // BasicPermission
      end

      attribute 2626434 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -146474640053770988L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 12146050 "WebServicePermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new permission with the specified name.

@param name the name of the <code>WebServicePermission</code>
"
      end

      operation 12146178 "WebServicePermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new permission with the specified name and actions.

The <code>actions</code> parameter is currently unused and
it should be <code>null</code>.

@param name the name of the <code>WebServicePermission</code>
@param actions should be <code>null</code>
"
      end
    end

    class 1437570 "WebServiceProvider"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to annotate a Provider implementation class.

@since JAX-WS 2.0
@see javax.xml.ws.Provider
"
      operation 12146306 "wsdlLocation"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Location of the WSDL description for the service.
"
      end

      operation 12146434 "serviceName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Service name.
"
      end

      operation 12146562 "targetNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Target namespace for the service
"
      end

      operation 12146690 "portName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "Port name.
"
      end
    end

    class 1437698 "WebServiceRef"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({ElementType.TYPE, ElementType.METHOD, ElementType.FIELD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>WebServiceRef</code> annotation is used to
define a reference to a web service and
(optionally) an injection target for it.
It can be used to inject both service and proxy
instances. These injected references are not thread safe.
If the references are accessed by multiple threads,
usual synchronization techinques can be used to
support multiple threads.

<p>
Web service references are resources in the Java EE 5 sense.
The annotations (for example, {@link Addressing}) annotated with
meta-annotation {@link WebServiceFeatureAnnotation}
can be used in conjunction with <code>WebServiceRef</code>.
The created reference MUST be configured with annotation's web service
feature.

<p>
For example, in the code below, the injected
<code>StockQuoteProvider</code> proxy MUST
have WS-Addressing enabled as specifed by the
{@link Addressing}
annotation.

<pre><code>
   public class MyClient {
      &#64;Addressing
      &#64;WebServiceRef(StockQuoteService.class)
      private StockQuoteProvider stockQuoteProvider;
      ...
   }
</code></pre>

<p>
If a JAX-WS implementation encounters an unsupported or unrecognized
annotation annotated with the <code>WebServiceFeatureAnnotation</code>
that is specified with <code>WebServiceRef</code>, an ERROR MUST be given.

@see javax.annotation.Resource
@see WebServiceFeatureAnnotation

@since JAX-WS 2.0

"
      operation 12146818 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "The JNDI name of the resource.  For field annotations,
the default is the field name.  For method annotations,
the default is the JavaBeans property name corresponding
to the method.  For class annotations, there is no default
and this MUST be specified.

The JNDI name can be absolute(with any logical namespace) or relative
to JNDI <code>java:comp/env</code> namespace.
"
      end

      operation 12146946 "type"
	public return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)} default Object.class;"
	
	
	
	comment "The Java type of the resource.  For field annotations,
the default is the type of the field.  For method annotations,
the default is the type of the JavaBeans property.
For class annotations, there is no default and this MUST be
specified.
"
      end

      operation 12147074 "mappedName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "A product specific name that this resource should be mapped to.
The name of this resource, as defined by the <code>name</code>
element or defaulted, is a name that is local to the application
component using the resource.  (When a relative JNDI name
is specified, then it's a name in the JNDI
<code>java:comp/env</code> namespace.)  Many application servers
provide a way to map these local names to names of resources
known to the application server.  This mapped name is often a
<i>global</i> JNDI name, but may be a name of any form.
<p>
Application servers are not required to support any particular
form or type of mapped name, nor the ability to use mapped names.
The mapped name is product-dependent and often installation-dependent.
No use of a mapped name is portable.
"
      end

      operation 12147202 "value"
	public return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Service> ${name}${(}${)} default Service.class;"
	
	
	
	comment "The service class, alwiays a type extending
<code>javax.xml.ws.Service</code>. This element MUST be specified
whenever the type of the reference is a service endpoint interface.

 2.1 has Class value() default Object.class;
 Fixing this raw Class type correctly in 2.2 API. This shouldn't cause
 any compatibility issues for applications."
      end

      operation 12147330 "wsdlLocation"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "A URL pointing to the WSDL document for the web service.
If not specified, the WSDL location specified by annotations
on the resource type is used instead.
"
      end

      operation 12147458 "lookup"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default \"\";"
	
	
	
	comment "A portable JNDI lookup name that resolves to the target
web service reference.

@since JAX-WS 2.2
"
      end
    end

    class 1437826 "WebServiceRefs"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RUNTIME)
@Target(TYPE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>WebServiceRefs</code> annotation allows
multiple web service references to be declared at the
class level.

<p>
It can be used to inject both service and proxy
instances. These injected references are not thread safe.
If the references are accessed by multiple threads,
usual synchronization techniques can be used to
support multiple threads.

<p>
There is no way to associate web service features with
the injected instances. If an instance needs to be
configured with web service features, use @WebServiceRef
to inject the resource along with its features.

<p>
<b>Example</b>: The <code>StockQuoteProvider</code>
proxy instance, and the <code>StockQuoteService</code> service
instance are injected using @WebServiceRefs.

<pre><code>
   &#64;WebServiceRefs({&#64;WebServiceRef(name=\"service/stockquoteservice\", value=StockQuoteService.class),
                    &#64;WebServiceRef(name=\"service/stockquoteprovider\", type=StockQuoteProvider.class, value=StockQuoteService.class})
   public class MyClient {
       void init() {
           Context ic = new InitialContext();
           StockQuoteService service = (StockQuoteService) ic.lookup(\"java:comp/env/service/stockquoteservice\");
           StockQuoteProvider port = (StockQuoteProvider) ic.lookup(\"java:comp/env/service/stockquoteprovider\");
           ...
      }
      ...
   }
</code></pre>

@see WebServiceRef
@since 2.0
"
      operation 12147586 "value"
	public return_type class_ref 1437698 // WebServiceRef
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Array used for multiple web service reference declarations.
"
      end
    end
  end

  deploymentview 179330 "ws"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1025154 "Action"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
${definition}"
      associated_elems
	class_ref 1433218 // Action
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1025282 "AsyncHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1433474 // AsyncHandler
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1025410 "Binding"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1433730 // Binding
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1025538 "BindingProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import javax.xml.ws.wsaddressing.W3CEndpointReference;
${definition}"
      associated_elems
	class_ref 1433986 // BindingProvider
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1025666 "BindingType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1434242 // BindingType
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1025794 "Dispatch"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.concurrent.Future;
${definition}"
      associated_elems
	class_ref 1434370 // Dispatch
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1025922 "Endpoint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import java.util.Map;
import javax.xml.ws.spi.Provider;
import javax.xml.ws.spi.http.HttpContext;
import javax.xml.ws.wsaddressing.W3CEndpointReference;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 1434498 // Endpoint
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026050 "EndpointContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.ws.Endpoint;
import java.util.Set;
${definition}"
      associated_elems
	class_ref 1434882 // EndpointContext
      end
      comment "Copyright (c) 2009, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026178 "EndpointReference"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.transform.Result;
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamResult;
import javax.xml.ws.spi.Provider;
import javax.xml.ws.wsaddressing.W3CEndpointReference;
import java.io.StringWriter;
${definition}"
      associated_elems
	class_ref 1434114 // EndpointReference
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026306 "FaultAction"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
${definition}"
      associated_elems
	class_ref 1433346 // FaultAction
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026434 "Holder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 1435010 // Holder
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026562 "LogicalMessage"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Source;
import javax.xml.bind.JAXBContext;
${definition}"
      associated_elems
	class_ref 1435138 // LogicalMessage
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026690 "WebServiceException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1435394 // WebServiceException
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026818 "ProtocolException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1435266 // ProtocolException
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1026946 "Provider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1435522 // Provider
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027074 "RequestWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import java.lang.annotation.ElementType;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1435650 // RequestWrapper
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027202 "RespectBinding"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import javax.xml.ws.spi.WebServiceFeatureAnnotation;
${definition}"
      associated_elems
	class_ref 1435778 // RespectBinding
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027330 "WebServiceFeature"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1434626 // WebServiceFeature
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027458 "RespectBindingFeature"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.ws.soap.AddressingFeature;
${definition}"
      associated_elems
	class_ref 1435906 // RespectBindingFeature
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027586 "Response"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import java.util.concurrent.Future;
${definition}"
      associated_elems
	class_ref 1433602 // Response
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027714 "ResponseWrapper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import java.lang.annotation.ElementType;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1436034 // ResponseWrapper
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027842 "Service"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
import java.util.Iterator;
import javax.xml.ws.handler.HandlerResolver;
import javax.xml.bind.JAXBContext;
import javax.xml.ws.spi.ServiceDelegate;
import javax.xml.ws.spi.Provider;
${definition}"
      associated_elems
	class_ref 1436162 // Service
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1027970 "ServiceMode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import java.lang.annotation.ElementType;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Inherited;
${definition}"
      associated_elems
	class_ref 1436674 // ServiceMode
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028098 "WebEndpoint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import java.lang.annotation.ElementType;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1436802 // WebEndpoint
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028226 "WebFault"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import java.lang.annotation.ElementType;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1436930 // WebFault
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028354 "WebServiceClient"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import java.lang.annotation.ElementType;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1437058 // WebServiceClient
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028482 "WebServiceContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.Principal;
import javax.xml.ws.handler.MessageContext;
import javax.xml.ws.wsaddressing.W3CEndpointReference;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 1437186 // WebServiceContext
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028610 "WebServicePermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.BasicPermission;
${definition}"
      associated_elems
	class_ref 1437442 // WebServicePermission
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028738 "WebServiceProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import java.lang.annotation.ElementType;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1437570 // WebServiceProvider
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028866 "WebServiceRef"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.ws.soap.Addressing;
import javax.xml.ws.spi.WebServiceFeatureAnnotation;
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_elems
	class_ref 1437698 // WebServiceRef
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1028994 "WebServiceRefs"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Target;
import java.lang.annotation.Retention;
import static java.lang.annotation.ElementType.*;
import static java.lang.annotation.RetentionPolicy.*;
${definition}"
      associated_elems
	class_ref 1437826 // WebServiceRefs
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 189570 // handler

  package_ref 189698 // spi

  package_ref 190082 // http

  package_ref 190210 // soap

  package_ref 190338 // wsaddressing
end
