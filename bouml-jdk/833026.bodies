class X500Principal
!!!10244354.java!!!	X500Principal(inout x500Name : X500Name)
        thisX500Name = x500Name;
!!!10244482.java!!!	X500Principal(inout name : String)
        this(name, Collections.<String, String>emptyMap());
!!!10244610.java!!!	X500Principal(inout name : String, inout keywordMap : Map)
        if (name == null) {
            throw new NullPointerException
                (sun.security.util.ResourcesMgr.getString
                ("provided.null.name"));
        }
        if (keywordMap == null) {
            throw new NullPointerException
                (sun.security.util.ResourcesMgr.getString
                ("provided.null.keyword.map"));
        }

        try {
            thisX500Name = new X500Name(name, keywordMap);
        } catch (Exception e) {
            IllegalArgumentException iae = new IllegalArgumentException
                        ("improperly specified input name: " + name);
            iae.initCause(e);
            throw iae;
        }
!!!10244738.java!!!	X500Principal(inout name : byte [[]])
        try {
            thisX500Name = new X500Name(name);
        } catch (Exception e) {
            IllegalArgumentException iae = new IllegalArgumentException
                        ("improperly specified input name");
            iae.initCause(e);
            throw iae;
        }
!!!10244866.java!!!	X500Principal(inout is : InputStream)
        if (is == null) {
            throw new NullPointerException("provided null input stream");
        }

        try {
            if (is.markSupported())
                is.mark(is.available() + 1);
            DerValue der = new DerValue(is);
            thisX500Name = new X500Name(der.data);
        } catch (Exception e) {
            if (is.markSupported()) {
                try {
                    is.reset();
                } catch (IOException ioe) {
                    IllegalArgumentException iae = new IllegalArgumentException
                        ("improperly specified input stream " +
                        ("and unable to reset input stream"));
                    iae.initCause(e);
                    throw iae;
                }
            }
            IllegalArgumentException iae = new IllegalArgumentException
                        ("improperly specified input stream");
            iae.initCause(e);
            throw iae;
        }
!!!10244994.java!!!	getName() : String
        return getName(X500Principal.RFC2253);
!!!10245122.java!!!	getName(inout format : String) : String
        if (format != null) {
            if (format.equalsIgnoreCase(RFC1779)) {
                return thisX500Name.getRFC1779Name();
            } else if (format.equalsIgnoreCase(RFC2253)) {
                return thisX500Name.getRFC2253Name();
            } else if (format.equalsIgnoreCase(CANONICAL)) {
                return thisX500Name.getRFC2253CanonicalName();
            }
        }
        throw new IllegalArgumentException("invalid format specified");
!!!10245250.java!!!	getName(inout format : String, inout oidMap : Map) : String
        if (oidMap == null) {
            throw new NullPointerException
                (sun.security.util.ResourcesMgr.getString
                ("provided.null.OID.map"));
        }
        if (format != null) {
            if (format.equalsIgnoreCase(RFC1779)) {
                return thisX500Name.getRFC1779Name(oidMap);
            } else if (format.equalsIgnoreCase(RFC2253)) {
                return thisX500Name.getRFC2253Name(oidMap);
            }
        }
        throw new IllegalArgumentException("invalid format specified");
!!!10245378.java!!!	getEncoded() : byte
        try {
            return thisX500Name.getEncoded();
        } catch (IOException e) {
            throw new RuntimeException("unable to get encoding", e);
        }
!!!10245506.java!!!	toString() : String
        return thisX500Name.toString();
!!!10245634.java!!!	equals(inout o : Object) : boolean
        if (this == o) {
            return true;
        }
        if (o instanceof X500Principal == false) {
            return false;
        }
        X500Principal other = (X500Principal)o;
        return this.thisX500Name.equals(other.thisX500Name);
!!!10245762.java!!!	hashCode() : int
        return thisX500Name.hashCode();
!!!10245890.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.writeObject(thisX500Name.getEncodedInternal());
!!!10246018.java!!!	readObject(inout s : ObjectInputStream) : void

        // re-create thisX500Name
        thisX500Name = new X500Name((byte[])s.readObject());
