class JMX
!!!9757442.java!!!	newMBeanProxy(inout connection : MBeanServerConnection, inout objectName : ObjectName, inout interfaceClass : Class) : T
        return newMBeanProxy(connection, objectName, interfaceClass, false);
!!!9757570.java!!!	newMBeanProxy(inout connection : MBeanServerConnection, inout objectName : ObjectName, inout interfaceClass : Class, inout notificationEmitter : boolean) : T
        return createProxy(connection, objectName, interfaceClass, notificationEmitter, false);
!!!9757698.java!!!	newMXBeanProxy(inout connection : MBeanServerConnection, inout objectName : ObjectName, inout interfaceClass : Class) : T
        return newMXBeanProxy(connection, objectName, interfaceClass, false);
!!!9757826.java!!!	newMXBeanProxy(inout connection : MBeanServerConnection, inout objectName : ObjectName, inout interfaceClass : Class, inout notificationEmitter : boolean) : T
        return createProxy(connection, objectName, interfaceClass, notificationEmitter, true);
!!!9757954.java!!!	isMXBeanInterface(inout interfaceClass : Class) : boolean
        if (!interfaceClass.isInterface())
            return false;
        if (!Modifier.isPublic(interfaceClass.getModifiers()) &&
            !Introspector.ALLOW_NONPUBLIC_MBEAN) {
            return false;
        }
        MXBean a = interfaceClass.getAnnotation(MXBean.class);
        if (a != null)
            return a.value();
        return interfaceClass.getName().endsWith("MXBean");
        // We don't bother excluding the case where the name is
        // exactly the string "MXBean" since that would mean there
        // was no package name, which is pretty unlikely in practice.
!!!9758082.java!!!	createProxy(inout connection : MBeanServerConnection, inout objectName : ObjectName, inout interfaceClass : Class, inout notificationEmitter : boolean, inout isMXBean : boolean) : T

        try {
            if (isMXBean) {
                // Check interface for MXBean compliance
                Introspector.testComplianceMXBeanInterface(interfaceClass);
            } else {
                // Check interface for MBean compliance
                Introspector.testComplianceMBeanInterface(interfaceClass);
            }
        } catch (NotCompliantMBeanException e) {
            throw new IllegalArgumentException(e);
        }

        InvocationHandler handler = new MBeanServerInvocationHandler(
                connection, objectName, isMXBean);
        final Class<?>[] interfaces;
        if (notificationEmitter) {
            interfaces =
                new Class<?>[] {interfaceClass, NotificationEmitter.class};
        } else
            interfaces = new Class<?>[] {interfaceClass};

        Object proxy = Proxy.newProxyInstance(
                interfaceClass.getClassLoader(),
                interfaces,
                handler);
        return interfaceClass.cast(proxy);
