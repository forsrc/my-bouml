format 222
"beans" // jdk1.8::java::beans
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/beans/"
  java_package "java.beans"
  classview 147074 "beans"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 343042 "PropertyChangeSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a utility class that can be used by beans that support bound
properties.  It manages a list of listeners and dispatches
{@link PropertyChangeEvent}s to them.  You can use an instance of this class
as a member field of your bean and delegate these types of work to it.
The {@link PropertyChangeListener} can be registered for all properties
or for a property specified by name.
<p>
Here is an example of {@code PropertyChangeSupport} usage that follows
the rules and recommendations laid out in the JavaBeans&trade; specification:
<pre>
public class MyBean {
    private final PropertyChangeSupport pcs = new PropertyChangeSupport(this);

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        this.pcs.addPropertyChangeListener(listener);
    }

    public void removePropertyChangeListener(PropertyChangeListener listener) {
        this.pcs.removePropertyChangeListener(listener);
    }

    private String value;

    public String getValue() {
        return this.value;
    }

    public void setValue(String newValue) {
        String oldValue = this.value;
        this.value = newValue;
        this.pcs.firePropertyChange(\"value\", oldValue, newValue);
    }

    [...]
}
</pre>
<p>
A {@code PropertyChangeSupport} instance is thread-safe.
<p>
This class is serializable.  When it is serialized it will save
(and restore) any listeners that are themselves serializable.  Any
non-serializable listeners will be skipped during serialization.

@see VetoableChangeSupport
"
      classrelation 2984706 // <realization>
	relation 2984706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2984706 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      class 882050 "PropertyChangeListenerMap"
	visibility private 
	nactuals 1
	actual class class_ref 882178 // ChangeListenerMap
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2985346 // <realization>
	  relation 2985346 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 2985346 // <realization>
	    b parent class_ref 882178 // ChangeListenerMap
	end

	classrelation 2985474 // EMPTY (<unidirectional association>)
	  relation 2985474 --->
	    a role_name "EMPTY" multiplicity "[]" init_value " {}" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2985474 // EMPTY (<unidirectional association>)
	    b parent class_ref 347266 // PropertyChangeListener
	end

	operation 6372610 "newArray"
	  protected return_type class_ref 347266 // PropertyChangeListener
	  nparams 1
	    param in name "length" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Creates an array of {@link PropertyChangeListener PropertyChangeListener} objects.
This method uses the same instance of the empty array
when {@code length} equals {@code 0}.

@param length  the array length
@return        an array with specified length
"
	end

	operation 6372738 "newProxy"
	  protected return_type class_ref 347266 // PropertyChangeListener
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Creates a {@link PropertyChangeListenerProxy PropertyChangeListenerProxy}
object for the specified property.

@param name      the name of the property to listen on
@param listener  the listener to process events
@return          a {@code PropertyChangeListenerProxy} object
"
	end

	operation 6372866 "extract"
	  public return_type class_ref 347266 // PropertyChangeListener
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end
      end

      classrelation 2984834 // map (<unidirectional association>)
	relation 2984834 --->
	  a role_name "map" init_value " new PropertyChangeListenerMap()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2984834 // map (<unidirectional association>)
	  b parent class_ref 882050 // PropertyChangeListenerMap
      end

      operation 6368898 "PropertyChangeSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "sourceBean" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyChangeSupport</code> object.

@param sourceBean  The bean to be given as the source for any events.
"
      end

      operation 6369026 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a PropertyChangeListener to the listener list.
The listener is registered for all properties.
The same listener object may be added more than once, and will be called
as many times as it is added.
If <code>listener</code> is null, no exception is thrown and no action
is taken.

@param listener  The PropertyChangeListener to be added
"
      end

      operation 6369154 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a PropertyChangeListener from the listener list.
This removes a PropertyChangeListener that was registered
for all properties.
If <code>listener</code> was added more than once to the same event
source, it will be notified one less time after being removed.
If <code>listener</code> is null, or was never added, no exception is
thrown and no action is taken.

@param listener  The PropertyChangeListener to be removed
"
      end

      operation 6369282 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners that were added to the
PropertyChangeSupport object with addPropertyChangeListener().
<p>
If some listeners have been added with a named property, then
the returned array will be a mixture of PropertyChangeListeners
and <code>PropertyChangeListenerProxy</code>s. If the calling
method is interested in distinguishing the listeners then it must
test each element to see if it's a
<code>PropertyChangeListenerProxy</code>, perform the cast, and examine
the parameter.

<pre>{@code
PropertyChangeListener[] listeners = bean.getPropertyChangeListeners();
for (int i = 0; i < listeners.length; i++) {
  if (listeners[i] instanceof PropertyChangeListenerProxy) {
    PropertyChangeListenerProxy proxy =
                   (PropertyChangeListenerProxy)listeners[i];
    if (proxy.getPropertyName().equals(\"foo\")) {
      // proxy is a PropertyChangeListener which was associated
      // with the property named \"foo\"
    }
  }
}
}</pre>

@see PropertyChangeListenerProxy
@return all of the <code>PropertyChangeListeners</code> added or an
        empty array if no listeners have been added
@since 1.4
"
      end

      operation 6369410 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a PropertyChangeListener for a specific property.  The listener
will be invoked only when a call on firePropertyChange names that
specific property.
The same listener object may be added more than once.  For each
property,  the listener will be invoked the number of times it was added
for that property.
If <code>propertyName</code> or <code>listener</code> is null, no
exception is thrown and no action is taken.

@param propertyName  The name of the property to listen on.
@param listener  The PropertyChangeListener to be added
"
      end

      operation 6369538 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a PropertyChangeListener for a specific property.
If <code>listener</code> was added more than once to the same event
source for the specified property, it will be notified one less time
after being removed.
If <code>propertyName</code> is null,  no exception is thrown and no
action is taken.
If <code>listener</code> is null, or was never added for the specified
property, no exception is thrown and no action is taken.

@param propertyName  The name of the property that was listened on.
@param listener  The PropertyChangeListener to be removed
"
      end

      operation 6369666 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners which have been associated
with the named property.

@param propertyName  The name of the property being listened to
@return all of the <code>PropertyChangeListeners</code> associated with
        the named property.  If no such listeners have been added,
        or if <code>propertyName</code> is null, an empty array is
        returned.
@since 1.4
"
      end

      operation 6369794 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
No event is fired if old and new values are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
{@link #firePropertyChange(PropertyChangeEvent)} method.

@param propertyName  the programmatic name of the property that was changed
@param oldValue      the old value of the property
@param newValue      the new value of the property
"
      end

      operation 6369922 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports an integer bound property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
No event is fired if old and new values are equal.
<p>
This is merely a convenience wrapper around the more general
{@link #firePropertyChange(String, Object, Object)}  method.

@param propertyName  the programmatic name of the property that was changed
@param oldValue      the old value of the property
@param newValue      the new value of the property
"
      end

      operation 6370050 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a boolean bound property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
No event is fired if old and new values are equal.
<p>
This is merely a convenience wrapper around the more general
{@link #firePropertyChange(String, Object, Object)}  method.

@param propertyName  the programmatic name of the property that was changed
@param oldValue      the old value of the property
@param newValue      the new value of the property
"
      end

      operation 6370178 "firePropertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a property change event to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
No event is fired if the given event's old and new values are equal and non-null.

@param event  the {@code PropertyChangeEvent} to be fired
"
      end

      operation 6370306 "fire"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "listeners" type class_ref 347266 // PropertyChangeListener
	multiplicity "[]"
	  param inout name "event" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6370434 "fireIndexedPropertyChange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound indexed property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
No event is fired if old and new values are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
{@link #firePropertyChange(PropertyChangeEvent)} method.

@param propertyName  the programmatic name of the property that was changed
@param index         the index of the property element that was changed
@param oldValue      the old value of the property
@param newValue      the new value of the property
@since 1.5
"
      end

      operation 6370562 "fireIndexedPropertyChange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports an integer bound indexed property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
No event is fired if old and new values are equal.
<p>
This is merely a convenience wrapper around the more general
{@link #fireIndexedPropertyChange(String, int, Object, Object)} method.

@param propertyName  the programmatic name of the property that was changed
@param index         the index of the property element that was changed
@param oldValue      the old value of the property
@param newValue      the new value of the property
@since 1.5
"
      end

      operation 6370690 "fireIndexedPropertyChange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a boolean bound indexed property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
No event is fired if old and new values are equal.
<p>
This is merely a convenience wrapper around the more general
{@link #fireIndexedPropertyChange(String, int, Object, Object)} method.

@param propertyName  the programmatic name of the property that was changed
@param index         the index of the property element that was changed
@param oldValue      the old value of the property
@param newValue      the new value of the property
@since 1.5
"
      end

      operation 6370818 "hasListeners"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any listeners for a specific property, including
those registered on all properties.  If <code>propertyName</code>
is null, only check for listeners registered on all properties.

@param propertyName  the property name.
@return true if there are one or more listeners for the given property
"
      end

      operation 6370946 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Null terminated list of <code>PropertyChangeListeners</code>.
<p>
At serialization time we skip non-serializable listeners and
only serialize the serializable listeners.
"
      end

      operation 6371074 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2984962 // source (<unidirectional association>)
	relation 2984962 --->
	  a role_name "source" private
	    comment "
The object to be provided as the \"source\" for any generated events.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2984962 // source (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2985090 // serialPersistentFields (<unidirectional association>)
	relation 2985090 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
            new ObjectStreamField(\"children\", Hashtable.class),
            new ObjectStreamField(\"source\", Object.class),
            new ObjectStreamField(\"propertyChangeSupportSerializedDataVersion\", Integer.TYPE)
    }" class_relation const_relation private
	    comment "
@serialField children                                   Hashtable
@serialField source                                     Object
@serialField propertyChangeSupportSerializedDataVersion int

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2985090 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      attribute 1440642 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6401253773779951803L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serialization version ID, so we're compatible with JDK 1.1

"
      end
    end

    class 347266 "PropertyChangeListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A \"PropertyChange\" event gets fired whenever a bean changes a \"bound\"
property.  You can register a PropertyChangeListener with a source
bean so as to be notified of any bound property updates.
"
      classrelation 646658 // <generalisation>
	relation 646658 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 646658 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 2045442 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 360450 // PropertyChangeEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets called when a bound property is changed.
@param evt A PropertyChangeEvent object describing the event source
         and the property that has changed.
"
      end
    end

    class 352770 "PropertyDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PropertyDescriptor describes one property that a Java Bean
exports via a pair of accessor methods.
"
      classrelation 3091330 // <generalisation>
	relation 3091330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3091330 // <generalisation>
	  b parent class_ref 903042 // FeatureDescriptor
      end

      classrelation 3091458 // propertyTypeRef (<unidirectional association>)
	relation 3091458 --->
	  a role_name "propertyTypeRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Class<?>> ${name}${value};
"
	    classrelation_ref 3091458 // propertyTypeRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      classrelation 3091586 // readMethodRef (<unidirectional association>)
	relation 3091586 --->
	  a role_name "readMethodRef" init_value " new MethodRef()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091586 // readMethodRef (<unidirectional association>)
	  b parent class_ref 905858 // MethodRef
      end

      classrelation 3091714 // writeMethodRef (<unidirectional association>)
	relation 3091714 --->
	  a role_name "writeMethodRef" init_value " new MethodRef()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091714 // writeMethodRef (<unidirectional association>)
	  b parent class_ref 905858 // MethodRef
      end

      classrelation 3091842 // propertyEditorClassRef (<unidirectional association>)
	relation 3091842 --->
	  a role_name "propertyEditorClassRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Class<?>> ${name}${value};
"
	    classrelation_ref 3091842 // propertyEditorClassRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      attribute 1628034 "bound"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1628162 "constrained"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3091970 // baseName (<unidirectional association>)
	relation 3091970 --->
	  a role_name "baseName" private
	    comment " The base name of the method name which will be prefixed with the
 read and write method. If name == \"foo\" then the baseName is \"Foo\"
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091970 // baseName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3092098 // writeMethodName (<unidirectional association>)
	relation 3092098 --->
	  a role_name "writeMethodName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092098 // writeMethodName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3092226 // readMethodName (<unidirectional association>)
	relation 3092226 --->
	  a role_name "readMethodName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092226 // readMethodName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6768898 "PropertyDescriptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "beanClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PropertyDescriptor for a property that follows
the standard Java convention by having getFoo and setFoo
accessor methods.  Thus if the argument name is \"fred\", it will
assume that the writer method is \"setFred\" and the reader method
is \"getFred\" (or \"isFred\" for a boolean property).  Note that the
property name should start with a lower case character, which will
be capitalized in the method names.

@param propertyName The programmatic name of the property.
@param beanClass The Class object for the target bean.  For
         example sun.beans.OurButton.class.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6769026 "PropertyDescriptor"
	public explicit_return_type ""
	nparams 4
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "beanClass" type class_ref 130818 // Class
	  param inout name "readMethodName" type class_ref 128130 // String
	  param inout name "writeMethodName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and method
names for reading and writing the property.

@param propertyName The programmatic name of the property.
@param beanClass The Class object for the target bean.  For
         example sun.beans.OurButton.class.
@param readMethodName The name of the method used for reading the property
          value.  May be null if the property is write-only.
@param writeMethodName The name of the method used for writing the property
          value.  May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6769154 "PropertyDescriptor"
	public explicit_return_type ""
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "readMethod" type class_ref 137858 // Method
	  param inout name "writeMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and Method
objects for reading and writing the property.

@param propertyName The programmatic name of the property.
@param readMethod The method used for reading the property value.
         May be null if the property is write-only.
@param writeMethod The method used for writing the property value.
         May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6769282 "PropertyDescriptor"
	package explicit_return_type ""
	nparams 4
	  param inout name "bean" type class_ref 130818 // Class
	  param inout name "base" type class_ref 128130 // String
	  param inout name "read" type class_ref 137858 // Method
	  param inout name "write" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates <code>PropertyDescriptor</code> for the specified bean
with the specified name and methods to read/write the property value.

@param bean   the type of the target bean
@param base   the base name of the property (the rest of the method name)
@param read   the method used for reading the property value
@param write  the method used for writing the property value
@exception IntrospectionException if an exception occurs during introspection

@since 1.7
"
      end

      operation 6769410 "getPropertyType"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Java type info for the property.
Note that the {@code Class} object may describe
primitive Java types such as {@code int}.
This type is returned by the read method
or is used as the parameter type of the write method.
Returns {@code null} if the type is an indexed property
that does not support non-indexed access.

@return the {@code Class} object that represents the Java type info,
        or {@code null} if the type cannot be determined
"
      end

      operation 6769538 "setPropertyType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6769666 "getPropertyType0"
	private return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6769794 "getReadMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to read the property value.

@return The method that should be used to read the property value.
May return null if the property can't be read.
"
      end

      operation 6769922 "setReadMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "readMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to read the property value.

@param readMethod The new read method.
@throws IntrospectionException if the read method is invalid
"
      end

      operation 6770050 "getWriteMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to write the property value.

@return The method that should be used to write the property value.
May return null if the property can't be written.
"
      end

      operation 6770178 "setWriteMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writeMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to write the property value.

@param writeMethod The new write method.
@throws IntrospectionException if the write method is invalid
"
      end

      operation 6770306 "setClass0"
	package explicit_return_type "void"
	nparams 1
	  param inout name "clz" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden to ensure that a super class doesn't take precedent
"
      end

      operation 6770434 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates to \"bound\" properties will cause a \"PropertyChange\" event to
get fired when the property is changed.

@return True if this is a bound property.
"
      end

      operation 6770562 "setBound"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bound" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates to \"bound\" properties will cause a \"PropertyChange\" event to
get fired when the property is changed.

@param bound True if this is a bound property.
"
      end

      operation 6770690 "isConstrained"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempted updates to \"Constrained\" properties will cause a \"VetoableChange\"
event to get fired when the property is changed.

@return True if this is a constrained property.
"
      end

      operation 6770818 "setConstrained"
	public explicit_return_type "void"
	nparams 1
	  param inout name "constrained" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempted updates to \"Constrained\" properties will cause a \"VetoableChange\"
event to get fired when the property is changed.

@param constrained True if this is a constrained property.
"
      end

      operation 6770946 "setPropertyEditorClass"
	public explicit_return_type "void"
	nparams 1
	  param inout name "propertyEditorClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normally PropertyEditors will be found using the PropertyEditorManager.
However if for some reason you want to associate a particular
PropertyEditor with a given property, then you can do it with
this method.

@param propertyEditorClass  The Class for the desired PropertyEditor.
"
      end

      operation 6771074 "getPropertyEditorClass"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets any explicit PropertyEditor Class that has been registered
for this property.

@return Any explicit PropertyEditor Class that has been registered
         for this property.  Normally this will return \"null\",
         indicating that no special editor has been registered,
         so the PropertyEditorManager should be used to locate
         a suitable PropertyEditor.
"
      end

      operation 6771202 "createPropertyEditor"
	public return_type class_ref 905986 // PropertyEditor
	nparams 1
	  param inout name "bean" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of a property editor using the current
property editor class.
<p>
If the property editor class has a public constructor that takes an
Object argument then it will be invoked using the bean parameter
as the argument. Otherwise, the default constructor will be invoked.

@param bean the source object
@return a property editor instance or null if a property editor has
        not been defined or cannot be created
@since 1.5
"
      end

      operation 6771330 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>PropertyDescriptor</code> against the specified object.
Returns true if the objects are the same. Two <code>PropertyDescriptor</code>s
are the same if the read, write, property types, property editor and
flags  are equivalent.

@since 1.4
"
      end

      operation 6771458 "compareMethods"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 137858 // Method
	  param inout name "b" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private helper method for Descriptor .equals methods.

@param a first method to compare
@param b second method to compare
@return boolean to indicate that the methods are equivalent
"
      end

      operation 6771586 "PropertyDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 352770 // PropertyDescriptor
	  param inout name "y" type class_ref 352770 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor.
Merge two property descriptors.  Where they conflict, give the
second argument (y) priority over the first argument (x).

@param x  The first (lower priority) PropertyDescriptor
@param y  The second (higher priority) PropertyDescriptor
"
      end

      operation 6771714 "PropertyDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 352770 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor.
This must isolate the new object from any changes to the old object.
"
      end

      operation 6771842 "updateGenericsFor"
	package explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6771970 "findPropertyType"
	private return_type class_ref 130818 // Class
	nparams 2
	  param inout name "readMethod" type class_ref 137858 // Method
	  param inout name "writeMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the property type that corresponds to the read and write method.
The type precedence is given to the readMethod.

@return the type of the property descriptor or null if both
        read and write methods are null.
@throws IntrospectionException if the read or write method is invalid
"
      end

      operation 6772098 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for the object.
See {@link java.lang.Object#hashCode} for a complete description.

@return a hash code value for this object.
@since 1.5
"
      end

      operation 6772226 "getBaseName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calculate once since capitalize() is expensive."
      end

      operation 6772354 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6772482 "isAssignable"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "m1" type class_ref 137858 // Method
	  param inout name "m2" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 356994 "VetoableChangeSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a utility class that can be used by beans that support constrained
properties.  It manages a list of listeners and dispatches
{@link PropertyChangeEvent}s to them.  You can use an instance of this class
as a member field of your bean and delegate these types of work to it.
The {@link VetoableChangeListener} can be registered for all properties
or for a property specified by name.
<p>
Here is an example of {@code VetoableChangeSupport} usage that follows
the rules and recommendations laid out in the JavaBeans&trade; specification:
<pre>{@code
public class MyBean {
    private final VetoableChangeSupport vcs = new VetoableChangeSupport(this);

    public void addVetoableChangeListener(VetoableChangeListener listener) {
        this.vcs.addVetoableChangeListener(listener);
    }

    public void removeVetoableChangeListener(VetoableChangeListener listener) {
        this.vcs.removeVetoableChangeListener(listener);
    }

    private String value;

    public String getValue() {
        return this.value;
    }

    public void setValue(String newValue) throws PropertyVetoException {
        String oldValue = this.value;
        this.vcs.fireVetoableChange(\"value\", oldValue, newValue);
        this.value = newValue;
    }

    [...]
}
}</pre>
<p>
A {@code VetoableChangeSupport} instance is thread-safe.
<p>
This class is serializable.  When it is serialized it will save
(and restore) any listeners that are themselves serializable.  Any
non-serializable listeners will be skipped during serialization.

@see PropertyChangeSupport
"
      classrelation 3110786 // <realization>
	relation 3110786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3110786 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      class 917250 "VetoableChangeListenerMap"
	visibility private 
	nactuals 1
	actual class class_ref 882178 // ChangeListenerMap
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3111298 // <realization>
	  relation 3111298 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3111298 // <realization>
	    b parent class_ref 882178 // ChangeListenerMap
	end

	classrelation 3111426 // EMPTY (<unidirectional association>)
	  relation 3111426 --->
	    a role_name "EMPTY" multiplicity "[]" init_value " {}" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3111426 // EMPTY (<unidirectional association>)
	    b parent class_ref 862082 // VetoableChangeListener
	end

	operation 6808066 "newArray"
	  protected return_type class_ref 862082 // VetoableChangeListener
	  nparams 1
	    param in name "length" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Creates an array of {@link VetoableChangeListener VetoableChangeListener} objects.
This method uses the same instance of the empty array
when {@code length} equals {@code 0}.

@param length  the array length
@return        an array with specified length
"
	end

	operation 6808194 "newProxy"
	  protected return_type class_ref 862082 // VetoableChangeListener
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "listener" type class_ref 862082 // VetoableChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Creates a {@link VetoableChangeListenerProxy VetoableChangeListenerProxy}
object for the specified property.

@param name      the name of the property to listen on
@param listener  the listener to process events
@return          a {@code VetoableChangeListenerProxy} object
"
	end

	operation 6808322 "extract"
	  public return_type class_ref 862082 // VetoableChangeListener
	  nparams 1
	    param inout name "listener" type class_ref 862082 // VetoableChangeListener
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
"
	end
      end

      classrelation 3110914 // map (<unidirectional association>)
	relation 3110914 --->
	  a role_name "map" init_value " new VetoableChangeListenerMap()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3110914 // map (<unidirectional association>)
	  b parent class_ref 917250 // VetoableChangeListenerMap
      end

      operation 6806274 "VetoableChangeSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "sourceBean" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>VetoableChangeSupport</code> object.

@param sourceBean  The bean to be given as the source for any events.
"
      end

      operation 6806402 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a VetoableChangeListener to the listener list.
The listener is registered for all properties.
The same listener object may be added more than once, and will be called
as many times as it is added.
If <code>listener</code> is null, no exception is thrown and no action
is taken.

@param listener  The VetoableChangeListener to be added
"
      end

      operation 6806530 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a VetoableChangeListener from the listener list.
This removes a VetoableChangeListener that was registered
for all properties.
If <code>listener</code> was added more than once to the same event
source, it will be notified one less time after being removed.
If <code>listener</code> is null, or was never added, no exception is
thrown and no action is taken.

@param listener  The VetoableChangeListener to be removed
"
      end

      operation 6806658 "getVetoableChangeListeners"
	public return_type class_ref 862082 // VetoableChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners that were added to the
VetoableChangeSupport object with addVetoableChangeListener().
<p>
If some listeners have been added with a named property, then
the returned array will be a mixture of VetoableChangeListeners
and <code>VetoableChangeListenerProxy</code>s. If the calling
method is interested in distinguishing the listeners then it must
test each element to see if it's a
<code>VetoableChangeListenerProxy</code>, perform the cast, and examine
the parameter.

<pre>{@code
VetoableChangeListener[] listeners = bean.getVetoableChangeListeners();
for (int i = 0; i < listeners.length; i++) {
       if (listeners[i] instanceof VetoableChangeListenerProxy) {
    VetoableChangeListenerProxy proxy =
                   (VetoableChangeListenerProxy)listeners[i];
    if (proxy.getPropertyName().equals(\"foo\")) {
      // proxy is a VetoableChangeListener which was associated
      // with the property named \"foo\"
    }
  }
}
}</pre>

@see VetoableChangeListenerProxy
@return all of the <code>VetoableChangeListeners</code> added or an
        empty array if no listeners have been added
@since 1.4
"
      end

      operation 6806786 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a VetoableChangeListener for a specific property.  The listener
will be invoked only when a call on fireVetoableChange names that
specific property.
The same listener object may be added more than once.  For each
property,  the listener will be invoked the number of times it was added
for that property.
If <code>propertyName</code> or <code>listener</code> is null, no
exception is thrown and no action is taken.

@param propertyName  The name of the property to listen on.
@param listener  The VetoableChangeListener to be added
"
      end

      operation 6806914 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a VetoableChangeListener for a specific property.
If <code>listener</code> was added more than once to the same event
source for the specified property, it will be notified one less time
after being removed.
If <code>propertyName</code> is null, no exception is thrown and no
action is taken.
If <code>listener</code> is null, or was never added for the specified
property, no exception is thrown and no action is taken.

@param propertyName  The name of the property that was listened on.
@param listener  The VetoableChangeListener to be removed
"
      end

      operation 6807042 "getVetoableChangeListeners"
	public return_type class_ref 862082 // VetoableChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners which have been associated
with the named property.

@param propertyName  The name of the property being listened to
@return all the <code>VetoableChangeListeners</code> associated with
        the named property.  If no such listeners have been added,
        or if <code>propertyName</code> is null, an empty array is
        returned.
@since 1.4
"
      end

      operation 6807170 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a constrained property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
Any listener can throw a {@code PropertyVetoException} to veto the update.
If one of the listeners vetoes the update, this method passes
a new \"undo\" {@code PropertyChangeEvent} that reverts to the old value
to all listeners that already confirmed this update
and throws the {@code PropertyVetoException} again.
<p>
No event is fired if old and new values are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
{@link #fireVetoableChange(PropertyChangeEvent)} method.

@param propertyName  the programmatic name of the property that is about to change
@param oldValue      the old value of the property
@param newValue      the new value of the property
@throws PropertyVetoException if one of listeners vetoes the property update
"
      end

      operation 6807298 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports an integer constrained property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
Any listener can throw a {@code PropertyVetoException} to veto the update.
If one of the listeners vetoes the update, this method passes
a new \"undo\" {@code PropertyChangeEvent} that reverts to the old value
to all listeners that already confirmed this update
and throws the {@code PropertyVetoException} again.
<p>
No event is fired if old and new values are equal.
<p>
This is merely a convenience wrapper around the more general
{@link #fireVetoableChange(String, Object, Object)} method.

@param propertyName  the programmatic name of the property that is about to change
@param oldValue      the old value of the property
@param newValue      the new value of the property
@throws PropertyVetoException if one of listeners vetoes the property update
"
      end

      operation 6807426 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a boolean constrained property update to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
Any listener can throw a {@code PropertyVetoException} to veto the update.
If one of the listeners vetoes the update, this method passes
a new \"undo\" {@code PropertyChangeEvent} that reverts to the old value
to all listeners that already confirmed this update
and throws the {@code PropertyVetoException} again.
<p>
No event is fired if old and new values are equal.
<p>
This is merely a convenience wrapper around the more general
{@link #fireVetoableChange(String, Object, Object)} method.

@param propertyName  the programmatic name of the property that is about to change
@param oldValue      the old value of the property
@param newValue      the new value of the property
@throws PropertyVetoException if one of listeners vetoes the property update
"
      end

      operation 6807554 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 360450 // PropertyChangeEvent
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a property change event to listeners
that have been registered to track updates of
all properties or a property with the specified name.
<p>
Any listener can throw a {@code PropertyVetoException} to veto the update.
If one of the listeners vetoes the update, this method passes
a new \"undo\" {@code PropertyChangeEvent} that reverts to the old value
to all listeners that already confirmed this update
and throws the {@code PropertyVetoException} again.
<p>
No event is fired if the given event's old and new values are equal and non-null.

@param event  the {@code PropertyChangeEvent} to be fired
@throws PropertyVetoException if one of listeners vetoes the property update
"
      end

      operation 6807682 "hasListeners"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any listeners for a specific property, including
those registered on all properties.  If <code>propertyName</code>
is null, only check for listeners registered on all properties.

@param propertyName  the property name.
@return true if there are one or more listeners for the given property
"
      end

      operation 6807810 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Null terminated list of <code>VetoableChangeListeners</code>.
<p>
At serialization time we skip non-serializable listeners and
only serialize the serializable listeners.
"
      end

      operation 6807938 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3111042 // source (<unidirectional association>)
	relation 3111042 --->
	  a role_name "source" private
	    comment "
The object to be provided as the \"source\" for any generated events.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3111042 // source (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3111170 // serialPersistentFields (<unidirectional association>)
	relation 3111170 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
            new ObjectStreamField(\"children\", Hashtable.class),
            new ObjectStreamField(\"source\", Object.class),
            new ObjectStreamField(\"vetoableChangeSupportSerializedDataVersion\", Integer.TYPE)
    }" class_relation const_relation private
	    comment "
@serialField children                                   Hashtable
@serialField source                                     Object
@serialField vetoableChangeSupportSerializedDataVersion int

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3111170 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      attribute 1629954 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -5090210921595982017L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serialization version ID, so we're compatible with JDK 1.1

"
      end
    end

    class 360450 "PropertyChangeEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A \"PropertyChange\" event gets delivered whenever a bean changes a \"bound\"
or \"constrained\" property.  A PropertyChangeEvent object is sent as an
argument to the PropertyChangeListener and VetoableChangeListener methods.
<P>
Normally PropertyChangeEvents are accompanied by the name and the old
and new value of the changed property.  If the new value is a primitive
type (such as int or boolean) it must be wrapped as the
corresponding java.lang.* Object type (such as Integer or Boolean).
<P>
Null values may be provided for the old and the new values if their
true values are not known.
<P>
An event source may send a null object as the name to indicate that an
arbitrary set of if its properties have changed.  In this case the
old and new values should also be null.
"
      classrelation 3090562 // <generalisation>
	relation 3090562 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3090562 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 1627650 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7042693688939648123L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6767490 "PropertyChangeEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PropertyChangeEvent}.

@param source        the bean that fired the event
@param propertyName  the programmatic name of the property that was changed
@param oldValue      the old value of the property
@param newValue      the new value of the property

@throws IllegalArgumentException if {@code source} is {@code null}
"
      end

      operation 6767618 "getPropertyName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the programmatic name of the property that was changed.

@return  The programmatic name of the property that was changed.
         May be null if multiple properties have changed.
"
      end

      operation 6767746 "getNewValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the new value for the property, expressed as an Object.

@return  The new value for the property, expressed as an Object.
         May be null if multiple properties have changed.
"
      end

      operation 6767874 "getOldValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the old value for the property, expressed as an Object.

@return  The old value for the property, expressed as an Object.
         May be null if multiple properties have changed.
"
      end

      operation 6768002 "setPropagationId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "propagationId" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the propagationId object for the event.

@param propagationId  The propagationId object for the event.
"
      end

      operation 6768130 "getPropagationId"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"propagationId\" field is reserved for future use.  In Beans 1.0
the sole requirement is that if a listener catches a PropertyChangeEvent
and then fires a PropertyChangeEvent of its own, then it should
make sure that it propagates the propagationId field from its
incoming event to its outgoing event.

@return the propagationId object associated with a bound/constrained
         property update.
"
      end

      classrelation 3090690 // propertyName (<unidirectional association>)
	relation 3090690 --->
	  a role_name "propertyName" private
	    comment "
name of the property that changed.  May be null, if not known.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090690 // propertyName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3090818 // newValue (<unidirectional association>)
	relation 3090818 --->
	  a role_name "newValue" private
	    comment "
New value for property.  May be null if not known.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090818 // newValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3090946 // oldValue (<unidirectional association>)
	relation 3090946 --->
	  a role_name "oldValue" private
	    comment "
Previous value for property.  May be null if not known.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090946 // oldValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3091074 // propagationId (<unidirectional association>)
	relation 3091074 --->
	  a role_name "propagationId" private
	    comment "
Propagation ID.  May be null.
@serial
@see #getPropagationId

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091074 // propagationId (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 6768258 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the object.

@return a string representation of the object

@since 1.7
"
      end

      operation 6768386 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 862082 "VetoableChangeListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A VetoableChange event gets fired whenever a bean changes a \"constrained\"
property.  You can register a VetoableChangeListener with a source bean
so as to be notified of any constrained property updates.
"
      classrelation 3110274 // <generalisation>
	relation 3110274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3110274 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 6805762 "vetoableChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 360450 // PropertyChangeEvent
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets called when a constrained property is changed.

@param     evt a <code>PropertyChangeEvent</code> object describing the
               event source and the property that has changed.
@exception PropertyVetoException if the recipient wishes the property
             change to be rolled back.
"
      end
    end

    class 862210 "PropertyVetoException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PropertyVetoException is thrown when a proposed change to a
property represents an unacceptable value.
"
      classrelation 3109634 // <generalisation>
	relation 3109634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3109634 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1629442 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 129596057694162164L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6803842 "PropertyVetoException"
	public explicit_return_type ""
	nparams 2
	  param inout name "mess" type class_ref 128130 // String
	  param inout name "evt" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyVetoException</code> with a
detailed message.

@param mess Descriptive message
@param evt A PropertyChangeEvent describing the vetoed change.
"
      end

      operation 6803970 "getPropertyChangeEvent"
	public return_type class_ref 360450 // PropertyChangeEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the vetoed <code>PropertyChangeEvent</code>.

@return A PropertyChangeEvent describing the vetoed change.
"
      end

      classrelation 3109762 // evt (<unidirectional association>)
	relation 3109762 --->
	  a role_name "evt" private
	    comment "
A PropertyChangeEvent describing the vetoed change.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3109762 // evt (<unidirectional association>)
	  b parent class_ref 360450 // PropertyChangeEvent
      end
    end

    class 882178 "ChangeListenerMap"
      abstract visibility package 
      nformals 1
      formal name "L" type "" explicit_default_value ""
        extends class_ref 314882 // EventListener
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is an abstract class that provides base functionality
for the {@link PropertyChangeSupport PropertyChangeSupport} class
and the {@link VetoableChangeSupport VetoableChangeSupport} class.

@see PropertyChangeListenerMap
@see VetoableChangeListenerMap

@author Sergey A. Malenkov
"
      classrelation 2985218 // map (<unidirectional association>)
	relation 2985218 --->
	  a role_name "map" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, L[]> ${name}${value};
"
	    classrelation_ref 2985218 // map (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 6371202 "newArray"
	abstract cpp_inline protected explicit_return_type "L"
	nparams 1
	  param in name "length" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an array of listeners.
This method can be optimized by using
the same instance of the empty array
when {@code length} is equal to {@code 0}.

@param length  the array length
@return        an array with specified length
"
      end

      operation 6371330 "newProxy"
	abstract cpp_inline protected explicit_return_type "L"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "listener" explicit_type "L"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a proxy listener for the specified property.

@param name      the name of the property to listen on
@param listener  the listener to process events
@return          a proxy listener
"
      end

      operation 6371458 "add"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "listener" explicit_type "L"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to the list of listeners for the specified property.
This listener is called as many times as it was added.

@param name      the name of the property to listen on
@param listener  the listener to process events
"
      end

      operation 6371586 "remove"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "listener" explicit_type "L"
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from the list of listeners for the specified property.
If the listener was added more than once to the same event source,
this listener will be notified one less time after being removed.

@param name      the name of the property to listen on
@param listener  the listener to process events
"
      end

      operation 6371714 "get"
	cpp_inline public explicit_return_type "L"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of listeners for the specified property.

@param name  the name of the property
@return      the corresponding list of listeners
"
      end

      operation 6371842 "set"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "listeners" explicit_type "L"
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets new list of listeners for the specified property.

@param name       the name of the property
@param listeners  new list of listeners
"
      end

      operation 6371970 "getListeners"
	cpp_inline public explicit_return_type "L"
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all listeners in the map.

@return an array of all listeners
"
      end

      operation 6372098 "getListeners"
	cpp_inline public explicit_return_type "L"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns listeners that have been associated with the named property.

@param name  the name of the property
@return an array of listeners for the named property
"
      end

      operation 6372226 "hasListeners"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the map contains
at least one listener to be notified.

@param name  the name of the property
@return      {@code true} if at least one listener exists or
             {@code false} otherwise
"
      end

      operation 6372354 "getEntries"
	cpp_inline public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<String, L[]>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of entries from the map.
Each entry is a pair consisted of the property name
and the corresponding list of listeners.

@return a set of entries from the map
"
      end

      operation 6372482 "extract"
	abstract cpp_inline public explicit_return_type "L"
	nparams 1
	  param inout name "listener" explicit_type "L"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts a real listener from the proxy listener.
It is necessary because default proxy class is not serializable.

@return a real listener
"
      end
    end

    class 902658 "AppletInitializer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
This interface is designed to work in collusion with java.beans.Beans.instantiate.
The interface is intended to provide mechanism to allow the proper
initialization of JavaBeans that are also Applets, during their
instantiation by java.beans.Beans.instantiate().
</p>

@see java.beans.Beans#instantiate

@since 1.2

"
      operation 6745218 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "newAppletBean" type class_ref 240258 // Applet
	  param inout name "bCtxt" type class_ref 902786 // BeanContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
If passed to the appropriate variant of java.beans.Beans.instantiate
this method will be called in order to associate the newly instantiated
Applet (JavaBean) with its AppletContext, AppletStub, and Container.
</p>
<p>
Conformant implementations shall:
<ol>
<li> Associate the newly instantiated Applet with the appropriate
AppletContext.

<li> Instantiate an AppletStub() and associate that AppletStub with
the Applet via an invocation of setStub().

<li> If BeanContext parameter is null, then it shall associate the
Applet with its appropriate Container by adding that Applet to its
Container via an invocation of add(). If the BeanContext parameter is
non-null, then it is the responsibility of the BeanContext to associate
the Applet with its Container during the subsequent invocation of its
addChildren() method.
</ol>

@param newAppletBean  The newly instantiated JavaBean
@param bCtxt          The BeanContext intended for this Applet, or
                      null.
"
      end

      operation 6745346 "activate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newApplet" type class_ref 240258 // Applet
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Activate, and/or mark Applet active. Implementors of this interface
shall mark this Applet as active, and optionally invoke its start()
method.
</p>

@param newApplet  The newly instantiated JavaBean
"
      end
    end

    class 902914 "BeanDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A BeanDescriptor provides global information about a \"bean\",
including its Java class, its displayName, etc.
<p>
This is one of the kinds of descriptor returned by a BeanInfo object,
which also returns descriptors for properties, method, and events.
"
      classrelation 3084930 // <generalisation>
	relation 3084930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3084930 // <generalisation>
	  b parent class_ref 903042 // FeatureDescriptor
      end

      classrelation 3085058 // beanClassRef (<unidirectional association>)
	relation 3085058 --->
	  a role_name "beanClassRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Class<?>> ${name}${value};
"
	    classrelation_ref 3085058 // beanClassRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      classrelation 3085186 // customizerClassRef (<unidirectional association>)
	relation 3085186 --->
	  a role_name "customizerClassRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Class<?>> ${name}${value};
"
	    classrelation_ref 3085186 // customizerClassRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      operation 6749698 "BeanDescriptor"
	public explicit_return_type ""
	nparams 1
	  param inout name "beanClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a BeanDescriptor for a bean that doesn't have a customizer.

@param beanClass  The Class object of the Java class that implements
         the bean.  For example sun.beans.OurButton.class.
"
      end

      operation 6749826 "BeanDescriptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "beanClass" type class_ref 130818 // Class
	  param inout name "customizerClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a BeanDescriptor for a bean that has a customizer.

@param beanClass  The Class object of the Java class that implements
         the bean.  For example sun.beans.OurButton.class.
@param customizerClass  The Class object of the Java class that implements
         the bean's Customizer.  For example sun.beans.OurButtonCustomizer.class.
"
      end

      operation 6749954 "getBeanClass"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bean's Class object.

@return The Class object for the bean.
"
      end

      operation 6750082 "getCustomizerClass"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Class object for the bean's customizer.

@return The Class object for the bean's customizer.  This may
be null if the bean doesn't have a customizer.
"
      end

      operation 6750210 "BeanDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 902914 // BeanDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object.
"
      end

      operation 6750338 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 903042 "FeatureDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The FeatureDescriptor class is the common baseclass for PropertyDescriptor,
EventSetDescriptor, and MethodDescriptor, etc.
<p>
It supports some common information that can be set and retrieved for
any of the introspection descriptors.
<p>
In addition it provides an extension mechanism so that arbitrary
attribute/value pairs can be associated with a design feature.
"
      classrelation 3084162 // TRANSIENT (<unidirectional association>)
	relation 3084162 --->
	  a role_name "TRANSIENT" init_value " \"transient\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3084162 // TRANSIENT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3084290 // classRef (<unidirectional association>)
	relation 3084290 --->
	  a role_name "classRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Class<?>> ${name}${value};
"
	    classrelation_ref 3084290 // classRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      operation 6745474 "FeatureDescriptor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>FeatureDescriptor</code>.
"
      end

      operation 6745602 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the programmatic name of this feature.

@return The programmatic name of the property/method/event
"
      end

      operation 6745730 "setName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the programmatic name of this feature.

@param name  The programmatic name of the property/method/event
"
      end

      operation 6745858 "getDisplayName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the localized display name of this feature.

@return The localized display name for the property/method/event.
 This defaults to the same as its programmatic name from getName.
"
      end

      operation 6745986 "setDisplayName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "displayName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the localized display name of this feature.

@param displayName  The localized display name for the
         property/method/event.
"
      end

      operation 6746114 "isExpert"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"expert\" flag is used to distinguish between those features that are
intended for expert users from those that are intended for normal users.

@return True if this feature is intended for use by experts only.
"
      end

      operation 6746242 "setExpert"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expert" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"expert\" flag is used to distinguish between features that are
intended for expert users from those that are intended for normal users.

@param expert True if this feature is intended for use by experts only.
"
      end

      operation 6746370 "isHidden"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"hidden\" flag is used to identify features that are intended only
for tool use, and which should not be exposed to humans.

@return True if this feature should be hidden from human users.
"
      end

      operation 6746498 "setHidden"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hidden" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"hidden\" flag is used to identify features that are intended only
for tool use, and which should not be exposed to humans.

@param hidden  True if this feature should be hidden from human users.
"
      end

      operation 6746626 "isPreferred"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"preferred\" flag is used to identify features that are particularly
important for presenting to humans.

@return True if this feature should be preferentially shown to human users.
"
      end

      operation 6746754 "setPreferred"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preferred" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"preferred\" flag is used to identify features that are particularly
important for presenting to humans.

@param preferred  True if this feature should be preferentially shown
                  to human users.
"
      end

      operation 6746882 "getShortDescription"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the short description of this feature.

@return  A localized short description associated with this
  property/method/event.  This defaults to be the display name.
"
      end

      operation 6747010 "setShortDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "You can associate a short descriptive string with a feature.  Normally
these descriptive strings should be less than about 40 characters.
@param text  A (localized) short description to be associated with
this property/method/event.
"
      end

      operation 6747138 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "attributeName" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate a named attribute with this feature.

@param attributeName  The locale-independent name of the attribute
@param value  The value.
"
      end

      operation 6747266 "getValue"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "attributeName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a named attribute with this feature.

@param attributeName  The locale-independent name of the attribute
@return  The value of the attribute.  May be null if
    the attribute is unknown.
"
      end

      operation 6747394 "attributeNames"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an enumeration of the locale-independent names of this
feature.

@return  An enumeration of the locale-independent names of any
   attributes that have been registered with setValue.
"
      end

      operation 6747522 "FeatureDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 903042 // FeatureDescriptor
	  param inout name "y" type class_ref 903042 // FeatureDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor,
Merge information from two FeatureDescriptors.
The merged hidden and expert flags are formed by or-ing the values.
In the event of other conflicts, the second argument (y) is
given priority over the first argument (x).

@param x  The first (lower priority) MethodDescriptor
@param y  The second (higher priority) MethodDescriptor
"
      end

      operation 6747650 "FeatureDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 903042 // FeatureDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object.
"
      end

      operation 6747778 "addTable"
	private explicit_return_type "void"
	nparams 1
	  param inout name "table" type class_ref 137090 // Hashtable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all values from the specified attribute table.
If some attribute is exist its value should be overridden.

@param table  the attribute table with new values
"
      end

      operation 6747906 "getTable"
	private return_type class_ref 137090 // Hashtable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the initialized attribute table.

@return the initialized attribute table
"
      end

      operation 6748034 "setTransient"
	package explicit_return_type "void"
	nparams 1
	  param inout name "annotation" type class_ref 903170 // Transient
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the \"transient\" attribute according to the annotation.
If the \"transient\" attribute is already set
it should not be changed.

@param annotation  the annotation of the element of the feature
"
      end

      operation 6748162 "isTransient"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the feature is transient.

@return {@code true} if the feature is transient,
        {@code false} otherwise
"
      end

      operation 6748290 "setClass0"
	package explicit_return_type "void"
	nparams 1
	  param inout name "cls" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package private methods for recreating the weak/soft referent"
      end

      operation 6748418 "getClass0"
	package return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6748546 "getSoftReference"
	class_operation package return_type class_ref 131458 // Reference
	nparams 1
	  param inout name "object" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new soft reference that refers to the given object.

@return a new soft reference or <code>null</code> if object is <code>null</code>

@see SoftReference
"
      end

      operation 6748674 "getWeakReference"
	class_operation package return_type class_ref 131458 // Reference
	nparams 1
	  param inout name "object" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new weak reference that refers to the given object.

@return a new weak reference or <code>null</code> if object is <code>null</code>

@see WeakReference
"
      end

      operation 6748802 "getReturnType"
	class_operation package return_type class_ref 130818 // Class
	nparams 2
	  param inout name "base" type class_ref 130818 // Class
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves the return type of the method.

@param base    the class that contains the method in the hierarchy
@param method  the object that represents the method
@return a class identifying the return type of the method

@see Method#getGenericReturnType
@see Method#getReturnType
"
      end

      operation 6748930 "getParameterTypes"
	class_operation package return_type class_ref 130818 // Class
	nparams 2
	  param inout name "base" type class_ref 130818 // Class
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves the parameter types of the method.

@param base    the class that contains the method in the hierarchy
@param method  the object that represents the method
@return an array of classes identifying the parameter types of the method

@see Method#getGenericParameterTypes
@see Method#getParameterTypes
"
      end

      attribute 1626114 "expert"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1626242 "hidden"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1626370 "preferred"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3084418 // shortDescription (<unidirectional association>)
	relation 3084418 --->
	  a role_name "shortDescription" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3084418 // shortDescription (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3084546 // name (<unidirectional association>)
	relation 3084546 --->
	  a role_name "name" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3084546 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3084674 // displayName (<unidirectional association>)
	relation 3084674 --->
	  a role_name "displayName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3084674 // displayName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3084802 // table (<unidirectional association>)
	relation 3084802 --->
	  a role_name "table" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 3084802 // table (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      operation 6749058 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the object.

@return a string representation of the object

@since 1.7
"
      end

      operation 6749186 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6749314 "appendTo"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "sb" type class_ref 173058 // StringBuilder
	  param inout name "name" type class_ref 128130 // String
	  param inout name "reference" type class_ref 131458 // Reference
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6749442 "appendTo"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "sb" type class_ref 173058 // StringBuilder
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6749570 "appendTo"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "sb" type class_ref 173058 // StringBuilder
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 903170 "Transient"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({METHOD})
@Retention(RUNTIME)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates that an attribute called \"transient\"
should be declared with the given {@code value}
when the {@link Introspector} constructs
a {@link PropertyDescriptor} or {@link EventSetDescriptor}
classes associated with the annotated code element.
A {@code true} value for the \"transient\" attribute
indicates to encoders derived from {@link Encoder}
that this feature should be ignored.
<p>
The {@code Transient} annotation may be be used
in any of the methods that are involved
in a {@link FeatureDescriptor} subclass
to identify the transient feature in the annotated class and its subclasses.
Normally, the method that starts with \"get\" is the best place
to put the annotation and it is this declaration
that takes precedence in the case of multiple annotations
being defined for the same feature.
<p>
To declare a feature non-transient in a class
whose superclass declares it transient,
use {@code @Transient(false)}.
In all cases, the {@link Introspector} decides
if a feature is transient by referring to the annotation
on the most specific superclass.
If no {@code Transient} annotation is present
in any superclass the feature is not transient.

@since 1.7
"
      operation 6805634 "value"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)} default true;"
	
	
	
	comment "Returns whether or not the {@code Introspector} should
construct artifacts for the annotated method.
@return whether or not the {@code Introspector} should
construct artifacts for the annotated method
"
      end
    end

    class 903298 "BeanInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Use the {@code BeanInfo} interface
to create a {@code BeanInfo} class
and provide explicit information about the methods,
properties, events, and other features of your beans.
<p>
When developing your bean, you can implement
the bean features required for your application task
omitting the rest of the {@code BeanInfo} features.
They will be obtained through the automatic analysis
by using the low-level reflection of the bean methods
and applying standard design patterns.
You have an opportunity to provide additional bean information
through various descriptor classes.
<p>
See the {@link SimpleBeanInfo} class that is
a convenient basic class for {@code BeanInfo} classes.
You can override the methods and properties of
the {@code SimpleBeanInfo} class to define specific information.
<p>
See also the {@link Introspector} class to learn more about bean behavior.
"
      operation 6750466 "getBeanDescriptor"
	public return_type class_ref 902914 // BeanDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bean descriptor
that provides overall information about the bean,
such as its display name or its customizer.

@return  a {@link BeanDescriptor} object,
         or {@code null} if the information is to
         be obtained through the automatic analysis
"
      end

      operation 6750594 "getEventSetDescriptors"
	public return_type class_ref 903426 // EventSetDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the event descriptors of the bean
that define the types of events fired by this bean.

@return  an array of {@link EventSetDescriptor} objects,
         or {@code null} if the information is to
         be obtained through the automatic analysis
"
      end

      operation 6750722 "getDefaultEventIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A bean may have a default event typically applied when this bean is used.

@return  index of the default event in the {@code EventSetDescriptor} array
         returned by the {@code getEventSetDescriptors} method,
         or -1 if there is no default event
"
      end

      operation 6750850 "getPropertyDescriptors"
	public return_type class_ref 352770 // PropertyDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns descriptors for all properties of the bean.
<p>
If a property is indexed, then its entry in the result array
belongs to the {@link IndexedPropertyDescriptor} subclass
of the {@link PropertyDescriptor} class.
A client of the {@code getPropertyDescriptors} method
can use the {@code instanceof} operator to check
whether a given {@code PropertyDescriptor}
is an {@code IndexedPropertyDescriptor}.

@return  an array of {@code PropertyDescriptor} objects,
         or {@code null} if the information is to
         be obtained through the automatic analysis
"
      end

      operation 6750978 "getDefaultPropertyIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A bean may have a default property commonly updated when this bean is customized.

@return  index of the default property in the {@code PropertyDescriptor} array
         returned by the {@code getPropertyDescriptors} method,
         or -1 if there is no default property
"
      end

      operation 6751106 "getMethodDescriptors"
	public return_type class_ref 903554 // MethodDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the method descriptors of the bean
that define the externally visible methods supported by this bean.

@return  an array of {@link MethodDescriptor} objects,
         or {@code null} if the information is to
         be obtained through the automatic analysis
"
      end

      operation 6751234 "getAdditionalBeanInfo"
	public return_type class_ref 903298 // BeanInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method enables the current {@code BeanInfo} object
to return an arbitrary collection of other {@code BeanInfo} objects
that provide additional information about the current bean.
<p>
If there are conflicts or overlaps between the information
provided by different {@code BeanInfo} objects,
the current {@code BeanInfo} object takes priority
over the additional {@code BeanInfo} objects.
Array elements with higher indices take priority
over the elements with lower indices.

@return  an array of {@code BeanInfo} objects,
         or {@code null} if there are no additional {@code BeanInfo} objects
"
      end

      operation 6751362 "getIcon"
	public return_type class_ref 340098 // Image
	nparams 1
	  param in name "iconKind" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an image that can be used to represent the bean in toolboxes or toolbars.
<p>
There are four possible types of icons:
16 x 16 color, 32 x 32 color, 16 x 16 mono, and 32 x 32 mono.
If you implement a bean so that it supports a single icon,
it is recommended to use 16 x 16 color.
Another recommendation is to set a transparent background for the icons.

@param  iconKind  the kind of icon requested
@return           an image object representing the requested icon,
                  or {@code null} if no suitable icon is available

@see #ICON_COLOR_16x16
@see #ICON_COLOR_32x32
@see #ICON_MONO_16x16
@see #ICON_MONO_32x32
"
      end

      attribute 1626498 "ICON_COLOR_16x16"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant to indicate a 16 x 16 color icon.

"
      end

      attribute 1626626 "ICON_COLOR_32x32"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant to indicate a 32 x 32 color icon.

"
      end

      attribute 1626754 "ICON_MONO_16x16"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant to indicate a 16 x 16 monochrome icon.

"
      end

      attribute 1626882 "ICON_MONO_32x32"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant to indicate a 32 x 32 monochrome icon.

"
      end
    end

    class 903426 "EventSetDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An EventSetDescriptor describes a group of events that a given Java
bean fires.
<P>
The given group of events are all delivered as method calls on a single
event listener interface, and an event listener object can be registered
via a call on a registration method supplied by the event source.
"
      classrelation 3088386 // <generalisation>
	relation 3088386 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3088386 // <generalisation>
	  b parent class_ref 903042 // FeatureDescriptor
      end

      classrelation 3088514 // listenerMethodDescriptors (<unidirectional association>)
	relation 3088514 --->
	  a role_name "listenerMethodDescriptors" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3088514 // listenerMethodDescriptors (<unidirectional association>)
	  b parent class_ref 903554 // MethodDescriptor
      end

      classrelation 3088642 // addMethodDescriptor (<unidirectional association>)
	relation 3088642 --->
	  a role_name "addMethodDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3088642 // addMethodDescriptor (<unidirectional association>)
	  b parent class_ref 903554 // MethodDescriptor
      end

      classrelation 3088770 // removeMethodDescriptor (<unidirectional association>)
	relation 3088770 --->
	  a role_name "removeMethodDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3088770 // removeMethodDescriptor (<unidirectional association>)
	  b parent class_ref 903554 // MethodDescriptor
      end

      classrelation 3088898 // getMethodDescriptor (<unidirectional association>)
	relation 3088898 --->
	  a role_name "getMethodDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3088898 // getMethodDescriptor (<unidirectional association>)
	  b parent class_ref 903554 // MethodDescriptor
      end

      classrelation 3089026 // listenerMethodsRef (<unidirectional association>)
	relation 3089026 --->
	  a role_name "listenerMethodsRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Method[]> ${name}${value};
"
	    classrelation_ref 3089026 // listenerMethodsRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      classrelation 3089154 // listenerTypeRef (<unidirectional association>)
	relation 3089154 --->
	  a role_name "listenerTypeRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Class<?>> ${name}${value};
"
	    classrelation_ref 3089154 // listenerTypeRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      attribute 1627394 "unicast"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1627522 "inDefaultEventSet"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6761602 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 4
	  param inout name "sourceClass" type class_ref 130818 // Class
	  param inout name "eventSetName" type class_ref 128130 // String
	  param inout name "listenerType" type class_ref 130818 // Class
	  param inout name "listenerMethodName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> assuming that you are
following the most simple standard design pattern where a named
event &quot;fred&quot; is (1) delivered as a call on the single method of
interface FredListener, (2) has a single argument of type FredEvent,
and (3) where the FredListener may be registered with a call on an
addFredListener method of the source component and removed with a
call on a removeFredListener method.

@param sourceClass  The class firing the event.
@param eventSetName  The programmatic name of the event.  E.g. &quot;fred&quot;.
         Note that this should normally start with a lower-case character.
@param listenerType  The target interface that events
         will get delivered to.
@param listenerMethodName  The method that will get called when the event gets
         delivered to its target listener interface.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6761730 "getListenerClassName"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "cls" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6761858 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 6
	  param inout name "sourceClass" type class_ref 130818 // Class
	  param inout name "eventSetName" type class_ref 128130 // String
	  param inout name "listenerType" type class_ref 130818 // Class
	  param inout name "listenerMethodNames" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "addListenerMethodName" type class_ref 128130 // String
	  param inout name "removeListenerMethodName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> from scratch using
string names.

@param sourceClass  The class firing the event.
@param eventSetName The programmatic name of the event set.
         Note that this should normally start with a lower-case character.
@param listenerType  The Class of the target interface that events
         will get delivered to.
@param listenerMethodNames The names of the methods that will get called
         when the event gets delivered to its target listener interface.
@param addListenerMethodName  The name of the method on the event source
         that can be used to register an event listener object.
@param removeListenerMethodName  The name of the method on the event source
         that can be used to de-register an event listener object.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6761986 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 7
	  param inout name "sourceClass" type class_ref 130818 // Class
	  param inout name "eventSetName" type class_ref 128130 // String
	  param inout name "listenerType" type class_ref 130818 // Class
	  param inout name "listenerMethodNames" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "addListenerMethodName" type class_ref 128130 // String
	  param inout name "removeListenerMethodName" type class_ref 128130 // String
	  param inout name "getListenerMethodName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor creates an EventSetDescriptor from scratch using
string names.

@param sourceClass  The class firing the event.
@param eventSetName The programmatic name of the event set.
         Note that this should normally start with a lower-case character.
@param listenerType  The Class of the target interface that events
         will get delivered to.
@param listenerMethodNames The names of the methods that will get called
         when the event gets delivered to its target listener interface.
@param addListenerMethodName  The name of the method on the event source
         that can be used to register an event listener object.
@param removeListenerMethodName  The name of the method on the event source
         that can be used to de-register an event listener object.
@param getListenerMethodName The method on the event source that
         can be used to access the array of event listener objects.
@exception IntrospectionException if an exception occurs during
             introspection.
@since 1.4
"
      end

      operation 6762114 "getMethod"
	class_operation private return_type class_ref 137858 // Method
	nparams 3
	  param inout name "cls" type class_ref 130818 // Class
	  param inout name "name" type class_ref 128130 // String
	  param in name "args" explicit_type "int"
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6762242 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 5
	  param inout name "eventSetName" type class_ref 128130 // String
	  param inout name "listenerType" type class_ref 130818 // Class
	  param inout name "listenerMethods" type class_ref 137858 // Method
	multiplicity "[]"
	  param inout name "addListenerMethod" type class_ref 137858 // Method
	  param inout name "removeListenerMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> from scratch using
<TT>java.lang.reflect.Method</TT> and <TT>java.lang.Class</TT> objects.

@param eventSetName The programmatic name of the event set.
@param listenerType The Class for the listener interface.
@param listenerMethods  An array of Method objects describing each
         of the event handling methods in the target listener.
@param addListenerMethod  The method on the event source
         that can be used to register an event listener object.
@param removeListenerMethod  The method on the event source
         that can be used to de-register an event listener object.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6762370 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 6
	  param inout name "eventSetName" type class_ref 128130 // String
	  param inout name "listenerType" type class_ref 130818 // Class
	  param inout name "listenerMethods" type class_ref 137858 // Method
	multiplicity "[]"
	  param inout name "addListenerMethod" type class_ref 137858 // Method
	  param inout name "removeListenerMethod" type class_ref 137858 // Method
	  param inout name "getListenerMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor creates an EventSetDescriptor from scratch using
java.lang.reflect.Method and java.lang.Class objects.

@param eventSetName The programmatic name of the event set.
@param listenerType The Class for the listener interface.
@param listenerMethods  An array of Method objects describing each
         of the event handling methods in the target listener.
@param addListenerMethod  The method on the event source
         that can be used to register an event listener object.
@param removeListenerMethod  The method on the event source
         that can be used to de-register an event listener object.
@param getListenerMethod The method on the event source
         that can be used to access the array of event listener objects.
@exception IntrospectionException if an exception occurs during
             introspection.
@since 1.4
"
      end

      operation 6762498 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 5
	  param inout name "eventSetName" type class_ref 128130 // String
	  param inout name "listenerType" type class_ref 130818 // Class
	  param inout name "listenerMethodDescriptors" type class_ref 903554 // MethodDescriptor
	multiplicity "[]"
	  param inout name "addListenerMethod" type class_ref 137858 // Method
	  param inout name "removeListenerMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> from scratch using
<TT>java.lang.reflect.MethodDescriptor</TT> and <TT>java.lang.Class</TT>
 objects.

@param eventSetName The programmatic name of the event set.
@param listenerType The Class for the listener interface.
@param listenerMethodDescriptors  An array of MethodDescriptor objects
          describing each of the event handling methods in the
          target listener.
@param addListenerMethod  The method on the event source
         that can be used to register an event listener object.
@param removeListenerMethod  The method on the event source
         that can be used to de-register an event listener object.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6762626 "getListenerType"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <TT>Class</TT> object for the target interface.

@return The Class object for the target interface that will
get invoked when the event is fired.
"
      end

      operation 6762754 "setListenerType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cls" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6762882 "getListenerMethods"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the methods of the target listener interface.

@return An array of <TT>Method</TT> objects for the target methods
within the target listener interface that will get called when
events are fired.
"
      end

      operation 6763010 "setListenerMethods"
	private explicit_return_type "void"
	nparams 1
	  param inout name "methods" type class_ref 137858 // Method
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6763138 "getListenerMethods0"
	private return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6763266 "getListenerMethodDescriptors"
	public return_type class_ref 903554 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>MethodDescriptor</code>s of the target listener interface.

@return An array of <code>MethodDescriptor</code> objects for the target methods
within the target listener interface that will get called when
events are fired.
"
      end

      operation 6763394 "getAddListenerMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method used to add event listeners.

@return The method used to register a listener at the event source.
"
      end

      operation 6763522 "setAddListenerMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6763650 "getRemoveListenerMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method used to remove event listeners.

@return The method used to remove a listener at the event source.
"
      end

      operation 6763778 "setRemoveListenerMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6763906 "getGetListenerMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method used to access the registered event listeners.

@return The method used to access the array of listeners at the event
        source or null if it doesn't exist.
@since 1.4
"
      end

      operation 6764034 "setGetListenerMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6764162 "setUnicast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "unicast" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark an event set as unicast (or not).

@param unicast  True if the event set is unicast.
"
      end

      operation 6764290 "isUnicast"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normally event sources are multicast.  However there are some
exceptions that are strictly unicast.

@return  <TT>true</TT> if the event set is unicast.
         Defaults to <TT>false</TT>.
"
      end

      operation 6764418 "setInDefaultEventSet"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inDefaultEventSet" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks an event set as being in the &quot;default&quot; set (or not).
By default this is <TT>true</TT>.

@param inDefaultEventSet <code>true</code> if the event set is in
                         the &quot;default&quot; set,
                         <code>false</code> if not
"
      end

      operation 6764546 "isInDefaultEventSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports if an event set is in the &quot;default&quot; set.

@return  <TT>true</TT> if the event set is in
         the &quot;default&quot; set.  Defaults to <TT>true</TT>.
"
      end

      operation 6764674 "EventSetDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 903426 // EventSetDescriptor
	  param inout name "y" type class_ref 903426 // EventSetDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor
Merge two event set descriptors.  Where they conflict, give the
second argument (y) priority over the first argument (x).

@param x  The first (lower priority) EventSetDescriptor
@param y  The second (higher priority) EventSetDescriptor
"
      end

      operation 6764802 "EventSetDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 903426 // EventSetDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object.
"
      end

      operation 6764930 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6765058 "getMethod"
	class_operation private return_type class_ref 137858 // Method
	nparams 1
	  param inout name "descriptor" type class_ref 903554 // MethodDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 903554 "MethodDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A MethodDescriptor describes a particular method that a Java Bean
supports for external access from other components.
"
      classrelation 3107330 // <generalisation>
	relation 3107330 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3107330 // <generalisation>
	  b parent class_ref 903042 // FeatureDescriptor
      end

      classrelation 3107458 // methodRef (<unidirectional association>)
	relation 3107458 --->
	  a role_name "methodRef" init_value " new MethodRef()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3107458 // methodRef (<unidirectional association>)
	  b parent class_ref 905858 // MethodRef
      end

      classrelation 3107586 // paramNames (<unidirectional association>)
	relation 3107586 --->
	  a role_name "paramNames" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3107586 // paramNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3107714 // params (<unidirectional association>)
	relation 3107714 --->
	  a role_name "params" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WeakReference<Class<?>>> ${name}${value};
"
	    classrelation_ref 3107714 // params (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 3107842 // parameterDescriptors (<unidirectional association>)
	relation 3107842 --->
	  a role_name "parameterDescriptors" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3107842 // parameterDescriptors (<unidirectional association>)
	  b parent class_ref 916226 // ParameterDescriptor
      end

      operation 6796162 "MethodDescriptor"
	public explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MethodDescriptor</code> from a
<code>Method</code>.

@param method    The low-level method information.
"
      end

      operation 6796290 "MethodDescriptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "method" type class_ref 137858 // Method
	  param inout name "parameterDescriptors" type class_ref 916226 // ParameterDescriptor
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MethodDescriptor</code> from a
<code>Method</code> providing descriptive information for each
of the method's parameters.

@param method    The low-level method information.
@param parameterDescriptors  Descriptive information for each of the
                         method's parameters.
"
      end

      operation 6796418 "getMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that this MethodDescriptor encapsulates.

@return The low-level description of the method
"
      end

      operation 6796546 "setMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6796674 "setParams"
	private explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 130818 // Class
	multiplicity "[]"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?>[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6796802 "getParamNames"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " pp getParamNames used as an optimization to avoid method.getParameterTypes."
      end

      operation 6796930 "getParams"
	private return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797058 "getParameterDescriptors"
	public return_type class_ref 916226 // ParameterDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ParameterDescriptor for each of this MethodDescriptor's
method's parameters.

@return The locale-independent names of the parameters.  May return
         a null array if the parameter names aren't known.
"
      end

      operation 6797186 "resolve"
	class_operation private return_type class_ref 137858 // Method
	nparams 2
	  param inout name "oldMethod" type class_ref 137858 // Method
	  param inout name "newMethod" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797314 "MethodDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 903554 // MethodDescriptor
	  param inout name "y" type class_ref 903554 // MethodDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor
Merge two method descriptors.  Where they conflict, give the
second argument (y) priority over the first argument (x).
@param x  The first (lower priority) MethodDescriptor
@param y  The second (higher priority) MethodDescriptor
"
      end

      operation 6797442 "MethodDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 903554 // MethodDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object.
"
      end

      operation 6797570 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 903682 "Beans"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides some general purpose beans control methods.
"
      operation 6751490 "instantiate"
	class_operation public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "cls" type class_ref 129026 // ClassLoader
	  param inout name "beanName" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Instantiate a JavaBean.
</p>
@return a JavaBean
@param     cls         the class-loader from which we should create
                       the bean.  If this is null, then the system
                       class-loader is used.
@param     beanName    the name of the bean within the class-loader.
                       For example \"sun.beanbox.foobah\"

@exception ClassNotFoundException if the class of a serialized
             object could not be found.
@exception IOException if an I/O error occurs.
"
      end

      operation 6751618 "instantiate"
	class_operation public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "cls" type class_ref 129026 // ClassLoader
	  param inout name "beanName" type class_ref 128130 // String
	  param inout name "beanContext" type class_ref 902786 // BeanContext
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Instantiate a JavaBean.
</p>
@return a JavaBean

@param     cls         the class-loader from which we should create
                       the bean.  If this is null, then the system
                       class-loader is used.
@param     beanName    the name of the bean within the class-loader.
                       For example \"sun.beanbox.foobah\"
@param     beanContext The BeanContext in which to nest the new bean

@exception ClassNotFoundException if the class of a serialized
             object could not be found.
@exception IOException if an I/O error occurs.
"
      end

      operation 6751746 "instantiate"
	class_operation public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "cls" type class_ref 129026 // ClassLoader
	  param inout name "beanName" type class_ref 128130 // String
	  param inout name "beanContext" type class_ref 902786 // BeanContext
	  param inout name "initializer" type class_ref 902658 // AppletInitializer
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a bean.
<p>
The bean is created based on a name relative to a class-loader.
This name should be a dot-separated name such as \"a.b.c\".
<p>
In Beans 1.0 the given name can indicate either a serialized object
or a class.  Other mechanisms may be added in the future.  In
beans 1.0 we first try to treat the beanName as a serialized object
name then as a class name.
<p>
When using the beanName as a serialized object name we convert the
given beanName to a resource pathname and add a trailing \".ser\" suffix.
We then try to load a serialized object from that resource.
<p>
For example, given a beanName of \"x.y\", Beans.instantiate would first
try to read a serialized object from the resource \"x/y.ser\" and if
that failed it would try to load the class \"x.y\" and create an
instance of that class.
<p>
If the bean is a subtype of java.applet.Applet, then it is given
some special initialization.  First, it is supplied with a default
AppletStub and AppletContext.  Second, if it was instantiated from
a classname the applet's \"init\" method is called.  (If the bean was
deserialized this step is skipped.)
<p>
Note that for beans which are applets, it is the caller's responsiblity
to call \"start\" on the applet.  For correct behaviour, this should be done
after the applet has been added into a visible AWT container.
<p>
Note that applets created via beans.instantiate run in a slightly
different environment than applets running inside browsers.  In
particular, bean applets have no access to \"parameters\", so they may
wish to provide property get/set methods to set parameter values.  We
advise bean-applet developers to test their bean-applets against both
the JDK appletviewer (for a reference browser environment) and the
BDK BeanBox (for a reference bean container).

@return a JavaBean
@param     cls         the class-loader from which we should create
                       the bean.  If this is null, then the system
                       class-loader is used.
@param     beanName    the name of the bean within the class-loader.
                       For example \"sun.beanbox.foobah\"
@param     beanContext The BeanContext in which to nest the new bean
@param     initializer The AppletInitializer for the new bean

@exception ClassNotFoundException if the class of a serialized
             object could not be found.
@exception IOException if an I/O error occurs.
"
      end

      operation 6751874 "unsafeBeanContextAdd"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "beanContext" type class_ref 902786 // BeanContext
	  param inout name "res" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 6752002 "getInstanceOf"
	class_operation public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "bean" type class_ref 129538 // Object
	  param inout name "targetType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From a given bean, obtain an object representing a specified
type view of that source object.
<p>
The result may be the same object or a different object.  If
the requested target view isn't available then the given
bean is returned.
<p>
This method is provided in Beans 1.0 as a hook to allow the
addition of more flexible bean behaviour in the future.

@return an object representing a specified type view of the
source object
@param bean        Object from which we want to obtain a view.
@param targetType  The type of view we'd like to get.

"
      end

      operation 6752130 "isInstanceOf"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "bean" type class_ref 129538 // Object
	  param inout name "targetType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if a bean can be viewed as a given target type.
The result will be true if the Beans.getInstanceof method
can be used on the given bean to obtain an object that
represents the specified targetType type view.

@param bean  Bean from which we want to obtain a view.
@param targetType  The type of view we'd like to get.
@return \"true\" if the given bean supports the given targetType.

"
      end

      operation 6752258 "isDesignTime"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if we are in design-mode.

@return  True if we are running in an application construction
         environment.

@see DesignMode
"
      end

      operation 6752386 "isGuiAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether beans can assume a GUI is available.

@return  True if we are running in an environment where beans
    can assume that an interactive GUI is available, so they
    can pop up dialog boxes, etc.  This will normally return
    true in a windowing environment, and will normally return
    false in a server environment or if an application is
    running as part of a batch job.

@see Visibility

"
      end

      operation 6752514 "setDesignTime"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "isDesignTime" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to indicate whether of not we are running in an application
builder environment.

<p>Note that this method is security checked
and is not available to (for example) untrusted applets.
More specifically, if there is a security manager,
its <code>checkPropertiesAccess</code>
method is called. This could result in a SecurityException.

@param isDesignTime  True if we're in an application builder tool.
@exception  SecurityException  if a security manager exists and its
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess
"
      end

      operation 6752642 "setGuiAvailable"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "isGuiAvailable" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to indicate whether of not we are running in an environment
where GUI interaction is available.

<p>Note that this method is security checked
and is not available to (for example) untrusted applets.
More specifically, if there is a security manager,
its <code>checkPropertiesAccess</code>
method is called. This could result in a SecurityException.

@param isGuiAvailable  True if GUI interaction is available.
@exception  SecurityException  if a security manager exists and its
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess
"
      end
    end

    class 903810 "ObjectInputStreamWithLoader"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This subclass of ObjectInputStream delegates loading of classes to
an existing ClassLoader.
"
      classrelation 3085314 // <generalisation>
	relation 3085314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3085314 // <generalisation>
	  b parent class_ref 168962 // ObjectInputStream
      end

      classrelation 3085442 // loader (<unidirectional association>)
	relation 3085442 --->
	  a role_name "loader" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3085442 // loader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      operation 6752770 "ObjectInputStreamWithLoader"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "loader" type class_ref 129026 // ClassLoader
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 171778 // StreamCorruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loader must be non-null;
"
      end

      operation 6752898 "resolveClass"
	protected return_type class_ref 130818 // Class
	nparams 1
	  param inout name "classDesc" type class_ref 170242 // ObjectStreamClass
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Use the given ClassLoader rather than using the system class
"
      end
    end

    class 903938 "BeansAppletContext"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Package private support class.  This provides a default AppletContext
for beans which are applets.
"
      classrelation 3085570 // <realization>
	relation 3085570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3085570 // <realization>
	  b parent class_ref 855426 // AppletContext
      end

      classrelation 3085698 // target (<unidirectional association>)
	relation 3085698 --->
	  a role_name "target" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3085698 // target (<unidirectional association>)
	  b parent class_ref 240258 // Applet
      end

      classrelation 3085826 // imageCache (<unidirectional association>)
	relation 3085826 --->
	  a role_name "imageCache" init_value " new Hashtable<>()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL,Object> ${name}${value};
"
	    classrelation_ref 3085826 // imageCache (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      operation 6753026 "BeansAppletContext"
	package explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 240258 // Applet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753154 "getAudioClip"
	public return_type class_ref 855554 // AudioClip
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753282 "getImage"
	public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753410 "getApplet"
	public return_type class_ref 240258 // Applet
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753538 "getApplets"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Applet> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753666 "showDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753794 "showDocument"
	public explicit_return_type "void"
	nparams 2
	  param inout name "url" type class_ref 243458 // URL
	  param inout name "target" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753922 "showStatus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "status" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754050 "setStream"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "stream" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754178 "getStream"
	public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754306 "getStreamKeys"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 904066 "BeansAppletStub"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Package private support class.  This provides an AppletStub
for beans which are applets.
"
      classrelation 3085954 // <realization>
	relation 3085954 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3085954 // <realization>
	  b parent class_ref 855298 // AppletStub
      end

      attribute 1627010 "active"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3086082 // target (<unidirectional association>)
	relation 3086082 --->
	  a role_name "target" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3086082 // target (<unidirectional association>)
	  b parent class_ref 240258 // Applet
      end

      classrelation 3086210 // context (<unidirectional association>)
	relation 3086210 --->
	  a role_name "context" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3086210 // context (<unidirectional association>)
	  b parent class_ref 855426 // AppletContext
      end

      classrelation 3086338 // codeBase (<unidirectional association>)
	relation 3086338 --->
	  a role_name "codeBase" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3086338 // codeBase (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 3086466 // docBase (<unidirectional association>)
	relation 3086466 --->
	  a role_name "docBase" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3086466 // docBase (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      operation 6754434 "BeansAppletStub"
	package explicit_return_type ""
	nparams 4
	  param inout name "target" type class_ref 240258 // Applet
	  param inout name "context" type class_ref 855426 // AppletContext
	  param inout name "codeBase" type class_ref 243458 // URL
	  param inout name "docBase" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754562 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754690 "getDocumentBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754818 "getCodeBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754946 "getParameter"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6755074 "getAppletContext"
	public return_type class_ref 855426 // AppletContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6755202 "appletResize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 904194 "ConstructorProperties"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Target(CONSTRUCTOR)
@Retention(RUNTIME)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An annotation on a constructor that shows how the parameters of
that constructor correspond to the constructed object's getter
methods.  For example:

<blockquote>
<pre>
public class Point {
&#64;ConstructorProperties({\"x\", \"y\"})
public Point(int x, int y) {
this.x = x;
this.y = y;
}

public int getX() {
return x;
}

public int getY() {
return y;
}

private final int x, y;
}
</pre>
</blockquote>

The annotation shows that the first parameter of the constructor
can be retrieved with the {@code getX()} method and the second with
the {@code getY()} method.  Since parameter names are not in
general available at runtime, without the annotation there would be
no way to know whether the parameters correspond to {@code getX()}
and {@code getY()} or the other way around.

@since 1.6
"
      operation 6755330 "value"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>The getter names.</p>
@return the getter names corresponding to the parameters in the
annotated constructor.
"
      end
    end

    class 904322 "Customizer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A customizer class provides a complete custom GUI for customizing
a target Java Bean.
<P>
Each customizer should inherit from the java.awt.Component class so
it can be instantiated inside an AWT dialog or panel.
<P>
Each customizer should have a null constructor.
"
      operation 6755458 "setObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bean" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the object to be customized.  This method should be called only
once, before the Customizer has been added to any parent AWT container.
@param bean  The object to be customized.
"
      end

      operation 6755586 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a listener for the PropertyChange event.  The customizer
should fire a PropertyChange event whenever it changes the target
bean in a way that might require the displayed properties to be
refreshed.

@param listener  An object to be invoked when a PropertyChange
         event is fired.
"
      end

      operation 6755714 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener for the PropertyChange event.

@param listener  The PropertyChange listener to be removed.
"
      end
    end

    class 904450 "DefaultPersistenceDelegate"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DefaultPersistenceDelegate</code> is a concrete implementation of
the abstract <code>PersistenceDelegate</code> class and
is the delegate used by default for classes about
which no information is available. The <code>DefaultPersistenceDelegate</code>
provides, version resilient, public API-based persistence for
classes that follow the JavaBeans&trade; conventions without any class specific
configuration.
<p>
The key assumptions are that the class has a nullary constructor
and that its state is accurately represented by matching pairs
of \"setter\" and \"getter\" methods in the order they are returned
by the Introspector.
In addition to providing code-free persistence for JavaBeans,
the <code>DefaultPersistenceDelegate</code> provides a convenient means
to effect persistent storage for classes that have a constructor
that, while not nullary, simply requires some property values
as arguments.

@see #DefaultPersistenceDelegate(String[])
@see java.beans.Introspector

@since 1.4

@author Philip Milne
"
      classrelation 3086594 // <generalisation>
	relation 3086594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3086594 // <generalisation>
	  b parent class_ref 904578 // PersistenceDelegate
      end

      classrelation 3086722 // EMPTY (<unidirectional association>)
	relation 3086722 --->
	  a role_name "EMPTY" multiplicity "[]" init_value " {}" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3086722 // EMPTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3086850 // constructor (<unidirectional association>)
	relation 3086850 --->
	  a role_name "constructor" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3086850 // constructor (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3086978 // definesEquals (<unidirectional association>)
	relation 3086978 --->
	  a role_name "definesEquals" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3086978 // definesEquals (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      operation 6756354 "DefaultPersistenceDelegate"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a persistence delegate for a class with a nullary constructor.

@see #DefaultPersistenceDelegate(java.lang.String[])
"
      end

      operation 6756482 "DefaultPersistenceDelegate"
	public explicit_return_type ""
	nparams 1
	  param inout name "constructorPropertyNames" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a default persistence delegate for a class with a
constructor whose arguments are the values of the property
names as specified by <code>constructorPropertyNames</code>.
The constructor arguments are created by
evaluating the property names in the order they are supplied.
To use this class to specify a single preferred constructor for use
in the serialization of a particular type, we state the
names of the properties that make up the constructor's
arguments. For example, the <code>Font</code> class which
does not define a nullary constructor can be handled
with the following persistence delegate:

<pre>
    new DefaultPersistenceDelegate(new String[]{\"name\", \"style\", \"size\"});
</pre>

@param  constructorPropertyNames The property names for the arguments of this constructor.

@see #instantiate
"
      end

      operation 6756610 "definesEquals"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6756738 "definesEquals"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "instance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6756866 "mutatesTo"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "newInstance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the number of arguments in the specified constructor is non-zero and
the class of <code>oldInstance</code> explicitly declares an \"equals\" method
this method returns the value of <code>oldInstance.equals(newInstance)</code>.
Otherwise, this method uses the superclass's definition which returns true if the
classes of the two instances are equal.

@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@return True if an equivalent copy of <code>newInstance</code> may be
        created by applying a series of mutations to <code>oldInstance</code>.

@see #DefaultPersistenceDelegate(String[])
"
      end

      operation 6756994 "instantiate"
	protected return_type class_ref 904834 // Expression
	nparams 2
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "out" type class_ref 904706 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation of the <code>instantiate</code> method returns
an expression containing the predefined method name \"new\" which denotes a
call to a constructor with the arguments as specified in
the <code>DefaultPersistenceDelegate</code>'s constructor.

@param  oldInstance The instance to be instantiated.
@param  out The code output stream.
@return An expression whose value is <code>oldInstance</code>.

@throws NullPointerException if {@code out} is {@code null}
                             and this value is used in the method

@see #DefaultPersistenceDelegate(String[])
"
      end

      operation 6757122 "findMethod"
	private return_type class_ref 137858 // Method
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "property" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6757250 "doProperty"
	private explicit_return_type "void"
	nparams 5
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "pd" type class_ref 352770 // PropertyDescriptor
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "newInstance" type class_ref 129538 // Object
	  param inout name "out" type class_ref 904706 // Encoder
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6757378 "invokeStatement"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "instance" type class_ref 129538 // Object
	  param inout name "methodName" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "out" type class_ref 904706 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6757506 "initBean"
	private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "newInstance" type class_ref 129538 // Object
	  param inout name "out" type class_ref 904706 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Write out the properties of this instance."
      end

      operation 6757634 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "newInstance" type class_ref 129538 // Object
	  param inout name "out" type class_ref 904706 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation of the <code>initialize</code> method assumes
all state held in objects of this type is exposed via the
matching pairs of \"setter\" and \"getter\" methods in the order
they are returned by the Introspector. If a property descriptor
defines a \"transient\" attribute with a value equal to
<code>Boolean.TRUE</code> the property is ignored by this
default implementation. Note that this use of the word
\"transient\" is quite independent of the field modifier
that is used by the <code>ObjectOutputStream</code>.
<p>
For each non-transient property, an expression is created
in which the nullary \"getter\" method is applied
to the <code>oldInstance</code>. The value of this
expression is the value of the property in the instance that is
being serialized. If the value of this expression
in the cloned environment <code>mutatesTo</code> the
target value, the new value is initialized to make it
equivalent to the old value. In this case, because
the property value has not changed there is no need to
call the corresponding \"setter\" method and no statement
is emitted. If not however, the expression for this value
is replaced with another expression (normally a constructor)
and the corresponding \"setter\" method is called to install
the new property value in the object. This scheme removes
default information from the output produced by streams
using this delegate.
<p>
In passing these statements to the output stream, where they
will be executed, side effects are made to the <code>newInstance</code>.
In most cases this allows the problem of properties
whose values depend on each other to actually help the
serialization process by making the number of statements
that need to be written to the output smaller. In general,
the problem of handling interdependent properties is reduced to
that of finding an order for the properties in
a class such that no property value depends on the value of
a subsequent property.

@param type the type of the instances
@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@param out The stream to which any initialization statements should be written.

@throws NullPointerException if {@code out} is {@code null}

@see java.beans.Introspector#getBeanInfo
@see java.beans.PropertyDescriptor
"
      end

      operation 6757762 "getPropertyDescriptor"
	class_operation private return_type class_ref 352770 // PropertyDescriptor
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "property" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 904578 "PersistenceDelegate"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The PersistenceDelegate class takes the responsibility
for expressing the state of an instance of a given class
in terms of the methods in the class's public API. Instead
of associating the responsibility of persistence with
the class itself as is done, for example, by the
<code>readObject</code> and <code>writeObject</code>
methods used by the <code>ObjectOutputStream</code>, streams like
the <code>XMLEncoder</code> which
use this delegation model can have their behavior controlled
independently of the classes themselves. Normally, the class
is the best place to put such information and conventions
can easily be expressed in this delegation scheme to do just that.
Sometimes however, it is the case that a minor problem
in a single class prevents an entire object graph from
being written and this can leave the application
developer with no recourse but to attempt to shadow
the problematic classes locally or use alternative
persistence techniques. In situations like these, the
delegation model gives a relatively clean mechanism for
the application developer to intervene in all parts of the
serialization process without requiring that modifications
be made to the implementation of classes which are not part
of the application itself.
<p>
In addition to using a delegation model, this persistence
scheme differs from traditional serialization schemes
in requiring an analog of the <code>writeObject</code>
method without a corresponding <code>readObject</code>
method. The <code>writeObject</code> analog encodes each
instance in terms of its public API and there is no need to
define a <code>readObject</code> analog
since the procedure for reading the serialized form
is defined by the semantics of method invocation as laid
out in the Java Language Specification.
Breaking the dependency between <code>writeObject</code>
and <code>readObject</code> implementations, which may
change from version to version, is the key factor
in making the archives produced by this technique immune
to changes in the private implementations of the classes
to which they refer.
<p>
A persistence delegate, may take control of all
aspects of the persistence of an object including:
<ul>
<li>
Deciding whether or not an instance can be mutated
into another instance of the same class.
<li>
Instantiating the object, either by calling a
public constructor or a public factory method.
<li>
Performing the initialization of the object.
</ul>
@see XMLEncoder

@since 1.4

@author Philip Milne
"
      operation 6755842 "writeObject"
	public explicit_return_type "void"
	nparams 2
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "out" type class_ref 904706 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>writeObject</code> is a single entry point to the persistence
and is used by a <code>Encoder</code> in the traditional
mode of delegation. Although this method is not final,
it should not need to be subclassed under normal circumstances.
<p>
This implementation first checks to see if the stream
has already encountered this object. Next the
<code>mutatesTo</code> method is called to see if
that candidate returned from the stream can
be mutated into an accurate copy of <code>oldInstance</code>.
If it can, the <code>initialize</code> method is called to
perform the initialization. If not, the candidate is removed
from the stream, and the <code>instantiate</code> method
is called to create a new candidate for this object.

@param oldInstance The instance that will be created by this expression.
@param out The stream to which this expression will be written.

@throws NullPointerException if {@code out} is {@code null}
"
      end

      operation 6755970 "mutatesTo"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "newInstance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if an <em>equivalent</em> copy of <code>oldInstance</code> may be
created by applying a series of statements to <code>newInstance</code>.
In the specification of this method, we mean by equivalent that the modified instance
is indistinguishable from <code>oldInstance</code> in the behavior
of the relevant methods in its public API. [Note: we use the
phrase <em>relevant</em> methods rather than <em>all</em> methods
here only because, to be strictly correct, methods like <code>hashCode</code>
and <code>toString</code> prevent most classes from producing truly
indistinguishable copies of their instances].
<p>
The default behavior returns <code>true</code>
if the classes of the two instances are the same.

@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@return True if an equivalent copy of <code>newInstance</code> may be
        created by applying a series of mutations to <code>oldInstance</code>.
"
      end

      operation 6756098 "instantiate"
	abstract protected return_type class_ref 904834 // Expression
	nparams 2
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "out" type class_ref 904706 // Encoder
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an expression whose value is <code>oldInstance</code>.
This method is used to characterize the constructor
or factory method that should be used to create the given object.
For example, the <code>instantiate</code> method of the persistence
delegate for the <code>Field</code> class could be defined as follows:
<pre>
Field f = (Field)oldInstance;
return new Expression(f, f.getDeclaringClass(), \"getField\", new Object[]{f.getName()});
</pre>
Note that we declare the value of the returned expression so that
the value of the expression (as returned by <code>getValue</code>)
will be identical to <code>oldInstance</code>.

@param oldInstance The instance that will be created by this expression.
@param out The stream to which this expression will be written.
@return An expression whose value is <code>oldInstance</code>.

@throws NullPointerException if {@code out} is {@code null}
                             and this value is used in the method
"
      end

      operation 6756226 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "oldInstance" type class_ref 129538 // Object
	  param inout name "newInstance" type class_ref 129538 // Object
	  param inout name "out" type class_ref 904706 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produce a series of statements with side effects on <code>newInstance</code>
so that the new instance becomes <em>equivalent</em> to <code>oldInstance</code>.
In the specification of this method, we mean by equivalent that, after the method
returns, the modified instance is indistinguishable from
<code>newInstance</code> in the behavior of all methods in its
public API.
<p>
The implementation typically achieves this goal by producing a series of
\"what happened\" statements involving the <code>oldInstance</code>
and its publicly available state. These statements are sent
to the output stream using its <code>writeExpression</code>
method which returns an expression involving elements in
a cloned environment simulating the state of an input stream during
reading. Each statement returned will have had all instances
the old environment replaced with objects which exist in the new
one. In particular, references to the target of these statements,
which start out as references to <code>oldInstance</code> are returned
as references to the <code>newInstance</code> instead.
Executing these statements effects an incremental
alignment of the state of the two objects as a series of
modifications to the objects in the new environment.
By the time the initialize method returns it should be impossible
to tell the two instances apart by using their public APIs.
Most importantly, the sequence of steps that were used to make
these objects appear equivalent will have been recorded
by the output stream and will form the actual output when
the stream is flushed.
<p>
The default implementation, calls the <code>initialize</code>
method of the type's superclass.

@param type the type of the instances
@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@param out The stream to which any initialization statements should be written.

@throws NullPointerException if {@code out} is {@code null}
"
      end
    end

    class 904706 "Encoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>Encoder</code> is a class which can be used to create
files or streams that encode the state of a collection of
JavaBeans in terms of their public APIs. The <code>Encoder</code>,
in conjunction with its persistence delegates, is responsible for
breaking the object graph down into a series of <code>Statements</code>s
and <code>Expression</code>s which can be used to create it.
A subclass typically provides a syntax for these expressions
using some human readable form - like Java source code or XML.

@since 1.4

@author Philip Milne
"
      attribute 1627138 "finder"
	const_attribute private explicit_type "PersistenceDelegateFinder"
	init_value " new PersistenceDelegateFinder()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3087234 // bindings (<unidirectional association>)
	relation 3087234 --->
	  a role_name "bindings" init_value " new IdentityHashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Expression> ${name}${value};
"
	    classrelation_ref 3087234 // bindings (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3087362 // exceptionListener (<unidirectional association>)
	relation 3087362 --->
	  a role_name "exceptionListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3087362 // exceptionListener (<unidirectional association>)
	  b parent class_ref 905090 // ExceptionListener
      end

      attribute 1627266 "executeStatements"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3087490 // attributes (<unidirectional association>)
	relation 3087490 --->
	  a role_name "attributes" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Object> ${name}${value};
"
	    classrelation_ref 3087490 // attributes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 6758146 "writeObject"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write the specified object to the output stream.
The serialized form will denote a series of
expressions, the combined effect of which will create
an equivalent object when the input stream is read.
By default, the object is assumed to be a <em>JavaBean</em>
with a nullary constructor, whose state is defined by
the matching pairs of \"setter\" and \"getter\" methods
returned by the Introspector.

@param o The object to be written to the stream.

@see XMLDecoder#readObject
"
      end

      operation 6758274 "setExceptionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exceptionListener" type class_ref 905090 // ExceptionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the exception handler for this stream to <code>exceptionListener</code>.
The exception handler is notified when this stream catches recoverable
exceptions.

@param exceptionListener The exception handler for this stream;
      if <code>null</code> the default exception listener will be used.

@see #getExceptionListener
"
      end

      operation 6758402 "getExceptionListener"
	public return_type class_ref 905090 // ExceptionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the exception handler for this stream.

@return The exception handler for this stream;
   Will return the default exception listener if this has not explicitly been set.

@see #setExceptionListener
"
      end

      operation 6758530 "getValue"
	package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "exp" type class_ref 904834 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6758658 "getPersistenceDelegate"
	public return_type class_ref 904578 // PersistenceDelegate
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the persistence delegate for the given type.
The persistence delegate is calculated by applying
the following rules in order:
<ol>
<li>
If a persistence delegate is associated with the given type
by using the {@link #setPersistenceDelegate} method
it is returned.
<li>
A persistence delegate is then looked up by the name
composed of the the fully qualified name of the given type
and the \"PersistenceDelegate\" postfix.
For example, a persistence delegate for the {@code Bean} class
should be named {@code BeanPersistenceDelegate}
and located in the same package.
<pre>
public class Bean { ... }
public class BeanPersistenceDelegate { ... }</pre>
The instance of the {@code BeanPersistenceDelegate} class
is returned for the {@code Bean} class.
<li>
If the type is {@code null},
a shared internal persistence delegate is returned
that encodes {@code null} value.
<li>
If the type is a {@code enum} declaration,
a shared internal persistence delegate is returned
that encodes constants of this enumeration
by their names.
<li>
If the type is a primitive type or the corresponding wrapper,
a shared internal persistence delegate is returned
that encodes values of the given type.
<li>
If the type is an array,
a shared internal persistence delegate is returned
that encodes an array of the appropriate type and length,
and each of its elements as if they are properties.
<li>
If the type is a proxy,
a shared internal persistence delegate is returned
that encodes a proxy instance by using
the {@link java.lang.reflect.Proxy#newProxyInstance} method.
<li>
If the {@link BeanInfo} for this type has a {@link BeanDescriptor}
which defined a \"persistenceDelegate\" attribute,
the value of this named attribute is returned.
<li>
In all other cases the default persistence delegate is returned.
The default persistence delegate assumes the type is a <em>JavaBean</em>,
implying that it has a default constructor and that its state
may be characterized by the matching pairs of \"setter\" and \"getter\"
methods returned by the {@link Introspector} class.
The default constructor is the constructor with the greatest number
of parameters that has the {@link ConstructorProperties} annotation.
If none of the constructors has the {@code ConstructorProperties} annotation,
then the nullary constructor (constructor with no parameters) will be used.
For example, in the following code fragment, the nullary constructor
for the {@code Foo} class will be used,
while the two-parameter constructor
for the {@code Bar} class will be used.
<pre>
public class Foo {
    public Foo() { ... }
    public Foo(int x) { ... }
}
public class Bar {
    public Bar() { ... }
    &#64;ConstructorProperties({\"x\"})
    public Bar(int x) { ... }
    &#64;ConstructorProperties({\"x\", \"y\"})
    public Bar(int x, int y) { ... }
}</pre>
</ol>

@param type  the class of the objects
@return the persistence delegate for the given type

@see #setPersistenceDelegate
@see java.beans.Introspector#getBeanInfo
@see java.beans.BeanInfo#getBeanDescriptor
"
      end

      operation 6758786 "setPersistenceDelegate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "delegate" type class_ref 904578 // PersistenceDelegate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified persistence delegate with the given type.

@param type  the class of objects that the specified persistence delegate applies to
@param delegate  the persistence delegate for instances of the given type

@see #getPersistenceDelegate
@see java.beans.Introspector#getBeanInfo
@see java.beans.BeanInfo#getBeanDescriptor
"
      end

      operation 6758914 "remove"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "oldInstance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the entry for this instance, returning the old entry.

@param oldInstance The entry that should be removed.
@return The entry that was removed.

@see #get
"
      end

      operation 6759042 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "oldInstance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a tentative value for <code>oldInstance</code> in
the environment created by this stream. A persistence
delegate can use its <code>mutatesTo</code> method to
determine whether this value may be initialized to
form the equivalent object at the output or whether
a new object must be instantiated afresh. If the
stream has not yet seen this value, null is returned.

@param  oldInstance The instance to be looked up.
@return The object, null if the object has not been seen before.
"
      end

      operation 6759170 "writeObject1"
	private return_type class_ref 129538 // Object
	nparams 1
	  param inout name "oldInstance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6759298 "cloneStatement"
	private return_type class_ref 905218 // Statement
	nparams 1
	  param inout name "oldExp" type class_ref 905218 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6759426 "writeStatement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldStm" type class_ref 905218 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes statement <code>oldStm</code> to the stream.
The <code>oldStm</code> should be written entirely
in terms of the callers environment, i.e. the
target and all arguments should be part of the
object graph being written. These expressions
represent a series of \"what happened\" expressions
which tell the output stream how to produce an
object graph like the original.
<p>
The implementation of this method will produce
a second expression to represent the same expression in
an environment that will exist when the stream is read.
This is achieved simply by calling <code>writeObject</code>
on the target and all the arguments and building a new
expression with the results.

@param oldStm The expression to be written to the stream.
"
      end

      operation 6759554 "writeExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldExp" type class_ref 904834 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The implementation first checks to see if an
expression with this value has already been written.
If not, the expression is cloned, using
the same procedure as <code>writeStatement</code>,
and the value of this expression is reconciled
with the value of the cloned expression
by calling <code>writeObject</code>.

@param oldExp The expression to be written to the stream.
"
      end

      operation 6759682 "clear"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6759810 "setAttribute"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package private method for setting an attributes table for the encoder"
      end

      operation 6759938 "getAttribute"
	package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 904834 "Expression"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>Expression</code> object represents a primitive expression
in which a single method is applied to a target and a set of
arguments to return a result - as in <code>\"a.getFoo()\"</code>.
<p>
In addition to the properties of the super class, the
<code>Expression</code> object provides a <em>value</em> which
is the object returned when this expression is evaluated.
The return value is typically not provided by the caller and
is instead computed by dynamically finding the method and invoking
it when the first call to <code>getValue</code> is made.

@see #getValue
@see #setValue

@since 1.4

@author Philip Milne
"
      classrelation 3090178 // <generalisation>
	relation 3090178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3090178 // <generalisation>
	  b parent class_ref 905218 // Statement
      end

      classrelation 3090306 // unbound (<unidirectional association>)
	relation 3090306 --->
	  a role_name "unbound" init_value " new Object()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090306 // unbound (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3090434 // value (<unidirectional association>)
	relation 3090434 --->
	  a role_name "value" init_value " unbound" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090434 // value (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 6766594 "Expression"
	public explicit_return_type ""
	nparams 3
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "methodName" type class_ref 128130 // String
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"target\", \"methodName\", \"arguments\"})
"
	
	
	
	comment "Creates a new {@link Expression} object
for the specified target object to invoke the method
specified by the name and by the array of arguments.
<p>
The {@code target} and the {@code methodName} values should not be {@code null}.
Otherwise an attempt to execute this {@code Expression}
will result in a {@code NullPointerException}.
If the {@code arguments} value is {@code null},
an empty array is used as the value of the {@code arguments} property.

@param target  the target object of this expression
@param methodName  the name of the method to invoke on the specified target
@param arguments  the array of arguments to invoke the specified method

@see #getValue
"
      end

      operation 6766722 "Expression"
	public explicit_return_type ""
	nparams 4
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "methodName" type class_ref 128130 // String
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@link Expression} object with the specified value
for the specified target object to invoke the  method
specified by the name and by the array of arguments.
The {@code value} value is used as the value of the {@code value} property,
so the {@link #getValue} method will return it
without executing this {@code Expression}.
<p>
The {@code target} and the {@code methodName} values should not be {@code null}.
Otherwise an attempt to execute this {@code Expression}
will result in a {@code NullPointerException}.
If the {@code arguments} value is {@code null},
an empty array is used as the value of the {@code arguments} property.

@param value  the value of this expression
@param target  the target object of this expression
@param methodName  the name of the method to invoke on the specified target
@param arguments  the array of arguments to invoke the specified method

@see #setValue
"
      end

      operation 6766850 "execute"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
<p>
If the invoked method completes normally,
the value it returns is copied in the {@code value} property.
Note that the {@code value} property is set to {@code null},
if the return type of the underlying method is {@code void}.

@throws NullPointerException if the value of the {@code target} or
                             {@code methodName} property is {@code null}
@throws NoSuchMethodException if a matching method is not found
@throws SecurityException if a security manager exists and
                          it denies the method invocation
@throws Exception that is thrown by the invoked method

@see java.lang.reflect.Method
@since 1.7
"
      end

      operation 6766978 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value property of this instance is not already set,
this method dynamically finds the method with the specified
methodName on this target with these arguments and calls it.
The result of the method invocation is first copied
into the value property of this expression and then returned
as the result of <code>getValue</code>. If the value property
was already set, either by a call to <code>setValue</code>
or a previous call to <code>getValue</code> then the value
property is returned without either looking up or calling the method.
<p>
The value property of an <code>Expression</code> is set to
a unique private (non-<code>null</code>) value by default and
this value is used as an internal indication that the method
has not yet been called. A return value of <code>null</code>
replaces this default value in the same way that any other value
would, ensuring that expressions are never evaluated more than once.
<p>
See the <code>execute</code> method for details on how
methods are chosen using the dynamic types of the target
and arguments.

@see Statement#execute
@see #setValue

@return The result of applying this method to these arguments.
@throws Exception if the method with the specified methodName
throws an exception
"
      end

      operation 6767106 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of this expression to <code>value</code>.
This value will be returned by the getValue method
without calling the method associated with this
expression.

@param value The value of this expression.

@see #getValue
"
      end

      operation 6767234 "instanceName"
	package return_type class_ref 128130 // String
	nparams 1
	  param inout name "instance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "pp"
      end

      operation 6767362 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the value of this expression using a Java-style syntax.
"
      end
    end

    class 904962 "DesignMode"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
This interface is intended to be implemented by, or delegated from, instances
of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy
of java.beans.beancontext.BeanContextChild instances, the current \"designTime\" property.
<p>
The JavaBeans&trade; specification defines the notion of design time as is a
mode in which JavaBeans instances should function during their composition
and customization in a interactive design, composition or construction tool,
as opposed to runtime when the JavaBean is part of an applet, application,
or other live Java executable abstraction.

@author Laurence P. G. Cable
@since 1.2

@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextChild
@see java.beans.beancontext.BeanContextMembershipListener
@see java.beans.PropertyChangeEvent
"
      classrelation 3087106 // PROPERTYNAME (<unidirectional association>)
	relation 3087106 --->
	  a role_name "PROPERTYNAME" init_value " \"designTime\"" class_relation public
	    comment "
The standard value of the propertyName as fired from a BeanContext or
other source of PropertyChangeEvents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3087106 // PROPERTYNAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6757890 "setDesignTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "designTime" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the \"value\" of the \"designTime\" property.
<p>
If the implementing object is an instance of java.beans.beancontext.BeanContext,
or a subinterface thereof, then that BeanContext should fire a
PropertyChangeEvent, to its registered BeanContextMembershipListeners, with
parameters:
<ul>
   <li><code>propertyName</code> - <code>java.beans.DesignMode.PROPERTYNAME</code>
   <li><code>oldValue</code> - previous value of \"designTime\"
   <li><code>newValue</code> - current value of \"designTime\"
</ul>
Note it is illegal for a BeanContextChild to invoke this method
associated with a BeanContext that it is nested within.

@param designTime  the current \"value\" of the \"designTime\" property
@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextMembershipListener
@see java.beans.PropertyChangeEvent
"
      end

      operation 6758018 "isDesignTime"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A value of true denotes that JavaBeans should behave in design time
mode, a value of false denotes runtime behavior.

@return the current \"value\" of the \"designTime\" property.
"
      end
    end

    class 905090 "ExceptionListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An ExceptionListener is notified of internal exceptions.

@since 1.4

@author Philip Milne
"
      operation 6765186 "exceptionThrown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when a recoverable exception has
been caught.

@param e The exception that was caught.

"
      end
    end

    class 905218 "Statement"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>Statement</code> object represents a primitive statement
in which a single method is applied to a target and
a set of arguments - as in <code>\"a.setFoo(b)\"</code>.
Note that where this example uses names
to denote the target and its argument, a statement
object does not require a name space and is constructed with
the values themselves.
The statement object associates the named method
with its environment as a simple set of values:
the target and an array of argument values.

@since 1.4

@author Philip Milne
"
      classrelation 3089282 // emptyArray (<unidirectional association>)
	relation 3089282 --->
	  a role_name "emptyArray" multiplicity "[]" init_value " new Object[]{}" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3089282 // emptyArray (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3089410 // defaultExceptionListener (<unidirectional association>)
	relation 3089410 --->
	  a role_name "defaultExceptionListener" init_value " new ExceptionListener() {
        public void exceptionThrown(Exception e) {
            System.err.println(e);
            // e.printStackTrace();
            System.err.println(\"Continuing ...\");
        }
    }" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3089410 // defaultExceptionListener (<unidirectional association>)
	  b parent class_ref 905090 // ExceptionListener
      end

      classrelation 3089538 // acc (<unidirectional association>)
	relation 3089538 --->
	  a role_name "acc" init_value " AccessController.getContext()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3089538 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      classrelation 3089666 // target (<unidirectional association>)
	relation 3089666 --->
	  a role_name "target" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3089666 // target (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3089794 // methodName (<unidirectional association>)
	relation 3089794 --->
	  a role_name "methodName" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3089794 // methodName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3089922 // arguments (<unidirectional association>)
	relation 3089922 --->
	  a role_name "arguments" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3089922 // arguments (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3090050 // loader (<unidirectional association>)
	relation 3090050 --->
	  a role_name "loader" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090050 // loader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      operation 6765314 "Statement"
	public explicit_return_type ""
	nparams 3
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "methodName" type class_ref 128130 // String
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"target\", \"methodName\", \"arguments\"})
"
	
	
	
	comment "Creates a new {@link Statement} object
for the specified target object to invoke the method
specified by the name and by the array of arguments.
<p>
The {@code target} and the {@code methodName} values should not be {@code null}.
Otherwise an attempt to execute this {@code Expression}
will result in a {@code NullPointerException}.
If the {@code arguments} value is {@code null},
an empty array is used as the value of the {@code arguments} property.

@param target  the target object of this statement
@param methodName  the name of the method to invoke on the specified target
@param arguments  the array of arguments to invoke the specified method
"
      end

      operation 6765442 "getTarget"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the target object of this statement.
If this method returns {@code null},
the {@link #execute} method
throws a {@code NullPointerException}.

@return the target object of this statement
"
      end

      operation 6765570 "getMethodName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the method to invoke.
If this method returns {@code null},
the {@link #execute} method
throws a {@code NullPointerException}.

@return the name of the method
"
      end

      operation 6765698 "getArguments"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arguments for the method to invoke.
The number of arguments and their types
must match the method being  called.
{@code null} can be used as a synonym of an empty array.

@return the array of arguments
"
      end

      operation 6765826 "execute"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The {@code execute} method finds a method whose name is the same
as the {@code methodName} property, and invokes the method on
the target.

When the target's class defines many methods with the given name
the implementation should choose the most specific method using
the algorithm specified in the Java Language Specification
(15.11). The dynamic class of the target and arguments are used
in place of the compile-time type information and, like the
{@link java.lang.reflect.Method} class itself, conversion between
primitive values and their associated wrapper classes is handled
internally.
<p>
The following method types are handled as special cases:
<ul>
<li>
Static methods may be called by using a class object as the target.
<li>
The reserved method name \"new\" may be used to call a class's constructor
as if all classes defined static \"new\" methods. Constructor invocations
are typically considered {@code Expression}s rather than {@code Statement}s
as they return a value.
<li>
The method names \"get\" and \"set\" defined in the {@link java.util.List}
interface may also be applied to array instances, mapping to
the static methods of the same name in the {@code Array} class.
</ul>

@throws NullPointerException if the value of the {@code target} or
                             {@code methodName} property is {@code null}
@throws NoSuchMethodException if a matching method is not found
@throws SecurityException if a security manager exists and
                          it denies the method invocation
@throws Exception that is thrown by the invoked method

@see java.lang.reflect.Method
"
      end

      operation 6765954 "invoke"
	package return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6766082 "invokeInternal"
	private return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6766210 "instanceName"
	package return_type class_ref 128130 // String
	nparams 1
	  param inout name "instance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6766338 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the value of this statement using a Java-style syntax.
"
      end

      operation 6766466 "getMethod"
	class_operation package return_type class_ref 137858 // Method
	nparams 3
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "name" type class_ref 128130 // String
	  param inout name "args" explicit_type "Class<?>..."
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 905346 "EventHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>EventHandler</code> class provides
support for dynamically generating event listeners whose methods
execute a simple statement involving an incoming event object
and a target object.
<p>
The <code>EventHandler</code> class is intended to be used by interactive tools, such as
application builders, that allow developers to make connections between
beans. Typically connections are made from a user interface bean
(the event <em>source</em>)
to an application logic bean (the <em>target</em>). The most effective
connections of this kind isolate the application logic from the user
interface.  For example, the <code>EventHandler</code> for a
connection from a <code>JCheckBox</code> to a method
that accepts a boolean value can deal with extracting the state
of the check box and passing it directly to the method so that
the method is isolated from the user interface layer.
<p>
Inner classes are another, more general way to handle events from
user interfaces.  The <code>EventHandler</code> class
handles only a subset of what is possible using inner
classes. However, <code>EventHandler</code> works better
with the long-term persistence scheme than inner classes.
Also, using <code>EventHandler</code> in large applications in
which the same interface is implemented many times can
reduce the disk and memory footprint of the application.
<p>
The reason that listeners created with <code>EventHandler</code>
have such a small
footprint is that the <code>Proxy</code> class, on which
the <code>EventHandler</code> relies, shares implementations
of identical
interfaces. For example, if you use
the <code>EventHandler</code> <code>create</code> methods to make
all the <code>ActionListener</code>s in an application,
all the action listeners will be instances of a single class
(one created by the <code>Proxy</code> class).
In general, listeners based on
the <code>Proxy</code> class require one listener class
to be created per <em>listener type</em> (interface),
whereas the inner class
approach requires one class to be created per <em>listener</em>
(object that implements the interface).

<p>
You don't generally deal directly with <code>EventHandler</code>
instances.
Instead, you use one of the <code>EventHandler</code>
<code>create</code> methods to create
an object that implements a given listener interface.
This listener object uses an <code>EventHandler</code> object
behind the scenes to encapsulate information about the
event, the object to be sent a message when the event occurs,
the message (method) to be sent, and any argument
to the method.
The following section gives examples of how to create listener
objects using the <code>create</code> methods.

<h2>Examples of Using EventHandler</h2>

The simplest use of <code>EventHandler</code> is to install
a listener that calls a method on the target object with no arguments.
In the following example we create an <code>ActionListener</code>
that invokes the <code>toFront</code> method on an instance
of <code>javax.swing.JFrame</code>.

<blockquote>
<pre>
myButton.addActionListener(
   (ActionListener)EventHandler.create(ActionListener.class, frame, \"toFront\"));
</pre>
</blockquote>

When <code>myButton</code> is pressed, the statement
<code>frame.toFront()</code> will be executed.  One could get
the same effect, with some additional compile-time type safety,
by defining a new implementation of the <code>ActionListener</code>
interface and adding an instance of it to the button:

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
myButton.addActionListener(new ActionListener() {
   public void actionPerformed(ActionEvent e) {
       frame.toFront();
   }
});
</pre>
</blockquote>

The next simplest use of <code>EventHandler</code> is
to extract a property value from the first argument
of the method in the listener interface (typically an event object)
and use it to set the value of a property in the target object.
In the following example we create an <code>ActionListener</code> that
sets the <code>nextFocusableComponent</code> property of the target
(myButton) object to the value of the \"source\" property of the event.

<blockquote>
<pre>
EventHandler.create(ActionListener.class, myButton, \"nextFocusableComponent\", \"source\")
</pre>
</blockquote>

This would correspond to the following inner class implementation:

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener() {
   public void actionPerformed(ActionEvent e) {
       myButton.setNextFocusableComponent((Component)e.getSource());
   }
}
</pre>
</blockquote>

It's also possible to create an <code>EventHandler</code> that
just passes the incoming event object to the target's action.
If the fourth <code>EventHandler.create</code> argument is
an empty string, then the event is just passed along:

<blockquote>
<pre>
EventHandler.create(ActionListener.class, target, \"doActionEvent\", \"\")
</pre>
</blockquote>

This would correspond to the following inner class implementation:

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener() {
   public void actionPerformed(ActionEvent e) {
       target.doActionEvent(e);
   }
}
</pre>
</blockquote>

Probably the most common use of <code>EventHandler</code>
is to extract a property value from the
<em>source</em> of the event object and set this value as
the value of a property of the target object.
In the following example we create an <code>ActionListener</code> that
sets the \"label\" property of the target
object to the value of the \"text\" property of the
source (the value of the \"source\" property) of the event.

<blockquote>
<pre>
EventHandler.create(ActionListener.class, myButton, \"label\", \"source.text\")
</pre>
</blockquote>

This would correspond to the following inner class implementation:

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener {
   public void actionPerformed(ActionEvent e) {
       myButton.setLabel(((JTextField)e.getSource()).getText());
   }
}
</pre>
</blockquote>

The event property may be \"qualified\" with an arbitrary number
of property prefixes delimited with the \".\" character. The \"qualifying\"
names that appear before the \".\" characters are taken as the names of
properties that should be applied, left-most first, to
the event object.
<p>
For example, the following action listener

<blockquote>
<pre>
EventHandler.create(ActionListener.class, target, \"a\", \"b.c.d\")
</pre>
</blockquote>

might be written as the following inner class
(assuming all the properties had canonical getter methods and
returned the appropriate types):

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener {
   public void actionPerformed(ActionEvent e) {
       target.setA(e.getB().getC().isD());
   }
}
</pre>
</blockquote>
The target property may also be \"qualified\" with an arbitrary number
of property prefixs delimited with the \".\" character.  For example, the
following action listener:
<pre>
  EventHandler.create(ActionListener.class, target, \"a.b\", \"c.d\")
</pre>
might be written as the following inner class
(assuming all the properties had canonical getter methods and
returned the appropriate types):
<pre>
  //Equivalent code using an inner class instead of EventHandler.
  new ActionListener {
    public void actionPerformed(ActionEvent e) {
        target.getA().setB(e.getC().isD());
   }
}
</pre>
<p>
As <code>EventHandler</code> ultimately relies on reflection to invoke
a method we recommend against targeting an overloaded method.  For example,
if the target is an instance of the class <code>MyTarget</code> which is
defined as:
<pre>
  public class MyTarget {
    public void doIt(String);
    public void doIt(Object);
  }
</pre>
Then the method <code>doIt</code> is overloaded.  EventHandler will invoke
the method that is appropriate based on the source.  If the source is
null, then either method is appropriate and the one that is invoked is
undefined.  For that reason we recommend against targeting overloaded
methods.

@see java.lang.reflect.Proxy
@see java.util.EventObject

@since 1.4

@author Mark Davidson
@author Philip Milne
@author Hans Muller

"
      classrelation 3087618 // <realization>
	relation 3087618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3087618 // <realization>
	  b parent class_ref 260610 // InvocationHandler
      end

      classrelation 3087746 // target (<unidirectional association>)
	relation 3087746 --->
	  a role_name "target" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3087746 // target (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3087874 // action (<unidirectional association>)
	relation 3087874 --->
	  a role_name "action" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3087874 // action (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3088002 // eventPropertyName (<unidirectional association>)
	relation 3088002 --->
	  a role_name "eventPropertyName" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3088002 // eventPropertyName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3088130 // listenerMethodName (<unidirectional association>)
	relation 3088130 --->
	  a role_name "listenerMethodName" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3088130 // listenerMethodName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3088258 // acc (<unidirectional association>)
	relation 3088258 --->
	  a role_name "acc" init_value " AccessController.getContext()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3088258 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      operation 6760066 "EventHandler"
	public explicit_return_type ""
	nparams 4
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "action" type class_ref 128130 // String
	  param inout name "eventPropertyName" type class_ref 128130 // String
	  param inout name "listenerMethodName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"target\", \"action\", \"eventPropertyName\", \"listenerMethodName\"})
"
	
	
	
	comment "Creates a new <code>EventHandler</code> object;
you generally use one of the <code>create</code> methods
instead of invoking this constructor directly.  Refer to
{@link java.beans.EventHandler#create(Class, Object, String, String)
the general version of create} for a complete description of
the <code>eventPropertyName</code> and <code>listenerMethodName</code>
parameter.

@param target the object that will perform the action
@param action the name of a (possibly qualified) property or method on
       the target
@param eventPropertyName the (possibly qualified) name of a readable property of the incoming event
@param listenerMethodName the name of the method in the listener interface that should trigger the action

@throws NullPointerException if <code>target</code> is null
@throws NullPointerException if <code>action</code> is null

@see EventHandler
@see #create(Class, Object, String, String, String)
@see #getTarget
@see #getAction
@see #getEventPropertyName
@see #getListenerMethodName
"
      end

      operation 6760194 "getTarget"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object to which this event handler will send a message.

@return the target of this event handler
@see #EventHandler(Object, String, String, String)
"
      end

      operation 6760322 "getAction"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the target's writable property
that this event handler will set,
or the name of the method that this event handler
will invoke on the target.

@return the action of this event handler
@see #EventHandler(Object, String, String, String)
"
      end

      operation 6760450 "getEventPropertyName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the property of the event that should be
used in the action applied to the target.

@return the property of the event

@see #EventHandler(Object, String, String, String)
"
      end

      operation 6760578 "getListenerMethodName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the method that will trigger the action.
A return value of <code>null</code> signifies that all methods in the
listener interface trigger the action.

@return the name of the method that will trigger the action

@see #EventHandler(Object, String, String, String)
"
      end

      operation 6760706 "applyGetters"
	private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "getters" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6760834 "invoke"
	public return_type class_ref 129538 // Object
	nparams 3
	  param in name "proxy" type class_ref 129538 // Object
	  param in name "method" type class_ref 137858 // Method
	  param in name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract the appropriate property value from the event and
pass it to the action associated with
this <code>EventHandler</code>.

@param proxy the proxy object
@param method the method in the listener interface
@return the result of applying the action to the target

@see EventHandler
"
      end

      operation 6760962 "invokeInternal"
	private return_type class_ref 129538 // Object
	nparams 3
	  param inout name "proxy" type class_ref 129538 // Object
	  param inout name "method" type class_ref 137858 // Method
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6761090 "create"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "listenerInterface" type class_ref 130818 // Class
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "action" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an implementation of <code>listenerInterface</code> in which
<em>all</em> of the methods in the listener interface apply
the handler's <code>action</code> to the <code>target</code>. This
method is implemented by calling the other, more general,
implementation of the <code>create</code> method with both
the <code>eventPropertyName</code> and the <code>listenerMethodName</code>
taking the value <code>null</code>. Refer to
{@link java.beans.EventHandler#create(Class, Object, String, String)
the general version of create} for a complete description of
the <code>action</code> parameter.
<p>
To create an <code>ActionListener</code> that shows a
<code>JDialog</code> with <code>dialog.show()</code>,
one can write:

<blockquote>
<pre>
EventHandler.create(ActionListener.class, dialog, \"show\")
</pre>
</blockquote>

@param <T> the type to create
@param listenerInterface the listener interface to create a proxy for
@param target the object that will perform the action
@param action the name of a (possibly qualified) property or method on
       the target
@return an object that implements <code>listenerInterface</code>

@throws NullPointerException if <code>listenerInterface</code> is null
@throws NullPointerException if <code>target</code> is null
@throws NullPointerException if <code>action</code> is null

@see #create(Class, Object, String, String)
"
      end

      operation 6761218 "create"
	class_operation public explicit_return_type "T"
	nparams 4
	  param inout name "listenerInterface" type class_ref 130818 // Class
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "action" type class_ref 128130 // String
	  param inout name "eventPropertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/**
Creates an implementation of <code>listenerInterface</code> in which
<em>all</em> of the methods pass the value of the event
expression, <code>eventPropertyName</code>, to the final method in the
statement, <code>action</code>, which is applied to the <code>target</code>.
This method is implemented by calling the
more general, implementation of the <code>create</code> method with
the <code>listenerMethodName</code> taking the value <code>null</code>.
Refer to
{@link java.beans.EventHandler#create(Class, Object, String, String)
the general version of create} for a complete description of
the <code>action</code> and <code>eventPropertyName</code> parameters.
<p>
To create an <code>ActionListener</code> that sets the
the text of a <code>JLabel</code> to the text value of
the <code>JTextField</code> source of the incoming event,
you can use the following code:

<blockquote>
<pre>
EventHandler.create(ActionListener.class, label, \"text\", \"source.text\");
</pre>
</blockquote>

This is equivalent to the following code:
<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener() {
   public void actionPerformed(ActionEvent event) {
       label.setText(((JTextField)(event.getSource())).getText());
    }
};
</pre>
</blockquote>

@param <T> the type to create
@param listenerInterface the listener interface to create a proxy for
@param target the object that will perform the action
@param action the name of a (possibly qualified) property or method on
       the target
@param eventPropertyName the (possibly qualified) name of a readable property of the incoming event

@return an object that implements <code>listenerInterface</code>

@throws NullPointerException if <code>listenerInterface</code> is null
@throws NullPointerException if <code>target</code> is null
@throws NullPointerException if <code>action</code> is null

@see #create(Class, Object, String, String, String)
"
      end

      operation 6761346 "create"
	class_operation public explicit_return_type "T"
	nparams 5
	  param inout name "listenerInterface" type class_ref 130818 // Class
	  param inout name "target" type class_ref 129538 // Object
	  param inout name "action" type class_ref 128130 // String
	  param inout name "eventPropertyName" type class_ref 128130 // String
	  param inout name "listenerMethodName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an implementation of <code>listenerInterface</code> in which
the method named <code>listenerMethodName</code>
passes the value of the event expression, <code>eventPropertyName</code>,
to the final method in the statement, <code>action</code>, which
is applied to the <code>target</code>. All of the other listener
methods do nothing.
<p>
The <code>eventPropertyName</code> string is used to extract a value
from the incoming event object that is passed to the target
method.  The common case is the target method takes no arguments, in
which case a value of null should be used for the
<code>eventPropertyName</code>.  Alternatively if you want
the incoming event object passed directly to the target method use
the empty string.
The format of the <code>eventPropertyName</code> string is a sequence of
methods or properties where each method or
property is applied to the value returned by the preceding method
starting from the incoming event object.
The syntax is: <code>propertyName{.propertyName}*</code>
where <code>propertyName</code> matches a method or
property.  For example, to extract the <code>point</code>
property from a <code>MouseEvent</code>, you could use either
<code>\"point\"</code> or <code>\"getPoint\"</code> as the
<code>eventPropertyName</code>.  To extract the \"text\" property from
a <code>MouseEvent</code> with a <code>JLabel</code> source use any
of the following as <code>eventPropertyName</code>:
<code>\"source.text\"</code>,
<code>\"getSource.text\"</code> <code>\"getSource.getText\"</code> or
<code>\"source.getText\"</code>.  If a method can not be found, or an
exception is generated as part of invoking a method a
<code>RuntimeException</code> will be thrown at dispatch time.  For
example, if the incoming event object is null, and
<code>eventPropertyName</code> is non-null and not empty, a
<code>RuntimeException</code> will be thrown.
<p>
The <code>action</code> argument is of the same format as the
<code>eventPropertyName</code> argument where the last property name
identifies either a method name or writable property.
<p>
If the <code>listenerMethodName</code> is <code>null</code>
<em>all</em> methods in the interface trigger the <code>action</code> to be
executed on the <code>target</code>.
<p>
For example, to create a <code>MouseListener</code> that sets the target
object's <code>origin</code> property to the incoming <code>MouseEvent</code>'s
location (that's the value of <code>mouseEvent.getPoint()</code>) each
time a mouse button is pressed, one would write:
<blockquote>
<pre>
EventHandler.create(MouseListener.class, target, \"origin\", \"point\", \"mousePressed\");
</pre>
</blockquote>

This is comparable to writing a <code>MouseListener</code> in which all
of the methods except <code>mousePressed</code> are no-ops:

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new MouseAdapter() {
   public void mousePressed(MouseEvent e) {
       target.setOrigin(e.getPoint());
   }
};
</pre>
</blockquote>

@param <T> the type to create
@param listenerInterface the listener interface to create a proxy for
@param target the object that will perform the action
@param action the name of a (possibly qualified) property or method on
       the target
@param eventPropertyName the (possibly qualified) name of a readable property of the incoming event
@param listenerMethodName the name of the method in the listener interface that should trigger the action

@return an object that implements <code>listenerInterface</code>

@throws NullPointerException if <code>listenerInterface</code> is null
@throws NullPointerException if <code>target</code> is null
@throws NullPointerException if <code>action</code> is null

@see EventHandler
"
      end

      operation 6761474 "getClassLoader"
	class_operation private return_type class_ref 129026 // ClassLoader
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 905474 "IntrospectionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an exception happens during Introspection.
<p>
Typical causes include not being able to map a string class name
to a Class object, not being able to resolve a string method name,
or specifying a method name that has the wrong type signature for
its intended use.
"
      classrelation 3093122 // <generalisation>
	relation 3093122 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3093122 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1628290 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3728150539969542619L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6775170 "IntrospectionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "mess" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IntrospectionException</code> with a
detailed message.

@param mess Descriptive message
"
      end
    end

    class 905602 "IndexedPropertyChangeEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An \"IndexedPropertyChange\" event gets delivered whenever a component that
conforms to the JavaBeans&trade; specification (a \"bean\") changes a bound
indexed property. This class is an extension of <code>PropertyChangeEvent</code>
but contains the index of the property that has changed.
<P>
Null values may be provided for the old and the new values if their
true values are not known.
<P>
An event source may send a null object as the name to indicate that an
arbitrary set of if its properties have changed.  In this case the
old and new values should also be null.

@since 1.5
@author Mark Davidson
"
      classrelation 3091202 // <generalisation>
	relation 3091202 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3091202 // <generalisation>
	  b parent class_ref 360450 // PropertyChangeEvent
      end

      attribute 1627778 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -320227448495806870L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1627906 "index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6768514 "IndexedPropertyChangeEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>IndexedPropertyChangeEvent</code> object.

@param source  The bean that fired the event.
@param propertyName  The programmatic name of the property that
            was changed.
@param oldValue      The old value of the property.
@param newValue      The new value of the property.
@param index index of the property element that was changed.
"
      end

      operation 6768642 "getIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the property that was changed.

@return The index specifying the property element that was
        changed.
"
      end

      operation 6768770 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 905730 "IndexedPropertyDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An IndexedPropertyDescriptor describes a property that acts like an
array and has an indexed read and/or indexed write method to access
specific elements of the array.
<p>
An indexed property may also provide simple non-indexed read and write
methods.  If these are present, they read and write arrays of the type
returned by the indexed read method.
"
      classrelation 3092354 // <generalisation>
	relation 3092354 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3092354 // <generalisation>
	  b parent class_ref 352770 // PropertyDescriptor
      end

      classrelation 3092482 // indexedPropertyTypeRef (<unidirectional association>)
	relation 3092482 --->
	  a role_name "indexedPropertyTypeRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Class<?>> ${name}${value};
"
	    classrelation_ref 3092482 // indexedPropertyTypeRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      classrelation 3092610 // indexedReadMethodRef (<unidirectional association>)
	relation 3092610 --->
	  a role_name "indexedReadMethodRef" init_value " new MethodRef()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092610 // indexedReadMethodRef (<unidirectional association>)
	  b parent class_ref 905858 // MethodRef
      end

      classrelation 3092738 // indexedWriteMethodRef (<unidirectional association>)
	relation 3092738 --->
	  a role_name "indexedWriteMethodRef" init_value " new MethodRef()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092738 // indexedWriteMethodRef (<unidirectional association>)
	  b parent class_ref 905858 // MethodRef
      end

      classrelation 3092866 // indexedReadMethodName (<unidirectional association>)
	relation 3092866 --->
	  a role_name "indexedReadMethodName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092866 // indexedReadMethodName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3092994 // indexedWriteMethodName (<unidirectional association>)
	relation 3092994 --->
	  a role_name "indexedWriteMethodName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092994 // indexedWriteMethodName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6772610 "IndexedPropertyDescriptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "beanClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor constructs an IndexedPropertyDescriptor for a property
that follows the standard Java conventions by having getFoo and setFoo
accessor methods, for both indexed access and array access.
<p>
Thus if the argument name is \"fred\", it will assume that there
is an indexed reader method \"getFred\", a non-indexed (array) reader
method also called \"getFred\", an indexed writer method \"setFred\",
and finally a non-indexed writer method \"setFred\".

@param propertyName The programmatic name of the property.
@param beanClass The Class object for the target bean.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6772738 "IndexedPropertyDescriptor"
	public explicit_return_type ""
	nparams 6
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "beanClass" type class_ref 130818 // Class
	  param inout name "readMethodName" type class_ref 128130 // String
	  param inout name "writeMethodName" type class_ref 128130 // String
	  param inout name "indexedReadMethodName" type class_ref 128130 // String
	  param inout name "indexedWriteMethodName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and method
names for reading and writing the property, both indexed
and non-indexed.

@param propertyName The programmatic name of the property.
@param beanClass  The Class object for the target bean.
@param readMethodName The name of the method used for reading the property
          values as an array.  May be null if the property is write-only
          or must be indexed.
@param writeMethodName The name of the method used for writing the property
          values as an array.  May be null if the property is read-only
          or must be indexed.
@param indexedReadMethodName The name of the method used for reading
         an indexed property value.
         May be null if the property is write-only.
@param indexedWriteMethodName The name of the method used for writing
         an indexed property value.
         May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6772866 "IndexedPropertyDescriptor"
	public explicit_return_type ""
	nparams 5
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "readMethod" type class_ref 137858 // Method
	  param inout name "writeMethod" type class_ref 137858 // Method
	  param inout name "indexedReadMethod" type class_ref 137858 // Method
	  param inout name "indexedWriteMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and Method
objects for reading and writing the property.

@param propertyName The programmatic name of the property.
@param readMethod The method used for reading the property values as an array.
         May be null if the property is write-only or must be indexed.
@param writeMethod The method used for writing the property values as an array.
         May be null if the property is read-only or must be indexed.
@param indexedReadMethod The method used for reading an indexed property value.
         May be null if the property is write-only.
@param indexedWriteMethod The method used for writing an indexed property value.
         May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6772994 "IndexedPropertyDescriptor"
	package explicit_return_type ""
	nparams 6
	  param inout name "bean" type class_ref 130818 // Class
	  param inout name "base" type class_ref 128130 // String
	  param inout name "read" type class_ref 137858 // Method
	  param inout name "write" type class_ref 137858 // Method
	  param inout name "readIndexed" type class_ref 137858 // Method
	  param inout name "writeIndexed" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates <code>PropertyDescriptor</code> for the specified bean
with the specified name and methods to read/write the property value.

@param bean          the type of the target bean
@param base          the base name of the property (the rest of the method name)
@param read          the method used for reading the property value
@param write         the method used for writing the property value
@param readIndexed   the method used for reading an indexed property value
@param writeIndexed  the method used for writing an indexed property value
@exception IntrospectionException if an exception occurs during introspection

@since 1.7
"
      end

      operation 6773122 "getIndexedReadMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to read an indexed
property value.

@return The method that should be used to read an indexed
property value.
May return null if the property isn't indexed or is write-only.
"
      end

      operation 6773250 "setIndexedReadMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "readMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to read an indexed property value.

@param readMethod The new indexed read method.
@throws IntrospectionException if an exception occurs during
introspection.
"
      end

      operation 6773378 "setIndexedReadMethod0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "readMethod" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6773506 "getIndexedWriteMethod"
	public return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to write an indexed property value.

@return The method that should be used to write an indexed
property value.
May return null if the property isn't indexed or is read-only.
"
      end

      operation 6773634 "setIndexedWriteMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writeMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to write an indexed property value.

@param writeMethod The new indexed write method.
@throws IntrospectionException if an exception occurs during
introspection.
"
      end

      operation 6773762 "setIndexedWriteMethod0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "writeMethod" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6773890 "getIndexedPropertyType"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Java type info for the indexed property.
Note that the {@code Class} object may describe
primitive Java types such as {@code int}.
This type is returned by the indexed read method
or is used as the parameter type of the indexed write method.

@return the {@code Class} object that represents the Java type info,
        or {@code null} if the type cannot be determined
"
      end

      operation 6774018 "setIndexedPropertyType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private methods which set get/set the Reference objects"
      end

      operation 6774146 "getIndexedPropertyType0"
	private return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6774274 "findIndexedPropertyType"
	private return_type class_ref 130818 // Class
	nparams 2
	  param inout name "indexedReadMethod" type class_ref 137858 // Method
	  param inout name "indexedWriteMethod" type class_ref 137858 // Method
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6774402 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>PropertyDescriptor</code> against the specified object.
Returns true if the objects are the same. Two <code>PropertyDescriptor</code>s
are the same if the read, write, property types, property editor and
flags  are equivalent.

@since 1.4
"
      end

      operation 6774530 "IndexedPropertyDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 352770 // PropertyDescriptor
	  param inout name "y" type class_ref 352770 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor.
Merge two property descriptors.  Where they conflict, give the
second argument (y) priority over the first argumnnt (x).

@param x  The first (lower priority) PropertyDescriptor
@param y  The second (higher priority) PropertyDescriptor
"
      end

      operation 6774658 "IndexedPropertyDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 905730 // IndexedPropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object.
"
      end

      operation 6774786 "updateGenericsFor"
	package explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6774914 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for the object.
See {@link java.lang.Object#hashCode} for a complete description.

@return a hash code value for this object.
@since 1.5
"
      end

      operation 6775042 "appendTo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sb" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 905858 "MethodRef"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3107970 // signature (<unidirectional association>)
	relation 3107970 --->
	  a role_name "signature" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3107970 // signature (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3108098 // methodRef (<unidirectional association>)
	relation 3108098 --->
	  a role_name "methodRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Method> ${name}${value};
"
	    classrelation_ref 3108098 // methodRef (<unidirectional association>)
	  b parent class_ref 321026 // SoftReference
      end

      classrelation 3108226 // typeRef (<unidirectional association>)
	relation 3108226 --->
	  a role_name "typeRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<?>> ${name}${value};
"
	    classrelation_ref 3108226 // typeRef (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      operation 6797698 "set"
	package explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797826 "isSet"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797954 "get"
	package return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6798082 "find"
	class_operation private return_type class_ref 137858 // Method
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "signature" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 905986 "PropertyEditor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PropertyEditor class provides support for GUIs that want to
allow users to edit a property value of a given type.
<p>
PropertyEditor supports a variety of different kinds of ways of
displaying and updating property values.  Most PropertyEditors will
only need to support a subset of the different options available in
this API.
<P>
Simple PropertyEditors may only support the getAsText and setAsText
methods and need not support (say) paintValue or getCustomEditor.  More
complex types may be unable to support getAsText and setAsText but will
instead support paintValue and getCustomEditor.
<p>
Every propertyEditor must support one or more of the three simple
display styles.  Thus it can either (1) support isPaintable or (2)
both return a non-null String[] from getTags() and return a non-null
value from getAsText or (3) simply return a non-null String from
getAsText().
<p>
Every property editor must support a call on setValue when the argument
object is of the type for which this is the corresponding propertyEditor.
In addition, each property editor must either support a custom editor,
or support setAsText.
<p>
Each PropertyEditor should have a null constructor.
"
      operation 6799490 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set (or change) the object that is to be edited.  Primitive types such
as \"int\" must be wrapped as the corresponding object type such as
\"java.lang.Integer\".

@param value The new target object to be edited.  Note that this
    object should not be modified by the PropertyEditor, rather
    the PropertyEditor should create a new object to hold any
    modified value.
"
      end

      operation 6799618 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the property value.

@return The value of the property.  Primitive types such as \"int\" will
be wrapped as the corresponding object type such as \"java.lang.Integer\".
"
      end

      operation 6799746 "isPaintable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Determines whether this property editor is paintable.

@return  True if the class will honor the paintValue method.
"
      end

      operation 6799874 "paintValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "gfx" type class_ref 343682 // Graphics
	  param inout name "box" type class_ref 314114 // Rectangle
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paint a representation of the value into a given area of screen
real estate.  Note that the propertyEditor is responsible for doing
its own clipping so that it fits into the given rectangle.
<p>
If the PropertyEditor doesn't honor paint requests (see isPaintable)
this method should be a silent noop.
<p>
The given Graphics object will have the default font, color, etc of
the parent container.  The PropertyEditor may change graphics attributes
such as font and color and doesn't need to restore the old values.

@param gfx  Graphics object to paint into.
@param box  Rectangle within graphics object into which we should paint.
"
      end

      operation 6800002 "getJavaInitializationString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Returns a fragment of Java code that can be used to set a property
to match the editors current state. This method is intended
for use when generating Java code to reflect changes made through the
property editor.
<p>
The code fragment should be context free and must be a legal Java
expression as specified by the JLS.
<p>
Specifically, if the expression represents a computation then all
classes and static members should be fully qualified. This rule
applies to constructors, static methods and non primitive arguments.
<p>
Caution should be used when evaluating the expression as it may throw
exceptions. In particular, code generators must ensure that generated
code will compile in the presence of an expression that can throw
checked exceptions.
<p>
Example results are:
<ul>
<li>Primitive expresssion: <code>2</code>
<li>Class constructor: <code>new java.awt.Color(127,127,34)</code>
<li>Static field: <code>java.awt.Color.orange</code>
<li>Static method: <code>javax.swing.Box.createRigidArea(new
                                  java.awt.Dimension(0, 5))</code>
</ul>

@return a fragment of Java code representing an initializer for the
        current value. It should not contain a semi-colon
        ('<code>;</code>') to end the expression.
"
      end

      operation 6800130 "getAsText"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Gets the property value as text.

@return The property value as a human editable string.
<p>   Returns null if the value can't be expressed as an editable string.
<p>   If a non-null value is returned, then the PropertyEditor should
      be prepared to parse that string back in setAsText().
"
      end

      operation 6800258 "setAsText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the property value by parsing a given String.  May raise
java.lang.IllegalArgumentException if either the String is
badly formatted or if this kind of property can't be expressed
as text.
@param text  The string to be parsed.
"
      end

      operation 6800386 "getTags"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

If the property value must be one of a set of known tagged values,
then this method should return an array of the tags.  This can
be used to represent (for example) enum values.  If a PropertyEditor
supports tags, then it should support the use of setAsText with
a tag value as a way of setting the value and the use of getAsText
to identify the current value.

@return The tag values for this property.  May be null if this
  property cannot be represented as a tagged value.

"
      end

      operation 6800514 "getCustomEditor"
	public return_type class_ref 338818 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

A PropertyEditor may choose to make available a full custom Component
that edits its property value.  It is the responsibility of the
PropertyEditor to hook itself up to its editor Component itself and
to report property value changes by firing a PropertyChange event.
<P>
The higher-level code that calls getCustomEditor may either embed
the Component in some larger property sheet, or it may put it in
its own individual dialog, or ...

@return A java.awt.Component that will allow a human to directly
     edit the current property value.  May be null if this is
     not supported.
"
      end

      operation 6800642 "supportsCustomEditor"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this property editor supports a custom editor.

@return  True if the propertyEditor can provide a custom editor.
"
      end

      operation 6800770 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Adds a listener for the value change.
When the property editor changes its value
it should fire a {@link PropertyChangeEvent}
on all registered {@link PropertyChangeListener}s,
specifying the {@code null} value for the property name
and itself as the source.

@param listener  the {@link PropertyChangeListener} to add
"
      end

      operation 6800898 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener for the value change.

@param listener  the {@link PropertyChangeListener} to remove
"
      end
    end

    class 906114 "Introspector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Introspector class provides a standard way for tools to learn about
the properties, events, and methods supported by a target Java Bean.
<p>
For each of those three kinds of information, the Introspector will
separately analyze the bean's class and superclasses looking for
either explicit or implicit information and use that information to
build a BeanInfo object that comprehensively describes the target bean.
<p>
For each class \"Foo\", explicit information may be available if there exists
a corresponding \"FooBeanInfo\" class that provides a non-null value when
queried for the information.   We first look for the BeanInfo class by
taking the full package-qualified name of the target bean class and
appending \"BeanInfo\" to form a new class name.  If this fails, then
we take the final classname component of this name, and look for that
class in each of the packages specified in the BeanInfo package search
path.
<p>
Thus for a class such as \"sun.xyz.OurButton\" we would first look for a
BeanInfo class called \"sun.xyz.OurButtonBeanInfo\" and if that failed we'd
look in each package in the BeanInfo search path for an OurButtonBeanInfo
class.  With the default search path, this would mean looking for
\"sun.beans.infos.OurButtonBeanInfo\".
<p>
If a class provides explicit BeanInfo about itself then we add that to
the BeanInfo information we obtained from analyzing any derived classes,
but we regard the explicit information as being definitive for the current
class and its base classes, and do not proceed any further up the superclass
chain.
<p>
If we don't find explicit BeanInfo on a class, we use low-level
reflection to study the methods of the class and apply standard design
patterns to identify property accessors, event sources, or public
methods.  We then proceed to analyze the class's superclass and add
in the information from it (and possibly on up the superclass chain).
<p>
For more information about introspection and design patterns, please
consult the
 <a href=\"http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html\">JavaBeans&trade; specification</a>.
"
      attribute 1628418 "USE_ALL_BEANINFO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flags that can be used to control getBeanInfo:

Flag to indicate to use of all beaninfo.

"
      end

      attribute 1628546 "IGNORE_IMMEDIATE_BEANINFO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag to indicate to ignore immediate beaninfo.

"
      end

      attribute 1628674 "IGNORE_ALL_BEANINFO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag to indicate to ignore all beaninfo.

"
      end

      classrelation 3093250 // declaredMethodCache (<unidirectional association>)
	relation 3093250 --->
	  stereotype "WeakCache"
	  a role_name "declaredMethodCache" init_value " new WeakCache<>()" class_relation const_relation private
	    comment " Static Caches to speed up introspection.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<?>, Method[]> ${name}${value};
"
	    classrelation_ref 3093250 // declaredMethodCache (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3093378 // beanClass (<unidirectional association>)
	relation 3093378 --->
	  a role_name "beanClass" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3093378 // beanClass (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3093506 // explicitBeanInfo (<unidirectional association>)
	relation 3093506 --->
	  a role_name "explicitBeanInfo" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093506 // explicitBeanInfo (<unidirectional association>)
	  b parent class_ref 903298 // BeanInfo
      end

      classrelation 3093634 // superBeanInfo (<unidirectional association>)
	relation 3093634 --->
	  a role_name "superBeanInfo" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093634 // superBeanInfo (<unidirectional association>)
	  b parent class_ref 903298 // BeanInfo
      end

      classrelation 3093762 // additionalBeanInfo (<unidirectional association>)
	relation 3093762 --->
	  a role_name "additionalBeanInfo" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3093762 // additionalBeanInfo (<unidirectional association>)
	  b parent class_ref 903298 // BeanInfo
      end

      attribute 1628802 "propertyChangeSource"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3093890 // eventListenerType (<unidirectional association>)
	relation 3093890 --->
	  a role_name "eventListenerType" init_value " EventListener.class" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<EventListener> ${name}${value};
"
	    classrelation_ref 3093890 // eventListenerType (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3094018 // defaultEventName (<unidirectional association>)
	relation 3094018 --->
	  a role_name "defaultEventName" private
	    comment " These should be removed.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094018 // defaultEventName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3094146 // defaultPropertyName (<unidirectional association>)
	relation 3094146 --->
	  a role_name "defaultPropertyName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094146 // defaultPropertyName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1628930 "defaultEventIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1629058 "defaultPropertyIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3094274 // methods (<unidirectional association>)
	relation 3094274 --->
	  a role_name "methods" private
	    comment " Methods maps from Method names to MethodDescriptors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, MethodDescriptor> ${name}${value};
"
	    classrelation_ref 3094274 // methods (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3094402 // properties (<unidirectional association>)
	relation 3094402 --->
	  a role_name "properties" private
	    comment " properties maps from String names to PropertyDescriptors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, PropertyDescriptor> ${name}${value};
"
	    classrelation_ref 3094402 // properties (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3094530 // events (<unidirectional association>)
	relation 3094530 --->
	  a role_name "events" private
	    comment " events maps from String names to EventSetDescriptors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, EventSetDescriptor> ${name}${value};
"
	    classrelation_ref 3094530 // events (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3094658 // EMPTY_EVENTSETDESCRIPTORS (<unidirectional association>)
	relation 3094658 --->
	  a role_name "EMPTY_EVENTSETDESCRIPTORS" multiplicity "[]" init_value " new EventSetDescriptor[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3094658 // EMPTY_EVENTSETDESCRIPTORS (<unidirectional association>)
	  b parent class_ref 903426 // EventSetDescriptor
      end

      classrelation 3094786 // ADD_PREFIX (<unidirectional association>)
	relation 3094786 --->
	  a role_name "ADD_PREFIX" init_value " \"add\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094786 // ADD_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3094914 // REMOVE_PREFIX (<unidirectional association>)
	relation 3094914 --->
	  a role_name "REMOVE_PREFIX" init_value " \"remove\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094914 // REMOVE_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3095042 // GET_PREFIX (<unidirectional association>)
	relation 3095042 --->
	  a role_name "GET_PREFIX" init_value " \"get\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095042 // GET_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3095170 // SET_PREFIX (<unidirectional association>)
	relation 3095170 --->
	  a role_name "SET_PREFIX" init_value " \"set\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095170 // SET_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3095298 // IS_PREFIX (<unidirectional association>)
	relation 3095298 --->
	  a role_name "IS_PREFIX" init_value " \"is\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095298 // IS_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6775298 "getBeanInfo"
	class_operation public return_type class_ref 903298 // BeanInfo
	nparams 1
	  param inout name "beanClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "======================================================================
                          Public methods
======================================================================

Introspect on a Java Bean and learn about all its properties, exposed
methods, and events.
<p>
If the BeanInfo class for a Java Bean has been previously Introspected
then the BeanInfo class is retrieved from the BeanInfo cache.

@param beanClass  The bean class to be analyzed.
@return  A BeanInfo object describing the target bean.
@exception IntrospectionException if an exception occurs during
             introspection.
@see #flushCaches
@see #flushFromCaches
"
      end

      operation 6775426 "getBeanInfo"
	class_operation public return_type class_ref 903298 // BeanInfo
	nparams 2
	  param inout name "beanClass" type class_ref 130818 // Class
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introspect on a Java bean and learn about all its properties, exposed
methods, and events, subject to some control flags.
<p>
If the BeanInfo class for a Java Bean has been previously Introspected
based on the same arguments then the BeanInfo class is retrieved
from the BeanInfo cache.

@param beanClass  The bean class to be analyzed.
@param flags  Flags to control the introspection.
    If flags == USE_ALL_BEANINFO then we use all of the BeanInfo
         classes we can discover.
    If flags == IGNORE_IMMEDIATE_BEANINFO then we ignore any
          BeanInfo associated with the specified beanClass.
    If flags == IGNORE_ALL_BEANINFO then we ignore all BeanInfo
          associated with the specified beanClass or any of its
          parent classes.
@return  A BeanInfo object describing the target bean.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6775554 "getBeanInfo"
	class_operation public return_type class_ref 903298 // BeanInfo
	nparams 2
	  param inout name "beanClass" type class_ref 130818 // Class
	  param inout name "stopClass" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introspect on a Java bean and learn all about its properties, exposed
methods, below a given \"stop\" point.
<p>
If the BeanInfo class for a Java Bean has been previously Introspected
based on the same arguments, then the BeanInfo class is retrieved
from the BeanInfo cache.
@return the BeanInfo for the bean
@param beanClass The bean class to be analyzed.
@param stopClass The baseclass at which to stop the analysis.  Any
   methods/properties/events in the stopClass or in its baseclasses
   will be ignored in the analysis.
@exception IntrospectionException if an exception occurs during
             introspection.
"
      end

      operation 6775682 "getBeanInfo"
	class_operation public return_type class_ref 903298 // BeanInfo
	nparams 3
	  param inout name "beanClass" type class_ref 130818 // Class
	  param inout name "stopClass" type class_ref 130818 // Class
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introspect on a Java Bean and learn about all its properties,
exposed methods and events, below a given {@code stopClass} point
subject to some control {@code flags}.
<dl>
 <dt>USE_ALL_BEANINFO</dt>
 <dd>Any BeanInfo that can be discovered will be used.</dd>
 <dt>IGNORE_IMMEDIATE_BEANINFO</dt>
 <dd>Any BeanInfo associated with the specified {@code beanClass} will be ignored.</dd>
 <dt>IGNORE_ALL_BEANINFO</dt>
 <dd>Any BeanInfo associated with the specified {@code beanClass}
     or any of its parent classes will be ignored.</dd>
</dl>
Any methods/properties/events in the {@code stopClass}
or in its parent classes will be ignored in the analysis.
<p>
If the BeanInfo class for a Java Bean has been
previously introspected based on the same arguments then
the BeanInfo class is retrieved from the BeanInfo cache.

@param beanClass  the bean class to be analyzed
@param stopClass  the parent class at which to stop the analysis
@param flags      flags to control the introspection
@return a BeanInfo object describing the target bean
@exception IntrospectionException if an exception occurs during introspection

@since 1.7
"
      end

      operation 6775810 "decapitalize"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method to take a string and convert it to normal Java variable
name capitalization.  This normally means converting the first
character from upper case to lower case, but in the (unusual) special
case when there is more than one character and both the first and
second characters are upper case, we leave it alone.
<p>
Thus \"FooBah\" becomes \"fooBah\" and \"X\" becomes \"x\", but \"URL\" stays
as \"URL\".

@param  name The string to be decapitalized.
@return  The decapitalized version of the string.
"
      end

      operation 6775938 "getBeanInfoSearchPath"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of package names that will be used for
         finding BeanInfo classes.

@return  The array of package names that will be searched in
         order to find BeanInfo classes. The default value
         for this array is implementation-dependent; e.g.
         Sun implementation initially sets to {\"sun.beans.infos\"}.
"
      end

      operation 6776066 "setBeanInfoSearchPath"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the list of package names that will be used for
         finding BeanInfo classes.  The behaviour of
         this method is undefined if parameter path
         is null.

<p>First, if there is a security manager, its <code>checkPropertiesAccess</code>
method is called. This could result in a SecurityException.

@param path  Array of package names.
@exception  SecurityException  if a security manager exists and its
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess
"
      end

      operation 6776194 "flushCaches"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush all of the Introspector's internal caches.  This method is
not normally required.  It is normally only needed by advanced
tools that update existing \"Class\" objects in-place and need
to make the Introspector re-analyze existing Class objects.
"
      end

      operation 6776322 "flushFromCaches"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "clz" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the Introspector's internal cached information for a given class.
This method is not normally required.  It is normally only needed
by advanced tools that update existing \"Class\" objects in-place
and need to make the Introspector re-analyze an existing Class object.

Note that only the direct state associated with the target Class
object is flushed.  We do not flush state for other Class objects
with the same name, nor do we flush state for any related Class
objects (such as subclasses), even though their state may include
information indirectly obtained from the target Class object.

@param clz  Class object to be flushed.
@throws NullPointerException If the Class object is null.
"
      end

      operation 6776450 "Introspector"
	private explicit_return_type ""
	nparams 3
	  param inout name "beanClass" type class_ref 130818 // Class
	  param inout name "stopClass" type class_ref 130818 // Class
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "======================================================================
                  Private implementation methods
======================================================================"
      end

      operation 6776578 "getBeanInfo"
	private return_type class_ref 903298 // BeanInfo
	nparams 0
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a GenericBeanInfo class from the state of the Introspector
"
      end

      operation 6776706 "findExplicitBeanInfo"
	class_operation private return_type class_ref 903298 // BeanInfo
	nparams 1
	  param inout name "beanClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks for an explicit BeanInfo class that corresponds to the Class.
First it looks in the existing package that the Class is defined in,
then it checks to see if the class is its own BeanInfo. Finally,
the BeanInfo search path is prepended to the class and searched.

@param beanClass  the class type of the bean
@return Instance of an explicit BeanInfo class or null if one isn't found.
"
      end

      operation 6776834 "getTargetPropertyInfo"
	private return_type class_ref 352770 // PropertyDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return An array of PropertyDescriptors describing the editable
properties supported by the target bean.
"
      end

      classrelation 3095426 // pdStore (<unidirectional association>)
	relation 3095426 --->
	  a role_name "pdStore" init_value " new HashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, List<PropertyDescriptor>> ${name}${value};
"
	    classrelation_ref 3095426 // pdStore (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      operation 6776962 "addPropertyDescriptor"
	private explicit_return_type "void"
	nparams 1
	  param inout name "pd" type class_ref 352770 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the property descriptor to the list store.
"
      end

      operation 6777090 "addPropertyDescriptors"
	private explicit_return_type "void"
	nparams 1
	  param inout name "descriptors" type class_ref 352770 // PropertyDescriptor
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6777218 "getPropertyDescriptors"
	private return_type class_ref 352770 // PropertyDescriptor
	nparams 1
	  param inout name "info" type class_ref 903298 // BeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6777346 "processPropertyDescriptors"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Populates the property descriptor table by merging the
lists of Property descriptors.
"
      end

      operation 6777474 "isAssignable"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "current" type class_ref 130818 // Class
	  param inout name "candidate" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6777602 "mergePropertyWithIndexedProperty"
	private return_type class_ref 352770 // PropertyDescriptor
	nparams 2
	  param inout name "pd" type class_ref 352770 // PropertyDescriptor
	  param inout name "ipd" type class_ref 905730 // IndexedPropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6777730 "mergePropertyDescriptor"
	private return_type class_ref 352770 // PropertyDescriptor
	nparams 2
	  param inout name "ipd" type class_ref 905730 // IndexedPropertyDescriptor
	  param inout name "pd" type class_ref 352770 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the property descriptor to the indexedproperty descriptor only if the
types are the same.

The most specific property descriptor will take precedence.
"
      end

      operation 6777858 "mergePropertyDescriptor"
	private return_type class_ref 352770 // PropertyDescriptor
	nparams 2
	  param inout name "pd1" type class_ref 352770 // PropertyDescriptor
	  param inout name "pd2" type class_ref 352770 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle regular pd merge"
      end

      operation 6777986 "mergePropertyDescriptor"
	private return_type class_ref 905730 // IndexedPropertyDescriptor
	nparams 2
	  param inout name "ipd1" type class_ref 905730 // IndexedPropertyDescriptor
	  param inout name "ipd2" type class_ref 905730 // IndexedPropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle regular ipd merge"
      end

      operation 6778114 "getTargetEventInfo"
	private return_type class_ref 903426 // EventSetDescriptor
	nparams 0
	nexceptions 1
	  exception class_ref 905474 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return An array of EventSetDescriptors describing the kinds of
events fired by the target bean.
"
      end

      operation 6778242 "addEvent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "esd" type class_ref 903426 // EventSetDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6778370 "getTargetMethodInfo"
	private return_type class_ref 903554 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return An array of MethodDescriptors describing the private
methods supported by the target bean.
"
      end

      operation 6778498 "addMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "md" type class_ref 903554 // MethodDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6778626 "makeQualifiedMethodName"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "params" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a key for a method in a method cache.
"
      end

      operation 6778754 "getTargetDefaultEventIndex"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6778882 "getTargetDefaultPropertyIndex"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779010 "getTargetBeanDescriptor"
	private return_type class_ref 902914 // BeanDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779138 "findCustomizerClass"
	class_operation private return_type class_ref 130818 // Class
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779266 "isEventHandler"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "m" type class_ref 137858 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779394 "getPublicDeclaredMethods"
	class_operation private return_type class_ref 137858 // Method
	nparams 1
	  param inout name "clz" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal method to return *public* methods within a class.
"
      end

      operation 6779522 "internalFindMethod"
	class_operation private return_type class_ref 137858 // Method
	nparams 4
	  param inout name "start" type class_ref 130818 // Class
	  param inout name "methodName" type class_ref 128130 // String
	  param in name "argCount" explicit_type "int"
	  param inout name "args" type class_ref 130818 // Class
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "======================================================================
 Package private support methods.
======================================================================

Internal support for finding a target methodName with a given
parameter list on a given class.
"
      end

      operation 6779650 "findMethod"
	class_operation package return_type class_ref 137858 // Method
	nparams 3
	  param inout name "cls" type class_ref 130818 // Class
	  param inout name "methodName" type class_ref 128130 // String
	  param in name "argCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find a target methodName on a given class.
"
      end

      operation 6779778 "findMethod"
	class_operation package return_type class_ref 137858 // Method
	nparams 4
	  param inout name "cls" type class_ref 130818 // Class
	  param inout name "methodName" type class_ref 128130 // String
	  param in name "argCount" explicit_type "int"
	  param inout name "args" type class_ref 130818 // Class
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find a target methodName with specific parameter list on a given class.
<p>
Used in the contructors of the EventSetDescriptor,
PropertyDescriptor and the IndexedPropertyDescriptor.
<p>
@param cls The Class object on which to retrieve the method.
@param methodName Name of the method.
@param argCount Number of arguments for the desired method.
@param args Array of argument types for the method.
@return the method or null if not found
"
      end

      operation 6779906 "isSubclass"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 130818 // Class
	  param inout name "b" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if class a is either equivalent to class b, or
if class a is a subclass of class b, i.e. if a either \"extends\"
or \"implements\" b.
Note tht either or both \"Class\" objects may represent interfaces.
"
      end

      operation 6780034 "throwsException"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "method" type class_ref 137858 // Method
	  param inout name "exception" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true iff the given method throws the given exception.
"
      end

      operation 6780162 "instantiate"
	class_operation package return_type class_ref 129538 // Object
	nparams 2
	  param inout name "sibling" type class_ref 130818 // Class
	  param inout name "className" type class_ref 128130 // String
	nexceptions 3
	  exception class_ref 193282 // InstantiationException
	  exception class_ref 321538 // IllegalAccessException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to create an instance of a named class.
First try the classloader of \"sibling\", then try the system
classloader then the class loader of the current Thread.
"
      end
    end

    class 906242 "GenericBeanInfo"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " end class Introspector
===========================================================================

Package private implementation support class for Introspector's
internal use.
<p>
Mostly this is used as a placeholder for the descriptors.
"
      classrelation 3095682 // <generalisation>
	relation 3095682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3095682 // <generalisation>
	  b parent class_ref 906370 // SimpleBeanInfo
      end

      classrelation 3095810 // beanDescriptor (<unidirectional association>)
	relation 3095810 --->
	  a role_name "beanDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095810 // beanDescriptor (<unidirectional association>)
	  b parent class_ref 902914 // BeanDescriptor
      end

      classrelation 3095938 // events (<unidirectional association>)
	relation 3095938 --->
	  a role_name "events" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3095938 // events (<unidirectional association>)
	  b parent class_ref 903426 // EventSetDescriptor
      end

      attribute 1629186 "defaultEvent"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3096066 // properties (<unidirectional association>)
	relation 3096066 --->
	  a role_name "properties" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3096066 // properties (<unidirectional association>)
	  b parent class_ref 352770 // PropertyDescriptor
      end

      attribute 1629314 "defaultProperty"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3096194 // methods (<unidirectional association>)
	relation 3096194 --->
	  a role_name "methods" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3096194 // methods (<unidirectional association>)
	  b parent class_ref 903554 // MethodDescriptor
      end

      classrelation 3096322 // targetBeanInfoRef (<unidirectional association>)
	relation 3096322 --->
	  a role_name "targetBeanInfoRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<BeanInfo> ${name}${value};
"
	    classrelation_ref 3096322 // targetBeanInfoRef (<unidirectional association>)
	  b parent class_ref 131458 // Reference
      end

      operation 6781442 "GenericBeanInfo"
	public explicit_return_type ""
	nparams 7
	  param inout name "beanDescriptor" type class_ref 902914 // BeanDescriptor
	  param inout name "events" type class_ref 903426 // EventSetDescriptor
	multiplicity "[]"
	  param in name "defaultEvent" explicit_type "int"
	  param inout name "properties" type class_ref 352770 // PropertyDescriptor
	multiplicity "[]"
	  param in name "defaultProperty" explicit_type "int"
	  param inout name "methods" type class_ref 903554 // MethodDescriptor
	multiplicity "[]"
	  param inout name "targetBeanInfo" type class_ref 903298 // BeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6781570 "GenericBeanInfo"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 906242 // GenericBeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object.
"
      end

      operation 6781698 "getPropertyDescriptors"
	public return_type class_ref 352770 // PropertyDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6781826 "getDefaultPropertyIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6781954 "getEventSetDescriptors"
	public return_type class_ref 903426 // EventSetDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6782082 "getDefaultEventIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6782210 "getMethodDescriptors"
	public return_type class_ref 903554 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6782338 "getBeanDescriptor"
	public return_type class_ref 902914 // BeanDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6782466 "getIcon"
	public return_type class_ref 340098 // Image
	nparams 1
	  param in name "iconKind" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6782594 "getTargetBeanInfo"
	private return_type class_ref 903298 // BeanInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 906370 "SimpleBeanInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a support class to make it easier for people to provide
BeanInfo classes.
<p>
It defaults to providing \"noop\" information, and can be selectively
overriden to provide more explicit information on chosen topics.
When the introspector sees the \"noop\" values, it will apply low
level introspection and design patterns to automatically analyze
the target bean.
"
      classrelation 3095554 // <realization>
	relation 3095554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3095554 // <realization>
	  b parent class_ref 903298 // BeanInfo
      end

      operation 6780290 "getBeanDescriptor"
	public return_type class_ref 902914 // BeanDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge about the class and customizer of the bean.
You can override this if you wish to provide explicit info.
"
      end

      operation 6780418 "getPropertyDescriptors"
	public return_type class_ref 352770 // PropertyDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of properties. You can override this
if you wish to provide explicit property info.
"
      end

      operation 6780546 "getDefaultPropertyIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of a default property. You can override this
if you wish to define a default property for the bean.
"
      end

      operation 6780674 "getEventSetDescriptors"
	public return_type class_ref 903426 // EventSetDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of event sets. You can override this
if you wish to provide explicit event set info.
"
      end

      operation 6780802 "getDefaultEventIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of a default event. You can override this
if you wish to define a default event for the bean.
"
      end

      operation 6780930 "getMethodDescriptors"
	public return_type class_ref 903554 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of methods. You can override this
if you wish to provide explicit method info.
"
      end

      operation 6781058 "getAdditionalBeanInfo"
	public return_type class_ref 903298 // BeanInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Claim there are no other relevant BeanInfo objects.  You
may override this if you want to (for example) return a
BeanInfo for a base class.
"
      end

      operation 6781186 "getIcon"
	public return_type class_ref 340098 // Image
	nparams 1
	  param in name "iconKind" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Claim there are no icons available.  You can override
this if you want to provide icons for your bean.
"
      end

      operation 6781314 "loadImage"
	public return_type class_ref 340098 // Image
	nparams 1
	  param in name "resourceName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is a utility method to help in loading icon images.
It takes the name of a resource file associated with the
current object's class file and loads an image object
from that file.  Typically images will be GIFs.
<p>
@param resourceName  A pathname relative to the directory
         holding the class file of the current class.  For example,
         \"wombat.gif\".
@return  an image object.  May be null if the load failed.
"
      end
    end

    class 906498 "MetaData"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Like the <code>Intropector</code>, the <code>MetaData</code> class
contains <em>meta</em> objects that describe the way
classes should express their state in terms of their
own public APIs.

@see java.beans.Intropector

@author Philip Milne
@author Steve Langley
"
      class 906626 "NullPersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3096450 // <generalisation>
	  relation 3096450 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3096450 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6782722 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Note this will be called by all classes when they reach the
 top of their superclass chain."
	end

	operation 6782850 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6782978 "writeObject"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 906754 "EnumPersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3096578 // <generalisation>
	  relation 3096578 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3096578 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6783106 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6783234 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 906882 "PrimitivePersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3096706 // <generalisation>
	  relation 3096706 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3096706 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6783362 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6783490 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907010 "ArrayPersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3096834 // <generalisation>
	  relation 3096834 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3096834 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6783618 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6783746 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6783874 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907138 "ProxyPersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3096962 // <generalisation>
	  relation 3096962 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3096962 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6784002 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907266 "java_lang_String_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3097090 // <generalisation>
	  relation 3097090 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3097090 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6784130 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6784258 "writeObject"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907394 "java_lang_Class_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3097218 // <generalisation>
	  relation 3097218 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3097218 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6784386 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6784514 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907522 "java_lang_reflect_Field_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3097346 // <generalisation>
	  relation 3097346 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3097346 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6784642 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6784770 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907650 "java_lang_reflect_Method_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3097474 // <generalisation>
	  relation 3097474 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3097474 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6784898 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6785026 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907778 "java_util_Date_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3097602 // <generalisation>
	  relation 3097602 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3097602 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6785154 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6785282 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 907906 "java_sql_Timestamp_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3097730 // <generalisation>
	  relation 3097730 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3097730 // <generalisation>
	    b parent class_ref 907778 // java_util_Date_PersistenceDelegate
	end

	classrelation 3097858 // getNanosMethod (<unidirectional association>)
	  relation 3097858 --->
	    a role_name "getNanosMethod" init_value " getNanosMethod()" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3097858 // getNanosMethod (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	operation 6785410 "getNanosMethod"
	  class_operation private return_type class_ref 137858 // Method
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6785538 "getNanos"
	  class_operation private explicit_return_type "int"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoke Timstamp getNanos.
"
	end

	operation 6785666 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 908034 "java_util_Collections"
	abstract visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3097986 // <generalisation>
	  relation 3097986 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3097986 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6785794 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6785922 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 908162 "EmptyList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3098114 // <generalisation>
	    relation 3098114 ---|>
	      a public
		java "${type}"
		classrelation_ref 3098114 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786050 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 908290 "EmptySet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3098242 // <generalisation>
	    relation 3098242 ---|>
	      a public
		java "${type}"
		classrelation_ref 3098242 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786178 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 908418 "EmptyMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3098370 // <generalisation>
	    relation 3098370 ---|>
	      a public
		java "${type}"
		classrelation_ref 3098370 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786306 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 908546 "SingletonList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3098498 // <generalisation>
	    relation 3098498 ---|>
	      a public
		java "${type}"
		classrelation_ref 3098498 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786434 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 908674 "SingletonSet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3098626 // <generalisation>
	    relation 3098626 ---|>
	      a public
		java "${type}"
		classrelation_ref 3098626 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786562 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 908802 "SingletonMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3098754 // <generalisation>
	    relation 3098754 ---|>
	      a public
		java "${type}"
		classrelation_ref 3098754 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786690 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 908930 "UnmodifiableCollection_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3098882 // <generalisation>
	    relation 3098882 ---|>
	      a public
		java "${type}"
		classrelation_ref 3098882 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786818 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909058 "UnmodifiableList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099010 // <generalisation>
	    relation 3099010 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099010 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6786946 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909186 "UnmodifiableRandomAccessList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099138 // <generalisation>
	    relation 3099138 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099138 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787074 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909314 "UnmodifiableSet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099266 // <generalisation>
	    relation 3099266 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099266 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787202 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909442 "UnmodifiableSortedSet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099394 // <generalisation>
	    relation 3099394 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099394 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787330 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909570 "UnmodifiableMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099522 // <generalisation>
	    relation 3099522 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099522 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787458 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909698 "UnmodifiableSortedMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099650 // <generalisation>
	    relation 3099650 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099650 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787586 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909826 "SynchronizedCollection_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099778 // <generalisation>
	    relation 3099778 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099778 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787714 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 909954 "SynchronizedList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3099906 // <generalisation>
	    relation 3099906 ---|>
	      a public
		java "${type}"
		classrelation_ref 3099906 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787842 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910082 "SynchronizedRandomAccessList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100034 // <generalisation>
	    relation 3100034 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100034 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6787970 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910210 "SynchronizedSet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100162 // <generalisation>
	    relation 3100162 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100162 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788098 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910338 "SynchronizedSortedSet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100290 // <generalisation>
	    relation 3100290 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100290 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788226 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910466 "SynchronizedMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100418 // <generalisation>
	    relation 3100418 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100418 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788354 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910594 "SynchronizedSortedMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100546 // <generalisation>
	    relation 3100546 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100546 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788482 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910722 "CheckedCollection_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100674 // <generalisation>
	    relation 3100674 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100674 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788610 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910850 "CheckedList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100802 // <generalisation>
	    relation 3100802 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100802 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788738 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 910978 "CheckedRandomAccessList_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3100930 // <generalisation>
	    relation 3100930 ---|>
	      a public
		java "${type}"
		classrelation_ref 3100930 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788866 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 911106 "CheckedSet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3101058 // <generalisation>
	    relation 3101058 ---|>
	      a public
		java "${type}"
		classrelation_ref 3101058 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6788994 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 911234 "CheckedSortedSet_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3101186 // <generalisation>
	    relation 3101186 ---|>
	      a public
		java "${type}"
		classrelation_ref 3101186 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6789122 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 911362 "CheckedMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3101314 // <generalisation>
	    relation 3101314 ---|>
	      a public
		java "${type}"
		classrelation_ref 3101314 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6789250 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 911490 "CheckedSortedMap_PersistenceDelegate"
	  visibility package 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3101442 // <generalisation>
	    relation 3101442 ---|>
	      a public
		java "${type}"
		classrelation_ref 3101442 // <generalisation>
	      b parent class_ref 908034 // java_util_Collections
	  end

	  operation 6789378 "instantiate"
	    protected return_type class_ref 904834 // Expression
	    nparams 2
	      param inout name "oldInstance" type class_ref 129538 // Object
	      param inout name "out" type class_ref 904706 // Encoder
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      class 911618 "java_util_EnumMap_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3101570 // <generalisation>
	  relation 3101570 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3101570 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6789506 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6789634 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6789762 "getType"
	  class_operation private return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "instance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 911746 "java_util_EnumSet_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3101698 // <generalisation>
	  relation 3101698 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3101698 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6789890 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6790018 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6790146 "getType"
	  class_operation private return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "instance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 911874 "java_util_Collection_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3101826 // <generalisation>
	  relation 3101826 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3101826 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6790274 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 912002 "java_util_List_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3101954 // <generalisation>
	  relation 3101954 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3101954 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6790402 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 912130 "java_util_Map_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102082 // <generalisation>
	  relation 3102082 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102082 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6790530 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 912258 "java_util_AbstractCollection_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102210 // <generalisation>
	  relation 3102210 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102210 // <generalisation>
	    b parent class_ref 911874 // java_util_Collection_PersistenceDelegate
	end
      end

      class 912386 "java_util_AbstractList_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102338 // <generalisation>
	  relation 3102338 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102338 // <generalisation>
	    b parent class_ref 912002 // java_util_List_PersistenceDelegate
	end
      end

      class 912514 "java_util_AbstractMap_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102466 // <generalisation>
	  relation 3102466 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102466 // <generalisation>
	    b parent class_ref 912130 // java_util_Map_PersistenceDelegate
	end
      end

      class 912642 "java_util_Hashtable_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102594 // <generalisation>
	  relation 3102594 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102594 // <generalisation>
	    b parent class_ref 912130 // java_util_Map_PersistenceDelegate
	end
      end

      class 912770 "java_beans_beancontext_BeanContextSupport_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102722 // <generalisation>
	  relation 3102722 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102722 // <generalisation>
	    b parent class_ref 911874 // java_util_Collection_PersistenceDelegate
	end
      end

      class 912898 "java_awt_Insets_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102850 // <generalisation>
	  relation 3102850 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102850 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6790658 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6790786 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 913026 "java_awt_Font_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3102978 // <generalisation>
	  relation 3102978 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3102978 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6790914 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6791042 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 913154 "java_awt_AWTKeyStroke_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3103106 // <generalisation>
	  relation 3103106 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3103106 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6791170 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6791298 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 913282 "StaticFieldsPersistenceDelegate"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3103234 // <generalisation>
	  relation 3103234 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3103234 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6791426 "installFields"
	  protected explicit_return_type "void"
	  nparams 2
	    param inout name "out" type class_ref 904706 // Encoder
	    param inout name "cls" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6791554 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6791682 "writeObject"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 913410 "java_awt_SystemColor_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3103362 // <generalisation>
	  relation 3103362 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3103362 // <generalisation>
	    b parent class_ref 913282 // StaticFieldsPersistenceDelegate
	end
      end

      class 913538 "java_awt_font_TextAttribute_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3103490 // <generalisation>
	  relation 3103490 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3103490 // <generalisation>
	    b parent class_ref 913282 // StaticFieldsPersistenceDelegate
	end
      end

      class 913666 "java_awt_MenuShortcut_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3103618 // <generalisation>
	  relation 3103618 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3103618 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6791810 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6791938 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 913794 "java_awt_Component_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3103746 // <generalisation>
	  relation 3103746 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3103746 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6792066 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 913922 "java_awt_Container_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3103874 // <generalisation>
	  relation 3103874 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3103874 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6792194 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 914050 "java_awt_Choice_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3104002 // <generalisation>
	  relation 3104002 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3104002 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6792322 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 914178 "java_awt_Menu_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3104130 // <generalisation>
	  relation 3104130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3104130 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6792450 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 914306 "java_awt_MenuBar_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3104258 // <generalisation>
	  relation 3104258 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3104258 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6792578 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 914434 "java_awt_List_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3104386 // <generalisation>
	  relation 3104386 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3104386 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6792706 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 914562 "java_awt_BorderLayout_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3104514 // <generalisation>
	  relation 3104514 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3104514 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	classrelation 3104642 // CONSTRAINTS (<unidirectional association>)
	  relation 3104642 --->
	    a role_name "CONSTRAINTS" multiplicity "[]" init_value " {
            BorderLayout.NORTH,
            BorderLayout.SOUTH,
            BorderLayout.EAST,
            BorderLayout.WEST,
            BorderLayout.CENTER,
            BorderLayout.PAGE_START,
            BorderLayout.PAGE_END,
            BorderLayout.LINE_START,
            BorderLayout.LINE_END,
    }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3104642 // CONSTRAINTS (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 6792834 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 914690 "java_awt_CardLayout_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3104770 // <generalisation>
	  relation 3104770 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3104770 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6792962 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6793090 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6793218 "getVector"
	  class_operation private return_type class_ref 141442 // Vector
	  nparams 1
	    param inout name "instance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 914818 "java_awt_GridBagLayout_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3104898 // <generalisation>
	  relation 3104898 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3104898 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6793346 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6793474 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6793602 "getHashtable"
	  class_operation private return_type class_ref 137090 // Hashtable
	  nparams 1
	    param inout name "instance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?,?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 914946 "javax_swing_JFrame_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105026 // <generalisation>
	  relation 3105026 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105026 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6793730 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915074 "javax_swing_DefaultListModel_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105154 // <generalisation>
	  relation 3105154 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105154 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6793858 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915202 "javax_swing_DefaultComboBoxModel_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105282 // <generalisation>
	  relation 3105282 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105282 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6793986 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915330 "javax_swing_tree_DefaultMutableTreeNode_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105410 // <generalisation>
	  relation 3105410 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105410 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6794114 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915458 "javax_swing_ToolTipManager_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105538 // <generalisation>
	  relation 3105538 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105538 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6794242 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915586 "javax_swing_JTabbedPane_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105666 // <generalisation>
	  relation 3105666 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105666 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6794370 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915714 "javax_swing_Box_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105794 // <generalisation>
	  relation 3105794 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105794 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6794498 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6794626 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6794754 "getAxis"
	  private return_type class_ref 137602 // Integer
	  nparams 1
	    param inout name "object" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915842 "javax_swing_JMenu_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3105922 // <generalisation>
	  relation 3105922 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3105922 // <generalisation>
	    b parent class_ref 904450 // DefaultPersistenceDelegate
	end

	operation 6794882 "initialize"
	  protected explicit_return_type "void"
	  nparams 4
	    param inout name "type" type class_ref 130818 // Class
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 915970 "javax_swing_border_MatteBorder_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3106050 // <generalisation>
	  relation 3106050 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3106050 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6795010 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 916098 "sun_swing_PrintColorUIResource_PersistenceDelegate"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3106178 // <generalisation>
	  relation 3106178 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3106178 // <generalisation>
	    b parent class_ref 904578 // PersistenceDelegate
	end

	operation 6795138 "mutatesTo"
	  protected explicit_return_type "boolean"
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "newInstance" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6795266 "instantiate"
	  protected return_type class_ref 904834 // Expression
	  nparams 2
	    param inout name "oldInstance" type class_ref 129538 // Object
	    param inout name "out" type class_ref 904706 // Encoder
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3106306 // fields (<unidirectional association>)
	relation 3106306 --->
	  a role_name "fields" init_value " Collections.synchronizedMap(new WeakHashMap<String, Field>())" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Field> ${name}${value};
"
	    classrelation_ref 3106306 // fields (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3106434 // internalPersistenceDelegates (<unidirectional association>)
	relation 3106434 --->
	  a role_name "internalPersistenceDelegates" init_value " new Hashtable<>()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, PersistenceDelegate> ${name}${value};
"
	    classrelation_ref 3106434 // internalPersistenceDelegates (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 3106562 // nullPersistenceDelegate (<unidirectional association>)
	relation 3106562 --->
	  a role_name "nullPersistenceDelegate" init_value " new NullPersistenceDelegate()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3106562 // nullPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 904578 // PersistenceDelegate
      end

      classrelation 3106690 // enumPersistenceDelegate (<unidirectional association>)
	relation 3106690 --->
	  a role_name "enumPersistenceDelegate" init_value " new EnumPersistenceDelegate()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3106690 // enumPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 904578 // PersistenceDelegate
      end

      classrelation 3106818 // primitivePersistenceDelegate (<unidirectional association>)
	relation 3106818 --->
	  a role_name "primitivePersistenceDelegate" init_value " new PrimitivePersistenceDelegate()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3106818 // primitivePersistenceDelegate (<unidirectional association>)
	  b parent class_ref 904578 // PersistenceDelegate
      end

      classrelation 3106946 // defaultPersistenceDelegate (<unidirectional association>)
	relation 3106946 --->
	  a role_name "defaultPersistenceDelegate" init_value " new DefaultPersistenceDelegate()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3106946 // defaultPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 904578 // PersistenceDelegate
      end

      classrelation 3107074 // arrayPersistenceDelegate (<unidirectional association>)
	relation 3107074 --->
	  a role_name "arrayPersistenceDelegate" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3107074 // arrayPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 904578 // PersistenceDelegate
      end

      classrelation 3107202 // proxyPersistenceDelegate (<unidirectional association>)
	relation 3107202 --->
	  a role_name "proxyPersistenceDelegate" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3107202 // proxyPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 904578 // PersistenceDelegate
      end

      extra_member 154754 "initialization"
	
	cpp "" ""
	java "  static {

        internalPersistenceDelegates.put(\"java.net.URI\",
                                         new PrimitivePersistenceDelegate());

        // it is possible because MatteBorder is assignable from MatteBorderUIResource
        internalPersistenceDelegates.put(\"javax.swing.plaf.BorderUIResource$MatteBorderUIResource\",
                                         new javax_swing_border_MatteBorder_PersistenceDelegate());

        // it is possible because FontUIResource is supported by java_awt_Font_PersistenceDelegate
        internalPersistenceDelegates.put(\"javax.swing.plaf.FontUIResource\",
                                         new java_awt_Font_PersistenceDelegate());

        // it is possible because KeyStroke is supported by java_awt_AWTKeyStroke_PersistenceDelegate
        internalPersistenceDelegates.put(\"javax.swing.KeyStroke\",
                                         new java_awt_AWTKeyStroke_PersistenceDelegate());

        internalPersistenceDelegates.put(\"java.sql.Date\", new java_util_Date_PersistenceDelegate());
        internalPersistenceDelegates.put(\"java.sql.Time\", new java_util_Date_PersistenceDelegate());

        internalPersistenceDelegates.put(\"java.util.JumboEnumSet\", new java_util_EnumSet_PersistenceDelegate());
        internalPersistenceDelegates.put(\"java.util.RegularEnumSet\", new java_util_EnumSet_PersistenceDelegate());
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6795394 "getPersistenceDelegate"
	class_operation public return_type class_ref 904578 // PersistenceDelegate
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 6795522 "getConstructorProperties"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6795650 "getAnnotationValue"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "constructor" type class_ref 189186 // Constructor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6795778 "isValid"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "constructor" type class_ref 189186 // Constructor
	  param inout name "names" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6795906 "getBeanAttribute"
	class_operation private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "attribute" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6796034 "getPrivateFieldValue"
	class_operation package return_type class_ref 129538 // Object
	nparams 2
	  param inout name "instance" type class_ref 129538 // Object
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 916226 "ParameterDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The ParameterDescriptor class allows bean implementors to provide
additional information on each of their parameters, beyond the
low level type information provided by the java.lang.reflect.Method
class.
<p>
Currently all our state comes from the FeatureDescriptor base class.
"
      classrelation 3108610 // <generalisation>
	relation 3108610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3108610 // <generalisation>
	  b parent class_ref 903042 // FeatureDescriptor
      end

      operation 6798850 "ParameterDescriptor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public default constructor.
"
      end

      operation 6798978 "ParameterDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 916226 // ParameterDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private dup constructor.
This must isolate the new object from any changes to the old object.
"
      end
    end

    class 916354 "NameGenerator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A utility class which generates unique names for object instances.
The name will be a concatenation of the unqualified class name
and an instance number.
<p>
For example, if the first object instance javax.swing.JButton
is passed into <code>instanceName</code> then the returned
string identifier will be &quot;JButton0&quot;.

@author Philip Milne
"
      classrelation 3108354 // valueToName (<unidirectional association>)
	relation 3108354 --->
	  a role_name "valueToName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, String> ${name}${value};
"
	    classrelation_ref 3108354 // valueToName (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3108482 // nameToCount (<unidirectional association>)
	relation 3108482 --->
	  a role_name "nameToCount" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 3108482 // nameToCount (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 6798210 "NameGenerator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6798338 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the name cache. Should be called to near the end of
the encoding cycle.
"
      end

      operation 6798466 "unqualifiedClassName"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns the root name of the class.
"
      end

      operation 6798594 "capitalize"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String which capitalizes the first letter of the string.
"
      end

      operation 6798722 "instanceName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "instance" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a unique string which identifies the object instance.
Invocations are cached so that if an object has been previously
passed into this method then the same identifier is returned.

@param instance object used to generate string
@return a unique string representing the object
"
      end
    end

    class 916482 "PropertyChangeListenerProxy"
      visibility public 
      nactuals 1
      actual class class_ref 886530 // EventListenerProxy
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class which extends the {@code EventListenerProxy}
specifically for adding a {@code PropertyChangeListener}
with a \"bound\" property.
Instances of this class can be added
as {@code PropertyChangeListener}s to a bean
which supports firing property change events.
<p>
If the object has a {@code getPropertyChangeListeners} method
then the array returned could be a mixture of {@code PropertyChangeListener}
and {@code PropertyChangeListenerProxy} objects.

@see java.util.EventListenerProxy
@see PropertyChangeSupport#getPropertyChangeListeners
@since 1.4
"
      classrelation 3108738 // <realization>
	relation 3108738 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3108738 // <realization>
	  b parent class_ref 886530 // EventListenerProxy
      end

      classrelation 3108866 // <realization>
	relation 3108866 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3108866 // <realization>
	  b parent class_ref 347266 // PropertyChangeListener
      end

      classrelation 3108994 // propertyName (<unidirectional association>)
	relation 3108994 --->
	  a role_name "propertyName" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3108994 // propertyName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6799106 "PropertyChangeListenerProxy"
	public explicit_return_type ""
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor which binds the {@code PropertyChangeListener}
to a specific property.

@param propertyName  the name of the property to listen on
@param listener      the listener object
"
      end

      operation 6799234 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the property change event to the listener delegate.

@param event  the property change event
"
      end

      operation 6799362 "getPropertyName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the named property associated with the listener.

@return the name of the named property associated with the listener
"
      end
    end

    class 916610 "PropertyEditorManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The PropertyEditorManager can be used to locate a property editor for
any given type name.  This property editor must support the
java.beans.PropertyEditor interface for editing a given object.
<P>
The PropertyEditorManager uses three techniques for locating an editor
for a given type.  First, it provides a registerEditor method to allow
an editor to be specifically registered for a given type.  Second it
tries to locate a suitable class by adding \"Editor\" to the full
qualified classname of the given type (e.g. \"foo.bah.FozEditor\").
Finally it takes the simple classname (without the package name) adds
\"Editor\" to it and looks in a search-path of packages for a matching
class.
<P>
So for an input class foo.bah.Fred, the PropertyEditorManager would
first look in its tables to see if an editor had been registered for
foo.bah.Fred and if so use that.  Then it will look for a
foo.bah.FredEditor class.  Then it will look for (say)
standardEditorsPackage.FredEditor class.
<p>
Default PropertyEditors will be provided for the Java primitive types
\"boolean\", \"byte\", \"short\", \"int\", \"long\", \"float\", and \"double\"; and
for the classes java.lang.String. java.awt.Color, and java.awt.Font.
"
      operation 6801026 "registerEditor"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "targetType" type class_ref 130818 // Class
	  param inout name "editorClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an editor class to edit values of the given target class.
If the editor class is {@code null},
then any existing definition will be removed.
Thus this method can be used to cancel the registration.
The registration is canceled automatically
if either the target or editor class is unloaded.
<p>
If there is a security manager, its {@code checkPropertiesAccess}
method is called. This could result in a {@linkplain SecurityException}.

@param targetType   the class object of the type to be edited
@param editorClass  the class object of the editor class
@throws SecurityException  if a security manager exists and
                           its {@code checkPropertiesAccess} method
                           doesn't allow setting of system properties

@see SecurityManager#checkPropertiesAccess
"
      end

      operation 6801154 "findEditor"
	class_operation public return_type class_ref 905986 // PropertyEditor
	nparams 1
	  param inout name "targetType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locate a value editor for a given target type.

@param targetType  The Class object for the type to be edited
@return An editor object for the given target class.
The result is null if no suitable editor can be found.
"
      end

      operation 6801282 "getEditorSearchPath"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the package names that will be searched for property editors.

@return  The array of package names that will be searched in
         order to find property editors.
<p>     The default value for this array is implementation-dependent,
        e.g. Sun implementation initially sets to  {\"sun.beans.editors\"}.
"
      end

      operation 6801410 "setEditorSearchPath"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the list of package names that will be used for
         finding property editors.

<p>First, if there is a security manager, its <code>checkPropertiesAccess</code>
method is called. This could result in a SecurityException.

@param path  Array of package names.
@exception  SecurityException  if a security manager exists and its
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess
"
      end
    end

    class 916738 "PropertyEditorSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a support class to help build property editors.
<p>
It can be used either as a base class or as a delegate.
"
      classrelation 3109122 // <realization>
	relation 3109122 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3109122 // <realization>
	  b parent class_ref 905986 // PropertyEditor
      end

      operation 6801538 "PropertyEditorSupport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyEditorSupport</code> object.

@since 1.5
"
      end

      operation 6801666 "PropertyEditorSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyEditorSupport</code> object.

@param source the source used for event firing
@since 1.5
"
      end

      operation 6801794 "getSource"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bean that is used as the
source of events. If the source has not
been explicitly set then this instance of
<code>PropertyEditorSupport</code> is returned.

@return the source object or this instance
@since 1.5
"
      end

      operation 6801922 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source bean.
<p>
The source bean is used as the source of events
for the property changes. This source should be used for information
purposes only and should not be modified by the PropertyEditor.

@param source source object to be used for events
@since 1.5
"
      end

      operation 6802050 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set (or change) the object that is to be edited.

@param value The new target object to be edited.  Note that this
    object should not be modified by the PropertyEditor, rather
    the PropertyEditor should create a new object to hold any
    modified value.
"
      end

      operation 6802178 "getValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the property.

@return The value of the property.
"
      end

      operation 6802306 "isPaintable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Determines whether the class will honor the paintValue method.

@return  True if the class will honor the paintValue method.
"
      end

      operation 6802434 "paintValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "gfx" type class_ref 343682 // Graphics
	  param inout name "box" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paint a representation of the value into a given area of screen
real estate.  Note that the propertyEditor is responsible for doing
its own clipping so that it fits into the given rectangle.
<p>
If the PropertyEditor doesn't honor paint requests (see isPaintable)
this method should be a silent noop.

@param gfx  Graphics object to paint into.
@param box  Rectangle within graphics object into which we should paint.
"
      end

      operation 6802562 "getJavaInitializationString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

This method is intended for use when generating Java code to set
the value of the property.  It should return a fragment of Java code
that can be used to initialize a variable with the current property
value.
<p>
Example results are \"2\", \"new Color(127,127,34)\", \"Color.orange\", etc.

@return A fragment of Java code representing an initializer for the
         current value.
"
      end

      operation 6802690 "getAsText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Gets the property value as a string suitable for presentation
to a human to edit.

@return The property value as a string suitable for presentation
      to a human to edit.
<p>   Returns null if the value can't be expressed as a string.
<p>   If a non-null value is returned, then the PropertyEditor should
      be prepared to parse that string back in setAsText().
"
      end

      operation 6802818 "setAsText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the property value by parsing a given String.  May raise
java.lang.IllegalArgumentException if either the String is
badly formatted or if this kind of property can't be expressed
as text.

@param text  The string to be parsed.
"
      end

      operation 6802946 "getTags"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

If the property value must be one of a set of known tagged values,
then this method should return an array of the tag values.  This can
be used to represent (for example) enum values.  If a PropertyEditor
supports tags, then it should support the use of setAsText with
a tag value as a way of setting the value.

@return The tag values for this property.  May be null if this
  property cannot be represented as a tagged value.

"
      end

      operation 6803074 "getCustomEditor"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

A PropertyEditor may chose to make available a full custom Component
that edits its property value.  It is the responsibility of the
PropertyEditor to hook itself up to its editor Component itself and
to report property value changes by firing a PropertyChange event.
<P>
The higher-level code that calls getCustomEditor may either embed
the Component in some larger property sheet, or it may put it in
its own individual dialog, or ...

@return A java.awt.Component that will allow a human to directly
     edit the current property value.  May be null if this is
     not supported.
"
      end

      operation 6803202 "supportsCustomEditor"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the propertyEditor can provide a custom editor.

@return  True if the propertyEditor can provide a custom editor.
"
      end

      operation 6803330 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Adds a listener for the value change.
When the property editor changes its value
it should fire a {@link PropertyChangeEvent}
on all registered {@link PropertyChangeListener}s,
specifying the {@code null} value for the property name.
If the source property is set,
it should be used as the source of the event.
<p>
The same listener object may be added more than once,
and will be called as many times as it is added.
If {@code listener} is {@code null},
no exception is thrown and no action is taken.

@param listener  the {@link PropertyChangeListener} to add
"
      end

      operation 6803458 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener for the value change.
<p>
If the same listener was added more than once,
it will be notified one less time after being removed.
If {@code listener} is {@code null}, or was never added,
no exception is thrown and no action is taken.

@param listener  the {@link PropertyChangeListener} to remove
"
      end

      operation 6803586 "firePropertyChange"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report that we have been modified to any interested listeners.
"
      end

      operation 6803714 "unsafeClone"
	private return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "v" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      classrelation 3109250 // value (<unidirectional association>)
	relation 3109250 --->
	  a role_name "value" private
	    comment "----------------------------------------------------------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3109250 // value (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3109378 // source (<unidirectional association>)
	relation 3109378 --->
	  a role_name "source" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3109378 // source (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3109506 // listeners (<unidirectional association>)
	relation 3109506 --->
	  a role_name "listeners" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PropertyChangeListener> ${name}${value};
"
	    classrelation_ref 3109506 // listeners (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end
    end

    class 916866 "ThreadGroupContext"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code ThreadGroupContext} is an application-dependent
context referenced by the specific {@link ThreadGroup}.
This is a replacement for the {@link sun.awt.AppContext}.

@author  Sergey Malenkov
"
      classrelation 3109890 // contexts (<unidirectional association>)
	relation 3109890 --->
	  a role_name "contexts" init_value " new WeakIdentityMap<ThreadGroupContext>() {
        protected ThreadGroupContext create(Object key) {
            return new ThreadGroupContext();
        }
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ThreadGroupContext> ${name}${value};
"
	    classrelation_ref 3109890 // contexts (<unidirectional association>)
	  b parent class_ref 916994 // WeakIdentityMap
      end

      operation 6804098 "getContext"
	class_operation package return_type class_ref 916866 // ThreadGroupContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code ThreadGroupContext} for the caller,
as determined by its {@code ThreadGroup}.

@return  the application-dependent context
"
      end

      attribute 1629570 "isDesignTime"
	volatile private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3110018 // isGuiAvailable (<unidirectional association>)
	relation 3110018 --->
	  a role_name "isGuiAvailable" volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3110018 // isGuiAvailable (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 3110146 // beanInfoCache (<unidirectional association>)
	relation 3110146 --->
	  a role_name "beanInfoCache" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<?>, BeanInfo> ${name}${value};
"
	    classrelation_ref 3110146 // beanInfoCache (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 1629698 "beanInfoFinder"
	private explicit_type "BeanInfoFinder"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1629826 "propertyEditorFinder"
	private explicit_type "PropertyEditorFinder"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6804226 "ThreadGroupContext"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804354 "isDesignTime"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804482 "setDesignTime"
	package explicit_return_type "void"
	nparams 1
	  param inout name "isDesignTime" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804610 "isGuiAvailable"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804738 "setGuiAvailable"
	package explicit_return_type "void"
	nparams 1
	  param inout name "isGuiAvailable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804866 "getBeanInfo"
	package return_type class_ref 903298 // BeanInfo
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804994 "putBeanInfo"
	package return_type class_ref 903298 // BeanInfo
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "info" type class_ref 903298 // BeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6805122 "removeBeanInfo"
	package explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6805250 "clearBeanInfoCache"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6805378 "getBeanInfoFinder"
	package explicit_return_type "BeanInfoFinder"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6805506 "getPropertyEditorFinder"
	package explicit_return_type "PropertyEditorFinder"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 916994 "WeakIdentityMap"
      abstract visibility package 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Hash table based mapping, which uses weak references to store keys
and reference-equality in place of object-equality to compare them.
An entry will automatically be removed when its key is no longer
in ordinary use.  Both null values and the null key are supported.
This class does not require additional synchronization.
A thread-safety is provided by a fragile combination
of synchronized blocks and volatile fields.
Be very careful during editing!

@see java.util.IdentityHashMap
@see java.util.WeakHashMap
"
      attribute 1630082 "MAXIMUM_CAPACITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " it MUST be a power of two"
      end

      classrelation 3111554 // NULL (<unidirectional association>)
	relation 3111554 --->
	  a role_name "NULL" init_value " new Object()" class_relation const_relation private
	    comment " special object for null key"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3111554 // NULL (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3111682 // queue (<unidirectional association>)
	relation 3111682 --->
	  a role_name "queue" init_value " new ReferenceQueue<Object>()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 3111682 // queue (<unidirectional association>)
	  b parent class_ref 130946 // ReferenceQueue
      end

      class 917506 "Entry"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 131330 // WeakReference
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3111938 // <realization>
	  relation 3111938 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3111938 // <realization>
	    b parent class_ref 131330 // WeakReference
	end

	attribute 1630466 "hash"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1630594 "value"
	  volatile private explicit_type "T"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3112066 // next (<unidirectional association>)
	  relation 3112066 --->
	    a role_name "next" volatile private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 3112066 // next (<unidirectional association>)
	    b parent class_ref 917506 // Entry
	end

	operation 6809730 "Entry"
	  cpp_inline package explicit_return_type ""
	  nparams 5
	    param inout name "key" type class_ref 129538 // Object
	    param in name "hash" explicit_type "int"
	    param inout name "value" explicit_type "T"
	    param inout name "queue" type class_ref 130946 // ReferenceQueue
	    param inout name "next" type class_ref 917506 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<Object> ${p3}, ${t4}<T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6809858 "isMatched"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 2
	    param inout name "key" type class_ref 129538 // Object
	    param in name "hash" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3111810 // table (<unidirectional association>)
	relation 3111810 --->
	  a role_name "table" multiplicity "[]" init_value " newTable(1<<3)" volatile private
	    comment " table's length MUST be a power of two"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T>${multiplicity} ${name}${value};
"
	    classrelation_ref 3111810 // table (<unidirectional association>)
	  b parent class_ref 917506 // Entry
      end

      attribute 1630210 "threshold"
	private explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the next size value at which to resize"
      end

      attribute 1630338 "size"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the number of key-value mappings"
      end

      operation 6808962 "get"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6809090 "create"
	abstract cpp_inline protected explicit_return_type "T"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6809218 "removeStaleEntries"
	cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6809346 "transfer"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "oldTable" type class_ref 917506 // Entry
	multiplicity "[]"
	  param inout name "newTable" type class_ref 917506 // Entry
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<T>[] ${p0}, ${t1}<T>[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6809474 "newTable"
	cpp_inline private return_type class_ref 917506 // Entry
	nparams 1
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T>[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 6809602 "getIndex"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "table" type class_ref 917506 // Entry
	multiplicity "[]"
	  param in name "hash" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?>[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 917122 "VetoableChangeListenerProxy"
      visibility public 
      nactuals 1
      actual class class_ref 886530 // EventListenerProxy
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class which extends the {@code EventListenerProxy}
specifically for adding a {@code VetoableChangeListener}
with a \"constrained\" property.
Instances of this class can be added
as {@code VetoableChangeListener}s to a bean
which supports firing vetoable change events.
<p>
If the object has a {@code getVetoableChangeListeners} method
then the array returned could be a mixture of {@code VetoableChangeListener}
and {@code VetoableChangeListenerProxy} objects.

@see java.util.EventListenerProxy
@see VetoableChangeSupport#getVetoableChangeListeners
@since 1.4
"
      classrelation 3110402 // <realization>
	relation 3110402 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3110402 // <realization>
	  b parent class_ref 886530 // EventListenerProxy
      end

      classrelation 3110530 // <realization>
	relation 3110530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3110530 // <realization>
	  b parent class_ref 862082 // VetoableChangeListener
      end

      classrelation 3110658 // propertyName (<unidirectional association>)
	relation 3110658 --->
	  a role_name "propertyName" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3110658 // propertyName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6805890 "VetoableChangeListenerProxy"
	public explicit_return_type ""
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor which binds the {@code VetoableChangeListener}
to a specific property.

@param propertyName  the name of the property to listen on
@param listener      the listener object
"
      end

      operation 6806018 "vetoableChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 360450 // PropertyChangeEvent
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the property change event to the listener delegate.

@param event  the property change event

@exception PropertyVetoException if the recipient wishes the property
                                 change to be rolled back
"
      end

      operation 6806146 "getPropertyName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the named property associated with the listener.

@return the name of the named property associated with the listener
"
      end
    end

    class 917378 "Visibility"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Under some circumstances a bean may be run on servers where a GUI
is not available.  This interface can be used to query a bean to
determine whether it absolutely needs a gui, and to advise the
bean whether a GUI is available.
<p>
This interface is for expert developers, and is not needed
for normal simple beans.  To avoid confusing end-users we
avoid using getXXX setXXX design patterns for these methods.
"
      operation 6808450 "needsGui"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this bean needs a GUI.

@return True if the bean absolutely needs a GUI available in
         order to get its work done.
"
      end

      operation 6808578 "dontUseGui"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method instructs the bean that it should not use the Gui.
"
      end

      operation 6808706 "okToUseGui"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method instructs the bean that it is OK to use the Gui.
"
      end

      operation 6808834 "avoidingGui"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this bean is avoiding using a GUI.

@return true if the bean is currently avoiding use of the Gui.
  e.g. due to a call on dontUseGui().
"
      end
    end

    class 917634 "XMLDecoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>XMLDecoder</code> class is used to read XML documents
created using the <code>XMLEncoder</code> and is used just like
the <code>ObjectInputStream</code>. For example, one can use
the following fragment to read the first object defined
in an XML document written by the <code>XMLEncoder</code>
class:
<pre>
      XMLDecoder d = new XMLDecoder(
                         new BufferedInputStream(
                             new FileInputStream(\"Test.xml\")));
      Object result = d.readObject();
      d.close();
</pre>

<p>
For more information you might also want to check out
<a
href=\"http://java.sun.com/products/jfc/tsc/articles/persistence3\">Long Term Persistence of JavaBeans Components: XML Schema</a>,
an article in <em>The Swing Connection.</em>
@see XMLEncoder
@see java.io.ObjectInputStream

@since 1.4

@author Philip Milne
"
      classrelation 3112194 // <realization>
	relation 3112194 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3112194 // <realization>
	  b parent class_ref 146690 // AutoCloseable
      end

      classrelation 3112322 // acc (<unidirectional association>)
	relation 3112322 --->
	  a role_name "acc" init_value " AccessController.getContext()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3112322 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      attribute 1630722 "handler"
	const_attribute private explicit_type "DocumentHandler"
	init_value " new DocumentHandler()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3112450 // input (<unidirectional association>)
	relation 3112450 --->
	  a role_name "input" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3112450 // input (<unidirectional association>)
	  b parent class_ref 606594 // InputSource
      end

      classrelation 3112578 // owner (<unidirectional association>)
	relation 3112578 --->
	  a role_name "owner" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3112578 // owner (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3112706 // array (<unidirectional association>)
	relation 3112706 --->
	  a role_name "array" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3112706 // array (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1630850 "index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6809986 "XMLDecoder"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives
created by the <code>XMLEncoder</code> class.

@param in The underlying stream.

@see XMLEncoder#XMLEncoder(java.io.OutputStream)
"
      end

      operation 6810114 "XMLDecoder"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "owner" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives
created by the <code>XMLEncoder</code> class.

@param in The underlying stream.
@param owner The owner of this stream.

"
      end

      operation 6810242 "XMLDecoder"
	public explicit_return_type ""
	nparams 3
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "owner" type class_ref 129538 // Object
	  param inout name "exceptionListener" type class_ref 905090 // ExceptionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives
created by the <code>XMLEncoder</code> class.

@param in the underlying stream.
@param owner the owner of this stream.
@param exceptionListener the exception handler for the stream;
       if <code>null</code> the default exception listener will be used.
"
      end

      operation 6810370 "XMLDecoder"
	public explicit_return_type ""
	nparams 4
	  param inout name "in" type class_ref 146434 // InputStream
	  param inout name "owner" type class_ref 129538 // Object
	  param inout name "exceptionListener" type class_ref 905090 // ExceptionListener
	  param inout name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives
created by the <code>XMLEncoder</code> class.

@param in the underlying stream.  <code>null</code> may be passed without
       error, though the resulting XMLDecoder will be useless
@param owner the owner of this stream.  <code>null</code> is a legal
       value
@param exceptionListener the exception handler for the stream, or
       <code>null</code> to use the default
@param cl the class loader used for instantiating objects.
       <code>null</code> indicates that the default class loader should
       be used
@since 1.5
"
      end

      operation 6810498 "XMLDecoder"
	public explicit_return_type ""
	nparams 1
	  param inout name "is" type class_ref 606594 // InputSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new decoder to parse XML archives
created by the {@code XMLEncoder} class.
If the input source {@code is} is {@code null},
no exception is thrown and no parsing is performed.
This behavior is similar to behavior of other constructors
that use {@code InputStream} as a parameter.

@param is  the input source to parse

@since 1.7
"
      end

      operation 6810626 "XMLDecoder"
	private explicit_return_type ""
	nparams 4
	  param inout name "is" type class_ref 606594 // InputSource
	  param inout name "owner" type class_ref 129538 // Object
	  param inout name "el" type class_ref 905090 // ExceptionListener
	  param inout name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new decoder to parse XML archives
created by the {@code XMLEncoder} class.

@param is     the input source to parse
@param owner  the owner of this decoder
@param el     the exception handler for the parser,
              or {@code null} to use the default exception handler
@param cl     the class loader used for instantiating objects,
              or {@code null} to use the default class loader

@since 1.7
"
      end

      operation 6810754 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method closes the input stream associated
with this stream.
"
      end

      operation 6810882 "close"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 146562 // Closeable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811010 "parsingComplete"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811138 "setExceptionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exceptionListener" type class_ref 905090 // ExceptionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the exception handler for this stream to <code>exceptionListener</code>.
The exception handler is notified when this stream catches recoverable
exceptions.

@param exceptionListener The exception handler for this stream;
if <code>null</code> the default exception listener will be used.

@see #getExceptionListener
"
      end

      operation 6811266 "getExceptionListener"
	public return_type class_ref 905090 // ExceptionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the exception handler for this stream.

@return The exception handler for this stream.
    Will return the default exception listener if this has not explicitly been set.

@see #setExceptionListener
"
      end

      operation 6811394 "readObject"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the next object from the underlying input stream.

@return the next object read

@throws ArrayIndexOutOfBoundsException if the stream contains no objects
        (or no more objects)

@see XMLEncoder#writeObject
"
      end

      operation 6811522 "setOwner"
	public explicit_return_type "void"
	nparams 1
	  param inout name "owner" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the owner of this decoder to <code>owner</code>.

@param owner The owner of this decoder.

@see #getOwner
"
      end

      operation 6811650 "getOwner"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the owner of this decoder.

@return The owner of this decoder.

@see #setOwner
"
      end

      operation 6811778 "createHandler"
	class_operation public return_type class_ref 635906 // DefaultHandler
	nparams 3
	  param inout name "owner" type class_ref 129538 // Object
	  param inout name "el" type class_ref 905090 // ExceptionListener
	  param inout name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new handler for SAX parser
that can be used to parse embedded XML archives
created by the {@code XMLEncoder} class.

The {@code owner} should be used if parsed XML document contains
the method call within context of the &lt;java&gt; element.
The {@code null} value may cause illegal parsing in such case.
The same problem may occur, if the {@code owner} class
does not contain expected method to call. See details <a
href=\"http://java.sun.com/products/jfc/tsc/articles/persistence3/\">here</a>.

@param owner  the owner of the default handler
              that can be used as a value of &lt;java&gt; element
@param el     the exception handler for the parser,
              or {@code null} to use the default exception handler
@param cl     the class loader used for instantiating objects,
              or {@code null} to use the default class loader
@return an instance of {@code DefaultHandler} for SAX parser

@since 1.7
"
      end
    end

    class 917762 "XMLEncoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>XMLEncoder</code> class is a complementary alternative to
the <code>ObjectOutputStream</code> and can used to generate
a textual representation of a <em>JavaBean</em> in the same
way that the <code>ObjectOutputStream</code> can
be used to create binary representation of <code>Serializable</code>
objects. For example, the following fragment can be used to create
a textual representation the supplied <em>JavaBean</em>
and all its properties:
<pre>
      XMLEncoder e = new XMLEncoder(
                         new BufferedOutputStream(
                             new FileOutputStream(\"Test.xml\")));
      e.writeObject(new JButton(\"Hello, world\"));
      e.close();
</pre>
Despite the similarity of their APIs, the <code>XMLEncoder</code>
class is exclusively designed for the purpose of archiving graphs
of <em>JavaBean</em>s as textual representations of their public
properties. Like Java source files, documents written this way
have a natural immunity to changes in the implementations of the classes
involved. The <code>ObjectOutputStream</code> continues to be recommended
for interprocess communication and general purpose serialization.
<p>
The <code>XMLEncoder</code> class provides a default denotation for
<em>JavaBean</em>s in which they are represented as XML documents
complying with version 1.0 of the XML specification and the
UTF-8 character encoding of the Unicode/ISO 10646 character set.
The XML documents produced by the <code>XMLEncoder</code> class are:
<ul>
<li>
<em>Portable and version resilient</em>: they have no dependencies
on the private implementation of any class and so, like Java source
files, they may be exchanged between environments which may have
different versions of some of the classes and between VMs from
different vendors.
<li>
<em>Structurally compact</em>: The <code>XMLEncoder</code> class
uses a <em>redundancy elimination</em> algorithm internally so that the
default values of a Bean's properties are not written to the stream.
<li>
<em>Fault tolerant</em>: Non-structural errors in the file,
caused either by damage to the file or by API changes
made to classes in an archive remain localized
so that a reader can report the error and continue to load the parts
of the document which were not affected by the error.
</ul>
<p>
Below is an example of an XML archive containing
some user interface components from the <em>swing</em> toolkit:
<pre>
&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;
&lt;java version=\"1.0\" class=\"java.beans.XMLDecoder\"&gt;
&lt;object class=\"javax.swing.JFrame\"&gt;
  &lt;void property=\"name\"&gt;
    &lt;string&gt;frame1&lt;/string&gt;
  &lt;/void&gt;
  &lt;void property=\"bounds\"&gt;
    &lt;object class=\"java.awt.Rectangle\"&gt;
      &lt;int&gt;0&lt;/int&gt;
      &lt;int&gt;0&lt;/int&gt;
      &lt;int&gt;200&lt;/int&gt;
      &lt;int&gt;200&lt;/int&gt;
    &lt;/object&gt;
  &lt;/void&gt;
  &lt;void property=\"contentPane\"&gt;
    &lt;void method=\"add\"&gt;
      &lt;object class=\"javax.swing.JButton\"&gt;
        &lt;void property=\"label\"&gt;
          &lt;string&gt;Hello&lt;/string&gt;
        &lt;/void&gt;
      &lt;/object&gt;
    &lt;/void&gt;
  &lt;/void&gt;
  &lt;void property=\"visible\"&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/void&gt;
&lt;/object&gt;
&lt;/java&gt;
</pre>
The XML syntax uses the following conventions:
<ul>
<li>
Each element represents a method call.
<li>
The \"object\" tag denotes an <em>expression</em> whose value is
to be used as the argument to the enclosing element.
<li>
The \"void\" tag denotes a <em>statement</em> which will
be executed, but whose result will not be used as an
argument to the enclosing method.
<li>
Elements which contain elements use those elements as arguments,
unless they have the tag: \"void\".
<li>
The name of the method is denoted by the \"method\" attribute.
<li>
XML's standard \"id\" and \"idref\" attributes are used to make
references to previous expressions - so as to deal with
circularities in the object graph.
<li>
The \"class\" attribute is used to specify the target of a static
method or constructor explicitly; its value being the fully
qualified name of the class.
<li>
Elements with the \"void\" tag are executed using
the outer context as the target if no target is defined
by a \"class\" attribute.
<li>
Java's String class is treated specially and is
written &lt;string&gt;Hello, world&lt;/string&gt; where
the characters of the string are converted to bytes
using the UTF-8 character encoding.
</ul>
<p>
Although all object graphs may be written using just these three
tags, the following definitions are included so that common
data structures can be expressed more concisely:
<p>
<ul>
<li>
The default method name is \"new\".
<li>
A reference to a java class is written in the form
 &lt;class&gt;javax.swing.JButton&lt;/class&gt;.
<li>
Instances of the wrapper classes for Java's primitive types are written
using the name of the primitive type as the tag. For example, an
instance of the <code>Integer</code> class could be written:
&lt;int&gt;123&lt;/int&gt;. Note that the <code>XMLEncoder</code> class
uses Java's reflection package in which the conversion between
Java's primitive types and their associated \"wrapper classes\"
is handled internally. The API for the <code>XMLEncoder</code> class
itself deals only with <code>Object</code>s.
<li>
In an element representing a nullary method whose name
starts with \"get\", the \"method\" attribute is replaced
with a \"property\" attribute whose value is given by removing
the \"get\" prefix and decapitalizing the result.
<li>
In an element representing a monadic method whose name
starts with \"set\", the \"method\" attribute is replaced
with a \"property\" attribute whose value is given by removing
the \"set\" prefix and decapitalizing the result.
<li>
In an element representing a method named \"get\" taking one
integer argument, the \"method\" attribute is replaced
with an \"index\" attribute whose value the value of the
first argument.
<li>
In an element representing a method named \"set\" taking two arguments,
the first of which is an integer, the \"method\" attribute is replaced
with an \"index\" attribute whose value the value of the
first argument.
<li>
A reference to an array is written using the \"array\"
tag. The \"class\" and \"length\" attributes specify the
sub-type of the array and its length respectively.
</ul>

<p>
For more information you might also want to check out
<a
href=\"http://java.sun.com/products/jfc/tsc/articles/persistence4\">Using XMLEncoder</a>,
an article in <em>The Swing Connection.</em>
@see XMLDecoder
@see java.io.ObjectOutputStream

@since 1.4

@author Philip Milne
"
      classrelation 3112834 // <generalisation>
	relation 3112834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3112834 // <generalisation>
	  b parent class_ref 904706 // Encoder
      end

      classrelation 3112962 // <realization>
	relation 3112962 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3112962 // <realization>
	  b parent class_ref 146690 // AutoCloseable
      end

      classrelation 3113090 // encoder (<unidirectional association>)
	relation 3113090 --->
	  a role_name "encoder" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3113090 // encoder (<unidirectional association>)
	  b parent class_ref 167682 // CharsetEncoder
      end

      classrelation 3113218 // charset (<unidirectional association>)
	relation 3113218 --->
	  a role_name "charset" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3113218 // charset (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1630978 "declaration"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3113346 // out (<unidirectional association>)
	relation 3113346 --->
	  a role_name "out" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3113346 // out (<unidirectional association>)
	  b parent class_ref 917890 // OutputStreamWriter
      end

      classrelation 3113474 // owner (<unidirectional association>)
	relation 3113474 --->
	  a role_name "owner" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3113474 // owner (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1631106 "indentation"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1631234 "internal"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3113602 // valueToExpression (<unidirectional association>)
	relation 3113602 --->
	  a role_name "valueToExpression" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, ValueData> ${name}${value};
"
	    classrelation_ref 3113602 // valueToExpression (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3113730 // targetToStatementList (<unidirectional association>)
	relation 3113730 --->
	  a role_name "targetToStatementList" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, List<Statement>> ${name}${value};
"
	    classrelation_ref 3113730 // targetToStatementList (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 1631362 "preambleWritten"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3113858 // nameGenerator (<unidirectional association>)
	relation 3113858 --->
	  a role_name "nameGenerator" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3113858 // nameGenerator (<unidirectional association>)
	  b parent class_ref 916354 // NameGenerator
      end

      class 918018 "ValueData"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1631490 "refs"
	  public explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1631618 "marked"
	  public explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Marked -> refs > 0 unless ref was a target."
	end

	classrelation 3113986 // name (<unidirectional association>)
	  relation 3113986 --->
	    a role_name "name" init_value " null" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3113986 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 3114114 // exp (<unidirectional association>)
	  relation 3114114 --->
	    a role_name "exp" init_value " null" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3114114 // exp (<unidirectional association>)
	    b parent class_ref 904834 // Expression
	end
      end

      operation 6811906 "XMLEncoder"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new XML encoder to write out <em>JavaBeans</em>
to the stream <code>out</code> using an XML encoding.

@param out  the stream to which the XML representation of
            the objects will be written

@throws  IllegalArgumentException
         if <code>out</code> is <code>null</code>

@see XMLDecoder#XMLDecoder(InputStream)
"
      end

      operation 6812034 "XMLEncoder"
	public explicit_return_type ""
	nparams 4
	  param inout name "out" type class_ref 151298 // OutputStream
	  param inout name "charset" type class_ref 128130 // String
	  param inout name "declaration" explicit_type "boolean"
	  param in name "indentation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new XML encoder to write out <em>JavaBeans</em>
to the stream <code>out</code> using the given <code>charset</code>
starting from the given <code>indentation</code>.

@param out          the stream to which the XML representation of
                    the objects will be written
@param charset      the name of the requested charset;
                    may be either a canonical name or an alias
@param declaration  whether the XML declaration should be generated;
                    set this to <code>false</code>
                    when embedding the contents in another XML document
@param indentation  the number of space characters to indent the entire XML document by

@throws  IllegalArgumentException
         if <code>out</code> or <code>charset</code> is <code>null</code>,
         or if <code>indentation</code> is less than 0

@throws  IllegalCharsetNameException
         if <code>charset</code> name is illegal

@throws  UnsupportedCharsetException
         if no support for the named charset is available
         in this instance of the Java virtual machine

@throws  UnsupportedOperationException
         if loaded charset does not support encoding

@see Charset#forName(String)

@since 1.7
"
      end

      operation 6812162 "setOwner"
	public explicit_return_type "void"
	nparams 1
	  param inout name "owner" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the owner of this encoder to <code>owner</code>.

@param owner The owner of this encoder.

@see #getOwner
"
      end

      operation 6812290 "getOwner"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the owner of this encoder.

@return The owner of this encoder.

@see #setOwner
"
      end

      operation 6812418 "writeObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an XML representation of the specified object to the output.

@param o The object to be written to the stream.

@see XMLDecoder#readObject
"
      end

      operation 6812546 "statementList"
	private return_type class_ref 175362 // List
	nparams 1
	  param inout name "target" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Statement> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812674 "mark"
	private explicit_return_type "void"
	nparams 2
	  param inout name "o" type class_ref 129538 // Object
	  param inout name "isArgument" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812802 "mark"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stm" type class_ref 905218 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812930 "writeStatement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldStm" type class_ref 905218 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records the Statement so that the Encoder will
produce the actual output when the stream is flushed.
<P>
This method should only be invoked within the context
of initializing a persistence delegate.

@param oldStm The statement that will be written
              to the stream.
@see java.beans.PersistenceDelegate#initialize
"
      end

      operation 6813058 "writeExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldExp" type class_ref 904834 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records the Expression so that the Encoder will
produce the actual output when the stream is flushed.
<P>
This method should only be invoked within the context of
initializing a persistence delegate or setting up an encoder to
read from a resource bundle.
<P>
For more information about using resource bundles with the
XMLEncoder, see
http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n

@param oldExp The expression that will be written
              to the stream.
@see java.beans.PersistenceDelegate#initialize
"
      end

      operation 6813186 "flush"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method writes out the preamble associated with the
XML encoding if it has not been written already and
then writes out all of the values that been
written to the stream since the last time <code>flush</code>
was called. After flushing, all internal references to the
values that were written to this stream are cleared.
"
      end

      operation 6813314 "clear"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6813442 "getMissedStatement"
	package return_type class_ref 905218 // Statement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6813570 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>flush</code>, writes the closing
postamble and then closes the output stream associated
with this stream.
"
      end

      operation 6813698 "quote"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6813826 "getValueData"
	private return_type class_ref 918018 // ValueData
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6813954 "isValidCharCode"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "code" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the argument,
a Unicode code point, is valid in XML documents.
Unicode characters fit into the low sixteen bits of a Unicode code point,
and pairs of Unicode <em>surrogate characters</em> can be combined
to encode Unicode code point in documents containing only Unicode.
(The <code>char</code> datatype in the Java Programming Language
represents Unicode characters, including unpaired surrogates.)
<par>
[2] Char ::= #x0009 | #x000A | #x000D
           | [#x0020-#xD7FF]
           | [#xE000-#xFFFD]
           | [#x10000-#x10ffff]
</par>

@param code  the 32-bit Unicode code point being tested
@return  <code>true</code> if the Unicode code point is valid,
         <code>false</code> otherwise
"
      end

      operation 6814082 "writeln"
	private explicit_return_type "void"
	nparams 1
	  param inout name "exp" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6814210 "outputValue"
	private explicit_return_type "void"
	nparams 3
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "outer" type class_ref 129538 // Object
	  param inout name "isArgument" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6814338 "quoteCharCode"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "code" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6814466 "createString"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "code" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6814594 "createString"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "string" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6814722 "outputStatement"
	private explicit_return_type "void"
	nparams 3
	  param inout name "exp" type class_ref 905218 // Statement
	  param inout name "outer" type class_ref 129538 // Object
	  param inout name "isArgument" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6814850 "outputXML"
	private explicit_return_type "void"
	nparams 4
	  param inout name "tag" type class_ref 128130 // String
	  param inout name "attributes" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "" explicit_type "Object...args"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6814978 "primitiveTypeFor"
	class_operation package return_type class_ref 130818 // Class
	nparams 1
	  param inout name "wrapper" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end
    end
  end

  deploymentview 142978 "beans"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 276354 "PropertyChangeListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 347266 // PropertyChangeListener
      end
      comment "Copyright (c) 1996, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630658 "ChangeListenerMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.EventListener;
import java.util.EventListenerProxy;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
${definition}"
      associated_elems
	class_ref 882178 // ChangeListenerMap
      end
      comment "Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630786 "PropertyChangeSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Hashtable;
import java.util.Map.Entry;
${definition}"
      associated_elems
	class_ref 343042 // PropertyChangeSupport
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657922 "AppletInitializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.applet.Applet;
import java.beans.beancontext.BeanContext;
${definition}"
      associated_elems
	class_ref 902658 // AppletInitializer
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658050 "FeatureDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.TypeResolver;
import java.lang.ref.Reference;
import java.lang.ref.WeakReference;
import java.lang.ref.SoftReference;
import java.lang.reflect.Method;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Map.Entry;
${definition}"
      associated_elems
	class_ref 903042 // FeatureDescriptor
      end
      comment "Copyright (c) 1996, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658178 "BeanDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
${definition}"
      associated_elems
	class_ref 902914 // BeanDescriptor
      end
      comment "Copyright (c) 1996, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658306 "BeanInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Image;
${definition}"
      associated_elems
	class_ref 903298 // BeanInfo
      end
      comment "Copyright (c) 1996, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658434 "Beans"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.finder.ClassFinder;
import java.applet.Applet;
import java.applet.AppletContext;
import java.applet.AppletStub;
import java.applet.AudioClip;
import java.awt.Image;
import java.beans.beancontext.BeanContext;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectStreamClass;
import java.io.StreamCorruptedException;
import java.lang.reflect.Modifier;
import java.net.URL;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 903682 // Beans
	class_ref 903810 // ObjectInputStreamWithLoader
	class_ref 903938 // BeansAppletContext
	class_ref 904066 // BeansAppletStub
      end
      comment "Copyright (c) 1996, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658562 "ConstructorProperties"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.*;
import static java.lang.annotation.ElementType.*;
import static java.lang.annotation.RetentionPolicy.*;
${definition}"
      associated_elems
	class_ref 904194 // ConstructorProperties
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658690 "Customizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 904322 // Customizer
      end
      comment "Copyright (c) 1996, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658818 "PersistenceDelegate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 904578 // PersistenceDelegate
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 658946 "DefaultPersistenceDelegate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.lang.reflect.*;
import java.util.Objects;
import sun.reflect.misc.*;
${definition}"
      associated_elems
	class_ref 904450 // DefaultPersistenceDelegate
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659074 "DesignMode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 904962 // DesignMode
      end
      comment "Copyright (c) 1997, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659202 "Encoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.finder.PersistenceDelegateFinder;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 904706 // Encoder
      end
      comment "Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659330 "EventHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Proxy;
import java.lang.reflect.Method;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import sun.reflect.misc.MethodUtil;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 905346 // EventHandler
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659458 "EventSetDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
${definition}"
      associated_elems
	class_ref 903426 // EventSetDescriptor
      end
      comment "Copyright (c) 1996, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659586 "ExceptionListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 905090 // ExceptionListener
      end
      comment "Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659714 "Statement"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.AccessibleObject;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import com.sun.beans.finder.ClassFinder;
import com.sun.beans.finder.ConstructorFinder;
import com.sun.beans.finder.MethodFinder;
import sun.reflect.misc.MethodUtil;
${definition}"
      associated_elems
	class_ref 905218 // Statement
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659842 "Expression"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 904834 // Expression
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 659970 "PropertyChangeEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
${definition}"
      associated_elems
	class_ref 360450 // PropertyChangeEvent
      end
      comment "Copyright (c) 1996, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660098 "IndexedPropertyChangeEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 905602 // IndexedPropertyChangeEvent
      end
      comment "Copyright (c) 2003, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660226 "PropertyDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.reflect.Method;
import java.lang.reflect.Constructor;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 352770 // PropertyDescriptor
      end
      comment "Copyright (c) 1996, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660354 "IndexedPropertyDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.reflect.Method;
${definition}"
      associated_elems
	class_ref 905730 // IndexedPropertyDescriptor
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660482 "IntrospectionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 905474 // IntrospectionException
      end
      comment "Copyright (c) 1996, 2009, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660610 "Introspector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.TypeResolver;
import com.sun.beans.WeakCache;
import com.sun.beans.finder.ClassFinder;
import com.sun.beans.finder.MethodFinder;
import java.awt.Component;
import java.lang.ref.Reference;
import java.lang.ref.SoftReference;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.lang.reflect.Type;
import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.EventListener;
import java.util.EventObject;
import java.util.List;
import java.util.TreeMap;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 906114 // Introspector
	class_ref 906242 // GenericBeanInfo
      end
      comment "Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660738 "SimpleBeanInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.ImageProducer;
import java.net.URL;
${definition}"
      associated_elems
	class_ref 906370 // SimpleBeanInfo
      end
      comment "Copyright (c) 1996, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660866 "MetaData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.finder.PrimitiveWrapperMap;
import java.awt.AWTKeyStroke;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.font.TextAttribute;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.lang.reflect.InvocationTargetException;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.*;
import javax.swing.Box;
import javax.swing.JLayeredPane;
import javax.swing.border.MatteBorder;
import javax.swing.plaf.ColorUIResource;
import sun.swing.PrintColorUIResource;
import static sun.reflect.misc.ReflectUtil.isPackageAccessible;
${definition}"
      associated_elems
	class_ref 906498 // MetaData
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 660994 "MethodDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.ref.WeakReference;
import java.lang.reflect.Method;
import java.util.List;
import java.util.ArrayList;
${definition}"
      associated_elems
	class_ref 903554 // MethodDescriptor
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 661122 "MethodRef"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.SoftReference;
import java.lang.ref.WeakReference;
import java.lang.reflect.Method;
import static sun.reflect.misc.ReflectUtil.isPackageAccessible;
${definition}"
      associated_elems
	class_ref 905858 // MethodRef
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 661250 "NameGenerator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.Map;
import static java.util.Locale.ENGLISH;
${definition}"
      associated_elems
	class_ref 916354 // NameGenerator
      end
      comment "Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 661378 "ParameterDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 916226 // ParameterDescriptor
      end
      comment "Copyright (c) 1996, 1997, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 661506 "PropertyChangeListenerProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListenerProxy;
${definition}"
      associated_elems
	class_ref 916482 // PropertyChangeListenerProxy
      end
      comment "Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 661634 "PropertyEditor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 905986 // PropertyEditor
      end
      comment "Copyright (c) 1996, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 661762 "PropertyEditorManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 916610 // PropertyEditorManager
      end
      comment "Copyright (c) 1996, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 661890 "PropertyEditorSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.*;
${definition}"
      associated_elems
	class_ref 916738 // PropertyEditorSupport
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662018 "PropertyVetoException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 862210 // PropertyVetoException
      end
      comment "Copyright (c) 1996, 2009, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662146 "ThreadGroupContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.finder.BeanInfoFinder;
import com.sun.beans.finder.PropertyEditorFinder;
import java.awt.GraphicsEnvironment;
import java.util.Map;
import java.util.WeakHashMap;
${definition}"
      associated_elems
	class_ref 916866 // ThreadGroupContext
      end
      comment "Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662274 "Transient"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
${definition}"
      associated_elems
	class_ref 903170 // Transient
      end
      comment "Copyright (c) 2008, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662402 "VetoableChangeListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 862082 // VetoableChangeListener
      end
      comment "Copyright (c) 1996, 1997, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662530 "VetoableChangeListenerProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListenerProxy;
${definition}"
      associated_elems
	class_ref 917122 // VetoableChangeListenerProxy
      end
      comment "Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662658 "VetoableChangeSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Hashtable;
import java.util.Map.Entry;
${definition}"
      associated_elems
	class_ref 356994 // VetoableChangeSupport
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662786 "Visibility"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 917378 // Visibility
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 662914 "WeakIdentityMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.ReferenceQueue;
import java.lang.ref.WeakReference;
${definition}"
      associated_elems
	class_ref 916994 // WeakIdentityMap
      end
      comment "Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 663042 "XMLDecoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.decoder.DocumentHandler;
import java.io.Closeable;
import java.io.InputStream;
import java.io.IOException;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import org.xml.sax.InputSource;
import org.xml.sax.helpers.DefaultHandler;
${definition}"
      associated_elems
	class_ref 917634 // XMLDecoder
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 663170 "XMLEncoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
import java.lang.reflect.*;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
${definition}"
      associated_elems
	class_ref 917762 // XMLEncoder
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 181122 // beancontext
end
