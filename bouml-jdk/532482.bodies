class AclImpl
!!!3259650.java!!!	AclImpl(inout owner : PrincipalImpl, inout name : String)
        super(owner);
        entryList = new Vector<>();
        aclName = name;
!!!3259778.java!!!	setName(inout caller : Principal, inout name : String) : void
          if (!isOwner(caller))
                throw new NotOwnerException();
          aclName = name;
!!!3259906.java!!!	getName() : String
        return aclName;
!!!3260034.java!!!	addEntry(inout caller : Principal, inout entry : AclEntry) : boolean
          if (!isOwner(caller))
                throw new NotOwnerException();

          if (entryList.contains(entry))
                return false;
          /*
                 for (Enumeration e = entryList.elements();e.hasMoreElements();){
                 AclEntry ent = (AclEntry) e.nextElement();
                 if (ent.getPrincipal().equals(entry.getPrincipal()))
                 return false;
                 }
                 */

          entryList.addElement(entry);
          return true;
!!!3260162.java!!!	removeEntry(inout caller : Principal, inout entry : AclEntry) : boolean
          if (!isOwner(caller))
                throw new NotOwnerException();

          return (entryList.removeElement(entry));
!!!3260290.java!!!	removeAll(inout caller : Principal) : void
          if (!isOwner(caller))
                throw new NotOwnerException();
        entryList.removeAllElements();
!!!3260418.java!!!	getPermissions(inout user : Principal) : Enumeration
        Vector<Permission> empty = new Vector<>();
        for (Enumeration<AclEntry> e = entryList.elements();e.hasMoreElements();){
          AclEntry ent = e.nextElement();
          if (ent.getPrincipal().equals(user))
                return ent.permissions();
        }
        return empty.elements();
!!!3260546.java!!!	entries() : Enumeration
        return entryList.elements();
!!!3260674.java!!!	checkPermission(inout user : Principal, inout perm : Permission) : boolean
        for (Enumeration<AclEntry> e = entryList.elements();e.hasMoreElements();){
          AclEntry ent = e.nextElement();
          if (ent.getPrincipal().equals(user))
                if (ent.checkPermission(perm)) return true;
        }
        return false;
!!!3260802.java!!!	checkPermission(inout user : Principal, inout community : String, inout perm : Permission) : boolean
        for (Enumeration<AclEntry> e = entryList.elements();e.hasMoreElements();){
          AclEntryImpl ent = (AclEntryImpl) e.nextElement();
          if (ent.getPrincipal().equals(user))
                if (ent.checkPermission(perm) && ent.checkCommunity(community)) return true;
        }
        return false;
!!!3260930.java!!!	checkCommunity(inout community : String) : boolean
        for (Enumeration<AclEntry> e = entryList.elements();e.hasMoreElements();){
          AclEntryImpl ent = (AclEntryImpl) e.nextElement();
          if (ent.checkCommunity(community)) return true;
        }
        return false;
!!!3261058.java!!!	toString() : String
        return ("AclImpl: "+ getName());
