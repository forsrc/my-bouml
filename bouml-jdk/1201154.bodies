class Role
!!!9929218.java!!!	Role(inout roleName : String, inout roleValue : List)

        if (roleName == null || roleValue == null) {
            String excMsg = "Invalid parameter";
            throw new IllegalArgumentException(excMsg);
        }

        setRoleName(roleName);
        setRoleValue(roleValue);

        return;
!!!9929346.java!!!	getRoleName() : String
        return name;
!!!9929474.java!!!	getRoleValue() : List
        return objectNameList;
!!!9929602.java!!!	setRoleName(inout roleName : String) : void

        if (roleName == null) {
            String excMsg = "Invalid parameter.";
            throw new IllegalArgumentException(excMsg);
        }

        name = roleName;
        return;
!!!9929730.java!!!	setRoleValue(inout roleValue : List) : void

        if (roleValue == null) {
            String excMsg = "Invalid parameter.";
            throw new IllegalArgumentException(excMsg);
        }

        objectNameList = new ArrayList<ObjectName>(roleValue);
        return;
!!!9929858.java!!!	toString() : String
        StringBuilder result = new StringBuilder();
        result.append("role name: " + name + "; role value: ");
        for (Iterator<ObjectName> objNameIter = objectNameList.iterator();
             objNameIter.hasNext();) {
            ObjectName currObjName = objNameIter.next();
            result.append(currObjName.toString());
            if (objNameIter.hasNext()) {
                result.append(", ");
            }
        }
        return result.toString();
!!!9929986.java!!!	clone() : Object

        try {
            return new Role(name, objectNameList);
        } catch (IllegalArgumentException exc) {
            return null; // can't happen
        }
!!!9930114.java!!!	roleValueToString(inout roleValue : List) : String

        if (roleValue == null) {
            String excMsg = "Invalid parameter";
            throw new IllegalArgumentException(excMsg);
        }

        StringBuilder result = new StringBuilder();
        for (ObjectName currObjName : roleValue) {
            if (result.length() > 0)
                result.append("\n");
            result.append(currObjName.toString());
        }
        return result.toString();
!!!9930242.java!!!	readObject(inout in : ObjectInputStream) : void
      if (compat)
      {
        // Read an object serialized in the old serial form
        //
        ObjectInputStream.GetField fields = in.readFields();
        name = (String) fields.get("myName", null);
        if (fields.defaulted("myName"))
        {
          throw new NullPointerException("myName");
        }
        objectNameList = cast(fields.get("myObjNameList", null));
        if (fields.defaulted("myObjNameList"))
        {
          throw new NullPointerException("myObjNameList");
        }
      }
      else
      {
        // Read an object serialized in the new serial form
        //
        in.defaultReadObject();
      }
!!!9930370.java!!!	writeObject(inout out : ObjectOutputStream) : void
      if (compat)
      {
        // Serializes this instance in the old serial form
        //
        ObjectOutputStream.PutField fields = out.putFields();
        fields.put("myName", name);
        fields.put("myObjNameList", objectNameList);
        out.writeFields();
      }
      else
      {
        // Serializes this instance in the new serial form
        //
        out.defaultWriteObject();
      }
