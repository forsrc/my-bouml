class XPath2FilterContainer04
!!!5478402.java!!!	XPath2FilterContainer04()

        // no instantiation
!!!5478530.java!!!	XPath2FilterContainer04(inout doc : Document, inout xpath2filter : String, inout filterType : String)
        super(doc);

        this.constructionElement.setAttributeNS(
            null, XPath2FilterContainer04._ATT_FILTER, filterType);

        if ((xpath2filter.length() > 2)
            && (!Character.isWhitespace(xpath2filter.charAt(0)))) {
            XMLUtils.addReturnToElement(this.constructionElement);
            this.constructionElement.appendChild(doc.createTextNode(xpath2filter));
            XMLUtils.addReturnToElement(this.constructionElement);
        } else {
            this.constructionElement.appendChild(doc.createTextNode(xpath2filter));
        }
!!!5478658.java!!!	XPath2FilterContainer04(inout element : Element, inout BaseURI : String)

        super(element, BaseURI);

        String filterStr =
            this.constructionElement.getAttributeNS(null, XPath2FilterContainer04._ATT_FILTER);

        if (!filterStr.equals(XPath2FilterContainer04._ATT_FILTER_VALUE_INTERSECT)
            && !filterStr.equals(XPath2FilterContainer04._ATT_FILTER_VALUE_SUBTRACT)
            && !filterStr.equals(XPath2FilterContainer04._ATT_FILTER_VALUE_UNION)) {
            Object exArgs[] = { XPath2FilterContainer04._ATT_FILTER, filterStr,
                                XPath2FilterContainer04._ATT_FILTER_VALUE_INTERSECT
                                + ", "
                                + XPath2FilterContainer04._ATT_FILTER_VALUE_SUBTRACT
                                + " or "
                                + XPath2FilterContainer04._ATT_FILTER_VALUE_UNION };

            throw new XMLSecurityException("attributeValueIllegal", exArgs);
        }
!!!5478786.java!!!	newInstanceIntersect(inout doc : Document, inout xpath2filter : String) : XPath2FilterContainer04
        return new XPath2FilterContainer04(
            doc, xpath2filter, XPath2FilterContainer04._ATT_FILTER_VALUE_INTERSECT);
!!!5478914.java!!!	newInstanceSubtract(inout doc : Document, inout xpath2filter : String) : XPath2FilterContainer04
        return new XPath2FilterContainer04(
            doc, xpath2filter, XPath2FilterContainer04._ATT_FILTER_VALUE_SUBTRACT);
!!!5479042.java!!!	newInstanceUnion(inout doc : Document, inout xpath2filter : String) : XPath2FilterContainer04
        return new XPath2FilterContainer04(
            doc, xpath2filter, XPath2FilterContainer04._ATT_FILTER_VALUE_UNION);
!!!5479170.java!!!	newInstance(inout element : Element, inout BaseURI : String) : XPath2FilterContainer04
        return new XPath2FilterContainer04(element, BaseURI);
!!!5479298.java!!!	isIntersect() : boolean
        return this.constructionElement.getAttributeNS(
            null, XPath2FilterContainer04._ATT_FILTER
        ).equals(XPath2FilterContainer04._ATT_FILTER_VALUE_INTERSECT);
!!!5479426.java!!!	isSubtract() : boolean
        return this.constructionElement.getAttributeNS(
            null, XPath2FilterContainer04._ATT_FILTER
        ).equals(XPath2FilterContainer04._ATT_FILTER_VALUE_SUBTRACT);
!!!5479554.java!!!	isUnion() : boolean
        return this.constructionElement.getAttributeNS(
            null, XPath2FilterContainer04._ATT_FILTER
        ).equals(XPath2FilterContainer04._ATT_FILTER_VALUE_UNION);
!!!5479682.java!!!	getXPathFilterStr() : String
        return this.getTextFromTextChild();
!!!5479810.java!!!	getXPathFilterTextNode() : Node
        NodeList children = this.constructionElement.getChildNodes();
        int length = children.getLength();

        for (int i = 0; i < length; i++) {
            if (children.item(i).getNodeType() == Node.TEXT_NODE) {
                return children.item(i);
            }
        }

        return null;
!!!5479938.java!!!	getBaseLocalName() : String
        return XPath2FilterContainer04._TAG_XPATH2;
!!!5480066.java!!!	getBaseNamespace() : String
        return XPath2FilterContainer04.XPathFilter2NS;
