class XSAnyType
!!!4646658.java!!!	XSAnyType()
            fName = SchemaSymbols.ATTVAL_ANYTYPE;
            super.fTargetNamespace = SchemaSymbols.URI_SCHEMAFORSCHEMA;
            fBaseType = this;
            fDerivedBy = XSConstants.DERIVATION_RESTRICTION;
            fContentType = XSComplexTypeDecl.CONTENTTYPE_MIXED;

            fParticle = null;
            fAttrGrp = null;
!!!4646786.java!!!	setValues(inout name : String, inout targetNamespace : String, inout baseType : XSTypeDefinition, in derivedBy : short, in schemaFinal : short, in block : short, in contentType : short, inout isAbstract : boolean, inout attrGrp : XSAttributeGroupDecl, inout simpleType : XSSimpleType, inout particle : XSParticleDecl) : void
            // don't allow this.
!!!4646914.java!!!	setName(inout name : String) : void
            // don't allow this.
!!!4647042.java!!!	setIsAbstractType() : void
            // null implementation
!!!4647170.java!!!	setContainsTypeID() : void
            // null implementation
!!!4647298.java!!!	setIsAnonymous() : void
            // null implementation
!!!4647426.java!!!	reset() : void
            // null implementation
!!!4647554.java!!!	getAttributeUses() : XSObjectList
            return XSObjectListImpl.EMPTY_LIST;
!!!4647682.java!!!	getAttrGrp() : XSAttributeGroupDecl
            XSWildcardDecl wildcard = new XSWildcardDecl();
            wildcard.fProcessContents = XSWildcardDecl.PC_LAX;
            XSAttributeGroupDecl attrGrp = new XSAttributeGroupDecl();
            attrGrp.fAttributeWC = wildcard;
            return attrGrp;
!!!4647810.java!!!	getAttributeWildcard() : XSWildcard
            XSWildcardDecl wildcard = new XSWildcardDecl();
            wildcard.fProcessContents = XSWildcardDecl.PC_LAX;
            return wildcard;
!!!4647938.java!!!	getParticle() : XSParticle
            // the wildcard used in anyType (content and attribute)
            // the spec will change strict to skip for anyType
            XSWildcardDecl wildcard = new XSWildcardDecl();
            wildcard.fProcessContents = XSWildcardDecl.PC_LAX;
            // the particle for the content wildcard
            XSParticleDecl particleW = new XSParticleDecl();
            particleW.fMinOccurs = 0;
            particleW.fMaxOccurs = SchemaSymbols.OCCURRENCE_UNBOUNDED;
            particleW.fType = XSParticleDecl.PARTICLE_WILDCARD;
            particleW.fValue = wildcard;
            // the model group of a sequence of the above particle
            XSModelGroupImpl group = new XSModelGroupImpl();
            group.fCompositor = XSModelGroupImpl.MODELGROUP_SEQUENCE;
            group.fParticleCount = 1;
            group.fParticles = new XSParticleDecl[1];
            group.fParticles[0] = particleW;
            // the content of anyType: particle of the above model group
            XSParticleDecl particleG = new XSParticleDecl();
            particleG.fType = XSParticleDecl.PARTICLE_MODELGROUP;
            particleG.fValue = group;

            return particleG;
!!!4648066.java!!!	getAnnotations() : XSObjectList
            return XSObjectListImpl.EMPTY_LIST;
!!!4648194.java!!!	getNamespaceItem() : XSNamespaceItem
            return SG_SchemaNS;
