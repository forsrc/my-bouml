class PropertyEditorSupport
!!!6801538.java!!!	PropertyEditorSupport()
        setSource(this);
!!!6801666.java!!!	PropertyEditorSupport(inout source : Object)
        if (source == null) {
           throw new NullPointerException();
        }
        setSource(source);
!!!6801794.java!!!	getSource() : Object
        return source;
!!!6801922.java!!!	setSource(inout source : Object) : void
        this.source = source;
!!!6802050.java!!!	setValue(inout value : Object) : void
        this.value = value;
        firePropertyChange();
!!!6802178.java!!!	getValue() : Object
        return value;
!!!6802306.java!!!	isPaintable() : boolean
        return false;
!!!6802562.java!!!	getJavaInitializationString() : String
        return "???";
!!!6802690.java!!!	getAsText() : String
        return (this.value != null)
                ? this.value.toString()
                : null;
!!!6802818.java!!!	setAsText(inout text : String) : void
        if (value instanceof String) {
            setValue(text);
            return;
        }
        throw new java.lang.IllegalArgumentException(text);
!!!6802946.java!!!	getTags() : String
        return null;
!!!6803074.java!!!	getCustomEditor() : Component
        return null;
!!!6803202.java!!!	supportsCustomEditor() : boolean
        return false;
!!!6803330.java!!!	addPropertyChangeListener(inout listener : PropertyChangeListener) : void
        if (listeners == null) {
            listeners = new java.util.Vector<>();
        }
        listeners.addElement(listener);
!!!6803458.java!!!	removePropertyChangeListener(inout listener : PropertyChangeListener) : void
        if (listeners == null) {
            return;
        }
        listeners.removeElement(listener);
!!!6803586.java!!!	firePropertyChange() : void
        java.util.Vector<PropertyChangeListener> targets;
        synchronized (this) {
            if (listeners == null) {
                return;
            }
            targets = unsafeClone(listeners);
        }
        // Tell our listeners that "everything" has changed.
        PropertyChangeEvent evt = new PropertyChangeEvent(source, null, null, null);

        for (int i = 0; i < targets.size(); i++) {
            PropertyChangeListener target = targets.elementAt(i);
            target.propertyChange(evt);
        }
!!!6803714.java!!!	unsafeClone(inout v : Vector) : Vector
        return (java.util.Vector<T>)v.clone();
