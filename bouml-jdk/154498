format 222
"print" // jdk1.8::java::awt::print
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/awt/print/"
  java_package "java.awt.print"
  classview 150018 "print"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 428162 "PrinterException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>PrinterException</code> class and its subclasses are used
to indicate that an exceptional condition has occurred in the print
system.
"
      classrelation 3083650 // <generalisation>
	relation 3083650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3083650 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      operation 6740866 "PrinterException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PrinterException</code> object
without a detail message.
"
      end

      operation 6740994 "PrinterException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PrinterException</code> object
with the specified detail message.
@param msg the message to generate when a
<code>PrinterException</code> is thrown
"
      end
    end

    class 428674 "Printable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Printable</code> interface is implemented
by the <code>print</code> methods of the current
page painter, which is called by the printing
system to render a page.  When building a
{@link Pageable}, pairs of {@link PageFormat}
instances and instances that implement
this interface are used to describe each page. The
instance implementing <code>Printable</code> is called to
print the page's graphics.
<p>
A <code>Printable(..)</code> may be set on a <code>PrinterJob</code>.
When the client subsequently initiates printing by calling
<code>PrinterJob.print(..)</code> control
<p>
is handed to the printing system until all pages have been printed.
It does this by calling <code>Printable.print(..)</code> until
all pages in the document have been printed.
In using the <code>Printable</code> interface the printing
commits to image the contents of a page whenever
requested by the printing system.
<p>
The parameters to <code>Printable.print(..)</code> include a
<code>PageFormat</code> which describes the printable area of
the page, needed for calculating the contents that will fit the
page, and the page index, which specifies the zero-based print
stream index of the requested page.
<p>
For correct printing behaviour, the following points should be
observed:
<ul>
<li> The printing system may request a page index more than once.
On each occasion equal PageFormat parameters will be supplied.

<li>The printing system will call <code>Printable.print(..)</code>
with page indexes which increase monotonically, although as noted above,
the <code>Printable</code> should expect multiple calls for a page index
and that page indexes may be skipped, when page ranges are specified
by the client, or by a user through a print dialog.

<li>If multiple collated copies of a document are requested, and the
printer cannot natively support this, then the document may be imaged
multiple times. Printing will start each copy from the lowest print
stream page index page.

<li>With the exception of re-imaging an entire document for multiple
collated copies, the increasing page index order means that when
page N is requested if a client needs to calculate page break position,
it may safely discard any state related to pages &lt; N, and make current
that for page N. \"State\" usually is just the calculated position in the
document that corresponds to the start of the page.

<li>When called by the printing system the <code>Printable</code> must
inspect and honour the supplied PageFormat parameter as well as the
page index.  The format of the page to be drawn is specified by the
supplied PageFormat. The size, orientation and imageable area of the page
is therefore already determined and rendering must be within this
imageable area.
This is key to correct printing behaviour, and it has the
implication that the client has the responsibility of tracking
what content belongs on the specified page.

<li>When the <code>Printable</code> is obtained from a client-supplied
<code>Pageable</code> then the client may provide different PageFormats
for each page index. Calculations of page breaks must account for this.
</ul>
<p>
@see java.awt.print.Pageable
@see java.awt.print.PageFormat
@see java.awt.print.PrinterJob
"
      attribute 1625730 "PAGE_EXISTS"
	public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Returned from {@link #print(Graphics, PageFormat, int)}
to signify that the requested page was rendered.

"
      end

      attribute 1625858 "NO_SUCH_PAGE"
	public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Returned from <code>print</code> to signify that the
<code>pageIndex</code> is too large and that the requested page
does not exist.

"
      end

      operation 6740738 "print"
	public explicit_return_type "int"
	nparams 3
	  param inout name "graphics" type class_ref 343682 // Graphics
	  param inout name "pageFormat" type class_ref 901634 // PageFormat
	  param in name "pageIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 428162 // PrinterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the page at the specified index into the specified
{@link Graphics} context in the specified
format.  A <code>PrinterJob</code> calls the
<code>Printable</code> interface to request that a page be
rendered into the context specified by
<code>graphics</code>.  The format of the page to be drawn is
specified by <code>pageFormat</code>.  The zero based index
of the requested page is specified by <code>pageIndex</code>.
If the requested page does not exist then this method returns
NO_SUCH_PAGE; otherwise PAGE_EXISTS is returned.
The <code>Graphics</code> class or subclass implements the
{@link PrinterGraphics} interface to provide additional
information.  If the <code>Printable</code> object
aborts the print job then it throws a {@link PrinterException}.
@param graphics the context into which the page is drawn
@param pageFormat the size and orientation of the page being drawn
@param pageIndex the zero based index of the page to be drawn
@return PAGE_EXISTS if the page is rendered successfully
        or NO_SUCH_PAGE if <code>pageIndex</code> specifies a
        non-existent page.
@exception java.awt.print.PrinterException
        thrown when the print job is terminated.
"
      end
    end

    class 901378 "Book"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Book</code> class provides a representation of a document in
which pages may have different page formats and page painters. This
class uses the {@link Pageable} interface to interact with a
{@link PrinterJob}.
@see Pageable
@see PrinterJob
"
      classrelation 3082626 // <realization>
	relation 3082626 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3082626 // <realization>
	  b parent class_ref 901506 // Pageable
      end

      classrelation 3082754 // mPages (<unidirectional association>)
	relation 3082754 --->
	  a role_name "mPages" private
	    comment " Class Constants 
 Class Variables 
 Instance Variables 

The set of pages that make up the Book.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3082754 // mPages (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 6736386 "Book"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Instance Methods 

 Creates a new, empty <code>Book</code>.
"
      end

      operation 6736514 "getNumberOfPages"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of pages in this <code>Book</code>.
@return the number of pages this <code>Book</code> contains.
"
      end

      operation 6736642 "getPageFormat"
	public return_type class_ref 901634 // PageFormat
	nparams 1
	  param in name "pageIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 881154 // IndexOutOfBoundsException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link PageFormat} of the page specified by
<code>pageIndex</code>.
@param pageIndex the zero based index of the page whose
           <code>PageFormat</code> is being requested
@return the <code>PageFormat</code> describing the size and
         orientation of the page.
@throws IndexOutOfBoundsException if the <code>Pageable</code>
         does not contain the requested page
"
      end

      operation 6736770 "getPrintable"
	public return_type class_ref 428674 // Printable
	nparams 1
	  param in name "pageIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 881154 // IndexOutOfBoundsException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link Printable} instance responsible for rendering
the page specified by <code>pageIndex</code>.
@param pageIndex the zero based index of the page whose
                 <code>Printable</code> is being requested
@return the <code>Printable</code> that renders the page.
@throws IndexOutOfBoundsException if the <code>Pageable</code>
           does not contain the requested page
"
      end

      operation 6736898 "setPage"
	public explicit_return_type "void"
	nparams 3
	  param in name "pageIndex" explicit_type "int"
	  param inout name "painter" type class_ref 428674 // Printable
	  param inout name "page" type class_ref 901634 // PageFormat
	nexceptions 1
	  exception class_ref 881154 // IndexOutOfBoundsException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>PageFormat</code> and the <code>Painter</code> for a
specified page number.
@param pageIndex the zero based index of the page whose
                 painter and format is altered
@param painter   the <code>Printable</code> instance that
                 renders the page
@param page      the size and orientation of the page
@throws IndexOutOfBoundsException if the specified
         page is not already in this <code>Book</code>
@throws NullPointerException if the <code>painter</code> or
         <code>page</code> argument is <code>null</code>
"
      end

      operation 6737026 "append"
	public explicit_return_type "void"
	nparams 2
	  param inout name "painter" type class_ref 428674 // Printable
	  param inout name "page" type class_ref 901634 // PageFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a single page to the end of this <code>Book</code>.
@param painter   the <code>Printable</code> instance that
                 renders the page
@param page      the size and orientation of the page
@throws NullPointerException
         If the <code>painter</code> or <code>page</code>
         argument is <code>null</code>
"
      end

      operation 6737154 "append"
	public explicit_return_type "void"
	nparams 3
	  param inout name "painter" type class_ref 428674 // Printable
	  param inout name "page" type class_ref 901634 // PageFormat
	  param in name "numPages" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends <code>numPages</code> pages to the end of this
<code>Book</code>.  Each of the pages is associated with
<code>page</code>.
@param painter   the <code>Printable</code> instance that renders
                 the page
@param page      the size and orientation of the page
@param numPages  the number of pages to be added to the
                 this <code>Book</code>.
@throws NullPointerException
         If the <code>painter</code> or <code>page</code>
         argument is <code>null</code>
"
      end

      class 901762 "BookPage"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3082882 // mFormat (<unidirectional association>)
	  relation 3082882 --->
	    a role_name "mFormat" private
	      comment "
 The size and orientation of the page.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3082882 // mFormat (<unidirectional association>)
	    b parent class_ref 901634 // PageFormat
	end

	classrelation 3083010 // mPainter (<unidirectional association>)
	  relation 3083010 --->
	    a role_name "mPainter" private
	      comment "
The instance that will draw the page.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3083010 // mPainter (<unidirectional association>)
	    b parent class_ref 428674 // Printable
	end

	operation 6737410 "BookPage"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "painter" type class_ref 428674 // Printable
	    param inout name "format" type class_ref 901634 // PageFormat
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "A new instance where 'format' describes the page's
size and orientation and 'painter' is the instance
that will draw the page's graphics.
@throws  NullPointerException
         If the <code>painter</code> or <code>format</code>
         argument is <code>null</code>
"
	end

	operation 6737538 "getPrintable"
	  package return_type class_ref 428674 // Printable
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the instance that paints the
page.
"
	end

	operation 6737666 "getPageFormat"
	  package return_type class_ref 901634 // PageFormat
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the format of the page.
"
	end
      end

      operation 6737282 "getPage"
	private return_type class_ref 901762 // BookPage
	nparams 1
	  param in name "pageIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 742274 // ArrayIndexOutOfBoundsException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the BookPage for the page specified by 'pageIndex'.
"
      end
    end

    class 901506 "Pageable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Pageable</code> implementation represents a set of
pages to be printed. The <code>Pageable</code> object returns
the total number of pages in the set as well as the
{@link PageFormat} and {@link Printable} for a specified page.
@see java.awt.print.PageFormat
@see java.awt.print.Printable
"
      attribute 1624450 "UNKNOWN_NUMBER_OF_PAGES"
	public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This constant is returned from the
{@link #getNumberOfPages() getNumberOfPages}
method if a <code>Pageable</code> implementation does not know
the number of pages in its set.

"
      end

      operation 6736002 "getNumberOfPages"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of pages in the set.
To enable advanced printing features,
it is recommended that <code>Pageable</code>
implementations return the true number of pages
rather than the
UNKNOWN_NUMBER_OF_PAGES constant.
@return the number of pages in this <code>Pageable</code>.
"
      end

      operation 6736130 "getPageFormat"
	public return_type class_ref 901634 // PageFormat
	nparams 1
	  param in name "pageIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 881154 // IndexOutOfBoundsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>PageFormat</code> of the page specified by
<code>pageIndex</code>.
@param pageIndex the zero based index of the page whose
           <code>PageFormat</code> is being requested
@return the <code>PageFormat</code> describing the size and
         orientation.
@throws IndexOutOfBoundsException if
         the <code>Pageable</code> does not contain the requested
         page.
"
      end

      operation 6736258 "getPrintable"
	public return_type class_ref 428674 // Printable
	nparams 1
	  param in name "pageIndex" explicit_type "int"
	nexceptions 1
	  exception class_ref 881154 // IndexOutOfBoundsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Printable</code> instance responsible for
rendering the page specified by <code>pageIndex</code>.
@param pageIndex the zero based index of the page whose
           <code>Printable</code> is being requested
@return the <code>Printable</code> that renders the page.
@throws IndexOutOfBoundsException if
           the <code>Pageable</code> does not contain the requested
           page.
"
      end
    end

    class 901634 "PageFormat"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>PageFormat</code> class describes the size and
orientation of a page to be printed.
"
      classrelation 3083138 // <realization>
	relation 3083138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3083138 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1624578 "LANDSCAPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Class Constants 

 The origin is at the bottom left of the paper with
 x running bottom to top and y running left to right.
 Note that this is not the Macintosh landscape but
 is the Window's and PostScript landscape.

"
      end

      attribute 1624706 "PORTRAIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The origin is at the top left of the paper with
 x running to the right and y running down the
 paper.

"
      end

      attribute 1624834 "REVERSE_LANDSCAPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The origin is at the top right of the paper with x
 running top to bottom and y running right to left.
 Note that this is the Macintosh landscape.

"
      end

      classrelation 3083266 // mPaper (<unidirectional association>)
	relation 3083266 --->
	  a role_name "mPaper" private
	    comment " Instance Variables 

A description of the physical piece of paper.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3083266 // mPaper (<unidirectional association>)
	  b parent class_ref 901890 // Paper
      end

      attribute 1624962 "mOrientation"
	private explicit_type "int"
	init_value " PORTRAIT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The orientation of the current page. This will be
one of the constants: PORTRIAT, LANDSCAPE, or
REVERSE_LANDSCAPE,

"
      end

      operation 6737794 "PageFormat"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors 

Creates a default, portrait-oriented
<code>PageFormat</code>.
"
      end

      operation 6737922 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Instance Methods 

Makes a copy of this <code>PageFormat</code> with the same
contents as this <code>PageFormat</code>.
@return a copy of this <code>PageFormat</code>.
"
      end

      operation 6738050 "getWidth"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width, in 1/72nds of an inch, of the page.
This method takes into account the orientation of the
page when determining the width.
@return the width of the page.
"
      end

      operation 6738178 "getHeight"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the height, in 1/72nds of an inch, of the page.
This method takes into account the orientation of the
page when determining the height.
@return the height of the page.
"
      end

      operation 6738306 "getImageableX"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the x coordinate of the upper left point of the
imageable area of the <code>Paper</code> object
associated with this <code>PageFormat</code>.
This method takes into account the
orientation of the page.
@return the x coordinate of the upper left point of the
imageable area of the <code>Paper</code> object
associated with this <code>PageFormat</code>.
"
      end

      operation 6738434 "getImageableY"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the y coordinate of the upper left point of the
imageable area of the <code>Paper</code> object
associated with this <code>PageFormat</code>.
This method takes into account the
orientation of the page.
@return the y coordinate of the upper left point of the
imageable area of the <code>Paper</code> object
associated with this <code>PageFormat</code>.
"
      end

      operation 6738562 "getImageableWidth"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width, in 1/72nds of an inch, of the imageable
area of the page. This method takes into account the orientation
of the page.
@return the width of the page.
"
      end

      operation 6738690 "getImageableHeight"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the height, in 1/72nds of an inch, of the imageable
area of the page. This method takes into account the orientation
of the page.
@return the height of the page.
"
      end

      operation 6738818 "getPaper"
	public return_type class_ref 901890 // Paper
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the {@link Paper} object associated
with this <code>PageFormat</code>.  Changes made to the
<code>Paper</code> object returned from this method do not
affect the <code>Paper</code> object of this
<code>PageFormat</code>.  To update the <code>Paper</code>
object of this <code>PageFormat</code>, create a new
<code>Paper</code> object and set it into this
<code>PageFormat</code> by using the {@link #setPaper(Paper)}
method.
@return a copy of the <code>Paper</code> object associated
         with this <code>PageFormat</code>.
@see #setPaper
"
      end

      operation 6738946 "setPaper"
	public explicit_return_type "void"
	nparams 1
	  param inout name "paper" type class_ref 901890 // Paper
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Paper</code> object for this
<code>PageFormat</code>.
@param paper the <code>Paper</code> object to which to set
the <code>Paper</code> object for this <code>PageFormat</code>.
@exception NullPointerException
             a null paper instance was passed as a parameter.
@see #getPaper
"
      end

      operation 6739074 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the page orientation. <code>orientation</code> must be
one of the constants: PORTRAIT, LANDSCAPE,
or REVERSE_LANDSCAPE.
@param orientation the new orientation for the page
@throws IllegalArgumentException if
         an unknown orientation was requested
@see #getOrientation
"
      end

      operation 6739202 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the orientation of this <code>PageFormat</code>.
@return this <code>PageFormat</code> object's orientation.
@see #setOrientation
"
      end

      operation 6739330 "getMatrix"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a transformation matrix that translates user
space rendering to the requested orientation
of the page.  The values are placed into the
array as
{&nbsp;m00,&nbsp;m10,&nbsp;m01,&nbsp;m11,&nbsp;m02,&nbsp;m12} in
the form required by the {@link AffineTransform}
constructor.
@return the matrix used to translate user space rendering
to the orientation of the page.
@see java.awt.geom.AffineTransform
"
      end
    end

    class 901890 "Paper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Paper</code> class describes the physical characteristics of
a piece of paper.
<p>
When creating a <code>Paper</code> object, it is the application's
responsibility to ensure that the paper size and the imageable area
are compatible.  For example, if the paper size is changed from
11 x 17 to 8.5 x 11, the application might need to reduce the
imageable area so that whatever is printed fits on the page.
<p>
@see #setSize(double, double)
@see #setImageableArea(double, double, double, double)
"
      classrelation 3083394 // <realization>
	relation 3083394 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3083394 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1625090 "INCH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 72"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Private Class Variables 
"
      end

      attribute 1625218 "LETTER_WIDTH"
	class_attribute const_attribute private explicit_type "double"
	init_value " 8.5 * INCH"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1625346 "LETTER_HEIGHT"
	class_attribute const_attribute private explicit_type "double"
	init_value " 11 * INCH"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1625474 "mHeight"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Instance Variables 

The height of the physical page in 1/72nds
of an inch. The number is stored as a floating
point value rather than as an integer
to facilitate the conversion from metric
units to 1/72nds of an inch and then back.
(This may or may not be a good enough reason
for a float).

"
      end

      attribute 1625602 "mWidth"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The width of the physical page in 1/72nds
of an inch.

"
      end

      classrelation 3083522 // mImageableArea (<unidirectional association>)
	relation 3083522 --->
	  a role_name "mImageableArea" private
	    comment "
The area of the page on which drawing will
be visable. The area outside of this
rectangle but on the Page generally
reflects the printer's hardware margins.
The origin of the physical page is
at (0, 0) with this rectangle provided
in that coordinate system.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3083522 // mImageableArea (<unidirectional association>)
	  b parent class_ref 380674 // Rectangle2D
      end

      operation 6739458 "Paper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors 

Creates a letter sized piece of paper
with one inch margins.
"
      end

      operation 6739586 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Instance Methods 

Creates a copy of this <code>Paper</code> with the same contents
as this <code>Paper</code>.
@return a copy of this <code>Paper</code>.
"
      end

      operation 6739714 "getHeight"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the height of the page in 1/72nds of an inch.
@return the height of the page described by this
         <code>Paper</code>.
"
      end

      operation 6739842 "setSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "double"
	  param in name "height" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the width and height of this <code>Paper</code>
object, which represents the properties of the page onto
which printing occurs.
The dimensions are supplied in 1/72nds of
an inch.
@param width the value to which to set this <code>Paper</code>
object's width
@param height the value to which to set this <code>Paper</code>
object's height
"
      end

      operation 6739970 "getWidth"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width of the page in 1/72nds
of an inch.
@return the width of the page described by this
<code>Paper</code>.
"
      end

      operation 6740098 "setImageableArea"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "width" explicit_type "double"
	  param in name "height" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the imageable area of this <code>Paper</code>.  The
imageable area is the area on the page in which printing
occurs.
@param x the X coordinate to which to set the
upper-left corner of the imageable area of this <code>Paper</code>
@param y the Y coordinate to which to set the
upper-left corner of the imageable area of this <code>Paper</code>
@param width the value to which to set the width of the
imageable area of this <code>Paper</code>
@param height the value to which to set the height of the
imageable area of this <code>Paper</code>
"
      end

      operation 6740226 "getImageableX"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the x coordinate of the upper-left corner of this
<code>Paper</code> object's imageable area.
@return the x coordinate of the imageable area.
"
      end

      operation 6740354 "getImageableY"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the y coordinate of the upper-left corner of this
<code>Paper</code> object's imageable area.
@return the y coordinate of the imageable area.
"
      end

      operation 6740482 "getImageableWidth"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width of this <code>Paper</code> object's imageable
area.
@return the width of the imageable area.
"
      end

      operation 6740610 "getImageableHeight"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the height of this <code>Paper</code> object's imageable
area.
@return the height of the imageable area.
"
      end
    end

    class 902018 "PrinterAbortException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>PrinterAbortException</code> class is a subclass of
{@link PrinterException} and is used to indicate that a user
or application has terminated the print job while it was in
the process of printing.
"
      classrelation 3083778 // <generalisation>
	relation 3083778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3083778 // <generalisation>
	  b parent class_ref 428162 // PrinterException
      end

      operation 6741122 "PrinterAbortException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PrinterAbortException</code> with no
detail message.
"
      end

      operation 6741250 "PrinterAbortException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PrinterAbortException</code> with
the specified detail message.
@param msg the message to be generated when a
<code>PrinterAbortException</code> is thrown
"
      end
    end

    class 902146 "PrinterGraphics"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>PrinterGraphics</code> interface is implemented by
{@link java.awt.Graphics} objects that are passed to
{@link Printable} objects to render a page. It allows an
application to find the {@link PrinterJob} object that is
controlling the printing.
"
      operation 6741378 "getPrinterJob"
	public return_type class_ref 902274 // PrinterJob
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>PrinterJob</code> that is controlling the
current rendering request.
@return the <code>PrinterJob</code> controlling the current
rendering request.
@see java.awt.print.Printable
"
      end
    end

    class 902274 "PrinterJob"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>PrinterJob</code> class is the principal class that controls
printing. An application calls methods in this class to set up a job,
optionally to invoke a print dialog with the user, and then to print
the pages of the job.
"
      operation 6741890 "getPrinterJob"
	class_operation public return_type class_ref 902274 // PrinterJob
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public Class Methods 

Creates and returns a <code>PrinterJob</code> which is initially
associated with the default printer.
If no printers are available on the system, a PrinterJob will still
be returned from this method, but <code>getPrintService()</code>
will return <code>null</code>, and calling
{@link #print() print} with this <code>PrinterJob</code> might
generate an exception.  Applications that need to determine if
there are suitable printers before creating a <code>PrinterJob</code>
should ensure that the array returned from
{@link #lookupPrintServices() lookupPrintServices} is not empty.
@return a new <code>PrinterJob</code>.

@throws  SecurityException if a security manager exists and its
         {@link java.lang.SecurityManager#checkPrintJobAccess}
         method disallows this thread from creating a print job request
"
      end

      operation 6742018 "lookupPrintServices"
	class_operation public return_type class_ref 428418 // PrintService
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience method which looks up 2D print services.
Services returned from this method may be installed on
<code>PrinterJob</code>s which support print services.
Calling this method is equivalent to calling
{@link javax.print.PrintServiceLookup#lookupPrintServices(
DocFlavor, AttributeSet)
PrintServiceLookup.lookupPrintServices()}
and specifying a Pageable DocFlavor.
@return a possibly empty array of 2D print services.
@since     1.4
"
      end

      operation 6742146 "lookupStreamPrintServices"
	class_operation public return_type class_ref 902530 // StreamPrintServiceFactory
	nparams 1
	  param inout name "mimeType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience method which locates factories for stream print
services which can image 2D graphics.
Sample usage :
<pre>{@code
FileOutputStream outstream;
StreamPrintService psPrinter;
String psMimeType = \"application/postscript\";
PrinterJob pj = PrinterJob.getPrinterJob();

StreamPrintServiceFactory[] factories =
    PrinterJob.lookupStreamPrintServices(psMimeType);
if (factories.length > 0) {
    try {
        outstream = new File(\"out.ps\");
        psPrinter =  factories[0].getPrintService(outstream);
        // psPrinter can now be set as the service on a PrinterJob
        pj.setPrintService(psPrinter)
    } catch (Exception e) {
        e.printStackTrace();
    }
}
}</pre>
Services returned from this method may be installed on
<code>PrinterJob</code> instances which support print services.
Calling this method is equivalent to calling
{@link javax.print.StreamPrintServiceFactory#lookupStreamPrintServiceFactories(DocFlavor, String)
StreamPrintServiceFactory.lookupStreamPrintServiceFactories()
} and specifying a Pageable DocFlavor.

@param mimeType the required output format, or null to mean any format.
@return a possibly empty array of 2D stream print service factories.
@since     1.4
"
      end

      operation 6742274 "PrinterJob"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public Methods 

A <code>PrinterJob</code> object should be created using the
static {@link #getPrinterJob() getPrinterJob} method.
"
      end

      operation 6742402 "getPrintService"
	public return_type class_ref 428418 // PrintService
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the service (printer) for this printer job.
Implementations of this class which do not support print services
may return null.  null will also be returned if no printers are
available.
@return the service for this printer job.
@see #setPrintService(PrintService)
@see #getPrinterJob()
@since     1.4
"
      end

      operation 6742530 "setPrintService"
	public explicit_return_type "void"
	nparams 1
	  param inout name "service" type class_ref 428418 // PrintService
	nexceptions 1
	  exception class_ref 428162 // PrinterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate this PrinterJob with a new PrintService.
This method is overridden by subclasses which support
specifying a Print Service.

Throws <code>PrinterException</code> if the specified service
cannot support the <code>Pageable</code> and
<code>Printable</code> interfaces necessary to support 2D printing.
@param service a print service that supports 2D printing
@exception PrinterException if the specified service does not support
2D printing, or this PrinterJob class does not support
setting a 2D print service, or the specified service is
otherwise not a valid print service.
@see #getPrintService
@since     1.4
"
      end

      operation 6742658 "setPrintable"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "painter" type class_ref 428674 // Printable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>painter</code> to render the pages.  The pages in the
document to be printed by this
<code>PrinterJob</code> are rendered by the {@link Printable}
object, <code>painter</code>.  The {@link PageFormat} for each page
is the default page format.
@param painter the <code>Printable</code> that renders each page of
the document.
"
      end

      operation 6742786 "setPrintable"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "painter" type class_ref 428674 // Printable
	  param inout name "format" type class_ref 901634 // PageFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>painter</code> to render the pages in the specified
<code>format</code>.  The pages in the document to be printed by
this <code>PrinterJob</code> are rendered by the
<code>Printable</code> object, <code>painter</code>. The
<code>PageFormat</code> of each page is <code>format</code>.
@param painter the <code>Printable</code> called to render
         each page of the document
@param format the size and orientation of each page to
                  be printed
"
      end

      operation 6742914 "setPageable"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "document" type class_ref 901506 // Pageable
	nexceptions 1
	  exception class_ref 521346 // NullPointerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries <code>document</code> for the number of pages and
the <code>PageFormat</code> and <code>Printable</code> for each
page held in the <code>Pageable</code> instance,
<code>document</code>.
@param document the pages to be printed. It can not be
<code>null</code>.
@exception NullPointerException the <code>Pageable</code> passed in
was <code>null</code>.
@see PageFormat
@see Printable
"
      end

      operation 6743042 "printDialog"
	abstract public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Presents a dialog to the user for changing the properties of
the print job.
This method will display a native dialog if a native print
service is selected, and user choice of printers will be restricted
to these native print services.
To present the cross platform print dialog for all services,
including native ones instead use
<code>printDialog(PrintRequestAttributeSet)</code>.
<p>
PrinterJob implementations which can use PrintService's will update
the PrintService for this PrinterJob to reflect the new service
selected by the user.
@return <code>true</code> if the user does not cancel the dialog;
<code>false</code> otherwise.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6743170 "printDialog"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "attributes" type class_ref 428546 // PrintRequestAttributeSet
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience method which displays a cross-platform print dialog
for all services which are capable of printing 2D graphics using the
<code>Pageable</code> interface. The selected printer when the
dialog is initially displayed will reflect the print service currently
attached to this print job.
If the user changes the print service, the PrinterJob will be
updated to reflect this, unless the user cancels the dialog.
As well as allowing the user to select the destination printer,
the user can also select values of various print request attributes.
<p>
The attributes parameter on input will reflect the applications
required initial selections in the user dialog. Attributes not
specified display using the default for the service. On return it
will reflect the user's choices. Selections may be updated by
the implementation to be consistent with the supported values
for the currently selected print service.
<p>
As the user scrolls to a new print service selection, the values
copied are based on the settings for the previous service, together
with any user changes. The values are not based on the original
settings supplied by the client.
<p>
With the exception of selected printer, the PrinterJob state is
not updated to reflect the user's changes.
For the selections to affect a printer job, the attributes must
be specified in the call to the
<code>print(PrintRequestAttributeSet)</code> method. If using
the Pageable interface, clients which intend to use media selected
by the user must create a PageFormat derived from the user's
selections.
If the user cancels the dialog, the attributes will not reflect
any changes made by the user.
@param attributes on input is application supplied attributes,
on output the contents are updated to reflect user choices.
This parameter may not be null.
@return <code>true</code> if the user does not cancel the dialog;
<code>false</code> otherwise.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@exception NullPointerException if <code>attributes</code> parameter
is null.
@see java.awt.GraphicsEnvironment#isHeadless
@since     1.4

"
      end

      operation 6743298 "pageDialog"
	abstract public return_type class_ref 901634 // PageFormat
	nparams 1
	  param inout name "page" type class_ref 901634 // PageFormat
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Displays a dialog that allows modification of a
<code>PageFormat</code> instance.
The <code>page</code> argument is used to initialize controls
in the page setup dialog.
If the user cancels the dialog then this method returns the
original <code>page</code> object unmodified.
If the user okays the dialog then this method returns a new
<code>PageFormat</code> object with the indicated changes.
In either case, the original <code>page</code> object is
not modified.
@param page the default <code>PageFormat</code> presented to the
                 user for modification
@return    the original <code>page</code> object if the dialog
           is cancelled; a new <code>PageFormat</code> object
           containing the format indicated by the user if the
           dialog is acknowledged.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since     1.2
"
      end

      operation 6743426 "pageDialog"
	public return_type class_ref 901634 // PageFormat
	nparams 1
	  param inout name "attributes" type class_ref 428546 // PrintRequestAttributeSet
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience method which displays a cross-platform page setup dialog.
The choices available will reflect the print service currently
set on this PrinterJob.
<p>
The attributes parameter on input will reflect the client's
required initial selections in the user dialog. Attributes which are
not specified display using the default for the service. On return it
will reflect the user's choices. Selections may be updated by
the implementation to be consistent with the supported values
for the currently selected print service.
<p>
The return value will be a PageFormat equivalent to the
selections in the PrintRequestAttributeSet.
If the user cancels the dialog, the attributes will not reflect
any changes made by the user, and the return value will be null.
@param attributes on input is application supplied attributes,
on output the contents are updated to reflect user choices.
This parameter may not be null.
@return a page format if the user does not cancel the dialog;
<code>null</code> otherwise.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@exception NullPointerException if <code>attributes</code> parameter
is null.
@see java.awt.GraphicsEnvironment#isHeadless
@since     1.4

"
      end

      operation 6743554 "defaultPage"
	abstract public return_type class_ref 901634 // PageFormat
	nparams 1
	  param inout name "page" type class_ref 901634 // PageFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones the <code>PageFormat</code> argument and alters the
clone to describe a default page size and orientation.
@param page the <code>PageFormat</code> to be cloned and altered
@return clone of <code>page</code>, altered to describe a default
                     <code>PageFormat</code>.
"
      end

      operation 6743682 "defaultPage"
	public return_type class_ref 901634 // PageFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>PageFormat</code> instance and
sets it to a default size and orientation.
@return a <code>PageFormat</code> set to a default size and
         orientation.
"
      end

      operation 6743810 "getPageFormat"
	public return_type class_ref 901634 // PageFormat
	nparams 1
	  param inout name "attributes" type class_ref 428546 // PrintRequestAttributeSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates a <code>PageFormat</code> with values consistent with those
supported by the current <code>PrintService</code> for this job
(ie the value returned by <code>getPrintService()</code>) and media,
printable area and orientation contained in <code>attributes</code>.
<p>
Calling this method does not update the job.
It is useful for clients that have a set of attributes obtained from
<code>printDialog(PrintRequestAttributeSet attributes)</code>
and need a PageFormat to print a Pageable object.
@param attributes a set of printing attributes, for example obtained
from calling printDialog. If <code>attributes</code> is null a default
PageFormat is returned.
@return a <code>PageFormat</code> whose settings conform with
those of the current service and the specified attributes.
@since 1.6
"
      end

      operation 6743938 "validatePage"
	abstract public return_type class_ref 901634 // PageFormat
	nparams 1
	  param inout name "page" type class_ref 901634 // PageFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the clone of <code>page</code> with its settings
adjusted to be compatible with the current printer of this
<code>PrinterJob</code>.  For example, the returned
<code>PageFormat</code> could have its imageable area
adjusted to fit within the physical area of the paper that
is used by the current printer.
@param page the <code>PageFormat</code> that is cloned and
         whose settings are changed to be compatible with
         the current printer
@return a <code>PageFormat</code> that is cloned from
         <code>page</code> and whose settings are changed
         to conform with this <code>PrinterJob</code>.
"
      end

      operation 6744066 "print"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 428162 // PrinterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a set of pages.
@exception PrinterException an error in the print system
           caused the job to be aborted.
@see Book
@see Pageable
@see Printable
"
      end

      operation 6744194 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "attributes" type class_ref 428546 // PrintRequestAttributeSet
	nexceptions 1
	  exception class_ref 428162 // PrinterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a set of pages using the settings in the attribute
set. The default implementation ignores the attribute set.
<p>
Note that some attributes may be set directly on the PrinterJob
by equivalent method calls, (for example), copies:
<code>setcopies(int)</code>, job name: <code>setJobName(String)</code>
and specifying media size and orientation though the
<code>PageFormat</code> object.
<p>
If a supported attribute-value is specified in this attribute set,
it will take precedence over the API settings for this print()
operation only.
The following behaviour is specified for PageFormat:
If a client uses the Printable interface, then the
<code>attributes</code> parameter to this method is examined
for attributes which specify media (by size), orientation, and
imageable area, and those are used to construct a new PageFormat
which is passed to the Printable object's print() method.
See {@link Printable} for an explanation of the required
behaviour of a Printable to ensure optimal printing via PrinterJob.
For clients of the Pageable interface, the PageFormat will always
be as supplied by that interface, on a per page basis.
<p>
These behaviours allow an application to directly pass the
user settings returned from
<code>printDialog(PrintRequestAttributeSet attributes</code> to
this print() method.
<p>

@param attributes a set of attributes for the job
@exception PrinterException an error in the print system
           caused the job to be aborted.
@see Book
@see Pageable
@see Printable
@since 1.4
"
      end

      operation 6744322 "setCopies"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "copies" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of copies to be printed.
@param copies the number of copies to be printed
@see #getCopies
"
      end

      operation 6744450 "getCopies"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of copies to be printed.
@return the number of copies to be printed.
@see #setCopies
"
      end

      operation 6744578 "getUserName"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the printing user.
@return the name of the printing user
"
      end

      operation 6744706 "setJobName"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "jobName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the name of the document to be printed.
The document name can not be <code>null</code>.
@param jobName the name of the document to be printed
@see #getJobName
"
      end

      operation 6744834 "getJobName"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the document to be printed.
@return the name of the document to be printed.
@see #setJobName
"
      end

      operation 6744962 "cancel"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels a print job that is in progress.  If
{@link #print() print} has been called but has not
returned then this method signals
that the job should be cancelled at the next
chance. If there is no print job in progress then
this call does nothing.
"
      end

      operation 6745090 "isCancelled"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if a print job is
in progress, but is going to be cancelled
at the next opportunity; otherwise returns
<code>false</code>.
@return <code>true</code> if the job in progress
is going to be cancelled; <code>false</code> otherwise.
"
      end
    end

    class 902402 "PrinterIOException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>PrinterIOException</code> class is a subclass of
{@link PrinterException} and is used to indicate that an IO error
of some sort has occurred while printing.

<p>As of release 1.4, this exception has been retrofitted to conform to
the general purpose exception-chaining mechanism.  The
\"<code>IOException</code> that terminated the print job\"
that is provided at construction time and accessed via the
{@link #getIOException()} method is now known as the <i>cause</i>,
and may be accessed via the {@link Throwable#getCause()} method,
as well as the aforementioned \"legacy method.\"
"
      classrelation 3083906 // <generalisation>
	relation 3083906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3083906 // <generalisation>
	  b parent class_ref 428162 // PrinterException
      end

      attribute 1625986 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 5850870712125932846L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3084034 // mException (<unidirectional association>)
	relation 3084034 --->
	  a role_name "mException" private
	    comment "
The IO error that terminated the print job.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3084034 // mException (<unidirectional association>)
	  b parent class_ref 146818 // IOException
      end

      operation 6741506 "PrinterIOException"
	public explicit_return_type ""
	nparams 1
	  param inout name "exception" type class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PrinterIOException</code>
with the string representation of the specified
{@link IOException}.
@param exception the specified <code>IOException</code>
"
      end

      operation 6741634 "getIOException"
	public return_type class_ref 146818 // IOException
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>IOException</code> that terminated
the print job.

<p>This method predates the general-purpose exception chaining facility.
The {@link Throwable#getCause()} method is now the preferred means of
obtaining this information.

@return the <code>IOException</code> that terminated
the print job.
@see IOException
"
      end

      operation 6741762 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the the cause of this exception (the <code>IOException</code>
that terminated the print job).

@return  the cause of this exception.
@since   1.4
"
      end
    end
  end

  deploymentview 166658 "print"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 656642 "Pageable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 901506 // Pageable
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 656770 "Book"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 901378 // Book
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 656898 "PageFormat"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 901634 // PageFormat
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657026 "Paper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.Rectangle2D;
${definition}"
      associated_elems
	class_ref 901890 // Paper
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657154 "Printable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Graphics;
${definition}"
      associated_elems
	class_ref 428674 // Printable
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657282 "PrinterException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 428162 // PrinterException
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657410 "PrinterAbortException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 902018 // PrinterAbortException
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657538 "PrinterGraphics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 902146 // PrinterGraphics
      end
      comment "Copyright (c) 1998, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657666 "PrinterIOException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 902402 // PrinterIOException
      end
      comment "Copyright (c) 1998, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 657794 "PrinterJob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.AWTError;
import java.awt.HeadlessException;
import java.util.Enumeration;
import javax.print.DocFlavor;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.StreamPrintServiceFactory;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Media;
import javax.print.attribute.standard.MediaPrintableArea;
import javax.print.attribute.standard.MediaSize;
import javax.print.attribute.standard.MediaSizeName;
import javax.print.attribute.standard.OrientationRequested;
import sun.security.action.GetPropertyAction;
${definition}"
      associated_elems
	class_ref 902274 // PrinterJob
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
