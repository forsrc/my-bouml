class SnmpVarBind
!!!3115522.java!!!	SnmpVarBind(inout oid : SnmpOid)
        this.oid = oid ;
!!!3115650.java!!!	SnmpVarBind(inout oid : SnmpOid, inout val : SnmpValue)
        this.oid = oid ;
        this.setSnmpValue(val) ;
!!!3115778.java!!!	SnmpVarBind(inout name : String)

        if (name.startsWith(".")) {
            this.oid = new SnmpOid(name) ;
        } else {
            SnmpOidRecord record;
            try {
                int index = name.indexOf('.') ;
                handleLong(name, index);
                this.oid = new SnmpOid(name);
            }
            catch(NumberFormatException e) {
                int index = name.indexOf('.') ;
                if (index <= 0) {
                    record = resolveVarName(name) ;
                    this.oid = new SnmpOid(record.getName()) ;
                } else {
                    record = resolveVarName(name.substring(0, index)) ;
                    this.oid = new SnmpOid(record.getName() + name.substring(index)) ;
                }
            }
        }
!!!3115906.java!!!	getOid() : SnmpOid
        return this.oid ;
!!!3116034.java!!!	setOid(inout oid : SnmpOid) : void
        this.oid = oid ;
        clearValue() ;
!!!3116162.java!!!	getSnmpValue() : SnmpValue
        return this.value ;
!!!3116290.java!!!	setSnmpValue(inout val : SnmpValue) : void
        this.value= val ;
        setValueValid();
!!!3116418.java!!!	getSnmpCounter64Value() : SnmpCounter64
        return (SnmpCounter64)this.value ;
!!!3116546.java!!!	setSnmpCounter64Value(in val : long) : void
        clearValue() ;
        this.value = new SnmpCounter64(val) ;
        setValueValid() ;
!!!3116674.java!!!	getSnmpIntValue() : SnmpInt
        return (SnmpInt)this.value ;
!!!3116802.java!!!	setSnmpIntValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpInt(val) ;
        setValueValid() ;
!!!3116930.java!!!	getSnmpCounterValue() : SnmpCounter
        return (SnmpCounter)this.value ;
!!!3117058.java!!!	setSnmpCounterValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpCounter(val) ;
        setValueValid() ;
!!!3117186.java!!!	getSnmpGaugeValue() : SnmpGauge
        return (SnmpGauge)this.value ;
!!!3117314.java!!!	setSnmpGaugeValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpGauge(val) ;
        setValueValid() ;
!!!3117442.java!!!	getSnmpTimeticksValue() : SnmpTimeticks
        return (SnmpTimeticks)this.value ;
!!!3117570.java!!!	setSnmpTimeticksValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpTimeticks(val) ;
        setValueValid() ;
!!!3117698.java!!!	getSnmpOidValue() : SnmpOid
        return (SnmpOid)this.value ;
!!!3117826.java!!!	setSnmpOidValue(inout val : String) : void
        clearValue() ;
        this.value = new SnmpOid(val) ;
        setValueValid() ;
!!!3117954.java!!!	getSnmpIpAddressValue() : SnmpIpAddress
        return (SnmpIpAddress)this.value ;
!!!3118082.java!!!	setSnmpIpAddressValue(inout val : String) : void
        clearValue() ;
        this.value = new SnmpIpAddress(val) ;
        setValueValid() ;
!!!3118210.java!!!	getSnmpStringValue() : SnmpString
        return (SnmpString)this.value ;
!!!3118338.java!!!	setSnmpStringValue(inout val : String) : void
        clearValue() ;
        this.value = new SnmpString(val) ;
        setValueValid() ;
!!!3118466.java!!!	getSnmpOpaqueValue() : SnmpOpaque
        return (SnmpOpaque)this.value ;
!!!3118594.java!!!	setSnmpOpaqueValue(inout val : byte [[]]) : void
        clearValue() ;
        this.value = new SnmpOpaque(val) ;
        setValueValid() ;
!!!3118722.java!!!	getSnmpStringFixedValue() : SnmpStringFixed
        return (SnmpStringFixed)this.value ;
!!!3118850.java!!!	setSnmpStringFixedValue(inout val : String) : void
        clearValue() ;
        this.value = new SnmpStringFixed(val) ;
        setValueValid() ;
!!!3118978.java!!!	resolveVarName(inout name : String) : SnmpOidRecord

        SnmpOidTable mibTable = SnmpOid.getSnmpOidTable();
        if (mibTable == null)
            throw new SnmpStatusException(SnmpStatusException.noSuchName);
        int index = name.indexOf('.');
        if (index < 0) {
            return mibTable.resolveVarName(name);
        } else {
            return mibTable.resolveVarOid(name);
        }
!!!3119106.java!!!	getValueStatus() : int
        return status ;
!!!3119234.java!!!	getValueStatusLegend() : String
        return statusLegend[status] ;
!!!3119362.java!!!	isValidValue() : boolean
        return (status == stValueOk) ;
!!!3119490.java!!!	isUnspecifiedValue() : boolean
        return (status == stValueUnspecified) ;
!!!3119618.java!!!	clearValue() : void
        this.value = null ;
        status = stValueUnspecified ;
!!!3119746.java!!!	isOidEqual(inout var : SnmpVarBind) : boolean
        return this.oid.equals(var.oid) ;
!!!3119874.java!!!	addInstance(in inst : long) : void
        oid.append(inst) ;
!!!3120002.java!!!	addInstance(inout inst : long [[]]) : void
        oid.addToOid(inst) ;
!!!3120130.java!!!	addInstance(inout inst : String) : void
        if (inst != null) {
            oid.addToOid(inst) ;
        }
        return ;
!!!3120258.java!!!	insertInOid(in oid : int) : void
        this.oid.insert(oid) ;
!!!3120386.java!!!	appendInOid(inout oid : SnmpOid) : void
        this.oid.append(oid) ;
!!!3120514.java!!!	hasVarBindException() : boolean
        switch (status) {
        case  stValueUnspecified :
        case  stValueNoSuchObject :
        case  stValueNoSuchInstance :
        case  stValueEndOfMibView :
            return true ;
        }
        return false ;
!!!3120642.java!!!	copyValueAndOid(inout var : SnmpVarBind) : void
        setOid((SnmpOid) (var.oid.clone())) ;
        copyValue(var) ;
!!!3120770.java!!!	copyValue(inout var : SnmpVarBind) : void
        if (var.isValidValue()) {
            this.value = var.getSnmpValue().duplicate() ;
            setValueValid() ;
        } else {
            status = var.getValueStatus() ;
            if (status == stValueEndOfMibView)        value=endOfMibView;
            else if (status == stValueNoSuchObject)   value=noSuchObject;
            else if (status == stValueNoSuchInstance) value=noSuchInstance;
        }
!!!3120898.java!!!	cloneWithoutValue() : Object
        SnmpOid noid = (SnmpOid)this.oid.clone() ;
        return new SnmpVarBind(noid) ;
!!!3121026.java!!!	clone() : SnmpVarBind
        // FindBugs will issue a warning here, because super.clone()
        // is not called. But this is actually OK because we construct
        // a brand new object.
        SnmpVarBind v = new SnmpVarBind() ;
        v.copyValueAndOid(this) ;
        return v ;
!!!3121154.java!!!	getStringValue() : String
        return this.value.toString() ;
!!!3121282.java!!!	setNoSuchObject() : void
        value=noSuchObject;
        status=stValueNoSuchObject;
!!!3121410.java!!!	setNoSuchInstance() : void
        value=noSuchInstance;
        status=stValueNoSuchInstance;
!!!3121538.java!!!	setEndOfMibView() : void
        value=endOfMibView;
        status=stValueEndOfMibView;
!!!3121666.java!!!	toString() : String
        final StringBuilder s = new StringBuilder(400) ;
        s.append("Object ID : ").append(this.oid.toString()) ;

        if (isValidValue()) {
            s.append("  (Syntax : ").append(this.value.getTypeName()).append(")\n") ;
            s.append("Value : ").append(this.value.toString()) ;
        } else {
            s.append("\n" + "Value Exception : ").append(getValueStatusLegend()) ;
        }
        return s.toString() ;
!!!3121794.java!!!	setValueValid() : void
        if (value == endOfMibView)        status=stValueEndOfMibView;
        else if (value == noSuchObject)   status=stValueNoSuchObject;
        else if (value == noSuchInstance) status=stValueNoSuchInstance;
        else status = stValueOk ;
!!!3121922.java!!!	handleLong(inout oid : String, in index : int) : void

        String str;
        if (index >0) {
            str= oid.substring(0, index);
        } else {
            str= oid ;
        }

        // just parse the element.
        //
        Long.parseLong(str);
