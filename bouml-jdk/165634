format 222
"runtime" // jdk1.8::com::sun::org::apache::xalan::internal::xsltc::runtime
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xalan/internal/xsltc/runtime/"
  java_package "com.sun.org.apache.xalan.internal.xsltc.runtime"
  classview 159234 "runtime"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 621442 "AbstractTranslet"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Jacek Ambroziak
@author Santiago Pericas-Geertsen
@author Morten Jorgensen
@author G. Todd Miller
@author John Howard, JohnH@schemasoft.com
"
      classrelation 1733122 // <realization>
	relation 1733122 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1733122 // <realization>
	  b parent class_ref 590722 // Translet
      end

      classrelation 1733250 // _version (<unidirectional association>)
	relation 1733250 --->
	  a role_name "_version" init_value " \"1.0\"" public
	    comment " These attributes are extracted from the xsl:output element. They also
 appear as fields (with the same type, only public) in Output.java
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733250 // _version (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1733378 // _method (<unidirectional association>)
	relation 1733378 --->
	  a role_name "_method" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733378 // _method (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1733506 // _encoding (<unidirectional association>)
	relation 1733506 --->
	  a role_name "_encoding" init_value " \"UTF-8\"" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733506 // _encoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 873858 "_omitHeader"
	public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1733634 // _standalone (<unidirectional association>)
	relation 1733634 --->
	  a role_name "_standalone" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733634 // _standalone (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 873986 "_isStandalone"
	public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "see OutputPropertiesFactory.ORACLE_IS_STANDALONE
"
      end

      classrelation 1733762 // _doctypePublic (<unidirectional association>)
	relation 1733762 --->
	  a role_name "_doctypePublic" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733762 // _doctypePublic (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1733890 // _doctypeSystem (<unidirectional association>)
	relation 1733890 --->
	  a role_name "_doctypeSystem" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733890 // _doctypeSystem (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 874114 "_indent"
	public explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1734018 // _mediaType (<unidirectional association>)
	relation 1734018 --->
	  a role_name "_mediaType" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734018 // _mediaType (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1734146 // _cdata (<unidirectional association>)
	relation 1734146 --->
	  a role_name "_cdata" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734146 // _cdata (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 874242 "_indentamount"
	public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 874370 "FIRST_TRANSLET_VERSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 874498 "VER_SPLIT_NAMES_ARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 101"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 874626 "CURRENT_TRANSLET_VERSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " VER_SPLIT_NAMES_ARRAY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 874754 "transletVersion"
	protected explicit_type "int"
	init_value " FIRST_TRANSLET_VERSION"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Initialize Translet version field to base value.  A class that extends
 AbstractTranslet may override this value to a more recent translet
 version; if it doesn't override the value (because it was compiled
 before the notion of a translet version was introduced, it will get
 this default value).
"
      end

      classrelation 1734274 // namesArray (<unidirectional association>)
	relation 1734274 --->
	  a role_name "namesArray" multiplicity "[]" protected
	    comment " DOM/translet handshaking - the arrays are set by the compiled translet
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1734274 // namesArray (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1734402 // urisArray (<unidirectional association>)
	relation 1734402 --->
	  a role_name "urisArray" multiplicity "[]" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1734402 // urisArray (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 874882 "typesArray"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1734530 // namespaceArray (<unidirectional association>)
	relation 1734530 --->
	  a role_name "namespaceArray" multiplicity "[]" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1734530 // namespaceArray (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1734658 // _templates (<unidirectional association>)
	relation 1734658 --->
	  a role_name "_templates" init_value " null" protected
	    comment " The Templates object that is used to create this Translet instance
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734658 // _templates (<unidirectional association>)
	  b parent class_ref 636034 // Templates
      end

      attribute 875010 "_hasIdCall"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Boolean flag to indicate whether this translet has id functions.
"
      end

      classrelation 1734786 // stringValueHandler (<unidirectional association>)
	relation 1734786 --->
	  a role_name "stringValueHandler" init_value " new StringValueHandler()" protected
	    comment " TODO - these should only be instanciated when needed
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734786 // stringValueHandler (<unidirectional association>)
	  b parent class_ref 636162 // StringValueHandler
      end

      classrelation 1734914 // EMPTYSTRING (<unidirectional association>)
	relation 1734914 --->
	  a role_name "EMPTYSTRING" init_value " \"\"" class_relation const_relation private
	    comment " Use one empty string instead of constantly instanciating String(\"\");
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734914 // EMPTYSTRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1735042 // ID_INDEX_NAME (<unidirectional association>)
	relation 1735042 --->
	  a role_name "ID_INDEX_NAME" init_value " \"##id\"" class_relation const_relation private
	    comment " This is the name of the index used for ID attributes
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735042 // ID_INDEX_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 875138 "_useServicesMechanism"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1735170 // _accessExternalStylesheet (<unidirectional association>)
	relation 1735170 --->
	  a role_name "_accessExternalStylesheet" init_value " XalanConstants.EXTERNAL_ACCESS_DEFAULT" private
	    comment "
protocols allowed for external references set by the stylesheet processing instruction, Document() function, Import and Include element.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735170 // _accessExternalStylesheet (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4061186 "printInternalState"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Debugging
**********************************************************************"
      end

      operation 4061314 "makeDOMAdapter"
	public return_type class_ref 622082 // DOMAdapter
	nparams 1
	  param inout name "dom" type class_ref 589954 // DOM
	nexceptions 1
	  exception class_ref 590338 // TransletException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wrap the initial input DOM in a dom adapter. This adapter is wrapped in
a DOM multiplexer if the document() function is used (handled by compiled
code in the translet - see compiler/Stylesheet.compileTransform()).
"
      end

      attribute 875266 "pbase"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Parameter handling
**********************************************************************
 Parameter's stack: <tt>pbase</tt> and <tt>pframe</tt> are used
 to denote the current parameter frame.
"
      end

      attribute 875394 "pframe"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Parameter handling
**********************************************************************
 Parameter's stack: <tt>pbase</tt> and <tt>pframe</tt> are used
 to denote the current parameter frame.
"
      end

      classrelation 1735298 // paramsStack (<unidirectional association>)
	relation 1735298 --->
	  a role_name "paramsStack" init_value " new ArrayList()" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735298 // paramsStack (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      operation 4061442 "pushParamFrame"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push a new parameter frame.
"
      end

      operation 4061570 "popParamFrame"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the topmost parameter frame.
"
      end

      operation 4061698 "addParameter"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new global parameter if not already in the current frame.
To setParameters of the form {http://foo.bar}xyz
This needs to get mapped to an instance variable in the class
The mapping  created so that
the global variables in the generated class become
http$colon$$flash$$flash$foo$dot$bar$colon$xyz
"
      end

      operation 4061826 "addParameter"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "isDefault" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new global or local parameter if not already in the current frame.
The 'isDefault' parameter is set to true if the value passed is the
default value from the <xsl:parameter> element's select attribute or
element body.
"
      end

      operation 4061954 "clearParameters"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the parameter stack.
"
      end

      operation 4062082 "getParameter"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value of a parameter from the current frame or
<tt>null</tt> if undefined.
"
      end

      classrelation 1735426 // _msgHandler (<unidirectional association>)
	relation 1735426 --->
	  a role_name "_msgHandler" init_value " null" private
	    comment "
Message handling - implementation of <xsl:message>
**********************************************************************
 Holds the translet's message handler - used for <xsl:message>.
 The deault message handler dumps a string stdout, but anything can be
 used, such as a dialog box for applets, etc.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735426 // _msgHandler (<unidirectional association>)
	  b parent class_ref 636290 // MessageHandler
      end

      operation 4062210 "setMessageHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 636290 // MessageHandler
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the translet's message handler - must implement MessageHandler
"
      end

      operation 4062338 "displayMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pass a message to the message handler - used by Message class.
"
      end

      classrelation 1735554 // _formatSymbols (<unidirectional association>)
	relation 1735554 --->
	  a role_name "_formatSymbols" init_value " null" public
	    comment "
Decimal number format symbol handling
**********************************************************************
 Contains decimal number formatting symbols used by FormatNumberCall
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, DecimalFormat> ${name}${value};
"
	    classrelation_ref 1735554 // _formatSymbols (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 4062466 "addDecimalFormat"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "symbols" type class_ref 636418 // DecimalFormatSymbols
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a DecimalFormat object to the _formatSymbols map.
The entry is created with the input DecimalFormatSymbols.
"
      end

      operation 4062594 "getDecimalFormat"
	public return_type class_ref 636546 // DecimalFormat
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a named DecimalFormat object from the _formatSymbols map.
"
      end

      operation 4062722 "prepassDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "document" type class_ref 589954 // DOM
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Give the translet an opportunity to perform a prepass on the document
to extract any information that it can store in an optimized form.

Currently, it only extracts information about attributes of type ID.
"
      end

      operation 4062850 "buildIDIndex"
	private explicit_return_type "void"
	nparams 1
	  param inout name "document" type class_ref 589954 // DOM
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leverages the Key Class to implement the XSLT id() function.
buildIdIndex creates the index (##id) that Key Class uses.
The index contains the element node index (int) and Id value (String).
"
      end

      operation 4062978 "postInitialization"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "After constructing the translet object, this method must be called to
perform any version-specific post-initialization that's required.
"
      end

      classrelation 1735682 // _keyIndexes (<unidirectional association>)
	relation 1735682 --->
	  a role_name "_keyIndexes" init_value " null" private
	    comment "
Index(es) for <xsl:key> / key() / id()
**********************************************************************
 Container for all indexes for xsl:key elements
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, KeyIndex> ${name}${value};
"
	    classrelation_ref 1735682 // _keyIndexes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1735810 // _emptyKeyIndex (<unidirectional association>)
	relation 1735810 --->
	  a role_name "_emptyKeyIndex" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735810 // _emptyKeyIndex (<unidirectional association>)
	  b parent class_ref 623618 // KeyIndex
      end

      attribute 875522 "_indexSize"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 875650 "_currentRootForKeys"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4063106 "setIndexSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to pass the largest DOM size to the translet.
Needed to make sure that the translet can index the whole DOM.
"
      end

      operation 4063234 "createKeyIndex"
	public return_type class_ref 623618 // KeyIndex
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a KeyIndex object of the desired size - don't want to resize!!!
"
      end

      operation 4063362 "buildKeyIndex"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param in name "node" explicit_type "int"
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to a key/id index
  @param name is the name of the index (the key or ##id)
  @param node is the node handle of the node to insert
  @param value is the value that will look up the node in the given index
"
      end

      operation 4063490 "buildKeyIndex"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty KeyIndex in the DOM case
  @param name is the name of the index (the key or ##id)
  @param dom is the DOM
"
      end

      operation 4063618 "buildKeyIndexHelper"
	private return_type class_ref 623618 // KeyIndex
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return KeyIndex for the buildKeyIndex methods. Note the difference from the
public getKeyIndex method, this method creates a new Map if keyIndexes does
not exist.

@param name the name of the index (the key or ##id)
@return a KeyIndex.
"
      end

      operation 4063746 "getKeyIndex"
	public return_type class_ref 623618 // KeyIndex
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index for a given key (or id).
The index implements our internal iterator interface
@param name the name of the index (the key or ##id)
@return a KeyIndex.
"
      end

      operation 4063874 "setRootForKeys"
	private explicit_return_type "void"
	nparams 1
	  param in name "root" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4064002 "buildKeys"
	public explicit_return_type "void"
	nparams 4
	  param inout name "document" type class_ref 589954 // DOM
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	  param in name "root" explicit_type "int"
	nexceptions 1
	  exception class_ref 590338 // TransletException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method builds key indexes - it is overridden in the compiled
translet in cases where the <xsl:key> element is used
"
      end

      operation 4064130 "setKeyIndexDom"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "document" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method builds key indexes - it is overridden in the compiled
translet in cases where the <xsl:key> element is used
"
      end

      classrelation 1735938 // _domCache (<unidirectional association>)
	relation 1735938 --->
	  a role_name "_domCache" init_value " null" private
	    comment "
DOM cache handling
**********************************************************************
 Hold the DOM cache (if any) used with this translet
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735938 // _domCache (<unidirectional association>)
	  b parent class_ref 590594 // DOMCache
      end

      operation 4064258 "setDOMCache"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cache" type class_ref 590594 // DOMCache
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the DOM cache used for additional documents loaded using the
document() function.
"
      end

      operation 4064386 "getDOMCache"
	public return_type class_ref 590594 // DOMCache
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the DOM cache used for this translet. Used by the LoadDocument
class (if present) when the document() function is used.
"
      end

      operation 4064514 "openOutputHandler"
	public return_type class_ref 590210 // SerializationHandler
	nparams 2
	  param inout name "filename" type class_ref 128130 // String
	  param inout name "append" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 590338 // TransletException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Multiple output document extension.
See compiler/TransletOutput for actual implementation.
**********************************************************************"
      end

      operation 4064642 "openOutputHandler"
	public return_type class_ref 590210 // SerializationHandler
	nparams 1
	  param inout name "filename" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 590338 // TransletException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4064770 "closeOutputHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4064898 "transform"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "document" type class_ref 589954 // DOM
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	nexceptions 1
	  exception class_ref 590338 // TransletException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Native API transformation methods - _NOT_ JAXP/TrAX
**********************************************************************

Main transform() method - this is overridden by the compiled translet
"
      end

      operation 4065026 "transform"
	public explicit_return_type "void"
	nparams 2
	  param inout name "document" type class_ref 589954 // DOM
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	nexceptions 1
	  exception class_ref 590338 // TransletException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls transform() with a given output handler
"
      end

      operation 4065154 "characters"
	public explicit_return_type "void"
	nparams 2
	  param in name "string" type class_ref 128130 // String
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	nexceptions 1
	  exception class_ref 590338 // TransletException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by some compiled code as a shortcut for passing strings to the
output handler
"
      end

      operation 4065282 "addCdataElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add's a name of an element whose text contents should be output as CDATA
"
      end

      operation 4065410 "transferOutputSettings"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transfer the output settings to the output post-processor
"
      end

      classrelation 1736066 // _auxClasses (<unidirectional association>)
	relation 1736066 --->
	  a role_name "_auxClasses" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Class<?>> ${name}${value};
"
	    classrelation_ref 1736066 // _auxClasses (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 4065538 "addAuxiliaryClass"
	public explicit_return_type "void"
	nparams 1
	  param inout name "auxClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4065666 "setAuxiliaryClasses"
	public explicit_return_type "void"
	nparams 1
	  param inout name "auxClasses" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4065794 "getAuxiliaryClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4065922 "getNamesArray"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GTM added (see pg 110)"
      end

      operation 4066050 "getUrisArray"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4066178 "getTypesArray"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4066306 "getNamespaceArray"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4066434 "hasIdCall"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4066562 "getTemplates"
	public return_type class_ref 636034 // Templates
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4066690 "setTemplates"
	public explicit_return_type "void"
	nparams 1
	  param inout name "templates" type class_ref 636034 // Templates
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4066818 "useServicesMechnism"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the state of the services mechanism feature.
"
      end

      operation 4066946 "setServicesMechnism"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the state of the services mechanism feature.
"
      end

      operation 4067074 "getAllowedProtocols"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return allowed protocols for accessing external stylesheet.
"
      end

      operation 4067202 "setAllowedProtocols"
	public explicit_return_type "void"
	nparams 1
	  param inout name "protocols" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set allowed protocols for accessing external stylesheet.
"
      end

      classrelation 1736194 // _domImplementation (<unidirectional association>)
	relation 1736194 --->
	  a role_name "_domImplementation" init_value " null" protected
	    comment "
DOMImplementation caching for basis library
**********************************************************************
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736194 // _domImplementation (<unidirectional association>)
	  b parent class_ref 636674 // DOMImplementation
      end

      operation 4067330 "newDocument"
	public return_type class_ref 378626 // Document
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "qname" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379138 // ParserConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 636162 "StringValueHandler"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Jacek Ambroziak
@author Santiago Pericas-Geertsen
@author Morten Jorgensen
"
      classrelation 1744130 // <generalisation>
	relation 1744130 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1744130 // <generalisation>
	  b parent class_ref 616962 // EmptySerializer
      end

      classrelation 1744258 // _buffer (<unidirectional association>)
	relation 1744258 --->
	  a role_name "_buffer" init_value " new StringBuilder()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1744258 // _buffer (<unidirectional association>)
	  b parent class_ref 173058 // StringBuilder
      end

      classrelation 1744386 // _str (<unidirectional association>)
	relation 1744386 --->
	  a role_name "_str" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1744386 // _str (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1744514 // EMPTY_STR (<unidirectional association>)
	relation 1744514 --->
	  a role_name "EMPTY_STR" init_value " \"\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1744514 // EMPTY_STR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 878594 "m_escaping"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 878722 "_nestedLevel"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4080898 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4081026 "getValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4081154 "characters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "characters" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4081282 "startElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4081410 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4081538 "setEscaping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "bool" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Override the setEscaping method just to indicate that this class is
 aware that that method might be called."
      end

      operation 4081666 "getValueOfPI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value of a PI must not contain the substring \"?>\". Should
that substring be present, replace it by \"? >\".
"
      end
    end

    class 636290 "MessageHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      operation 4080130 "displayMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 636802 "Attributes"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Jacek Ambroziak
@author Santiago Pericas-Geertsen
"
      classrelation 1736322 // <realization>
	relation 1736322 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1736322 // <realization>
	  b parent class_ref 636930 // AttributeList
      end

      attribute 875778 "_element"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1736450 // _document (<unidirectional association>)
	relation 1736450 --->
	  a role_name "_document" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736450 // _document (<unidirectional association>)
	  b parent class_ref 589954 // DOM
      end

      operation 4068226 "Attributes"
	public explicit_return_type ""
	nparams 2
	  param inout name "document" type class_ref 589954 // DOM
	  param in name "element" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4068354 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4068482 "getName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4068610 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4068738 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4068866 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4068994 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 637058 "BasisLibrary"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Standard XSLT functions. All standard functions expect the current node
and the DOM as their last two arguments.
"
      classrelation 1736578 // EMPTYSTRING (<unidirectional association>)
	relation 1736578 --->
	  a role_name "EMPTYSTRING" init_value " \"\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736578 // EMPTYSTRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1736706 // threadLocalStringBuilder (<unidirectional association>)
	relation 1736706 --->
	  a role_name "threadLocalStringBuilder" init_value "
        new ThreadLocal<StringBuilder> () {
            @Override protected StringBuilder initialValue() {
                return new StringBuilder();
            }
    }" class_relation const_relation private
	    comment "
Re-use a single instance of StringBuffer (per thread) in the basis library.
StringBuilder is better, however, DecimalFormat only accept StringBuffer

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<StringBuilder> ${name}${value};
"
	    classrelation_ref 1736706 // threadLocalStringBuilder (<unidirectional association>)
	  b parent class_ref 129282 // ThreadLocal
      end

      classrelation 1736834 // threadLocalStringBuffer (<unidirectional association>)
	relation 1736834 --->
	  a role_name "threadLocalStringBuffer" init_value "
        new ThreadLocal<StringBuffer> () {
            @Override protected StringBuffer initialValue() {
                return new StringBuffer();
            }
    }" class_relation const_relation private
	    comment "
ThreadLocal for StringBuffer used

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<StringBuffer> ${name}${value};
"
	    classrelation_ref 1736834 // threadLocalStringBuffer (<unidirectional association>)
	  b parent class_ref 129282 // ThreadLocal
      end

      operation 4069122 "countF"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Standard function count(node-set)
"
      end

      operation 4069250 "positionF"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Standard function position()
@deprecated This method exists only for backwards compatibility with old
            translets.  New code should not reference it.
"
      end

      operation 4069378 "sumF"
	class_operation public explicit_return_type "double"
	nparams 2
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function sum(node-set).
stringToDouble is inlined
"
      end

      operation 4069506 "stringF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param in name "node" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function string()
"
      end

      operation 4069634 "stringF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "obj" type class_ref 129538 // Object
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function string(value)
"
      end

      operation 4069762 "stringF"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "obj" type class_ref 129538 // Object
	  param in name "node" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function string(value)
"
      end

      operation 4069890 "numberF"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "node" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function number()
"
      end

      operation 4070018 "numberF"
	class_operation public explicit_return_type "double"
	nparams 2
	  param inout name "obj" type class_ref 129538 // Object
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function number(value)
"
      end

      operation 4070146 "roundF"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function round()
"
      end

      operation 4070274 "booleanF"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function boolean()
"
      end

      operation 4070402 "substringF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "value" type class_ref 128130 // String
	  param in name "start" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function substring(). Must take a double because of
conversions resulting into NaNs and rounding.
"
      end

      operation 4070530 "substringF"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "value" type class_ref 128130 // String
	  param in name "start" explicit_type "double"
	  param in name "length" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function substring(). Must take a double because of
conversions resulting into NaNs and rounding.
"
      end

      operation 4070658 "substring_afterF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "value" type class_ref 128130 // String
	  param inout name "substring" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function substring-after().
"
      end

      operation 4070786 "substring_beforeF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "value" type class_ref 128130 // String
	  param inout name "substring" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function substring-before().
"
      end

      operation 4070914 "translateF"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "value" type class_ref 128130 // String
	  param inout name "from" type class_ref 128130 // String
	  param inout name "to" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function translate().
"
      end

      operation 4071042 "normalize_spaceF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param in name "node" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function normalize-space().
"
      end

      operation 4071170 "normalize_spaceF"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function normalize-space(string).
"
      end

      operation 4071298 "generate_idF"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "node" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function generate-id().
"
      end

      operation 4071426 "getLocalName"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "utility function for calls to local-name().
"
      end

      operation 4071554 "unresolved_externalF"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "External functions that cannot be resolved are replaced with a call
to this method. This method will generate a runtime errors. A good
stylesheet checks whether the function exists using conditional
constructs, and never really tries to call it if it doesn't exist.
But simple stylesheets may result in a call to this method.
The compiler should generate a warning if it encounters a call to
an unresolved external function.
"
      end

      operation 4071682 "unallowed_extension_functionF"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to throw a runtime error on the use of an extension
function when the secure processing feature is set to true.
"
      end

      operation 4071810 "unallowed_extension_elementF"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to throw a runtime error on the use of an extension
element when the secure processing feature is set to true.
"
      end

      operation 4071938 "unsupported_ElementF"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "isExtension" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to throw a runtime error for an unsupported element.

This is only used in forward-compatibility mode, when the control flow
cannot be determined. In 1.0 mode, the error message is emitted at
compile time.
"
      end

      operation 4072066 "namespace_uriF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "iter" type class_ref 590082 // DTMAxisIterator
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function namespace-uri(node-set).
"
      end

      operation 4072194 "system_propertyF"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function system-property(name)
"
      end

      operation 4072322 "namespace_uriF"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param in name "node" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLT Standard function namespace-uri().
"
      end

      operation 4072450 "objectTypeF"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the object-type() extension function.

@see <a href=\"http://www.exslt.org/\">EXSLT</a>
"
      end

      operation 4072578 "nodesetF"
	class_operation public return_type class_ref 590082 // DTMAxisIterator
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the nodeset() extension function.
"
      end

      operation 4072706 "isWhiteSpace"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-- Begin utility functions"
      end

      operation 4072834 "compareStrings"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param inout name "lstring" type class_ref 128130 // String
	  param inout name "rstring" type class_ref 128130 // String
	  param in name "op" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4072962 "compare"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "left" type class_ref 590082 // DTMAxisIterator
	  param inout name "right" type class_ref 590082 // DTMAxisIterator
	  param in name "op" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: node-set/node-set compare.
"
      end

      operation 4073090 "compare"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param in name "node" explicit_type "int"
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	  param in name "op" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4073218 "compare"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "left" type class_ref 590082 // DTMAxisIterator
	  param in name "rnumber" explicit_type "double"
	  param in name "op" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: node-set/number compare.
"
      end

      operation 4073346 "compare"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "left" type class_ref 590082 // DTMAxisIterator
	  param in name "rstring" type class_ref 128130 // String
	  param in name "op" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: node-set/string comparison.
"
      end

      operation 4073474 "compare"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "left" type class_ref 129538 // Object
	  param inout name "right" type class_ref 129538 // Object
	  param in name "op" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4073602 "testLanguage"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "testLang" type class_ref 128130 // String
	  param inout name "dom" type class_ref 589954 // DOM
	  param in name "node" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to test context node's language
"
      end

      operation 4073730 "hasSimpleType"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4073858 "stringToReal"
	class_operation public explicit_return_type "double"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used in StringType to convert a string to a real.
"
      end

      operation 4073986 "stringToInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used in StringType to convert a string to an int.
"
      end

      attribute 875906 "DOUBLE_FRACTION_DIGITS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 340"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 876034 "lowerBounds"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0.001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 876162 "upperBounds"
	class_attribute const_attribute private explicit_type "double"
	init_value " 10000000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1736962 // defaultFormatter (<unidirectional association>)
	relation 1736962 --->
	  a role_name "defaultFormatter" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736962 // defaultFormatter (<unidirectional association>)
	  b parent class_ref 636546 // DecimalFormat
      end

      classrelation 1737090 // xpathFormatter (<unidirectional association>)
	relation 1737090 --->
	  a role_name "xpathFormatter" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737090 // xpathFormatter (<unidirectional association>)
	  b parent class_ref 636546 // DecimalFormat
      end

      classrelation 1737218 // defaultPattern (<unidirectional association>)
	relation 1737218 --->
	  a role_name "defaultPattern" init_value " \"\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737218 // defaultPattern (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      extra_member 141442 "initialization"
	
	cpp "" ""
	java "  static {
        NumberFormat f = NumberFormat.getInstance(Locale.getDefault());
        defaultFormatter = (f instanceof DecimalFormat) ?
            (DecimalFormat) f : new DecimalFormat();
        // Set max fraction digits so that truncation does not occur. Setting
        // the max to Integer.MAX_VALUE may cause problems with some JDK's.
        defaultFormatter.setMaximumFractionDigits(DOUBLE_FRACTION_DIGITS);
        defaultFormatter.setMinimumFractionDigits(0);
        defaultFormatter.setMinimumIntegerDigits(1);
        defaultFormatter.setGroupingUsed(false);

        // This formatter is used to convert numbers according to the XPath
        // 1.0 syntax which ignores locales (http://www.w3.org/TR/xpath#NT-Number)
        xpathFormatter = new DecimalFormat(\"\",
            new DecimalFormatSymbols(Locale.US));
        xpathFormatter.setMaximumFractionDigits(DOUBLE_FRACTION_DIGITS);
        xpathFormatter.setMinimumFractionDigits(0);
        xpathFormatter.setMinimumIntegerDigits(1);
        xpathFormatter.setGroupingUsed(false);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 4074114 "realToString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used in RealType to convert a real to a string.
Removes the decimal if null. Uses a specialized formatter object
for very large and very small numbers that ignores locales, thus
using always using \".\" as a decimal separator.
"
      end

      operation 4074242 "realToInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used in RealType to convert a real to an integer
"
      end

      classrelation 1737346 // _fieldPosition (<unidirectional association>)
	relation 1737346 --->
	  a role_name "_fieldPosition" init_value " new FieldPosition(0)" class_relation private
	    comment "
Utility function: used to format/adjust  a double to a string. The
DecimalFormat object comes from the 'formatSymbols' map in
AbstractTranslet.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737346 // _fieldPosition (<unidirectional association>)
	  b parent class_ref 637186 // FieldPosition
      end

      operation 4074370 "formatNumber"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param in name "number" explicit_type "double"
	  param inout name "pattern" type class_ref 128130 // String
	  param inout name "formatter" type class_ref 636546 // DecimalFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4074498 "referenceToNodeSet"
	class_operation public return_type class_ref 590082 // DTMAxisIterator
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to convert references to node-sets. If the
obj is an instanceof Node then create a singleton iterator.
"
      end

      operation 4074626 "referenceToNodeList"
	class_operation public return_type class_ref 333058 // NodeList
	nparams 2
	  param inout name "obj" type class_ref 129538 // Object
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to convert reference to org.w3c.dom.NodeList.
"
      end

      operation 4074754 "referenceToNode"
	class_operation public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "obj" type class_ref 129538 // Object
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to convert reference to org.w3c.dom.Node.
"
      end

      operation 4074882 "referenceToLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to convert reference to long.
"
      end

      operation 4075010 "referenceToDouble"
	class_operation public explicit_return_type "double"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to convert reference to double.
"
      end

      operation 4075138 "referenceToBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to convert reference to boolean.
"
      end

      operation 4075266 "referenceToString"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "obj" type class_ref 129538 // Object
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used to convert reference to String.
"
      end

      operation 4075394 "node2Iterator"
	class_operation public return_type class_ref 590082 // DTMAxisIterator
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "translet" type class_ref 590722 // Translet
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function used to convert a w3c Node into an internal DOM iterator.
"
      end

      operation 4075522 "nodeList2IteratorUsingHandleFromNode"
	class_operation private return_type class_ref 590082 // DTMAxisIterator
	nparams 3
	  param inout name "nodeList" type class_ref 333058 // NodeList
	  param inout name "translet" type class_ref 590722 // Translet
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In a perfect world, this would be the implementation for
nodeList2Iterator. In reality, though, this causes a
ClassCastException in getDTMHandleFromNode because SAXImpl is
not an instance of DOM2DTM. So we use the more lengthy
implementation below until this issue has been addressed.

@see org.apache.xml.dtm.ref.DTMManagerDefault#getDTMHandleFromNode
"
      end

      operation 4075650 "nodeList2Iterator"
	class_operation public return_type class_ref 590082 // DTMAxisIterator
	nparams 3
	  param inout name "nodeList" type class_ref 333058 // NodeList
	  param inout name "translet" type class_ref 590722 // Translet
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function used to convert a w3c NodeList into a internal
DOM iterator.
"
      end

      operation 4075778 "referenceToResultTree"
	class_operation public return_type class_ref 589954 // DOM
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function used to convert references to DOMs.
"
      end

      operation 4075906 "getSingleNode"
	class_operation public return_type class_ref 590082 // DTMAxisIterator
	nparams 1
	  param inout name "iterator" type class_ref 590082 // DTMAxisIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function: used with nth position filters to convert a sequence
of nodes to just one single node (the one at position n).
"
      end

      attribute 876290 "_characterArray"
	class_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " new char[32]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Utility function: used in xsl:copy.

"
      end

      operation 4076034 "copy"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "obj" type class_ref 129538 // Object
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	  param in name "node" explicit_type "int"
	  param inout name "dom" type class_ref 589954 // DOM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4076162 "checkAttribQName"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to check if xsl:attribute has a valid qname
This method should only be invoked if the name attribute is an AVT
"
      end

      operation 4076290 "checkNCName"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to check if a name is a valid ncname
This method should only be invoked if the attribute value is an AVT
"
      end

      operation 4076418 "checkQName"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to check if a name is a valid qname
This method should only be invoked if the attribute value is an AVT
"
      end

      operation 4076546 "startXslElement"
	class_operation public return_type class_ref 128130 // String
	nparams 5
	  param inout name "qname" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	  param inout name "handler" type class_ref 590210 // SerializationHandler
	  param inout name "dom" type class_ref 589954 // DOM
	  param in name "node" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function for the implementation of xsl:element.
"
      end

      operation 4076674 "getPrefix"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used in the execution of xsl:element
"
      end

      operation 4076802 "generatePrefix"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "These functions are used in the execution of xsl:element to generate
and reset namespace prefix index local to current transformation process
"
      end

      operation 4076930 "resetPrefixIndex"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1737474 // threadLocalPrefixIndex (<unidirectional association>)
	relation 1737474 --->
	  a role_name "threadLocalPrefixIndex" init_value "
        new ThreadLocal<AtomicInteger>() {
            @Override
            protected AtomicInteger initialValue() {
                return new AtomicInteger();
            }
        }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AtomicInteger> ${name}${value};
"
	    classrelation_ref 1737474 // threadLocalPrefixIndex (<unidirectional association>)
	  b parent class_ref 129282 // ThreadLocal
      end

      classrelation 1737602 // RUN_TIME_INTERNAL_ERR (<unidirectional association>)
	relation 1737602 --->
	  a role_name "RUN_TIME_INTERNAL_ERR" init_value "
                                           \"RUN_TIME_INTERNAL_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737602 // RUN_TIME_INTERNAL_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1737730 // RUN_TIME_COPY_ERR (<unidirectional association>)
	relation 1737730 --->
	  a role_name "RUN_TIME_COPY_ERR" init_value "
                                           \"RUN_TIME_COPY_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737730 // RUN_TIME_COPY_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1737858 // DATA_CONVERSION_ERR (<unidirectional association>)
	relation 1737858 --->
	  a role_name "DATA_CONVERSION_ERR" init_value "
                                           \"DATA_CONVERSION_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737858 // DATA_CONVERSION_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1737986 // EXTERNAL_FUNC_ERR (<unidirectional association>)
	relation 1737986 --->
	  a role_name "EXTERNAL_FUNC_ERR" init_value "
                                           \"EXTERNAL_FUNC_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737986 // EXTERNAL_FUNC_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1738114 // EQUALITY_EXPR_ERR (<unidirectional association>)
	relation 1738114 --->
	  a role_name "EQUALITY_EXPR_ERR" init_value "
                                           \"EQUALITY_EXPR_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1738114 // EQUALITY_EXPR_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1738242 // INVALID_ARGUMENT_ERR (<unidirectional association>)
	relation 1738242 --->
	  a role_name "INVALID_ARGUMENT_ERR" init_value "
                                           \"INVALID_ARGUMENT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1738242 // INVALID_ARGUMENT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1738370 // FORMAT_NUMBER_ERR (<unidirectional association>)
	relation 1738370 --->
	  a role_name "FORMAT_NUMBER_ERR" init_value "
                                           \"FORMAT_NUMBER_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1738370 // FORMAT_NUMBER_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1738498 // ITERATOR_CLONE_ERR (<unidirectional association>)
	relation 1738498 --->
	  a role_name "ITERATOR_CLONE_ERR" init_value "
                                           \"ITERATOR_CLONE_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1738498 // ITERATOR_CLONE_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1738626 // AXIS_SUPPORT_ERR (<unidirectional association>)
	relation 1738626 --->
	  a role_name "AXIS_SUPPORT_ERR" init_value "
                                           \"AXIS_SUPPORT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1738626 // AXIS_SUPPORT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1738754 // TYPED_AXIS_SUPPORT_ERR (<unidirectional association>)
	relation 1738754 --->
	  a role_name "TYPED_AXIS_SUPPORT_ERR" init_value "
                                           \"TYPED_AXIS_SUPPORT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1738754 // TYPED_AXIS_SUPPORT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1738882 // STRAY_ATTRIBUTE_ERR (<unidirectional association>)
	relation 1738882 --->
	  a role_name "STRAY_ATTRIBUTE_ERR" init_value "
                                           \"STRAY_ATTRIBUTE_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1738882 // STRAY_ATTRIBUTE_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739010 // STRAY_NAMESPACE_ERR (<unidirectional association>)
	relation 1739010 --->
	  a role_name "STRAY_NAMESPACE_ERR" init_value "
                                           \"STRAY_NAMESPACE_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739010 // STRAY_NAMESPACE_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739138 // NAMESPACE_PREFIX_ERR (<unidirectional association>)
	relation 1739138 --->
	  a role_name "NAMESPACE_PREFIX_ERR" init_value "
                                           \"NAMESPACE_PREFIX_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739138 // NAMESPACE_PREFIX_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739266 // DOM_ADAPTER_INIT_ERR (<unidirectional association>)
	relation 1739266 --->
	  a role_name "DOM_ADAPTER_INIT_ERR" init_value "
                                           \"DOM_ADAPTER_INIT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739266 // DOM_ADAPTER_INIT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739394 // PARSER_DTD_SUPPORT_ERR (<unidirectional association>)
	relation 1739394 --->
	  a role_name "PARSER_DTD_SUPPORT_ERR" init_value "
                                           \"PARSER_DTD_SUPPORT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739394 // PARSER_DTD_SUPPORT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739522 // NAMESPACES_SUPPORT_ERR (<unidirectional association>)
	relation 1739522 --->
	  a role_name "NAMESPACES_SUPPORT_ERR" init_value "
                                           \"NAMESPACES_SUPPORT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739522 // NAMESPACES_SUPPORT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739650 // CANT_RESOLVE_RELATIVE_URI_ERR (<unidirectional association>)
	relation 1739650 --->
	  a role_name "CANT_RESOLVE_RELATIVE_URI_ERR" init_value "
                                           \"CANT_RESOLVE_RELATIVE_URI_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739650 // CANT_RESOLVE_RELATIVE_URI_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739778 // UNSUPPORTED_XSL_ERR (<unidirectional association>)
	relation 1739778 --->
	  a role_name "UNSUPPORTED_XSL_ERR" init_value "
                                           \"UNSUPPORTED_XSL_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739778 // UNSUPPORTED_XSL_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1739906 // UNSUPPORTED_EXT_ERR (<unidirectional association>)
	relation 1739906 --->
	  a role_name "UNSUPPORTED_EXT_ERR" init_value "
                                           \"UNSUPPORTED_EXT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1739906 // UNSUPPORTED_EXT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1740034 // UNKNOWN_TRANSLET_VERSION_ERR (<unidirectional association>)
	relation 1740034 --->
	  a role_name "UNKNOWN_TRANSLET_VERSION_ERR" init_value "
                                           \"UNKNOWN_TRANSLET_VERSION_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740034 // UNKNOWN_TRANSLET_VERSION_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1740162 // INVALID_QNAME_ERR (<unidirectional association>)
	relation 1740162 --->
	  a role_name "INVALID_QNAME_ERR" init_value " \"INVALID_QNAME_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740162 // INVALID_QNAME_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1740290 // INVALID_NCNAME_ERR (<unidirectional association>)
	relation 1740290 --->
	  a role_name "INVALID_NCNAME_ERR" init_value " \"INVALID_NCNAME_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740290 // INVALID_NCNAME_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1740418 // UNALLOWED_EXTENSION_FUNCTION_ERR (<unidirectional association>)
	relation 1740418 --->
	  a role_name "UNALLOWED_EXTENSION_FUNCTION_ERR" init_value " \"UNALLOWED_EXTENSION_FUNCTION_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740418 // UNALLOWED_EXTENSION_FUNCTION_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1740546 // UNALLOWED_EXTENSION_ELEMENT_ERR (<unidirectional association>)
	relation 1740546 --->
	  a role_name "UNALLOWED_EXTENSION_ELEMENT_ERR" init_value " \"UNALLOWED_EXTENSION_ELEMENT_ERR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740546 // UNALLOWED_EXTENSION_ELEMENT_ERR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1740674 // m_bundle (<unidirectional association>)
	relation 1740674 --->
	  a role_name "m_bundle" class_relation private
	    comment " All error messages are localized and are stored in resource bundles.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740674 // m_bundle (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      classrelation 1740802 // ERROR_MESSAGES_KEY (<unidirectional association>)
	relation 1740802 --->
	  a role_name "ERROR_MESSAGES_KEY" init_value " \"error-messages\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740802 // ERROR_MESSAGES_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      extra_member 141570 "initialization"
	
	cpp "" ""
	java "  static {
        String resource = \"com.sun.org.apache.xalan.internal.xsltc.runtime.ErrorMessages\";
        m_bundle = SecuritySupport.getResourceBundle(resource);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 4077058 "runTimeError"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "code" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print a run-time error message.
"
      end

      operation 4077186 "runTimeError"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "code" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4077314 "runTimeError"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "code" type class_ref 128130 // String
	  param inout name "arg0" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4077442 "runTimeError"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "code" type class_ref 128130 // String
	  param inout name "arg0" type class_ref 129538 // Object
	  param inout name "arg1" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4077570 "consoleOutput"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4077698 "replace"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "base" type class_ref 128130 // String
	  param in name "ch" explicit_type "char"
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace a certain character in a string with a new substring.
"
      end

      operation 4077826 "replace"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "base" type class_ref 128130 // String
	  param inout name "delim" type class_ref 128130 // String
	  param inout name "str" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4077954 "mapQNameToJavaName"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "base" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method to allow setting parameters of the form
{namespaceuri}localName
which get mapped to an instance variable in the class
Hence  a parameter of the form \"{http://foo.bar}xyz\"
will be replaced with the corresponding values
by the BasisLibrary's utility method mapQNametoJavaName
and thus get mapped to legal java variable names
"
      end

      operation 4078082 "getStringLength"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method to calculate string-length as a number of code points,
 to avoid possible errors with string that contains
 complementary characters
"
      end
    end

    class 637314 "Constants"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines constants used by both the compiler and the
runtime system.
@author Jacek Ambroziak
@author Santiago Pericas-Geertsen
"
      attribute 876418 "ANY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 876546 "ATTRIBUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 876674 "ROOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " DTM.ROOT_NODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 876802 "TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " DTM.TEXT_NODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 876930 "ELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " DTM.ELEMENT_NODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 877058 "COMMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " DTM.COMMENT_NODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 877186 "PROCESSING_INSTRUCTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " DTM.PROCESSING_INSTRUCTION_NODE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1740930 // XSLT_URI (<unidirectional association>)
	relation 1740930 --->
	  a role_name "XSLT_URI" init_value " \"http://www.w3.org/1999/XSL/Transform\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1740930 // XSLT_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1741058 // NAMESPACE_FEATURE (<unidirectional association>)
	relation 1741058 --->
	  a role_name "NAMESPACE_FEATURE" init_value "
        \"http://xml.org/sax/features/namespaces\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1741058 // NAMESPACE_FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1741186 // EMPTYSTRING (<unidirectional association>)
	relation 1741186 --->
	  a role_name "EMPTYSTRING" init_value " \"\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1741186 // EMPTYSTRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1741314 // XML_PREFIX (<unidirectional association>)
	relation 1741314 --->
	  a role_name "XML_PREFIX" init_value " \"xml\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1741314 // XML_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1741442 // XMLNS_PREFIX (<unidirectional association>)
	relation 1741442 --->
	  a role_name "XMLNS_PREFIX" init_value " \"xmlns\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1741442 // XMLNS_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1741570 // XMLNS_STRING (<unidirectional association>)
	relation 1741570 --->
	  a role_name "XMLNS_STRING" init_value " \"xmlns:\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1741570 // XMLNS_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1741698 // XMLNS_URI (<unidirectional association>)
	relation 1741698 --->
	  a role_name "XMLNS_URI" init_value " \"http://www.w3.org/2000/xmlns/\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1741698 // XMLNS_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 637442 "ErrorMessages"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1741826 // <generalisation>
	relation 1741826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741826 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4078210 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 637570 "ErrorMessages_ca"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1741954 // <generalisation>
	relation 1741954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741954 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4078338 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.


 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 637698 "ErrorMessages_cs"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742082 // <generalisation>
	relation 1742082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742082 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4078466 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.


 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 637826 "ErrorMessages_de"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742210 // <generalisation>
	relation 1742210 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742210 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4078594 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 637954 "ErrorMessages_es"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742338 // <generalisation>
	relation 1742338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742338 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4078722 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638082 "ErrorMessages_fr"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742466 // <generalisation>
	relation 1742466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742466 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4078850 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638210 "ErrorMessages_it"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742594 // <generalisation>
	relation 1742594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742594 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4078978 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638338 "ErrorMessages_ja"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742722 // <generalisation>
	relation 1742722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742722 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4079106 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638466 "ErrorMessages_ko"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742850 // <generalisation>
	relation 1742850 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742850 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4079234 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638594 "ErrorMessages_pt_BR"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1742978 // <generalisation>
	relation 1742978 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742978 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4079362 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638722 "ErrorMessages_sk"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1743106 // <generalisation>
	relation 1743106 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1743106 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4079490 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.


 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638850 "ErrorMessages_sv"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1743234 // <generalisation>
	relation 1743234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1743234 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4079618 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 638978 "ErrorMessages_zh_CN"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1743362 // <generalisation>
	relation 1743362 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1743362 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4079746 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 639106 "ErrorMessages_zh_TW"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Morten Jorgensen
"
      classrelation 1743490 // <generalisation>
	relation 1743490 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1743490 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 4079874 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "XSLTC run-time error messages.

General notes to translators and definitions:

  1) XSLTC is the name of the product.  It is an acronym for XML Stylesheet:
     Transformations Compiler

  2) A stylesheet is a description of how to transform an input XML document
     into a resultant output XML document (or HTML document or text)

  3) An axis is a particular \"dimension\" in a tree representation of an XML
     document; the nodes in the tree are divided along different axes.
     Traversing the \"child\" axis, for instance, means that the program
     would visit each child of a particular node; traversing the \"descendant\"
     axis means that the program would visit the child nodes of a particular
     node, their children, and so on until the leaf nodes of the tree are
     reached.

  4) An iterator is an object that traverses nodes in a tree along a
     particular axis, one at a time.

  5) An element is a mark-up tag in an XML document; an attribute is a
     modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
     \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
     the values \"val\" and \"val2\", respectively.

  6) A namespace declaration is a special attribute that is used to associate
     a prefix with a URI (the namespace).  The meanings of element names and
     attribute names that use that prefix are defined with respect to that
     namespace.

  7) DOM is an acronym for Document Object Model.  It is a tree
     representation of an XML document.

     SAX is an acronym for the Simple API for XML processing.  It is an API
     used inform an XML processor (in this case XSLTC) of the structure and
     content of an XML document.

     Input to the stylesheet processor can come from an XML parser in the
     form of a DOM tree or through the SAX API.

  8) DTD is a document type declaration.  It is a way of specifying the
     grammar for an XML file, the names and types of elements, attributes,
     etc.

  9) Translet is an invented term that refers to the class file that contains
     the compiled form of a stylesheet.

 These message should be read from a locale-specific resource bundle
 Get the lookup table for error messages.

@return The message lookup table.
"
      end
    end

    class 639234 "InternalRuntimeError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to express failed assertions and similar for the xsltc runtime.
As java.lang.AssertionError was introduced in JDK 1.4 we can't use that yet.
"
      classrelation 1743618 // <generalisation>
	relation 1743618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1743618 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      operation 4080002 "InternalRuntimeError"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 639362 "Node"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used as \"wrapper\" for dom nodes. Wrappers are needed when
a node is passed as a parameter to a template.
@author Jacek Ambroziak
@author Santiago Pericas-Geertsen
"
      attribute 877314 "node"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 877442 "type"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4080258 "Node"
	public explicit_return_type ""
	nparams 2
	  param in name "n" explicit_type "int"
	  param in name "t" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 639490 "Operators"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Jacek Ambroziak
@author Santiago Pericas-Geertsen
"
      attribute 877570 "EQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 877698 "NE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 877826 "GT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 877954 "LT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 878082 "GE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 878210 "LE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1743746 // names (<unidirectional association>)
	relation 1743746 --->
	  a role_name "names" multiplicity "[]" init_value " {
    \"=\", \"!=\", \">\", \"<\", \">=\", \"<=\"
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1743746 // names (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4080386 "getOpNames"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "operator" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 878338 "swapOpArray"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
        EQ,     // EQ
        NE,     // NE
        LT,     // GT
        GT,     // LT
        LE,     // GE
        GE      // LE
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "  Swap operator array
"
      end

      operation 4080514 "swapOp"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "operator" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 639618 "Parameter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author Jacek Ambroziak
@author Santiago Pericas-Geertsen
@author Morten Jorgensen
"
      classrelation 1743874 // _name (<unidirectional association>)
	relation 1743874 --->
	  a role_name "_name" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1743874 // _name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1744002 // _value (<unidirectional association>)
	relation 1744002 --->
	  a role_name "_value" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1744002 // _value (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 878466 "_isDefault"
	public explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4080642 "Parameter"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4080770 "Parameter"
	public explicit_return_type ""
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "isDefault" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 152578 "runtime"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 437890 "AbstractTranslet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.XalanConstants;
import com.sun.org.apache.xalan.internal.utils.FactoryImpl;
import com.sun.org.apache.xalan.internal.xsltc.DOM;
import com.sun.org.apache.xalan.internal.xsltc.DOMCache;
import com.sun.org.apache.xalan.internal.xsltc.DOMEnhancedForDTM;
import com.sun.org.apache.xalan.internal.xsltc.Translet;
import com.sun.org.apache.xalan.internal.xsltc.TransletException;
import com.sun.org.apache.xalan.internal.xsltc.dom.DOMAdapter;
import com.sun.org.apache.xalan.internal.xsltc.dom.KeyIndex;
import com.sun.org.apache.xalan.internal.xsltc.runtime.output.TransletOutputHandlerFactory;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xml.internal.serializer.SerializationHandler;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Templates;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
${definition}"
      associated_elems
	class_ref 621442 // AbstractTranslet
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


/*
$Id: AbstractTranslet.java,v 1.6 2006/06/19 19:49:03 spericas Exp $
"
    end

    artifact 438146 "Attributes"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.xsltc.DOM;
import org.xml.sax.AttributeList;
${definition}"
      associated_elems
	class_ref 636802 // Attributes
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Attributes.java,v 1.2.4.1 2005/09/06 10:53:04 pvedula Exp $
"
    end

    artifact 438274 "BasisLibrary"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import com.sun.org.apache.xalan.internal.xsltc.DOM;
import com.sun.org.apache.xalan.internal.xsltc.Translet;
import com.sun.org.apache.xalan.internal.xsltc.dom.AbsoluteIterator;
import com.sun.org.apache.xalan.internal.xsltc.dom.ArrayNodeListIterator;
import com.sun.org.apache.xalan.internal.xsltc.dom.DOMAdapter;
import com.sun.org.apache.xalan.internal.xsltc.dom.MultiDOM;
import com.sun.org.apache.xalan.internal.xsltc.dom.SingletonIterator;
import com.sun.org.apache.xalan.internal.xsltc.dom.StepIterator;
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xml.internal.dtm.ref.DTMDefaultBase;
import com.sun.org.apache.xml.internal.dtm.ref.DTMNodeProxy;
import com.sun.org.apache.xml.internal.serializer.NamespaceMappings;
import com.sun.org.apache.xml.internal.serializer.SerializationHandler;
import com.sun.org.apache.xml.internal.utils.XML11Char;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.FieldPosition;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.concurrent.atomic.AtomicInteger;
import javax.xml.transform.dom.DOMSource;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
${definition}"
      associated_elems
	class_ref 637058 // BasisLibrary
      end
      comment "Copyright (c) 2007, 2016, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: BasisLibrary.java,v 1.6 2006/06/20 21:51:58 spericas Exp $
"
    end

    artifact 438402 "Constants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.dtm.DTM;
${definition}"
      associated_elems
	class_ref 637314 // Constants
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Constants.java,v 1.2.4.1 2005/09/06 11:01:29 pvedula Exp $
"
    end

    artifact 438530 "ErrorMessages"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 637442 // ErrorMessages
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 438658 "ErrorMessages_ca"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 637570 // ErrorMessages_ca
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ErrorMessages_ca.java,v 1.1.6.1 2005/09/06 10:45:37 pvedula Exp $
"
    end

    artifact 438786 "ErrorMessages_cs"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 637698 // ErrorMessages_cs
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ErrorMessages_cs.java,v 1.1.6.1 2005/09/06 10:45:37 pvedula Exp $
"
    end

    artifact 438914 "ErrorMessages_de"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 637826 // ErrorMessages_de
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 439042 "ErrorMessages_es"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 637954 // ErrorMessages_es
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 439170 "ErrorMessages_fr"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638082 // ErrorMessages_fr
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 439298 "ErrorMessages_it"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638210 // ErrorMessages_it
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 439426 "ErrorMessages_ja"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638338 // ErrorMessages_ja
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 439554 "ErrorMessages_ko"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638466 // ErrorMessages_ko
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 439682 "ErrorMessages_pt_BR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638594 // ErrorMessages_pt_BR
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 439810 "ErrorMessages_sk"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638722 // ErrorMessages_sk
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ErrorMessages_sk.java,v 1.1.6.1 2005/09/06 10:45:39 pvedula Exp $
"
    end

    artifact 439938 "ErrorMessages_sv"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638850 // ErrorMessages_sv
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 440066 "ErrorMessages_zh_CN"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 638978 // ErrorMessages_zh_CN
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 440194 "ErrorMessages_zh_TW"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 639106 // ErrorMessages_zh_TW
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 440322 "InternalRuntimeError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 639234 // InternalRuntimeError
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: InternalRuntimeError.java,v 1.0 2009-11-25 04:34:28 joehw Exp $
"
    end

    artifact 440450 "MessageHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 636290 // MessageHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: MessageHandler.java,v 1.2.4.1 2005/09/06 11:06:49 pvedula Exp $
"
    end

    artifact 440578 "Node"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 639362 // Node
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Node.java,v 1.2.4.1 2005/09/06 11:10:29 pvedula Exp $
"
    end

    artifact 440706 "Operators"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 639490 // Operators
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Operators.java,v 1.2.4.1 2005/09/12 12:02:15 pvedula Exp $
"
    end

    artifact 440834 "Parameter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 639618 // Parameter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Parameter.java,v 1.2.4.1 2005/09/06 11:21:58 pvedula Exp $
"
    end

    artifact 440962 "StringValueHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.SAXException;
import com.sun.org.apache.xml.internal.serializer.EmptySerializer;
${definition}"
      associated_elems
	class_ref 636162 // StringValueHandler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringValueHandler.java,v 1.2.4.1 2005/09/06 11:33:25 pvedula Exp $
"
    end
  end

  package_ref 165890 // output
end
